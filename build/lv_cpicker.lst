ARM GAS  D:\Temp\ccfvNLhk.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_cpicker.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_cpicker_get_style,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	lv_cpicker_get_style:
  26              	.LVL0:
  27              	.LFB483:
  28              		.file 1 "lvgl/src/lv_widgets/lv_cpicker.c"
   1:lvgl/src/lv_widgets/lv_cpicker.c **** /**
   2:lvgl/src/lv_widgets/lv_cpicker.c ****  * @file lv_cpicker.c
   3:lvgl/src/lv_widgets/lv_cpicker.c ****  *
   4:lvgl/src/lv_widgets/lv_cpicker.c ****  * From @AloyseTech and @paulpv.
   5:lvgl/src/lv_widgets/lv_cpicker.c ****  */
   6:lvgl/src/lv_widgets/lv_cpicker.c **** 
   7:lvgl/src/lv_widgets/lv_cpicker.c **** /*********************
   8:lvgl/src/lv_widgets/lv_cpicker.c ****  *      INCLUDES
   9:lvgl/src/lv_widgets/lv_cpicker.c ****  *********************/
  10:lvgl/src/lv_widgets/lv_cpicker.c **** #include "lv_cpicker.h"
  11:lvgl/src/lv_widgets/lv_cpicker.c **** #if LV_USE_CPICKER != 0
  12:lvgl/src/lv_widgets/lv_cpicker.c **** 
  13:lvgl/src/lv_widgets/lv_cpicker.c **** #include "../lv_misc/lv_debug.h"
  14:lvgl/src/lv_widgets/lv_cpicker.c **** #include "../lv_draw/lv_draw_arc.h"
  15:lvgl/src/lv_widgets/lv_cpicker.c **** #include "../lv_themes/lv_theme.h"
  16:lvgl/src/lv_widgets/lv_cpicker.c **** #include "../lv_core/lv_indev.h"
  17:lvgl/src/lv_widgets/lv_cpicker.c **** #include "../lv_core/lv_refr.h"
  18:lvgl/src/lv_widgets/lv_cpicker.c **** #include "../lv_misc/lv_math.h"
  19:lvgl/src/lv_widgets/lv_cpicker.c **** 
  20:lvgl/src/lv_widgets/lv_cpicker.c **** /*********************
  21:lvgl/src/lv_widgets/lv_cpicker.c ****  *      DEFINES
  22:lvgl/src/lv_widgets/lv_cpicker.c ****  *********************/
  23:lvgl/src/lv_widgets/lv_cpicker.c **** #define LV_OBJX_NAME "lv_cpicker"
  24:lvgl/src/lv_widgets/lv_cpicker.c **** 
  25:lvgl/src/lv_widgets/lv_cpicker.c **** #ifndef LV_CPICKER_DEF_TYPE
  26:lvgl/src/lv_widgets/lv_cpicker.c ****     #define LV_CPICKER_DEF_TYPE LV_CPICKER_TYPE_DISC
  27:lvgl/src/lv_widgets/lv_cpicker.c **** #endif
  28:lvgl/src/lv_widgets/lv_cpicker.c **** 
  29:lvgl/src/lv_widgets/lv_cpicker.c **** #ifndef LV_CPICKER_DEF_HUE
  30:lvgl/src/lv_widgets/lv_cpicker.c ****     #define LV_CPICKER_DEF_HUE 0
ARM GAS  D:\Temp\ccfvNLhk.s 			page 2


  31:lvgl/src/lv_widgets/lv_cpicker.c **** #endif
  32:lvgl/src/lv_widgets/lv_cpicker.c **** 
  33:lvgl/src/lv_widgets/lv_cpicker.c **** #ifndef LV_CPICKER_DEF_SATURATION
  34:lvgl/src/lv_widgets/lv_cpicker.c ****     #define LV_CPICKER_DEF_SATURATION 100
  35:lvgl/src/lv_widgets/lv_cpicker.c **** #endif
  36:lvgl/src/lv_widgets/lv_cpicker.c **** 
  37:lvgl/src/lv_widgets/lv_cpicker.c **** #ifndef LV_CPICKER_DEF_VALUE
  38:lvgl/src/lv_widgets/lv_cpicker.c ****     #define LV_CPICKER_DEF_VALUE 100
  39:lvgl/src/lv_widgets/lv_cpicker.c **** #endif
  40:lvgl/src/lv_widgets/lv_cpicker.c **** 
  41:lvgl/src/lv_widgets/lv_cpicker.c **** #ifndef LV_CPICKER_DEF_HSV
  42:lvgl/src/lv_widgets/lv_cpicker.c ****     #define LV_CPICKER_DEF_HSV ((lv_color_hsv_t){LV_CPICKER_DEF_HUE, LV_CPICKER_DEF_SATURATION, LV_
  43:lvgl/src/lv_widgets/lv_cpicker.c **** #endif
  44:lvgl/src/lv_widgets/lv_cpicker.c **** 
  45:lvgl/src/lv_widgets/lv_cpicker.c **** #ifndef LV_CPICKER_DEF_QF /*quantization factor*/
  46:lvgl/src/lv_widgets/lv_cpicker.c ****     #define LV_CPICKER_DEF_QF 3
  47:lvgl/src/lv_widgets/lv_cpicker.c **** #endif
  48:lvgl/src/lv_widgets/lv_cpicker.c **** 
  49:lvgl/src/lv_widgets/lv_cpicker.c **** #define TRI_OFFSET 2
  50:lvgl/src/lv_widgets/lv_cpicker.c **** 
  51:lvgl/src/lv_widgets/lv_cpicker.c **** /* The OUTER_MASK_WIDTH define is required to assist with the placing of a mask over the outer ring
  52:lvgl/src/lv_widgets/lv_cpicker.c ****  * multiColored radial lines are calculated for the outer ring of the widget their lengths are jitt
  53:lvgl/src/lv_widgets/lv_cpicker.c ****  * integer based arithmetic. From tests the maximum delta was found to be 2 so the current value is
  54:lvgl/src/lv_widgets/lv_cpicker.c ****  * appropriate masking.
  55:lvgl/src/lv_widgets/lv_cpicker.c ****  */
  56:lvgl/src/lv_widgets/lv_cpicker.c **** #define OUTER_MASK_WIDTH 3
  57:lvgl/src/lv_widgets/lv_cpicker.c **** 
  58:lvgl/src/lv_widgets/lv_cpicker.c **** /**********************
  59:lvgl/src/lv_widgets/lv_cpicker.c ****  *      TYPEDEFS
  60:lvgl/src/lv_widgets/lv_cpicker.c ****  **********************/
  61:lvgl/src/lv_widgets/lv_cpicker.c **** 
  62:lvgl/src/lv_widgets/lv_cpicker.c **** /**********************
  63:lvgl/src/lv_widgets/lv_cpicker.c ****  *  STATIC PROTOTYPES
  64:lvgl/src/lv_widgets/lv_cpicker.c ****  **********************/
  65:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_design_res_t lv_cpicker_design(lv_obj_t * cpicker, const lv_area_t * clip_area, lv_design
  66:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_res_t lv_cpicker_signal(lv_obj_t * cpicker, lv_signal_t sign, void * param);
  67:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_style_list_t * lv_cpicker_get_style(lv_obj_t * cpicker, uint8_t part);
  68:lvgl/src/lv_widgets/lv_cpicker.c **** static bool lv_cpicker_hit(lv_obj_t * cpicker, const lv_point_t * p);
  69:lvgl/src/lv_widgets/lv_cpicker.c **** 
  70:lvgl/src/lv_widgets/lv_cpicker.c **** static void draw_rect_grad(lv_obj_t * cpicker, const lv_area_t * mask);
  71:lvgl/src/lv_widgets/lv_cpicker.c **** static void draw_disc_grad(lv_obj_t * cpicker, const lv_area_t * mask);
  72:lvgl/src/lv_widgets/lv_cpicker.c **** static void draw_knob(lv_obj_t * cpicker, const lv_area_t * mask);
  73:lvgl/src/lv_widgets/lv_cpicker.c **** static void invalidate_knob(lv_obj_t * cpicker);
  74:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_area_t get_knob_area(lv_obj_t * cpicker);
  75:lvgl/src/lv_widgets/lv_cpicker.c **** 
  76:lvgl/src/lv_widgets/lv_cpicker.c **** static void next_color_mode(lv_obj_t * cpicker);
  77:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_res_t double_click_reset(lv_obj_t * cpicker);
  78:lvgl/src/lv_widgets/lv_cpicker.c **** static void refr_knob_pos(lv_obj_t * cpicker);
  79:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_color_t angle_to_mode_color(lv_obj_t * cpicker, uint16_t angle);
  80:lvgl/src/lv_widgets/lv_cpicker.c **** static uint16_t get_angle(lv_obj_t * cpicker);
  81:lvgl/src/lv_widgets/lv_cpicker.c **** 
  82:lvgl/src/lv_widgets/lv_cpicker.c **** /**********************
  83:lvgl/src/lv_widgets/lv_cpicker.c ****  *  STATIC VARIABLES
  84:lvgl/src/lv_widgets/lv_cpicker.c ****  **********************/
  85:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_signal_cb_t ancestor_signal;
  86:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_design_cb_t ancestor_design;
  87:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 3


  88:lvgl/src/lv_widgets/lv_cpicker.c **** /**********************
  89:lvgl/src/lv_widgets/lv_cpicker.c ****  *      MACROS
  90:lvgl/src/lv_widgets/lv_cpicker.c ****  **********************/
  91:lvgl/src/lv_widgets/lv_cpicker.c **** 
  92:lvgl/src/lv_widgets/lv_cpicker.c **** /**********************
  93:lvgl/src/lv_widgets/lv_cpicker.c ****  *   GLOBAL FUNCTIONS
  94:lvgl/src/lv_widgets/lv_cpicker.c ****  **********************/
  95:lvgl/src/lv_widgets/lv_cpicker.c **** 
  96:lvgl/src/lv_widgets/lv_cpicker.c **** /**
  97:lvgl/src/lv_widgets/lv_cpicker.c ****  * Create a color_picker object
  98:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param par pointer to an object, it will be the parent of the new color_picker
  99:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param copy pointer to a color_picker object, if not NULL then the new object will be copied fro
 100:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return pointer to the created color_picker
 101:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 102:lvgl/src/lv_widgets/lv_cpicker.c **** lv_obj_t * lv_cpicker_create(lv_obj_t * par, const lv_obj_t * copy)
 103:lvgl/src/lv_widgets/lv_cpicker.c **** {
 104:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_LOG_TRACE("color_picker create started");
 105:lvgl/src/lv_widgets/lv_cpicker.c **** 
 106:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_t * cpicker = lv_obj_create(par, copy);
 107:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_MEM(cpicker);
 108:lvgl/src/lv_widgets/lv_cpicker.c ****     if(cpicker == NULL) return NULL;
 109:lvgl/src/lv_widgets/lv_cpicker.c **** 
 110:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(cpicker);
 111:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(cpicker);
 112:lvgl/src/lv_widgets/lv_cpicker.c **** 
 113:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Allocate the extended data*/
 114:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_allocate_ext_attr(cpicker, sizeof(lv_cpicker_ext_t));
 115:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_MEM(ext);
 116:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext == NULL) {
 117:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_del(cpicker);
 118:lvgl/src/lv_widgets/lv_cpicker.c ****         return NULL;
 119:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 120:lvgl/src/lv_widgets/lv_cpicker.c **** 
 121:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Initialize the allocated 'ext' */
 122:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->type = LV_CPICKER_DEF_TYPE;
 123:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->hsv = LV_CPICKER_DEF_HSV;
 124:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->knob.colored = 1;
 125:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->color_mode = LV_CPICKER_COLOR_MODE_HUE;
 126:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->color_mode_fixed = 0;
 127:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->last_click_time = 0;
 128:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->last_change_time = 0;
 129:lvgl/src/lv_widgets/lv_cpicker.c **** 
 130:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_style_list_init(&ext->knob.style_list);
 131:lvgl/src/lv_widgets/lv_cpicker.c **** 
 132:lvgl/src/lv_widgets/lv_cpicker.c ****     /*The signal and design functions are not copied so set them here*/
 133:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_set_signal_cb(cpicker, lv_cpicker_signal);
 134:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_set_design_cb(cpicker, lv_cpicker_design);
 135:lvgl/src/lv_widgets/lv_cpicker.c **** 
 136:lvgl/src/lv_widgets/lv_cpicker.c ****     /*If no copy do the basic initialization*/
 137:lvgl/src/lv_widgets/lv_cpicker.c ****     if(copy == NULL) {
 138:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_set_size(cpicker, LV_DPI * 2, LV_DPI * 2);
 139:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_add_protect(cpicker, LV_PROTECT_PRESS_LOST);
 140:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_set_adv_hittest(cpicker, true);
 141:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_theme_apply(cpicker, LV_THEME_CPICKER);
 142:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 143:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Copy 'copy'*/
 144:lvgl/src/lv_widgets/lv_cpicker.c ****     else {
ARM GAS  D:\Temp\ccfvNLhk.s 			page 4


 145:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_cpicker_ext_t * copy_ext = lv_obj_get_ext_attr(copy);
 146:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->type = copy_ext->type;
 147:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->color_mode = copy_ext->color_mode;
 148:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->color_mode_fixed = copy_ext->color_mode_fixed;
 149:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->hsv = copy_ext->hsv;
 150:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.colored = copy_ext->knob.colored;
 151:lvgl/src/lv_widgets/lv_cpicker.c **** 
 152:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_list_copy(&ext->knob.style_list, &copy_ext->knob.style_list);
 153:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Refresh the style with new signal function*/
 154:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_refresh_style(cpicker, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);
 155:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 156:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 157:lvgl/src/lv_widgets/lv_cpicker.c **** 
 158:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_LOG_INFO("color_picker created");
 159:lvgl/src/lv_widgets/lv_cpicker.c **** 
 160:lvgl/src/lv_widgets/lv_cpicker.c ****     return cpicker;
 161:lvgl/src/lv_widgets/lv_cpicker.c **** }
 162:lvgl/src/lv_widgets/lv_cpicker.c **** 
 163:lvgl/src/lv_widgets/lv_cpicker.c **** /*=====================
 164:lvgl/src/lv_widgets/lv_cpicker.c ****  * Setter functions
 165:lvgl/src/lv_widgets/lv_cpicker.c ****  *====================*/
 166:lvgl/src/lv_widgets/lv_cpicker.c **** 
 167:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 168:lvgl/src/lv_widgets/lv_cpicker.c ****  * Set a new type for a cpicker
 169:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to a cpicker object
 170:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param type new type of the cpicker (from 'lv_cpicker_type_t' enum)
 171:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 172:lvgl/src/lv_widgets/lv_cpicker.c **** void lv_cpicker_set_type(lv_obj_t * cpicker, lv_cpicker_type_t type)
 173:lvgl/src/lv_widgets/lv_cpicker.c **** {
 174:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 175:lvgl/src/lv_widgets/lv_cpicker.c **** 
 176:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 177:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->type == type) return;
 178:lvgl/src/lv_widgets/lv_cpicker.c **** 
 179:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->type = type;
 180:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_refresh_ext_draw_pad(cpicker);
 181:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 182:lvgl/src/lv_widgets/lv_cpicker.c **** 
 183:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_invalidate(cpicker);
 184:lvgl/src/lv_widgets/lv_cpicker.c **** }
 185:lvgl/src/lv_widgets/lv_cpicker.c **** 
 186:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 187:lvgl/src/lv_widgets/lv_cpicker.c ****  * Set the current hue of a colorpicker.
 188:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 189:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param hue current selected hue [0..360]
 190:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return true if changed, otherwise false
 191:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 192:lvgl/src/lv_widgets/lv_cpicker.c **** bool lv_cpicker_set_hue(lv_obj_t * cpicker, uint16_t hue)
 193:lvgl/src/lv_widgets/lv_cpicker.c **** {
 194:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_hsv_t hsv = lv_cpicker_get_hsv(cpicker);
 195:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.h = hue;
 196:lvgl/src/lv_widgets/lv_cpicker.c ****     return lv_cpicker_set_hsv(cpicker, hsv);
 197:lvgl/src/lv_widgets/lv_cpicker.c **** }
 198:lvgl/src/lv_widgets/lv_cpicker.c **** 
 199:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 200:lvgl/src/lv_widgets/lv_cpicker.c ****  * Set the current saturation of a colorpicker.
 201:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
ARM GAS  D:\Temp\ccfvNLhk.s 			page 5


 202:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param saturation current selected saturation [0..100]
 203:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return true if changed, otherwise false
 204:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 205:lvgl/src/lv_widgets/lv_cpicker.c **** bool lv_cpicker_set_saturation(lv_obj_t * cpicker, uint8_t saturation)
 206:lvgl/src/lv_widgets/lv_cpicker.c **** {
 207:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_hsv_t hsv = lv_cpicker_get_hsv(cpicker);
 208:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.s = saturation;
 209:lvgl/src/lv_widgets/lv_cpicker.c ****     return lv_cpicker_set_hsv(cpicker, hsv);
 210:lvgl/src/lv_widgets/lv_cpicker.c **** }
 211:lvgl/src/lv_widgets/lv_cpicker.c **** 
 212:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 213:lvgl/src/lv_widgets/lv_cpicker.c ****  * Set the current value of a colorpicker.
 214:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 215:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param val current selected value [0..100]
 216:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return true if changed, otherwise false
 217:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 218:lvgl/src/lv_widgets/lv_cpicker.c **** bool lv_cpicker_set_value(lv_obj_t * cpicker, uint8_t val)
 219:lvgl/src/lv_widgets/lv_cpicker.c **** {
 220:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_hsv_t hsv = lv_cpicker_get_hsv(cpicker);
 221:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.v = val;
 222:lvgl/src/lv_widgets/lv_cpicker.c ****     return lv_cpicker_set_hsv(cpicker, hsv);
 223:lvgl/src/lv_widgets/lv_cpicker.c **** }
 224:lvgl/src/lv_widgets/lv_cpicker.c **** 
 225:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 226:lvgl/src/lv_widgets/lv_cpicker.c ****  * Set the current hsv of a colorpicker.
 227:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 228:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param color current selected hsv
 229:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return true if changed, otherwise false
 230:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 231:lvgl/src/lv_widgets/lv_cpicker.c **** bool lv_cpicker_set_hsv(lv_obj_t * cpicker, lv_color_hsv_t hsv)
 232:lvgl/src/lv_widgets/lv_cpicker.c **** {
 233:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 234:lvgl/src/lv_widgets/lv_cpicker.c **** 
 235:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.h > 360) hsv.h %= 360;
 236:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.s > 100) hsv.s = 100;
 237:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.v > 100) hsv.v = 100;
 238:lvgl/src/lv_widgets/lv_cpicker.c **** 
 239:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 240:lvgl/src/lv_widgets/lv_cpicker.c **** 
 241:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->hsv.h == hsv.h && ext->hsv.s == hsv.s && ext->hsv.v == hsv.v) return false;
 242:lvgl/src/lv_widgets/lv_cpicker.c **** 
 243:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->hsv = hsv;
 244:lvgl/src/lv_widgets/lv_cpicker.c **** 
 245:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 246:lvgl/src/lv_widgets/lv_cpicker.c **** 
 247:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_invalidate(cpicker);
 248:lvgl/src/lv_widgets/lv_cpicker.c **** 
 249:lvgl/src/lv_widgets/lv_cpicker.c ****     return true;
 250:lvgl/src/lv_widgets/lv_cpicker.c **** }
 251:lvgl/src/lv_widgets/lv_cpicker.c **** 
 252:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 253:lvgl/src/lv_widgets/lv_cpicker.c ****  * Set the current color of a colorpicker.
 254:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 255:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param color current selected color
 256:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return true if changed, otherwise false
 257:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 258:lvgl/src/lv_widgets/lv_cpicker.c **** bool lv_cpicker_set_color(lv_obj_t * cpicker, lv_color_t color)
ARM GAS  D:\Temp\ccfvNLhk.s 			page 6


 259:lvgl/src/lv_widgets/lv_cpicker.c **** {
 260:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 261:lvgl/src/lv_widgets/lv_cpicker.c **** 
 262:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color32_t c32;
 263:lvgl/src/lv_widgets/lv_cpicker.c ****     c32.full = lv_color_to32(color);
 264:lvgl/src/lv_widgets/lv_cpicker.c **** 
 265:lvgl/src/lv_widgets/lv_cpicker.c ****     return lv_cpicker_set_hsv(cpicker,
 266:lvgl/src/lv_widgets/lv_cpicker.c ****                               lv_color_rgb_to_hsv(c32.ch.red, c32.ch.green, c32.ch.blue));
 267:lvgl/src/lv_widgets/lv_cpicker.c **** }
 268:lvgl/src/lv_widgets/lv_cpicker.c **** 
 269:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 270:lvgl/src/lv_widgets/lv_cpicker.c ****  * Set the current color mode.
 271:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 272:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param mode color mode (hue/sat/val)
 273:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 274:lvgl/src/lv_widgets/lv_cpicker.c **** void lv_cpicker_set_color_mode(lv_obj_t * cpicker, lv_cpicker_color_mode_t mode)
 275:lvgl/src/lv_widgets/lv_cpicker.c **** {
 276:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 277:lvgl/src/lv_widgets/lv_cpicker.c **** 
 278:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 279:lvgl/src/lv_widgets/lv_cpicker.c **** 
 280:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->color_mode = mode;
 281:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 282:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_invalidate(cpicker);
 283:lvgl/src/lv_widgets/lv_cpicker.c **** }
 284:lvgl/src/lv_widgets/lv_cpicker.c **** 
 285:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 286:lvgl/src/lv_widgets/lv_cpicker.c ****  * Set if the color mode is changed on long press on center
 287:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 288:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param fixed color mode cannot be changed on long press
 289:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 290:lvgl/src/lv_widgets/lv_cpicker.c **** void lv_cpicker_set_color_mode_fixed(lv_obj_t * cpicker, bool fixed)
 291:lvgl/src/lv_widgets/lv_cpicker.c **** {
 292:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 293:lvgl/src/lv_widgets/lv_cpicker.c **** 
 294:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 295:lvgl/src/lv_widgets/lv_cpicker.c **** 
 296:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->color_mode_fixed = fixed;
 297:lvgl/src/lv_widgets/lv_cpicker.c **** }
 298:lvgl/src/lv_widgets/lv_cpicker.c **** 
 299:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 300:lvgl/src/lv_widgets/lv_cpicker.c ****  * Make the knob to be colored to the current color
 301:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 302:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param en true: color the knob; false: not color the knob
 303:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 304:lvgl/src/lv_widgets/lv_cpicker.c **** void lv_cpicker_set_knob_colored(lv_obj_t * cpicker, bool en)
 305:lvgl/src/lv_widgets/lv_cpicker.c **** {
 306:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 307:lvgl/src/lv_widgets/lv_cpicker.c **** 
 308:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 309:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->knob.colored = en ? 1 : 0;
 310:lvgl/src/lv_widgets/lv_cpicker.c ****     invalidate_knob(cpicker);
 311:lvgl/src/lv_widgets/lv_cpicker.c **** }
 312:lvgl/src/lv_widgets/lv_cpicker.c **** 
 313:lvgl/src/lv_widgets/lv_cpicker.c **** /*=====================
 314:lvgl/src/lv_widgets/lv_cpicker.c ****  * Getter functions
 315:lvgl/src/lv_widgets/lv_cpicker.c ****  *====================*/
ARM GAS  D:\Temp\ccfvNLhk.s 			page 7


 316:lvgl/src/lv_widgets/lv_cpicker.c **** 
 317:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 318:lvgl/src/lv_widgets/lv_cpicker.c ****  * Get the current color mode.
 319:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 320:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return color mode (hue/sat/val)
 321:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 322:lvgl/src/lv_widgets/lv_cpicker.c **** lv_cpicker_color_mode_t lv_cpicker_get_color_mode(lv_obj_t * cpicker)
 323:lvgl/src/lv_widgets/lv_cpicker.c **** {
 324:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 325:lvgl/src/lv_widgets/lv_cpicker.c **** 
 326:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 327:lvgl/src/lv_widgets/lv_cpicker.c **** 
 328:lvgl/src/lv_widgets/lv_cpicker.c ****     return ext->color_mode;
 329:lvgl/src/lv_widgets/lv_cpicker.c **** }
 330:lvgl/src/lv_widgets/lv_cpicker.c **** 
 331:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 332:lvgl/src/lv_widgets/lv_cpicker.c ****  * Get if the color mode is changed on long press on center
 333:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 334:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return mode cannot be changed on long press
 335:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 336:lvgl/src/lv_widgets/lv_cpicker.c **** bool lv_cpicker_get_color_mode_fixed(lv_obj_t * cpicker)
 337:lvgl/src/lv_widgets/lv_cpicker.c **** {
 338:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 339:lvgl/src/lv_widgets/lv_cpicker.c **** 
 340:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 341:lvgl/src/lv_widgets/lv_cpicker.c **** 
 342:lvgl/src/lv_widgets/lv_cpicker.c ****     return ext->color_mode_fixed;
 343:lvgl/src/lv_widgets/lv_cpicker.c **** }
 344:lvgl/src/lv_widgets/lv_cpicker.c **** 
 345:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 346:lvgl/src/lv_widgets/lv_cpicker.c ****  * Get the current selected hue of a colorpicker.
 347:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 348:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return hue current selected hue
 349:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 350:lvgl/src/lv_widgets/lv_cpicker.c **** uint16_t lv_cpicker_get_hue(lv_obj_t * cpicker)
 351:lvgl/src/lv_widgets/lv_cpicker.c **** {
 352:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 353:lvgl/src/lv_widgets/lv_cpicker.c **** 
 354:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 355:lvgl/src/lv_widgets/lv_cpicker.c **** 
 356:lvgl/src/lv_widgets/lv_cpicker.c ****     return ext->hsv.h;
 357:lvgl/src/lv_widgets/lv_cpicker.c **** }
 358:lvgl/src/lv_widgets/lv_cpicker.c **** 
 359:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 360:lvgl/src/lv_widgets/lv_cpicker.c ****  * Get the current selected saturation of a colorpicker.
 361:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 362:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return current selected saturation
 363:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 364:lvgl/src/lv_widgets/lv_cpicker.c **** uint8_t lv_cpicker_get_saturation(lv_obj_t * cpicker)
 365:lvgl/src/lv_widgets/lv_cpicker.c **** {
 366:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 367:lvgl/src/lv_widgets/lv_cpicker.c **** 
 368:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 369:lvgl/src/lv_widgets/lv_cpicker.c **** 
 370:lvgl/src/lv_widgets/lv_cpicker.c ****     return ext->hsv.s;
 371:lvgl/src/lv_widgets/lv_cpicker.c **** }
 372:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 8


 373:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 374:lvgl/src/lv_widgets/lv_cpicker.c ****  * Get the current selected hue of a colorpicker.
 375:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 376:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return current selected value
 377:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 378:lvgl/src/lv_widgets/lv_cpicker.c **** uint8_t lv_cpicker_get_value(lv_obj_t * cpicker)
 379:lvgl/src/lv_widgets/lv_cpicker.c **** {
 380:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 381:lvgl/src/lv_widgets/lv_cpicker.c **** 
 382:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 383:lvgl/src/lv_widgets/lv_cpicker.c **** 
 384:lvgl/src/lv_widgets/lv_cpicker.c ****     return ext->hsv.v;
 385:lvgl/src/lv_widgets/lv_cpicker.c **** }
 386:lvgl/src/lv_widgets/lv_cpicker.c **** 
 387:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 388:lvgl/src/lv_widgets/lv_cpicker.c ****  * Get the current selected hsv of a colorpicker.
 389:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 390:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return current selected hsv
 391:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 392:lvgl/src/lv_widgets/lv_cpicker.c **** lv_color_hsv_t lv_cpicker_get_hsv(lv_obj_t * cpicker)
 393:lvgl/src/lv_widgets/lv_cpicker.c **** {
 394:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 395:lvgl/src/lv_widgets/lv_cpicker.c **** 
 396:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 397:lvgl/src/lv_widgets/lv_cpicker.c **** 
 398:lvgl/src/lv_widgets/lv_cpicker.c ****     return ext->hsv;
 399:lvgl/src/lv_widgets/lv_cpicker.c **** }
 400:lvgl/src/lv_widgets/lv_cpicker.c **** 
 401:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 402:lvgl/src/lv_widgets/lv_cpicker.c ****  * Get the current selected color of a colorpicker.
 403:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to colorpicker object
 404:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return color current selected color
 405:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 406:lvgl/src/lv_widgets/lv_cpicker.c **** lv_color_t lv_cpicker_get_color(lv_obj_t * cpicker)
 407:lvgl/src/lv_widgets/lv_cpicker.c **** {
 408:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 409:lvgl/src/lv_widgets/lv_cpicker.c **** 
 410:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 411:lvgl/src/lv_widgets/lv_cpicker.c **** 
 412:lvgl/src/lv_widgets/lv_cpicker.c ****     return lv_color_hsv_to_rgb(ext->hsv.h, ext->hsv.s, ext->hsv.v);
 413:lvgl/src/lv_widgets/lv_cpicker.c **** }
 414:lvgl/src/lv_widgets/lv_cpicker.c **** 
 415:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 416:lvgl/src/lv_widgets/lv_cpicker.c ****  * Whether the knob is colored to the current color or not
 417:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to color picker object
 418:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return true: color the knob; false: not color the knob
 419:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 420:lvgl/src/lv_widgets/lv_cpicker.c **** bool lv_cpicker_get_knob_colored(lv_obj_t * cpicker)
 421:lvgl/src/lv_widgets/lv_cpicker.c **** {
 422:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 423:lvgl/src/lv_widgets/lv_cpicker.c **** 
 424:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 425:lvgl/src/lv_widgets/lv_cpicker.c **** 
 426:lvgl/src/lv_widgets/lv_cpicker.c ****     return ext->knob.colored ? true : false;
 427:lvgl/src/lv_widgets/lv_cpicker.c **** }
 428:lvgl/src/lv_widgets/lv_cpicker.c **** 
 429:lvgl/src/lv_widgets/lv_cpicker.c **** /*=====================
ARM GAS  D:\Temp\ccfvNLhk.s 			page 9


 430:lvgl/src/lv_widgets/lv_cpicker.c ****  * Other functions
 431:lvgl/src/lv_widgets/lv_cpicker.c ****  *====================*/
 432:lvgl/src/lv_widgets/lv_cpicker.c **** 
 433:lvgl/src/lv_widgets/lv_cpicker.c **** /**********************
 434:lvgl/src/lv_widgets/lv_cpicker.c ****  *   STATIC FUNCTIONS
 435:lvgl/src/lv_widgets/lv_cpicker.c ****  **********************/
 436:lvgl/src/lv_widgets/lv_cpicker.c **** 
 437:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 438:lvgl/src/lv_widgets/lv_cpicker.c ****  * Handle the drawing related tasks of the color_picker
 439:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to an object
 440:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param mask the object will be drawn only in this area
 441:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param mode LV_DESIGN_COVER_CHK: only check if the object fully covers the 'mask_p' area
 442:lvgl/src/lv_widgets/lv_cpicker.c ****  *                                  (return 'true' if yes)
 443:lvgl/src/lv_widgets/lv_cpicker.c ****  *             LV_DESIGN_DRAW: draw the object (always return 'true')
 444:lvgl/src/lv_widgets/lv_cpicker.c ****  *             LV_DESIGN_DRAW_POST: drawing after every children are drawn
 445:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return return an element of `lv_design_res_t`
 446:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 447:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_design_res_t lv_cpicker_design(lv_obj_t * cpicker, const lv_area_t * clip_area, lv_design
 448:lvgl/src/lv_widgets/lv_cpicker.c **** {
 449:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Return false if the object is not covers the mask_p area*/
 450:lvgl/src/lv_widgets/lv_cpicker.c ****     if(mode == LV_DESIGN_COVER_CHK)  {
 451:lvgl/src/lv_widgets/lv_cpicker.c ****         return LV_DESIGN_RES_NOT_COVER;
 452:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 453:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Draw the object*/
 454:lvgl/src/lv_widgets/lv_cpicker.c ****     else if(mode == LV_DESIGN_DRAW_MAIN) {
 455:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 456:lvgl/src/lv_widgets/lv_cpicker.c **** 
 457:lvgl/src/lv_widgets/lv_cpicker.c ****         if(ext->type == LV_CPICKER_TYPE_DISC) {
 458:lvgl/src/lv_widgets/lv_cpicker.c ****             draw_disc_grad(cpicker, clip_area);
 459:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 460:lvgl/src/lv_widgets/lv_cpicker.c ****         else if(ext->type == LV_CPICKER_TYPE_RECT) {
 461:lvgl/src/lv_widgets/lv_cpicker.c ****             draw_rect_grad(cpicker, clip_area);
 462:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 463:lvgl/src/lv_widgets/lv_cpicker.c **** 
 464:lvgl/src/lv_widgets/lv_cpicker.c ****         draw_knob(cpicker, clip_area);
 465:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 466:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Post draw when the children are drawn*/
 467:lvgl/src/lv_widgets/lv_cpicker.c ****     else if(mode == LV_DESIGN_DRAW_POST) {
 468:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 469:lvgl/src/lv_widgets/lv_cpicker.c **** 
 470:lvgl/src/lv_widgets/lv_cpicker.c ****     return LV_DESIGN_RES_OK;
 471:lvgl/src/lv_widgets/lv_cpicker.c **** }
 472:lvgl/src/lv_widgets/lv_cpicker.c **** 
 473:lvgl/src/lv_widgets/lv_cpicker.c **** static void draw_disc_grad(lv_obj_t * cpicker, const lv_area_t * mask)
 474:lvgl/src/lv_widgets/lv_cpicker.c **** {
 475:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t w = lv_obj_get_width(cpicker);
 476:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t h = lv_obj_get_height(cpicker);
 477:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t cx = cpicker->coords.x1 + w / 2;
 478:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t cy = cpicker->coords.y1 + h / 2;
 479:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t r = w / 2;
 480:lvgl/src/lv_widgets/lv_cpicker.c **** 
 481:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_line_dsc_t line_dsc;
 482:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_line_dsc_init(&line_dsc);
 483:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_init_draw_line_dsc(cpicker, LV_CPICKER_PART_MAIN, &line_dsc);
 484:lvgl/src/lv_widgets/lv_cpicker.c **** 
 485:lvgl/src/lv_widgets/lv_cpicker.c ****     line_dsc.width = (r * 628 / (360 / LV_CPICKER_DEF_QF)) / 100;
 486:lvgl/src/lv_widgets/lv_cpicker.c ****     line_dsc.width += 2;
ARM GAS  D:\Temp\ccfvNLhk.s 			page 10


 487:lvgl/src/lv_widgets/lv_cpicker.c ****     uint16_t i;
 488:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t cir_w = lv_obj_get_style_scale_width(cpicker, LV_CPICKER_PART_MAIN);
 489:lvgl/src/lv_widgets/lv_cpicker.c **** 
 490:lvgl/src/lv_widgets/lv_cpicker.c ****     /* Mask outer ring of widget to tidy up ragged edges of lines while drawing outer ring */
 491:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_t mask_area_out;
 492:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_copy(&mask_area_out, &cpicker->coords);
 493:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.x1 += OUTER_MASK_WIDTH;
 494:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.x2 -= OUTER_MASK_WIDTH;
 495:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.y1 += OUTER_MASK_WIDTH;
 496:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.y2 -= OUTER_MASK_WIDTH;
 497:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_mask_radius_param_t mask_out_param;
 498:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_mask_radius_init(&mask_out_param, &mask_area_out, LV_RADIUS_CIRCLE, false);
 499:lvgl/src/lv_widgets/lv_cpicker.c ****     int16_t mask_out_id = lv_draw_mask_add(&mask_out_param, 0);
 500:lvgl/src/lv_widgets/lv_cpicker.c **** 
 501:lvgl/src/lv_widgets/lv_cpicker.c ****     /* The inner line ends will be masked out.
 502:lvgl/src/lv_widgets/lv_cpicker.c ****      * So make lines a little bit longer because the masking makes a more even result */
 503:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t cir_w_extra = cir_w + line_dsc.width;
 504:lvgl/src/lv_widgets/lv_cpicker.c **** 
 505:lvgl/src/lv_widgets/lv_cpicker.c ****     for(i = 0; i <= 360; i += LV_CPICKER_DEF_QF) {
 506:lvgl/src/lv_widgets/lv_cpicker.c ****         line_dsc.color = angle_to_mode_color(cpicker, i);
 507:lvgl/src/lv_widgets/lv_cpicker.c **** 
 508:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_point_t p[2];
 509:lvgl/src/lv_widgets/lv_cpicker.c ****         p[0].x = cx + (r * _lv_trigo_sin(i) >> LV_TRIGO_SHIFT);
 510:lvgl/src/lv_widgets/lv_cpicker.c ****         p[0].y = cy + (r * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 511:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].x = cx + ((r - cir_w_extra) * _lv_trigo_sin(i) >> LV_TRIGO_SHIFT);
 512:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].y = cy + ((r - cir_w_extra) * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 513:lvgl/src/lv_widgets/lv_cpicker.c **** 
 514:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_draw_line(&p[0], &p[1], mask, &line_dsc);
 515:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 516:lvgl/src/lv_widgets/lv_cpicker.c ****     /* Now remove mask to continue with inner part */
 517:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_mask_remove_id(mask_out_id);
 518:lvgl/src/lv_widgets/lv_cpicker.c **** 
 519:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Mask out the inner area*/
 520:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect_dsc_t bg_dsc;
 521:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect_dsc_init(&bg_dsc);
 522:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_init_draw_rect_dsc(cpicker, LV_CPICKER_PART_MAIN, &bg_dsc);
 523:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.radius = LV_RADIUS_CIRCLE;
 524:lvgl/src/lv_widgets/lv_cpicker.c **** 
 525:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_t area_mid;
 526:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_copy(&area_mid, &cpicker->coords);
 527:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.x1 += cir_w;
 528:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y1 += cir_w;
 529:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.x2 -= cir_w;
 530:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y2 -= cir_w;
 531:lvgl/src/lv_widgets/lv_cpicker.c **** 
 532:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect(&area_mid, mask, &bg_dsc);
 533:lvgl/src/lv_widgets/lv_cpicker.c **** 
 534:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_style_int_t inner = lv_obj_get_style_pad_inner(cpicker, LV_CPICKER_PART_MAIN);
 535:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_t color = lv_cpicker_get_color(cpicker);
 536:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.bg_color = color;
 537:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.x1 += inner;
 538:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y1 += inner;
 539:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.x2 -= inner;
 540:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y2 -= inner;
 541:lvgl/src/lv_widgets/lv_cpicker.c **** 
 542:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect(&area_mid, mask, &bg_dsc);
 543:lvgl/src/lv_widgets/lv_cpicker.c **** }
ARM GAS  D:\Temp\ccfvNLhk.s 			page 11


 544:lvgl/src/lv_widgets/lv_cpicker.c **** 
 545:lvgl/src/lv_widgets/lv_cpicker.c **** static void draw_rect_grad(lv_obj_t * cpicker, const lv_area_t * mask)
 546:lvgl/src/lv_widgets/lv_cpicker.c **** {
 547:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect_dsc_t bg_dsc;
 548:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect_dsc_init(&bg_dsc);
 549:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_init_draw_rect_dsc(cpicker, LV_CPICKER_PART_MAIN, &bg_dsc);
 550:lvgl/src/lv_widgets/lv_cpicker.c **** 
 551:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_t grad_area;
 552:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_get_coords(cpicker, &grad_area);
 553:lvgl/src/lv_widgets/lv_cpicker.c **** 
 554:lvgl/src/lv_widgets/lv_cpicker.c ****     if(bg_dsc.radius) {
 555:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t h = lv_obj_get_height(cpicker);
 556:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t r = bg_dsc.radius;
 557:lvgl/src/lv_widgets/lv_cpicker.c ****         if(r > h / 2) r = h / 2;
 558:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Make the gradient area smaller with a half circle on both ends*/
 559:lvgl/src/lv_widgets/lv_cpicker.c ****         grad_area.x1 += r;
 560:lvgl/src/lv_widgets/lv_cpicker.c ****         grad_area.x2 -= r;
 561:lvgl/src/lv_widgets/lv_cpicker.c **** 
 562:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Draw the left rounded end*/
 563:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_area_t rounded_edge_area;
 564:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_get_coords(cpicker, &rounded_edge_area);
 565:lvgl/src/lv_widgets/lv_cpicker.c ****         rounded_edge_area.x2 = rounded_edge_area.x1 + 2 * r;
 566:lvgl/src/lv_widgets/lv_cpicker.c **** 
 567:lvgl/src/lv_widgets/lv_cpicker.c ****         bg_dsc.bg_color = angle_to_mode_color(cpicker, 0);
 568:lvgl/src/lv_widgets/lv_cpicker.c **** 
 569:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_draw_rect(&rounded_edge_area, mask, &bg_dsc);
 570:lvgl/src/lv_widgets/lv_cpicker.c **** 
 571:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Draw the right rounded end*/
 572:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_get_coords(cpicker, &rounded_edge_area);
 573:lvgl/src/lv_widgets/lv_cpicker.c ****         rounded_edge_area.x1 = rounded_edge_area.x2 - 2 * r;
 574:lvgl/src/lv_widgets/lv_cpicker.c **** 
 575:lvgl/src/lv_widgets/lv_cpicker.c ****         bg_dsc.bg_color = angle_to_mode_color(cpicker, 359);
 576:lvgl/src/lv_widgets/lv_cpicker.c **** 
 577:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_draw_rect(&rounded_edge_area, mask, &bg_dsc);
 578:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 579:lvgl/src/lv_widgets/lv_cpicker.c **** 
 580:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t grad_w = lv_area_get_width(&grad_area);
 581:lvgl/src/lv_widgets/lv_cpicker.c ****     if(grad_w < 1) return;
 582:lvgl/src/lv_widgets/lv_cpicker.c ****     uint16_t i_step = LV_MATH_MAX(LV_CPICKER_DEF_QF, 360 / grad_w);
 583:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.radius = 0;
 584:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.border_width = 0;
 585:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.shadow_width = 0;
 586:lvgl/src/lv_widgets/lv_cpicker.c **** 
 587:lvgl/src/lv_widgets/lv_cpicker.c ****     uint16_t i;
 588:lvgl/src/lv_widgets/lv_cpicker.c ****     for(i = 0; i < 360; i += i_step) {
 589:lvgl/src/lv_widgets/lv_cpicker.c ****         bg_dsc.bg_color = angle_to_mode_color(cpicker, i);
 590:lvgl/src/lv_widgets/lv_cpicker.c **** 
 591:lvgl/src/lv_widgets/lv_cpicker.c ****         /*the following attribute might need changing between index to add border, shadow, radius e
 592:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_area_t rect_area;
 593:lvgl/src/lv_widgets/lv_cpicker.c **** 
 594:lvgl/src/lv_widgets/lv_cpicker.c ****         /*scale angle (hue/sat/val) to linear coordinate*/
 595:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t xi = (i * grad_w) / 360;
 596:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t xi2 = ((i + i_step) * grad_w) / 360;
 597:lvgl/src/lv_widgets/lv_cpicker.c **** 
 598:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.x1 = LV_MATH_MIN(grad_area.x1 + xi, grad_area.x1 + grad_w - i_step);
 599:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.y1 = grad_area.y1;
 600:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.x2 = LV_MATH_MIN(grad_area.x1 + xi2, grad_area.x1 + grad_w - i_step);
ARM GAS  D:\Temp\ccfvNLhk.s 			page 12


 601:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.y2 = grad_area.y2;
 602:lvgl/src/lv_widgets/lv_cpicker.c **** 
 603:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_draw_rect(&rect_area, mask, &bg_dsc);
 604:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 605:lvgl/src/lv_widgets/lv_cpicker.c **** }
 606:lvgl/src/lv_widgets/lv_cpicker.c **** 
 607:lvgl/src/lv_widgets/lv_cpicker.c **** static void draw_knob(lv_obj_t * cpicker, const lv_area_t * mask)
 608:lvgl/src/lv_widgets/lv_cpicker.c **** {
 609:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 610:lvgl/src/lv_widgets/lv_cpicker.c **** 
 611:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect_dsc_t cir_dsc;
 612:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect_dsc_init(&cir_dsc);
 613:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_init_draw_rect_dsc(cpicker, LV_CPICKER_PART_KNOB, &cir_dsc);
 614:lvgl/src/lv_widgets/lv_cpicker.c **** 
 615:lvgl/src/lv_widgets/lv_cpicker.c ****     cir_dsc.radius = LV_RADIUS_CIRCLE;
 616:lvgl/src/lv_widgets/lv_cpicker.c **** 
 617:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->knob.colored) {
 618:lvgl/src/lv_widgets/lv_cpicker.c ****         cir_dsc.bg_color = lv_cpicker_get_color(cpicker);
 619:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 620:lvgl/src/lv_widgets/lv_cpicker.c **** 
 621:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_t knob_area = get_knob_area(cpicker);
 622:lvgl/src/lv_widgets/lv_cpicker.c **** 
 623:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect(&knob_area, mask, &cir_dsc);
 624:lvgl/src/lv_widgets/lv_cpicker.c **** }
 625:lvgl/src/lv_widgets/lv_cpicker.c **** 
 626:lvgl/src/lv_widgets/lv_cpicker.c **** static void invalidate_knob(lv_obj_t * cpicker)
 627:lvgl/src/lv_widgets/lv_cpicker.c **** {
 628:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_t knob_area = get_knob_area(cpicker);
 629:lvgl/src/lv_widgets/lv_cpicker.c **** 
 630:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_invalidate_area(cpicker, &knob_area);
 631:lvgl/src/lv_widgets/lv_cpicker.c **** }
 632:lvgl/src/lv_widgets/lv_cpicker.c **** 
 633:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_area_t get_knob_area(lv_obj_t * cpicker)
 634:lvgl/src/lv_widgets/lv_cpicker.c **** {
 635:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 636:lvgl/src/lv_widgets/lv_cpicker.c **** 
 637:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Get knob's radius*/
 638:lvgl/src/lv_widgets/lv_cpicker.c ****     uint16_t r = 0;
 639:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->type == LV_CPICKER_TYPE_DISC) {
 640:lvgl/src/lv_widgets/lv_cpicker.c ****         r = lv_obj_get_style_scale_width(cpicker, LV_CPICKER_PART_MAIN) / 2;
 641:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 642:lvgl/src/lv_widgets/lv_cpicker.c ****     else if(ext->type == LV_CPICKER_TYPE_RECT) {
 643:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t h = lv_obj_get_height(cpicker);
 644:lvgl/src/lv_widgets/lv_cpicker.c ****         r = h / 2;
 645:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 646:lvgl/src/lv_widgets/lv_cpicker.c **** 
 647:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_style_int_t left = lv_obj_get_style_pad_left(cpicker, LV_CPICKER_PART_KNOB);
 648:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_style_int_t right = lv_obj_get_style_pad_right(cpicker, LV_CPICKER_PART_KNOB);
 649:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_style_int_t top = lv_obj_get_style_pad_top(cpicker, LV_CPICKER_PART_KNOB);
 650:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_style_int_t bottom = lv_obj_get_style_pad_bottom(cpicker, LV_CPICKER_PART_KNOB);
 651:lvgl/src/lv_widgets/lv_cpicker.c **** 
 652:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_t knob_area;
 653:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.x1 = cpicker->coords.x1 + ext->knob.pos.x - r - left;
 654:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y1 = cpicker->coords.y1 + ext->knob.pos.y - r - right;
 655:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.x2 = cpicker->coords.x1 + ext->knob.pos.x + r + top;
 656:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y2 = cpicker->coords.y1 + ext->knob.pos.y + r + bottom;
 657:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 13


 658:lvgl/src/lv_widgets/lv_cpicker.c ****     return knob_area;
 659:lvgl/src/lv_widgets/lv_cpicker.c **** }
 660:lvgl/src/lv_widgets/lv_cpicker.c **** 
 661:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 662:lvgl/src/lv_widgets/lv_cpicker.c ****  * Signal function of the color_picker
 663:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer to a color_picker object
 664:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param sign a signal type from lv_signal_t enum
 665:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param param pointer to a signal specific variable
 666:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return LV_RES_OK: the object is not deleted in the function; LV_RES_INV: the object is deleted
 667:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 668:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_res_t lv_cpicker_signal(lv_obj_t * cpicker, lv_signal_t sign, void * param)
 669:lvgl/src/lv_widgets/lv_cpicker.c **** {
 670:lvgl/src/lv_widgets/lv_cpicker.c ****     /* Include the ancient signal function */
 671:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_res_t res;
 672:lvgl/src/lv_widgets/lv_cpicker.c **** 
 673:lvgl/src/lv_widgets/lv_cpicker.c ****     if(sign == LV_SIGNAL_GET_STYLE) {
 674:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_get_style_info_t * info = param;
 675:lvgl/src/lv_widgets/lv_cpicker.c ****         info->result = lv_cpicker_get_style(cpicker, info->part);
 676:lvgl/src/lv_widgets/lv_cpicker.c ****         if(info->result != NULL) return LV_RES_OK;
 677:lvgl/src/lv_widgets/lv_cpicker.c ****         else return ancestor_signal(cpicker, sign, param);
 678:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 679:lvgl/src/lv_widgets/lv_cpicker.c **** 
 680:lvgl/src/lv_widgets/lv_cpicker.c ****     res = ancestor_signal(cpicker, sign, param);
 681:lvgl/src/lv_widgets/lv_cpicker.c ****     if(res != LV_RES_OK) return res;
 682:lvgl/src/lv_widgets/lv_cpicker.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 683:lvgl/src/lv_widgets/lv_cpicker.c **** 
 684:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 685:lvgl/src/lv_widgets/lv_cpicker.c **** 
 686:lvgl/src/lv_widgets/lv_cpicker.c ****     if(sign == LV_SIGNAL_CLEANUP) {
 687:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_clean_style_list(cpicker, LV_CPICKER_PART_KNOB);
 688:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 689:lvgl/src/lv_widgets/lv_cpicker.c ****     else if(sign == LV_SIGNAL_REFR_EXT_DRAW_PAD) {
 690:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_int_t left = lv_obj_get_style_pad_left(cpicker, LV_CPICKER_PART_KNOB);
 691:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_int_t right = lv_obj_get_style_pad_right(cpicker, LV_CPICKER_PART_KNOB);
 692:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_int_t top = lv_obj_get_style_pad_top(cpicker, LV_CPICKER_PART_KNOB);
 693:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_int_t bottom = lv_obj_get_style_pad_bottom(cpicker, LV_CPICKER_PART_KNOB);
 694:lvgl/src/lv_widgets/lv_cpicker.c **** 
 695:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t knob_pad = LV_MATH_MAX4(left, right, top, bottom) + 2;
 696:lvgl/src/lv_widgets/lv_cpicker.c **** 
 697:lvgl/src/lv_widgets/lv_cpicker.c ****         if(ext->type == LV_CPICKER_TYPE_DISC) {
 698:lvgl/src/lv_widgets/lv_cpicker.c ****             cpicker->ext_draw_pad = LV_MATH_MAX(cpicker->ext_draw_pad, knob_pad);
 699:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 700:lvgl/src/lv_widgets/lv_cpicker.c ****         else {
 701:lvgl/src/lv_widgets/lv_cpicker.c ****             knob_pad += lv_obj_get_height(cpicker) / 2;
 702:lvgl/src/lv_widgets/lv_cpicker.c ****             cpicker->ext_draw_pad = LV_MATH_MAX(cpicker->ext_draw_pad, knob_pad);
 703:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 704:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 705:lvgl/src/lv_widgets/lv_cpicker.c ****     else if(sign == LV_SIGNAL_COORD_CHG) {
 706:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Refresh extended draw area to make knob visible*/
 707:lvgl/src/lv_widgets/lv_cpicker.c ****         if(lv_obj_get_width(cpicker) != lv_area_get_width(param) ||
 708:lvgl/src/lv_widgets/lv_cpicker.c ****            lv_obj_get_height(cpicker) != lv_area_get_height(param)) {
 709:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_obj_refresh_ext_draw_pad(cpicker);
 710:lvgl/src/lv_widgets/lv_cpicker.c ****             refr_knob_pos(cpicker);
 711:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_obj_invalidate(cpicker);
 712:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 713:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 714:lvgl/src/lv_widgets/lv_cpicker.c ****     else if(sign == LV_SIGNAL_STYLE_CHG) {
ARM GAS  D:\Temp\ccfvNLhk.s 			page 14


 715:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Refresh extended draw area to make knob visible*/
 716:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_refresh_ext_draw_pad(cpicker);
 717:lvgl/src/lv_widgets/lv_cpicker.c ****         refr_knob_pos(cpicker);
 718:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_invalidate(cpicker);
 719:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 720:lvgl/src/lv_widgets/lv_cpicker.c ****     else if(sign == LV_SIGNAL_CONTROL) {
 721:lvgl/src/lv_widgets/lv_cpicker.c **** #if LV_USE_GROUP
 722:lvgl/src/lv_widgets/lv_cpicker.c ****         uint32_t c = *((uint32_t *)param); /*uint32_t because can be UTF-8*/
 723:lvgl/src/lv_widgets/lv_cpicker.c **** 
 724:lvgl/src/lv_widgets/lv_cpicker.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_UP) {
 725:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_color_hsv_t hsv_cur;
 726:lvgl/src/lv_widgets/lv_cpicker.c ****             hsv_cur = ext->hsv;
 727:lvgl/src/lv_widgets/lv_cpicker.c **** 
 728:lvgl/src/lv_widgets/lv_cpicker.c ****             switch(ext->color_mode) {
 729:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_HUE:
 730:lvgl/src/lv_widgets/lv_cpicker.c ****                     hsv_cur.h = (ext->hsv.h + 1) % 360;
 731:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 732:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_SATURATION:
 733:lvgl/src/lv_widgets/lv_cpicker.c ****                     hsv_cur.s = (ext->hsv.s + 1) % 100;
 734:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 735:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_VALUE:
 736:lvgl/src/lv_widgets/lv_cpicker.c ****                     hsv_cur.v = (ext->hsv.v + 1) % 100;
 737:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 738:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 739:lvgl/src/lv_widgets/lv_cpicker.c **** 
 740:lvgl/src/lv_widgets/lv_cpicker.c ****             if(lv_cpicker_set_hsv(cpicker, hsv_cur)) {
 741:lvgl/src/lv_widgets/lv_cpicker.c ****                 res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 742:lvgl/src/lv_widgets/lv_cpicker.c ****                 if(res != LV_RES_OK) return res;
 743:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 744:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 745:lvgl/src/lv_widgets/lv_cpicker.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_DOWN) {
 746:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_color_hsv_t hsv_cur;
 747:lvgl/src/lv_widgets/lv_cpicker.c ****             hsv_cur = ext->hsv;
 748:lvgl/src/lv_widgets/lv_cpicker.c **** 
 749:lvgl/src/lv_widgets/lv_cpicker.c ****             switch(ext->color_mode) {
 750:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_HUE:
 751:lvgl/src/lv_widgets/lv_cpicker.c ****                     hsv_cur.h = ext->hsv.h > 0 ? (ext->hsv.h - 1) : 360;
 752:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 753:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_SATURATION:
 754:lvgl/src/lv_widgets/lv_cpicker.c ****                     hsv_cur.s = ext->hsv.s > 0 ? (ext->hsv.s - 1) : 100;
 755:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 756:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_VALUE:
 757:lvgl/src/lv_widgets/lv_cpicker.c ****                     hsv_cur.v = ext->hsv.v > 0 ? (ext->hsv.v - 1) : 100;
 758:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 759:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 760:lvgl/src/lv_widgets/lv_cpicker.c **** 
 761:lvgl/src/lv_widgets/lv_cpicker.c ****             if(lv_cpicker_set_hsv(cpicker, hsv_cur)) {
 762:lvgl/src/lv_widgets/lv_cpicker.c ****                 res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 763:lvgl/src/lv_widgets/lv_cpicker.c ****                 if(res != LV_RES_OK) return res;
 764:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 765:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 766:lvgl/src/lv_widgets/lv_cpicker.c **** #endif
 767:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 768:lvgl/src/lv_widgets/lv_cpicker.c ****     else if(sign == LV_SIGNAL_PRESSED) {
 769:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->last_change_time = lv_tick_get();
 770:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_indev_get_point(lv_indev_get_act(), &ext->last_press_point);
 771:lvgl/src/lv_widgets/lv_cpicker.c ****         res = double_click_reset(cpicker);
ARM GAS  D:\Temp\ccfvNLhk.s 			page 15


 772:lvgl/src/lv_widgets/lv_cpicker.c ****         if(res != LV_RES_OK) return res;
 773:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 774:lvgl/src/lv_widgets/lv_cpicker.c ****     else if(sign == LV_SIGNAL_PRESSING) {
 775:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_indev_t * indev = lv_indev_get_act();
 776:lvgl/src/lv_widgets/lv_cpicker.c ****         if(indev == NULL) return res;
 777:lvgl/src/lv_widgets/lv_cpicker.c **** 
 778:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_indev_type_t indev_type = lv_indev_get_type(indev);
 779:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_point_t p;
 780:lvgl/src/lv_widgets/lv_cpicker.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER || indev_type == LV_INDEV_TYPE_KEYPAD) {
 781:lvgl/src/lv_widgets/lv_cpicker.c ****             p.x = cpicker->coords.x1 + lv_obj_get_width(cpicker) / 2;
 782:lvgl/src/lv_widgets/lv_cpicker.c ****             p.y = cpicker->coords.y1 + lv_obj_get_height(cpicker) / 2;
 783:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 784:lvgl/src/lv_widgets/lv_cpicker.c ****         else {
 785:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_indev_get_point(indev, &p);
 786:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 787:lvgl/src/lv_widgets/lv_cpicker.c **** 
 788:lvgl/src/lv_widgets/lv_cpicker.c ****         if((LV_MATH_ABS(p.x - ext->last_press_point.x) > indev->driver.drag_limit / 2) ||
 789:lvgl/src/lv_widgets/lv_cpicker.c ****            (LV_MATH_ABS(p.y - ext->last_press_point.y) > indev->driver.drag_limit / 2)) {
 790:lvgl/src/lv_widgets/lv_cpicker.c ****             ext->last_change_time = lv_tick_get();
 791:lvgl/src/lv_widgets/lv_cpicker.c ****             ext->last_press_point.x = p.x;
 792:lvgl/src/lv_widgets/lv_cpicker.c ****             ext->last_press_point.y = p.y;
 793:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 794:lvgl/src/lv_widgets/lv_cpicker.c **** 
 795:lvgl/src/lv_widgets/lv_cpicker.c ****         p.x -= cpicker->coords.x1;
 796:lvgl/src/lv_widgets/lv_cpicker.c ****         p.y -= cpicker->coords.y1;
 797:lvgl/src/lv_widgets/lv_cpicker.c **** 
 798:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Ignore pressing in the inner area*/
 799:lvgl/src/lv_widgets/lv_cpicker.c ****         uint16_t w = lv_obj_get_width(cpicker);
 800:lvgl/src/lv_widgets/lv_cpicker.c **** 
 801:lvgl/src/lv_widgets/lv_cpicker.c ****         int16_t angle = 0;
 802:lvgl/src/lv_widgets/lv_cpicker.c **** 
 803:lvgl/src/lv_widgets/lv_cpicker.c ****         if(ext->type == LV_CPICKER_TYPE_RECT) {
 804:lvgl/src/lv_widgets/lv_cpicker.c ****             /*If pressed long enough without change go to next color mode*/
 805:lvgl/src/lv_widgets/lv_cpicker.c ****             uint32_t diff = lv_tick_elaps(ext->last_change_time);
 806:lvgl/src/lv_widgets/lv_cpicker.c ****             if(diff > (uint32_t)indev->driver.long_press_time * 2 && !ext->color_mode_fixed) {
 807:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 808:lvgl/src/lv_widgets/lv_cpicker.c ****                 lv_indev_wait_release(lv_indev_get_act());
 809:lvgl/src/lv_widgets/lv_cpicker.c ****                 return res;
 810:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 811:lvgl/src/lv_widgets/lv_cpicker.c **** 
 812:lvgl/src/lv_widgets/lv_cpicker.c ****             angle = (p.x * 360) / w;
 813:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle < 0) angle = 0;
 814:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle >= 360) angle = 359;
 815:lvgl/src/lv_widgets/lv_cpicker.c **** 
 816:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 817:lvgl/src/lv_widgets/lv_cpicker.c ****         else if(ext->type == LV_CPICKER_TYPE_DISC) {
 818:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_style_int_t scale_w = lv_obj_get_style_scale_width(cpicker, LV_CPICKER_PART_MAIN);
 819:lvgl/src/lv_widgets/lv_cpicker.c **** 
 820:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_coord_t r_in = w / 2;
 821:lvgl/src/lv_widgets/lv_cpicker.c ****             p.x -= r_in;
 822:lvgl/src/lv_widgets/lv_cpicker.c ****             p.y -= r_in;
 823:lvgl/src/lv_widgets/lv_cpicker.c ****             bool on_ring = true;
 824:lvgl/src/lv_widgets/lv_cpicker.c ****             r_in -= scale_w;
 825:lvgl/src/lv_widgets/lv_cpicker.c ****             if(r_in > LV_DPI / 2) {
 826:lvgl/src/lv_widgets/lv_cpicker.c ****                 lv_style_int_t inner = lv_obj_get_style_pad_inner(cpicker, LV_CPICKER_PART_MAIN);
 827:lvgl/src/lv_widgets/lv_cpicker.c ****                 r_in -= inner;
 828:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 16


 829:lvgl/src/lv_widgets/lv_cpicker.c ****                 if(r_in < LV_DPI / 2) r_in = LV_DPI / 2;
 830:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 831:lvgl/src/lv_widgets/lv_cpicker.c **** 
 832:lvgl/src/lv_widgets/lv_cpicker.c ****             if(p.x * p.x + p.y * p.y < r_in * r_in) {
 833:lvgl/src/lv_widgets/lv_cpicker.c ****                 on_ring = false;
 834:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 835:lvgl/src/lv_widgets/lv_cpicker.c **** 
 836:lvgl/src/lv_widgets/lv_cpicker.c ****             /*If the inner area is being pressed, go to the next color mode on long press*/
 837:lvgl/src/lv_widgets/lv_cpicker.c ****             uint32_t diff = lv_tick_elaps(ext->last_change_time);
 838:lvgl/src/lv_widgets/lv_cpicker.c ****             if(!on_ring && diff > indev->driver.long_press_time && !ext->color_mode_fixed) {
 839:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 840:lvgl/src/lv_widgets/lv_cpicker.c ****                 lv_indev_wait_release(lv_indev_get_act());
 841:lvgl/src/lv_widgets/lv_cpicker.c ****                 return res;
 842:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 843:lvgl/src/lv_widgets/lv_cpicker.c **** 
 844:lvgl/src/lv_widgets/lv_cpicker.c ****             /*Set the angle only if pressed on the ring*/
 845:lvgl/src/lv_widgets/lv_cpicker.c ****             if(!on_ring) return res;
 846:lvgl/src/lv_widgets/lv_cpicker.c **** 
 847:lvgl/src/lv_widgets/lv_cpicker.c ****             angle = _lv_atan2(p.x, p.y) % 360;
 848:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 849:lvgl/src/lv_widgets/lv_cpicker.c **** 
 850:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_color_hsv_t hsv_cur;
 851:lvgl/src/lv_widgets/lv_cpicker.c ****         hsv_cur = ext->hsv;
 852:lvgl/src/lv_widgets/lv_cpicker.c **** 
 853:lvgl/src/lv_widgets/lv_cpicker.c ****         switch(ext->color_mode) {
 854:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 855:lvgl/src/lv_widgets/lv_cpicker.c ****                 hsv_cur.h = angle;
 856:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 857:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_SATURATION:
 858:lvgl/src/lv_widgets/lv_cpicker.c ****                 hsv_cur.s = (angle * 100) / 360;
 859:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 860:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_VALUE:
 861:lvgl/src/lv_widgets/lv_cpicker.c ****                 hsv_cur.v = (angle * 100) / 360;
 862:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 863:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 864:lvgl/src/lv_widgets/lv_cpicker.c **** 
 865:lvgl/src/lv_widgets/lv_cpicker.c ****         if(lv_cpicker_set_hsv(cpicker, hsv_cur)) {
 866:lvgl/src/lv_widgets/lv_cpicker.c ****             res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 867:lvgl/src/lv_widgets/lv_cpicker.c ****             if(res != LV_RES_OK) return res;
 868:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 869:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 870:lvgl/src/lv_widgets/lv_cpicker.c ****     else if(sign == LV_SIGNAL_HIT_TEST) {
 871:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_hit_test_info_t * info = param;
 872:lvgl/src/lv_widgets/lv_cpicker.c ****         info->result = lv_cpicker_hit(cpicker, info->point);
 873:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 874:lvgl/src/lv_widgets/lv_cpicker.c **** 
 875:lvgl/src/lv_widgets/lv_cpicker.c ****     return res;
 876:lvgl/src/lv_widgets/lv_cpicker.c **** }
 877:lvgl/src/lv_widgets/lv_cpicker.c **** 
 878:lvgl/src/lv_widgets/lv_cpicker.c **** /**
 879:lvgl/src/lv_widgets/lv_cpicker.c ****  * Get the style_list descriptor of a part of the object
 880:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param cpicker pointer the object
 881:lvgl/src/lv_widgets/lv_cpicker.c ****  * @param part the part of the cpicker. (LV_PAGE_CPICKER_...)
 882:lvgl/src/lv_widgets/lv_cpicker.c ****  * @return pointer to the style_list descriptor of the specified part
 883:lvgl/src/lv_widgets/lv_cpicker.c ****  */
 884:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_style_list_t * lv_cpicker_get_style(lv_obj_t * cpicker, uint8_t part)
 885:lvgl/src/lv_widgets/lv_cpicker.c **** {
ARM GAS  D:\Temp\ccfvNLhk.s 			page 17


  29              		.loc 1 885 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 885 1 is_stmt 0 view .LVU1
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 0446     		mov	r4, r0
  42 0004 0D46     		mov	r5, r1
 886:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
  43              		.loc 1 886 5 is_stmt 1 view .LVU2
  44              		.loc 1 886 5 view .LVU3
  45 0006 FFF7FEFF 		bl	lv_debug_check_null
  46              	.LVL1:
  47              		.loc 1 886 5 is_stmt 0 view .LVU4
  48 000a 28B9     		cbnz	r0, .L2
  49              		.loc 1 886 5 is_stmt 1 discriminator 1 view .LVU5
  50              		.loc 1 886 5 discriminator 1 view .LVU6
  51 000c 2246     		mov	r2, r4
  52 000e 0023     		movs	r3, #0
  53 0010 0848     		ldr	r0, .L8
  54 0012 FFF7FEFF 		bl	lv_debug_log_error
  55              	.LVL2:
  56              	.L3:
  57              		.loc 1 886 5 discriminator 1 view .LVU7
  58              		.loc 1 886 5 discriminator 1 view .LVU8
  59 0016 FEE7     		b	.L3
  60              	.L2:
  61              		.loc 1 886 41 discriminator 2 view .LVU9
 887:lvgl/src/lv_widgets/lv_cpicker.c **** 
 888:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
  62              		.loc 1 888 5 discriminator 2 view .LVU10
  63              		.loc 1 888 30 is_stmt 0 discriminator 2 view .LVU11
  64 0018 2046     		mov	r0, r4
  65 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
  66              	.LVL3:
 889:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_style_list_t * style_dsc_p;
  67              		.loc 1 889 5 is_stmt 1 discriminator 2 view .LVU12
 890:lvgl/src/lv_widgets/lv_cpicker.c **** 
 891:lvgl/src/lv_widgets/lv_cpicker.c ****     switch(part) {
  68              		.loc 1 891 5 discriminator 2 view .LVU13
  69 001e 1DB1     		cbz	r5, .L4
  70              		.loc 1 891 5 is_stmt 0 view .LVU14
  71 0020 012D     		cmp	r5, #1
  72 0022 04D0     		beq	.L5
 892:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_PART_MAIN :
 893:lvgl/src/lv_widgets/lv_cpicker.c ****             style_dsc_p = &cpicker->style_list;
 894:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 895:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_PART_KNOB:
 896:lvgl/src/lv_widgets/lv_cpicker.c ****             style_dsc_p = &ext->knob.style_list;
 897:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 898:lvgl/src/lv_widgets/lv_cpicker.c ****         default:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 18


 899:lvgl/src/lv_widgets/lv_cpicker.c ****             style_dsc_p = NULL;
  73              		.loc 1 899 25 view .LVU15
  74 0024 0020     		movs	r0, #0
  75              	.LVL4:
  76              	.L1:
 900:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 901:lvgl/src/lv_widgets/lv_cpicker.c **** 
 902:lvgl/src/lv_widgets/lv_cpicker.c ****     return style_dsc_p;
 903:lvgl/src/lv_widgets/lv_cpicker.c **** }
  77              		.loc 1 903 1 view .LVU16
  78 0026 38BD     		pop	{r3, r4, r5, pc}
  79              	.LVL5:
  80              	.L4:
 893:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
  81              		.loc 1 893 13 is_stmt 1 view .LVU17
 893:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
  82              		.loc 1 893 25 is_stmt 0 view .LVU18
  83 0028 04F12800 		add	r0, r4, #40
  84              	.LVL6:
 894:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_PART_KNOB:
  85              		.loc 1 894 13 is_stmt 1 view .LVU19
  86 002c FBE7     		b	.L1
  87              	.LVL7:
  88              	.L5:
 896:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
  89              		.loc 1 896 13 view .LVU20
 896:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
  90              		.loc 1 896 25 is_stmt 0 view .LVU21
  91 002e 0430     		adds	r0, r0, #4
  92              	.LVL8:
 897:lvgl/src/lv_widgets/lv_cpicker.c ****         default:
  93              		.loc 1 897 13 is_stmt 1 view .LVU22
 902:lvgl/src/lv_widgets/lv_cpicker.c **** }
  94              		.loc 1 902 5 view .LVU23
 902:lvgl/src/lv_widgets/lv_cpicker.c **** }
  95              		.loc 1 902 12 is_stmt 0 view .LVU24
  96 0030 F9E7     		b	.L1
  97              	.L9:
  98 0032 00BF     		.align	2
  99              	.L8:
 100 0034 00000000 		.word	.LC1
 101              		.cfi_endproc
 102              	.LFE483:
 104              		.section	.text.get_angle,"ax",%progbits
 105              		.align	1
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.fpu fpv4-sp-d16
 111              	get_angle:
 112              	.LVL9:
 113              	.LFB489:
 904:lvgl/src/lv_widgets/lv_cpicker.c **** 
 905:lvgl/src/lv_widgets/lv_cpicker.c **** static bool lv_cpicker_hit(lv_obj_t * cpicker, const lv_point_t * p)
 906:lvgl/src/lv_widgets/lv_cpicker.c **** {
 907:lvgl/src/lv_widgets/lv_cpicker.c ****     bool is_point_on_coords = lv_obj_is_point_on_coords(cpicker, p);
 908:lvgl/src/lv_widgets/lv_cpicker.c ****     if(!is_point_on_coords)
ARM GAS  D:\Temp\ccfvNLhk.s 			page 19


 909:lvgl/src/lv_widgets/lv_cpicker.c ****         return false;
 910:lvgl/src/lv_widgets/lv_cpicker.c **** 
 911:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = (lv_cpicker_ext_t *)lv_obj_get_ext_attr(cpicker);
 912:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->type == LV_CPICKER_TYPE_RECT)
 913:lvgl/src/lv_widgets/lv_cpicker.c ****         return true;
 914:lvgl/src/lv_widgets/lv_cpicker.c **** 
 915:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Valid clicks can be only in the circle*/
 916:lvgl/src/lv_widgets/lv_cpicker.c ****     if(_lv_area_is_point_on(&cpicker->coords, p, LV_RADIUS_CIRCLE)) return true;
 917:lvgl/src/lv_widgets/lv_cpicker.c ****     else return false;
 918:lvgl/src/lv_widgets/lv_cpicker.c **** }
 919:lvgl/src/lv_widgets/lv_cpicker.c **** 
 920:lvgl/src/lv_widgets/lv_cpicker.c **** static void next_color_mode(lv_obj_t * cpicker)
 921:lvgl/src/lv_widgets/lv_cpicker.c **** {
 922:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 923:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->color_mode = (ext->color_mode + 1) % 3;
 924:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 925:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_invalidate(cpicker);
 926:lvgl/src/lv_widgets/lv_cpicker.c **** }
 927:lvgl/src/lv_widgets/lv_cpicker.c **** 
 928:lvgl/src/lv_widgets/lv_cpicker.c **** static void refr_knob_pos(lv_obj_t * cpicker)
 929:lvgl/src/lv_widgets/lv_cpicker.c **** {
 930:lvgl/src/lv_widgets/lv_cpicker.c ****     invalidate_knob(cpicker);
 931:lvgl/src/lv_widgets/lv_cpicker.c **** 
 932:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 933:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t w = lv_obj_get_width(cpicker);
 934:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t h = lv_obj_get_height(cpicker);
 935:lvgl/src/lv_widgets/lv_cpicker.c **** 
 936:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->type == LV_CPICKER_TYPE_RECT) {
 937:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t ind_pos = 0;
 938:lvgl/src/lv_widgets/lv_cpicker.c ****         switch(ext->color_mode) {
 939:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 940:lvgl/src/lv_widgets/lv_cpicker.c ****                 ind_pos += (ext->hsv.h * w) / 360;
 941:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 942:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_SATURATION:
 943:lvgl/src/lv_widgets/lv_cpicker.c ****                 ind_pos += (ext->hsv.s * w) / 100;
 944:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 945:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_VALUE:
 946:lvgl/src/lv_widgets/lv_cpicker.c ****                 ind_pos += (ext->hsv.v * w) / 100;
 947:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 948:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 949:lvgl/src/lv_widgets/lv_cpicker.c **** 
 950:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.x = ind_pos;
 951:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = h / 2;
 952:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 953:lvgl/src/lv_widgets/lv_cpicker.c ****     else if(ext->type == LV_CPICKER_TYPE_DISC) {
 954:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_int_t scale_w = lv_obj_get_style_scale_width(cpicker, LV_CPICKER_PART_MAIN);
 955:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t r = (w - scale_w) / 2;
 956:lvgl/src/lv_widgets/lv_cpicker.c ****         uint16_t angle = get_angle(cpicker);
 957:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.x = (((int32_t)r * _lv_trigo_sin(angle)) >> LV_TRIGO_SHIFT);
 958:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = (((int32_t)r * _lv_trigo_sin(angle + 90)) >> LV_TRIGO_SHIFT);
 959:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.x = ext->knob.pos.x + w / 2;
 960:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = ext->knob.pos.y + h / 2;
 961:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 962:lvgl/src/lv_widgets/lv_cpicker.c **** 
 963:lvgl/src/lv_widgets/lv_cpicker.c ****     invalidate_knob(cpicker);
 964:lvgl/src/lv_widgets/lv_cpicker.c **** }
 965:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 20


 966:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_res_t double_click_reset(lv_obj_t * cpicker)
 967:lvgl/src/lv_widgets/lv_cpicker.c **** {
 968:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 969:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_indev_t * indev = lv_indev_get_act();
 970:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Double clicked? Use long press time as double click time out*/
 971:lvgl/src/lv_widgets/lv_cpicker.c ****     if(lv_tick_elaps(ext->last_click_time) < indev->driver.long_press_time) {
 972:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_color_hsv_t hsv_cur;
 973:lvgl/src/lv_widgets/lv_cpicker.c ****         hsv_cur = ext->hsv;
 974:lvgl/src/lv_widgets/lv_cpicker.c **** 
 975:lvgl/src/lv_widgets/lv_cpicker.c ****         switch(ext->color_mode) {
 976:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 977:lvgl/src/lv_widgets/lv_cpicker.c ****                 hsv_cur.h = LV_CPICKER_DEF_HUE;
 978:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 979:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_SATURATION:
 980:lvgl/src/lv_widgets/lv_cpicker.c ****                 hsv_cur.s = LV_CPICKER_DEF_SATURATION;
 981:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 982:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_VALUE:
 983:lvgl/src/lv_widgets/lv_cpicker.c ****                 hsv_cur.v = LV_CPICKER_DEF_VALUE;
 984:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 985:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 986:lvgl/src/lv_widgets/lv_cpicker.c **** 
 987:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_indev_wait_release(indev);
 988:lvgl/src/lv_widgets/lv_cpicker.c **** 
 989:lvgl/src/lv_widgets/lv_cpicker.c ****         if(lv_cpicker_set_hsv(cpicker, hsv_cur)) {
 990:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_res_t res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 991:lvgl/src/lv_widgets/lv_cpicker.c ****             if(res != LV_RES_OK) return res;
 992:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 993:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 994:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->last_click_time = lv_tick_get();
 995:lvgl/src/lv_widgets/lv_cpicker.c **** 
 996:lvgl/src/lv_widgets/lv_cpicker.c ****     return LV_RES_OK;
 997:lvgl/src/lv_widgets/lv_cpicker.c **** }
 998:lvgl/src/lv_widgets/lv_cpicker.c **** 
 999:lvgl/src/lv_widgets/lv_cpicker.c **** static lv_color_t angle_to_mode_color(lv_obj_t * cpicker, uint16_t angle)
1000:lvgl/src/lv_widgets/lv_cpicker.c **** {
1001:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
1002:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_t color;
1003:lvgl/src/lv_widgets/lv_cpicker.c ****     switch(ext->color_mode) {
1004:lvgl/src/lv_widgets/lv_cpicker.c ****         default:
1005:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_COLOR_MODE_HUE:
1006:lvgl/src/lv_widgets/lv_cpicker.c ****             color = lv_color_hsv_to_rgb(angle % 360, ext->hsv.s, ext->hsv.v);
1007:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
1008:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_COLOR_MODE_SATURATION:
1009:lvgl/src/lv_widgets/lv_cpicker.c ****             color = lv_color_hsv_to_rgb(ext->hsv.h, ((angle % 360) * 100) / 360, ext->hsv.v);
1010:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
1011:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_COLOR_MODE_VALUE:
1012:lvgl/src/lv_widgets/lv_cpicker.c ****             color = lv_color_hsv_to_rgb(ext->hsv.h, ext->hsv.s, ((angle % 360) * 100) / 360);
1013:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
1014:lvgl/src/lv_widgets/lv_cpicker.c ****     }
1015:lvgl/src/lv_widgets/lv_cpicker.c ****     return color;
1016:lvgl/src/lv_widgets/lv_cpicker.c **** }
1017:lvgl/src/lv_widgets/lv_cpicker.c **** 
1018:lvgl/src/lv_widgets/lv_cpicker.c **** static uint16_t get_angle(lv_obj_t * cpicker)
1019:lvgl/src/lv_widgets/lv_cpicker.c **** {
 114              		.loc 1 1019 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
ARM GAS  D:\Temp\ccfvNLhk.s 			page 21


 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		.loc 1 1019 1 is_stmt 0 view .LVU26
 119 0000 08B5     		push	{r3, lr}
 120              	.LCFI1:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 3, -8
 123              		.cfi_offset 14, -4
1020:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 124              		.loc 1 1020 5 is_stmt 1 view .LVU27
 125              		.loc 1 1020 30 is_stmt 0 view .LVU28
 126 0002 FFF7FEFF 		bl	lv_obj_get_ext_attr
 127              	.LVL10:
1021:lvgl/src/lv_widgets/lv_cpicker.c ****     uint16_t angle;
 128              		.loc 1 1021 5 is_stmt 1 view .LVU29
1022:lvgl/src/lv_widgets/lv_cpicker.c ****     switch(ext->color_mode) {
 129              		.loc 1 1022 5 view .LVU30
 130              		.loc 1 1022 15 is_stmt 0 view .LVU31
 131 0006 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 132 000a 03F00303 		and	r3, r3, #3
 133              		.loc 1 1022 5 view .LVU32
 134 000e 012B     		cmp	r3, #1
 135 0010 03D0     		beq	.L11
 136 0012 022B     		cmp	r3, #2
 137 0014 0BD0     		beq	.L12
1023:lvgl/src/lv_widgets/lv_cpicker.c ****         default:
1024:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_COLOR_MODE_HUE:
1025:lvgl/src/lv_widgets/lv_cpicker.c ****             angle = ext->hsv.h;
 138              		.loc 1 1025 13 is_stmt 1 view .LVU33
 139              		.loc 1 1025 19 is_stmt 0 view .LVU34
 140 0016 0088     		ldrh	r0, [r0]
 141              	.LVL11:
1026:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 142              		.loc 1 1026 13 is_stmt 1 view .LVU35
 143              	.L13:
1027:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_COLOR_MODE_SATURATION:
1028:lvgl/src/lv_widgets/lv_cpicker.c ****             angle = (ext->hsv.s * 360) / 100;
1029:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
1030:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_COLOR_MODE_VALUE:
1031:lvgl/src/lv_widgets/lv_cpicker.c ****             angle = (ext->hsv.v * 360) / 100 ;
1032:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
1033:lvgl/src/lv_widgets/lv_cpicker.c ****     }
1034:lvgl/src/lv_widgets/lv_cpicker.c ****     return angle;
 144              		.loc 1 1034 5 view .LVU36
1035:lvgl/src/lv_widgets/lv_cpicker.c **** }
 145              		.loc 1 1035 1 is_stmt 0 view .LVU37
 146 0018 08BD     		pop	{r3, pc}
 147              	.LVL12:
 148              	.L11:
1028:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 149              		.loc 1 1028 13 is_stmt 1 view .LVU38
1028:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 150              		.loc 1 1028 30 is_stmt 0 view .LVU39
 151 001a 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
1028:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 152              		.loc 1 1028 33 view .LVU40
 153 001c 4FF4B470 		mov	r0, #360
 154              	.LVL13:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 22


1028:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 155              		.loc 1 1028 33 view .LVU41
 156 0020 00FB03F0 		mul	r0, r0, r3
1028:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 157              		.loc 1 1028 40 view .LVU42
 158 0024 074B     		ldr	r3, .L15
 159 0026 83FB0030 		smull	r3, r0, r3, r0
1028:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 160              		.loc 1 1028 19 view .LVU43
 161 002a 4009     		lsrs	r0, r0, #5
 162              	.LVL14:
1029:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_COLOR_MODE_VALUE:
 163              		.loc 1 1029 13 is_stmt 1 view .LVU44
 164 002c F4E7     		b	.L13
 165              	.LVL15:
 166              	.L12:
1031:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 167              		.loc 1 1031 13 view .LVU45
1031:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 168              		.loc 1 1031 30 is_stmt 0 view .LVU46
 169 002e C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
1031:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 170              		.loc 1 1031 33 view .LVU47
 171 0030 4FF4B470 		mov	r0, #360
 172              	.LVL16:
1031:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 173              		.loc 1 1031 33 view .LVU48
 174 0034 00FB03F0 		mul	r0, r0, r3
1031:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 175              		.loc 1 1031 40 view .LVU49
 176 0038 024B     		ldr	r3, .L15
 177 003a 83FB0030 		smull	r3, r0, r3, r0
1031:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 178              		.loc 1 1031 19 view .LVU50
 179 003e 4009     		lsrs	r0, r0, #5
 180              	.LVL17:
1032:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 181              		.loc 1 1032 13 is_stmt 1 view .LVU51
 182 0040 EAE7     		b	.L13
 183              	.L16:
 184 0042 00BF     		.align	2
 185              	.L15:
 186 0044 1F85EB51 		.word	1374389535
 187              		.cfi_endproc
 188              	.LFE489:
 190              		.section	.text.get_knob_area,"ax",%progbits
 191              		.align	1
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	get_knob_area:
 198              	.LVL18:
 199              	.LFB481:
 634:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 200              		.loc 1 634 1 view -0
 201              		.cfi_startproc
ARM GAS  D:\Temp\ccfvNLhk.s 			page 23


 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 634:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 204              		.loc 1 634 1 is_stmt 0 view .LVU53
 205 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 206              	.LCFI2:
 207              		.cfi_def_cfa_offset 32
 208              		.cfi_offset 4, -32
 209              		.cfi_offset 5, -28
 210              		.cfi_offset 6, -24
 211              		.cfi_offset 7, -20
 212              		.cfi_offset 8, -16
 213              		.cfi_offset 9, -12
 214              		.cfi_offset 10, -8
 215              		.cfi_offset 14, -4
 216 0004 0546     		mov	r5, r0
 217 0006 8846     		mov	r8, r1
 635:lvgl/src/lv_widgets/lv_cpicker.c **** 
 218              		.loc 1 635 5 is_stmt 1 view .LVU54
 635:lvgl/src/lv_widgets/lv_cpicker.c **** 
 219              		.loc 1 635 30 is_stmt 0 view .LVU55
 220 0008 0846     		mov	r0, r1
 221              	.LVL19:
 635:lvgl/src/lv_widgets/lv_cpicker.c **** 
 222              		.loc 1 635 30 view .LVU56
 223 000a FFF7FEFF 		bl	lv_obj_get_ext_attr
 224              	.LVL20:
 635:lvgl/src/lv_widgets/lv_cpicker.c **** 
 225              		.loc 1 635 30 view .LVU57
 226 000e 8146     		mov	r9, r0
 227              	.LVL21:
 638:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->type == LV_CPICKER_TYPE_DISC) {
 228              		.loc 1 638 5 is_stmt 1 view .LVU58
 639:lvgl/src/lv_widgets/lv_cpicker.c ****         r = lv_obj_get_style_scale_width(cpicker, LV_CPICKER_PART_MAIN) / 2;
 229              		.loc 1 639 5 view .LVU59
 639:lvgl/src/lv_widgets/lv_cpicker.c ****         r = lv_obj_get_style_scale_width(cpicker, LV_CPICKER_PART_MAIN) / 2;
 230              		.loc 1 639 18 is_stmt 0 view .LVU60
 231 0010 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 639:lvgl/src/lv_widgets/lv_cpicker.c ****         r = lv_obj_get_style_scale_width(cpicker, LV_CPICKER_PART_MAIN) / 2;
 232              		.loc 1 639 7 view .LVU61
 233 0014 13F0080F 		tst	r3, #8
 234 0018 3FD0     		beq	.L18
 640:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 235              		.loc 1 640 9 is_stmt 1 view .LVU62
 236              	.LVL22:
 237              	.LBB64:
 238              	.LBI64:
 239              		.file 2 "lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h"
   1:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   2:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
   3:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * @file lv_obj_style_dec.h
   4:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
   5:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
   6:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   7:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifndef LV_OBJ_STYLE_DEC_H
   8:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define LV_OBJ_STYLE_DEC_H
   9:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 24


  10:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifdef __cplusplus
  11:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** extern "C" {
  12:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #endif
  13:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  14:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /*********************
  15:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      DEFINES
  16:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *********************/
  17:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  18:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
  19:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Macro to declare the most important style set/get API functions.
  20:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  21:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value of a style property from an object in the object's current state
  22:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -----------------------------------------------------------------------------
  23:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Get the value of a style property from an object in the object's current state.
  24:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Transition animation is taken into account.
  25:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not set in the object's styles check the parent(s) if the property can be 
  26:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If still not found return a default value.
  27:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  28:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t w = lv_obj_get_style_border_width(btn1, LV_BTN_PART_MAIN);`
  29:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  30:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a local style property for an object in a given state
  31:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------------------------
  32:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  33:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_set_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, 2);`
  34:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  35:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get a local style property's value of an object in a given state
  36:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ----------------------------------------------------------------
  37:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Return the best matching property in the given state.
  38:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - E.g. if `state` parameter is LV_STATE_PRESSED | LV_STATE_CHECKED` but the property defined on
  39:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    `LV_STATE_PRESSED` and `LV_STATE_DEFAULT` the best matching state is `LV_STATE_PRESSED`
  40:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    (because it has higher precedence) and it will be returned.
  41:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not found even in `LV_STATE_DEFAULT` `-1` is returned.
  42:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  43:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `//Type of result should be lv_style_int_t/lv_opa_t/lv_color_t/const void * according to th
  44:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t result;`
  45:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_get_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, &result);`
  46:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  47:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  48:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value from a style in a given state
  49:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -------------------------------------------
  50:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - The same rules applies to the return value then for "lv_obj_get_style_local_...()" above
  51:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  52:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `int16_t weight = lv_style_get_border_width(&style1, LV_STATE_PRESSED, &result);`
  53:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  54:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  55:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a value in a style in a given state
  56:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------
  57:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  58:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_set_border_width(&style1, LV_STATE_PRESSED, 2);`
  59:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
  60:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  61:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  62:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  63:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  64:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return (value_type) _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);       
  65:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  66:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 25


  67:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  68:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  69:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  70:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);                    
  71:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  72:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  73:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_scalar(prop_name, func_name, value_type, style_type)                  
  74:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  75:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  76:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  77:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  78:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  79:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_nonscalar(prop_name, func_name, value_type, style_type)               
  80:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  81:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  82:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  83:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  84:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  85:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  86:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  87:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  88:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  89:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  90:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  91:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  92:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  93:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  94:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  95:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  96:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  97:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _LV_OBJ_STYLE_SET_GET_DECLARE(prop_name, func_name, value_type, style_type, scalar)        
  98:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_GET_STYLE_##scalar(prop_name, func_name, value_type, style_type)                          
  99:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_LOCAL_##scalar(prop_name, func_name, value_type, style_type)                    
 100:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_##scalar(prop_name, func_name, value_type, style_type)
 101:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
 102:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(RADIUS, radius, lv_style_int_t, _int, scalar)
 103:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 104:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 105:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_WIDTH, transform_width, lv_style_int_t, _int, scalar)
 106:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_HEIGHT, transform_height, lv_style_int_t, _int, scalar)
 107:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ANGLE, transform_angle, lv_style_int_t, _int, scalar)
 108:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ZOOM, transform_zoom, lv_style_int_t, _int, scalar)
 109:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OPA_SCALE, opa_scale, lv_opa_t, _opa, scalar)
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_TOP, pad_top, lv_style_int_t, _int, scalar)
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 115:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 116:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_BOTTOM, margin_bottom, lv_style_int_t, _int, scalar)
 117:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_LEFT, margin_left, lv_style_int_t, _int, scalar)
 118:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_RIGHT, margin_right, lv_style_int_t, _int, scalar)
 119:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_BLEND_MODE, bg_blend_mode, lv_blend_mode_t, _int, scalar)
 120:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_MAIN_STOP, bg_main_stop, lv_style_int_t, _int, scalar)
 121:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_STOP, bg_grad_stop, lv_style_int_t, _int, scalar)
 122:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_DIR, bg_grad_dir, lv_grad_dir_t, _int, scalar)
 123:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_COLOR, bg_color, lv_color_t, _color, nonscalar)
ARM GAS  D:\Temp\ccfvNLhk.s 			page 26


 124:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_COLOR, bg_grad_color, lv_color_t, _color, nonscalar)
 125:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_OPA, bg_opa, lv_opa_t, _opa, scalar)
 126:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_WIDTH, border_width, lv_style_int_t, _int, scalar)
 127:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_SIDE, border_side, lv_border_side_t, _int, scalar)
 128:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_BLEND_MODE, border_blend_mode, lv_blend_mode_t, _int, scalar)
 129:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_POST, border_post, bool, _int, scalar)
 130:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_COLOR, border_color, lv_color_t, _color, nonscalar)
 131:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_OPA, border_opa, lv_opa_t, _opa, scalar)
 132:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_WIDTH, outline_width, lv_style_int_t, _int, scalar)
 133:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_PAD, outline_pad, lv_style_int_t, _int, scalar)
 134:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_BLEND_MODE, outline_blend_mode, lv_blend_mode_t, _int, scalar
 135:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_COLOR, outline_color, lv_color_t, _color, nonscalar)
 136:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_OPA, outline_opa, lv_opa_t, _opa, scalar)
 137:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_WIDTH, shadow_width, lv_style_int_t, _int, scalar)
 138:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_X, shadow_ofs_x, lv_style_int_t, _int, scalar)
 139:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_Y, shadow_ofs_y, lv_style_int_t, _int, scalar)
 140:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_SPREAD, shadow_spread, lv_style_int_t, _int, scalar)
 141:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_BLEND_MODE, shadow_blend_mode, lv_blend_mode_t, _int, scalar)
 142:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_COLOR, shadow_color, lv_color_t, _color, nonscalar)
 143:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OPA, shadow_opa, lv_opa_t, _opa, scalar)
 144:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_REPEAT, pattern_repeat, bool, _int, scalar)
 145:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_BLEND_MODE, pattern_blend_mode, lv_blend_mode_t, _int, scalar
 146:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR, pattern_recolor, lv_color_t, _color, nonscalar)
 147:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_OPA, pattern_opa, lv_opa_t, _opa, scalar)
 148:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR_OPA, pattern_recolor_opa, lv_opa_t, _opa, scalar)
 149:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_IMAGE, pattern_image, const void *, _ptr, scalar)
 150:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LETTER_SPACE, value_letter_space, lv_style_int_t, _int, scalar)
 151:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LINE_SPACE, value_line_space, lv_style_int_t, _int, scalar)
 152:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_BLEND_MODE, value_blend_mode, lv_blend_mode_t, _int, scalar)
 153:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_X, value_ofs_x, lv_style_int_t, _int, scalar)
 154:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_Y, value_ofs_y, lv_style_int_t, _int, scalar)
 155:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_ALIGN, value_align, lv_align_t, _int, scalar)
 156:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_COLOR, value_color, lv_color_t, _color, nonscalar)
 157:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OPA, value_opa, lv_opa_t, _opa, scalar)
 158:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_FONT, value_font, const lv_font_t *, _ptr, scalar)
 159:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_STR, value_str, const char *, _ptr, scalar)
 160:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LETTER_SPACE, text_letter_space, lv_style_int_t, _int, scalar)
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LINE_SPACE, text_line_space, lv_style_int_t, _int, scalar)
 162:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 163:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_BLEND_MODE, text_blend_mode, lv_blend_mode_t, _int, scalar)
 164:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_COLOR, text_color, lv_color_t, _color, nonscalar)
 165:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_SEL_COLOR, text_sel_color, lv_color_t, _color, nonscalar)
 166:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_SEL_BG_COLOR, text_sel_bg_color, lv_color_t, _color, nonscalar)
 167:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_OPA, text_opa, lv_opa_t, _opa, scalar)
 168:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_FONT, text_font, const lv_font_t *, _ptr, scalar)
 169:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(LINE_WIDTH, line_width, lv_style_int_t, _int, scalar)
 170:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(LINE_BLEND_MODE, line_blend_mode, lv_blend_mode_t, _int, scalar)
 171:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(LINE_DASH_WIDTH, line_dash_width, lv_style_int_t, _int, scalar)
 172:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(LINE_DASH_GAP, line_dash_gap, lv_style_int_t, _int, scalar)
 173:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(LINE_ROUNDED, line_rounded, bool, _int, scalar)
 174:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(LINE_COLOR, line_color, lv_color_t, _color, nonscalar)
 175:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(LINE_OPA, line_opa, lv_opa_t, _opa, scalar)
 176:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(IMAGE_BLEND_MODE, image_blend_mode, lv_blend_mode_t, _int, scalar)
 177:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(IMAGE_RECOLOR, image_recolor, lv_color_t, _color, nonscalar)
 178:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(IMAGE_OPA, image_opa, lv_opa_t, _opa, scalar)
 179:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(IMAGE_RECOLOR_OPA, image_recolor_opa, lv_opa_t, _opa, scalar)
 180:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSITION_TIME, transition_time, lv_style_int_t, _int, scalar)
ARM GAS  D:\Temp\ccfvNLhk.s 			page 27


 181:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSITION_DELAY, transition_delay, lv_style_int_t, _int, scalar)
 182:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSITION_PROP_1, transition_prop_1, lv_style_int_t, _int, scalar)
 183:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSITION_PROP_2, transition_prop_2, lv_style_int_t, _int, scalar)
 184:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSITION_PROP_3, transition_prop_3, lv_style_int_t, _int, scalar)
 185:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSITION_PROP_4, transition_prop_4, lv_style_int_t, _int, scalar)
 186:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSITION_PROP_5, transition_prop_5, lv_style_int_t, _int, scalar)
 187:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSITION_PROP_6, transition_prop_6, lv_style_int_t, _int, scalar)
 188:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #if LV_USE_ANIMATION
 189:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSITION_PATH, transition_path, lv_anim_path_t *, _ptr, scalar)
 190:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #else
 191:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /*For compatibility*/
 192:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSITION_PATH, transition_path, const void *, _ptr, scalar)
 193:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #endif
 194:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SCALE_WIDTH, scale_width, lv_style_int_t, _int, scalar)
 240              		.loc 2 194 1 view .LVU63
 241              	.LBB65:
 242              		.loc 2 194 1 view .LVU64
 243 001a C022     		movs	r2, #192
 244 001c 0021     		movs	r1, #0
 245 001e 4046     		mov	r0, r8
 246              	.LVL23:
 247              		.loc 2 194 1 is_stmt 0 view .LVU65
 248 0020 FFF7FEFF 		bl	_lv_obj_get_style_int
 249              	.LVL24:
 250              		.loc 2 194 1 view .LVU66
 251              	.LBE65:
 252              	.LBE64:
 640:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 253              		.loc 1 640 11 view .LVU67
 254 0024 00EBD070 		add	r0, r0, r0, lsr #31
 255 0028 C0F34F04 		ubfx	r4, r0, #1, #16
 256              	.LVL25:
 257              	.L19:
 647:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_style_int_t right = lv_obj_get_style_pad_right(cpicker, LV_CPICKER_PART_KNOB);
 258              		.loc 1 647 5 is_stmt 1 view .LVU68
 259              	.LBB66:
 260              	.LBI66:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 261              		.loc 2 112 1 view .LVU69
 262              	.LBB67:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 263              		.loc 2 112 1 view .LVU70
 264 002c 1222     		movs	r2, #18
 265 002e 0121     		movs	r1, #1
 266 0030 4046     		mov	r0, r8
 267 0032 FFF7FEFF 		bl	_lv_obj_get_style_int
 268              	.LVL26:
 269 0036 8246     		mov	r10, r0
 270              	.LVL27:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 271              		.loc 2 112 1 is_stmt 0 view .LVU71
 272              	.LBE67:
 273              	.LBE66:
 648:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_style_int_t top = lv_obj_get_style_pad_top(cpicker, LV_CPICKER_PART_KNOB);
 274              		.loc 1 648 5 is_stmt 1 view .LVU72
 275              	.LBB68:
 276              	.LBI68:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 28


 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 277              		.loc 2 113 1 view .LVU73
 278              	.LBB69:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 279              		.loc 2 113 1 view .LVU74
 280 0038 1322     		movs	r2, #19
 281 003a 0121     		movs	r1, #1
 282 003c 4046     		mov	r0, r8
 283 003e FFF7FEFF 		bl	_lv_obj_get_style_int
 284              	.LVL28:
 285 0042 0746     		mov	r7, r0
 286              	.LVL29:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 287              		.loc 2 113 1 is_stmt 0 view .LVU75
 288              	.LBE69:
 289              	.LBE68:
 649:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_style_int_t bottom = lv_obj_get_style_pad_bottom(cpicker, LV_CPICKER_PART_KNOB);
 290              		.loc 1 649 5 is_stmt 1 view .LVU76
 291              	.LBB70:
 292              	.LBI70:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 293              		.loc 2 110 1 view .LVU77
 294              	.LBB71:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 295              		.loc 2 110 1 view .LVU78
 296 0044 1022     		movs	r2, #16
 297 0046 0121     		movs	r1, #1
 298 0048 4046     		mov	r0, r8
 299 004a FFF7FEFF 		bl	_lv_obj_get_style_int
 300              	.LVL30:
 301 004e 0646     		mov	r6, r0
 302              	.LVL31:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 303              		.loc 2 110 1 is_stmt 0 view .LVU79
 304              	.LBE71:
 305              	.LBE70:
 650:lvgl/src/lv_widgets/lv_cpicker.c **** 
 306              		.loc 1 650 5 is_stmt 1 view .LVU80
 307              	.LBB72:
 308              	.LBI72:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 309              		.loc 2 111 1 view .LVU81
 310              	.LBB73:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 311              		.loc 2 111 1 view .LVU82
 312 0050 1122     		movs	r2, #17
 313 0052 0121     		movs	r1, #1
 314 0054 4046     		mov	r0, r8
 315 0056 FFF7FEFF 		bl	_lv_obj_get_style_int
 316              	.LVL32:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 317              		.loc 2 111 1 is_stmt 0 view .LVU83
 318              	.LBE73:
 319              	.LBE72:
 652:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.x1 = cpicker->coords.x1 + ext->knob.pos.x - r - left;
 320              		.loc 1 652 5 is_stmt 1 view .LVU84
 653:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y1 = cpicker->coords.y1 + ext->knob.pos.y - r - right;
ARM GAS  D:\Temp\ccfvNLhk.s 			page 29


 321              		.loc 1 653 5 view .LVU85
 653:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y1 = cpicker->coords.y1 + ext->knob.pos.y - r - right;
 322              		.loc 1 653 35 is_stmt 0 view .LVU86
 323 005a B8F81020 		ldrh	r2, [r8, #16]
 653:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y1 = cpicker->coords.y1 + ext->knob.pos.y - r - right;
 324              		.loc 1 653 54 view .LVU87
 325 005e B9F80C30 		ldrh	r3, [r9, #12]
 653:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y1 = cpicker->coords.y1 + ext->knob.pos.y - r - right;
 326              		.loc 1 653 39 view .LVU88
 327 0062 1A44     		add	r2, r2, r3
 328 0064 92B2     		uxth	r2, r2
 653:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y1 = cpicker->coords.y1 + ext->knob.pos.y - r - right;
 329              		.loc 1 653 57 view .LVU89
 330 0066 131B     		subs	r3, r2, r4
 331 0068 9BB2     		uxth	r3, r3
 653:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y1 = cpicker->coords.y1 + ext->knob.pos.y - r - right;
 332              		.loc 1 653 61 view .LVU90
 333 006a A3EB0A03 		sub	r3, r3, r10
 653:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y1 = cpicker->coords.y1 + ext->knob.pos.y - r - right;
 334              		.loc 1 653 18 view .LVU91
 335 006e 2B80     		strh	r3, [r5]	@ movhi
 654:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.x2 = cpicker->coords.x1 + ext->knob.pos.x + r + top;
 336              		.loc 1 654 5 is_stmt 1 view .LVU92
 654:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.x2 = cpicker->coords.x1 + ext->knob.pos.x + r + top;
 337              		.loc 1 654 35 is_stmt 0 view .LVU93
 338 0070 B8F81230 		ldrh	r3, [r8, #18]
 654:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.x2 = cpicker->coords.x1 + ext->knob.pos.x + r + top;
 339              		.loc 1 654 54 view .LVU94
 340 0074 B9F80E10 		ldrh	r1, [r9, #14]
 654:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.x2 = cpicker->coords.x1 + ext->knob.pos.x + r + top;
 341              		.loc 1 654 39 view .LVU95
 342 0078 0B44     		add	r3, r3, r1
 343 007a 9BB2     		uxth	r3, r3
 654:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.x2 = cpicker->coords.x1 + ext->knob.pos.x + r + top;
 344              		.loc 1 654 57 view .LVU96
 345 007c 191B     		subs	r1, r3, r4
 346 007e 89B2     		uxth	r1, r1
 654:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.x2 = cpicker->coords.x1 + ext->knob.pos.x + r + top;
 347              		.loc 1 654 61 view .LVU97
 348 0080 CF1B     		subs	r7, r1, r7
 349              	.LVL33:
 654:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.x2 = cpicker->coords.x1 + ext->knob.pos.x + r + top;
 350              		.loc 1 654 18 view .LVU98
 351 0082 6F80     		strh	r7, [r5, #2]	@ movhi
 655:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y2 = cpicker->coords.y1 + ext->knob.pos.y + r + bottom;
 352              		.loc 1 655 5 is_stmt 1 view .LVU99
 655:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y2 = cpicker->coords.y1 + ext->knob.pos.y + r + bottom;
 353              		.loc 1 655 57 is_stmt 0 view .LVU100
 354 0084 2244     		add	r2, r2, r4
 655:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y2 = cpicker->coords.y1 + ext->knob.pos.y + r + bottom;
 355              		.loc 1 655 61 view .LVU101
 356 0086 16FA82F6 		uxtah	r6, r6, r2
 357              	.LVL34:
 655:lvgl/src/lv_widgets/lv_cpicker.c ****     knob_area.y2 = cpicker->coords.y1 + ext->knob.pos.y + r + bottom;
 358              		.loc 1 655 18 view .LVU102
 359 008a AE80     		strh	r6, [r5, #4]	@ movhi
 656:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 30


 360              		.loc 1 656 5 is_stmt 1 view .LVU103
 656:lvgl/src/lv_widgets/lv_cpicker.c **** 
 361              		.loc 1 656 57 is_stmt 0 view .LVU104
 362 008c 2344     		add	r3, r3, r4
 656:lvgl/src/lv_widgets/lv_cpicker.c **** 
 363              		.loc 1 656 61 view .LVU105
 364 008e 10FA83F3 		uxtah	r3, r0, r3
 656:lvgl/src/lv_widgets/lv_cpicker.c **** 
 365              		.loc 1 656 18 view .LVU106
 366 0092 EB80     		strh	r3, [r5, #6]	@ movhi
 658:lvgl/src/lv_widgets/lv_cpicker.c **** }
 367              		.loc 1 658 5 is_stmt 1 view .LVU107
 659:lvgl/src/lv_widgets/lv_cpicker.c **** 
 368              		.loc 1 659 1 is_stmt 0 view .LVU108
 369 0094 2846     		mov	r0, r5
 370              	.LVL35:
 659:lvgl/src/lv_widgets/lv_cpicker.c **** 
 371              		.loc 1 659 1 view .LVU109
 372 0096 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 373              	.LVL36:
 374              	.L18:
 642:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t h = lv_obj_get_height(cpicker);
 375              		.loc 1 642 10 is_stmt 1 view .LVU110
 376              	.LBB74:
 643:lvgl/src/lv_widgets/lv_cpicker.c ****         r = h / 2;
 377              		.loc 1 643 9 view .LVU111
 643:lvgl/src/lv_widgets/lv_cpicker.c ****         r = h / 2;
 378              		.loc 1 643 24 is_stmt 0 view .LVU112
 379 009a 4046     		mov	r0, r8
 380              	.LVL37:
 643:lvgl/src/lv_widgets/lv_cpicker.c ****         r = h / 2;
 381              		.loc 1 643 24 view .LVU113
 382 009c FFF7FEFF 		bl	lv_obj_get_height
 383              	.LVL38:
 644:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 384              		.loc 1 644 9 is_stmt 1 view .LVU114
 644:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 385              		.loc 1 644 11 is_stmt 0 view .LVU115
 386 00a0 00EBD070 		add	r0, r0, r0, lsr #31
 387              	.LVL39:
 644:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 388              		.loc 1 644 11 view .LVU116
 389 00a4 C0F34F04 		ubfx	r4, r0, #1, #16
 390              	.LVL40:
 644:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 391              		.loc 1 644 11 view .LVU117
 392 00a8 C0E7     		b	.L19
 393              	.LBE74:
 394              		.cfi_endproc
 395              	.LFE481:
 397              		.section	.text.angle_to_mode_color,"ax",%progbits
 398              		.align	1
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv4-sp-d16
 404              	angle_to_mode_color:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 31


 405              	.LVL41:
 406              	.LFB488:
1000:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 407              		.loc 1 1000 1 is_stmt 1 view -0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
1000:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 411              		.loc 1 1000 1 is_stmt 0 view .LVU119
 412 0000 10B5     		push	{r4, lr}
 413              	.LCFI3:
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 4, -8
 416              		.cfi_offset 14, -4
 417 0002 0C46     		mov	r4, r1
1001:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_t color;
 418              		.loc 1 1001 5 is_stmt 1 view .LVU120
1001:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_t color;
 419              		.loc 1 1001 30 is_stmt 0 view .LVU121
 420 0004 FFF7FEFF 		bl	lv_obj_get_ext_attr
 421              	.LVL42:
1002:lvgl/src/lv_widgets/lv_cpicker.c ****     switch(ext->color_mode) {
 422              		.loc 1 1002 5 is_stmt 1 view .LVU122
1003:lvgl/src/lv_widgets/lv_cpicker.c ****         default:
 423              		.loc 1 1003 5 view .LVU123
1003:lvgl/src/lv_widgets/lv_cpicker.c ****         default:
 424              		.loc 1 1003 15 is_stmt 0 view .LVU124
 425 0008 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 426 000c 03F00303 		and	r3, r3, #3
1003:lvgl/src/lv_widgets/lv_cpicker.c ****         default:
 427              		.loc 1 1003 5 view .LVU125
 428 0010 012B     		cmp	r3, #1
 429 0012 10D0     		beq	.L22
 430 0014 022B     		cmp	r3, #2
 431 0016 26D0     		beq	.L23
1006:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 432              		.loc 1 1006 13 is_stmt 1 view .LVU126
1006:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 433              		.loc 1 1006 21 is_stmt 0 view .LVU127
 434 0018 E208     		lsrs	r2, r4, #3
 435 001a 1F4B     		ldr	r3, .L26
 436 001c A3FB0232 		umull	r3, r2, r3, r2
 437 0020 9208     		lsrs	r2, r2, #2
 438 0022 4FF4B473 		mov	r3, #360
 439 0026 03FB1244 		mls	r4, r3, r2, r4
 440 002a C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
 441 002c 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 442 002e A0B2     		uxth	r0, r4
 443              	.LVL43:
1006:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 444              		.loc 1 1006 21 view .LVU128
 445 0030 FFF7FEFF 		bl	lv_color_hsv_to_rgb
 446              	.LVL44:
1007:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_COLOR_MODE_SATURATION:
 447              		.loc 1 1007 13 is_stmt 1 view .LVU129
 448              	.L24:
1015:lvgl/src/lv_widgets/lv_cpicker.c **** }
ARM GAS  D:\Temp\ccfvNLhk.s 			page 32


 449              		.loc 1 1015 5 view .LVU130
1016:lvgl/src/lv_widgets/lv_cpicker.c **** 
 450              		.loc 1 1016 1 is_stmt 0 view .LVU131
 451 0034 10BD     		pop	{r4, pc}
 452              	.LVL45:
 453              	.L22:
1009:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 454              		.loc 1 1009 13 is_stmt 1 view .LVU132
1009:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 455              		.loc 1 1009 61 is_stmt 0 view .LVU133
 456 0036 E208     		lsrs	r2, r4, #3
 457 0038 174B     		ldr	r3, .L26
 458 003a A3FB0232 		umull	r3, r2, r3, r2
 459 003e 9208     		lsrs	r2, r2, #2
 460 0040 4FF4B471 		mov	r1, #360
 461 0044 01FB1242 		mls	r2, r1, r2, r4
 462 0048 92B2     		uxth	r2, r2
1009:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 463              		.loc 1 1009 68 view .LVU134
 464 004a 6421     		movs	r1, #100
 465 004c 01FB02F2 		mul	r2, r1, r2
1009:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 466              		.loc 1 1009 75 view .LVU135
 467 0050 1249     		ldr	r1, .L26+4
 468 0052 81FB0231 		smull	r3, r1, r1, r2
 469 0056 1144     		add	r1, r1, r2
1009:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 470              		.loc 1 1009 21 view .LVU136
 471 0058 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
 472 005a C1F30721 		ubfx	r1, r1, #8, #8
 473 005e 0088     		ldrh	r0, [r0]
 474              	.LVL46:
1009:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 475              		.loc 1 1009 21 view .LVU137
 476 0060 FFF7FEFF 		bl	lv_color_hsv_to_rgb
 477              	.LVL47:
1010:lvgl/src/lv_widgets/lv_cpicker.c ****         case LV_CPICKER_COLOR_MODE_VALUE:
 478              		.loc 1 1010 13 is_stmt 1 view .LVU138
 479 0064 E6E7     		b	.L24
 480              	.LVL48:
 481              	.L23:
1012:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 482              		.loc 1 1012 13 view .LVU139
1012:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 483              		.loc 1 1012 73 is_stmt 0 view .LVU140
 484 0066 E208     		lsrs	r2, r4, #3
 485 0068 0B4B     		ldr	r3, .L26
 486 006a A3FB0232 		umull	r3, r2, r3, r2
 487 006e 9208     		lsrs	r2, r2, #2
 488 0070 4FF4B473 		mov	r3, #360
 489 0074 03FB1242 		mls	r2, r3, r2, r4
 490 0078 92B2     		uxth	r2, r2
1012:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 491              		.loc 1 1012 80 view .LVU141
 492 007a 6423     		movs	r3, #100
 493 007c 03FB02F3 		mul	r3, r3, r2
1012:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
ARM GAS  D:\Temp\ccfvNLhk.s 			page 33


 494              		.loc 1 1012 87 view .LVU142
 495 0080 064A     		ldr	r2, .L26+4
 496 0082 82FB0312 		smull	r1, r2, r2, r3
 497 0086 1A44     		add	r2, r2, r3
1012:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 498              		.loc 1 1012 21 view .LVU143
 499 0088 C2F30722 		ubfx	r2, r2, #8, #8
 500 008c 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 501 008e 0088     		ldrh	r0, [r0]
 502              	.LVL49:
1012:lvgl/src/lv_widgets/lv_cpicker.c ****             break;
 503              		.loc 1 1012 21 view .LVU144
 504 0090 FFF7FEFF 		bl	lv_color_hsv_to_rgb
 505              	.LVL50:
1013:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 506              		.loc 1 1013 13 is_stmt 1 view .LVU145
 507 0094 CEE7     		b	.L24
 508              	.L27:
 509 0096 00BF     		.align	2
 510              	.L26:
 511 0098 176CC116 		.word	381774871
 512 009c B7600BB6 		.word	-1240768329
 513              		.cfi_endproc
 514              	.LFE488:
 516              		.section	.text.draw_rect_grad,"ax",%progbits
 517              		.align	1
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	draw_rect_grad:
 524              	.LVL51:
 525              	.LFB478:
 546:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect_dsc_t bg_dsc;
 526              		.loc 1 546 1 view -0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 104
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 546:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect_dsc_t bg_dsc;
 530              		.loc 1 546 1 is_stmt 0 view .LVU147
 531 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 532              	.LCFI4:
 533              		.cfi_def_cfa_offset 28
 534              		.cfi_offset 4, -28
 535              		.cfi_offset 5, -24
 536              		.cfi_offset 6, -20
 537              		.cfi_offset 7, -16
 538              		.cfi_offset 8, -12
 539              		.cfi_offset 9, -8
 540              		.cfi_offset 14, -4
 541 0004 9BB0     		sub	sp, sp, #108
 542              	.LCFI5:
 543              		.cfi_def_cfa_offset 136
 544 0006 0646     		mov	r6, r0
 545 0008 8846     		mov	r8, r1
 547:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect_dsc_init(&bg_dsc);
 546              		.loc 1 547 5 is_stmt 1 view .LVU148
ARM GAS  D:\Temp\ccfvNLhk.s 			page 34


 548:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_init_draw_rect_dsc(cpicker, LV_CPICKER_PART_MAIN, &bg_dsc);
 547              		.loc 1 548 5 view .LVU149
 548 000a 05A8     		add	r0, sp, #20
 549              	.LVL52:
 548:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_init_draw_rect_dsc(cpicker, LV_CPICKER_PART_MAIN, &bg_dsc);
 550              		.loc 1 548 5 is_stmt 0 view .LVU150
 551 000c FFF7FEFF 		bl	lv_draw_rect_dsc_init
 552              	.LVL53:
 549:lvgl/src/lv_widgets/lv_cpicker.c **** 
 553              		.loc 1 549 5 is_stmt 1 view .LVU151
 554 0010 05AA     		add	r2, sp, #20
 555 0012 0021     		movs	r1, #0
 556 0014 3046     		mov	r0, r6
 557 0016 FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 558              	.LVL54:
 551:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_get_coords(cpicker, &grad_area);
 559              		.loc 1 551 5 view .LVU152
 552:lvgl/src/lv_widgets/lv_cpicker.c **** 
 560              		.loc 1 552 5 view .LVU153
 561 001a 03A9     		add	r1, sp, #12
 562 001c 3046     		mov	r0, r6
 563 001e FFF7FEFF 		bl	lv_obj_get_coords
 564              	.LVL55:
 554:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t h = lv_obj_get_height(cpicker);
 565              		.loc 1 554 5 view .LVU154
 554:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t h = lv_obj_get_height(cpicker);
 566              		.loc 1 554 14 is_stmt 0 view .LVU155
 567 0022 BDF91430 		ldrsh	r3, [sp, #20]
 554:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t h = lv_obj_get_height(cpicker);
 568              		.loc 1 554 7 view .LVU156
 569 0026 002B     		cmp	r3, #0
 570 0028 5FD1     		bne	.L36
 571              	.L29:
 580:lvgl/src/lv_widgets/lv_cpicker.c ****     if(grad_w < 1) return;
 572              		.loc 1 580 5 is_stmt 1 view .LVU157
 573              	.LVL56:
 574              	.LBB75:
 575              	.LBI75:
 576              		.file 3 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_area.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @file lv_area.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_AREA_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <string.h>
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdbool.h>
ARM GAS  D:\Temp\ccfvNLhk.s 			page 35


  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdint.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "lv_mem.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      DEFINES
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*To avoid overflow don't let the max ranges (reduce with 1000) */
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - 1000))
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      TYPEDEFS
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Represents a point on the screen.
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x;
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y;
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_point_t;
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Represents an area of the screen. */
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x1;
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y1;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x2;
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y2;
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_area_t;
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Alignments */
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** enum {
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_CENTER = 0,
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_LEFT,
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_MID,
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_RIGHT,
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_LEFT,
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_MID,
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_RIGHT,
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_LEFT_MID,
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_RIGHT_MID,
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** };
ARM GAS  D:\Temp\ccfvNLhk.s 			page 36


  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef uint8_t lv_align_t;
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * GLOBAL PROTOTYPES
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Initialize an area
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x1 left coordinate of the area
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y1 top coordinate of the area
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x2 right coordinate of the area
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y2 bottom coordinate of the area
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Copy an area
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param dest pointer to the destination area
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param src pointer to the source area
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     _lv_memcpy_small(dest, src, sizeof(lv_area_t));
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** }
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Get the width of an area
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 577              		.loc 3 107 26 view .LVU158
 578              	.LBB76:
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 579              		.loc 3 109 5 view .LVU159
 580              		.loc 3 109 31 is_stmt 0 view .LVU160
 581 002a BDF81030 		ldrh	r3, [sp, #16]
 582              		.loc 3 109 44 view .LVU161
 583 002e BDF80C20 		ldrh	r2, [sp, #12]
 584              		.loc 3 109 36 view .LVU162
 585 0032 9B1A     		subs	r3, r3, r2
 586 0034 9BB2     		uxth	r3, r3
 587              		.loc 3 109 49 view .LVU163
 588 0036 0133     		adds	r3, r3, #1
 589              		.loc 3 109 12 view .LVU164
 590 0038 1BB2     		sxth	r3, r3
 591              	.LVL57:
 592              		.loc 3 109 12 view .LVU165
 593              	.LBE76:
 594              	.LBE75:
 581:lvgl/src/lv_widgets/lv_cpicker.c ****     uint16_t i_step = LV_MATH_MAX(LV_CPICKER_DEF_QF, 360 / grad_w);
 595              		.loc 1 581 5 is_stmt 1 view .LVU166
 581:lvgl/src/lv_widgets/lv_cpicker.c ****     uint16_t i_step = LV_MATH_MAX(LV_CPICKER_DEF_QF, 360 / grad_w);
 596              		.loc 1 581 7 is_stmt 0 view .LVU167
 597 003a 002B     		cmp	r3, #0
ARM GAS  D:\Temp\ccfvNLhk.s 			page 37


 598 003c 40F39880 		ble	.L28
 582:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.radius = 0;
 599              		.loc 1 582 5 is_stmt 1 view .LVU168
 582:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.radius = 0;
 600              		.loc 1 582 23 is_stmt 0 view .LVU169
 601 0040 1D46     		mov	r5, r3
 602 0042 4FF4B477 		mov	r7, #360
 603 0046 97FBF3F7 		sdiv	r7, r7, r3
 604 004a 032F     		cmp	r7, #3
 605 004c B8BF     		it	lt
 606 004e 0327     		movlt	r7, #3
 582:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.radius = 0;
 607              		.loc 1 582 14 view .LVU170
 608 0050 1FFA87F9 		uxth	r9, r7
 609              	.LVL58:
 583:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.border_width = 0;
 610              		.loc 1 583 5 is_stmt 1 view .LVU171
 583:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.border_width = 0;
 611              		.loc 1 583 19 is_stmt 0 view .LVU172
 612 0054 0024     		movs	r4, #0
 613 0056 ADF81440 		strh	r4, [sp, #20]	@ movhi
 584:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.shadow_width = 0;
 614              		.loc 1 584 5 is_stmt 1 view .LVU173
 584:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.shadow_width = 0;
 615              		.loc 1 584 25 is_stmt 0 view .LVU174
 616 005a ADF82440 		strh	r4, [sp, #36]	@ movhi
 585:lvgl/src/lv_widgets/lv_cpicker.c **** 
 617              		.loc 1 585 5 is_stmt 1 view .LVU175
 585:lvgl/src/lv_widgets/lv_cpicker.c **** 
 618              		.loc 1 585 25 is_stmt 0 view .LVU176
 619 005e ADF83640 		strh	r4, [sp, #54]	@ movhi
 587:lvgl/src/lv_widgets/lv_cpicker.c ****     for(i = 0; i < 360; i += i_step) {
 620              		.loc 1 587 5 is_stmt 1 view .LVU177
 588:lvgl/src/lv_widgets/lv_cpicker.c ****         bg_dsc.bg_color = angle_to_mode_color(cpicker, i);
 621              		.loc 1 588 5 view .LVU178
 622              	.LVL59:
 623              	.L33:
 588:lvgl/src/lv_widgets/lv_cpicker.c ****         bg_dsc.bg_color = angle_to_mode_color(cpicker, i);
 624              		.loc 1 588 5 is_stmt 0 discriminator 1 view .LVU179
 625 0062 B4F5B47F 		cmp	r4, #360
 626 0066 80F08380 		bcs	.L28
 627              	.LBB77:
 589:lvgl/src/lv_widgets/lv_cpicker.c **** 
 628              		.loc 1 589 9 is_stmt 1 discriminator 3 view .LVU180
 589:lvgl/src/lv_widgets/lv_cpicker.c **** 
 629              		.loc 1 589 27 is_stmt 0 discriminator 3 view .LVU181
 630 006a 2146     		mov	r1, r4
 631 006c 3046     		mov	r0, r6
 632 006e FFF7FEFF 		bl	angle_to_mode_color
 633              	.LVL60:
 634 0072 ADF81600 		strh	r0, [sp, #22]	@ movhi
 592:lvgl/src/lv_widgets/lv_cpicker.c **** 
 635              		.loc 1 592 9 is_stmt 1 discriminator 3 view .LVU182
 595:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t xi2 = ((i + i_step) * grad_w) / 360;
 636              		.loc 1 595 9 discriminator 3 view .LVU183
 595:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t xi2 = ((i + i_step) * grad_w) / 360;
 637              		.loc 1 595 28 is_stmt 0 discriminator 3 view .LVU184
ARM GAS  D:\Temp\ccfvNLhk.s 			page 38


 638 0076 04FB05FC 		mul	ip, r4, r5
 595:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t xi2 = ((i + i_step) * grad_w) / 360;
 639              		.loc 1 595 38 discriminator 3 view .LVU185
 640 007a 3F49     		ldr	r1, .L37
 641 007c 81FB0C30 		smull	r3, r0, r1, ip
 642 0080 6044     		add	r0, r0, ip
 643 0082 4FEAEC7C 		asr	ip, ip, #31
 644 0086 CCEB2020 		rsb	r0, ip, r0, asr #8
 645              	.LVL61:
 596:lvgl/src/lv_widgets/lv_cpicker.c **** 
 646              		.loc 1 596 9 is_stmt 1 discriminator 3 view .LVU186
 647 008a 1FFA87FC 		uxth	ip, r7
 596:lvgl/src/lv_widgets/lv_cpicker.c **** 
 648              		.loc 1 596 30 is_stmt 0 discriminator 3 view .LVU187
 649 008e 04EB0C03 		add	r3, r4, ip
 596:lvgl/src/lv_widgets/lv_cpicker.c **** 
 650              		.loc 1 596 40 discriminator 3 view .LVU188
 651 0092 03FB05F3 		mul	r3, r3, r5
 596:lvgl/src/lv_widgets/lv_cpicker.c **** 
 652              		.loc 1 596 50 discriminator 3 view .LVU189
 653 0096 81FB0321 		smull	r2, r1, r1, r3
 654 009a 1944     		add	r1, r1, r3
 655 009c DB17     		asrs	r3, r3, #31
 656 009e C3EB2123 		rsb	r3, r3, r1, asr #8
 657              	.LVL62:
 598:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.y1 = grad_area.y1;
 658              		.loc 1 598 9 is_stmt 1 discriminator 3 view .LVU190
 598:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.y1 = grad_area.y1;
 659              		.loc 1 598 24 is_stmt 0 discriminator 3 view .LVU191
 660 00a2 BDF90CE0 		ldrsh	lr, [sp, #12]
 661 00a6 05EB0E01 		add	r1, r5, lr
 662 00aa A1EB0C02 		sub	r2, r1, ip
 663 00ae 0EFA80F0 		sxtah	r0, lr, r0
 664              	.LVL63:
 598:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.y1 = grad_area.y1;
 665              		.loc 1 598 24 discriminator 3 view .LVU192
 666 00b2 9042     		cmp	r0, r2
 667 00b4 A8BF     		it	ge
 668 00b6 1046     		movge	r0, r2
 598:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.y1 = grad_area.y1;
 669              		.loc 1 598 22 discriminator 3 view .LVU193
 670 00b8 ADF80400 		strh	r0, [sp, #4]	@ movhi
 599:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.x2 = LV_MATH_MIN(grad_area.x1 + xi2, grad_area.x1 + grad_w - i_step);
 671              		.loc 1 599 9 is_stmt 1 discriminator 3 view .LVU194
 599:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.x2 = LV_MATH_MIN(grad_area.x1 + xi2, grad_area.x1 + grad_w - i_step);
 672              		.loc 1 599 33 is_stmt 0 discriminator 3 view .LVU195
 673 00bc BDF90E10 		ldrsh	r1, [sp, #14]
 599:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.x2 = LV_MATH_MIN(grad_area.x1 + xi2, grad_area.x1 + grad_w - i_step);
 674              		.loc 1 599 22 discriminator 3 view .LVU196
 675 00c0 ADF80610 		strh	r1, [sp, #6]	@ movhi
 600:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.y2 = grad_area.y2;
 676              		.loc 1 600 9 is_stmt 1 discriminator 3 view .LVU197
 600:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.y2 = grad_area.y2;
 677              		.loc 1 600 24 is_stmt 0 discriminator 3 view .LVU198
 678 00c4 0EFA83F3 		sxtah	r3, lr, r3
 679              	.LVL64:
 600:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.y2 = grad_area.y2;
ARM GAS  D:\Temp\ccfvNLhk.s 			page 39


 680              		.loc 1 600 24 discriminator 3 view .LVU199
 681 00c8 9A42     		cmp	r2, r3
 682 00ca A8BF     		it	ge
 683 00cc 1A46     		movge	r2, r3
 600:lvgl/src/lv_widgets/lv_cpicker.c ****         rect_area.y2 = grad_area.y2;
 684              		.loc 1 600 22 discriminator 3 view .LVU200
 685 00ce ADF80820 		strh	r2, [sp, #8]	@ movhi
 601:lvgl/src/lv_widgets/lv_cpicker.c **** 
 686              		.loc 1 601 9 is_stmt 1 discriminator 3 view .LVU201
 601:lvgl/src/lv_widgets/lv_cpicker.c **** 
 687              		.loc 1 601 33 is_stmt 0 discriminator 3 view .LVU202
 688 00d2 BDF91230 		ldrsh	r3, [sp, #18]
 601:lvgl/src/lv_widgets/lv_cpicker.c **** 
 689              		.loc 1 601 22 discriminator 3 view .LVU203
 690 00d6 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 603:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 691              		.loc 1 603 9 is_stmt 1 discriminator 3 view .LVU204
 692 00da 05AA     		add	r2, sp, #20
 693 00dc 4146     		mov	r1, r8
 694 00de 01A8     		add	r0, sp, #4
 695 00e0 FFF7FEFF 		bl	lv_draw_rect
 696              	.LVL65:
 603:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 697              		.loc 1 603 9 is_stmt 0 discriminator 3 view .LVU205
 698              	.LBE77:
 588:lvgl/src/lv_widgets/lv_cpicker.c ****         bg_dsc.bg_color = angle_to_mode_color(cpicker, i);
 699              		.loc 1 588 27 discriminator 3 view .LVU206
 700 00e4 4C44     		add	r4, r4, r9
 701              	.LVL66:
 588:lvgl/src/lv_widgets/lv_cpicker.c ****         bg_dsc.bg_color = angle_to_mode_color(cpicker, i);
 702              		.loc 1 588 27 discriminator 3 view .LVU207
 703 00e6 A4B2     		uxth	r4, r4
 704              	.LVL67:
 588:lvgl/src/lv_widgets/lv_cpicker.c ****         bg_dsc.bg_color = angle_to_mode_color(cpicker, i);
 705              		.loc 1 588 27 discriminator 3 view .LVU208
 706 00e8 BBE7     		b	.L33
 707              	.LVL68:
 708              	.L36:
 709              	.LBB78:
 555:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t r = bg_dsc.radius;
 710              		.loc 1 555 9 is_stmt 1 view .LVU209
 555:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t r = bg_dsc.radius;
 711              		.loc 1 555 24 is_stmt 0 view .LVU210
 712 00ea 3046     		mov	r0, r6
 713 00ec FFF7FEFF 		bl	lv_obj_get_height
 714              	.LVL69:
 556:lvgl/src/lv_widgets/lv_cpicker.c ****         if(r > h / 2) r = h / 2;
 715              		.loc 1 556 9 is_stmt 1 view .LVU211
 556:lvgl/src/lv_widgets/lv_cpicker.c ****         if(r > h / 2) r = h / 2;
 716              		.loc 1 556 20 is_stmt 0 view .LVU212
 717 00f0 BDF91430 		ldrsh	r3, [sp, #20]
 718              	.LVL70:
 557:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Make the gradient area smaller with a half circle on both ends*/
 719              		.loc 1 557 9 is_stmt 1 view .LVU213
 557:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Make the gradient area smaller with a half circle on both ends*/
 720              		.loc 1 557 14 is_stmt 0 view .LVU214
 721 00f4 00EBD070 		add	r0, r0, r0, lsr #31
ARM GAS  D:\Temp\ccfvNLhk.s 			page 40


 722              	.LVL71:
 557:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Make the gradient area smaller with a half circle on both ends*/
 723              		.loc 1 557 14 view .LVU215
 724 00f8 40F34F04 		sbfx	r4, r0, #1, #16
 557:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Make the gradient area smaller with a half circle on both ends*/
 725              		.loc 1 557 11 view .LVU216
 726 00fc 9C42     		cmp	r4, r3
 727 00fe 00DB     		blt	.L30
 556:lvgl/src/lv_widgets/lv_cpicker.c ****         if(r > h / 2) r = h / 2;
 728              		.loc 1 556 20 view .LVU217
 729 0100 1C46     		mov	r4, r3
 730              	.L30:
 731              	.LVL72:
 559:lvgl/src/lv_widgets/lv_cpicker.c ****         grad_area.x2 -= r;
 732              		.loc 1 559 9 is_stmt 1 view .LVU218
 559:lvgl/src/lv_widgets/lv_cpicker.c ****         grad_area.x2 -= r;
 733              		.loc 1 559 22 is_stmt 0 view .LVU219
 734 0102 A4B2     		uxth	r4, r4
 559:lvgl/src/lv_widgets/lv_cpicker.c ****         grad_area.x2 -= r;
 735              		.loc 1 559 22 view .LVU220
 736 0104 BDF80C30 		ldrh	r3, [sp, #12]
 737 0108 2344     		add	r3, r3, r4
 738 010a ADF80C30 		strh	r3, [sp, #12]	@ movhi
 560:lvgl/src/lv_widgets/lv_cpicker.c **** 
 739              		.loc 1 560 9 is_stmt 1 view .LVU221
 560:lvgl/src/lv_widgets/lv_cpicker.c **** 
 740              		.loc 1 560 22 is_stmt 0 view .LVU222
 741 010e BDF81030 		ldrh	r3, [sp, #16]
 742 0112 1B1B     		subs	r3, r3, r4
 743 0114 ADF81030 		strh	r3, [sp, #16]	@ movhi
 563:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_get_coords(cpicker, &rounded_edge_area);
 744              		.loc 1 563 9 is_stmt 1 view .LVU223
 564:lvgl/src/lv_widgets/lv_cpicker.c ****         rounded_edge_area.x2 = rounded_edge_area.x1 + 2 * r;
 745              		.loc 1 564 9 view .LVU224
 746 0118 01A9     		add	r1, sp, #4
 747 011a 3046     		mov	r0, r6
 748 011c FFF7FEFF 		bl	lv_obj_get_coords
 749              	.LVL73:
 565:lvgl/src/lv_widgets/lv_cpicker.c **** 
 750              		.loc 1 565 9 view .LVU225
 565:lvgl/src/lv_widgets/lv_cpicker.c **** 
 751              		.loc 1 565 49 is_stmt 0 view .LVU226
 752 0120 BDF80430 		ldrh	r3, [sp, #4]
 565:lvgl/src/lv_widgets/lv_cpicker.c **** 
 753              		.loc 1 565 57 view .LVU227
 754 0124 6400     		lsls	r4, r4, #1
 755              	.LVL74:
 565:lvgl/src/lv_widgets/lv_cpicker.c **** 
 756              		.loc 1 565 57 view .LVU228
 757 0126 A4B2     		uxth	r4, r4
 565:lvgl/src/lv_widgets/lv_cpicker.c **** 
 758              		.loc 1 565 53 view .LVU229
 759 0128 2344     		add	r3, r3, r4
 565:lvgl/src/lv_widgets/lv_cpicker.c **** 
 760              		.loc 1 565 30 view .LVU230
 761 012a ADF80830 		strh	r3, [sp, #8]	@ movhi
 567:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 41


 762              		.loc 1 567 9 is_stmt 1 view .LVU231
 567:lvgl/src/lv_widgets/lv_cpicker.c **** 
 763              		.loc 1 567 27 is_stmt 0 view .LVU232
 764 012e 0021     		movs	r1, #0
 765 0130 3046     		mov	r0, r6
 766 0132 FFF7FEFF 		bl	angle_to_mode_color
 767              	.LVL75:
 768 0136 ADF81600 		strh	r0, [sp, #22]	@ movhi
 569:lvgl/src/lv_widgets/lv_cpicker.c **** 
 769              		.loc 1 569 9 is_stmt 1 view .LVU233
 770 013a 05AA     		add	r2, sp, #20
 771 013c 4146     		mov	r1, r8
 772 013e 01A8     		add	r0, sp, #4
 773 0140 FFF7FEFF 		bl	lv_draw_rect
 774              	.LVL76:
 572:lvgl/src/lv_widgets/lv_cpicker.c ****         rounded_edge_area.x1 = rounded_edge_area.x2 - 2 * r;
 775              		.loc 1 572 9 view .LVU234
 776 0144 01A9     		add	r1, sp, #4
 777 0146 3046     		mov	r0, r6
 778 0148 FFF7FEFF 		bl	lv_obj_get_coords
 779              	.LVL77:
 573:lvgl/src/lv_widgets/lv_cpicker.c **** 
 780              		.loc 1 573 9 view .LVU235
 573:lvgl/src/lv_widgets/lv_cpicker.c **** 
 781              		.loc 1 573 49 is_stmt 0 view .LVU236
 782 014c BDF80830 		ldrh	r3, [sp, #8]
 573:lvgl/src/lv_widgets/lv_cpicker.c **** 
 783              		.loc 1 573 53 view .LVU237
 784 0150 1C1B     		subs	r4, r3, r4
 573:lvgl/src/lv_widgets/lv_cpicker.c **** 
 785              		.loc 1 573 30 view .LVU238
 786 0152 ADF80440 		strh	r4, [sp, #4]	@ movhi
 575:lvgl/src/lv_widgets/lv_cpicker.c **** 
 787              		.loc 1 575 9 is_stmt 1 view .LVU239
 575:lvgl/src/lv_widgets/lv_cpicker.c **** 
 788              		.loc 1 575 27 is_stmt 0 view .LVU240
 789 0156 40F26711 		movw	r1, #359
 790 015a 3046     		mov	r0, r6
 791 015c FFF7FEFF 		bl	angle_to_mode_color
 792              	.LVL78:
 793 0160 ADF81600 		strh	r0, [sp, #22]	@ movhi
 577:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 794              		.loc 1 577 9 is_stmt 1 view .LVU241
 795 0164 05AA     		add	r2, sp, #20
 796 0166 4146     		mov	r1, r8
 797 0168 01A8     		add	r0, sp, #4
 798 016a FFF7FEFF 		bl	lv_draw_rect
 799              	.LVL79:
 800 016e 5CE7     		b	.L29
 801              	.L28:
 577:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 802              		.loc 1 577 9 is_stmt 0 view .LVU242
 803              	.LBE78:
 605:lvgl/src/lv_widgets/lv_cpicker.c **** 
 804              		.loc 1 605 1 view .LVU243
 805 0170 1BB0     		add	sp, sp, #108
 806              	.LCFI6:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 42


 807              		.cfi_def_cfa_offset 28
 808              		@ sp needed
 809 0172 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 810              	.LVL80:
 811              	.L38:
 605:lvgl/src/lv_widgets/lv_cpicker.c **** 
 812              		.loc 1 605 1 view .LVU244
 813 0176 00BF     		.align	2
 814              	.L37:
 815 0178 B7600BB6 		.word	-1240768329
 816              		.cfi_endproc
 817              	.LFE478:
 819              		.section	.text.lv_cpicker_hit,"ax",%progbits
 820              		.align	1
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	lv_cpicker_hit:
 827              	.LVL81:
 828              	.LFB484:
 906:lvgl/src/lv_widgets/lv_cpicker.c ****     bool is_point_on_coords = lv_obj_is_point_on_coords(cpicker, p);
 829              		.loc 1 906 1 is_stmt 1 view -0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 906:lvgl/src/lv_widgets/lv_cpicker.c ****     bool is_point_on_coords = lv_obj_is_point_on_coords(cpicker, p);
 833              		.loc 1 906 1 is_stmt 0 view .LVU246
 834 0000 70B5     		push	{r4, r5, r6, lr}
 835              	.LCFI7:
 836              		.cfi_def_cfa_offset 16
 837              		.cfi_offset 4, -16
 838              		.cfi_offset 5, -12
 839              		.cfi_offset 6, -8
 840              		.cfi_offset 14, -4
 841 0002 0546     		mov	r5, r0
 842 0004 0E46     		mov	r6, r1
 907:lvgl/src/lv_widgets/lv_cpicker.c ****     if(!is_point_on_coords)
 843              		.loc 1 907 5 is_stmt 1 view .LVU247
 907:lvgl/src/lv_widgets/lv_cpicker.c ****     if(!is_point_on_coords)
 844              		.loc 1 907 31 is_stmt 0 view .LVU248
 845 0006 FFF7FEFF 		bl	lv_obj_is_point_on_coords
 846              	.LVL82:
 908:lvgl/src/lv_widgets/lv_cpicker.c ****         return false;
 847              		.loc 1 908 5 is_stmt 1 view .LVU249
 908:lvgl/src/lv_widgets/lv_cpicker.c ****         return false;
 848              		.loc 1 908 7 is_stmt 0 view .LVU250
 849 000a 0446     		mov	r4, r0
 850 000c 08B9     		cbnz	r0, .L42
 851              	.LVL83:
 852              	.L40:
 918:lvgl/src/lv_widgets/lv_cpicker.c **** 
 853              		.loc 1 918 1 view .LVU251
 854 000e 2046     		mov	r0, r4
 855 0010 70BD     		pop	{r4, r5, r6, pc}
 856              	.LVL84:
 857              	.L42:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 43


 911:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->type == LV_CPICKER_TYPE_RECT)
 858              		.loc 1 911 5 is_stmt 1 view .LVU252
 911:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->type == LV_CPICKER_TYPE_RECT)
 859              		.loc 1 911 50 is_stmt 0 view .LVU253
 860 0012 2846     		mov	r0, r5
 861              	.LVL85:
 911:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->type == LV_CPICKER_TYPE_RECT)
 862              		.loc 1 911 50 view .LVU254
 863 0014 FFF7FEFF 		bl	lv_obj_get_ext_attr
 864              	.LVL86:
 912:lvgl/src/lv_widgets/lv_cpicker.c ****         return true;
 865              		.loc 1 912 5 is_stmt 1 view .LVU255
 912:lvgl/src/lv_widgets/lv_cpicker.c ****         return true;
 866              		.loc 1 912 18 is_stmt 0 view .LVU256
 867 0018 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 912:lvgl/src/lv_widgets/lv_cpicker.c ****         return true;
 868              		.loc 1 912 7 view .LVU257
 869 001c 13F0080F 		tst	r3, #8
 870 0020 F5D0     		beq	.L40
 916:lvgl/src/lv_widgets/lv_cpicker.c ****     else return false;
 871              		.loc 1 916 5 is_stmt 1 view .LVU258
 916:lvgl/src/lv_widgets/lv_cpicker.c ****     else return false;
 872              		.loc 1 916 8 is_stmt 0 view .LVU259
 873 0022 47F6FF72 		movw	r2, #32767
 874 0026 3146     		mov	r1, r6
 875 0028 05F11000 		add	r0, r5, #16
 876              	.LVL87:
 916:lvgl/src/lv_widgets/lv_cpicker.c ****     else return false;
 877              		.loc 1 916 8 view .LVU260
 878 002c FFF7FEFF 		bl	_lv_area_is_point_on
 879              	.LVL88:
 880 0030 0446     		mov	r4, r0
 881 0032 ECE7     		b	.L40
 882              		.cfi_endproc
 883              	.LFE484:
 885              		.section	.text.invalidate_knob,"ax",%progbits
 886              		.align	1
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 890              		.fpu fpv4-sp-d16
 892              	invalidate_knob:
 893              	.LVL89:
 894              	.LFB480:
 627:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_t knob_area = get_knob_area(cpicker);
 895              		.loc 1 627 1 is_stmt 1 view -0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 8
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 627:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_t knob_area = get_knob_area(cpicker);
 899              		.loc 1 627 1 is_stmt 0 view .LVU262
 900 0000 10B5     		push	{r4, lr}
 901              	.LCFI8:
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 4, -8
 904              		.cfi_offset 14, -4
 905 0002 82B0     		sub	sp, sp, #8
ARM GAS  D:\Temp\ccfvNLhk.s 			page 44


 906              	.LCFI9:
 907              		.cfi_def_cfa_offset 16
 908 0004 0446     		mov	r4, r0
 628:lvgl/src/lv_widgets/lv_cpicker.c **** 
 909              		.loc 1 628 5 is_stmt 1 view .LVU263
 628:lvgl/src/lv_widgets/lv_cpicker.c **** 
 910              		.loc 1 628 27 is_stmt 0 view .LVU264
 911 0006 0146     		mov	r1, r0
 912 0008 6846     		mov	r0, sp
 913              	.LVL90:
 628:lvgl/src/lv_widgets/lv_cpicker.c **** 
 914              		.loc 1 628 27 view .LVU265
 915 000a FFF7FEFF 		bl	get_knob_area
 916              	.LVL91:
 630:lvgl/src/lv_widgets/lv_cpicker.c **** }
 917              		.loc 1 630 5 is_stmt 1 view .LVU266
 918 000e 6946     		mov	r1, sp
 919 0010 2046     		mov	r0, r4
 920 0012 FFF7FEFF 		bl	lv_obj_invalidate_area
 921              	.LVL92:
 631:lvgl/src/lv_widgets/lv_cpicker.c **** 
 922              		.loc 1 631 1 is_stmt 0 view .LVU267
 923 0016 02B0     		add	sp, sp, #8
 924              	.LCFI10:
 925              		.cfi_def_cfa_offset 8
 926              		@ sp needed
 927 0018 10BD     		pop	{r4, pc}
 631:lvgl/src/lv_widgets/lv_cpicker.c **** 
 928              		.loc 1 631 1 view .LVU268
 929              		.cfi_endproc
 930              	.LFE480:
 932              		.section	.text.refr_knob_pos,"ax",%progbits
 933              		.align	1
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	refr_knob_pos:
 940              	.LVL93:
 941              	.LFB486:
 929:lvgl/src/lv_widgets/lv_cpicker.c ****     invalidate_knob(cpicker);
 942              		.loc 1 929 1 is_stmt 1 view -0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 929:lvgl/src/lv_widgets/lv_cpicker.c ****     invalidate_knob(cpicker);
 946              		.loc 1 929 1 is_stmt 0 view .LVU270
 947 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 948              	.LCFI11:
 949              		.cfi_def_cfa_offset 32
 950              		.cfi_offset 3, -32
 951              		.cfi_offset 4, -28
 952              		.cfi_offset 5, -24
 953              		.cfi_offset 6, -20
 954              		.cfi_offset 7, -16
 955              		.cfi_offset 8, -12
 956              		.cfi_offset 9, -8
ARM GAS  D:\Temp\ccfvNLhk.s 			page 45


 957              		.cfi_offset 14, -4
 958 0004 0646     		mov	r6, r0
 930:lvgl/src/lv_widgets/lv_cpicker.c **** 
 959              		.loc 1 930 5 is_stmt 1 view .LVU271
 960 0006 FFF7FEFF 		bl	invalidate_knob
 961              	.LVL94:
 932:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t w = lv_obj_get_width(cpicker);
 962              		.loc 1 932 5 view .LVU272
 932:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t w = lv_obj_get_width(cpicker);
 963              		.loc 1 932 30 is_stmt 0 view .LVU273
 964 000a 3046     		mov	r0, r6
 965 000c FFF7FEFF 		bl	lv_obj_get_ext_attr
 966              	.LVL95:
 967 0010 0546     		mov	r5, r0
 968              	.LVL96:
 933:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t h = lv_obj_get_height(cpicker);
 969              		.loc 1 933 5 is_stmt 1 view .LVU274
 933:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t h = lv_obj_get_height(cpicker);
 970              		.loc 1 933 20 is_stmt 0 view .LVU275
 971 0012 3046     		mov	r0, r6
 972              	.LVL97:
 933:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t h = lv_obj_get_height(cpicker);
 973              		.loc 1 933 20 view .LVU276
 974 0014 FFF7FEFF 		bl	lv_obj_get_width
 975              	.LVL98:
 976 0018 0746     		mov	r7, r0
 977              	.LVL99:
 934:lvgl/src/lv_widgets/lv_cpicker.c **** 
 978              		.loc 1 934 5 is_stmt 1 view .LVU277
 934:lvgl/src/lv_widgets/lv_cpicker.c **** 
 979              		.loc 1 934 20 is_stmt 0 view .LVU278
 980 001a 3046     		mov	r0, r6
 981 001c FFF7FEFF 		bl	lv_obj_get_height
 982              	.LVL100:
 983 0020 0446     		mov	r4, r0
 984              	.LVL101:
 936:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t ind_pos = 0;
 985              		.loc 1 936 5 is_stmt 1 view .LVU279
 936:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t ind_pos = 0;
 986              		.loc 1 936 18 is_stmt 0 view .LVU280
 987 0022 95F82030 		ldrb	r3, [r5, #32]	@ zero_extendqisi2
 936:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t ind_pos = 0;
 988              		.loc 1 936 7 view .LVU281
 989 0026 13F0080F 		tst	r3, #8
 990 002a 35D1     		bne	.L46
 991              	.LBB79:
 937:lvgl/src/lv_widgets/lv_cpicker.c ****         switch(ext->color_mode) {
 992              		.loc 1 937 9 is_stmt 1 view .LVU282
 993              	.LVL102:
 938:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 994              		.loc 1 938 9 view .LVU283
 938:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 995              		.loc 1 938 19 is_stmt 0 view .LVU284
 996 002c C3F30103 		ubfx	r3, r3, #0, #2
 997 0030 DAB2     		uxtb	r2, r3
 938:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 998              		.loc 1 938 9 view .LVU285
ARM GAS  D:\Temp\ccfvNLhk.s 			page 46


 999 0032 012A     		cmp	r2, #1
 1000 0034 1AD0     		beq	.L47
 1001 0036 5BB2     		sxtb	r3, r3
 1002 0038 63B1     		cbz	r3, .L48
 1003 003a 022A     		cmp	r2, #2
 1004 003c 21D0     		beq	.L49
 937:lvgl/src/lv_widgets/lv_cpicker.c ****         switch(ext->color_mode) {
 1005              		.loc 1 937 20 view .LVU286
 1006 003e 0023     		movs	r3, #0
 1007              	.LVL103:
 1008              	.L50:
 950:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = h / 2;
 1009              		.loc 1 950 9 is_stmt 1 view .LVU287
 950:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = h / 2;
 1010              		.loc 1 950 25 is_stmt 0 view .LVU288
 1011 0040 AB81     		strh	r3, [r5, #12]	@ movhi
 951:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1012              		.loc 1 951 9 is_stmt 1 view .LVU289
 951:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1013              		.loc 1 951 25 is_stmt 0 view .LVU290
 1014 0042 04EBD474 		add	r4, r4, r4, lsr #31
 1015              	.LVL104:
 951:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1016              		.loc 1 951 25 view .LVU291
 1017 0046 6410     		asrs	r4, r4, #1
 1018 0048 EC81     		strh	r4, [r5, #14]	@ movhi
 1019              	.LVL105:
 1020              	.L51:
 951:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1021              		.loc 1 951 25 view .LVU292
 1022              	.LBE79:
 963:lvgl/src/lv_widgets/lv_cpicker.c **** }
 1023              		.loc 1 963 5 is_stmt 1 view .LVU293
 1024 004a 3046     		mov	r0, r6
 1025 004c FFF7FEFF 		bl	invalidate_knob
 1026              	.LVL106:
 964:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1027              		.loc 1 964 1 is_stmt 0 view .LVU294
 1028 0050 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1029              	.LVL107:
 1030              	.L48:
 1031              	.LBB80:
 940:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1032              		.loc 1 940 17 is_stmt 1 view .LVU295
 940:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1033              		.loc 1 940 37 is_stmt 0 view .LVU296
 1034 0054 2888     		ldrh	r0, [r5]
 940:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1035              		.loc 1 940 40 view .LVU297
 1036 0056 00FB07F0 		mul	r0, r0, r7
 940:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1037              		.loc 1 940 45 view .LVU298
 1038 005a 244B     		ldr	r3, .L53
 1039 005c 83FB0023 		smull	r2, r3, r3, r0
 1040 0060 1A18     		adds	r2, r3, r0
 1041 0062 C317     		asrs	r3, r0, #31
 1042 0064 C3EB2223 		rsb	r3, r3, r2, asr #8
ARM GAS  D:\Temp\ccfvNLhk.s 			page 47


 940:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1043              		.loc 1 940 25 view .LVU299
 1044 0068 1BB2     		sxth	r3, r3
 1045              	.LVL108:
 941:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_SATURATION:
 1046              		.loc 1 941 17 is_stmt 1 view .LVU300
 1047 006a E9E7     		b	.L50
 1048              	.LVL109:
 1049              	.L47:
 943:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1050              		.loc 1 943 17 view .LVU301
 943:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1051              		.loc 1 943 37 is_stmt 0 view .LVU302
 1052 006c A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 943:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1053              		.loc 1 943 40 view .LVU303
 1054 006e 00FB07F0 		mul	r0, r0, r7
 943:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1055              		.loc 1 943 45 view .LVU304
 1056 0072 1F4B     		ldr	r3, .L53+4
 1057 0074 83FB0023 		smull	r2, r3, r3, r0
 1058 0078 C017     		asrs	r0, r0, #31
 1059 007a C0EB6313 		rsb	r3, r0, r3, asr #5
 943:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1060              		.loc 1 943 25 view .LVU305
 1061 007e 1BB2     		sxth	r3, r3
 1062              	.LVL110:
 944:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_VALUE:
 1063              		.loc 1 944 17 is_stmt 1 view .LVU306
 1064 0080 DEE7     		b	.L50
 1065              	.LVL111:
 1066              	.L49:
 946:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1067              		.loc 1 946 17 view .LVU307
 946:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1068              		.loc 1 946 37 is_stmt 0 view .LVU308
 1069 0082 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2
 946:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1070              		.loc 1 946 40 view .LVU309
 1071 0084 00FB07F0 		mul	r0, r0, r7
 946:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1072              		.loc 1 946 45 view .LVU310
 1073 0088 194A     		ldr	r2, .L53+4
 1074 008a 82FB0032 		smull	r3, r2, r2, r0
 1075 008e C317     		asrs	r3, r0, #31
 1076 0090 C3EB6213 		rsb	r3, r3, r2, asr #5
 946:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1077              		.loc 1 946 25 view .LVU311
 1078 0094 1BB2     		sxth	r3, r3
 1079              	.LVL112:
 947:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 1080              		.loc 1 947 17 is_stmt 1 view .LVU312
 1081 0096 D3E7     		b	.L50
 1082              	.LVL113:
 1083              	.L46:
 947:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 1084              		.loc 1 947 17 is_stmt 0 view .LVU313
ARM GAS  D:\Temp\ccfvNLhk.s 			page 48


 1085              	.LBE80:
 953:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_int_t scale_w = lv_obj_get_style_scale_width(cpicker, LV_CPICKER_PART_MAIN);
 1086              		.loc 1 953 10 is_stmt 1 view .LVU314
 1087              	.LBB81:
 954:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_coord_t r = (w - scale_w) / 2;
 1088              		.loc 1 954 9 view .LVU315
 1089              	.LBB82:
 1090              	.LBI82:
 1091              		.loc 2 194 1 view .LVU316
 1092              	.LBB83:
 1093              		.loc 2 194 1 view .LVU317
 1094 0098 C022     		movs	r2, #192
 1095 009a 0021     		movs	r1, #0
 1096 009c 3046     		mov	r0, r6
 1097 009e FFF7FEFF 		bl	_lv_obj_get_style_int
 1098              	.LVL114:
 1099              		.loc 2 194 1 is_stmt 0 view .LVU318
 1100              	.LBE83:
 1101              	.LBE82:
 955:lvgl/src/lv_widgets/lv_cpicker.c ****         uint16_t angle = get_angle(cpicker);
 1102              		.loc 1 955 9 is_stmt 1 view .LVU319
 955:lvgl/src/lv_widgets/lv_cpicker.c ****         uint16_t angle = get_angle(cpicker);
 1103              		.loc 1 955 27 is_stmt 0 view .LVU320
 1104 00a2 381A     		subs	r0, r7, r0
 1105              	.LVL115:
 955:lvgl/src/lv_widgets/lv_cpicker.c ****         uint16_t angle = get_angle(cpicker);
 1106              		.loc 1 955 38 view .LVU321
 1107 00a4 00EBD070 		add	r0, r0, r0, lsr #31
 955:lvgl/src/lv_widgets/lv_cpicker.c ****         uint16_t angle = get_angle(cpicker);
 1108              		.loc 1 955 20 view .LVU322
 1109 00a8 40F34F08 		sbfx	r8, r0, #1, #16
 1110              	.LVL116:
 956:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.x = (((int32_t)r * _lv_trigo_sin(angle)) >> LV_TRIGO_SHIFT);
 1111              		.loc 1 956 9 is_stmt 1 view .LVU323
 956:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.x = (((int32_t)r * _lv_trigo_sin(angle)) >> LV_TRIGO_SHIFT);
 1112              		.loc 1 956 26 is_stmt 0 view .LVU324
 1113 00ac 3046     		mov	r0, r6
 1114 00ae FFF7FEFF 		bl	get_angle
 1115              	.LVL117:
 1116 00b2 8146     		mov	r9, r0
 1117              	.LVL118:
 957:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = (((int32_t)r * _lv_trigo_sin(angle + 90)) >> LV_TRIGO_SHIFT);
 1118              		.loc 1 957 9 is_stmt 1 view .LVU325
 957:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = (((int32_t)r * _lv_trigo_sin(angle + 90)) >> LV_TRIGO_SHIFT);
 1119              		.loc 1 957 42 is_stmt 0 view .LVU326
 1120 00b4 00B2     		sxth	r0, r0
 957:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = (((int32_t)r * _lv_trigo_sin(angle + 90)) >> LV_TRIGO_SHIFT);
 1121              		.loc 1 957 42 view .LVU327
 1122 00b6 FFF7FEFF 		bl	_lv_trigo_sin
 1123              	.LVL119:
 957:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = (((int32_t)r * _lv_trigo_sin(angle + 90)) >> LV_TRIGO_SHIFT);
 1124              		.loc 1 957 40 view .LVU328
 1125 00ba 00FB08F0 		mul	r0, r0, r8
 957:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = (((int32_t)r * _lv_trigo_sin(angle + 90)) >> LV_TRIGO_SHIFT);
 1126              		.loc 1 957 64 view .LVU329
 1127 00be C013     		asrs	r0, r0, #15
 957:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = (((int32_t)r * _lv_trigo_sin(angle + 90)) >> LV_TRIGO_SHIFT);
ARM GAS  D:\Temp\ccfvNLhk.s 			page 49


 1128              		.loc 1 957 25 view .LVU330
 1129 00c0 A881     		strh	r0, [r5, #12]	@ movhi
 958:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.x = ext->knob.pos.x + w / 2;
 1130              		.loc 1 958 9 is_stmt 1 view .LVU331
 958:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.x = ext->knob.pos.x + w / 2;
 1131              		.loc 1 958 62 is_stmt 0 view .LVU332
 1132 00c2 09F15A00 		add	r0, r9, #90
 958:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.x = ext->knob.pos.x + w / 2;
 1133              		.loc 1 958 42 view .LVU333
 1134 00c6 00B2     		sxth	r0, r0
 1135 00c8 FFF7FEFF 		bl	_lv_trigo_sin
 1136              	.LVL120:
 958:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.x = ext->knob.pos.x + w / 2;
 1137              		.loc 1 958 40 view .LVU334
 1138 00cc 00FB08F8 		mul	r8, r0, r8
 1139              	.LVL121:
 959:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = ext->knob.pos.y + h / 2;
 1140              		.loc 1 959 9 is_stmt 1 view .LVU335
 959:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = ext->knob.pos.y + h / 2;
 1141              		.loc 1 959 40 is_stmt 0 view .LVU336
 1142 00d0 AB89     		ldrh	r3, [r5, #12]
 959:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = ext->knob.pos.y + h / 2;
 1143              		.loc 1 959 43 view .LVU337
 1144 00d2 07EBD770 		add	r0, r7, r7, lsr #31
 1145 00d6 03EB6000 		add	r0, r3, r0, asr #1
 959:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.pos.y = ext->knob.pos.y + h / 2;
 1146              		.loc 1 959 25 view .LVU338
 1147 00da A881     		strh	r0, [r5, #12]	@ movhi
 960:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1148              		.loc 1 960 9 is_stmt 1 view .LVU339
 960:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1149              		.loc 1 960 40 is_stmt 0 view .LVU340
 1150 00dc C8F3CF30 		ubfx	r0, r8, #15, #16
 960:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1151              		.loc 1 960 43 view .LVU341
 1152 00e0 04EBD474 		add	r4, r4, r4, lsr #31
 1153              	.LVL122:
 960:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1154              		.loc 1 960 43 view .LVU342
 1155 00e4 00EB6404 		add	r4, r0, r4, asr #1
 960:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1156              		.loc 1 960 25 view .LVU343
 1157 00e8 EC81     		strh	r4, [r5, #14]	@ movhi
 1158 00ea AEE7     		b	.L51
 1159              	.L54:
 1160              		.align	2
 1161              	.L53:
 1162 00ec B7600BB6 		.word	-1240768329
 1163 00f0 1F85EB51 		.word	1374389535
 1164              	.LBE81:
 1165              		.cfi_endproc
 1166              	.LFE486:
 1168              		.section	.text.next_color_mode,"ax",%progbits
 1169              		.align	1
 1170              		.syntax unified
 1171              		.thumb
 1172              		.thumb_func
ARM GAS  D:\Temp\ccfvNLhk.s 			page 50


 1173              		.fpu fpv4-sp-d16
 1175              	next_color_mode:
 1176              	.LVL123:
 1177              	.LFB485:
 921:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 1178              		.loc 1 921 1 is_stmt 1 view -0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 0
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 921:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 1182              		.loc 1 921 1 is_stmt 0 view .LVU345
 1183 0000 10B5     		push	{r4, lr}
 1184              	.LCFI12:
 1185              		.cfi_def_cfa_offset 8
 1186              		.cfi_offset 4, -8
 1187              		.cfi_offset 14, -4
 1188 0002 0446     		mov	r4, r0
 922:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->color_mode = (ext->color_mode + 1) % 3;
 1189              		.loc 1 922 5 is_stmt 1 view .LVU346
 922:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->color_mode = (ext->color_mode + 1) % 3;
 1190              		.loc 1 922 30 is_stmt 0 view .LVU347
 1191 0004 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1192              	.LVL124:
 923:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 1193              		.loc 1 923 5 is_stmt 1 view .LVU348
 923:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 1194              		.loc 1 923 27 is_stmt 0 view .LVU349
 1195 0008 90F82010 		ldrb	r1, [r0, #32]	@ zero_extendqisi2
 1196 000c 01F00303 		and	r3, r1, #3
 923:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 1197              		.loc 1 923 40 view .LVU350
 1198 0010 0133     		adds	r3, r3, #1
 923:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 1199              		.loc 1 923 45 view .LVU351
 1200 0012 094A     		ldr	r2, .L57
 1201 0014 82FB03C2 		smull	ip, r2, r2, r3
 1202 0018 02EB4202 		add	r2, r2, r2, lsl #1
 1203 001c 9B1A     		subs	r3, r3, r2
 923:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 1204              		.loc 1 923 21 view .LVU352
 1205 001e 0A46     		mov	r2, r1
 1206 0020 63F30102 		bfi	r2, r3, #0, #2
 1207 0024 80F82020 		strb	r2, [r0, #32]
 924:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_invalidate(cpicker);
 1208              		.loc 1 924 5 is_stmt 1 view .LVU353
 1209 0028 2046     		mov	r0, r4
 1210              	.LVL125:
 924:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_invalidate(cpicker);
 1211              		.loc 1 924 5 is_stmt 0 view .LVU354
 1212 002a FFF7FEFF 		bl	refr_knob_pos
 1213              	.LVL126:
 925:lvgl/src/lv_widgets/lv_cpicker.c **** }
 1214              		.loc 1 925 5 is_stmt 1 view .LVU355
 1215 002e 2046     		mov	r0, r4
 1216 0030 FFF7FEFF 		bl	lv_obj_invalidate
 1217              	.LVL127:
 926:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 51


 1218              		.loc 1 926 1 is_stmt 0 view .LVU356
 1219 0034 10BD     		pop	{r4, pc}
 1220              	.LVL128:
 1221              	.L58:
 926:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1222              		.loc 1 926 1 view .LVU357
 1223 0036 00BF     		.align	2
 1224              	.L57:
 1225 0038 56555555 		.word	1431655766
 1226              		.cfi_endproc
 1227              	.LFE485:
 1229              		.section	.text.lv_cpicker_create,"ax",%progbits
 1230              		.align	1
 1231              		.global	lv_cpicker_create
 1232              		.syntax unified
 1233              		.thumb
 1234              		.thumb_func
 1235              		.fpu fpv4-sp-d16
 1237              	lv_cpicker_create:
 1238              	.LVL129:
 1239              	.LFB458:
 103:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_LOG_TRACE("color_picker create started");
 1240              		.loc 1 103 1 is_stmt 1 view -0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 103:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_LOG_TRACE("color_picker create started");
 1244              		.loc 1 103 1 is_stmt 0 view .LVU359
 1245 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1246              	.LCFI13:
 1247              		.cfi_def_cfa_offset 24
 1248              		.cfi_offset 3, -24
 1249              		.cfi_offset 4, -20
 1250              		.cfi_offset 5, -16
 1251              		.cfi_offset 6, -12
 1252              		.cfi_offset 7, -8
 1253              		.cfi_offset 14, -4
 1254 0002 0F46     		mov	r7, r1
 104:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1255              		.loc 1 104 48 is_stmt 1 view .LVU360
 106:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_MEM(cpicker);
 1256              		.loc 1 106 5 view .LVU361
 106:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_MEM(cpicker);
 1257              		.loc 1 106 26 is_stmt 0 view .LVU362
 1258 0004 FFF7FEFF 		bl	lv_obj_create
 1259              	.LVL130:
 106:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_MEM(cpicker);
 1260              		.loc 1 106 26 view .LVU363
 1261 0008 0546     		mov	r5, r0
 1262              	.LVL131:
 107:lvgl/src/lv_widgets/lv_cpicker.c ****     if(cpicker == NULL) return NULL;
 1263              		.loc 1 107 5 is_stmt 1 view .LVU364
 107:lvgl/src/lv_widgets/lv_cpicker.c ****     if(cpicker == NULL) return NULL;
 1264              		.loc 1 107 5 view .LVU365
 1265 000a FFF7FEFF 		bl	lv_debug_check_null
 1266              	.LVL132:
 107:lvgl/src/lv_widgets/lv_cpicker.c ****     if(cpicker == NULL) return NULL;
ARM GAS  D:\Temp\ccfvNLhk.s 			page 52


 1267              		.loc 1 107 5 is_stmt 0 view .LVU366
 1268 000e 0028     		cmp	r0, #0
 1269 0010 6AD0     		beq	.L71
 107:lvgl/src/lv_widgets/lv_cpicker.c ****     if(cpicker == NULL) return NULL;
 1270              		.loc 1 107 27 is_stmt 1 discriminator 2 view .LVU367
 108:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1271              		.loc 1 108 5 discriminator 2 view .LVU368
 108:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1272              		.loc 1 108 7 is_stmt 0 discriminator 2 view .LVU369
 1273 0012 002D     		cmp	r5, #0
 1274 0014 66D0     		beq	.L59
 110:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(cpicker);
 1275              		.loc 1 110 5 is_stmt 1 view .LVU370
 110:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(cpicker);
 1276              		.loc 1 110 24 is_stmt 0 view .LVU371
 1277 0016 4C4B     		ldr	r3, .L77
 1278 0018 1B68     		ldr	r3, [r3]
 110:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(cpicker);
 1279              		.loc 1 110 7 view .LVU372
 1280 001a 002B     		cmp	r3, #0
 1281 001c 6AD0     		beq	.L72
 1282              	.L63:
 111:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1283              		.loc 1 111 5 is_stmt 1 view .LVU373
 111:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1284              		.loc 1 111 24 is_stmt 0 view .LVU374
 1285 001e 4B4B     		ldr	r3, .L77+4
 1286 0020 1B68     		ldr	r3, [r3]
 111:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1287              		.loc 1 111 7 view .LVU375
 1288 0022 002B     		cmp	r3, #0
 1289 0024 6CD0     		beq	.L73
 1290              	.L64:
 114:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_MEM(ext);
 1291              		.loc 1 114 5 is_stmt 1 view .LVU376
 114:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_MEM(ext);
 1292              		.loc 1 114 30 is_stmt 0 view .LVU377
 1293 0026 2421     		movs	r1, #36
 1294 0028 2846     		mov	r0, r5
 1295 002a FFF7FEFF 		bl	lv_obj_allocate_ext_attr
 1296              	.LVL133:
 1297 002e 0446     		mov	r4, r0
 1298              	.LVL134:
 115:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext == NULL) {
 1299              		.loc 1 115 5 is_stmt 1 view .LVU378
 115:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext == NULL) {
 1300              		.loc 1 115 5 view .LVU379
 1301 0030 FFF7FEFF 		bl	lv_debug_check_null
 1302              	.LVL135:
 115:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext == NULL) {
 1303              		.loc 1 115 5 is_stmt 0 view .LVU380
 1304 0034 0028     		cmp	r0, #0
 1305 0036 69D0     		beq	.L74
 115:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext == NULL) {
 1306              		.loc 1 115 23 is_stmt 1 discriminator 2 view .LVU381
 116:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_del(cpicker);
 1307              		.loc 1 116 5 discriminator 2 view .LVU382
ARM GAS  D:\Temp\ccfvNLhk.s 			page 53


 116:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_del(cpicker);
 1308              		.loc 1 116 7 is_stmt 0 discriminator 2 view .LVU383
 1309 0038 002C     		cmp	r4, #0
 1310 003a 6DD0     		beq	.L75
 122:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->hsv = LV_CPICKER_DEF_HSV;
 1311              		.loc 1 122 5 is_stmt 1 view .LVU384
 122:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->hsv = LV_CPICKER_DEF_HSV;
 1312              		.loc 1 122 15 is_stmt 0 view .LVU385
 1313 003c 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 123:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->knob.colored = 1;
 1314              		.loc 1 123 5 is_stmt 1 view .LVU386
 123:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->knob.colored = 1;
 1315              		.loc 1 123 14 is_stmt 0 view .LVU387
 1316 0040 434A     		ldr	r2, .L77+8
 1317 0042 1268     		ldr	r2, [r2]
 1318 0044 2260     		str	r2, [r4]
 124:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->color_mode = LV_CPICKER_COLOR_MODE_HUE;
 1319              		.loc 1 124 5 is_stmt 1 view .LVU388
 124:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->color_mode = LV_CPICKER_COLOR_MODE_HUE;
 1320              		.loc 1 124 23 is_stmt 0 view .LVU389
 1321 0046 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 1322 0048 42F00102 		orr	r2, r2, #1
 1323 004c 2274     		strb	r2, [r4, #16]
 125:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->color_mode_fixed = 0;
 1324              		.loc 1 125 5 is_stmt 1 view .LVU390
 125:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->color_mode_fixed = 0;
 1325              		.loc 1 125 21 is_stmt 0 view .LVU391
 1326 004e 43F00803 		orr	r3, r3, #8
 126:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->last_click_time = 0;
 1327              		.loc 1 126 5 is_stmt 1 view .LVU392
 126:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->last_click_time = 0;
 1328              		.loc 1 126 27 is_stmt 0 view .LVU393
 1329 0052 03F0FC03 		and	r3, r3, #252
 1330 0056 6FF38203 		bfc	r3, #2, #1
 1331 005a 84F82030 		strb	r3, [r4, #32]
 127:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->last_change_time = 0;
 1332              		.loc 1 127 5 is_stmt 1 view .LVU394
 127:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->last_change_time = 0;
 1333              		.loc 1 127 26 is_stmt 0 view .LVU395
 1334 005e 0023     		movs	r3, #0
 1335 0060 6361     		str	r3, [r4, #20]
 128:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1336              		.loc 1 128 5 is_stmt 1 view .LVU396
 128:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1337              		.loc 1 128 27 is_stmt 0 view .LVU397
 1338 0062 A361     		str	r3, [r4, #24]
 130:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1339              		.loc 1 130 5 is_stmt 1 view .LVU398
 1340 0064 261D     		adds	r6, r4, #4
 1341 0066 3046     		mov	r0, r6
 1342 0068 FFF7FEFF 		bl	lv_style_list_init
 1343              	.LVL136:
 133:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_set_design_cb(cpicker, lv_cpicker_design);
 1344              		.loc 1 133 5 view .LVU399
 1345 006c 3949     		ldr	r1, .L77+12
 1346 006e 2846     		mov	r0, r5
 1347 0070 FFF7FEFF 		bl	lv_obj_set_signal_cb
ARM GAS  D:\Temp\ccfvNLhk.s 			page 54


 1348              	.LVL137:
 134:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1349              		.loc 1 134 5 view .LVU400
 1350 0074 3849     		ldr	r1, .L77+16
 1351 0076 2846     		mov	r0, r5
 1352 0078 FFF7FEFF 		bl	lv_obj_set_design_cb
 1353              	.LVL138:
 137:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_set_size(cpicker, LV_DPI * 2, LV_DPI * 2);
 1354              		.loc 1 137 5 view .LVU401
 137:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_set_size(cpicker, LV_DPI * 2, LV_DPI * 2);
 1355              		.loc 1 137 7 is_stmt 0 view .LVU402
 1356 007c 002F     		cmp	r7, #0
 1357 007e 50D0     		beq	.L76
 1358              	.LBB84:
 145:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->type = copy_ext->type;
 1359              		.loc 1 145 9 is_stmt 1 view .LVU403
 145:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->type = copy_ext->type;
 1360              		.loc 1 145 39 is_stmt 0 view .LVU404
 1361 0080 3846     		mov	r0, r7
 1362 0082 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1363              	.LVL139:
 146:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->color_mode = copy_ext->color_mode;
 1364              		.loc 1 146 9 is_stmt 1 view .LVU405
 146:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->color_mode = copy_ext->color_mode;
 1365              		.loc 1 146 29 is_stmt 0 view .LVU406
 1366 0086 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1367 008a C3F3C003 		ubfx	r3, r3, #3, #1
 146:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->color_mode = copy_ext->color_mode;
 1368              		.loc 1 146 19 view .LVU407
 1369 008e 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 1370 0092 63F3C302 		bfi	r2, r3, #3, #1
 1371 0096 84F82020 		strb	r2, [r4, #32]
 147:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->color_mode_fixed = copy_ext->color_mode_fixed;
 1372              		.loc 1 147 9 is_stmt 1 view .LVU408
 147:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->color_mode_fixed = copy_ext->color_mode_fixed;
 1373              		.loc 1 147 35 is_stmt 0 view .LVU409
 1374 009a 90F82020 		ldrb	r2, [r0, #32]	@ zero_extendqisi2
 147:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->color_mode_fixed = copy_ext->color_mode_fixed;
 1375              		.loc 1 147 25 view .LVU410
 1376 009e 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 1377 00a2 62F30103 		bfi	r3, r2, #0, #2
 1378 00a6 84F82030 		strb	r3, [r4, #32]
 148:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->hsv = copy_ext->hsv;
 1379              		.loc 1 148 9 is_stmt 1 view .LVU411
 148:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->hsv = copy_ext->hsv;
 1380              		.loc 1 148 41 is_stmt 0 view .LVU412
 1381 00aa 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1382 00ae C3F38003 		ubfx	r3, r3, #2, #1
 148:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->hsv = copy_ext->hsv;
 1383              		.loc 1 148 31 view .LVU413
 1384 00b2 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 1385 00b6 63F38202 		bfi	r2, r3, #2, #1
 1386 00ba 84F82020 		strb	r2, [r4, #32]
 149:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.colored = copy_ext->knob.colored;
 1387              		.loc 1 149 9 is_stmt 1 view .LVU414
 149:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->knob.colored = copy_ext->knob.colored;
 1388              		.loc 1 149 18 is_stmt 0 view .LVU415
ARM GAS  D:\Temp\ccfvNLhk.s 			page 55


 1389 00be 0368     		ldr	r3, [r0]
 1390 00c0 2360     		str	r3, [r4]
 150:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1391              		.loc 1 150 9 is_stmt 1 view .LVU416
 150:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1392              		.loc 1 150 43 is_stmt 0 view .LVU417
 1393 00c2 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 150:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1394              		.loc 1 150 27 view .LVU418
 1395 00c4 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1396 00c6 62F30003 		bfi	r3, r2, #0, #1
 1397 00ca 2374     		strb	r3, [r4, #16]
 152:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Refresh the style with new signal function*/
 1398              		.loc 1 152 9 is_stmt 1 view .LVU419
 1399 00cc 011D     		adds	r1, r0, #4
 1400 00ce 3046     		mov	r0, r6
 1401              	.LVL140:
 152:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Refresh the style with new signal function*/
 1402              		.loc 1 152 9 is_stmt 0 view .LVU420
 1403 00d0 FFF7FEFF 		bl	lv_style_list_copy
 1404              	.LVL141:
 154:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1405              		.loc 1 154 9 is_stmt 1 view .LVU421
 1406 00d4 FF22     		movs	r2, #255
 1407 00d6 1146     		mov	r1, r2
 1408 00d8 2846     		mov	r0, r5
 1409 00da FFF7FEFF 		bl	lv_obj_refresh_style
 1410              	.LVL142:
 1411              	.L69:
 154:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1412              		.loc 1 154 9 is_stmt 0 view .LVU422
 1413              	.LBE84:
 156:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1414              		.loc 1 156 5 is_stmt 1 view .LVU423
 1415 00de 2846     		mov	r0, r5
 1416 00e0 FFF7FEFF 		bl	refr_knob_pos
 1417              	.LVL143:
 158:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1418              		.loc 1 158 40 view .LVU424
 160:lvgl/src/lv_widgets/lv_cpicker.c **** }
 1419              		.loc 1 160 5 view .LVU425
 1420              	.L59:
 161:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1421              		.loc 1 161 1 is_stmt 0 view .LVU426
 1422 00e4 2846     		mov	r0, r5
 1423 00e6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1424              	.LVL144:
 1425              	.L71:
 107:lvgl/src/lv_widgets/lv_cpicker.c ****     if(cpicker == NULL) return NULL;
 1426              		.loc 1 107 5 is_stmt 1 discriminator 1 view .LVU427
 107:lvgl/src/lv_widgets/lv_cpicker.c ****     if(cpicker == NULL) return NULL;
 1427              		.loc 1 107 5 discriminator 1 view .LVU428
 1428 00e8 2A46     		mov	r2, r5
 1429 00ea 0023     		movs	r3, #0
 1430 00ec 1B48     		ldr	r0, .L77+20
 1431 00ee FFF7FEFF 		bl	lv_debug_log_error
 1432              	.LVL145:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 56


 1433              	.L61:
 107:lvgl/src/lv_widgets/lv_cpicker.c ****     if(cpicker == NULL) return NULL;
 1434              		.loc 1 107 5 discriminator 1 view .LVU429
 107:lvgl/src/lv_widgets/lv_cpicker.c ****     if(cpicker == NULL) return NULL;
 1435              		.loc 1 107 5 discriminator 1 view .LVU430
 1436 00f2 FEE7     		b	.L61
 1437              	.L72:
 110:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(cpicker);
 1438              		.loc 1 110 33 discriminator 1 view .LVU431
 110:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(cpicker);
 1439              		.loc 1 110 51 is_stmt 0 discriminator 1 view .LVU432
 1440 00f4 2846     		mov	r0, r5
 1441 00f6 FFF7FEFF 		bl	lv_obj_get_signal_cb
 1442              	.LVL146:
 110:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(cpicker);
 1443              		.loc 1 110 49 discriminator 1 view .LVU433
 1444 00fa 134B     		ldr	r3, .L77
 1445 00fc 1860     		str	r0, [r3]
 1446 00fe 8EE7     		b	.L63
 1447              	.L73:
 111:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1448              		.loc 1 111 33 is_stmt 1 discriminator 1 view .LVU434
 111:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1449              		.loc 1 111 51 is_stmt 0 discriminator 1 view .LVU435
 1450 0100 2846     		mov	r0, r5
 1451 0102 FFF7FEFF 		bl	lv_obj_get_design_cb
 1452              	.LVL147:
 111:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1453              		.loc 1 111 49 discriminator 1 view .LVU436
 1454 0106 114B     		ldr	r3, .L77+4
 1455 0108 1860     		str	r0, [r3]
 1456 010a 8CE7     		b	.L64
 1457              	.LVL148:
 1458              	.L74:
 115:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext == NULL) {
 1459              		.loc 1 115 5 is_stmt 1 discriminator 1 view .LVU437
 115:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext == NULL) {
 1460              		.loc 1 115 5 discriminator 1 view .LVU438
 1461 010c 2246     		mov	r2, r4
 1462 010e 0023     		movs	r3, #0
 1463 0110 1248     		ldr	r0, .L77+20
 1464 0112 FFF7FEFF 		bl	lv_debug_log_error
 1465              	.LVL149:
 1466              	.L66:
 115:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext == NULL) {
 1467              		.loc 1 115 5 discriminator 2 view .LVU439
 115:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext == NULL) {
 1468              		.loc 1 115 5 discriminator 2 view .LVU440
 1469 0116 FEE7     		b	.L66
 1470              	.L75:
 117:lvgl/src/lv_widgets/lv_cpicker.c ****         return NULL;
 1471              		.loc 1 117 9 view .LVU441
 1472 0118 2846     		mov	r0, r5
 1473 011a FFF7FEFF 		bl	lv_obj_del
 1474              	.LVL150:
 118:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1475              		.loc 1 118 9 view .LVU442
ARM GAS  D:\Temp\ccfvNLhk.s 			page 57


 118:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1476              		.loc 1 118 16 is_stmt 0 view .LVU443
 1477 011e 0025     		movs	r5, #0
 1478              	.LVL151:
 118:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1479              		.loc 1 118 16 view .LVU444
 1480 0120 E0E7     		b	.L59
 1481              	.LVL152:
 1482              	.L76:
 138:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_add_protect(cpicker, LV_PROTECT_PRESS_LOST);
 1483              		.loc 1 138 9 is_stmt 1 view .LVU445
 1484 0122 A022     		movs	r2, #160
 1485 0124 1146     		mov	r1, r2
 1486 0126 2846     		mov	r0, r5
 1487 0128 FFF7FEFF 		bl	lv_obj_set_size
 1488              	.LVL153:
 139:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_set_adv_hittest(cpicker, true);
 1489              		.loc 1 139 9 view .LVU446
 1490 012c 1021     		movs	r1, #16
 1491 012e 2846     		mov	r0, r5
 1492 0130 FFF7FEFF 		bl	lv_obj_add_protect
 1493              	.LVL154:
 140:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_theme_apply(cpicker, LV_THEME_CPICKER);
 1494              		.loc 1 140 9 view .LVU447
 1495 0134 0121     		movs	r1, #1
 1496 0136 2846     		mov	r0, r5
 1497 0138 FFF7FEFF 		bl	lv_obj_set_adv_hittest
 1498              	.LVL155:
 141:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1499              		.loc 1 141 9 view .LVU448
 1500 013c 0C21     		movs	r1, #12
 1501 013e 2846     		mov	r0, r5
 1502 0140 FFF7FEFF 		bl	lv_theme_apply
 1503              	.LVL156:
 1504 0144 CBE7     		b	.L69
 1505              	.L78:
 1506 0146 00BF     		.align	2
 1507              	.L77:
 1508 0148 00000000 		.word	.LANCHOR0
 1509 014c 00000000 		.word	.LANCHOR1
 1510 0150 00000000 		.word	.LANCHOR2
 1511 0154 00000000 		.word	lv_cpicker_signal
 1512 0158 00000000 		.word	lv_cpicker_design
 1513 015c 00000000 		.word	.LC2
 1514              		.cfi_endproc
 1515              	.LFE458:
 1517              		.section	.text.lv_cpicker_set_type,"ax",%progbits
 1518              		.align	1
 1519              		.global	lv_cpicker_set_type
 1520              		.syntax unified
 1521              		.thumb
 1522              		.thumb_func
 1523              		.fpu fpv4-sp-d16
 1525              	lv_cpicker_set_type:
 1526              	.LVL157:
 1527              	.LFB459:
 173:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
ARM GAS  D:\Temp\ccfvNLhk.s 			page 58


 1528              		.loc 1 173 1 view -0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 0
 1531              		@ frame_needed = 0, uses_anonymous_args = 0
 173:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 1532              		.loc 1 173 1 is_stmt 0 view .LVU450
 1533 0000 38B5     		push	{r3, r4, r5, lr}
 1534              	.LCFI14:
 1535              		.cfi_def_cfa_offset 16
 1536              		.cfi_offset 3, -16
 1537              		.cfi_offset 4, -12
 1538              		.cfi_offset 5, -8
 1539              		.cfi_offset 14, -4
 1540 0002 0446     		mov	r4, r0
 1541 0004 0D46     		mov	r5, r1
 174:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1542              		.loc 1 174 5 is_stmt 1 view .LVU451
 174:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1543              		.loc 1 174 5 view .LVU452
 1544 0006 FFF7FEFF 		bl	lv_debug_check_null
 1545              	.LVL158:
 174:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1546              		.loc 1 174 5 is_stmt 0 view .LVU453
 1547 000a 28B9     		cbnz	r0, .L80
 174:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1548              		.loc 1 174 5 is_stmt 1 discriminator 1 view .LVU454
 174:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1549              		.loc 1 174 5 discriminator 1 view .LVU455
 1550 000c 2246     		mov	r2, r4
 1551 000e 0023     		movs	r3, #0
 1552 0010 0E48     		ldr	r0, .L84
 1553 0012 FFF7FEFF 		bl	lv_debug_log_error
 1554              	.LVL159:
 1555              	.L81:
 174:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1556              		.loc 1 174 5 discriminator 1 view .LVU456
 174:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1557              		.loc 1 174 5 discriminator 1 view .LVU457
 1558 0016 FEE7     		b	.L81
 1559              	.L80:
 174:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1560              		.loc 1 174 41 discriminator 2 view .LVU458
 176:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->type == type) return;
 1561              		.loc 1 176 5 discriminator 2 view .LVU459
 176:lvgl/src/lv_widgets/lv_cpicker.c ****     if(ext->type == type) return;
 1562              		.loc 1 176 30 is_stmt 0 discriminator 2 view .LVU460
 1563 0018 2046     		mov	r0, r4
 1564 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
 1565              	.LVL160:
 177:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1566              		.loc 1 177 5 is_stmt 1 discriminator 2 view .LVU461
 177:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1567              		.loc 1 177 11 is_stmt 0 discriminator 2 view .LVU462
 1568 001e 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1569 0022 C3F3C003 		ubfx	r3, r3, #3, #1
 177:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1570              		.loc 1 177 7 discriminator 2 view .LVU463
ARM GAS  D:\Temp\ccfvNLhk.s 			page 59


 1571 0026 AB42     		cmp	r3, r5
 1572 0028 0ED0     		beq	.L79
 179:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_refresh_ext_draw_pad(cpicker);
 1573              		.loc 1 179 5 is_stmt 1 view .LVU464
 179:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_refresh_ext_draw_pad(cpicker);
 1574              		.loc 1 179 15 is_stmt 0 view .LVU465
 1575 002a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1576 002e 65F3C303 		bfi	r3, r5, #3, #1
 1577 0032 80F82030 		strb	r3, [r0, #32]
 180:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 1578              		.loc 1 180 5 is_stmt 1 view .LVU466
 1579 0036 2046     		mov	r0, r4
 1580              	.LVL161:
 180:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 1581              		.loc 1 180 5 is_stmt 0 view .LVU467
 1582 0038 FFF7FEFF 		bl	lv_obj_refresh_ext_draw_pad
 1583              	.LVL162:
 181:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1584              		.loc 1 181 5 is_stmt 1 view .LVU468
 1585 003c 2046     		mov	r0, r4
 1586 003e FFF7FEFF 		bl	refr_knob_pos
 1587              	.LVL163:
 183:lvgl/src/lv_widgets/lv_cpicker.c **** }
 1588              		.loc 1 183 5 view .LVU469
 1589 0042 2046     		mov	r0, r4
 1590 0044 FFF7FEFF 		bl	lv_obj_invalidate
 1591              	.LVL164:
 1592              	.L79:
 184:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1593              		.loc 1 184 1 is_stmt 0 view .LVU470
 1594 0048 38BD     		pop	{r3, r4, r5, pc}
 1595              	.LVL165:
 1596              	.L85:
 184:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1597              		.loc 1 184 1 view .LVU471
 1598 004a 00BF     		.align	2
 1599              	.L84:
 1600 004c 00000000 		.word	.LC1
 1601              		.cfi_endproc
 1602              	.LFE459:
 1604              		.section	.text.lv_cpicker_set_hsv,"ax",%progbits
 1605              		.align	1
 1606              		.global	lv_cpicker_set_hsv
 1607              		.syntax unified
 1608              		.thumb
 1609              		.thumb_func
 1610              		.fpu fpv4-sp-d16
 1612              	lv_cpicker_set_hsv:
 1613              	.LVL166:
 1614              	.LFB463:
 232:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 1615              		.loc 1 232 1 is_stmt 1 view -0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 8
 1618              		@ frame_needed = 0, uses_anonymous_args = 0
 232:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 1619              		.loc 1 232 1 is_stmt 0 view .LVU473
ARM GAS  D:\Temp\ccfvNLhk.s 			page 60


 1620 0000 30B5     		push	{r4, r5, lr}
 1621              	.LCFI15:
 1622              		.cfi_def_cfa_offset 12
 1623              		.cfi_offset 4, -12
 1624              		.cfi_offset 5, -8
 1625              		.cfi_offset 14, -4
 1626 0002 83B0     		sub	sp, sp, #12
 1627              	.LCFI16:
 1628              		.cfi_def_cfa_offset 24
 1629 0004 0446     		mov	r4, r0
 1630 0006 0191     		str	r1, [sp, #4]
 233:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1631              		.loc 1 233 5 is_stmt 1 view .LVU474
 233:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1632              		.loc 1 233 5 view .LVU475
 1633 0008 FFF7FEFF 		bl	lv_debug_check_null
 1634              	.LVL167:
 233:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1635              		.loc 1 233 5 is_stmt 0 view .LVU476
 1636 000c B0B3     		cbz	r0, .L96
 1637 000e 0546     		mov	r5, r0
 233:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1638              		.loc 1 233 41 is_stmt 1 discriminator 2 view .LVU477
 235:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.s > 100) hsv.s = 100;
 1639              		.loc 1 235 5 discriminator 2 view .LVU478
 235:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.s > 100) hsv.s = 100;
 1640              		.loc 1 235 11 is_stmt 0 discriminator 2 view .LVU479
 1641 0010 BDF80420 		ldrh	r2, [sp, #4]
 235:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.s > 100) hsv.s = 100;
 1642              		.loc 1 235 7 discriminator 2 view .LVU480
 1643 0014 B2F5B47F 		cmp	r2, #360
 1644 0018 0AD9     		bls	.L89
 235:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.s > 100) hsv.s = 100;
 1645              		.loc 1 235 21 is_stmt 1 discriminator 1 view .LVU481
 235:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.s > 100) hsv.s = 100;
 1646              		.loc 1 235 27 is_stmt 0 discriminator 1 view .LVU482
 1647 001a D308     		lsrs	r3, r2, #3
 1648 001c 1B49     		ldr	r1, .L97
 1649 001e A1FB0313 		umull	r1, r3, r1, r3
 1650 0022 9B08     		lsrs	r3, r3, #2
 1651 0024 4FF4B471 		mov	r1, #360
 1652 0028 01FB1323 		mls	r3, r1, r3, r2
 1653 002c ADF80430 		strh	r3, [sp, #4]	@ movhi
 1654              	.L89:
 236:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.v > 100) hsv.v = 100;
 1655              		.loc 1 236 5 is_stmt 1 view .LVU483
 236:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.v > 100) hsv.v = 100;
 1656              		.loc 1 236 11 is_stmt 0 view .LVU484
 1657 0030 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 236:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.v > 100) hsv.v = 100;
 1658              		.loc 1 236 7 view .LVU485
 1659 0034 642B     		cmp	r3, #100
 1660 0036 02D9     		bls	.L90
 236:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.v > 100) hsv.v = 100;
 1661              		.loc 1 236 21 is_stmt 1 discriminator 1 view .LVU486
 236:lvgl/src/lv_widgets/lv_cpicker.c ****     if(hsv.v > 100) hsv.v = 100;
 1662              		.loc 1 236 27 is_stmt 0 discriminator 1 view .LVU487
ARM GAS  D:\Temp\ccfvNLhk.s 			page 61


 1663 0038 6423     		movs	r3, #100
 1664 003a 8DF80630 		strb	r3, [sp, #6]
 1665              	.L90:
 237:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1666              		.loc 1 237 5 is_stmt 1 view .LVU488
 237:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1667              		.loc 1 237 11 is_stmt 0 view .LVU489
 1668 003e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 237:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1669              		.loc 1 237 7 view .LVU490
 1670 0042 642B     		cmp	r3, #100
 1671 0044 02D9     		bls	.L91
 237:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1672              		.loc 1 237 21 is_stmt 1 discriminator 1 view .LVU491
 237:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1673              		.loc 1 237 27 is_stmt 0 discriminator 1 view .LVU492
 1674 0046 6423     		movs	r3, #100
 1675 0048 8DF80730 		strb	r3, [sp, #7]
 1676              	.L91:
 239:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1677              		.loc 1 239 5 is_stmt 1 view .LVU493
 239:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1678              		.loc 1 239 30 is_stmt 0 view .LVU494
 1679 004c 2046     		mov	r0, r4
 1680 004e FFF7FEFF 		bl	lv_obj_get_ext_attr
 1681              	.LVL168:
 241:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1682              		.loc 1 241 5 is_stmt 1 view .LVU495
 241:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1683              		.loc 1 241 16 is_stmt 0 view .LVU496
 1684 0052 0288     		ldrh	r2, [r0]
 241:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1685              		.loc 1 241 25 view .LVU497
 1686 0054 BDF80430 		ldrh	r3, [sp, #4]
 241:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1687              		.loc 1 241 7 view .LVU498
 1688 0058 9A42     		cmp	r2, r3
 1689 005a 04D1     		bne	.L92
 241:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1690              		.loc 1 241 51 discriminator 1 view .LVU499
 1691 005c 4288     		ldrh	r2, [r0, #2]
 1692 005e BDF80630 		ldrh	r3, [sp, #6]
 1693 0062 9A42     		cmp	r2, r3
 1694 0064 10D0     		beq	.L94
 1695              	.L92:
 243:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1696              		.loc 1 243 5 is_stmt 1 view .LVU500
 243:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1697              		.loc 1 243 14 is_stmt 0 view .LVU501
 1698 0066 019B     		ldr	r3, [sp, #4]
 1699 0068 0360     		str	r3, [r0]
 245:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1700              		.loc 1 245 5 is_stmt 1 view .LVU502
 1701 006a 2046     		mov	r0, r4
 1702              	.LVL169:
 245:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1703              		.loc 1 245 5 is_stmt 0 view .LVU503
ARM GAS  D:\Temp\ccfvNLhk.s 			page 62


 1704 006c FFF7FEFF 		bl	refr_knob_pos
 1705              	.LVL170:
 247:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1706              		.loc 1 247 5 is_stmt 1 view .LVU504
 1707 0070 2046     		mov	r0, r4
 1708 0072 FFF7FEFF 		bl	lv_obj_invalidate
 1709              	.LVL171:
 249:lvgl/src/lv_widgets/lv_cpicker.c **** }
 1710              		.loc 1 249 5 view .LVU505
 1711              	.L93:
 250:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1712              		.loc 1 250 1 is_stmt 0 view .LVU506
 1713 0076 2846     		mov	r0, r5
 1714 0078 03B0     		add	sp, sp, #12
 1715              	.LCFI17:
 1716              		.cfi_remember_state
 1717              		.cfi_def_cfa_offset 12
 1718              		@ sp needed
 1719 007a 30BD     		pop	{r4, r5, pc}
 1720              	.LVL172:
 1721              	.L96:
 1722              	.LCFI18:
 1723              		.cfi_restore_state
 233:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1724              		.loc 1 233 5 is_stmt 1 discriminator 1 view .LVU507
 233:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1725              		.loc 1 233 5 discriminator 1 view .LVU508
 1726 007c 2246     		mov	r2, r4
 1727 007e 0023     		movs	r3, #0
 1728 0080 0348     		ldr	r0, .L97+4
 1729 0082 FFF7FEFF 		bl	lv_debug_log_error
 1730              	.LVL173:
 1731              	.L88:
 233:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1732              		.loc 1 233 5 discriminator 1 view .LVU509
 233:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1733              		.loc 1 233 5 discriminator 1 view .LVU510
 1734 0086 FEE7     		b	.L88
 1735              	.LVL174:
 1736              	.L94:
 241:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1737              		.loc 1 241 82 is_stmt 0 view .LVU511
 1738 0088 0025     		movs	r5, #0
 1739 008a F4E7     		b	.L93
 1740              	.L98:
 1741              		.align	2
 1742              	.L97:
 1743 008c 176CC116 		.word	381774871
 1744 0090 00000000 		.word	.LC1
 1745              		.cfi_endproc
 1746              	.LFE463:
 1748              		.section	.text.double_click_reset,"ax",%progbits
 1749              		.align	1
 1750              		.syntax unified
 1751              		.thumb
 1752              		.thumb_func
 1753              		.fpu fpv4-sp-d16
ARM GAS  D:\Temp\ccfvNLhk.s 			page 63


 1755              	double_click_reset:
 1756              	.LVL175:
 1757              	.LFB487:
 967:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 1758              		.loc 1 967 1 is_stmt 1 view -0
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 8
 1761              		@ frame_needed = 0, uses_anonymous_args = 0
 967:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 1762              		.loc 1 967 1 is_stmt 0 view .LVU513
 1763 0000 70B5     		push	{r4, r5, r6, lr}
 1764              	.LCFI19:
 1765              		.cfi_def_cfa_offset 16
 1766              		.cfi_offset 4, -16
 1767              		.cfi_offset 5, -12
 1768              		.cfi_offset 6, -8
 1769              		.cfi_offset 14, -4
 1770 0002 82B0     		sub	sp, sp, #8
 1771              	.LCFI20:
 1772              		.cfi_def_cfa_offset 24
 1773 0004 0646     		mov	r6, r0
 968:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_indev_t * indev = lv_indev_get_act();
 1774              		.loc 1 968 5 is_stmt 1 view .LVU514
 968:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_indev_t * indev = lv_indev_get_act();
 1775              		.loc 1 968 30 is_stmt 0 view .LVU515
 1776 0006 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1777              	.LVL176:
 968:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_indev_t * indev = lv_indev_get_act();
 1778              		.loc 1 968 30 view .LVU516
 1779 000a 0446     		mov	r4, r0
 1780              	.LVL177:
 969:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Double clicked? Use long press time as double click time out*/
 1781              		.loc 1 969 5 is_stmt 1 view .LVU517
 969:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Double clicked? Use long press time as double click time out*/
 1782              		.loc 1 969 26 is_stmt 0 view .LVU518
 1783 000c FFF7FEFF 		bl	lv_indev_get_act
 1784              	.LVL178:
 969:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Double clicked? Use long press time as double click time out*/
 1785              		.loc 1 969 26 view .LVU519
 1786 0010 0546     		mov	r5, r0
 1787              	.LVL179:
 971:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_color_hsv_t hsv_cur;
 1788              		.loc 1 971 5 is_stmt 1 view .LVU520
 971:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_color_hsv_t hsv_cur;
 1789              		.loc 1 971 8 is_stmt 0 view .LVU521
 1790 0012 6069     		ldr	r0, [r4, #20]
 1791              	.LVL180:
 971:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_color_hsv_t hsv_cur;
 1792              		.loc 1 971 8 view .LVU522
 1793 0014 FFF7FEFF 		bl	lv_tick_elaps
 1794              	.LVL181:
 971:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_color_hsv_t hsv_cur;
 1795              		.loc 1 971 59 view .LVU523
 1796 0018 2B8B     		ldrh	r3, [r5, #24]
 971:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_color_hsv_t hsv_cur;
 1797              		.loc 1 971 7 view .LVU524
 1798 001a 9842     		cmp	r0, r3
ARM GAS  D:\Temp\ccfvNLhk.s 			page 64


 1799 001c 14D2     		bcs	.L100
 1800              	.LBB85:
 972:lvgl/src/lv_widgets/lv_cpicker.c ****         hsv_cur = ext->hsv;
 1801              		.loc 1 972 9 is_stmt 1 view .LVU525
 973:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1802              		.loc 1 973 9 view .LVU526
 973:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1803              		.loc 1 973 17 is_stmt 0 view .LVU527
 1804 001e 2368     		ldr	r3, [r4]
 1805 0020 0193     		str	r3, [sp, #4]
 975:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 1806              		.loc 1 975 9 is_stmt 1 view .LVU528
 975:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 1807              		.loc 1 975 19 is_stmt 0 view .LVU529
 1808 0022 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 1809 0026 C3F30103 		ubfx	r3, r3, #0, #2
 1810 002a DAB2     		uxtb	r2, r3
 975:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 1811              		.loc 1 975 9 view .LVU530
 1812 002c 012A     		cmp	r2, #1
 1813 002e 15D0     		beq	.L101
 1814 0030 5BB2     		sxtb	r3, r3
 1815 0032 7BB1     		cbz	r3, .L102
 1816 0034 022A     		cmp	r2, #2
 1817 0036 15D0     		beq	.L103
 1818              	.L104:
 987:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1819              		.loc 1 987 9 is_stmt 1 view .LVU531
 1820 0038 2846     		mov	r0, r5
 1821 003a FFF7FEFF 		bl	lv_indev_wait_release
 1822              	.LVL182:
 989:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_res_t res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 1823              		.loc 1 989 9 view .LVU532
 989:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_res_t res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 1824              		.loc 1 989 12 is_stmt 0 view .LVU533
 1825 003e 0199     		ldr	r1, [sp, #4]
 1826 0040 3046     		mov	r0, r6
 1827 0042 FFF7FEFF 		bl	lv_cpicker_set_hsv
 1828              	.LVL183:
 989:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_res_t res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 1829              		.loc 1 989 11 view .LVU534
 1830 0046 88B9     		cbnz	r0, .L108
 1831              	.L100:
 989:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_res_t res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 1832              		.loc 1 989 11 view .LVU535
 1833              	.LBE85:
 994:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1834              		.loc 1 994 5 is_stmt 1 view .LVU536
 994:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1835              		.loc 1 994 28 is_stmt 0 view .LVU537
 1836 0048 FFF7FEFF 		bl	lv_tick_get
 1837              	.LVL184:
 994:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1838              		.loc 1 994 26 view .LVU538
 1839 004c 6061     		str	r0, [r4, #20]
 996:lvgl/src/lv_widgets/lv_cpicker.c **** }
 1840              		.loc 1 996 5 is_stmt 1 view .LVU539
ARM GAS  D:\Temp\ccfvNLhk.s 			page 65


 996:lvgl/src/lv_widgets/lv_cpicker.c **** }
 1841              		.loc 1 996 12 is_stmt 0 view .LVU540
 1842 004e 0120     		movs	r0, #1
 1843              	.L106:
 997:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1844              		.loc 1 997 1 view .LVU541
 1845 0050 02B0     		add	sp, sp, #8
 1846              	.LCFI21:
 1847              		.cfi_remember_state
 1848              		.cfi_def_cfa_offset 16
 1849              		@ sp needed
 1850 0052 70BD     		pop	{r4, r5, r6, pc}
 1851              	.LVL185:
 1852              	.L102:
 1853              	.LCFI22:
 1854              		.cfi_restore_state
 1855              	.LBB87:
 977:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1856              		.loc 1 977 17 is_stmt 1 view .LVU542
 977:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1857              		.loc 1 977 27 is_stmt 0 view .LVU543
 1858 0054 0023     		movs	r3, #0
 1859 0056 ADF80430 		strh	r3, [sp, #4]	@ movhi
 978:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_SATURATION:
 1860              		.loc 1 978 17 is_stmt 1 view .LVU544
 1861 005a EDE7     		b	.L104
 1862              	.L101:
 980:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1863              		.loc 1 980 17 view .LVU545
 980:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1864              		.loc 1 980 27 is_stmt 0 view .LVU546
 1865 005c 6423     		movs	r3, #100
 1866 005e 8DF80630 		strb	r3, [sp, #6]
 981:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_VALUE:
 1867              		.loc 1 981 17 is_stmt 1 view .LVU547
 1868 0062 E9E7     		b	.L104
 1869              	.L103:
 983:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1870              		.loc 1 983 17 view .LVU548
 983:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 1871              		.loc 1 983 27 is_stmt 0 view .LVU549
 1872 0064 6423     		movs	r3, #100
 1873 0066 8DF80730 		strb	r3, [sp, #7]
 984:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 1874              		.loc 1 984 17 is_stmt 1 view .LVU550
 1875 006a E5E7     		b	.L104
 1876              	.L108:
 1877              	.LBB86:
 990:lvgl/src/lv_widgets/lv_cpicker.c ****             if(res != LV_RES_OK) return res;
 1878              		.loc 1 990 13 view .LVU551
 990:lvgl/src/lv_widgets/lv_cpicker.c ****             if(res != LV_RES_OK) return res;
 1879              		.loc 1 990 28 is_stmt 0 view .LVU552
 1880 006c 0022     		movs	r2, #0
 1881 006e 1021     		movs	r1, #16
 1882 0070 3046     		mov	r0, r6
 1883 0072 FFF7FEFF 		bl	lv_event_send
 1884              	.LVL186:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 66


 991:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 1885              		.loc 1 991 13 is_stmt 1 view .LVU553
 991:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 1886              		.loc 1 991 15 is_stmt 0 view .LVU554
 1887 0076 0128     		cmp	r0, #1
 1888 0078 EAD1     		bne	.L106
 1889 007a E5E7     		b	.L100
 1890              	.LBE86:
 1891              	.LBE87:
 1892              		.cfi_endproc
 1893              	.LFE487:
 1895              		.section	.text.lv_cpicker_signal,"ax",%progbits
 1896              		.align	1
 1897              		.syntax unified
 1898              		.thumb
 1899              		.thumb_func
 1900              		.fpu fpv4-sp-d16
 1902              	lv_cpicker_signal:
 1903              	.LVL187:
 1904              	.LFB482:
 669:lvgl/src/lv_widgets/lv_cpicker.c ****     /* Include the ancient signal function */
 1905              		.loc 1 669 1 is_stmt 1 view -0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 8
 1908              		@ frame_needed = 0, uses_anonymous_args = 0
 669:lvgl/src/lv_widgets/lv_cpicker.c ****     /* Include the ancient signal function */
 1909              		.loc 1 669 1 is_stmt 0 view .LVU556
 1910 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1911              	.LCFI23:
 1912              		.cfi_def_cfa_offset 28
 1913              		.cfi_offset 4, -28
 1914              		.cfi_offset 5, -24
 1915              		.cfi_offset 6, -20
 1916              		.cfi_offset 7, -16
 1917              		.cfi_offset 8, -12
 1918              		.cfi_offset 9, -8
 1919              		.cfi_offset 14, -4
 1920 0004 83B0     		sub	sp, sp, #12
 1921              	.LCFI24:
 1922              		.cfi_def_cfa_offset 40
 1923 0006 0546     		mov	r5, r0
 1924 0008 0C46     		mov	r4, r1
 1925 000a 1746     		mov	r7, r2
 671:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1926              		.loc 1 671 5 is_stmt 1 view .LVU557
 673:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_get_style_info_t * info = param;
 1927              		.loc 1 673 5 view .LVU558
 673:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_get_style_info_t * info = param;
 1928              		.loc 1 673 7 is_stmt 0 view .LVU559
 1929 000c 0829     		cmp	r1, #8
 1930 000e 24D0     		beq	.L164
 680:lvgl/src/lv_widgets/lv_cpicker.c ****     if(res != LV_RES_OK) return res;
 1931              		.loc 1 680 5 is_stmt 1 view .LVU560
 680:lvgl/src/lv_widgets/lv_cpicker.c ****     if(res != LV_RES_OK) return res;
 1932              		.loc 1 680 11 is_stmt 0 view .LVU561
 1933 0010 A44B     		ldr	r3, .L178
 1934 0012 1B68     		ldr	r3, [r3]
ARM GAS  D:\Temp\ccfvNLhk.s 			page 67


 1935 0014 9847     		blx	r3
 1936              	.LVL188:
 680:lvgl/src/lv_widgets/lv_cpicker.c ****     if(res != LV_RES_OK) return res;
 1937              		.loc 1 680 11 view .LVU562
 1938 0016 0646     		mov	r6, r0
 1939              	.LVL189:
 681:lvgl/src/lv_widgets/lv_cpicker.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 1940              		.loc 1 681 5 is_stmt 1 view .LVU563
 681:lvgl/src/lv_widgets/lv_cpicker.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 1941              		.loc 1 681 7 is_stmt 0 view .LVU564
 1942 0018 0128     		cmp	r0, #1
 1943 001a 24D1     		bne	.L111
 682:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1944              		.loc 1 682 5 is_stmt 1 view .LVU565
 682:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1945              		.loc 1 682 7 is_stmt 0 view .LVU566
 1946 001c 072C     		cmp	r4, #7
 1947 001e 2ED0     		beq	.L165
 684:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1948              		.loc 1 684 5 is_stmt 1 view .LVU567
 684:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1949              		.loc 1 684 30 is_stmt 0 view .LVU568
 1950 0020 2846     		mov	r0, r5
 1951              	.LVL190:
 684:lvgl/src/lv_widgets/lv_cpicker.c **** 
 1952              		.loc 1 684 30 view .LVU569
 1953 0022 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1954              	.LVL191:
 1955 0026 8046     		mov	r8, r0
 1956              	.LVL192:
 686:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_clean_style_list(cpicker, LV_CPICKER_PART_KNOB);
 1957              		.loc 1 686 5 is_stmt 1 view .LVU570
 686:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_clean_style_list(cpicker, LV_CPICKER_PART_KNOB);
 1958              		.loc 1 686 7 is_stmt 0 view .LVU571
 1959 0028 7CB3     		cbz	r4, .L166
 689:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_int_t left = lv_obj_get_style_pad_left(cpicker, LV_CPICKER_PART_KNOB);
 1960              		.loc 1 689 10 is_stmt 1 view .LVU572
 689:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_int_t left = lv_obj_get_style_pad_left(cpicker, LV_CPICKER_PART_KNOB);
 1961              		.loc 1 689 12 is_stmt 0 view .LVU573
 1962 002a 062C     		cmp	r4, #6
 1963 002c 32D0     		beq	.L167
 705:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Refresh extended draw area to make knob visible*/
 1964              		.loc 1 705 10 is_stmt 1 view .LVU574
 705:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Refresh extended draw area to make knob visible*/
 1965              		.loc 1 705 12 is_stmt 0 view .LVU575
 1966 002e 022C     		cmp	r4, #2
 1967 0030 72D0     		beq	.L168
 714:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Refresh extended draw area to make knob visible*/
 1968              		.loc 1 714 10 is_stmt 1 view .LVU576
 714:lvgl/src/lv_widgets/lv_cpicker.c ****         /*Refresh extended draw area to make knob visible*/
 1969              		.loc 1 714 12 is_stmt 0 view .LVU577
 1970 0032 042C     		cmp	r4, #4
 1971 0034 00F09180 		beq	.L169
 720:lvgl/src/lv_widgets/lv_cpicker.c **** #if LV_USE_GROUP
 1972              		.loc 1 720 10 is_stmt 1 view .LVU578
 720:lvgl/src/lv_widgets/lv_cpicker.c **** #if LV_USE_GROUP
 1973              		.loc 1 720 12 is_stmt 0 view .LVU579
ARM GAS  D:\Temp\ccfvNLhk.s 			page 68


 1974 0038 182C     		cmp	r4, #24
 1975 003a 00F09880 		beq	.L170
 768:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->last_change_time = lv_tick_get();
 1976              		.loc 1 768 10 is_stmt 1 view .LVU580
 768:lvgl/src/lv_widgets/lv_cpicker.c ****         ext->last_change_time = lv_tick_get();
 1977              		.loc 1 768 12 is_stmt 0 view .LVU581
 1978 003e 0B2C     		cmp	r4, #11
 1979 0040 00F02081 		beq	.L171
 774:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_indev_t * indev = lv_indev_get_act();
 1980              		.loc 1 774 10 is_stmt 1 view .LVU582
 774:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_indev_t * indev = lv_indev_get_act();
 1981              		.loc 1 774 12 is_stmt 0 view .LVU583
 1982 0044 0C2C     		cmp	r4, #12
 1983 0046 00F03581 		beq	.L172
 870:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_hit_test_info_t * info = param;
 1984              		.loc 1 870 10 is_stmt 1 view .LVU584
 870:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_hit_test_info_t * info = param;
 1985              		.loc 1 870 12 is_stmt 0 view .LVU585
 1986 004a 0A2C     		cmp	r4, #10
 1987 004c 0BD1     		bne	.L111
 1988              	.LBB88:
 871:lvgl/src/lv_widgets/lv_cpicker.c ****         info->result = lv_cpicker_hit(cpicker, info->point);
 1989              		.loc 1 871 9 is_stmt 1 view .LVU586
 1990              	.LVL193:
 872:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1991              		.loc 1 872 9 view .LVU587
 872:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1992              		.loc 1 872 24 is_stmt 0 view .LVU588
 1993 004e 3968     		ldr	r1, [r7]
 1994 0050 2846     		mov	r0, r5
 1995              	.LVL194:
 872:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1996              		.loc 1 872 24 view .LVU589
 1997 0052 FFF7FEFF 		bl	lv_cpicker_hit
 1998              	.LVL195:
 872:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 1999              		.loc 1 872 22 view .LVU590
 2000 0056 3871     		strb	r0, [r7, #4]
 2001 0058 05E0     		b	.L111
 2002              	.LVL196:
 2003              	.L164:
 872:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 2004              		.loc 1 872 22 view .LVU591
 2005              	.LBE88:
 2006              	.LBB89:
 674:lvgl/src/lv_widgets/lv_cpicker.c ****         info->result = lv_cpicker_get_style(cpicker, info->part);
 2007              		.loc 1 674 9 is_stmt 1 view .LVU592
 675:lvgl/src/lv_widgets/lv_cpicker.c ****         if(info->result != NULL) return LV_RES_OK;
 2008              		.loc 1 675 9 view .LVU593
 675:lvgl/src/lv_widgets/lv_cpicker.c ****         if(info->result != NULL) return LV_RES_OK;
 2009              		.loc 1 675 24 is_stmt 0 view .LVU594
 2010 005a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2011              	.LVL197:
 675:lvgl/src/lv_widgets/lv_cpicker.c ****         if(info->result != NULL) return LV_RES_OK;
 2012              		.loc 1 675 24 view .LVU595
 2013 005c FFF7FEFF 		bl	lv_cpicker_get_style
 2014              	.LVL198:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 69


 675:lvgl/src/lv_widgets/lv_cpicker.c ****         if(info->result != NULL) return LV_RES_OK;
 2015              		.loc 1 675 22 view .LVU596
 2016 0060 7860     		str	r0, [r7, #4]
 676:lvgl/src/lv_widgets/lv_cpicker.c ****         else return ancestor_signal(cpicker, sign, param);
 2017              		.loc 1 676 9 is_stmt 1 view .LVU597
 676:lvgl/src/lv_widgets/lv_cpicker.c ****         else return ancestor_signal(cpicker, sign, param);
 2018              		.loc 1 676 11 is_stmt 0 view .LVU598
 2019 0062 20B1     		cbz	r0, .L173
 676:lvgl/src/lv_widgets/lv_cpicker.c ****         else return ancestor_signal(cpicker, sign, param);
 2020              		.loc 1 676 41 view .LVU599
 2021 0064 0126     		movs	r6, #1
 2022              	.LVL199:
 2023              	.L111:
 676:lvgl/src/lv_widgets/lv_cpicker.c ****         else return ancestor_signal(cpicker, sign, param);
 2024              		.loc 1 676 41 view .LVU600
 2025              	.LBE89:
 876:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2026              		.loc 1 876 1 view .LVU601
 2027 0066 3046     		mov	r0, r6
 2028 0068 03B0     		add	sp, sp, #12
 2029              	.LCFI25:
 2030              		.cfi_remember_state
 2031              		.cfi_def_cfa_offset 28
 2032              		@ sp needed
 2033 006a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2034              	.LVL200:
 2035              	.L173:
 2036              	.LCFI26:
 2037              		.cfi_restore_state
 2038              	.LBB90:
 677:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 2039              		.loc 1 677 14 is_stmt 1 view .LVU602
 677:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 2040              		.loc 1 677 21 is_stmt 0 view .LVU603
 2041 006e 8D4B     		ldr	r3, .L178
 2042 0070 1B68     		ldr	r3, [r3]
 2043 0072 3A46     		mov	r2, r7
 2044 0074 2146     		mov	r1, r4
 2045 0076 2846     		mov	r0, r5
 2046 0078 9847     		blx	r3
 2047              	.LVL201:
 2048 007a 0646     		mov	r6, r0
 2049 007c F3E7     		b	.L111
 2050              	.LVL202:
 2051              	.L165:
 677:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 2052              		.loc 1 677 21 view .LVU604
 2053              	.LBE90:
 682:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2054              		.loc 1 682 36 is_stmt 1 discriminator 1 view .LVU605
 682:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2055              		.loc 1 682 43 is_stmt 0 discriminator 1 view .LVU606
 2056 007e 8A49     		ldr	r1, .L178+4
 2057 0080 3846     		mov	r0, r7
 2058              	.LVL203:
 682:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2059              		.loc 1 682 43 discriminator 1 view .LVU607
ARM GAS  D:\Temp\ccfvNLhk.s 			page 70


 2060 0082 FFF7FEFF 		bl	lv_obj_handle_get_type_signal
 2061              	.LVL204:
 2062 0086 0646     		mov	r6, r0
 2063 0088 EDE7     		b	.L111
 2064              	.LVL205:
 2065              	.L166:
 687:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 2066              		.loc 1 687 9 is_stmt 1 view .LVU608
 2067 008a 0121     		movs	r1, #1
 2068 008c 2846     		mov	r0, r5
 2069              	.LVL206:
 687:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 2070              		.loc 1 687 9 is_stmt 0 view .LVU609
 2071 008e FFF7FEFF 		bl	lv_obj_clean_style_list
 2072              	.LVL207:
 2073 0092 E8E7     		b	.L111
 2074              	.LVL208:
 2075              	.L167:
 2076              	.LBB91:
 690:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_int_t right = lv_obj_get_style_pad_right(cpicker, LV_CPICKER_PART_KNOB);
 2077              		.loc 1 690 9 is_stmt 1 view .LVU610
 2078              	.LBB92:
 2079              	.LBI92:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2080              		.loc 2 112 1 view .LVU611
 2081              	.LBB93:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2082              		.loc 2 112 1 view .LVU612
 2083 0094 1222     		movs	r2, #18
 2084 0096 0121     		movs	r1, #1
 2085 0098 2846     		mov	r0, r5
 2086              	.LVL209:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2087              		.loc 2 112 1 is_stmt 0 view .LVU613
 2088 009a FFF7FEFF 		bl	_lv_obj_get_style_int
 2089              	.LVL210:
 2090 009e 8146     		mov	r9, r0
 2091              	.LVL211:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2092              		.loc 2 112 1 view .LVU614
 2093              	.LBE93:
 2094              	.LBE92:
 691:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_int_t top = lv_obj_get_style_pad_top(cpicker, LV_CPICKER_PART_KNOB);
 2095              		.loc 1 691 9 is_stmt 1 view .LVU615
 2096              	.LBB94:
 2097              	.LBI94:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2098              		.loc 2 113 1 view .LVU616
 2099              	.LBB95:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2100              		.loc 2 113 1 view .LVU617
 2101 00a0 1322     		movs	r2, #19
 2102 00a2 0121     		movs	r1, #1
 2103 00a4 2846     		mov	r0, r5
 2104 00a6 FFF7FEFF 		bl	_lv_obj_get_style_int
 2105              	.LVL212:
 2106 00aa 0746     		mov	r7, r0
ARM GAS  D:\Temp\ccfvNLhk.s 			page 71


 2107              	.LVL213:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2108              		.loc 2 113 1 is_stmt 0 view .LVU618
 2109              	.LBE95:
 2110              	.LBE94:
 692:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_style_int_t bottom = lv_obj_get_style_pad_bottom(cpicker, LV_CPICKER_PART_KNOB);
 2111              		.loc 1 692 9 is_stmt 1 view .LVU619
 2112              	.LBB96:
 2113              	.LBI96:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 2114              		.loc 2 110 1 view .LVU620
 2115              	.LBB97:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 2116              		.loc 2 110 1 view .LVU621
 2117 00ac 1022     		movs	r2, #16
 2118 00ae 0121     		movs	r1, #1
 2119 00b0 2846     		mov	r0, r5
 2120 00b2 FFF7FEFF 		bl	_lv_obj_get_style_int
 2121              	.LVL214:
 2122 00b6 0446     		mov	r4, r0
 2123              	.LVL215:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 2124              		.loc 2 110 1 is_stmt 0 view .LVU622
 2125              	.LBE97:
 2126              	.LBE96:
 693:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2127              		.loc 1 693 9 is_stmt 1 view .LVU623
 2128              	.LBB98:
 2129              	.LBI98:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 2130              		.loc 2 111 1 view .LVU624
 2131              	.LBB99:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 2132              		.loc 2 111 1 view .LVU625
 2133 00b8 1122     		movs	r2, #17
 2134 00ba 0121     		movs	r1, #1
 2135 00bc 2846     		mov	r0, r5
 2136 00be FFF7FEFF 		bl	_lv_obj_get_style_int
 2137              	.LVL216:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 2138              		.loc 2 111 1 is_stmt 0 view .LVU626
 2139              	.LBE99:
 2140              	.LBE98:
 695:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2141              		.loc 1 695 9 is_stmt 1 view .LVU627
 695:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2142              		.loc 1 695 31 is_stmt 0 view .LVU628
 2143 00c2 8442     		cmp	r4, r0
 2144 00c4 B8BF     		it	lt
 2145 00c6 0446     		movlt	r4, r0
 2146              	.LVL217:
 695:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2147              		.loc 1 695 31 view .LVU629
 2148 00c8 24B2     		sxth	r4, r4
 2149 00ca 4F45     		cmp	r7, r9
 2150 00cc B8BF     		it	lt
 2151 00ce 4F46     		movlt	r7, r9
ARM GAS  D:\Temp\ccfvNLhk.s 			page 72


 2152              	.LVL218:
 695:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2153              		.loc 1 695 31 view .LVU630
 2154 00d0 38B2     		sxth	r0, r7
 2155              	.LVL219:
 695:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2156              		.loc 1 695 31 view .LVU631
 2157 00d2 8442     		cmp	r4, r0
 2158 00d4 B8BF     		it	lt
 2159 00d6 0446     		movlt	r4, r0
 2160 00d8 A4B2     		uxth	r4, r4
 695:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2161              		.loc 1 695 70 view .LVU632
 2162 00da 0234     		adds	r4, r4, #2
 2163 00dc A4B2     		uxth	r4, r4
 695:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2164              		.loc 1 695 20 view .LVU633
 2165 00de 21B2     		sxth	r1, r4
 2166              	.LVL220:
 697:lvgl/src/lv_widgets/lv_cpicker.c ****             cpicker->ext_draw_pad = LV_MATH_MAX(cpicker->ext_draw_pad, knob_pad);
 2167              		.loc 1 697 9 is_stmt 1 view .LVU634
 697:lvgl/src/lv_widgets/lv_cpicker.c ****             cpicker->ext_draw_pad = LV_MATH_MAX(cpicker->ext_draw_pad, knob_pad);
 2168              		.loc 1 697 22 is_stmt 0 view .LVU635
 2169 00e0 98F82020 		ldrb	r2, [r8, #32]	@ zero_extendqisi2
 697:lvgl/src/lv_widgets/lv_cpicker.c ****             cpicker->ext_draw_pad = LV_MATH_MAX(cpicker->ext_draw_pad, knob_pad);
 2170              		.loc 1 697 11 view .LVU636
 2171 00e4 12F0080F 		tst	r2, #8
 2172 00e8 06D0     		beq	.L115
 698:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2173              		.loc 1 698 13 is_stmt 1 view .LVU637
 698:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2174              		.loc 1 698 37 is_stmt 0 view .LVU638
 2175 00ea B5F93230 		ldrsh	r3, [r5, #50]
 2176 00ee 8B42     		cmp	r3, r1
 2177 00f0 B8BF     		it	lt
 2178 00f2 0B46     		movlt	r3, r1
 698:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2179              		.loc 1 698 35 view .LVU639
 2180 00f4 6B86     		strh	r3, [r5, #50]	@ movhi
 2181 00f6 B6E7     		b	.L111
 2182              	.L115:
 701:lvgl/src/lv_widgets/lv_cpicker.c ****             cpicker->ext_draw_pad = LV_MATH_MAX(cpicker->ext_draw_pad, knob_pad);
 2183              		.loc 1 701 13 is_stmt 1 view .LVU640
 701:lvgl/src/lv_widgets/lv_cpicker.c ****             cpicker->ext_draw_pad = LV_MATH_MAX(cpicker->ext_draw_pad, knob_pad);
 2184              		.loc 1 701 25 is_stmt 0 view .LVU641
 2185 00f8 2846     		mov	r0, r5
 2186 00fa FFF7FEFF 		bl	lv_obj_get_height
 2187              	.LVL221:
 701:lvgl/src/lv_widgets/lv_cpicker.c ****             cpicker->ext_draw_pad = LV_MATH_MAX(cpicker->ext_draw_pad, knob_pad);
 2188              		.loc 1 701 52 view .LVU642
 2189 00fe 00EBD070 		add	r0, r0, r0, lsr #31
 2190 0102 40F34F03 		sbfx	r3, r0, #1, #16
 701:lvgl/src/lv_widgets/lv_cpicker.c ****             cpicker->ext_draw_pad = LV_MATH_MAX(cpicker->ext_draw_pad, knob_pad);
 2191              		.loc 1 701 22 view .LVU643
 2192 0106 2344     		add	r3, r3, r4
 2193 0108 1BB2     		sxth	r3, r3
 2194              	.LVL222:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 73


 702:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2195              		.loc 1 702 13 is_stmt 1 view .LVU644
 702:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2196              		.loc 1 702 37 is_stmt 0 view .LVU645
 2197 010a B5F93220 		ldrsh	r2, [r5, #50]
 2198 010e 9342     		cmp	r3, r2
 2199 0110 B8BF     		it	lt
 2200 0112 1346     		movlt	r3, r2
 2201              	.LVL223:
 702:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2202              		.loc 1 702 35 view .LVU646
 2203 0114 6B86     		strh	r3, [r5, #50]	@ movhi
 2204 0116 A6E7     		b	.L111
 2205              	.LVL224:
 2206              	.L168:
 702:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2207              		.loc 1 702 35 view .LVU647
 2208              	.LBE91:
 707:lvgl/src/lv_widgets/lv_cpicker.c ****            lv_obj_get_height(cpicker) != lv_area_get_height(param)) {
 2209              		.loc 1 707 9 is_stmt 1 view .LVU648
 707:lvgl/src/lv_widgets/lv_cpicker.c ****            lv_obj_get_height(cpicker) != lv_area_get_height(param)) {
 2210              		.loc 1 707 12 is_stmt 0 view .LVU649
 2211 0118 2846     		mov	r0, r5
 2212              	.LVL225:
 707:lvgl/src/lv_widgets/lv_cpicker.c ****            lv_obj_get_height(cpicker) != lv_area_get_height(param)) {
 2213              		.loc 1 707 12 view .LVU650
 2214 011a FFF7FEFF 		bl	lv_obj_get_width
 2215              	.LVL226:
 2216              	.LBB100:
 2217              	.LBI100:
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 2218              		.loc 3 107 26 is_stmt 1 view .LVU651
 2219              	.LBB101:
 2220              		.loc 3 109 5 view .LVU652
 2221              		.loc 3 109 31 is_stmt 0 view .LVU653
 2222 011e BB88     		ldrh	r3, [r7, #4]
 2223              		.loc 3 109 44 view .LVU654
 2224 0120 3A88     		ldrh	r2, [r7]
 2225              		.loc 3 109 36 view .LVU655
 2226 0122 9B1A     		subs	r3, r3, r2
 2227 0124 9BB2     		uxth	r3, r3
 2228              		.loc 3 109 49 view .LVU656
 2229 0126 0133     		adds	r3, r3, #1
 2230              		.loc 3 109 12 view .LVU657
 2231 0128 1BB2     		sxth	r3, r3
 2232              	.LVL227:
 2233              		.loc 3 109 12 view .LVU658
 2234              	.LBE101:
 2235              	.LBE100:
 707:lvgl/src/lv_widgets/lv_cpicker.c ****            lv_obj_get_height(cpicker) != lv_area_get_height(param)) {
 2236              		.loc 1 707 11 view .LVU659
 2237 012a 9842     		cmp	r0, r3
 2238 012c 09D0     		beq	.L174
 2239              	.L117:
 709:lvgl/src/lv_widgets/lv_cpicker.c ****             refr_knob_pos(cpicker);
 2240              		.loc 1 709 13 is_stmt 1 view .LVU660
 2241 012e 2846     		mov	r0, r5
ARM GAS  D:\Temp\ccfvNLhk.s 			page 74


 2242 0130 FFF7FEFF 		bl	lv_obj_refresh_ext_draw_pad
 2243              	.LVL228:
 710:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_obj_invalidate(cpicker);
 2244              		.loc 1 710 13 view .LVU661
 2245 0134 2846     		mov	r0, r5
 2246 0136 FFF7FEFF 		bl	refr_knob_pos
 2247              	.LVL229:
 711:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2248              		.loc 1 711 13 view .LVU662
 2249 013a 2846     		mov	r0, r5
 2250 013c FFF7FEFF 		bl	lv_obj_invalidate
 2251              	.LVL230:
 2252 0140 91E7     		b	.L111
 2253              	.L174:
 708:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_obj_refresh_ext_draw_pad(cpicker);
 2254              		.loc 1 708 12 is_stmt 0 discriminator 1 view .LVU663
 2255 0142 2846     		mov	r0, r5
 2256 0144 FFF7FEFF 		bl	lv_obj_get_height
 2257              	.LVL231:
 2258              	.LBB102:
 2259              	.LBI102:
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** }
 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Get the height of an area
 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 2260              		.loc 3 117 26 is_stmt 1 discriminator 1 view .LVU664
 2261              	.LBB103:
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 119:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 2262              		.loc 3 119 5 discriminator 1 view .LVU665
 2263              		.loc 3 119 31 is_stmt 0 discriminator 1 view .LVU666
 2264 0148 FB88     		ldrh	r3, [r7, #6]
 2265              		.loc 3 119 44 discriminator 1 view .LVU667
 2266 014a 7A88     		ldrh	r2, [r7, #2]
 2267              		.loc 3 119 36 discriminator 1 view .LVU668
 2268 014c 9B1A     		subs	r3, r3, r2
 2269 014e 9BB2     		uxth	r3, r3
 2270              		.loc 3 119 49 discriminator 1 view .LVU669
 2271 0150 0133     		adds	r3, r3, #1
 2272              		.loc 3 119 12 discriminator 1 view .LVU670
 2273 0152 1BB2     		sxth	r3, r3
 2274              	.LVL232:
 2275              		.loc 3 119 12 discriminator 1 view .LVU671
 2276              	.LBE103:
 2277              	.LBE102:
 707:lvgl/src/lv_widgets/lv_cpicker.c ****            lv_obj_get_height(cpicker) != lv_area_get_height(param)) {
 2278              		.loc 1 707 66 discriminator 1 view .LVU672
 2279 0154 9842     		cmp	r0, r3
 2280 0156 EAD1     		bne	.L117
 2281 0158 85E7     		b	.L111
 2282              	.LVL233:
 2283              	.L169:
 716:lvgl/src/lv_widgets/lv_cpicker.c ****         refr_knob_pos(cpicker);
ARM GAS  D:\Temp\ccfvNLhk.s 			page 75


 2284              		.loc 1 716 9 is_stmt 1 view .LVU673
 2285 015a 2846     		mov	r0, r5
 2286              	.LVL234:
 716:lvgl/src/lv_widgets/lv_cpicker.c ****         refr_knob_pos(cpicker);
 2287              		.loc 1 716 9 is_stmt 0 view .LVU674
 2288 015c FFF7FEFF 		bl	lv_obj_refresh_ext_draw_pad
 2289              	.LVL235:
 717:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_obj_invalidate(cpicker);
 2290              		.loc 1 717 9 is_stmt 1 view .LVU675
 2291 0160 2846     		mov	r0, r5
 2292 0162 FFF7FEFF 		bl	refr_knob_pos
 2293              	.LVL236:
 718:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 2294              		.loc 1 718 9 view .LVU676
 2295 0166 2846     		mov	r0, r5
 2296 0168 FFF7FEFF 		bl	lv_obj_invalidate
 2297              	.LVL237:
 2298 016c 7BE7     		b	.L111
 2299              	.LVL238:
 2300              	.L170:
 2301              	.LBB104:
 722:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2302              		.loc 1 722 9 view .LVU677
 722:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2303              		.loc 1 722 18 is_stmt 0 view .LVU678
 2304 016e 3B68     		ldr	r3, [r7]
 2305              	.LVL239:
 724:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_color_hsv_t hsv_cur;
 2306              		.loc 1 724 9 is_stmt 1 view .LVU679
 724:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_color_hsv_t hsv_cur;
 2307              		.loc 1 724 11 is_stmt 0 view .LVU680
 2308 0170 132B     		cmp	r3, #19
 2309 0172 23D0     		beq	.L120
 724:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_color_hsv_t hsv_cur;
 2310              		.loc 1 724 30 discriminator 1 view .LVU681
 2311 0174 112B     		cmp	r3, #17
 2312 0176 21D0     		beq	.L120
 745:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_color_hsv_t hsv_cur;
 2313              		.loc 1 745 14 is_stmt 1 view .LVU682
 745:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_color_hsv_t hsv_cur;
 2314              		.loc 1 745 16 is_stmt 0 view .LVU683
 2315 0178 142B     		cmp	r3, #20
 2316 017a 02D0     		beq	.L127
 745:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_color_hsv_t hsv_cur;
 2317              		.loc 1 745 34 discriminator 1 view .LVU684
 2318 017c 122B     		cmp	r3, #18
 2319 017e 7FF472AF 		bne	.L111
 2320              	.L127:
 2321              	.LBB105:
 746:lvgl/src/lv_widgets/lv_cpicker.c ****             hsv_cur = ext->hsv;
 2322              		.loc 1 746 13 is_stmt 1 view .LVU685
 747:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2323              		.loc 1 747 13 view .LVU686
 747:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2324              		.loc 1 747 21 is_stmt 0 view .LVU687
 2325 0182 D8F80030 		ldr	r3, [r8]
 2326              	.LVL240:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 76


 747:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2327              		.loc 1 747 21 view .LVU688
 2328 0186 0193     		str	r3, [sp, #4]
 2329              	.LVL241:
 749:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_HUE:
 2330              		.loc 1 749 13 is_stmt 1 view .LVU689
 749:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_HUE:
 2331              		.loc 1 749 23 is_stmt 0 view .LVU690
 2332 0188 98F82030 		ldrb	r3, [r8, #32]	@ zero_extendqisi2
 2333 018c C3F30103 		ubfx	r3, r3, #0, #2
 2334 0190 DAB2     		uxtb	r2, r3
 749:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_HUE:
 2335              		.loc 1 749 13 view .LVU691
 2336 0192 012A     		cmp	r2, #1
 2337 0194 62D0     		beq	.L128
 2338 0196 5BB2     		sxtb	r3, r3
 2339 0198 002B     		cmp	r3, #0
 2340 019a 54D0     		beq	.L129
 2341 019c 022A     		cmp	r2, #2
 2342 019e 67D0     		beq	.L130
 2343              	.L131:
 761:lvgl/src/lv_widgets/lv_cpicker.c ****                 res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 2344              		.loc 1 761 13 is_stmt 1 view .LVU692
 761:lvgl/src/lv_widgets/lv_cpicker.c ****                 res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 2345              		.loc 1 761 16 is_stmt 0 view .LVU693
 2346 01a0 0199     		ldr	r1, [sp, #4]
 2347 01a2 2846     		mov	r0, r5
 2348              	.LVL242:
 761:lvgl/src/lv_widgets/lv_cpicker.c ****                 res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 2349              		.loc 1 761 16 view .LVU694
 2350 01a4 FFF7FEFF 		bl	lv_cpicker_set_hsv
 2351              	.LVL243:
 761:lvgl/src/lv_widgets/lv_cpicker.c ****                 res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 2352              		.loc 1 761 15 view .LVU695
 2353 01a8 0028     		cmp	r0, #0
 2354 01aa 3FF45CAF 		beq	.L111
 762:lvgl/src/lv_widgets/lv_cpicker.c ****                 if(res != LV_RES_OK) return res;
 2355              		.loc 1 762 17 is_stmt 1 view .LVU696
 762:lvgl/src/lv_widgets/lv_cpicker.c ****                 if(res != LV_RES_OK) return res;
 2356              		.loc 1 762 23 is_stmt 0 view .LVU697
 2357 01ae 0022     		movs	r2, #0
 2358 01b0 1021     		movs	r1, #16
 2359 01b2 2846     		mov	r0, r5
 2360 01b4 FFF7FEFF 		bl	lv_event_send
 2361              	.LVL244:
 2362 01b8 0646     		mov	r6, r0
 2363              	.LVL245:
 763:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2364              		.loc 1 763 17 is_stmt 1 view .LVU698
 2365 01ba 54E7     		b	.L111
 2366              	.LVL246:
 2367              	.L120:
 763:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2368              		.loc 1 763 17 is_stmt 0 view .LVU699
 2369              	.LBE105:
 2370              	.LBB106:
 725:lvgl/src/lv_widgets/lv_cpicker.c ****             hsv_cur = ext->hsv;
ARM GAS  D:\Temp\ccfvNLhk.s 			page 77


 2371              		.loc 1 725 13 is_stmt 1 view .LVU700
 726:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2372              		.loc 1 726 13 view .LVU701
 726:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2373              		.loc 1 726 21 is_stmt 0 view .LVU702
 2374 01bc D8F80030 		ldr	r3, [r8]
 2375              	.LVL247:
 726:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2376              		.loc 1 726 21 view .LVU703
 2377 01c0 0193     		str	r3, [sp, #4]
 2378              	.LVL248:
 728:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_HUE:
 2379              		.loc 1 728 13 is_stmt 1 view .LVU704
 728:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_HUE:
 2380              		.loc 1 728 23 is_stmt 0 view .LVU705
 2381 01c2 98F82030 		ldrb	r3, [r8, #32]	@ zero_extendqisi2
 2382 01c6 C3F30103 		ubfx	r3, r3, #0, #2
 2383 01ca DAB2     		uxtb	r2, r3
 728:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_HUE:
 2384              		.loc 1 728 13 view .LVU706
 2385 01cc 012A     		cmp	r2, #1
 2386 01ce 20D0     		beq	.L122
 2387 01d0 5BB2     		sxtb	r3, r3
 2388 01d2 7BB1     		cbz	r3, .L123
 2389 01d4 022A     		cmp	r2, #2
 2390 01d6 29D0     		beq	.L124
 2391              	.L125:
 740:lvgl/src/lv_widgets/lv_cpicker.c ****                 res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 2392              		.loc 1 740 13 is_stmt 1 view .LVU707
 740:lvgl/src/lv_widgets/lv_cpicker.c ****                 res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 2393              		.loc 1 740 16 is_stmt 0 view .LVU708
 2394 01d8 0199     		ldr	r1, [sp, #4]
 2395 01da 2846     		mov	r0, r5
 2396              	.LVL249:
 740:lvgl/src/lv_widgets/lv_cpicker.c ****                 res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 2397              		.loc 1 740 16 view .LVU709
 2398 01dc FFF7FEFF 		bl	lv_cpicker_set_hsv
 2399              	.LVL250:
 740:lvgl/src/lv_widgets/lv_cpicker.c ****                 res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 2400              		.loc 1 740 15 view .LVU710
 2401 01e0 0028     		cmp	r0, #0
 2402 01e2 3FF440AF 		beq	.L111
 741:lvgl/src/lv_widgets/lv_cpicker.c ****                 if(res != LV_RES_OK) return res;
 2403              		.loc 1 741 17 is_stmt 1 view .LVU711
 741:lvgl/src/lv_widgets/lv_cpicker.c ****                 if(res != LV_RES_OK) return res;
 2404              		.loc 1 741 23 is_stmt 0 view .LVU712
 2405 01e6 0022     		movs	r2, #0
 2406 01e8 1021     		movs	r1, #16
 2407 01ea 2846     		mov	r0, r5
 2408 01ec FFF7FEFF 		bl	lv_event_send
 2409              	.LVL251:
 2410 01f0 0646     		mov	r6, r0
 2411              	.LVL252:
 742:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2412              		.loc 1 742 17 is_stmt 1 view .LVU713
 2413 01f2 38E7     		b	.L111
 2414              	.LVL253:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 78


 2415              	.L123:
 730:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2416              		.loc 1 730 21 view .LVU714
 730:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2417              		.loc 1 730 42 is_stmt 0 view .LVU715
 2418 01f4 B8F80020 		ldrh	r2, [r8]
 730:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2419              		.loc 1 730 45 view .LVU716
 2420 01f8 0132     		adds	r2, r2, #1
 730:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2421              		.loc 1 730 50 view .LVU717
 2422 01fa 2C4B     		ldr	r3, .L178+8
 2423 01fc 83FB0213 		smull	r1, r3, r3, r2
 2424 0200 1344     		add	r3, r3, r2
 2425 0202 1B12     		asrs	r3, r3, #8
 2426 0204 4FF4B471 		mov	r1, #360
 2427 0208 01FB1323 		mls	r3, r1, r3, r2
 730:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2428              		.loc 1 730 31 view .LVU718
 2429 020c ADF80430 		strh	r3, [sp, #4]	@ movhi
 731:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_SATURATION:
 2430              		.loc 1 731 21 is_stmt 1 view .LVU719
 2431 0210 E2E7     		b	.L125
 2432              	.L122:
 733:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2433              		.loc 1 733 21 view .LVU720
 733:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2434              		.loc 1 733 42 is_stmt 0 view .LVU721
 2435 0212 98F80220 		ldrb	r2, [r8, #2]	@ zero_extendqisi2
 733:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2436              		.loc 1 733 45 view .LVU722
 2437 0216 0132     		adds	r2, r2, #1
 733:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2438              		.loc 1 733 50 view .LVU723
 2439 0218 254B     		ldr	r3, .L178+12
 2440 021a 83FB0213 		smull	r1, r3, r3, r2
 2441 021e 5B11     		asrs	r3, r3, #5
 2442 0220 6421     		movs	r1, #100
 2443 0222 01FB1323 		mls	r3, r1, r3, r2
 733:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2444              		.loc 1 733 31 view .LVU724
 2445 0226 8DF80630 		strb	r3, [sp, #6]
 734:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_VALUE:
 2446              		.loc 1 734 21 is_stmt 1 view .LVU725
 2447 022a D5E7     		b	.L125
 2448              	.L124:
 736:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2449              		.loc 1 736 21 view .LVU726
 736:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2450              		.loc 1 736 42 is_stmt 0 view .LVU727
 2451 022c 98F80320 		ldrb	r2, [r8, #3]	@ zero_extendqisi2
 736:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2452              		.loc 1 736 45 view .LVU728
 2453 0230 0132     		adds	r2, r2, #1
 736:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2454              		.loc 1 736 50 view .LVU729
 2455 0232 1F4B     		ldr	r3, .L178+12
ARM GAS  D:\Temp\ccfvNLhk.s 			page 79


 2456 0234 83FB0213 		smull	r1, r3, r3, r2
 2457 0238 5B11     		asrs	r3, r3, #5
 2458 023a 6421     		movs	r1, #100
 2459 023c 01FB1323 		mls	r3, r1, r3, r2
 736:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2460              		.loc 1 736 31 view .LVU730
 2461 0240 8DF80730 		strb	r3, [sp, #7]
 737:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2462              		.loc 1 737 21 is_stmt 1 view .LVU731
 2463 0244 C8E7     		b	.L125
 2464              	.L129:
 737:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2465              		.loc 1 737 21 is_stmt 0 view .LVU732
 2466              	.LBE106:
 2467              	.LBB107:
 751:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2468              		.loc 1 751 21 is_stmt 1 view .LVU733
 751:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2469              		.loc 1 751 41 is_stmt 0 view .LVU734
 2470 0246 B8F80030 		ldrh	r3, [r8]
 751:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2471              		.loc 1 751 31 view .LVU735
 2472 024a 23B1     		cbz	r3, .L156
 751:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2473              		.loc 1 751 31 discriminator 1 view .LVU736
 2474 024c 013B     		subs	r3, r3, #1
 2475 024e 9BB2     		uxth	r3, r3
 2476              	.L132:
 751:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2477              		.loc 1 751 31 discriminator 4 view .LVU737
 2478 0250 ADF80430 		strh	r3, [sp, #4]	@ movhi
 752:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_SATURATION:
 2479              		.loc 1 752 21 is_stmt 1 discriminator 4 view .LVU738
 2480 0254 A4E7     		b	.L131
 2481              	.L156:
 751:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2482              		.loc 1 751 31 is_stmt 0 view .LVU739
 2483 0256 4FF4B473 		mov	r3, #360
 2484 025a F9E7     		b	.L132
 2485              	.L128:
 754:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2486              		.loc 1 754 21 is_stmt 1 view .LVU740
 754:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2487              		.loc 1 754 41 is_stmt 0 view .LVU741
 2488 025c 98F80230 		ldrb	r3, [r8, #2]	@ zero_extendqisi2
 754:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2489              		.loc 1 754 31 view .LVU742
 2490 0260 23B1     		cbz	r3, .L157
 754:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2491              		.loc 1 754 31 discriminator 1 view .LVU743
 2492 0262 013B     		subs	r3, r3, #1
 2493 0264 DBB2     		uxtb	r3, r3
 2494              	.L133:
 754:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2495              		.loc 1 754 31 discriminator 4 view .LVU744
 2496 0266 8DF80630 		strb	r3, [sp, #6]
 755:lvgl/src/lv_widgets/lv_cpicker.c ****                 case LV_CPICKER_COLOR_MODE_VALUE:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 80


 2497              		.loc 1 755 21 is_stmt 1 discriminator 4 view .LVU745
 2498 026a 99E7     		b	.L131
 2499              	.L157:
 754:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2500              		.loc 1 754 31 is_stmt 0 view .LVU746
 2501 026c 6423     		movs	r3, #100
 2502 026e FAE7     		b	.L133
 2503              	.L130:
 757:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2504              		.loc 1 757 21 is_stmt 1 view .LVU747
 757:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2505              		.loc 1 757 41 is_stmt 0 view .LVU748
 2506 0270 98F80330 		ldrb	r3, [r8, #3]	@ zero_extendqisi2
 757:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2507              		.loc 1 757 31 view .LVU749
 2508 0274 23B1     		cbz	r3, .L158
 757:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2509              		.loc 1 757 31 discriminator 1 view .LVU750
 2510 0276 013B     		subs	r3, r3, #1
 2511 0278 DBB2     		uxtb	r3, r3
 2512              	.L134:
 757:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2513              		.loc 1 757 31 discriminator 4 view .LVU751
 2514 027a 8DF80730 		strb	r3, [sp, #7]
 758:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2515              		.loc 1 758 21 is_stmt 1 discriminator 4 view .LVU752
 2516 027e 8FE7     		b	.L131
 2517              	.L158:
 757:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2518              		.loc 1 757 31 is_stmt 0 view .LVU753
 2519 0280 6423     		movs	r3, #100
 2520 0282 FAE7     		b	.L134
 2521              	.L171:
 757:lvgl/src/lv_widgets/lv_cpicker.c ****                     break;
 2522              		.loc 1 757 31 view .LVU754
 2523              	.LBE107:
 2524              	.LBE104:
 769:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_indev_get_point(lv_indev_get_act(), &ext->last_press_point);
 2525              		.loc 1 769 9 is_stmt 1 view .LVU755
 769:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_indev_get_point(lv_indev_get_act(), &ext->last_press_point);
 2526              		.loc 1 769 33 is_stmt 0 view .LVU756
 2527 0284 FFF7FEFF 		bl	lv_tick_get
 2528              	.LVL254:
 769:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_indev_get_point(lv_indev_get_act(), &ext->last_press_point);
 2529              		.loc 1 769 31 view .LVU757
 2530 0288 C8F81800 		str	r0, [r8, #24]
 770:lvgl/src/lv_widgets/lv_cpicker.c ****         res = double_click_reset(cpicker);
 2531              		.loc 1 770 9 is_stmt 1 view .LVU758
 770:lvgl/src/lv_widgets/lv_cpicker.c ****         res = double_click_reset(cpicker);
 2532              		.loc 1 770 28 is_stmt 0 view .LVU759
 2533 028c FFF7FEFF 		bl	lv_indev_get_act
 2534              	.LVL255:
 770:lvgl/src/lv_widgets/lv_cpicker.c ****         res = double_click_reset(cpicker);
 2535              		.loc 1 770 9 view .LVU760
 2536 0290 08F11C01 		add	r1, r8, #28
 2537 0294 FFF7FEFF 		bl	lv_indev_get_point
 2538              	.LVL256:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 81


 771:lvgl/src/lv_widgets/lv_cpicker.c ****         if(res != LV_RES_OK) return res;
 2539              		.loc 1 771 9 is_stmt 1 view .LVU761
 771:lvgl/src/lv_widgets/lv_cpicker.c ****         if(res != LV_RES_OK) return res;
 2540              		.loc 1 771 15 is_stmt 0 view .LVU762
 2541 0298 2846     		mov	r0, r5
 2542 029a FFF7FEFF 		bl	double_click_reset
 2543              	.LVL257:
 2544 029e 0646     		mov	r6, r0
 2545              	.LVL258:
 772:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 2546              		.loc 1 772 9 is_stmt 1 view .LVU763
 2547 02a0 E1E6     		b	.L111
 2548              	.L179:
 2549 02a2 00BF     		.align	2
 2550              	.L178:
 2551 02a4 00000000 		.word	.LANCHOR0
 2552 02a8 00000000 		.word	.LC3
 2553 02ac B7600BB6 		.word	-1240768329
 2554 02b0 1F85EB51 		.word	1374389535
 2555              	.LVL259:
 2556              	.L172:
 2557              	.LBB108:
 775:lvgl/src/lv_widgets/lv_cpicker.c ****         if(indev == NULL) return res;
 2558              		.loc 1 775 9 view .LVU764
 775:lvgl/src/lv_widgets/lv_cpicker.c ****         if(indev == NULL) return res;
 2559              		.loc 1 775 30 is_stmt 0 view .LVU765
 2560 02b4 FFF7FEFF 		bl	lv_indev_get_act
 2561              	.LVL260:
 776:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2562              		.loc 1 776 9 is_stmt 1 view .LVU766
 776:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2563              		.loc 1 776 11 is_stmt 0 view .LVU767
 2564 02b8 0746     		mov	r7, r0
 2565              	.LVL261:
 776:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2566              		.loc 1 776 11 view .LVU768
 2567 02ba 0028     		cmp	r0, #0
 2568 02bc 3FF4D3AE 		beq	.L111
 778:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_point_t p;
 2569              		.loc 1 778 9 is_stmt 1 view .LVU769
 778:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_point_t p;
 2570              		.loc 1 778 38 is_stmt 0 view .LVU770
 2571 02c0 FFF7FEFF 		bl	lv_indev_get_type
 2572              	.LVL262:
 779:lvgl/src/lv_widgets/lv_cpicker.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER || indev_type == LV_INDEV_TYPE_KEYPAD) {
 2573              		.loc 1 779 9 is_stmt 1 view .LVU771
 780:lvgl/src/lv_widgets/lv_cpicker.c ****             p.x = cpicker->coords.x1 + lv_obj_get_width(cpicker) / 2;
 2574              		.loc 1 780 9 view .LVU772
 780:lvgl/src/lv_widgets/lv_cpicker.c ****             p.x = cpicker->coords.x1 + lv_obj_get_width(cpicker) / 2;
 2575              		.loc 1 780 11 is_stmt 0 view .LVU773
 2576 02c4 0428     		cmp	r0, #4
 2577 02c6 01D0     		beq	.L139
 780:lvgl/src/lv_widgets/lv_cpicker.c ****             p.x = cpicker->coords.x1 + lv_obj_get_width(cpicker) / 2;
 2578              		.loc 1 780 48 discriminator 1 view .LVU774
 2579 02c8 0228     		cmp	r0, #2
 2580 02ca 69D1     		bne	.L140
 2581              	.L139:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 82


 781:lvgl/src/lv_widgets/lv_cpicker.c ****             p.y = cpicker->coords.y1 + lv_obj_get_height(cpicker) / 2;
 2582              		.loc 1 781 13 is_stmt 1 view .LVU775
 781:lvgl/src/lv_widgets/lv_cpicker.c ****             p.y = cpicker->coords.y1 + lv_obj_get_height(cpicker) / 2;
 2583              		.loc 1 781 34 is_stmt 0 view .LVU776
 2584 02cc 2C8A     		ldrh	r4, [r5, #16]
 781:lvgl/src/lv_widgets/lv_cpicker.c ****             p.y = cpicker->coords.y1 + lv_obj_get_height(cpicker) / 2;
 2585              		.loc 1 781 40 view .LVU777
 2586 02ce 2846     		mov	r0, r5
 2587              	.LVL263:
 781:lvgl/src/lv_widgets/lv_cpicker.c ****             p.y = cpicker->coords.y1 + lv_obj_get_height(cpicker) / 2;
 2588              		.loc 1 781 40 view .LVU778
 2589 02d0 FFF7FEFF 		bl	lv_obj_get_width
 2590              	.LVL264:
 781:lvgl/src/lv_widgets/lv_cpicker.c ****             p.y = cpicker->coords.y1 + lv_obj_get_height(cpicker) / 2;
 2591              		.loc 1 781 38 view .LVU779
 2592 02d4 00EBD070 		add	r0, r0, r0, lsr #31
 2593 02d8 04EB6004 		add	r4, r4, r0, asr #1
 781:lvgl/src/lv_widgets/lv_cpicker.c ****             p.y = cpicker->coords.y1 + lv_obj_get_height(cpicker) / 2;
 2594              		.loc 1 781 17 view .LVU780
 2595 02dc ADF80040 		strh	r4, [sp]	@ movhi
 782:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2596              		.loc 1 782 13 is_stmt 1 view .LVU781
 782:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2597              		.loc 1 782 34 is_stmt 0 view .LVU782
 2598 02e0 6C8A     		ldrh	r4, [r5, #18]
 782:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2599              		.loc 1 782 40 view .LVU783
 2600 02e2 2846     		mov	r0, r5
 2601 02e4 FFF7FEFF 		bl	lv_obj_get_height
 2602              	.LVL265:
 782:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2603              		.loc 1 782 38 view .LVU784
 2604 02e8 00EBD070 		add	r0, r0, r0, lsr #31
 2605 02ec 04EB6004 		add	r4, r4, r0, asr #1
 782:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2606              		.loc 1 782 17 view .LVU785
 2607 02f0 ADF80240 		strh	r4, [sp, #2]	@ movhi
 2608              	.L141:
 788:lvgl/src/lv_widgets/lv_cpicker.c ****            (LV_MATH_ABS(p.y - ext->last_press_point.y) > indev->driver.drag_limit / 2)) {
 2609              		.loc 1 788 9 is_stmt 1 view .LVU786
 788:lvgl/src/lv_widgets/lv_cpicker.c ****            (LV_MATH_ABS(p.y - ext->last_press_point.y) > indev->driver.drag_limit / 2)) {
 2610              		.loc 1 788 13 is_stmt 0 view .LVU787
 2611 02f4 BDF90030 		ldrsh	r3, [sp]
 2612 02f8 B8F91C20 		ldrsh	r2, [r8, #28]
 2613 02fc 9B1A     		subs	r3, r3, r2
 2614 02fe 002B     		cmp	r3, #0
 2615 0300 B8BF     		it	lt
 2616 0302 5B42     		rsblt	r3, r3, #0
 788:lvgl/src/lv_widgets/lv_cpicker.c ****            (LV_MATH_ABS(p.y - ext->last_press_point.y) > indev->driver.drag_limit / 2)) {
 2617              		.loc 1 788 71 view .LVU788
 2618 0304 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 788:lvgl/src/lv_widgets/lv_cpicker.c ****            (LV_MATH_ABS(p.y - ext->last_press_point.y) > indev->driver.drag_limit / 2)) {
 2619              		.loc 1 788 83 view .LVU789
 2620 0306 5208     		lsrs	r2, r2, #1
 788:lvgl/src/lv_widgets/lv_cpicker.c ****            (LV_MATH_ABS(p.y - ext->last_press_point.y) > indev->driver.drag_limit / 2)) {
 2621              		.loc 1 788 11 view .LVU790
 2622 0308 9342     		cmp	r3, r2
ARM GAS  D:\Temp\ccfvNLhk.s 			page 83


 2623 030a 09DC     		bgt	.L142
 789:lvgl/src/lv_widgets/lv_cpicker.c ****             ext->last_change_time = lv_tick_get();
 2624              		.loc 1 789 13 discriminator 1 view .LVU791
 2625 030c BDF90230 		ldrsh	r3, [sp, #2]
 2626 0310 B8F91E10 		ldrsh	r1, [r8, #30]
 2627 0314 5B1A     		subs	r3, r3, r1
 2628 0316 002B     		cmp	r3, #0
 2629 0318 B8BF     		it	lt
 2630 031a 5B42     		rsblt	r3, r3, #0
 788:lvgl/src/lv_widgets/lv_cpicker.c ****            (LV_MATH_ABS(p.y - ext->last_press_point.y) > indev->driver.drag_limit / 2)) {
 2631              		.loc 1 788 88 discriminator 1 view .LVU792
 2632 031c 9A42     		cmp	r2, r3
 2633 031e 0BDA     		bge	.L143
 2634              	.L142:
 790:lvgl/src/lv_widgets/lv_cpicker.c ****             ext->last_press_point.x = p.x;
 2635              		.loc 1 790 13 is_stmt 1 view .LVU793
 790:lvgl/src/lv_widgets/lv_cpicker.c ****             ext->last_press_point.x = p.x;
 2636              		.loc 1 790 37 is_stmt 0 view .LVU794
 2637 0320 FFF7FEFF 		bl	lv_tick_get
 2638              	.LVL266:
 790:lvgl/src/lv_widgets/lv_cpicker.c ****             ext->last_press_point.x = p.x;
 2639              		.loc 1 790 35 view .LVU795
 2640 0324 C8F81800 		str	r0, [r8, #24]
 791:lvgl/src/lv_widgets/lv_cpicker.c ****             ext->last_press_point.y = p.y;
 2641              		.loc 1 791 13 is_stmt 1 view .LVU796
 791:lvgl/src/lv_widgets/lv_cpicker.c ****             ext->last_press_point.y = p.y;
 2642              		.loc 1 791 40 is_stmt 0 view .LVU797
 2643 0328 BDF90030 		ldrsh	r3, [sp]
 791:lvgl/src/lv_widgets/lv_cpicker.c ****             ext->last_press_point.y = p.y;
 2644              		.loc 1 791 37 view .LVU798
 2645 032c A8F81C30 		strh	r3, [r8, #28]	@ movhi
 792:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2646              		.loc 1 792 13 is_stmt 1 view .LVU799
 792:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2647              		.loc 1 792 40 is_stmt 0 view .LVU800
 2648 0330 BDF90230 		ldrsh	r3, [sp, #2]
 792:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2649              		.loc 1 792 37 view .LVU801
 2650 0334 A8F81E30 		strh	r3, [r8, #30]	@ movhi
 2651              	.L143:
 795:lvgl/src/lv_widgets/lv_cpicker.c ****         p.y -= cpicker->coords.y1;
 2652              		.loc 1 795 9 is_stmt 1 view .LVU802
 795:lvgl/src/lv_widgets/lv_cpicker.c ****         p.y -= cpicker->coords.y1;
 2653              		.loc 1 795 31 is_stmt 0 view .LVU803
 2654 0338 2A8A     		ldrh	r2, [r5, #16]
 795:lvgl/src/lv_widgets/lv_cpicker.c ****         p.y -= cpicker->coords.y1;
 2655              		.loc 1 795 13 view .LVU804
 2656 033a BDF80030 		ldrh	r3, [sp]
 2657 033e 9B1A     		subs	r3, r3, r2
 2658 0340 ADF80030 		strh	r3, [sp]	@ movhi
 796:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2659              		.loc 1 796 9 is_stmt 1 view .LVU805
 796:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2660              		.loc 1 796 31 is_stmt 0 view .LVU806
 2661 0344 6A8A     		ldrh	r2, [r5, #18]
 796:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2662              		.loc 1 796 13 view .LVU807
ARM GAS  D:\Temp\ccfvNLhk.s 			page 84


 2663 0346 BDF80230 		ldrh	r3, [sp, #2]
 2664 034a 9B1A     		subs	r3, r3, r2
 2665 034c ADF80230 		strh	r3, [sp, #2]	@ movhi
 799:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2666              		.loc 1 799 9 is_stmt 1 view .LVU808
 799:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2667              		.loc 1 799 22 is_stmt 0 view .LVU809
 2668 0350 2846     		mov	r0, r5
 2669 0352 FFF7FEFF 		bl	lv_obj_get_width
 2670              	.LVL267:
 799:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2671              		.loc 1 799 18 view .LVU810
 2672 0356 84B2     		uxth	r4, r0
 2673              	.LVL268:
 801:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2674              		.loc 1 801 9 is_stmt 1 view .LVU811
 803:lvgl/src/lv_widgets/lv_cpicker.c ****             /*If pressed long enough without change go to next color mode*/
 2675              		.loc 1 803 9 view .LVU812
 803:lvgl/src/lv_widgets/lv_cpicker.c ****             /*If pressed long enough without change go to next color mode*/
 2676              		.loc 1 803 22 is_stmt 0 view .LVU813
 2677 0358 98F82030 		ldrb	r3, [r8, #32]	@ zero_extendqisi2
 803:lvgl/src/lv_widgets/lv_cpicker.c ****             /*If pressed long enough without change go to next color mode*/
 2678              		.loc 1 803 11 view .LVU814
 2679 035c 13F0080F 		tst	r3, #8
 2680 0360 2BD1     		bne	.L144
 2681              	.LBB109:
 805:lvgl/src/lv_widgets/lv_cpicker.c ****             if(diff > (uint32_t)indev->driver.long_press_time * 2 && !ext->color_mode_fixed) {
 2682              		.loc 1 805 13 is_stmt 1 view .LVU815
 805:lvgl/src/lv_widgets/lv_cpicker.c ****             if(diff > (uint32_t)indev->driver.long_press_time * 2 && !ext->color_mode_fixed) {
 2683              		.loc 1 805 29 is_stmt 0 view .LVU816
 2684 0362 D8F81800 		ldr	r0, [r8, #24]
 2685 0366 FFF7FEFF 		bl	lv_tick_elaps
 2686              	.LVL269:
 806:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 2687              		.loc 1 806 13 is_stmt 1 view .LVU817
 806:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 2688              		.loc 1 806 46 is_stmt 0 view .LVU818
 2689 036a 3B8B     		ldrh	r3, [r7, #24]
 806:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 2690              		.loc 1 806 15 view .LVU819
 2691 036c B0EB430F 		cmp	r0, r3, lsl #1
 2692 0370 04D9     		bls	.L145
 806:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 2693              		.loc 1 806 70 discriminator 1 view .LVU820
 2694 0372 98F82030 		ldrb	r3, [r8, #32]	@ zero_extendqisi2
 806:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 2695              		.loc 1 806 67 discriminator 1 view .LVU821
 2696 0376 13F0040F 		tst	r3, #4
 2697 037a 16D0     		beq	.L175
 2698              	.L145:
 812:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle < 0) angle = 0;
 2699              		.loc 1 812 13 is_stmt 1 view .LVU822
 812:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle < 0) angle = 0;
 2700              		.loc 1 812 23 is_stmt 0 view .LVU823
 2701 037c BDF90020 		ldrsh	r2, [sp]
 812:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle < 0) angle = 0;
 2702              		.loc 1 812 26 view .LVU824
ARM GAS  D:\Temp\ccfvNLhk.s 			page 85


 2703 0380 4FF4B473 		mov	r3, #360
 2704 0384 03FB02F3 		mul	r3, r3, r2
 812:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle < 0) angle = 0;
 2705              		.loc 1 812 33 view .LVU825
 2706 0388 93FBF4F3 		sdiv	r3, r3, r4
 812:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle < 0) angle = 0;
 2707              		.loc 1 812 19 view .LVU826
 2708 038c 1BB2     		sxth	r3, r3
 2709              	.LVL270:
 813:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle >= 360) angle = 359;
 2710              		.loc 1 813 13 is_stmt 1 view .LVU827
 813:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle >= 360) angle = 359;
 2711              		.loc 1 813 15 is_stmt 0 view .LVU828
 2712 038e 002B     		cmp	r3, #0
 2713 0390 C0F28680 		blt	.L159
 814:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2714              		.loc 1 814 13 is_stmt 1 view .LVU829
 814:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2715              		.loc 1 814 15 is_stmt 0 view .LVU830
 2716 0394 B3F5B47F 		cmp	r3, #360
 2717 0398 51DB     		blt	.L146
 814:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2718              		.loc 1 814 36 view .LVU831
 2719 039a 40F26713 		movw	r3, #359
 2720              	.LVL271:
 814:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2721              		.loc 1 814 36 view .LVU832
 2722 039e 4EE0     		b	.L146
 2723              	.LVL272:
 2724              	.L140:
 814:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2725              		.loc 1 814 36 view .LVU833
 2726              	.LBE109:
 785:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2727              		.loc 1 785 13 is_stmt 1 view .LVU834
 2728 03a0 6946     		mov	r1, sp
 2729 03a2 3846     		mov	r0, r7
 2730              	.LVL273:
 785:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2731              		.loc 1 785 13 is_stmt 0 view .LVU835
 2732 03a4 FFF7FEFF 		bl	lv_indev_get_point
 2733              	.LVL274:
 2734 03a8 A4E7     		b	.L141
 2735              	.LVL275:
 2736              	.L175:
 2737              	.LBB110:
 807:lvgl/src/lv_widgets/lv_cpicker.c ****                 lv_indev_wait_release(lv_indev_get_act());
 2738              		.loc 1 807 17 is_stmt 1 view .LVU836
 2739 03aa 2846     		mov	r0, r5
 2740              	.LVL276:
 807:lvgl/src/lv_widgets/lv_cpicker.c ****                 lv_indev_wait_release(lv_indev_get_act());
 2741              		.loc 1 807 17 is_stmt 0 view .LVU837
 2742 03ac FFF7FEFF 		bl	next_color_mode
 2743              	.LVL277:
 808:lvgl/src/lv_widgets/lv_cpicker.c ****                 return res;
 2744              		.loc 1 808 17 is_stmt 1 view .LVU838
 2745 03b0 FFF7FEFF 		bl	lv_indev_get_act
ARM GAS  D:\Temp\ccfvNLhk.s 			page 86


 2746              	.LVL278:
 2747 03b4 FFF7FEFF 		bl	lv_indev_wait_release
 2748              	.LVL279:
 809:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2749              		.loc 1 809 17 view .LVU839
 809:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2750              		.loc 1 809 24 is_stmt 0 view .LVU840
 2751 03b8 55E6     		b	.L111
 2752              	.L144:
 809:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2753              		.loc 1 809 24 view .LVU841
 2754              	.LBE110:
 817:lvgl/src/lv_widgets/lv_cpicker.c ****             lv_style_int_t scale_w = lv_obj_get_style_scale_width(cpicker, LV_CPICKER_PART_MAIN);
 2755              		.loc 1 817 14 is_stmt 1 view .LVU842
 2756              	.LBB111:
 818:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2757              		.loc 1 818 13 view .LVU843
 2758              	.LVL280:
 2759              	.LBB112:
 2760              	.LBI112:
 2761              		.loc 2 194 1 view .LVU844
 2762              	.LBB113:
 2763              		.loc 2 194 1 view .LVU845
 2764 03ba C022     		movs	r2, #192
 2765 03bc 0021     		movs	r1, #0
 2766 03be 2846     		mov	r0, r5
 2767 03c0 FFF7FEFF 		bl	_lv_obj_get_style_int
 2768              	.LVL281:
 2769              		.loc 2 194 1 is_stmt 0 view .LVU846
 2770              	.LBE113:
 2771              	.LBE112:
 820:lvgl/src/lv_widgets/lv_cpicker.c ****             p.x -= r_in;
 2772              		.loc 1 820 13 is_stmt 1 view .LVU847
 820:lvgl/src/lv_widgets/lv_cpicker.c ****             p.x -= r_in;
 2773              		.loc 1 820 24 is_stmt 0 view .LVU848
 2774 03c4 6308     		lsrs	r3, r4, #1
 2775              	.LVL282:
 821:lvgl/src/lv_widgets/lv_cpicker.c ****             p.y -= r_in;
 2776              		.loc 1 821 13 is_stmt 1 view .LVU849
 821:lvgl/src/lv_widgets/lv_cpicker.c ****             p.y -= r_in;
 2777              		.loc 1 821 17 is_stmt 0 view .LVU850
 2778 03c6 BDF80020 		ldrh	r2, [sp]
 2779 03ca D21A     		subs	r2, r2, r3
 2780 03cc ADF80020 		strh	r2, [sp]	@ movhi
 822:lvgl/src/lv_widgets/lv_cpicker.c ****             bool on_ring = true;
 2781              		.loc 1 822 13 is_stmt 1 view .LVU851
 822:lvgl/src/lv_widgets/lv_cpicker.c ****             bool on_ring = true;
 2782              		.loc 1 822 17 is_stmt 0 view .LVU852
 2783 03d0 BDF80220 		ldrh	r2, [sp, #2]
 2784 03d4 D21A     		subs	r2, r2, r3
 2785 03d6 ADF80220 		strh	r2, [sp, #2]	@ movhi
 823:lvgl/src/lv_widgets/lv_cpicker.c ****             r_in -= scale_w;
 2786              		.loc 1 823 13 is_stmt 1 view .LVU853
 2787              	.LVL283:
 824:lvgl/src/lv_widgets/lv_cpicker.c ****             if(r_in > LV_DPI / 2) {
 2788              		.loc 1 824 13 view .LVU854
 824:lvgl/src/lv_widgets/lv_cpicker.c ****             if(r_in > LV_DPI / 2) {
ARM GAS  D:\Temp\ccfvNLhk.s 			page 87


 2789              		.loc 1 824 18 is_stmt 0 view .LVU855
 2790 03da 1C1A     		subs	r4, r3, r0
 2791              	.LVL284:
 824:lvgl/src/lv_widgets/lv_cpicker.c ****             if(r_in > LV_DPI / 2) {
 2792              		.loc 1 824 18 view .LVU856
 2793 03dc A4B2     		uxth	r4, r4
 2794 03de 20B2     		sxth	r0, r4
 2795              	.LVL285:
 825:lvgl/src/lv_widgets/lv_cpicker.c ****                 lv_style_int_t inner = lv_obj_get_style_pad_inner(cpicker, LV_CPICKER_PART_MAIN);
 2796              		.loc 1 825 13 is_stmt 1 view .LVU857
 825:lvgl/src/lv_widgets/lv_cpicker.c ****                 lv_style_int_t inner = lv_obj_get_style_pad_inner(cpicker, LV_CPICKER_PART_MAIN);
 2797              		.loc 1 825 15 is_stmt 0 view .LVU858
 2798 03e0 2828     		cmp	r0, #40
 2799 03e2 48DC     		bgt	.L176
 2800              	.LVL286:
 2801              	.L147:
 832:lvgl/src/lv_widgets/lv_cpicker.c ****                 on_ring = false;
 2802              		.loc 1 832 13 is_stmt 1 view .LVU859
 832:lvgl/src/lv_widgets/lv_cpicker.c ****                 on_ring = false;
 2803              		.loc 1 832 17 is_stmt 0 view .LVU860
 2804 03e4 BDF90030 		ldrsh	r3, [sp]
 832:lvgl/src/lv_widgets/lv_cpicker.c ****                 on_ring = false;
 2805              		.loc 1 832 29 view .LVU861
 2806 03e8 BDF90220 		ldrsh	r2, [sp, #2]
 832:lvgl/src/lv_widgets/lv_cpicker.c ****                 on_ring = false;
 2807              		.loc 1 832 32 view .LVU862
 2808 03ec 02FB02F2 		mul	r2, r2, r2
 832:lvgl/src/lv_widgets/lv_cpicker.c ****                 on_ring = false;
 2809              		.loc 1 832 26 view .LVU863
 2810 03f0 03FB0323 		mla	r3, r3, r3, r2
 832:lvgl/src/lv_widgets/lv_cpicker.c ****                 on_ring = false;
 2811              		.loc 1 832 45 view .LVU864
 2812 03f4 00FB00F0 		mul	r0, r0, r0
 2813              	.LVL287:
 832:lvgl/src/lv_widgets/lv_cpicker.c ****                 on_ring = false;
 2814              		.loc 1 832 15 view .LVU865
 2815 03f8 8342     		cmp	r3, r0
 2816 03fa 47DB     		blt	.L162
 823:lvgl/src/lv_widgets/lv_cpicker.c ****             r_in -= scale_w;
 2817              		.loc 1 823 18 view .LVU866
 2818 03fc 0124     		movs	r4, #1
 2819              	.L148:
 2820              	.LVL288:
 837:lvgl/src/lv_widgets/lv_cpicker.c ****             if(!on_ring && diff > indev->driver.long_press_time && !ext->color_mode_fixed) {
 2821              		.loc 1 837 13 is_stmt 1 view .LVU867
 837:lvgl/src/lv_widgets/lv_cpicker.c ****             if(!on_ring && diff > indev->driver.long_press_time && !ext->color_mode_fixed) {
 2822              		.loc 1 837 29 is_stmt 0 view .LVU868
 2823 03fe D8F81800 		ldr	r0, [r8, #24]
 2824 0402 FFF7FEFF 		bl	lv_tick_elaps
 2825              	.LVL289:
 838:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 2826              		.loc 1 838 13 is_stmt 1 view .LVU869
 838:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 2827              		.loc 1 838 15 is_stmt 0 view .LVU870
 2828 0406 3CB9     		cbnz	r4, .L149
 838:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 2829              		.loc 1 838 48 discriminator 1 view .LVU871
ARM GAS  D:\Temp\ccfvNLhk.s 			page 88


 2830 0408 3B8B     		ldrh	r3, [r7, #24]
 838:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 2831              		.loc 1 838 25 discriminator 1 view .LVU872
 2832 040a 8342     		cmp	r3, r0
 2833 040c 04D2     		bcs	.L149
 838:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 2834              		.loc 1 838 68 discriminator 2 view .LVU873
 2835 040e 98F82030 		ldrb	r3, [r8, #32]	@ zero_extendqisi2
 838:lvgl/src/lv_widgets/lv_cpicker.c ****                 next_color_mode(cpicker);
 2836              		.loc 1 838 65 discriminator 2 view .LVU874
 2837 0412 13F0040F 		tst	r3, #4
 2838 0416 3BD0     		beq	.L177
 2839              	.L149:
 845:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2840              		.loc 1 845 13 is_stmt 1 view .LVU875
 845:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2841              		.loc 1 845 15 is_stmt 0 view .LVU876
 2842 0418 002C     		cmp	r4, #0
 2843 041a 3FF424AE 		beq	.L111
 847:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2844              		.loc 1 847 13 is_stmt 1 view .LVU877
 847:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2845              		.loc 1 847 21 is_stmt 0 view .LVU878
 2846 041e BDF90210 		ldrsh	r1, [sp, #2]
 2847 0422 BDF90000 		ldrsh	r0, [sp]
 2848              	.LVL290:
 847:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2849              		.loc 1 847 21 view .LVU879
 2850 0426 FFF7FEFF 		bl	_lv_atan2
 2851              	.LVL291:
 847:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2852              		.loc 1 847 19 view .LVU880
 2853 042a C308     		lsrs	r3, r0, #3
 2854 042c 2C4A     		ldr	r2, .L180
 2855 042e A2FB0323 		umull	r2, r3, r2, r3
 2856 0432 9B08     		lsrs	r3, r3, #2
 2857 0434 4FF4B472 		mov	r2, #360
 2858 0438 02FB1303 		mls	r3, r2, r3, r0
 2859 043c 1BB2     		sxth	r3, r3
 2860              	.LVL292:
 2861              	.L146:
 847:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2862              		.loc 1 847 19 view .LVU881
 2863              	.LBE111:
 850:lvgl/src/lv_widgets/lv_cpicker.c ****         hsv_cur = ext->hsv;
 2864              		.loc 1 850 9 is_stmt 1 view .LVU882
 851:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2865              		.loc 1 851 9 view .LVU883
 851:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2866              		.loc 1 851 17 is_stmt 0 view .LVU884
 2867 043e D8F80020 		ldr	r2, [r8]
 2868 0442 0192     		str	r2, [sp, #4]
 853:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 2869              		.loc 1 853 9 is_stmt 1 view .LVU885
 853:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 2870              		.loc 1 853 19 is_stmt 0 view .LVU886
 2871 0444 98F82020 		ldrb	r2, [r8, #32]	@ zero_extendqisi2
ARM GAS  D:\Temp\ccfvNLhk.s 			page 89


 2872 0448 C2F30102 		ubfx	r2, r2, #0, #2
 2873 044c D1B2     		uxtb	r1, r2
 853:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_HUE:
 2874              		.loc 1 853 9 view .LVU887
 2875 044e 0129     		cmp	r1, #1
 2876 0450 2BD0     		beq	.L150
 2877 0452 52B2     		sxtb	r2, r2
 2878 0454 32B3     		cbz	r2, .L151
 2879 0456 0229     		cmp	r1, #2
 2880 0458 34D0     		beq	.L152
 2881              	.LVL293:
 2882              	.L153:
 865:lvgl/src/lv_widgets/lv_cpicker.c ****             res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 2883              		.loc 1 865 9 is_stmt 1 view .LVU888
 865:lvgl/src/lv_widgets/lv_cpicker.c ****             res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 2884              		.loc 1 865 12 is_stmt 0 view .LVU889
 2885 045a 0199     		ldr	r1, [sp, #4]
 2886 045c 2846     		mov	r0, r5
 2887 045e FFF7FEFF 		bl	lv_cpicker_set_hsv
 2888              	.LVL294:
 865:lvgl/src/lv_widgets/lv_cpicker.c ****             res = lv_event_send(cpicker, LV_EVENT_VALUE_CHANGED, NULL);
 2889              		.loc 1 865 11 view .LVU890
 2890 0462 0028     		cmp	r0, #0
 2891 0464 3FF4FFAD 		beq	.L111
 866:lvgl/src/lv_widgets/lv_cpicker.c ****             if(res != LV_RES_OK) return res;
 2892              		.loc 1 866 13 is_stmt 1 view .LVU891
 866:lvgl/src/lv_widgets/lv_cpicker.c ****             if(res != LV_RES_OK) return res;
 2893              		.loc 1 866 19 is_stmt 0 view .LVU892
 2894 0468 0022     		movs	r2, #0
 2895 046a 1021     		movs	r1, #16
 2896 046c 2846     		mov	r0, r5
 2897 046e FFF7FEFF 		bl	lv_event_send
 2898              	.LVL295:
 2899 0472 0646     		mov	r6, r0
 2900              	.LVL296:
 867:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 2901              		.loc 1 867 13 is_stmt 1 view .LVU893
 2902 0474 F7E5     		b	.L111
 2903              	.LVL297:
 2904              	.L176:
 2905              	.LBB117:
 2906              	.LBB114:
 826:lvgl/src/lv_widgets/lv_cpicker.c ****                 r_in -= inner;
 2907              		.loc 1 826 17 view .LVU894
 2908              	.LBB115:
 2909              	.LBI115:
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 2910              		.loc 2 114 1 view .LVU895
 2911              	.LBB116:
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 2912              		.loc 2 114 1 view .LVU896
 2913 0476 1422     		movs	r2, #20
 2914 0478 0021     		movs	r1, #0
 2915 047a 2846     		mov	r0, r5
 2916              	.LVL298:
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 2917              		.loc 2 114 1 is_stmt 0 view .LVU897
ARM GAS  D:\Temp\ccfvNLhk.s 			page 90


 2918 047c FFF7FEFF 		bl	_lv_obj_get_style_int
 2919              	.LVL299:
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 2920              		.loc 2 114 1 view .LVU898
 2921              	.LBE116:
 2922              	.LBE115:
 827:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2923              		.loc 1 827 17 is_stmt 1 view .LVU899
 827:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2924              		.loc 1 827 22 is_stmt 0 view .LVU900
 2925 0480 201A     		subs	r0, r4, r0
 2926              	.LVL300:
 827:lvgl/src/lv_widgets/lv_cpicker.c **** 
 2927              		.loc 1 827 22 view .LVU901
 2928 0482 00B2     		sxth	r0, r0
 2929              	.LVL301:
 829:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2930              		.loc 1 829 17 is_stmt 1 view .LVU902
 829:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2931              		.loc 1 829 19 is_stmt 0 view .LVU903
 2932 0484 2728     		cmp	r0, #39
 2933 0486 ADDC     		bgt	.L147
 829:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2934              		.loc 1 829 44 view .LVU904
 2935 0488 2820     		movs	r0, #40
 2936              	.LVL302:
 829:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2937              		.loc 1 829 44 view .LVU905
 2938 048a ABE7     		b	.L147
 2939              	.L162:
 829:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2940              		.loc 1 829 44 view .LVU906
 2941              	.LBE114:
 833:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2942              		.loc 1 833 25 view .LVU907
 2943 048c 0024     		movs	r4, #0
 2944 048e B6E7     		b	.L148
 2945              	.LVL303:
 2946              	.L177:
 839:lvgl/src/lv_widgets/lv_cpicker.c ****                 lv_indev_wait_release(lv_indev_get_act());
 2947              		.loc 1 839 17 is_stmt 1 view .LVU908
 2948 0490 2846     		mov	r0, r5
 2949              	.LVL304:
 839:lvgl/src/lv_widgets/lv_cpicker.c ****                 lv_indev_wait_release(lv_indev_get_act());
 2950              		.loc 1 839 17 is_stmt 0 view .LVU909
 2951 0492 FFF7FEFF 		bl	next_color_mode
 2952              	.LVL305:
 840:lvgl/src/lv_widgets/lv_cpicker.c ****                 return res;
 2953              		.loc 1 840 17 is_stmt 1 view .LVU910
 2954 0496 FFF7FEFF 		bl	lv_indev_get_act
 2955              	.LVL306:
 2956 049a FFF7FEFF 		bl	lv_indev_wait_release
 2957              	.LVL307:
 841:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2958              		.loc 1 841 17 view .LVU911
 841:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2959              		.loc 1 841 24 is_stmt 0 view .LVU912
ARM GAS  D:\Temp\ccfvNLhk.s 			page 91


 2960 049e E2E5     		b	.L111
 2961              	.LVL308:
 2962              	.L159:
 841:lvgl/src/lv_widgets/lv_cpicker.c ****             }
 2963              		.loc 1 841 24 view .LVU913
 2964              	.LBE117:
 2965              	.LBB118:
 813:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle >= 360) angle = 359;
 2966              		.loc 1 813 33 view .LVU914
 2967 04a0 0023     		movs	r3, #0
 2968              	.LVL309:
 813:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle >= 360) angle = 359;
 2969              		.loc 1 813 33 view .LVU915
 2970 04a2 CCE7     		b	.L146
 2971              	.LVL310:
 2972              	.L151:
 813:lvgl/src/lv_widgets/lv_cpicker.c ****             if(angle >= 360) angle = 359;
 2973              		.loc 1 813 33 view .LVU916
 2974              	.LBE118:
 855:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 2975              		.loc 1 855 17 is_stmt 1 view .LVU917
 855:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 2976              		.loc 1 855 27 is_stmt 0 view .LVU918
 2977 04a4 ADF80430 		strh	r3, [sp, #4]	@ movhi
 856:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_SATURATION:
 2978              		.loc 1 856 17 is_stmt 1 view .LVU919
 2979 04a8 D7E7     		b	.L153
 2980              	.L150:
 858:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 2981              		.loc 1 858 17 view .LVU920
 858:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 2982              		.loc 1 858 36 is_stmt 0 view .LVU921
 2983 04aa 6422     		movs	r2, #100
 2984 04ac 02FB03F3 		mul	r3, r2, r3
 2985              	.LVL311:
 858:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 2986              		.loc 1 858 43 view .LVU922
 2987 04b0 0C4A     		ldr	r2, .L180+4
 2988 04b2 82FB0312 		smull	r1, r2, r2, r3
 2989 04b6 1A44     		add	r2, r2, r3
 2990 04b8 DB17     		asrs	r3, r3, #31
 2991 04ba C3EB2223 		rsb	r3, r3, r2, asr #8
 858:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 2992              		.loc 1 858 27 view .LVU923
 2993 04be 8DF80630 		strb	r3, [sp, #6]
 859:lvgl/src/lv_widgets/lv_cpicker.c ****             case LV_CPICKER_COLOR_MODE_VALUE:
 2994              		.loc 1 859 17 is_stmt 1 view .LVU924
 2995 04c2 CAE7     		b	.L153
 2996              	.LVL312:
 2997              	.L152:
 861:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 2998              		.loc 1 861 17 view .LVU925
 861:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 2999              		.loc 1 861 36 is_stmt 0 view .LVU926
 3000 04c4 6422     		movs	r2, #100
 3001 04c6 02FB03F3 		mul	r3, r2, r3
 3002              	.LVL313:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 92


 861:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 3003              		.loc 1 861 43 view .LVU927
 3004 04ca 064A     		ldr	r2, .L180+4
 3005 04cc 82FB0312 		smull	r1, r2, r2, r3
 3006 04d0 1A44     		add	r2, r2, r3
 3007 04d2 DB17     		asrs	r3, r3, #31
 3008 04d4 C3EB2223 		rsb	r3, r3, r2, asr #8
 861:lvgl/src/lv_widgets/lv_cpicker.c ****                 break;
 3009              		.loc 1 861 27 view .LVU928
 3010 04d8 8DF80730 		strb	r3, [sp, #7]
 862:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 3011              		.loc 1 862 17 is_stmt 1 view .LVU929
 3012 04dc BDE7     		b	.L153
 3013              	.L181:
 3014 04de 00BF     		.align	2
 3015              	.L180:
 3016 04e0 176CC116 		.word	381774871
 3017 04e4 B7600BB6 		.word	-1240768329
 3018              	.LBE108:
 3019              		.cfi_endproc
 3020              	.LFE482:
 3022              		.section	.text.lv_cpicker_set_color,"ax",%progbits
 3023              		.align	1
 3024              		.global	lv_cpicker_set_color
 3025              		.syntax unified
 3026              		.thumb
 3027              		.thumb_func
 3028              		.fpu fpv4-sp-d16
 3030              	lv_cpicker_set_color:
 3031              	.LVL314:
 3032              	.LFB464:
 259:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3033              		.loc 1 259 1 view -0
 3034              		.cfi_startproc
 3035              		@ args = 0, pretend = 0, frame = 8
 3036              		@ frame_needed = 0, uses_anonymous_args = 0
 259:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3037              		.loc 1 259 1 is_stmt 0 view .LVU931
 3038 0000 30B5     		push	{r4, r5, lr}
 3039              	.LCFI27:
 3040              		.cfi_def_cfa_offset 12
 3041              		.cfi_offset 4, -12
 3042              		.cfi_offset 5, -8
 3043              		.cfi_offset 14, -4
 3044 0002 83B0     		sub	sp, sp, #12
 3045              	.LCFI28:
 3046              		.cfi_def_cfa_offset 24
 3047 0004 0546     		mov	r5, r0
 3048 0006 0C46     		mov	r4, r1	@ movhi
 260:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3049              		.loc 1 260 5 is_stmt 1 view .LVU932
 260:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3050              		.loc 1 260 5 view .LVU933
 3051 0008 FFF7FEFF 		bl	lv_debug_check_null
 3052              	.LVL315:
 260:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3053              		.loc 1 260 5 is_stmt 0 view .LVU934
ARM GAS  D:\Temp\ccfvNLhk.s 			page 93


 3054 000c 28B9     		cbnz	r0, .L183
 260:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3055              		.loc 1 260 5 is_stmt 1 discriminator 1 view .LVU935
 260:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3056              		.loc 1 260 5 discriminator 1 view .LVU936
 3057 000e 2A46     		mov	r2, r5
 3058 0010 0023     		movs	r3, #0
 3059 0012 1A48     		ldr	r0, .L186
 3060 0014 FFF7FEFF 		bl	lv_debug_log_error
 3061              	.LVL316:
 3062              	.L184:
 260:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3063              		.loc 1 260 5 discriminator 1 view .LVU937
 260:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3064              		.loc 1 260 5 discriminator 1 view .LVU938
 3065 0018 FEE7     		b	.L184
 3066              	.L183:
 260:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3067              		.loc 1 260 41 discriminator 2 view .LVU939
 262:lvgl/src/lv_widgets/lv_cpicker.c ****     c32.full = lv_color_to32(color);
 3068              		.loc 1 262 5 discriminator 2 view .LVU940
 263:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3069              		.loc 1 263 5 discriminator 2 view .LVU941
 3070              	.LBB119:
 3071              	.LBI119:
 3072              		.file 4 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h"
   1:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /**
   2:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *
   4:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  */
   5:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
   6:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
   9:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** extern "C" {
  11:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
  12:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
  13:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /*********************
  14:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *********************/
  16:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
  19:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /*Error checking*/
  20:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  21:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  22:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
  23:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
  24:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  25:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  26:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
  27:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
  28:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  29:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  30:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
  31:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 94


  32:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #include <stdint.h>
  33:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
  34:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /*********************
  35:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *      DEFINES
  36:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *********************/
  37:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_WHITE   LV_COLOR_MAKE(0xFF, 0xFF, 0xFF)
  38:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_SILVER  LV_COLOR_MAKE(0xC0, 0xC0, 0xC0)
  39:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_GRAY    LV_COLOR_MAKE(0x80, 0x80, 0x80)
  40:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_BLACK   LV_COLOR_MAKE(0x00, 0x00, 0x00)
  41:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_RED     LV_COLOR_MAKE(0xFF, 0x00, 0x00)
  42:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_MAROON  LV_COLOR_MAKE(0x80, 0x00, 0x00)
  43:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_YELLOW  LV_COLOR_MAKE(0xFF, 0xFF, 0x00)
  44:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_OLIVE   LV_COLOR_MAKE(0x80, 0x80, 0x00)
  45:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_LIME    LV_COLOR_MAKE(0x00, 0xFF, 0x00)
  46:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_GREEN   LV_COLOR_MAKE(0x00, 0x80, 0x00)
  47:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_CYAN    LV_COLOR_MAKE(0x00, 0xFF, 0xFF)
  48:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_AQUA    LV_COLOR_CYAN
  49:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_TEAL    LV_COLOR_MAKE(0x00, 0x80, 0x80)
  50:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_BLUE    LV_COLOR_MAKE(0x00, 0x00, 0xFF)
  51:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_NAVY    LV_COLOR_MAKE(0x00, 0x00, 0x80)
  52:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_MAGENTA LV_COLOR_MAKE(0xFF, 0x00, 0xFF)
  53:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_PURPLE  LV_COLOR_MAKE(0x80, 0x00, 0x80)
  54:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_ORANGE  LV_COLOR_MAKE(0xFF, 0xA5, 0x00)
  55:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
  56:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /**
  57:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * Opacity percentages.
  58:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  */
  59:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** enum {
  60:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  61:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_0      = 0,
  62:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_10     = 25,
  63:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_20     = 51,
  64:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_30     = 76,
  65:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_40     = 102,
  66:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_50     = 127,
  67:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_60     = 153,
  68:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_70     = 178,
  69:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_80     = 204,
  70:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_90     = 229,
  71:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_100    = 255,
  72:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_OPA_COVER  = 255,
  73:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** };
  74:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
  75:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  76:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  77:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
  78:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  79:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 8
  80:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  81:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 8
  82:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  83:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 16
  84:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  85:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 32
  86:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #else
  87:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  88:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
ARM GAS  D:\Temp\ccfvNLhk.s 			page 95


  89:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
  90:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /* Adjust color mix functions rounding.
  91:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  92:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * Should be in range of 0..254
  93:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  94:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * 64: round up from x.75
  95:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * 128: round up from half
  96:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * 192: round up from x.25
  97:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * 254: round up */
  98:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  99:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
 100:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
 101:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #else
 102:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
 103:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
 104:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
 105:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 106:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /*---------------------------------------
 107:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * Macros for all existing color depths
 108:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * to set/get values of the color channels
 109:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *------------------------------------------*/
 110:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 111:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 112:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 113:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 114:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 115:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 116:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 117:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 118:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 119:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 120:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 121:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 122:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 123:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 124:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 125:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 126:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 127:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 128:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 129:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 130:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #else
 134:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
 136:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #else
 143:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
 145:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
ARM GAS  D:\Temp\ccfvNLhk.s 			page 96


 146:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 148:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 150:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 151:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 152:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 153:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 154:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 155:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 156:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 157:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 158:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /*---------------------------------------
 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * Macros for the current color depth
 160:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * to set/get values of the color channels
 161:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *------------------------------------------*/
 162:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 163:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R1(c,v)
 164:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G1(c,v)
 165:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B1(c,v)
 166:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A1(c,v)
 167:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 168:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R1(c)
 169:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G1(c)
 170:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B1(c)
 171:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A1(c)
 172:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 173:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 174:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R8(c,v)
 175:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G8(c,v)
 176:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B8(c,v)
 177:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A8(c,v)
 178:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 179:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R8(c)
 180:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G8(c)
 181:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B8(c)
 182:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A8(c)
 183:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 184:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 185:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R16(c,v)
 186:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G16(c,v)
 187:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B16(c,v)
 188:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A16(c,v)
 189:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 190:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R16(c)
 191:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G16(c)
 192:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B16(c)
 193:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A16(c)
 194:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 195:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 196:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R32(c,v)
 197:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G32(c,v)
 198:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B32(c,v)
 199:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A32(c,v)
 200:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 201:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R32(c)
 202:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G32(c)
ARM GAS  D:\Temp\ccfvNLhk.s 			page 97


 203:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B32(c)
 204:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A32(c)
 205:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
 206:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 207:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /**********************
 208:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *      TYPEDEFS
 209:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  **********************/
 210:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 211:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef union {
 212:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list */
 213:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     union {
 214:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint8_t blue : 1;
 215:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint8_t green : 1;
 216:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint8_t red : 1;
 217:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     } ch;
 218:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** } lv_color1_t;
 219:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 220:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef union {
 221:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     struct {
 222:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint8_t blue : 2;
 223:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint8_t green : 3;
 224:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint8_t red : 3;
 225:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     } ch;
 226:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     uint8_t full;
 227:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** } lv_color8_t;
 228:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 229:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef union {
 230:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     struct {
 231:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 232:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint16_t blue : 5;
 233:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint16_t green : 6;
 234:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint16_t red : 5;
 235:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #else
 236:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint16_t green_h : 3;
 237:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint16_t red : 5;
 238:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint16_t blue : 5;
 239:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint16_t green_l : 3;
 240:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
 241:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     } ch;
 242:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     uint16_t full;
 243:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** } lv_color16_t;
 244:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 245:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef union {
 246:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     struct {
 247:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint8_t blue;
 248:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint8_t green;
 249:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint8_t red;
 250:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         uint8_t alpha;
 251:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     } ch;
 252:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     uint32_t full;
 253:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** } lv_color32_t;
 254:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 255:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 256:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef uint8_t lv_color_int_t;
 257:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef lv_color1_t lv_color_t;
 258:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {0x00}
 259:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
ARM GAS  D:\Temp\ccfvNLhk.s 			page 98


 260:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef uint8_t lv_color_int_t;
 261:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef lv_color8_t lv_color_t;
 262:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00}}
 263:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 264:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef uint16_t lv_color_int_t;
 265:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef lv_color16_t lv_color_t;
 266:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # if LV_COLOR_16_SWAP == 0
 267:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #  define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00}}
 268:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # else
 269:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #  define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00, 0x00}}
 270:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** # endif
 271:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 272:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef uint32_t lv_color_int_t;
 273:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef lv_color32_t lv_color_t;
 274:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00, 0x00}}
 275:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #else
 276:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
 277:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
 278:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 279:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef struct {
 280:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     uint16_t h;
 281:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     uint8_t s;
 282:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     uint8_t v;
 283:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** } lv_color_hsv_t;
 284:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 285:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** //! @cond Doxygen_Suppress
 286:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 287:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** typedef uint8_t lv_opa_t;
 288:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** //! @endcond
 289:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 290:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /**********************
 291:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * GLOBAL PROTOTYPES
 292:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  **********************/
 293:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 294:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** /*In color conversations:
 295:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 296:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 297:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *         8 bit Red has 3 bits
 298:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *        ----------------------
 299:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 300:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *
 301:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 302:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 303:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *        16 bit Red has 5 bits
 304:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *        ----------------------
 305:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 306:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****  */
 307:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 308:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** {
 309:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 310:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     return color.full;
 311:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 312:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 313:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 1;
 314:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     }
 315:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     else {
 316:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 0;
ARM GAS  D:\Temp\ccfvNLhk.s 			page 99


 317:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     }
 318:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 319:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 320:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 1;
 321:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     }
 322:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     else {
 323:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 0;
 324:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     }
 325:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 326:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 327:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 1;
 328:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     }
 329:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     else {
 330:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 0;
 331:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     }
 332:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
 333:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** }
 334:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 335:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 336:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** {
 337:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 338:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     if(color.full == 0)
 339:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 0;
 340:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     else
 341:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 0xFF;
 342:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 343:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     return color.full;
 344:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 345:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     lv_color8_t ret;
 346:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /* 5 - 3  = 2*/
 347:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /* 6 - 3  = 3*/
 348:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /* 5 - 2  = 3*/
 349:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     return ret.full;
 350:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 351:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     lv_color8_t ret;
 352:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /* 8 - 3  = 5*/
 353:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /* 8 - 3  = 5*/
 354:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /* 8 - 2  = 6*/
 355:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     return ret.full;
 356:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
 357:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** }
 358:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 359:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 360:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** {
 361:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 362:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     if(color.full == 0)
 363:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 0;
 364:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     else
 365:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 0xFFFF;
 366:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 367:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     lv_color16_t ret;
 368:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 369:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 370:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 371:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     return ret.full;
 372:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 373:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     return color.full;
ARM GAS  D:\Temp\ccfvNLhk.s 			page 100


 374:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 375:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     lv_color16_t ret;
 376:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /* 8 - 5  = 3*/
 377:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /* 8 - 6  = 2*/
 378:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /* 8 - 5  = 3*/
 379:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     return ret.full;
 380:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #endif
 381:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** }
 382:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 383:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 3073              		.loc 4 383 24 discriminator 2 view .LVU942
 3074              	.LBB120:
 384:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** {
 385:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 386:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     if(color.full == 0)
 387:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 0xFF000000;
 388:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     else
 389:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****         return 0xFFFFFFFF;
 390:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 391:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     lv_color32_t ret;
 392:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 393:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 394:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 395:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 396:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     return ret.full;
 397:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 398:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     /**
 399:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      * The floating point math for conversion is:
 400:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 401:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      * The faster integer math for conversion is:
 402:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 403:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 404:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *
 405:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 406:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *
 407:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 408:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 409:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       0           8      7        7       255
 410:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       1          16     14        7       255
 411:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       2          32     28        7       255
 412:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       3          65     25        3       255
 413:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       4         131     19        1       255
 414:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       5         263      7        0       255
 415:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *
 416:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 417:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 418:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       0           4      3        3       255
 419:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       1           8      6        3       255
 420:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       2          16     12        3       255
 421:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       3          32     24        3       255
 422:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       4          64     48        3       255
 423:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       5         129     33        1       255
 424:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      *       6         259      3        0       255
 425:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****      */
 426:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h **** 
 427:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     lv_color32_t ret;
 3075              		.loc 4 427 5 discriminator 2 view .LVU943
ARM GAS  D:\Temp\ccfvNLhk.s 			page 101


 428:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 3076              		.loc 4 428 5 discriminator 2 view .LVU944
 3077              	.LVL317:
 3078              		.loc 4 428 5 is_stmt 0 discriminator 2 view .LVU945
 3079 001a C4F3C423 		ubfx	r3, r4, #11, #5
 3080 001e 03EB4312 		add	r2, r3, r3, lsl #5
 3081 0022 C3EBC203 		rsb	r3, r3, r2, lsl #3
 3082 0026 0733     		adds	r3, r3, #7
 3083 0028 C3F34713 		ubfx	r3, r3, #5, #8
 3084 002c 0020     		movs	r0, #0
 3085              	.LVL318:
 3086              		.loc 4 428 5 discriminator 2 view .LVU946
 3087 002e 63F31740 		bfi	r0, r3, #16, #8
 3088              	.LVL319:
 429:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 3089              		.loc 4 429 5 is_stmt 1 discriminator 2 view .LVU947
 3090 0032 C4F34513 		ubfx	r3, r4, #5, #6
 3091 0036 03EBC312 		add	r2, r3, r3, lsl #7
 3092 003a 03EB4203 		add	r3, r3, r2, lsl #1
 3093 003e 0333     		adds	r3, r3, #3
 3094 0040 C3F38713 		ubfx	r3, r3, #6, #8
 3095 0044 63F30F20 		bfi	r0, r3, #8, #8
 430:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 3096              		.loc 4 430 5 discriminator 2 view .LVU948
 3097 0048 04F01F04 		and	r4, r4, #31
 3098              	.LVL320:
 3099              		.loc 4 430 5 is_stmt 0 discriminator 2 view .LVU949
 3100 004c 04EB4413 		add	r3, r4, r4, lsl #5
 3101 0050 C4EBC303 		rsb	r3, r4, r3, lsl #3
 3102 0054 0733     		adds	r3, r3, #7
 3103 0056 C3F34713 		ubfx	r3, r3, #5, #8
 3104 005a 63F30700 		bfi	r0, r3, #0, #8
 431:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 3105              		.loc 4 431 5 is_stmt 1 discriminator 2 view .LVU950
 3106 005e 40F07F40 		orr	r0, r0, #-16777216
 3107              	.LVL321:
 432:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h ****     return ret.full;
 3108              		.loc 4 432 5 discriminator 2 view .LVU951
 3109              	.LBE120:
 3110              	.LBE119:
 265:lvgl/src/lv_widgets/lv_cpicker.c ****                               lv_color_rgb_to_hsv(c32.ch.red, c32.ch.green, c32.ch.blue));
 3111              		.loc 1 265 5 discriminator 2 view .LVU952
 265:lvgl/src/lv_widgets/lv_cpicker.c ****                               lv_color_rgb_to_hsv(c32.ch.red, c32.ch.green, c32.ch.blue));
 3112              		.loc 1 265 12 is_stmt 0 discriminator 2 view .LVU953
 3113 0062 C2B2     		uxtb	r2, r0
 3114 0064 C0F30721 		ubfx	r1, r0, #8, #8
 3115 0068 C0F30740 		ubfx	r0, r0, #16, #8
 265:lvgl/src/lv_widgets/lv_cpicker.c ****                               lv_color_rgb_to_hsv(c32.ch.red, c32.ch.green, c32.ch.blue));
 3116              		.loc 1 265 12 discriminator 2 view .LVU954
 3117 006c FFF7FEFF 		bl	lv_color_rgb_to_hsv
 3118              	.LVL322:
 3119 0070 0146     		mov	r1, r0
 3120 0072 2846     		mov	r0, r5
 3121 0074 FFF7FEFF 		bl	lv_cpicker_set_hsv
 3122              	.LVL323:
 267:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3123              		.loc 1 267 1 discriminator 2 view .LVU955
ARM GAS  D:\Temp\ccfvNLhk.s 			page 102


 3124 0078 03B0     		add	sp, sp, #12
 3125              	.LCFI29:
 3126              		.cfi_def_cfa_offset 12
 3127              		@ sp needed
 3128 007a 30BD     		pop	{r4, r5, pc}
 3129              	.LVL324:
 3130              	.L187:
 267:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3131              		.loc 1 267 1 discriminator 2 view .LVU956
 3132              		.align	2
 3133              	.L186:
 3134 007c 00000000 		.word	.LC1
 3135              		.cfi_endproc
 3136              	.LFE464:
 3138              		.section	.text.lv_cpicker_set_color_mode,"ax",%progbits
 3139              		.align	1
 3140              		.global	lv_cpicker_set_color_mode
 3141              		.syntax unified
 3142              		.thumb
 3143              		.thumb_func
 3144              		.fpu fpv4-sp-d16
 3146              	lv_cpicker_set_color_mode:
 3147              	.LVL325:
 3148              	.LFB465:
 275:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3149              		.loc 1 275 1 is_stmt 1 view -0
 3150              		.cfi_startproc
 3151              		@ args = 0, pretend = 0, frame = 0
 3152              		@ frame_needed = 0, uses_anonymous_args = 0
 275:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3153              		.loc 1 275 1 is_stmt 0 view .LVU958
 3154 0000 38B5     		push	{r3, r4, r5, lr}
 3155              	.LCFI30:
 3156              		.cfi_def_cfa_offset 16
 3157              		.cfi_offset 3, -16
 3158              		.cfi_offset 4, -12
 3159              		.cfi_offset 5, -8
 3160              		.cfi_offset 14, -4
 3161 0002 0446     		mov	r4, r0
 3162 0004 0D46     		mov	r5, r1
 276:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3163              		.loc 1 276 5 is_stmt 1 view .LVU959
 276:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3164              		.loc 1 276 5 view .LVU960
 3165 0006 FFF7FEFF 		bl	lv_debug_check_null
 3166              	.LVL326:
 276:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3167              		.loc 1 276 5 is_stmt 0 view .LVU961
 3168 000a 28B9     		cbnz	r0, .L189
 276:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3169              		.loc 1 276 5 is_stmt 1 discriminator 1 view .LVU962
 276:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3170              		.loc 1 276 5 discriminator 1 view .LVU963
 3171 000c 2246     		mov	r2, r4
 3172 000e 0023     		movs	r3, #0
 3173 0010 0948     		ldr	r0, .L192
 3174 0012 FFF7FEFF 		bl	lv_debug_log_error
ARM GAS  D:\Temp\ccfvNLhk.s 			page 103


 3175              	.LVL327:
 3176              	.L190:
 276:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3177              		.loc 1 276 5 discriminator 1 view .LVU964
 276:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3178              		.loc 1 276 5 discriminator 1 view .LVU965
 3179 0016 FEE7     		b	.L190
 3180              	.L189:
 276:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3181              		.loc 1 276 41 discriminator 2 view .LVU966
 278:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3182              		.loc 1 278 5 discriminator 2 view .LVU967
 278:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3183              		.loc 1 278 30 is_stmt 0 discriminator 2 view .LVU968
 3184 0018 2046     		mov	r0, r4
 3185 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
 3186              	.LVL328:
 280:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 3187              		.loc 1 280 5 is_stmt 1 discriminator 2 view .LVU969
 280:lvgl/src/lv_widgets/lv_cpicker.c ****     refr_knob_pos(cpicker);
 3188              		.loc 1 280 21 is_stmt 0 discriminator 2 view .LVU970
 3189 001e 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 3190 0022 65F30103 		bfi	r3, r5, #0, #2
 3191 0026 80F82030 		strb	r3, [r0, #32]
 281:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_invalidate(cpicker);
 3192              		.loc 1 281 5 is_stmt 1 discriminator 2 view .LVU971
 3193 002a 2046     		mov	r0, r4
 3194              	.LVL329:
 281:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_invalidate(cpicker);
 3195              		.loc 1 281 5 is_stmt 0 discriminator 2 view .LVU972
 3196 002c FFF7FEFF 		bl	refr_knob_pos
 3197              	.LVL330:
 282:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3198              		.loc 1 282 5 is_stmt 1 discriminator 2 view .LVU973
 3199 0030 2046     		mov	r0, r4
 3200 0032 FFF7FEFF 		bl	lv_obj_invalidate
 3201              	.LVL331:
 283:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3202              		.loc 1 283 1 is_stmt 0 discriminator 2 view .LVU974
 3203 0036 38BD     		pop	{r3, r4, r5, pc}
 3204              	.LVL332:
 3205              	.L193:
 283:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3206              		.loc 1 283 1 discriminator 2 view .LVU975
 3207              		.align	2
 3208              	.L192:
 3209 0038 00000000 		.word	.LC1
 3210              		.cfi_endproc
 3211              	.LFE465:
 3213              		.section	.text.lv_cpicker_set_color_mode_fixed,"ax",%progbits
 3214              		.align	1
 3215              		.global	lv_cpicker_set_color_mode_fixed
 3216              		.syntax unified
 3217              		.thumb
 3218              		.thumb_func
 3219              		.fpu fpv4-sp-d16
 3221              	lv_cpicker_set_color_mode_fixed:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 104


 3222              	.LVL333:
 3223              	.LFB466:
 291:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3224              		.loc 1 291 1 is_stmt 1 view -0
 3225              		.cfi_startproc
 3226              		@ args = 0, pretend = 0, frame = 0
 3227              		@ frame_needed = 0, uses_anonymous_args = 0
 291:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3228              		.loc 1 291 1 is_stmt 0 view .LVU977
 3229 0000 38B5     		push	{r3, r4, r5, lr}
 3230              	.LCFI31:
 3231              		.cfi_def_cfa_offset 16
 3232              		.cfi_offset 3, -16
 3233              		.cfi_offset 4, -12
 3234              		.cfi_offset 5, -8
 3235              		.cfi_offset 14, -4
 3236 0002 0446     		mov	r4, r0
 3237 0004 0D46     		mov	r5, r1
 292:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3238              		.loc 1 292 5 is_stmt 1 view .LVU978
 292:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3239              		.loc 1 292 5 view .LVU979
 3240 0006 FFF7FEFF 		bl	lv_debug_check_null
 3241              	.LVL334:
 292:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3242              		.loc 1 292 5 is_stmt 0 view .LVU980
 3243 000a 28B9     		cbnz	r0, .L195
 292:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3244              		.loc 1 292 5 is_stmt 1 discriminator 1 view .LVU981
 292:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3245              		.loc 1 292 5 discriminator 1 view .LVU982
 3246 000c 2246     		mov	r2, r4
 3247 000e 0023     		movs	r3, #0
 3248 0010 0648     		ldr	r0, .L198
 3249 0012 FFF7FEFF 		bl	lv_debug_log_error
 3250              	.LVL335:
 3251              	.L196:
 292:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3252              		.loc 1 292 5 discriminator 1 view .LVU983
 292:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3253              		.loc 1 292 5 discriminator 1 view .LVU984
 3254 0016 FEE7     		b	.L196
 3255              	.L195:
 292:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3256              		.loc 1 292 41 discriminator 2 view .LVU985
 294:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3257              		.loc 1 294 5 discriminator 2 view .LVU986
 294:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3258              		.loc 1 294 30 is_stmt 0 discriminator 2 view .LVU987
 3259 0018 2046     		mov	r0, r4
 3260 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
 3261              	.LVL336:
 296:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3262              		.loc 1 296 5 is_stmt 1 discriminator 2 view .LVU988
 296:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3263              		.loc 1 296 27 is_stmt 0 discriminator 2 view .LVU989
 3264 001e 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
ARM GAS  D:\Temp\ccfvNLhk.s 			page 105


 3265 0022 65F38203 		bfi	r3, r5, #2, #1
 3266 0026 80F82030 		strb	r3, [r0, #32]
 297:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3267              		.loc 1 297 1 discriminator 2 view .LVU990
 3268 002a 38BD     		pop	{r3, r4, r5, pc}
 3269              	.LVL337:
 3270              	.L199:
 297:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3271              		.loc 1 297 1 discriminator 2 view .LVU991
 3272              		.align	2
 3273              	.L198:
 3274 002c 00000000 		.word	.LC1
 3275              		.cfi_endproc
 3276              	.LFE466:
 3278              		.section	.text.lv_cpicker_set_knob_colored,"ax",%progbits
 3279              		.align	1
 3280              		.global	lv_cpicker_set_knob_colored
 3281              		.syntax unified
 3282              		.thumb
 3283              		.thumb_func
 3284              		.fpu fpv4-sp-d16
 3286              	lv_cpicker_set_knob_colored:
 3287              	.LVL338:
 3288              	.LFB467:
 305:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3289              		.loc 1 305 1 is_stmt 1 view -0
 3290              		.cfi_startproc
 3291              		@ args = 0, pretend = 0, frame = 0
 3292              		@ frame_needed = 0, uses_anonymous_args = 0
 305:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3293              		.loc 1 305 1 is_stmt 0 view .LVU993
 3294 0000 38B5     		push	{r3, r4, r5, lr}
 3295              	.LCFI32:
 3296              		.cfi_def_cfa_offset 16
 3297              		.cfi_offset 3, -16
 3298              		.cfi_offset 4, -12
 3299              		.cfi_offset 5, -8
 3300              		.cfi_offset 14, -4
 3301 0002 0446     		mov	r4, r0
 3302 0004 0D46     		mov	r5, r1
 306:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3303              		.loc 1 306 5 is_stmt 1 view .LVU994
 306:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3304              		.loc 1 306 5 view .LVU995
 3305 0006 FFF7FEFF 		bl	lv_debug_check_null
 3306              	.LVL339:
 306:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3307              		.loc 1 306 5 is_stmt 0 view .LVU996
 3308 000a 28B9     		cbnz	r0, .L201
 306:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3309              		.loc 1 306 5 is_stmt 1 discriminator 1 view .LVU997
 306:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3310              		.loc 1 306 5 discriminator 1 view .LVU998
 3311 000c 2246     		mov	r2, r4
 3312 000e 0023     		movs	r3, #0
 3313 0010 0748     		ldr	r0, .L204
 3314 0012 FFF7FEFF 		bl	lv_debug_log_error
ARM GAS  D:\Temp\ccfvNLhk.s 			page 106


 3315              	.LVL340:
 3316              	.L202:
 306:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3317              		.loc 1 306 5 discriminator 1 view .LVU999
 306:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3318              		.loc 1 306 5 discriminator 1 view .LVU1000
 3319 0016 FEE7     		b	.L202
 3320              	.L201:
 306:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3321              		.loc 1 306 41 discriminator 2 view .LVU1001
 308:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->knob.colored = en ? 1 : 0;
 3322              		.loc 1 308 5 discriminator 2 view .LVU1002
 308:lvgl/src/lv_widgets/lv_cpicker.c ****     ext->knob.colored = en ? 1 : 0;
 3323              		.loc 1 308 30 is_stmt 0 discriminator 2 view .LVU1003
 3324 0018 2046     		mov	r0, r4
 3325 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
 3326              	.LVL341:
 309:lvgl/src/lv_widgets/lv_cpicker.c ****     invalidate_knob(cpicker);
 3327              		.loc 1 309 5 is_stmt 1 discriminator 2 view .LVU1004
 309:lvgl/src/lv_widgets/lv_cpicker.c ****     invalidate_knob(cpicker);
 3328              		.loc 1 309 23 is_stmt 0 discriminator 2 view .LVU1005
 3329 001e 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 3330 0020 65F30003 		bfi	r3, r5, #0, #1
 3331 0024 0374     		strb	r3, [r0, #16]
 310:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3332              		.loc 1 310 5 is_stmt 1 discriminator 2 view .LVU1006
 3333 0026 2046     		mov	r0, r4
 3334              	.LVL342:
 310:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3335              		.loc 1 310 5 is_stmt 0 discriminator 2 view .LVU1007
 3336 0028 FFF7FEFF 		bl	invalidate_knob
 3337              	.LVL343:
 311:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3338              		.loc 1 311 1 discriminator 2 view .LVU1008
 3339 002c 38BD     		pop	{r3, r4, r5, pc}
 3340              	.LVL344:
 3341              	.L205:
 311:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3342              		.loc 1 311 1 discriminator 2 view .LVU1009
 3343 002e 00BF     		.align	2
 3344              	.L204:
 3345 0030 00000000 		.word	.LC1
 3346              		.cfi_endproc
 3347              	.LFE467:
 3349              		.section	.text.lv_cpicker_get_color_mode,"ax",%progbits
 3350              		.align	1
 3351              		.global	lv_cpicker_get_color_mode
 3352              		.syntax unified
 3353              		.thumb
 3354              		.thumb_func
 3355              		.fpu fpv4-sp-d16
 3357              	lv_cpicker_get_color_mode:
 3358              	.LVL345:
 3359              	.LFB468:
 323:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3360              		.loc 1 323 1 is_stmt 1 view -0
 3361              		.cfi_startproc
ARM GAS  D:\Temp\ccfvNLhk.s 			page 107


 3362              		@ args = 0, pretend = 0, frame = 0
 3363              		@ frame_needed = 0, uses_anonymous_args = 0
 323:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3364              		.loc 1 323 1 is_stmt 0 view .LVU1011
 3365 0000 10B5     		push	{r4, lr}
 3366              	.LCFI33:
 3367              		.cfi_def_cfa_offset 8
 3368              		.cfi_offset 4, -8
 3369              		.cfi_offset 14, -4
 3370 0002 0446     		mov	r4, r0
 324:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3371              		.loc 1 324 5 is_stmt 1 view .LVU1012
 324:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3372              		.loc 1 324 5 view .LVU1013
 3373 0004 FFF7FEFF 		bl	lv_debug_check_null
 3374              	.LVL346:
 324:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3375              		.loc 1 324 5 is_stmt 0 view .LVU1014
 3376 0008 28B9     		cbnz	r0, .L207
 324:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3377              		.loc 1 324 5 is_stmt 1 discriminator 1 view .LVU1015
 324:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3378              		.loc 1 324 5 discriminator 1 view .LVU1016
 3379 000a 2246     		mov	r2, r4
 3380 000c 0023     		movs	r3, #0
 3381 000e 0648     		ldr	r0, .L210
 3382 0010 FFF7FEFF 		bl	lv_debug_log_error
 3383              	.LVL347:
 3384              	.L208:
 324:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3385              		.loc 1 324 5 discriminator 1 view .LVU1017
 324:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3386              		.loc 1 324 5 discriminator 1 view .LVU1018
 3387 0014 FEE7     		b	.L208
 3388              	.L207:
 324:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3389              		.loc 1 324 41 discriminator 2 view .LVU1019
 326:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3390              		.loc 1 326 5 discriminator 2 view .LVU1020
 326:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3391              		.loc 1 326 30 is_stmt 0 discriminator 2 view .LVU1021
 3392 0016 2046     		mov	r0, r4
 3393 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 3394              	.LVL348:
 328:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3395              		.loc 1 328 5 is_stmt 1 discriminator 2 view .LVU1022
 328:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3396              		.loc 1 328 15 is_stmt 0 discriminator 2 view .LVU1023
 3397 001c 90F82000 		ldrb	r0, [r0, #32]	@ zero_extendqisi2
 3398              	.LVL349:
 329:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3399              		.loc 1 329 1 discriminator 2 view .LVU1024
 3400 0020 00F00300 		and	r0, r0, #3
 3401 0024 10BD     		pop	{r4, pc}
 3402              	.LVL350:
 3403              	.L211:
 329:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 108


 3404              		.loc 1 329 1 discriminator 2 view .LVU1025
 3405 0026 00BF     		.align	2
 3406              	.L210:
 3407 0028 00000000 		.word	.LC1
 3408              		.cfi_endproc
 3409              	.LFE468:
 3411              		.section	.text.lv_cpicker_get_color_mode_fixed,"ax",%progbits
 3412              		.align	1
 3413              		.global	lv_cpicker_get_color_mode_fixed
 3414              		.syntax unified
 3415              		.thumb
 3416              		.thumb_func
 3417              		.fpu fpv4-sp-d16
 3419              	lv_cpicker_get_color_mode_fixed:
 3420              	.LVL351:
 3421              	.LFB469:
 337:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3422              		.loc 1 337 1 is_stmt 1 view -0
 3423              		.cfi_startproc
 3424              		@ args = 0, pretend = 0, frame = 0
 3425              		@ frame_needed = 0, uses_anonymous_args = 0
 337:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3426              		.loc 1 337 1 is_stmt 0 view .LVU1027
 3427 0000 10B5     		push	{r4, lr}
 3428              	.LCFI34:
 3429              		.cfi_def_cfa_offset 8
 3430              		.cfi_offset 4, -8
 3431              		.cfi_offset 14, -4
 3432 0002 0446     		mov	r4, r0
 338:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3433              		.loc 1 338 5 is_stmt 1 view .LVU1028
 338:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3434              		.loc 1 338 5 view .LVU1029
 3435 0004 FFF7FEFF 		bl	lv_debug_check_null
 3436              	.LVL352:
 338:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3437              		.loc 1 338 5 is_stmt 0 view .LVU1030
 3438 0008 28B9     		cbnz	r0, .L213
 338:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3439              		.loc 1 338 5 is_stmt 1 discriminator 1 view .LVU1031
 338:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3440              		.loc 1 338 5 discriminator 1 view .LVU1032
 3441 000a 2246     		mov	r2, r4
 3442 000c 0023     		movs	r3, #0
 3443 000e 0648     		ldr	r0, .L216
 3444 0010 FFF7FEFF 		bl	lv_debug_log_error
 3445              	.LVL353:
 3446              	.L214:
 338:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3447              		.loc 1 338 5 discriminator 1 view .LVU1033
 338:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3448              		.loc 1 338 5 discriminator 1 view .LVU1034
 3449 0014 FEE7     		b	.L214
 3450              	.L213:
 338:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3451              		.loc 1 338 41 discriminator 2 view .LVU1035
 340:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 109


 3452              		.loc 1 340 5 discriminator 2 view .LVU1036
 340:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3453              		.loc 1 340 30 is_stmt 0 discriminator 2 view .LVU1037
 3454 0016 2046     		mov	r0, r4
 3455 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 3456              	.LVL354:
 342:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3457              		.loc 1 342 5 is_stmt 1 discriminator 2 view .LVU1038
 342:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3458              		.loc 1 342 15 is_stmt 0 discriminator 2 view .LVU1039
 3459 001c 90F82000 		ldrb	r0, [r0, #32]	@ zero_extendqisi2
 3460              	.LVL355:
 343:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3461              		.loc 1 343 1 discriminator 2 view .LVU1040
 3462 0020 C0F38000 		ubfx	r0, r0, #2, #1
 3463 0024 10BD     		pop	{r4, pc}
 3464              	.LVL356:
 3465              	.L217:
 343:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3466              		.loc 1 343 1 discriminator 2 view .LVU1041
 3467 0026 00BF     		.align	2
 3468              	.L216:
 3469 0028 00000000 		.word	.LC1
 3470              		.cfi_endproc
 3471              	.LFE469:
 3473              		.section	.text.lv_cpicker_get_hue,"ax",%progbits
 3474              		.align	1
 3475              		.global	lv_cpicker_get_hue
 3476              		.syntax unified
 3477              		.thumb
 3478              		.thumb_func
 3479              		.fpu fpv4-sp-d16
 3481              	lv_cpicker_get_hue:
 3482              	.LVL357:
 3483              	.LFB470:
 351:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3484              		.loc 1 351 1 is_stmt 1 view -0
 3485              		.cfi_startproc
 3486              		@ args = 0, pretend = 0, frame = 0
 3487              		@ frame_needed = 0, uses_anonymous_args = 0
 351:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3488              		.loc 1 351 1 is_stmt 0 view .LVU1043
 3489 0000 10B5     		push	{r4, lr}
 3490              	.LCFI35:
 3491              		.cfi_def_cfa_offset 8
 3492              		.cfi_offset 4, -8
 3493              		.cfi_offset 14, -4
 3494 0002 0446     		mov	r4, r0
 352:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3495              		.loc 1 352 5 is_stmt 1 view .LVU1044
 352:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3496              		.loc 1 352 5 view .LVU1045
 3497 0004 FFF7FEFF 		bl	lv_debug_check_null
 3498              	.LVL358:
 352:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3499              		.loc 1 352 5 is_stmt 0 view .LVU1046
 3500 0008 28B9     		cbnz	r0, .L219
ARM GAS  D:\Temp\ccfvNLhk.s 			page 110


 352:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3501              		.loc 1 352 5 is_stmt 1 discriminator 1 view .LVU1047
 352:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3502              		.loc 1 352 5 discriminator 1 view .LVU1048
 3503 000a 2246     		mov	r2, r4
 3504 000c 0023     		movs	r3, #0
 3505 000e 0448     		ldr	r0, .L222
 3506 0010 FFF7FEFF 		bl	lv_debug_log_error
 3507              	.LVL359:
 3508              	.L220:
 352:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3509              		.loc 1 352 5 discriminator 1 view .LVU1049
 352:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3510              		.loc 1 352 5 discriminator 1 view .LVU1050
 3511 0014 FEE7     		b	.L220
 3512              	.L219:
 352:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3513              		.loc 1 352 41 discriminator 2 view .LVU1051
 354:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3514              		.loc 1 354 5 discriminator 2 view .LVU1052
 354:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3515              		.loc 1 354 30 is_stmt 0 discriminator 2 view .LVU1053
 3516 0016 2046     		mov	r0, r4
 3517 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 3518              	.LVL360:
 356:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3519              		.loc 1 356 5 is_stmt 1 discriminator 2 view .LVU1054
 357:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3520              		.loc 1 357 1 is_stmt 0 discriminator 2 view .LVU1055
 3521 001c 0088     		ldrh	r0, [r0]
 3522              	.LVL361:
 357:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3523              		.loc 1 357 1 discriminator 2 view .LVU1056
 3524 001e 10BD     		pop	{r4, pc}
 3525              	.LVL362:
 3526              	.L223:
 357:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3527              		.loc 1 357 1 discriminator 2 view .LVU1057
 3528              		.align	2
 3529              	.L222:
 3530 0020 00000000 		.word	.LC1
 3531              		.cfi_endproc
 3532              	.LFE470:
 3534              		.section	.text.lv_cpicker_get_saturation,"ax",%progbits
 3535              		.align	1
 3536              		.global	lv_cpicker_get_saturation
 3537              		.syntax unified
 3538              		.thumb
 3539              		.thumb_func
 3540              		.fpu fpv4-sp-d16
 3542              	lv_cpicker_get_saturation:
 3543              	.LVL363:
 3544              	.LFB471:
 365:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3545              		.loc 1 365 1 is_stmt 1 view -0
 3546              		.cfi_startproc
 3547              		@ args = 0, pretend = 0, frame = 0
ARM GAS  D:\Temp\ccfvNLhk.s 			page 111


 3548              		@ frame_needed = 0, uses_anonymous_args = 0
 365:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3549              		.loc 1 365 1 is_stmt 0 view .LVU1059
 3550 0000 10B5     		push	{r4, lr}
 3551              	.LCFI36:
 3552              		.cfi_def_cfa_offset 8
 3553              		.cfi_offset 4, -8
 3554              		.cfi_offset 14, -4
 3555 0002 0446     		mov	r4, r0
 366:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3556              		.loc 1 366 5 is_stmt 1 view .LVU1060
 366:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3557              		.loc 1 366 5 view .LVU1061
 3558 0004 FFF7FEFF 		bl	lv_debug_check_null
 3559              	.LVL364:
 366:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3560              		.loc 1 366 5 is_stmt 0 view .LVU1062
 3561 0008 28B9     		cbnz	r0, .L225
 366:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3562              		.loc 1 366 5 is_stmt 1 discriminator 1 view .LVU1063
 366:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3563              		.loc 1 366 5 discriminator 1 view .LVU1064
 3564 000a 2246     		mov	r2, r4
 3565 000c 0023     		movs	r3, #0
 3566 000e 0448     		ldr	r0, .L228
 3567 0010 FFF7FEFF 		bl	lv_debug_log_error
 3568              	.LVL365:
 3569              	.L226:
 366:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3570              		.loc 1 366 5 discriminator 1 view .LVU1065
 366:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3571              		.loc 1 366 5 discriminator 1 view .LVU1066
 3572 0014 FEE7     		b	.L226
 3573              	.L225:
 366:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3574              		.loc 1 366 41 discriminator 2 view .LVU1067
 368:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3575              		.loc 1 368 5 discriminator 2 view .LVU1068
 368:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3576              		.loc 1 368 30 is_stmt 0 discriminator 2 view .LVU1069
 3577 0016 2046     		mov	r0, r4
 3578 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 3579              	.LVL366:
 370:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3580              		.loc 1 370 5 is_stmt 1 discriminator 2 view .LVU1070
 371:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3581              		.loc 1 371 1 is_stmt 0 discriminator 2 view .LVU1071
 3582 001c 8078     		ldrb	r0, [r0, #2]	@ zero_extendqisi2
 3583              	.LVL367:
 371:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3584              		.loc 1 371 1 discriminator 2 view .LVU1072
 3585 001e 10BD     		pop	{r4, pc}
 3586              	.LVL368:
 3587              	.L229:
 371:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3588              		.loc 1 371 1 discriminator 2 view .LVU1073
 3589              		.align	2
ARM GAS  D:\Temp\ccfvNLhk.s 			page 112


 3590              	.L228:
 3591 0020 00000000 		.word	.LC1
 3592              		.cfi_endproc
 3593              	.LFE471:
 3595              		.section	.text.lv_cpicker_get_value,"ax",%progbits
 3596              		.align	1
 3597              		.global	lv_cpicker_get_value
 3598              		.syntax unified
 3599              		.thumb
 3600              		.thumb_func
 3601              		.fpu fpv4-sp-d16
 3603              	lv_cpicker_get_value:
 3604              	.LVL369:
 3605              	.LFB472:
 379:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3606              		.loc 1 379 1 is_stmt 1 view -0
 3607              		.cfi_startproc
 3608              		@ args = 0, pretend = 0, frame = 0
 3609              		@ frame_needed = 0, uses_anonymous_args = 0
 379:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3610              		.loc 1 379 1 is_stmt 0 view .LVU1075
 3611 0000 10B5     		push	{r4, lr}
 3612              	.LCFI37:
 3613              		.cfi_def_cfa_offset 8
 3614              		.cfi_offset 4, -8
 3615              		.cfi_offset 14, -4
 3616 0002 0446     		mov	r4, r0
 380:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3617              		.loc 1 380 5 is_stmt 1 view .LVU1076
 380:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3618              		.loc 1 380 5 view .LVU1077
 3619 0004 FFF7FEFF 		bl	lv_debug_check_null
 3620              	.LVL370:
 380:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3621              		.loc 1 380 5 is_stmt 0 view .LVU1078
 3622 0008 28B9     		cbnz	r0, .L231
 380:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3623              		.loc 1 380 5 is_stmt 1 discriminator 1 view .LVU1079
 380:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3624              		.loc 1 380 5 discriminator 1 view .LVU1080
 3625 000a 2246     		mov	r2, r4
 3626 000c 0023     		movs	r3, #0
 3627 000e 0448     		ldr	r0, .L234
 3628 0010 FFF7FEFF 		bl	lv_debug_log_error
 3629              	.LVL371:
 3630              	.L232:
 380:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3631              		.loc 1 380 5 discriminator 1 view .LVU1081
 380:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3632              		.loc 1 380 5 discriminator 1 view .LVU1082
 3633 0014 FEE7     		b	.L232
 3634              	.L231:
 380:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3635              		.loc 1 380 41 discriminator 2 view .LVU1083
 382:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3636              		.loc 1 382 5 discriminator 2 view .LVU1084
 382:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 113


 3637              		.loc 1 382 30 is_stmt 0 discriminator 2 view .LVU1085
 3638 0016 2046     		mov	r0, r4
 3639 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 3640              	.LVL372:
 384:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3641              		.loc 1 384 5 is_stmt 1 discriminator 2 view .LVU1086
 385:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3642              		.loc 1 385 1 is_stmt 0 discriminator 2 view .LVU1087
 3643 001c C078     		ldrb	r0, [r0, #3]	@ zero_extendqisi2
 3644              	.LVL373:
 385:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3645              		.loc 1 385 1 discriminator 2 view .LVU1088
 3646 001e 10BD     		pop	{r4, pc}
 3647              	.LVL374:
 3648              	.L235:
 385:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3649              		.loc 1 385 1 discriminator 2 view .LVU1089
 3650              		.align	2
 3651              	.L234:
 3652 0020 00000000 		.word	.LC1
 3653              		.cfi_endproc
 3654              	.LFE472:
 3656              		.section	.text.lv_cpicker_get_hsv,"ax",%progbits
 3657              		.align	1
 3658              		.global	lv_cpicker_get_hsv
 3659              		.syntax unified
 3660              		.thumb
 3661              		.thumb_func
 3662              		.fpu fpv4-sp-d16
 3664              	lv_cpicker_get_hsv:
 3665              	.LVL375:
 3666              	.LFB473:
 393:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3667              		.loc 1 393 1 is_stmt 1 view -0
 3668              		.cfi_startproc
 3669              		@ args = 0, pretend = 0, frame = 8
 3670              		@ frame_needed = 0, uses_anonymous_args = 0
 393:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3671              		.loc 1 393 1 is_stmt 0 view .LVU1091
 3672 0000 10B5     		push	{r4, lr}
 3673              	.LCFI38:
 3674              		.cfi_def_cfa_offset 8
 3675              		.cfi_offset 4, -8
 3676              		.cfi_offset 14, -4
 3677 0002 82B0     		sub	sp, sp, #8
 3678              	.LCFI39:
 3679              		.cfi_def_cfa_offset 16
 3680 0004 0446     		mov	r4, r0
 394:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3681              		.loc 1 394 5 is_stmt 1 view .LVU1092
 394:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3682              		.loc 1 394 5 view .LVU1093
 3683 0006 FFF7FEFF 		bl	lv_debug_check_null
 3684              	.LVL376:
 394:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3685              		.loc 1 394 5 is_stmt 0 view .LVU1094
 3686 000a 28B9     		cbnz	r0, .L237
ARM GAS  D:\Temp\ccfvNLhk.s 			page 114


 394:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3687              		.loc 1 394 5 is_stmt 1 discriminator 1 view .LVU1095
 394:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3688              		.loc 1 394 5 discriminator 1 view .LVU1096
 3689 000c 2246     		mov	r2, r4
 3690 000e 0023     		movs	r3, #0
 3691 0010 0848     		ldr	r0, .L240
 3692 0012 FFF7FEFF 		bl	lv_debug_log_error
 3693              	.LVL377:
 3694              	.L238:
 394:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3695              		.loc 1 394 5 discriminator 1 view .LVU1097
 394:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3696              		.loc 1 394 5 discriminator 1 view .LVU1098
 3697 0016 FEE7     		b	.L238
 3698              	.L237:
 394:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3699              		.loc 1 394 41 discriminator 2 view .LVU1099
 396:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3700              		.loc 1 396 5 discriminator 2 view .LVU1100
 396:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3701              		.loc 1 396 30 is_stmt 0 discriminator 2 view .LVU1101
 3702 0018 2046     		mov	r0, r4
 3703 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
 3704              	.LVL378:
 398:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3705              		.loc 1 398 5 is_stmt 1 discriminator 2 view .LVU1102
 398:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3706              		.loc 1 398 15 is_stmt 0 discriminator 2 view .LVU1103
 3707 001e 0368     		ldr	r3, [r0]
 3708 0020 0020     		movs	r0, #0
 3709              	.LVL379:
 398:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3710              		.loc 1 398 15 discriminator 2 view .LVU1104
 3711 0022 9AB2     		uxth	r2, r3
 3712 0024 62F30F00 		bfi	r0, r2, #0, #16
 3713 0028 1B0C     		lsrs	r3, r3, #16
 3714 002a 63F31F40 		bfi	r0, r3, #16, #16
 399:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3715              		.loc 1 399 1 discriminator 2 view .LVU1105
 3716 002e 02B0     		add	sp, sp, #8
 3717              	.LCFI40:
 3718              		.cfi_def_cfa_offset 8
 3719              		@ sp needed
 3720 0030 10BD     		pop	{r4, pc}
 3721              	.LVL380:
 3722              	.L241:
 399:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3723              		.loc 1 399 1 discriminator 2 view .LVU1106
 3724 0032 00BF     		.align	2
 3725              	.L240:
 3726 0034 00000000 		.word	.LC1
 3727              		.cfi_endproc
 3728              	.LFE473:
 3730              		.section	.text.lv_cpicker_set_hue,"ax",%progbits
 3731              		.align	1
 3732              		.global	lv_cpicker_set_hue
ARM GAS  D:\Temp\ccfvNLhk.s 			page 115


 3733              		.syntax unified
 3734              		.thumb
 3735              		.thumb_func
 3736              		.fpu fpv4-sp-d16
 3738              	lv_cpicker_set_hue:
 3739              	.LVL381:
 3740              	.LFB460:
 193:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_hsv_t hsv = lv_cpicker_get_hsv(cpicker);
 3741              		.loc 1 193 1 is_stmt 1 view -0
 3742              		.cfi_startproc
 3743              		@ args = 0, pretend = 0, frame = 8
 3744              		@ frame_needed = 0, uses_anonymous_args = 0
 193:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_hsv_t hsv = lv_cpicker_get_hsv(cpicker);
 3745              		.loc 1 193 1 is_stmt 0 view .LVU1108
 3746 0000 30B5     		push	{r4, r5, lr}
 3747              	.LCFI41:
 3748              		.cfi_def_cfa_offset 12
 3749              		.cfi_offset 4, -12
 3750              		.cfi_offset 5, -8
 3751              		.cfi_offset 14, -4
 3752 0002 83B0     		sub	sp, sp, #12
 3753              	.LCFI42:
 3754              		.cfi_def_cfa_offset 24
 3755 0004 0446     		mov	r4, r0
 3756 0006 0D46     		mov	r5, r1
 194:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.h = hue;
 3757              		.loc 1 194 5 is_stmt 1 view .LVU1109
 194:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.h = hue;
 3758              		.loc 1 194 26 is_stmt 0 view .LVU1110
 3759 0008 FFF7FEFF 		bl	lv_cpicker_get_hsv
 3760              	.LVL382:
 194:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.h = hue;
 3761              		.loc 1 194 26 view .LVU1111
 3762 000c 0190     		str	r0, [sp, #4]
 195:lvgl/src/lv_widgets/lv_cpicker.c ****     return lv_cpicker_set_hsv(cpicker, hsv);
 3763              		.loc 1 195 5 is_stmt 1 view .LVU1112
 195:lvgl/src/lv_widgets/lv_cpicker.c ****     return lv_cpicker_set_hsv(cpicker, hsv);
 3764              		.loc 1 195 11 is_stmt 0 view .LVU1113
 3765 000e ADF80450 		strh	r5, [sp, #4]	@ movhi
 196:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3766              		.loc 1 196 5 is_stmt 1 view .LVU1114
 196:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3767              		.loc 1 196 12 is_stmt 0 view .LVU1115
 3768 0012 0199     		ldr	r1, [sp, #4]
 3769 0014 2046     		mov	r0, r4
 3770 0016 FFF7FEFF 		bl	lv_cpicker_set_hsv
 3771              	.LVL383:
 197:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3772              		.loc 1 197 1 view .LVU1116
 3773 001a 03B0     		add	sp, sp, #12
 3774              	.LCFI43:
 3775              		.cfi_def_cfa_offset 12
 3776              		@ sp needed
 3777 001c 30BD     		pop	{r4, r5, pc}
 197:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3778              		.loc 1 197 1 view .LVU1117
 3779              		.cfi_endproc
ARM GAS  D:\Temp\ccfvNLhk.s 			page 116


 3780              	.LFE460:
 3782              		.section	.text.lv_cpicker_set_saturation,"ax",%progbits
 3783              		.align	1
 3784              		.global	lv_cpicker_set_saturation
 3785              		.syntax unified
 3786              		.thumb
 3787              		.thumb_func
 3788              		.fpu fpv4-sp-d16
 3790              	lv_cpicker_set_saturation:
 3791              	.LVL384:
 3792              	.LFB461:
 206:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_hsv_t hsv = lv_cpicker_get_hsv(cpicker);
 3793              		.loc 1 206 1 is_stmt 1 view -0
 3794              		.cfi_startproc
 3795              		@ args = 0, pretend = 0, frame = 8
 3796              		@ frame_needed = 0, uses_anonymous_args = 0
 206:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_hsv_t hsv = lv_cpicker_get_hsv(cpicker);
 3797              		.loc 1 206 1 is_stmt 0 view .LVU1119
 3798 0000 30B5     		push	{r4, r5, lr}
 3799              	.LCFI44:
 3800              		.cfi_def_cfa_offset 12
 3801              		.cfi_offset 4, -12
 3802              		.cfi_offset 5, -8
 3803              		.cfi_offset 14, -4
 3804 0002 83B0     		sub	sp, sp, #12
 3805              	.LCFI45:
 3806              		.cfi_def_cfa_offset 24
 3807 0004 0446     		mov	r4, r0
 3808 0006 0D46     		mov	r5, r1
 207:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.s = saturation;
 3809              		.loc 1 207 5 is_stmt 1 view .LVU1120
 207:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.s = saturation;
 3810              		.loc 1 207 26 is_stmt 0 view .LVU1121
 3811 0008 FFF7FEFF 		bl	lv_cpicker_get_hsv
 3812              	.LVL385:
 207:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.s = saturation;
 3813              		.loc 1 207 26 view .LVU1122
 3814 000c 0190     		str	r0, [sp, #4]
 208:lvgl/src/lv_widgets/lv_cpicker.c ****     return lv_cpicker_set_hsv(cpicker, hsv);
 3815              		.loc 1 208 5 is_stmt 1 view .LVU1123
 208:lvgl/src/lv_widgets/lv_cpicker.c ****     return lv_cpicker_set_hsv(cpicker, hsv);
 3816              		.loc 1 208 11 is_stmt 0 view .LVU1124
 3817 000e 8DF80650 		strb	r5, [sp, #6]
 209:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3818              		.loc 1 209 5 is_stmt 1 view .LVU1125
 209:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3819              		.loc 1 209 12 is_stmt 0 view .LVU1126
 3820 0012 0199     		ldr	r1, [sp, #4]
 3821 0014 2046     		mov	r0, r4
 3822 0016 FFF7FEFF 		bl	lv_cpicker_set_hsv
 3823              	.LVL386:
 210:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3824              		.loc 1 210 1 view .LVU1127
 3825 001a 03B0     		add	sp, sp, #12
 3826              	.LCFI46:
 3827              		.cfi_def_cfa_offset 12
 3828              		@ sp needed
ARM GAS  D:\Temp\ccfvNLhk.s 			page 117


 3829 001c 30BD     		pop	{r4, r5, pc}
 210:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3830              		.loc 1 210 1 view .LVU1128
 3831              		.cfi_endproc
 3832              	.LFE461:
 3834              		.section	.text.lv_cpicker_set_value,"ax",%progbits
 3835              		.align	1
 3836              		.global	lv_cpicker_set_value
 3837              		.syntax unified
 3838              		.thumb
 3839              		.thumb_func
 3840              		.fpu fpv4-sp-d16
 3842              	lv_cpicker_set_value:
 3843              	.LVL387:
 3844              	.LFB462:
 219:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_hsv_t hsv = lv_cpicker_get_hsv(cpicker);
 3845              		.loc 1 219 1 is_stmt 1 view -0
 3846              		.cfi_startproc
 3847              		@ args = 0, pretend = 0, frame = 8
 3848              		@ frame_needed = 0, uses_anonymous_args = 0
 219:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_hsv_t hsv = lv_cpicker_get_hsv(cpicker);
 3849              		.loc 1 219 1 is_stmt 0 view .LVU1130
 3850 0000 30B5     		push	{r4, r5, lr}
 3851              	.LCFI47:
 3852              		.cfi_def_cfa_offset 12
 3853              		.cfi_offset 4, -12
 3854              		.cfi_offset 5, -8
 3855              		.cfi_offset 14, -4
 3856 0002 83B0     		sub	sp, sp, #12
 3857              	.LCFI48:
 3858              		.cfi_def_cfa_offset 24
 3859 0004 0446     		mov	r4, r0
 3860 0006 0D46     		mov	r5, r1
 220:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.v = val;
 3861              		.loc 1 220 5 is_stmt 1 view .LVU1131
 220:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.v = val;
 3862              		.loc 1 220 26 is_stmt 0 view .LVU1132
 3863 0008 FFF7FEFF 		bl	lv_cpicker_get_hsv
 3864              	.LVL388:
 220:lvgl/src/lv_widgets/lv_cpicker.c ****     hsv.v = val;
 3865              		.loc 1 220 26 view .LVU1133
 3866 000c 0190     		str	r0, [sp, #4]
 221:lvgl/src/lv_widgets/lv_cpicker.c ****     return lv_cpicker_set_hsv(cpicker, hsv);
 3867              		.loc 1 221 5 is_stmt 1 view .LVU1134
 221:lvgl/src/lv_widgets/lv_cpicker.c ****     return lv_cpicker_set_hsv(cpicker, hsv);
 3868              		.loc 1 221 11 is_stmt 0 view .LVU1135
 3869 000e 8DF80750 		strb	r5, [sp, #7]
 222:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3870              		.loc 1 222 5 is_stmt 1 view .LVU1136
 222:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3871              		.loc 1 222 12 is_stmt 0 view .LVU1137
 3872 0012 0199     		ldr	r1, [sp, #4]
 3873 0014 2046     		mov	r0, r4
 3874 0016 FFF7FEFF 		bl	lv_cpicker_set_hsv
 3875              	.LVL389:
 223:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3876              		.loc 1 223 1 view .LVU1138
ARM GAS  D:\Temp\ccfvNLhk.s 			page 118


 3877 001a 03B0     		add	sp, sp, #12
 3878              	.LCFI49:
 3879              		.cfi_def_cfa_offset 12
 3880              		@ sp needed
 3881 001c 30BD     		pop	{r4, r5, pc}
 223:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3882              		.loc 1 223 1 view .LVU1139
 3883              		.cfi_endproc
 3884              	.LFE462:
 3886              		.section	.text.lv_cpicker_get_color,"ax",%progbits
 3887              		.align	1
 3888              		.global	lv_cpicker_get_color
 3889              		.syntax unified
 3890              		.thumb
 3891              		.thumb_func
 3892              		.fpu fpv4-sp-d16
 3894              	lv_cpicker_get_color:
 3895              	.LVL390:
 3896              	.LFB474:
 407:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3897              		.loc 1 407 1 is_stmt 1 view -0
 3898              		.cfi_startproc
 3899              		@ args = 0, pretend = 0, frame = 0
 3900              		@ frame_needed = 0, uses_anonymous_args = 0
 407:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 3901              		.loc 1 407 1 is_stmt 0 view .LVU1141
 3902 0000 10B5     		push	{r4, lr}
 3903              	.LCFI50:
 3904              		.cfi_def_cfa_offset 8
 3905              		.cfi_offset 4, -8
 3906              		.cfi_offset 14, -4
 3907 0002 0446     		mov	r4, r0
 408:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3908              		.loc 1 408 5 is_stmt 1 view .LVU1142
 408:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3909              		.loc 1 408 5 view .LVU1143
 3910 0004 FFF7FEFF 		bl	lv_debug_check_null
 3911              	.LVL391:
 408:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3912              		.loc 1 408 5 is_stmt 0 view .LVU1144
 3913 0008 28B9     		cbnz	r0, .L249
 408:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3914              		.loc 1 408 5 is_stmt 1 discriminator 1 view .LVU1145
 408:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3915              		.loc 1 408 5 discriminator 1 view .LVU1146
 3916 000a 2246     		mov	r2, r4
 3917 000c 0023     		movs	r3, #0
 3918 000e 0648     		ldr	r0, .L252
 3919 0010 FFF7FEFF 		bl	lv_debug_log_error
 3920              	.LVL392:
 3921              	.L250:
 408:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3922              		.loc 1 408 5 discriminator 1 view .LVU1147
 408:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3923              		.loc 1 408 5 discriminator 1 view .LVU1148
 3924 0014 FEE7     		b	.L250
 3925              	.L249:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 119


 408:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3926              		.loc 1 408 41 discriminator 2 view .LVU1149
 410:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3927              		.loc 1 410 5 discriminator 2 view .LVU1150
 410:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3928              		.loc 1 410 30 is_stmt 0 discriminator 2 view .LVU1151
 3929 0016 2046     		mov	r0, r4
 3930 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 3931              	.LVL393:
 412:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3932              		.loc 1 412 5 is_stmt 1 discriminator 2 view .LVU1152
 412:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3933              		.loc 1 412 12 is_stmt 0 discriminator 2 view .LVU1153
 3934 001c C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
 3935 001e 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 3936 0020 0088     		ldrh	r0, [r0]
 3937              	.LVL394:
 412:lvgl/src/lv_widgets/lv_cpicker.c **** }
 3938              		.loc 1 412 12 discriminator 2 view .LVU1154
 3939 0022 FFF7FEFF 		bl	lv_color_hsv_to_rgb
 3940              	.LVL395:
 413:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3941              		.loc 1 413 1 discriminator 2 view .LVU1155
 3942 0026 10BD     		pop	{r4, pc}
 3943              	.LVL396:
 3944              	.L253:
 413:lvgl/src/lv_widgets/lv_cpicker.c **** 
 3945              		.loc 1 413 1 discriminator 2 view .LVU1156
 3946              		.align	2
 3947              	.L252:
 3948 0028 00000000 		.word	.LC1
 3949              		.cfi_endproc
 3950              	.LFE474:
 3952              		.section	.text.draw_disc_grad,"ax",%progbits
 3953              		.align	1
 3954              		.syntax unified
 3955              		.thumb
 3956              		.thumb_func
 3957              		.fpu fpv4-sp-d16
 3959              	draw_disc_grad:
 3960              	.LVL397:
 3961              	.LFB477:
 474:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t w = lv_obj_get_width(cpicker);
 3962              		.loc 1 474 1 is_stmt 1 view -0
 3963              		.cfi_startproc
 3964              		@ args = 0, pretend = 0, frame = 176
 3965              		@ frame_needed = 0, uses_anonymous_args = 0
 474:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t w = lv_obj_get_width(cpicker);
 3966              		.loc 1 474 1 is_stmt 0 view .LVU1158
 3967 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3968              	.LCFI51:
 3969              		.cfi_def_cfa_offset 36
 3970              		.cfi_offset 4, -36
 3971              		.cfi_offset 5, -32
 3972              		.cfi_offset 6, -28
 3973              		.cfi_offset 7, -24
 3974              		.cfi_offset 8, -20
ARM GAS  D:\Temp\ccfvNLhk.s 			page 120


 3975              		.cfi_offset 9, -16
 3976              		.cfi_offset 10, -12
 3977              		.cfi_offset 11, -8
 3978              		.cfi_offset 14, -4
 3979 0004 ADB0     		sub	sp, sp, #180
 3980              	.LCFI52:
 3981              		.cfi_def_cfa_offset 216
 3982 0006 0546     		mov	r5, r0
 3983 0008 0190     		str	r0, [sp, #4]
 3984 000a 0291     		str	r1, [sp, #8]
 475:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t h = lv_obj_get_height(cpicker);
 3985              		.loc 1 475 5 is_stmt 1 view .LVU1159
 475:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t h = lv_obj_get_height(cpicker);
 3986              		.loc 1 475 20 is_stmt 0 view .LVU1160
 3987 000c FFF7FEFF 		bl	lv_obj_get_width
 3988              	.LVL398:
 475:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t h = lv_obj_get_height(cpicker);
 3989              		.loc 1 475 20 view .LVU1161
 3990 0010 0446     		mov	r4, r0
 3991              	.LVL399:
 476:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t cx = cpicker->coords.x1 + w / 2;
 3992              		.loc 1 476 5 is_stmt 1 view .LVU1162
 476:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t cx = cpicker->coords.x1 + w / 2;
 3993              		.loc 1 476 20 is_stmt 0 view .LVU1163
 3994 0012 2846     		mov	r0, r5
 3995 0014 FFF7FEFF 		bl	lv_obj_get_height
 3996              	.LVL400:
 477:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t cy = cpicker->coords.y1 + h / 2;
 3997              		.loc 1 477 5 is_stmt 1 view .LVU1164
 477:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t cy = cpicker->coords.y1 + h / 2;
 3998              		.loc 1 477 36 is_stmt 0 view .LVU1165
 3999 0018 B5F81090 		ldrh	r9, [r5, #16]
 477:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t cy = cpicker->coords.y1 + h / 2;
 4000              		.loc 1 477 40 view .LVU1166
 4001 001c 04EBD474 		add	r4, r4, r4, lsr #31
 4002              	.LVL401:
 477:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t cy = cpicker->coords.y1 + h / 2;
 4003              		.loc 1 477 40 view .LVU1167
 4004 0020 44F34F04 		sbfx	r4, r4, #1, #16
 4005 0024 A144     		add	r9, r9, r4
 4006 0026 1FFA89F9 		uxth	r9, r9
 4007              	.LVL402:
 478:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t r = w / 2;
 4008              		.loc 1 478 5 is_stmt 1 view .LVU1168
 478:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t r = w / 2;
 4009              		.loc 1 478 36 is_stmt 0 view .LVU1169
 4010 002a 6B8A     		ldrh	r3, [r5, #18]
 478:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t r = w / 2;
 4011              		.loc 1 478 40 view .LVU1170
 4012 002c 00EBD070 		add	r0, r0, r0, lsr #31
 4013              	.LVL403:
 478:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t r = w / 2;
 4014              		.loc 1 478 40 view .LVU1171
 4015 0030 03EB6003 		add	r3, r3, r0, asr #1
 4016 0034 1FFA83FA 		uxth	r10, r3
 4017              	.LVL404:
 479:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 121


 4018              		.loc 1 479 5 is_stmt 1 view .LVU1172
 481:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_line_dsc_init(&line_dsc);
 4019              		.loc 1 481 5 view .LVU1173
 482:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_init_draw_line_dsc(cpicker, LV_CPICKER_PART_MAIN, &line_dsc);
 4020              		.loc 1 482 5 view .LVU1174
 4021 0038 29A8     		add	r0, sp, #164
 4022 003a FFF7FEFF 		bl	lv_draw_line_dsc_init
 4023              	.LVL405:
 483:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4024              		.loc 1 483 5 view .LVU1175
 4025 003e 29AA     		add	r2, sp, #164
 4026 0040 0021     		movs	r1, #0
 4027 0042 2846     		mov	r0, r5
 4028 0044 FFF7FEFF 		bl	lv_obj_init_draw_line_dsc
 4029              	.LVL406:
 485:lvgl/src/lv_widgets/lv_cpicker.c ****     line_dsc.width += 2;
 4030              		.loc 1 485 5 view .LVU1176
 485:lvgl/src/lv_widgets/lv_cpicker.c ****     line_dsc.width += 2;
 4031              		.loc 1 485 25 is_stmt 0 view .LVU1177
 4032 0048 2746     		mov	r7, r4
 4033 004a 4FF41D73 		mov	r3, #628
 4034 004e 03FB04F3 		mul	r3, r3, r4
 485:lvgl/src/lv_widgets/lv_cpicker.c ****     line_dsc.width += 2;
 4035              		.loc 1 485 60 view .LVU1178
 4036 0052 704A     		ldr	r2, .L263
 4037 0054 82FB0312 		smull	r1, r2, r2, r3
 4038 0058 DB17     		asrs	r3, r3, #31
 4039 005a C3EB2223 		rsb	r3, r3, r2, asr #8
 485:lvgl/src/lv_widgets/lv_cpicker.c ****     line_dsc.width += 2;
 4040              		.loc 1 485 20 view .LVU1179
 4041 005e 1BB2     		sxth	r3, r3
 486:lvgl/src/lv_widgets/lv_cpicker.c ****     uint16_t i;
 4042              		.loc 1 486 5 is_stmt 1 view .LVU1180
 486:lvgl/src/lv_widgets/lv_cpicker.c ****     uint16_t i;
 4043              		.loc 1 486 20 is_stmt 0 view .LVU1181
 4044 0060 0233     		adds	r3, r3, #2
 4045 0062 ADF8A630 		strh	r3, [sp, #166]	@ movhi
 487:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_coord_t cir_w = lv_obj_get_style_scale_width(cpicker, LV_CPICKER_PART_MAIN);
 4046              		.loc 1 487 5 is_stmt 1 view .LVU1182
 488:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4047              		.loc 1 488 5 view .LVU1183
 4048              	.LVL407:
 4049              	.LBB121:
 4050              	.LBI121:
 4051              		.loc 2 194 1 view .LVU1184
 4052              	.LBB122:
 4053              		.loc 2 194 1 view .LVU1185
 4054 0066 C022     		movs	r2, #192
 4055 0068 0021     		movs	r1, #0
 4056 006a 2846     		mov	r0, r5
 4057 006c FFF7FEFF 		bl	_lv_obj_get_style_int
 4058              	.LVL408:
 4059 0070 0446     		mov	r4, r0
 4060              	.LVL409:
 4061              		.loc 2 194 1 is_stmt 0 view .LVU1186
 4062              	.LBE122:
 4063              	.LBE121:
ARM GAS  D:\Temp\ccfvNLhk.s 			page 122


 491:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_copy(&mask_area_out, &cpicker->coords);
 4064              		.loc 1 491 5 is_stmt 1 view .LVU1187
 492:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.x1 += OUTER_MASK_WIDTH;
 4065              		.loc 1 492 5 view .LVU1188
 492:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.x1 += OUTER_MASK_WIDTH;
 4066              		.loc 1 492 34 is_stmt 0 view .LVU1189
 4067 0072 05F11003 		add	r3, r5, #16
 4068 0076 0593     		str	r3, [sp, #20]
 4069              	.LVL410:
 4070              	.LBB123:
 4071              	.LBI123:
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 4072              		.loc 3 97 20 is_stmt 1 view .LVU1190
 4073              	.LBB124:
 4074              	.LBB125:
 4075              		.file 5 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_mem.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @file lv_mem.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifndef LV_MEM_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #define LV_MEM_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <stdint.h>
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <stddef.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "lv_log.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "lv_types.h"
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <string.h>
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /*********************
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      DEFINES
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *********************/
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifndef LV_MEM_BUF_MAX_NUM
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #define LV_MEM_BUF_MAX_NUM    16
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**********************
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      TYPEDEFS
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  **********************/
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Heap information structure.
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
ARM GAS  D:\Temp\ccfvNLhk.s 			page 123


  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef struct {
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t total_size; /**< Total heap size */
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_cnt;
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_size; /**< Size of available memory */
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_biggest_size;
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t used_cnt;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used */
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t used_pct; /**< Percentage used */
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation */
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** } lv_mem_monitor_t;
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef struct {
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     void * p;
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint16_t size;
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t used    : 1;
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** } lv_mem_buf_t;
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** extern lv_mem_buf_arr_t _lv_mem_buf;
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**********************
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * GLOBAL PROTOTYPES
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  **********************/
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_init(void);
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_deinit(void);
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Allocate a memory dynamically
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param size size of the memory to allocate in bytes
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return pointer to the allocated memory
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * lv_mem_alloc(size_t size);
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Free an allocated data
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_free(const void * data);
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory.
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Its content will be copied to the new memory block and freed
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param new_size the desired new size in byte
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return pointer to the new memory
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 124


  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Join the adjacent free memory blocks
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_defrag(void);
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** lv_res_t lv_mem_test(void);
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Give information about the work memory of dynamic allocation
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param mon_p pointer to a dm_mon_p variable,
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *              the result of the analysis will be stored here
 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Give the size of an allocated memory
 119:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory
 120:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return the size of data memory in bytes
 121:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 122:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** uint32_t _lv_mem_get_size(const void * data);
 123:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 124:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 125:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Get a temporal buffer with the given size.
 126:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param size the required size
 127:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 128:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * _lv_mem_buf_get(uint32_t size);
 129:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 130:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 131:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Release a memory buffer
 132:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param p buffer to release
 133:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 134:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_buf_release(void * p);
 135:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 136:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 137:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Free all memory buffers
 138:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 139:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_buf_free_all(void);
 140:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 141:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** //! @cond Doxygen_Suppress
 142:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 143:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 144:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 145:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 146:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memcpy
 147:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 148:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 149:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 150:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 151:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void * _lv_memcpy(void * dst, const void * src, size_t len)
 152:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 153:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return memcpy(dst, src, len);
 154:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 155:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 125


 156:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 157:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memcpy
 158:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 159:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 160:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 161:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 162:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void * _lv_memcpy_small(void * dst, const void * src, size_t len)
 163:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 164:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return memcpy(dst, src, len);
 165:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 166:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 167:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 168:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset
 169:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 170:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param v value to set [0..255]
 171:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 172:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 173:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset(void * dst, uint8_t v, size_t len)
 174:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 175:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, v, len);
 176:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 177:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 178:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 179:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 180:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 181:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 182:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 183:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset_00(void * dst, size_t len)
 184:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 185:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, 0x00, len);
 186:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 187:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 188:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 189:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 190:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 191:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 192:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 193:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset_ff(void * dst, size_t len)
 194:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 195:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, 0xFF, len);
 196:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 197:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 198:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #else
 199:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 200:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 201:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 202:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 203:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 204:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 205:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * _lv_memcpy(void * dst, const void * src, size_t len);
 206:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 207:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 208:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 209:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 210:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 211:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 212:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
ARM GAS  D:\Temp\ccfvNLhk.s 			page 126


 213:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * _lv_memcpy_small(void * dst, const void * src, size_t le
 214:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 216:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 4076              		.loc 5 216 21 is_stmt 0 view .LVU1191
 4077 0078 1946     		mov	r1, r3
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 4078              		.loc 5 215 15 view .LVU1192
 4079 007a 27AA     		add	r2, sp, #156
 4080              	.LVL411:
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 4081              		.loc 5 215 15 view .LVU1193
 4082              	.LBE125:
 4083              	.LBE124:
 4084              	.LBE123:
 492:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.x1 += OUTER_MASK_WIDTH;
 4085              		.loc 1 492 34 view .LVU1194
 4086 007c 0823     		movs	r3, #8
 4087              	.LVL412:
 492:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.x1 += OUTER_MASK_WIDTH;
 4088              		.loc 1 492 34 view .LVU1195
 4089 007e 04E0     		b	.L255
 4090              	.LVL413:
 4091              	.L256:
 4092              	.LBB128:
 4093              	.LBB127:
 4094              	.LBB126:
 217:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     while(len) {
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 4095              		.loc 5 219 9 is_stmt 1 view .LVU1196
 4096              		.loc 5 219 15 is_stmt 0 view .LVU1197
 4097 0080 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 4098              	.LVL414:
 4099              		.loc 5 219 13 view .LVU1198
 4100 0084 02F8010B 		strb	r0, [r2], #1
 4101              	.LVL415:
 220:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 4102              		.loc 5 220 9 is_stmt 1 view .LVU1199
 221:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         s8++;
 4103              		.loc 5 221 9 view .LVU1200
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         len--;
 4104              		.loc 5 222 9 view .LVU1201
 4105              		.loc 5 222 12 is_stmt 0 view .LVU1202
 4106 0088 013B     		subs	r3, r3, #1
 4107              	.LVL416:
 4108              	.L255:
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 4109              		.loc 5 218 10 view .LVU1203
 4110 008a 002B     		cmp	r3, #0
 4111 008c F8D1     		bne	.L256
 223:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 224:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 225:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return dst;
 4112              		.loc 5 225 5 is_stmt 1 view .LVU1204
 4113              	.LVL417:
 4114              		.loc 5 225 5 is_stmt 0 view .LVU1205
ARM GAS  D:\Temp\ccfvNLhk.s 			page 127


 4115              	.LBE126:
 4116              	.LBE127:
 4117              	.LBE128:
 493:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.x2 -= OUTER_MASK_WIDTH;
 4118              		.loc 1 493 5 is_stmt 1 view .LVU1206
 493:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.x2 -= OUTER_MASK_WIDTH;
 4119              		.loc 1 493 22 is_stmt 0 view .LVU1207
 4120 008e BDF89C30 		ldrh	r3, [sp, #156]
 4121 0092 0333     		adds	r3, r3, #3
 4122 0094 ADF89C30 		strh	r3, [sp, #156]	@ movhi
 494:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.y1 += OUTER_MASK_WIDTH;
 4123              		.loc 1 494 5 is_stmt 1 view .LVU1208
 494:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.y1 += OUTER_MASK_WIDTH;
 4124              		.loc 1 494 22 is_stmt 0 view .LVU1209
 4125 0098 BDF8A030 		ldrh	r3, [sp, #160]
 4126 009c 033B     		subs	r3, r3, #3
 4127 009e ADF8A030 		strh	r3, [sp, #160]	@ movhi
 495:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.y2 -= OUTER_MASK_WIDTH;
 4128              		.loc 1 495 5 is_stmt 1 view .LVU1210
 495:lvgl/src/lv_widgets/lv_cpicker.c ****     mask_area_out.y2 -= OUTER_MASK_WIDTH;
 4129              		.loc 1 495 22 is_stmt 0 view .LVU1211
 4130 00a2 BDF89E30 		ldrh	r3, [sp, #158]
 4131 00a6 0333     		adds	r3, r3, #3
 4132 00a8 ADF89E30 		strh	r3, [sp, #158]	@ movhi
 496:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_mask_radius_param_t mask_out_param;
 4133              		.loc 1 496 5 is_stmt 1 view .LVU1212
 496:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_mask_radius_param_t mask_out_param;
 4134              		.loc 1 496 22 is_stmt 0 view .LVU1213
 4135 00ac BDF8A230 		ldrh	r3, [sp, #162]
 4136 00b0 033B     		subs	r3, r3, #3
 4137 00b2 ADF8A230 		strh	r3, [sp, #162]	@ movhi
 497:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_mask_radius_init(&mask_out_param, &mask_area_out, LV_RADIUS_CIRCLE, false);
 4138              		.loc 1 497 5 is_stmt 1 view .LVU1214
 498:lvgl/src/lv_widgets/lv_cpicker.c ****     int16_t mask_out_id = lv_draw_mask_add(&mask_out_param, 0);
 4139              		.loc 1 498 5 view .LVU1215
 4140 00b6 0023     		movs	r3, #0
 4141 00b8 47F6FF72 		movw	r2, #32767
 4142 00bc 27A9     		add	r1, sp, #156
 4143 00be 20A8     		add	r0, sp, #128
 4144 00c0 FFF7FEFF 		bl	lv_draw_mask_radius_init
 4145              	.LVL418:
 499:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4146              		.loc 1 499 5 view .LVU1216
 499:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4147              		.loc 1 499 27 is_stmt 0 view .LVU1217
 4148 00c4 0021     		movs	r1, #0
 4149 00c6 20A8     		add	r0, sp, #128
 4150 00c8 FFF7FEFF 		bl	lv_draw_mask_add
 4151              	.LVL419:
 4152 00cc 0490     		str	r0, [sp, #16]
 4153              	.LVL420:
 503:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4154              		.loc 1 503 5 is_stmt 1 view .LVU1218
 503:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4155              		.loc 1 503 46 is_stmt 0 view .LVU1219
 4156 00ce BDF8A6B0 		ldrh	fp, [sp, #166]
 503:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 128


 4157              		.loc 1 503 36 view .LVU1220
 4158 00d2 A3B2     		uxth	r3, r4
 4159 00d4 0393     		str	r3, [sp, #12]
 4160 00d6 9B44     		add	fp, fp, r3
 503:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4161              		.loc 1 503 16 view .LVU1221
 4162 00d8 0FFA8BFB 		sxth	fp, fp
 4163              	.LVL421:
 505:lvgl/src/lv_widgets/lv_cpicker.c ****         line_dsc.color = angle_to_mode_color(cpicker, i);
 4164              		.loc 1 505 5 is_stmt 1 view .LVU1222
 505:lvgl/src/lv_widgets/lv_cpicker.c ****         line_dsc.color = angle_to_mode_color(cpicker, i);
 4165              		.loc 1 505 11 is_stmt 0 view .LVU1223
 4166 00dc 0025     		movs	r5, #0
 4167              	.LVL422:
 4168              	.L257:
 505:lvgl/src/lv_widgets/lv_cpicker.c ****         line_dsc.color = angle_to_mode_color(cpicker, i);
 4169              		.loc 1 505 5 discriminator 1 view .LVU1224
 4170 00de B5F5B47F 		cmp	r5, #360
 4171 00e2 39D8     		bhi	.L262
 4172              	.LBB129:
 506:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4173              		.loc 1 506 9 is_stmt 1 discriminator 3 view .LVU1225
 506:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4174              		.loc 1 506 26 is_stmt 0 discriminator 3 view .LVU1226
 4175 00e4 2946     		mov	r1, r5
 4176 00e6 0198     		ldr	r0, [sp, #4]
 4177 00e8 FFF7FEFF 		bl	angle_to_mode_color
 4178              	.LVL423:
 4179 00ec ADF8A400 		strh	r0, [sp, #164]	@ movhi
 508:lvgl/src/lv_widgets/lv_cpicker.c ****         p[0].x = cx + (r * _lv_trigo_sin(i) >> LV_TRIGO_SHIFT);
 4180              		.loc 1 508 9 is_stmt 1 discriminator 3 view .LVU1227
 509:lvgl/src/lv_widgets/lv_cpicker.c ****         p[0].y = cy + (r * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 4181              		.loc 1 509 9 discriminator 3 view .LVU1228
 509:lvgl/src/lv_widgets/lv_cpicker.c ****         p[0].y = cy + (r * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 4182              		.loc 1 509 28 is_stmt 0 discriminator 3 view .LVU1229
 4183 00f0 0FFA85F8 		sxth	r8, r5
 4184 00f4 4046     		mov	r0, r8
 4185 00f6 FFF7FEFF 		bl	_lv_trigo_sin
 4186              	.LVL424:
 509:lvgl/src/lv_widgets/lv_cpicker.c ****         p[0].y = cy + (r * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 4187              		.loc 1 509 26 discriminator 3 view .LVU1230
 4188 00fa 00FB07F0 		mul	r0, r0, r7
 509:lvgl/src/lv_widgets/lv_cpicker.c ****         p[0].y = cy + (r * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 4189              		.loc 1 509 21 discriminator 3 view .LVU1231
 4190 00fe 09EBE030 		add	r0, r9, r0, asr #15
 509:lvgl/src/lv_widgets/lv_cpicker.c ****         p[0].y = cy + (r * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 4191              		.loc 1 509 16 discriminator 3 view .LVU1232
 4192 0102 ADF81C00 		strh	r0, [sp, #28]	@ movhi
 510:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].x = cx + ((r - cir_w_extra) * _lv_trigo_sin(i) >> LV_TRIGO_SHIFT);
 4193              		.loc 1 510 9 is_stmt 1 discriminator 3 view .LVU1233
 510:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].x = cx + ((r - cir_w_extra) * _lv_trigo_sin(i) >> LV_TRIGO_SHIFT);
 4194              		.loc 1 510 44 is_stmt 0 discriminator 3 view .LVU1234
 4195 0106 05F15A06 		add	r6, r5, #90
 510:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].x = cx + ((r - cir_w_extra) * _lv_trigo_sin(i) >> LV_TRIGO_SHIFT);
 4196              		.loc 1 510 28 discriminator 3 view .LVU1235
 4197 010a 36B2     		sxth	r6, r6
 4198 010c 3046     		mov	r0, r6
ARM GAS  D:\Temp\ccfvNLhk.s 			page 129


 4199 010e FFF7FEFF 		bl	_lv_trigo_sin
 4200              	.LVL425:
 510:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].x = cx + ((r - cir_w_extra) * _lv_trigo_sin(i) >> LV_TRIGO_SHIFT);
 4201              		.loc 1 510 26 discriminator 3 view .LVU1236
 4202 0112 00FB07F0 		mul	r0, r0, r7
 510:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].x = cx + ((r - cir_w_extra) * _lv_trigo_sin(i) >> LV_TRIGO_SHIFT);
 4203              		.loc 1 510 21 discriminator 3 view .LVU1237
 4204 0116 0AEBE030 		add	r0, r10, r0, asr #15
 510:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].x = cx + ((r - cir_w_extra) * _lv_trigo_sin(i) >> LV_TRIGO_SHIFT);
 4205              		.loc 1 510 16 discriminator 3 view .LVU1238
 4206 011a ADF81E00 		strh	r0, [sp, #30]	@ movhi
 511:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].y = cy + ((r - cir_w_extra) * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 4207              		.loc 1 511 9 is_stmt 1 discriminator 3 view .LVU1239
 511:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].y = cy + ((r - cir_w_extra) * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 4208              		.loc 1 511 27 is_stmt 0 discriminator 3 view .LVU1240
 4209 011e A7EB0B04 		sub	r4, r7, fp
 511:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].y = cy + ((r - cir_w_extra) * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 4210              		.loc 1 511 44 discriminator 3 view .LVU1241
 4211 0122 4046     		mov	r0, r8
 4212 0124 FFF7FEFF 		bl	_lv_trigo_sin
 4213              	.LVL426:
 511:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].y = cy + ((r - cir_w_extra) * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 4214              		.loc 1 511 42 discriminator 3 view .LVU1242
 4215 0128 00FB04F0 		mul	r0, r0, r4
 511:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].y = cy + ((r - cir_w_extra) * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 4216              		.loc 1 511 21 discriminator 3 view .LVU1243
 4217 012c 09EBE030 		add	r0, r9, r0, asr #15
 511:lvgl/src/lv_widgets/lv_cpicker.c ****         p[1].y = cy + ((r - cir_w_extra) * _lv_trigo_sin(i + 90) >> LV_TRIGO_SHIFT);
 4218              		.loc 1 511 16 discriminator 3 view .LVU1244
 4219 0130 ADF82000 		strh	r0, [sp, #32]	@ movhi
 512:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4220              		.loc 1 512 9 is_stmt 1 discriminator 3 view .LVU1245
 512:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4221              		.loc 1 512 44 is_stmt 0 discriminator 3 view .LVU1246
 4222 0134 3046     		mov	r0, r6
 4223 0136 FFF7FEFF 		bl	_lv_trigo_sin
 4224              	.LVL427:
 512:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4225              		.loc 1 512 42 discriminator 3 view .LVU1247
 4226 013a 00FB04F4 		mul	r4, r0, r4
 512:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4227              		.loc 1 512 21 discriminator 3 view .LVU1248
 4228 013e 0AEBE434 		add	r4, r10, r4, asr #15
 512:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4229              		.loc 1 512 16 discriminator 3 view .LVU1249
 4230 0142 ADF82240 		strh	r4, [sp, #34]	@ movhi
 514:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 4231              		.loc 1 514 9 is_stmt 1 discriminator 3 view .LVU1250
 4232 0146 29AB     		add	r3, sp, #164
 4233 0148 029A     		ldr	r2, [sp, #8]
 4234 014a 08A9     		add	r1, sp, #32
 4235 014c 07A8     		add	r0, sp, #28
 4236 014e FFF7FEFF 		bl	lv_draw_line
 4237              	.LVL428:
 4238              	.LBE129:
 505:lvgl/src/lv_widgets/lv_cpicker.c ****         line_dsc.color = angle_to_mode_color(cpicker, i);
 4239              		.loc 1 505 28 is_stmt 0 discriminator 3 view .LVU1251
ARM GAS  D:\Temp\ccfvNLhk.s 			page 130


 4240 0152 0335     		adds	r5, r5, #3
 4241              	.LVL429:
 505:lvgl/src/lv_widgets/lv_cpicker.c ****         line_dsc.color = angle_to_mode_color(cpicker, i);
 4242              		.loc 1 505 28 discriminator 3 view .LVU1252
 4243 0154 ADB2     		uxth	r5, r5
 4244              	.LVL430:
 505:lvgl/src/lv_widgets/lv_cpicker.c ****         line_dsc.color = angle_to_mode_color(cpicker, i);
 4245              		.loc 1 505 28 discriminator 3 view .LVU1253
 4246 0156 C2E7     		b	.L257
 4247              	.L262:
 517:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4248              		.loc 1 517 5 is_stmt 1 view .LVU1254
 4249 0158 0498     		ldr	r0, [sp, #16]
 4250 015a FFF7FEFF 		bl	lv_draw_mask_remove_id
 4251              	.LVL431:
 520:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect_dsc_init(&bg_dsc);
 4252              		.loc 1 520 5 view .LVU1255
 521:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_init_draw_rect_dsc(cpicker, LV_CPICKER_PART_MAIN, &bg_dsc);
 4253              		.loc 1 521 5 view .LVU1256
 4254 015e 0BA8     		add	r0, sp, #44
 4255 0160 FFF7FEFF 		bl	lv_draw_rect_dsc_init
 4256              	.LVL432:
 522:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.radius = LV_RADIUS_CIRCLE;
 4257              		.loc 1 522 5 view .LVU1257
 4258 0164 0BAA     		add	r2, sp, #44
 4259 0166 0021     		movs	r1, #0
 4260 0168 0198     		ldr	r0, [sp, #4]
 4261 016a FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 4262              	.LVL433:
 523:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4263              		.loc 1 523 5 view .LVU1258
 523:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4264              		.loc 1 523 19 is_stmt 0 view .LVU1259
 4265 016e 47F6FF73 		movw	r3, #32767
 4266 0172 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 525:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_area_copy(&area_mid, &cpicker->coords);
 4267              		.loc 1 525 5 is_stmt 1 view .LVU1260
 526:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.x1 += cir_w;
 4268              		.loc 1 526 5 view .LVU1261
 4269              	.LVL434:
 4270              	.LBB130:
 4271              	.LBI130:
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 4272              		.loc 3 97 20 view .LVU1262
 4273              	.LBE130:
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** }
 4274              		.loc 3 99 5 view .LVU1263
 4275              	.LBB135:
 4276              	.LBB131:
 4277              	.LBI131:
 213:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 4278              		.loc 5 213 44 view .LVU1264
 4279              	.LBB132:
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 4280              		.loc 5 215 5 view .LVU1265
 216:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 4281              		.loc 5 216 5 view .LVU1266
ARM GAS  D:\Temp\ccfvNLhk.s 			page 131


 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 4282              		.loc 5 218 5 view .LVU1267
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 4283              		.loc 5 215 15 is_stmt 0 view .LVU1268
 4284 0176 09AA     		add	r2, sp, #36
 4285              	.LVL435:
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 4286              		.loc 5 215 15 view .LVU1269
 4287              	.LBE132:
 4288              	.LBE131:
 4289              	.LBE135:
 523:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4290              		.loc 1 523 19 view .LVU1270
 4291 0178 0823     		movs	r3, #8
 4292 017a 0599     		ldr	r1, [sp, #20]
 4293 017c 04E0     		b	.L259
 4294              	.LVL436:
 4295              	.L260:
 4296              	.LBB136:
 4297              	.LBB134:
 4298              	.LBB133:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 4299              		.loc 5 219 9 is_stmt 1 view .LVU1271
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 4300              		.loc 5 219 15 is_stmt 0 view .LVU1272
 4301 017e 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 4302              	.LVL437:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 4303              		.loc 5 219 13 view .LVU1273
 4304 0182 02F8010B 		strb	r0, [r2], #1
 4305              	.LVL438:
 220:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         s8++;
 4306              		.loc 5 220 9 is_stmt 1 view .LVU1274
 221:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         len--;
 4307              		.loc 5 221 9 view .LVU1275
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 4308              		.loc 5 222 9 view .LVU1276
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 4309              		.loc 5 222 12 is_stmt 0 view .LVU1277
 4310 0186 013B     		subs	r3, r3, #1
 4311              	.LVL439:
 4312              	.L259:
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 4313              		.loc 5 218 10 view .LVU1278
 4314 0188 002B     		cmp	r3, #0
 4315 018a F8D1     		bne	.L260
 4316              		.loc 5 225 5 is_stmt 1 view .LVU1279
 4317              	.LVL440:
 4318              		.loc 5 225 5 is_stmt 0 view .LVU1280
 4319              	.LBE133:
 4320              	.LBE134:
 4321              	.LBE136:
 527:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y1 += cir_w;
 4322              		.loc 1 527 5 is_stmt 1 view .LVU1281
 527:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y1 += cir_w;
 4323              		.loc 1 527 17 is_stmt 0 view .LVU1282
 4324 018c BDF82430 		ldrh	r3, [sp, #36]
ARM GAS  D:\Temp\ccfvNLhk.s 			page 132


 4325 0190 039A     		ldr	r2, [sp, #12]
 4326 0192 1344     		add	r3, r3, r2
 4327 0194 ADF82430 		strh	r3, [sp, #36]	@ movhi
 528:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.x2 -= cir_w;
 4328              		.loc 1 528 5 is_stmt 1 view .LVU1283
 528:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.x2 -= cir_w;
 4329              		.loc 1 528 17 is_stmt 0 view .LVU1284
 4330 0198 BDF82630 		ldrh	r3, [sp, #38]
 4331 019c 1344     		add	r3, r3, r2
 4332 019e ADF82630 		strh	r3, [sp, #38]	@ movhi
 529:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y2 -= cir_w;
 4333              		.loc 1 529 5 is_stmt 1 view .LVU1285
 529:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y2 -= cir_w;
 4334              		.loc 1 529 17 is_stmt 0 view .LVU1286
 4335 01a2 BDF82830 		ldrh	r3, [sp, #40]
 4336 01a6 9B1A     		subs	r3, r3, r2
 4337 01a8 ADF82830 		strh	r3, [sp, #40]	@ movhi
 530:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4338              		.loc 1 530 5 is_stmt 1 view .LVU1287
 530:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4339              		.loc 1 530 17 is_stmt 0 view .LVU1288
 4340 01ac BDF82A30 		ldrh	r3, [sp, #42]
 4341 01b0 9B1A     		subs	r3, r3, r2
 4342 01b2 ADF82A30 		strh	r3, [sp, #42]	@ movhi
 532:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4343              		.loc 1 532 5 is_stmt 1 view .LVU1289
 4344 01b6 0BAA     		add	r2, sp, #44
 4345 01b8 029E     		ldr	r6, [sp, #8]
 4346 01ba 3146     		mov	r1, r6
 4347 01bc 09A8     		add	r0, sp, #36
 4348 01be FFF7FEFF 		bl	lv_draw_rect
 4349              	.LVL441:
 534:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_color_t color = lv_cpicker_get_color(cpicker);
 4350              		.loc 1 534 5 view .LVU1290
 4351              	.LBB137:
 4352              	.LBI137:
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 4353              		.loc 2 114 1 view .LVU1291
 4354              	.LBB138:
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 4355              		.loc 2 114 1 view .LVU1292
 4356 01c2 1422     		movs	r2, #20
 4357 01c4 0021     		movs	r1, #0
 4358 01c6 019D     		ldr	r5, [sp, #4]
 4359              	.LVL442:
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 4360              		.loc 2 114 1 is_stmt 0 view .LVU1293
 4361 01c8 2846     		mov	r0, r5
 4362 01ca FFF7FEFF 		bl	_lv_obj_get_style_int
 4363              	.LVL443:
 4364 01ce 0446     		mov	r4, r0
 4365              	.LVL444:
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 4366              		.loc 2 114 1 view .LVU1294
 4367              	.LBE138:
 4368              	.LBE137:
 535:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.bg_color = color;
ARM GAS  D:\Temp\ccfvNLhk.s 			page 133


 4369              		.loc 1 535 5 is_stmt 1 view .LVU1295
 535:lvgl/src/lv_widgets/lv_cpicker.c ****     bg_dsc.bg_color = color;
 4370              		.loc 1 535 24 is_stmt 0 view .LVU1296
 4371 01d0 2846     		mov	r0, r5
 4372 01d2 FFF7FEFF 		bl	lv_cpicker_get_color
 4373              	.LVL445:
 536:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.x1 += inner;
 4374              		.loc 1 536 5 is_stmt 1 view .LVU1297
 536:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.x1 += inner;
 4375              		.loc 1 536 21 is_stmt 0 view .LVU1298
 4376 01d6 ADF82E00 		strh	r0, [sp, #46]	@ movhi
 537:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y1 += inner;
 4377              		.loc 1 537 5 is_stmt 1 view .LVU1299
 537:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y1 += inner;
 4378              		.loc 1 537 17 is_stmt 0 view .LVU1300
 4379 01da A3B2     		uxth	r3, r4
 4380 01dc BDF82420 		ldrh	r2, [sp, #36]
 4381 01e0 1A44     		add	r2, r2, r3
 4382 01e2 ADF82420 		strh	r2, [sp, #36]	@ movhi
 538:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.x2 -= inner;
 4383              		.loc 1 538 5 is_stmt 1 view .LVU1301
 538:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.x2 -= inner;
 4384              		.loc 1 538 17 is_stmt 0 view .LVU1302
 4385 01e6 BDF82620 		ldrh	r2, [sp, #38]
 4386 01ea 1A44     		add	r2, r2, r3
 4387 01ec ADF82620 		strh	r2, [sp, #38]	@ movhi
 539:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y2 -= inner;
 4388              		.loc 1 539 5 is_stmt 1 view .LVU1303
 539:lvgl/src/lv_widgets/lv_cpicker.c ****     area_mid.y2 -= inner;
 4389              		.loc 1 539 17 is_stmt 0 view .LVU1304
 4390 01f0 BDF82820 		ldrh	r2, [sp, #40]
 4391 01f4 D21A     		subs	r2, r2, r3
 4392 01f6 ADF82820 		strh	r2, [sp, #40]	@ movhi
 540:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4393              		.loc 1 540 5 is_stmt 1 view .LVU1305
 540:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4394              		.loc 1 540 17 is_stmt 0 view .LVU1306
 4395 01fa BDF82A20 		ldrh	r2, [sp, #42]
 4396 01fe D31A     		subs	r3, r2, r3
 4397 0200 ADF82A30 		strh	r3, [sp, #42]	@ movhi
 542:lvgl/src/lv_widgets/lv_cpicker.c **** }
 4398              		.loc 1 542 5 is_stmt 1 view .LVU1307
 4399 0204 0BAA     		add	r2, sp, #44
 4400 0206 3146     		mov	r1, r6
 4401 0208 09A8     		add	r0, sp, #36
 4402 020a FFF7FEFF 		bl	lv_draw_rect
 4403              	.LVL446:
 543:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4404              		.loc 1 543 1 is_stmt 0 view .LVU1308
 4405 020e 2DB0     		add	sp, sp, #180
 4406              	.LCFI53:
 4407              		.cfi_def_cfa_offset 36
 4408              		@ sp needed
 4409 0210 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4410              	.LVL447:
 4411              	.L264:
 543:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 134


 4412              		.loc 1 543 1 view .LVU1309
 4413              		.align	2
 4414              	.L263:
 4415 0214 F1197605 		.word	91625969
 4416              		.cfi_endproc
 4417              	.LFE477:
 4419              		.section	.text.draw_knob,"ax",%progbits
 4420              		.align	1
 4421              		.syntax unified
 4422              		.thumb
 4423              		.thumb_func
 4424              		.fpu fpv4-sp-d16
 4426              	draw_knob:
 4427              	.LVL448:
 4428              	.LFB479:
 608:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 4429              		.loc 1 608 1 is_stmt 1 view -0
 4430              		.cfi_startproc
 4431              		@ args = 0, pretend = 0, frame = 96
 4432              		@ frame_needed = 0, uses_anonymous_args = 0
 608:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 4433              		.loc 1 608 1 is_stmt 0 view .LVU1311
 4434 0000 70B5     		push	{r4, r5, r6, lr}
 4435              	.LCFI54:
 4436              		.cfi_def_cfa_offset 16
 4437              		.cfi_offset 4, -16
 4438              		.cfi_offset 5, -12
 4439              		.cfi_offset 6, -8
 4440              		.cfi_offset 14, -4
 4441 0002 98B0     		sub	sp, sp, #96
 4442              	.LCFI55:
 4443              		.cfi_def_cfa_offset 112
 4444 0004 0446     		mov	r4, r0
 4445 0006 0D46     		mov	r5, r1
 609:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4446              		.loc 1 609 5 is_stmt 1 view .LVU1312
 609:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4447              		.loc 1 609 30 is_stmt 0 view .LVU1313
 4448 0008 FFF7FEFF 		bl	lv_obj_get_ext_attr
 4449              	.LVL449:
 609:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4450              		.loc 1 609 30 view .LVU1314
 4451 000c 0646     		mov	r6, r0
 4452              	.LVL450:
 611:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_draw_rect_dsc_init(&cir_dsc);
 4453              		.loc 1 611 5 is_stmt 1 view .LVU1315
 612:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_init_draw_rect_dsc(cpicker, LV_CPICKER_PART_KNOB, &cir_dsc);
 4454              		.loc 1 612 5 view .LVU1316
 4455 000e 03A8     		add	r0, sp, #12
 4456              	.LVL451:
 612:lvgl/src/lv_widgets/lv_cpicker.c ****     lv_obj_init_draw_rect_dsc(cpicker, LV_CPICKER_PART_KNOB, &cir_dsc);
 4457              		.loc 1 612 5 is_stmt 0 view .LVU1317
 4458 0010 FFF7FEFF 		bl	lv_draw_rect_dsc_init
 4459              	.LVL452:
 613:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4460              		.loc 1 613 5 is_stmt 1 view .LVU1318
 4461 0014 03AA     		add	r2, sp, #12
ARM GAS  D:\Temp\ccfvNLhk.s 			page 135


 4462 0016 0121     		movs	r1, #1
 4463 0018 2046     		mov	r0, r4
 4464 001a FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 4465              	.LVL453:
 615:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4466              		.loc 1 615 5 view .LVU1319
 615:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4467              		.loc 1 615 20 is_stmt 0 view .LVU1320
 4468 001e 47F6FF73 		movw	r3, #32767
 4469 0022 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 617:lvgl/src/lv_widgets/lv_cpicker.c ****         cir_dsc.bg_color = lv_cpicker_get_color(cpicker);
 4470              		.loc 1 617 5 is_stmt 1 view .LVU1321
 617:lvgl/src/lv_widgets/lv_cpicker.c ****         cir_dsc.bg_color = lv_cpicker_get_color(cpicker);
 4471              		.loc 1 617 8 is_stmt 0 view .LVU1322
 4472 0026 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 617:lvgl/src/lv_widgets/lv_cpicker.c ****         cir_dsc.bg_color = lv_cpicker_get_color(cpicker);
 4473              		.loc 1 617 7 view .LVU1323
 4474 0028 13F0010F 		tst	r3, #1
 4475 002c 0AD1     		bne	.L268
 4476              	.L266:
 621:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4477              		.loc 1 621 5 is_stmt 1 view .LVU1324
 621:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4478              		.loc 1 621 27 is_stmt 0 view .LVU1325
 4479 002e 2146     		mov	r1, r4
 4480 0030 01A8     		add	r0, sp, #4
 4481 0032 FFF7FEFF 		bl	get_knob_area
 4482              	.LVL454:
 623:lvgl/src/lv_widgets/lv_cpicker.c **** }
 4483              		.loc 1 623 5 is_stmt 1 view .LVU1326
 4484 0036 03AA     		add	r2, sp, #12
 4485 0038 2946     		mov	r1, r5
 4486 003a 01A8     		add	r0, sp, #4
 4487 003c FFF7FEFF 		bl	lv_draw_rect
 4488              	.LVL455:
 624:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4489              		.loc 1 624 1 is_stmt 0 view .LVU1327
 4490 0040 18B0     		add	sp, sp, #96
 4491              	.LCFI56:
 4492              		.cfi_remember_state
 4493              		.cfi_def_cfa_offset 16
 4494              		@ sp needed
 4495 0042 70BD     		pop	{r4, r5, r6, pc}
 4496              	.LVL456:
 4497              	.L268:
 4498              	.LCFI57:
 4499              		.cfi_restore_state
 618:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 4500              		.loc 1 618 9 is_stmt 1 view .LVU1328
 618:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 4501              		.loc 1 618 28 is_stmt 0 view .LVU1329
 4502 0044 2046     		mov	r0, r4
 4503 0046 FFF7FEFF 		bl	lv_cpicker_get_color
 4504              	.LVL457:
 4505 004a ADF80E00 		strh	r0, [sp, #14]	@ movhi
 4506 004e EEE7     		b	.L266
 4507              		.cfi_endproc
ARM GAS  D:\Temp\ccfvNLhk.s 			page 136


 4508              	.LFE479:
 4510              		.section	.text.lv_cpicker_design,"ax",%progbits
 4511              		.align	1
 4512              		.syntax unified
 4513              		.thumb
 4514              		.thumb_func
 4515              		.fpu fpv4-sp-d16
 4517              	lv_cpicker_design:
 4518              	.LVL458:
 4519              	.LFB476:
 448:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Return false if the object is not covers the mask_p area*/
 4520              		.loc 1 448 1 is_stmt 1 view -0
 4521              		.cfi_startproc
 4522              		@ args = 0, pretend = 0, frame = 0
 4523              		@ frame_needed = 0, uses_anonymous_args = 0
 450:lvgl/src/lv_widgets/lv_cpicker.c ****         return LV_DESIGN_RES_NOT_COVER;
 4524              		.loc 1 450 5 view .LVU1331
 450:lvgl/src/lv_widgets/lv_cpicker.c ****         return LV_DESIGN_RES_NOT_COVER;
 4525              		.loc 1 450 7 is_stmt 0 view .LVU1332
 4526 0000 022A     		cmp	r2, #2
 4527 0002 1BD0     		beq	.L273
 454:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 4528              		.loc 1 454 10 is_stmt 1 view .LVU1333
 454:lvgl/src/lv_widgets/lv_cpicker.c ****         lv_cpicker_ext_t * ext = lv_obj_get_ext_attr(cpicker);
 4529              		.loc 1 454 12 is_stmt 0 view .LVU1334
 4530 0004 0AB1     		cbz	r2, .L279
 470:lvgl/src/lv_widgets/lv_cpicker.c **** }
 4531              		.loc 1 470 12 view .LVU1335
 4532 0006 0020     		movs	r0, #0
 4533              	.LVL459:
 471:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4534              		.loc 1 471 1 view .LVU1336
 4535 0008 7047     		bx	lr
 4536              	.LVL460:
 4537              	.L279:
 448:lvgl/src/lv_widgets/lv_cpicker.c ****     /*Return false if the object is not covers the mask_p area*/
 4538              		.loc 1 448 1 view .LVU1337
 4539 000a 38B5     		push	{r3, r4, r5, lr}
 4540              	.LCFI58:
 4541              		.cfi_def_cfa_offset 16
 4542              		.cfi_offset 3, -16
 4543              		.cfi_offset 4, -12
 4544              		.cfi_offset 5, -8
 4545              		.cfi_offset 14, -4
 4546 000c 0D46     		mov	r5, r1
 4547 000e 0446     		mov	r4, r0
 4548              	.LBB139:
 455:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4549              		.loc 1 455 9 is_stmt 1 view .LVU1338
 455:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4550              		.loc 1 455 34 is_stmt 0 view .LVU1339
 4551 0010 FFF7FEFF 		bl	lv_obj_get_ext_attr
 4552              	.LVL461:
 457:lvgl/src/lv_widgets/lv_cpicker.c ****             draw_disc_grad(cpicker, clip_area);
 4553              		.loc 1 457 9 is_stmt 1 view .LVU1340
 457:lvgl/src/lv_widgets/lv_cpicker.c ****             draw_disc_grad(cpicker, clip_area);
 4554              		.loc 1 457 22 is_stmt 0 view .LVU1341
ARM GAS  D:\Temp\ccfvNLhk.s 			page 137


 4555 0014 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 457:lvgl/src/lv_widgets/lv_cpicker.c ****             draw_disc_grad(cpicker, clip_area);
 4556              		.loc 1 457 11 view .LVU1342
 4557 0018 13F0080F 		tst	r3, #8
 4558 001c 09D0     		beq	.L271
 458:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 4559              		.loc 1 458 13 is_stmt 1 view .LVU1343
 4560 001e 2946     		mov	r1, r5
 4561 0020 2046     		mov	r0, r4
 4562              	.LVL462:
 458:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 4563              		.loc 1 458 13 is_stmt 0 view .LVU1344
 4564 0022 FFF7FEFF 		bl	draw_disc_grad
 4565              	.LVL463:
 4566              	.L272:
 464:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 4567              		.loc 1 464 9 is_stmt 1 view .LVU1345
 4568 0026 2946     		mov	r1, r5
 4569 0028 2046     		mov	r0, r4
 4570 002a FFF7FEFF 		bl	draw_knob
 4571              	.LVL464:
 4572              	.LBE139:
 470:lvgl/src/lv_widgets/lv_cpicker.c **** }
 4573              		.loc 1 470 12 is_stmt 0 view .LVU1346
 4574 002e 0020     		movs	r0, #0
 471:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4575              		.loc 1 471 1 view .LVU1347
 4576 0030 38BD     		pop	{r3, r4, r5, pc}
 4577              	.LVL465:
 4578              	.L271:
 4579              	.LBB140:
 460:lvgl/src/lv_widgets/lv_cpicker.c ****             draw_rect_grad(cpicker, clip_area);
 4580              		.loc 1 460 14 is_stmt 1 view .LVU1348
 461:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 4581              		.loc 1 461 13 view .LVU1349
 4582 0032 2946     		mov	r1, r5
 4583 0034 2046     		mov	r0, r4
 4584              	.LVL466:
 461:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 4585              		.loc 1 461 13 is_stmt 0 view .LVU1350
 4586 0036 FFF7FEFF 		bl	draw_rect_grad
 4587              	.LVL467:
 4588 003a F4E7     		b	.L272
 4589              	.LVL468:
 4590              	.L273:
 4591              	.LCFI59:
 4592              		.cfi_def_cfa_offset 0
 4593              		.cfi_restore 3
 4594              		.cfi_restore 4
 4595              		.cfi_restore 5
 4596              		.cfi_restore 14
 461:lvgl/src/lv_widgets/lv_cpicker.c ****         }
 4597              		.loc 1 461 13 view .LVU1351
 4598              	.LBE140:
 451:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 4599              		.loc 1 451 16 view .LVU1352
 4600 003c 0220     		movs	r0, #2
ARM GAS  D:\Temp\ccfvNLhk.s 			page 138


 4601              	.LVL469:
 451:lvgl/src/lv_widgets/lv_cpicker.c ****     }
 4602              		.loc 1 451 16 view .LVU1353
 4603 003e 7047     		bx	lr
 4604              		.cfi_endproc
 4605              	.LFE476:
 4607              		.section	.text.lv_cpicker_get_knob_colored,"ax",%progbits
 4608              		.align	1
 4609              		.global	lv_cpicker_get_knob_colored
 4610              		.syntax unified
 4611              		.thumb
 4612              		.thumb_func
 4613              		.fpu fpv4-sp-d16
 4615              	lv_cpicker_get_knob_colored:
 4616              	.LVL470:
 4617              	.LFB475:
 421:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 4618              		.loc 1 421 1 is_stmt 1 view -0
 4619              		.cfi_startproc
 4620              		@ args = 0, pretend = 0, frame = 0
 4621              		@ frame_needed = 0, uses_anonymous_args = 0
 421:lvgl/src/lv_widgets/lv_cpicker.c ****     LV_ASSERT_OBJ(cpicker, LV_OBJX_NAME);
 4622              		.loc 1 421 1 is_stmt 0 view .LVU1355
 4623 0000 10B5     		push	{r4, lr}
 4624              	.LCFI60:
 4625              		.cfi_def_cfa_offset 8
 4626              		.cfi_offset 4, -8
 4627              		.cfi_offset 14, -4
 4628 0002 0446     		mov	r4, r0
 422:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4629              		.loc 1 422 5 is_stmt 1 view .LVU1356
 422:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4630              		.loc 1 422 5 view .LVU1357
 4631 0004 FFF7FEFF 		bl	lv_debug_check_null
 4632              	.LVL471:
 422:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4633              		.loc 1 422 5 is_stmt 0 view .LVU1358
 4634 0008 28B9     		cbnz	r0, .L281
 422:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4635              		.loc 1 422 5 is_stmt 1 discriminator 1 view .LVU1359
 422:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4636              		.loc 1 422 5 discriminator 1 view .LVU1360
 4637 000a 2246     		mov	r2, r4
 4638 000c 0023     		movs	r3, #0
 4639 000e 0548     		ldr	r0, .L284
 4640 0010 FFF7FEFF 		bl	lv_debug_log_error
 4641              	.LVL472:
 4642              	.L282:
 422:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4643              		.loc 1 422 5 discriminator 1 view .LVU1361
 422:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4644              		.loc 1 422 5 discriminator 1 view .LVU1362
 4645 0014 FEE7     		b	.L282
 4646              	.L281:
 422:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4647              		.loc 1 422 41 discriminator 2 view .LVU1363
 424:lvgl/src/lv_widgets/lv_cpicker.c **** 
ARM GAS  D:\Temp\ccfvNLhk.s 			page 139


 4648              		.loc 1 424 5 discriminator 2 view .LVU1364
 424:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4649              		.loc 1 424 30 is_stmt 0 discriminator 2 view .LVU1365
 4650 0016 2046     		mov	r0, r4
 4651 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 4652              	.LVL473:
 426:lvgl/src/lv_widgets/lv_cpicker.c **** }
 4653              		.loc 1 426 5 is_stmt 1 discriminator 2 view .LVU1366
 426:lvgl/src/lv_widgets/lv_cpicker.c **** }
 4654              		.loc 1 426 30 is_stmt 0 discriminator 2 view .LVU1367
 4655 001c 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 4656              	.LVL474:
 427:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4657              		.loc 1 427 1 discriminator 2 view .LVU1368
 4658 001e 00F00100 		and	r0, r0, #1
 4659 0022 10BD     		pop	{r4, pc}
 4660              	.LVL475:
 4661              	.L285:
 427:lvgl/src/lv_widgets/lv_cpicker.c **** 
 4662              		.loc 1 427 1 discriminator 2 view .LVU1369
 4663              		.align	2
 4664              	.L284:
 4665 0024 00000000 		.word	.LC1
 4666              		.cfi_endproc
 4667              	.LFE475:
 4669              		.section	.rodata
 4670              		.align	2
 4671              		.set	.LANCHOR2,. + 0
 4672              	.LC0:
 4673 0000 0000     		.short	0
 4674 0002 64       		.byte	100
 4675 0003 64       		.byte	100
 4676              		.section	.bss.ancestor_design,"aw",%nobits
 4677              		.align	2
 4678              		.set	.LANCHOR1,. + 0
 4681              	ancestor_design:
 4682 0000 00000000 		.space	4
 4683              		.section	.bss.ancestor_signal,"aw",%nobits
 4684              		.align	2
 4685              		.set	.LANCHOR0,. + 0
 4688              	ancestor_signal:
 4689 0000 00000000 		.space	4
 4690              		.section	.rodata.lv_cpicker_create.str1.4,"aMS",%progbits,1
 4691              		.align	2
 4692              	.LC2:
 4693 0000 4F757420 		.ascii	"Out of memory\000"
 4693      6F66206D 
 4693      656D6F72 
 4693      7900
 4694              		.section	.rodata.lv_cpicker_get_style.str1.4,"aMS",%progbits,1
 4695              		.align	2
 4696              	.LC1:
 4697 0000 4E554C4C 		.ascii	"NULL pointer\000"
 4697      20706F69 
 4697      6E746572 
 4697      00
 4698              		.section	.rodata.lv_cpicker_signal.str1.4,"aMS",%progbits,1
ARM GAS  D:\Temp\ccfvNLhk.s 			page 140


 4699              		.align	2
 4700              	.LC3:
 4701 0000 6C765F63 		.ascii	"lv_cpicker\000"
 4701      7069636B 
 4701      657200
 4702              		.text
 4703              	.Letext0:
 4704              		.file 6 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 4705              		.file 7 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 4706              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 4707              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 4708              		.file 10 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 4709              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 4710              		.file 12 "lvgl/lv_conf.h"
 4711              		.file 13 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4712              		.file 14 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4713              		.file 15 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4714              		.file 16 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_types.h"
 4715              		.file 17 "lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h"
 4716              		.file 18 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_math.h"
 4717              		.file 19 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h"
 4718              		.file 20 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_mask.h"
 4719              		.file 21 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_blend.h"
 4720              		.file 22 "lvgl/src/lv_widgets/../lv_core/lv_style.h"
 4721              		.file 23 "lvgl/src/lv_widgets/../lv_core/../lv_hal/../lv_misc/lv_ll.h"
 4722              		.file 24 "lvgl/src/lv_widgets/../lv_core/../lv_hal/../lv_misc/lv_task.h"
 4723              		.file 25 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_disp.h"
 4724              		.file 26 "lvgl/src/lv_widgets/../lv_core/lv_obj.h"
 4725              		.file 27 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_indev.h"
 4726              		.file 28 "lvgl/src/lv_widgets/../lv_core/../lv_core/lv_group.h"
 4727              		.file 29 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_rect.h"
 4728              		.file 30 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_bidi.h"
 4729              		.file 31 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_txt.h"
 4730              		.file 32 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_label.h"
 4731              		.file 33 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_line.h"
 4732              		.file 34 "lvgl/src/lv_widgets/lv_cpicker.h"
 4733              		.file 35 "lvgl/src/lv_widgets/../lv_themes/lv_theme.h"
 4734              		.file 36 "lvgl/src/lv_widgets/../lv_core/lv_indev.h"
 4735              		.file 37 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_tick.h"
 4736              		.file 38 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_debug.h"
ARM GAS  D:\Temp\ccfvNLhk.s 			page 141


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_cpicker.c
  D:\Temp\ccfvNLhk.s:18     .text.lv_cpicker_get_style:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:25     .text.lv_cpicker_get_style:0000000000000000 lv_cpicker_get_style
  D:\Temp\ccfvNLhk.s:100    .text.lv_cpicker_get_style:0000000000000034 $d
  D:\Temp\ccfvNLhk.s:105    .text.get_angle:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:111    .text.get_angle:0000000000000000 get_angle
  D:\Temp\ccfvNLhk.s:186    .text.get_angle:0000000000000044 $d
  D:\Temp\ccfvNLhk.s:191    .text.get_knob_area:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:197    .text.get_knob_area:0000000000000000 get_knob_area
  D:\Temp\ccfvNLhk.s:398    .text.angle_to_mode_color:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:404    .text.angle_to_mode_color:0000000000000000 angle_to_mode_color
  D:\Temp\ccfvNLhk.s:511    .text.angle_to_mode_color:0000000000000098 $d
  D:\Temp\ccfvNLhk.s:517    .text.draw_rect_grad:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:523    .text.draw_rect_grad:0000000000000000 draw_rect_grad
  D:\Temp\ccfvNLhk.s:815    .text.draw_rect_grad:0000000000000178 $d
  D:\Temp\ccfvNLhk.s:820    .text.lv_cpicker_hit:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:826    .text.lv_cpicker_hit:0000000000000000 lv_cpicker_hit
  D:\Temp\ccfvNLhk.s:886    .text.invalidate_knob:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:892    .text.invalidate_knob:0000000000000000 invalidate_knob
  D:\Temp\ccfvNLhk.s:933    .text.refr_knob_pos:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:939    .text.refr_knob_pos:0000000000000000 refr_knob_pos
  D:\Temp\ccfvNLhk.s:1162   .text.refr_knob_pos:00000000000000ec $d
  D:\Temp\ccfvNLhk.s:1169   .text.next_color_mode:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:1175   .text.next_color_mode:0000000000000000 next_color_mode
  D:\Temp\ccfvNLhk.s:1225   .text.next_color_mode:0000000000000038 $d
  D:\Temp\ccfvNLhk.s:1230   .text.lv_cpicker_create:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:1237   .text.lv_cpicker_create:0000000000000000 lv_cpicker_create
  D:\Temp\ccfvNLhk.s:1508   .text.lv_cpicker_create:0000000000000148 $d
  D:\Temp\ccfvNLhk.s:1902   .text.lv_cpicker_signal:0000000000000000 lv_cpicker_signal
  D:\Temp\ccfvNLhk.s:4517   .text.lv_cpicker_design:0000000000000000 lv_cpicker_design
  D:\Temp\ccfvNLhk.s:1518   .text.lv_cpicker_set_type:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:1525   .text.lv_cpicker_set_type:0000000000000000 lv_cpicker_set_type
  D:\Temp\ccfvNLhk.s:1600   .text.lv_cpicker_set_type:000000000000004c $d
  D:\Temp\ccfvNLhk.s:1605   .text.lv_cpicker_set_hsv:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:1612   .text.lv_cpicker_set_hsv:0000000000000000 lv_cpicker_set_hsv
  D:\Temp\ccfvNLhk.s:1743   .text.lv_cpicker_set_hsv:000000000000008c $d
  D:\Temp\ccfvNLhk.s:1749   .text.double_click_reset:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:1755   .text.double_click_reset:0000000000000000 double_click_reset
  D:\Temp\ccfvNLhk.s:1896   .text.lv_cpicker_signal:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:2551   .text.lv_cpicker_signal:00000000000002a4 $d
  D:\Temp\ccfvNLhk.s:2560   .text.lv_cpicker_signal:00000000000002b4 $t
  D:\Temp\ccfvNLhk.s:3016   .text.lv_cpicker_signal:00000000000004e0 $d
  D:\Temp\ccfvNLhk.s:3023   .text.lv_cpicker_set_color:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3030   .text.lv_cpicker_set_color:0000000000000000 lv_cpicker_set_color
  D:\Temp\ccfvNLhk.s:3134   .text.lv_cpicker_set_color:000000000000007c $d
  D:\Temp\ccfvNLhk.s:3139   .text.lv_cpicker_set_color_mode:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3146   .text.lv_cpicker_set_color_mode:0000000000000000 lv_cpicker_set_color_mode
  D:\Temp\ccfvNLhk.s:3209   .text.lv_cpicker_set_color_mode:0000000000000038 $d
  D:\Temp\ccfvNLhk.s:3214   .text.lv_cpicker_set_color_mode_fixed:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3221   .text.lv_cpicker_set_color_mode_fixed:0000000000000000 lv_cpicker_set_color_mode_fixed
  D:\Temp\ccfvNLhk.s:3274   .text.lv_cpicker_set_color_mode_fixed:000000000000002c $d
  D:\Temp\ccfvNLhk.s:3279   .text.lv_cpicker_set_knob_colored:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3286   .text.lv_cpicker_set_knob_colored:0000000000000000 lv_cpicker_set_knob_colored
  D:\Temp\ccfvNLhk.s:3345   .text.lv_cpicker_set_knob_colored:0000000000000030 $d
  D:\Temp\ccfvNLhk.s:3350   .text.lv_cpicker_get_color_mode:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3357   .text.lv_cpicker_get_color_mode:0000000000000000 lv_cpicker_get_color_mode
ARM GAS  D:\Temp\ccfvNLhk.s 			page 142


  D:\Temp\ccfvNLhk.s:3407   .text.lv_cpicker_get_color_mode:0000000000000028 $d
  D:\Temp\ccfvNLhk.s:3412   .text.lv_cpicker_get_color_mode_fixed:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3419   .text.lv_cpicker_get_color_mode_fixed:0000000000000000 lv_cpicker_get_color_mode_fixed
  D:\Temp\ccfvNLhk.s:3469   .text.lv_cpicker_get_color_mode_fixed:0000000000000028 $d
  D:\Temp\ccfvNLhk.s:3474   .text.lv_cpicker_get_hue:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3481   .text.lv_cpicker_get_hue:0000000000000000 lv_cpicker_get_hue
  D:\Temp\ccfvNLhk.s:3530   .text.lv_cpicker_get_hue:0000000000000020 $d
  D:\Temp\ccfvNLhk.s:3535   .text.lv_cpicker_get_saturation:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3542   .text.lv_cpicker_get_saturation:0000000000000000 lv_cpicker_get_saturation
  D:\Temp\ccfvNLhk.s:3591   .text.lv_cpicker_get_saturation:0000000000000020 $d
  D:\Temp\ccfvNLhk.s:3596   .text.lv_cpicker_get_value:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3603   .text.lv_cpicker_get_value:0000000000000000 lv_cpicker_get_value
  D:\Temp\ccfvNLhk.s:3652   .text.lv_cpicker_get_value:0000000000000020 $d
  D:\Temp\ccfvNLhk.s:3657   .text.lv_cpicker_get_hsv:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3664   .text.lv_cpicker_get_hsv:0000000000000000 lv_cpicker_get_hsv
  D:\Temp\ccfvNLhk.s:3726   .text.lv_cpicker_get_hsv:0000000000000034 $d
  D:\Temp\ccfvNLhk.s:3731   .text.lv_cpicker_set_hue:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3738   .text.lv_cpicker_set_hue:0000000000000000 lv_cpicker_set_hue
  D:\Temp\ccfvNLhk.s:3783   .text.lv_cpicker_set_saturation:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3790   .text.lv_cpicker_set_saturation:0000000000000000 lv_cpicker_set_saturation
  D:\Temp\ccfvNLhk.s:3835   .text.lv_cpicker_set_value:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3842   .text.lv_cpicker_set_value:0000000000000000 lv_cpicker_set_value
  D:\Temp\ccfvNLhk.s:3887   .text.lv_cpicker_get_color:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3894   .text.lv_cpicker_get_color:0000000000000000 lv_cpicker_get_color
  D:\Temp\ccfvNLhk.s:3948   .text.lv_cpicker_get_color:0000000000000028 $d
  D:\Temp\ccfvNLhk.s:3953   .text.draw_disc_grad:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:3959   .text.draw_disc_grad:0000000000000000 draw_disc_grad
  D:\Temp\ccfvNLhk.s:4415   .text.draw_disc_grad:0000000000000214 $d
  D:\Temp\ccfvNLhk.s:4420   .text.draw_knob:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:4426   .text.draw_knob:0000000000000000 draw_knob
  D:\Temp\ccfvNLhk.s:4511   .text.lv_cpicker_design:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:4608   .text.lv_cpicker_get_knob_colored:0000000000000000 $t
  D:\Temp\ccfvNLhk.s:4615   .text.lv_cpicker_get_knob_colored:0000000000000000 lv_cpicker_get_knob_colored
  D:\Temp\ccfvNLhk.s:4665   .text.lv_cpicker_get_knob_colored:0000000000000024 $d
  D:\Temp\ccfvNLhk.s:4670   .rodata:0000000000000000 $d
  D:\Temp\ccfvNLhk.s:4677   .bss.ancestor_design:0000000000000000 $d
  D:\Temp\ccfvNLhk.s:4681   .bss.ancestor_design:0000000000000000 ancestor_design
  D:\Temp\ccfvNLhk.s:4684   .bss.ancestor_signal:0000000000000000 $d
  D:\Temp\ccfvNLhk.s:4688   .bss.ancestor_signal:0000000000000000 ancestor_signal
  D:\Temp\ccfvNLhk.s:4691   .rodata.lv_cpicker_create.str1.4:0000000000000000 $d
  D:\Temp\ccfvNLhk.s:4695   .rodata.lv_cpicker_get_style.str1.4:0000000000000000 $d
  D:\Temp\ccfvNLhk.s:4699   .rodata.lv_cpicker_signal.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
lv_debug_check_null
lv_debug_log_error
lv_obj_get_ext_attr
_lv_obj_get_style_int
lv_obj_get_height
lv_color_hsv_to_rgb
lv_draw_rect_dsc_init
lv_obj_init_draw_rect_dsc
lv_obj_get_coords
lv_draw_rect
lv_obj_is_point_on_coords
_lv_area_is_point_on
lv_obj_invalidate_area
ARM GAS  D:\Temp\ccfvNLhk.s 			page 143


lv_obj_get_width
_lv_trigo_sin
lv_obj_invalidate
lv_obj_create
lv_obj_allocate_ext_attr
lv_style_list_init
lv_obj_set_signal_cb
lv_obj_set_design_cb
lv_style_list_copy
lv_obj_refresh_style
lv_obj_get_signal_cb
lv_obj_get_design_cb
lv_obj_del
lv_obj_set_size
lv_obj_add_protect
lv_obj_set_adv_hittest
lv_theme_apply
lv_obj_refresh_ext_draw_pad
lv_indev_get_act
lv_tick_elaps
lv_indev_wait_release
lv_tick_get
lv_event_send
lv_obj_handle_get_type_signal
lv_obj_clean_style_list
lv_indev_get_point
lv_indev_get_type
_lv_atan2
lv_color_rgb_to_hsv
lv_draw_line_dsc_init
lv_obj_init_draw_line_dsc
lv_draw_mask_radius_init
lv_draw_mask_add
lv_draw_line
lv_draw_mask_remove_id
