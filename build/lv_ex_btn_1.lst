ARM GAS  D:\Temp\ccdhGYQR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_ex_btn_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.event_handler,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	event_handler:
  26              	.LVL0:
  27              	.LFB563:
  28              		.file 1 "lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c"
   1:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** #include "../../../lv_examples.h"
   2:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** #include <stdio.h>
   3:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** #if LV_USE_BTN
   4:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** 
   5:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** static void event_handler(lv_obj_t * obj, lv_event_t event)
   6:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** {
  29              		.loc 1 6 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 6 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
   7:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     if(event == LV_EVENT_CLICKED) {
  39              		.loc 1 7 5 is_stmt 1 view .LVU2
  40              		.loc 1 7 7 is_stmt 0 view .LVU3
  41 0002 0629     		cmp	r1, #6
  42 0004 02D0     		beq	.L5
   8:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****         printf("Clicked\n");
   9:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     }
  10:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     else if(event == LV_EVENT_VALUE_CHANGED) {
  43              		.loc 1 10 10 is_stmt 1 view .LVU4
  44              		.loc 1 10 12 is_stmt 0 view .LVU5
  45 0006 1029     		cmp	r1, #16
  46 0008 04D0     		beq	.L6
  47              	.LVL1:
  48              	.L1:
ARM GAS  D:\Temp\ccdhGYQR.s 			page 2


  11:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****         printf("Toggled\n");
  12:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     }
  13:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** }
  49              		.loc 1 13 1 view .LVU6
  50 000a 08BD     		pop	{r3, pc}
  51              	.LVL2:
  52              	.L5:
   8:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****         printf("Clicked\n");
  53              		.loc 1 8 9 is_stmt 1 view .LVU7
  54 000c 0348     		ldr	r0, .L7
  55              	.LVL3:
   8:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****         printf("Clicked\n");
  56              		.loc 1 8 9 is_stmt 0 view .LVU8
  57 000e FFF7FEFF 		bl	puts
  58              	.LVL4:
   8:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****         printf("Clicked\n");
  59              		.loc 1 8 9 view .LVU9
  60 0012 FAE7     		b	.L1
  61              	.LVL5:
  62              	.L6:
  11:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****         printf("Toggled\n");
  63              		.loc 1 11 9 is_stmt 1 view .LVU10
  64 0014 0248     		ldr	r0, .L7+4
  65              	.LVL6:
  11:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****         printf("Toggled\n");
  66              		.loc 1 11 9 is_stmt 0 view .LVU11
  67 0016 FFF7FEFF 		bl	puts
  68              	.LVL7:
  69              		.loc 1 13 1 view .LVU12
  70 001a F6E7     		b	.L1
  71              	.L8:
  72              		.align	2
  73              	.L7:
  74 001c 00000000 		.word	.LC0
  75 0020 08000000 		.word	.LC1
  76              		.cfi_endproc
  77              	.LFE563:
  79              		.section	.text.lv_ex_btn_1,"ax",%progbits
  80              		.align	1
  81              		.global	lv_ex_btn_1
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	lv_ex_btn_1:
  88              	.LFB564:
  14:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** 
  15:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** void lv_ex_btn_1(void)
  16:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** {
  89              		.loc 1 16 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93 0000 30B5     		push	{r4, r5, lr}
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 12
  96              		.cfi_offset 4, -12
ARM GAS  D:\Temp\ccdhGYQR.s 			page 3


  97              		.cfi_offset 5, -8
  98              		.cfi_offset 14, -4
  99 0002 83B0     		sub	sp, sp, #12
 100              	.LCFI2:
 101              		.cfi_def_cfa_offset 24
  17:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_obj_t * label;
 102              		.loc 1 17 5 view .LVU14
  18:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** 
  19:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_obj_t * btn1 = lv_btn_create(lv_scr_act(), NULL);
 103              		.loc 1 19 5 view .LVU15
 104              	.LBB12:
 105              	.LBI12:
 106              		.file 2 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src/lv_core/lv_disp.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @file lv_disp.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** #define LV_DISP_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** #include "../lv_hal/lv_hal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** #include "lv_obj.h"
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /*********************
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  *      DEFINES
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  *********************/
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**********************
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  *      TYPEDEFS
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  **********************/
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** typedef enum {
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** } lv_scr_load_anim_t;
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**********************
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * GLOBAL PROTOTYPES
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  **********************/
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
ARM GAS  D:\Temp\ccdhGYQR.s 			page 4


  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Return with a pointer to the active screen
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * screen)
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * screen)
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Make a screen active
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param scr pointer to a screen
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * layer)
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to display which sys. layer should be get. (NULL to use the default screen)
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Assign a screen to a display.
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to a display where to assign the screen
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param scr pointer to a screen object to assign
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** void lv_disp_assign_screen(lv_disp_t * disp, lv_obj_t * scr);
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Set the background color of a display
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to a display
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param color color of the background
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Set the background image of a display
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to a display
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
ARM GAS  D:\Temp\ccdhGYQR.s 			page 5


 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Opacity of the background
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to a display
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param opa opacity (0..255)
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** #if LV_USE_ANIMATION
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Switch screen with animation
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param scr pointer to the new screen to load
 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param time time of the animation
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param delay delay before the transition
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
 119:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 120:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
 121:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** #endif
 122:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
 123:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 124:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 125:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 126:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
 127:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 128:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
 129:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
 130:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Manually trigger an activity on a display
 131:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 132:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
 133:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 134:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
 135:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
 136:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 137:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 138:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
 139:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 140:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
 141:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
 142:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Get a pointer to the screen refresher task to
 143:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * modify its parameters with `lv_task_...` functions.
 144:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @param disp pointer to a display
 145:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @return pointer to the display refresher task. (NULL on error)
 146:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
 147:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** lv_task_t * _lv_disp_get_refr_task(lv_disp_t * disp);
 148:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
 149:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /*------------------------------------------------
 150:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * To improve backward compatibility
 151:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Recommended only if you have one display
 152:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  *------------------------------------------------*/
 153:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** 
 154:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** /**
 155:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * Get the active screen of the default display
 156:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  * @return pointer to the active screen
 157:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****  */
 158:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
ARM GAS  D:\Temp\ccdhGYQR.s 			page 6


 107              		.loc 2 158 26 view .LVU16
 108              	.LBB13:
 159:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** {
 160:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 109              		.loc 2 160 5 view .LVU17
 110              		.loc 2 160 12 is_stmt 0 view .LVU18
 111 0004 FFF7FEFF 		bl	lv_disp_get_default
 112              	.LVL8:
 113 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
 114              	.LVL9:
 115              	.LBE13:
 116              	.LBE12:
 117              		.loc 1 19 23 view .LVU19
 118 000c 0021     		movs	r1, #0
 119 000e FFF7FEFF 		bl	lv_btn_create
 120              	.LVL10:
 121 0012 0446     		mov	r4, r0
 122              	.LVL11:
  20:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_obj_set_event_cb(btn1, event_handler);
 123              		.loc 1 20 5 is_stmt 1 view .LVU20
 124 0014 1E4D     		ldr	r5, .L11
 125 0016 2946     		mov	r1, r5
 126 0018 FFF7FEFF 		bl	lv_obj_set_event_cb
 127              	.LVL12:
  21:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_obj_align(btn1, NULL, LV_ALIGN_CENTER, 0, -40);
 128              		.loc 1 21 5 view .LVU21
 129 001c 6FF02703 		mvn	r3, #39
 130 0020 0093     		str	r3, [sp]
 131 0022 0023     		movs	r3, #0
 132 0024 1A46     		mov	r2, r3
 133 0026 1946     		mov	r1, r3
 134 0028 2046     		mov	r0, r4
 135 002a FFF7FEFF 		bl	lv_obj_align
 136              	.LVL13:
  22:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** 
  23:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     label = lv_label_create(btn1, NULL);
 137              		.loc 1 23 5 view .LVU22
 138              		.loc 1 23 13 is_stmt 0 view .LVU23
 139 002e 0021     		movs	r1, #0
 140 0030 2046     		mov	r0, r4
 141 0032 FFF7FEFF 		bl	lv_label_create
 142              	.LVL14:
  24:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_label_set_text(label, "Button");
 143              		.loc 1 24 5 is_stmt 1 view .LVU24
 144 0036 1749     		ldr	r1, .L11+4
 145 0038 FFF7FEFF 		bl	lv_label_set_text
 146              	.LVL15:
  25:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** 
  26:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_obj_t * btn2 = lv_btn_create(lv_scr_act(), NULL);
 147              		.loc 1 26 5 view .LVU25
 148              	.LBB14:
 149              	.LBI14:
 158:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_core\lv_disp.h **** {
 150              		.loc 2 158 26 view .LVU26
 151              	.LBB15:
 152              		.loc 2 160 5 view .LVU27
 153              		.loc 2 160 12 is_stmt 0 view .LVU28
ARM GAS  D:\Temp\ccdhGYQR.s 			page 7


 154 003c FFF7FEFF 		bl	lv_disp_get_default
 155              	.LVL16:
 156 0040 FFF7FEFF 		bl	lv_disp_get_scr_act
 157              	.LVL17:
 158              	.LBE15:
 159              	.LBE14:
 160              		.loc 1 26 23 view .LVU29
 161 0044 0021     		movs	r1, #0
 162 0046 FFF7FEFF 		bl	lv_btn_create
 163              	.LVL18:
 164 004a 0446     		mov	r4, r0
 165              	.LVL19:
  27:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_obj_set_event_cb(btn2, event_handler);
 166              		.loc 1 27 5 is_stmt 1 view .LVU30
 167 004c 2946     		mov	r1, r5
 168 004e FFF7FEFF 		bl	lv_obj_set_event_cb
 169              	.LVL20:
  28:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_obj_align(btn2, NULL, LV_ALIGN_CENTER, 0, 40);
 170              		.loc 1 28 5 view .LVU31
 171 0052 2823     		movs	r3, #40
 172 0054 0093     		str	r3, [sp]
 173 0056 0023     		movs	r3, #0
 174 0058 1A46     		mov	r2, r3
 175 005a 1946     		mov	r1, r3
 176 005c 2046     		mov	r0, r4
 177 005e FFF7FEFF 		bl	lv_obj_align
 178              	.LVL21:
  29:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_btn_set_checkable(btn2, true);
 179              		.loc 1 29 5 view .LVU32
 180 0062 0121     		movs	r1, #1
 181 0064 2046     		mov	r0, r4
 182 0066 FFF7FEFF 		bl	lv_btn_set_checkable
 183              	.LVL22:
  30:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_btn_toggle(btn2);
 184              		.loc 1 30 5 view .LVU33
 185 006a 2046     		mov	r0, r4
 186 006c FFF7FEFF 		bl	lv_btn_toggle
 187              	.LVL23:
  31:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_btn_set_fit2(btn2, LV_FIT_NONE, LV_FIT_TIGHT);
 188              		.loc 1 31 5 view .LVU34
 189              	.LBB16:
 190              	.LBI16:
 191              		.file 3 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src/lv_widgets/lv_btn.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @file lv_btn.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** #ifndef LV_BTN_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** #define LV_BTN_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  *      INCLUDES
ARM GAS  D:\Temp\ccdhGYQR.s 			page 8


  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** #if LV_USE_BTN != 0
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /*Testing of dependencies*/
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** #if LV_USE_CONT == 0
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** #error "lv_btn: lv_cont is required. Enable it in lv_conf.h (LV_USE_CONT 1)"
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** #endif
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** #include "lv_cont.h"
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** #include "../lv_core/lv_indev.h"
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /*********************
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  *      DEFINES
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  *********************/
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /**********************
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  *      TYPEDEFS
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  **********************/
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /** Possible states of a button.
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * It can be used not only by buttons but other button-like objects too*/
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** enum {
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     LV_BTN_STATE_RELEASED,
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     LV_BTN_STATE_PRESSED,
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     LV_BTN_STATE_DISABLED,
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     LV_BTN_STATE_CHECKED_RELEASED,
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     LV_BTN_STATE_CHECKED_PRESSED,
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     LV_BTN_STATE_CHECKED_DISABLED,
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     _LV_BTN_STATE_LAST, /* Number of states*/
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** };
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** typedef uint8_t lv_btn_state_t;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /** Extended data of button*/
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** typedef struct {
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     /** Ext. of ancestor*/
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     lv_cont_ext_t cont;
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     /** 1: Toggle enabled*/
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     uint8_t checkable : 1;
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** } lv_btn_ext_t;
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /**Styles*/
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** enum {
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     LV_BTN_PART_MAIN = LV_OBJ_PART_MAIN,
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     _LV_BTN_PART_VIRTUAL_LAST,
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     _LV_BTN_PART_REAL_LAST = _LV_OBJ_PART_REAL_LAST,
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** };
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** typedef uint8_t lv_btn_part_t;
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /**********************
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * GLOBAL PROTOTYPES
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  **********************/
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /**
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * Create a button object
ARM GAS  D:\Temp\ccdhGYQR.s 			page 9


  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param par pointer to an object, it will be the parent of the new button
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param copy pointer to a button object, if not NULL then the new object will be copied from it
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @return pointer to the created button
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  */
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** lv_obj_t * lv_btn_create(lv_obj_t * par, const lv_obj_t * copy);
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /*=====================
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * Setter functions
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  *====================*/
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /**
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * Enable the toggled states. On release the button will change from/to toggled state.
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param btn pointer to a button object
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param tgl true: enable toggled states, false: disable
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  */
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** void lv_btn_set_checkable(lv_obj_t * btn, bool tgl);
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /**
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * Set the state of the button
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param btn pointer to a button object
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param state the new state of the button (from lv_btn_state_t enum)
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  */
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** void lv_btn_set_state(lv_obj_t * btn, lv_btn_state_t state);
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /**
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * Toggle the state of the button (ON->OFF, OFF->ON)
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param btn pointer to a button object
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  */
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** void lv_btn_toggle(lv_obj_t * btn);
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /**
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * Set the layout on a button
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param btn pointer to a button object
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param layout a layout from 'lv_cont_layout_t'
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  */
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** static inline void lv_btn_set_layout(lv_obj_t * btn, lv_layout_t layout)
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** {
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     lv_cont_set_layout(btn, layout);
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** }
 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /**
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * Set the fit policy in all 4 directions separately.
 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * It tells how to change the button size automatically.
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param btn pointer to a button object
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param left left fit policy from `lv_fit_t`
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param right right fit policy from `lv_fit_t`
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param top top fit policy from `lv_fit_t`
 119:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param bottom bottom fit policy from `lv_fit_t`
 120:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  */
 121:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** static inline void lv_btn_set_fit4(lv_obj_t * btn, lv_fit_t left, lv_fit_t right, lv_fit_t top, lv_
 122:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** {
 123:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     lv_cont_set_fit4(btn, left, right, top, bottom);
 124:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** }
 125:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** 
 126:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** /**
 127:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * Set the fit policy horizontally and vertically separately.
 128:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * It tells how to change the button size automatically.
ARM GAS  D:\Temp\ccdhGYQR.s 			page 10


 129:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param btn pointer to a button object
 130:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param hor horizontal fit policy from `lv_fit_t`
 131:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  * @param ver vertical fit policy from `lv_fit_t`
 132:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****  */
 133:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** static inline void lv_btn_set_fit2(lv_obj_t * btn, lv_fit_t hor, lv_fit_t ver)
 192              		.loc 3 133 20 view .LVU35
 193              	.LBE16:
 134:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h **** {
 135:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_btn.h ****     lv_cont_set_fit2(btn, hor, ver);
 194              		.loc 3 135 5 view .LVU36
 195              	.LBB19:
 196              	.LBB17:
 197              	.LBI17:
 198              		.file 4 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src/lv_widgets/lv_cont.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @file lv_cont.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** #ifndef LV_CONT_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** #define LV_CONT_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** #if LV_USE_CONT != 0
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** #include "../lv_core/lv_obj.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /*********************
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  *      DEFINES
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  *********************/
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /**********************
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  *      TYPEDEFS
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  **********************/
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /** Container layout options*/
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** enum {
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_OFF = 0, /**< No layout */
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_CENTER, /**< Center objects */
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     /**
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * COLUMN:
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Place the object below each other
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Keep `pad_top` space on the top
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Keep `pad_inner` space between the objects
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      */
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_COLUMN_LEFT,      /**< Column left align*/
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_COLUMN_MID,       /**< Column middle align*/
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_COLUMN_RIGHT,     /**< Column right align*/
ARM GAS  D:\Temp\ccdhGYQR.s 			page 11


  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     /**
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * ROW:
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Place the object next to each other
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Keep `pad_left` space on the left
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Keep `pad_inner` space between the objects
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - If the object which applies the layout has `base_dir == LV_BIDI_DIR_RTL`
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      *   the row will start from the right applying `pad.right` space
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      */
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_ROW_TOP,          /**< Row top align*/
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_ROW_MID,          /**< Row middle align*/
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_ROW_BOTTOM,       /**< Row bottom align*/
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     /**
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * PRETTY:
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Place the object next to each other
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - If there is no more space start a new row
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Respect `pad_left` and `pad_right` when determining the available space in a row
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Keep `pad_inner` space between the objects in the same row
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Keep `pad_inner` space between the objects in rows
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Divide the remaining horizontal space equally
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      */
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_PRETTY_TOP,       /**< Row top align*/
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_PRETTY_MID,       /**< Row middle align*/
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_PRETTY_BOTTOM,    /**< Row bottom align*/
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     /**
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * GRID
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Place the object next to each other
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - If there is no more space start a new row
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Respect `pad_left` and `pad_right` when determining the available space in a row
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Keep `pad_inner` space between the objects in the same row
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Keep `pad_inner` space between the objects in rows
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      * - Unlike `PRETTY`, `GRID` always keep `pad_inner` space horizontally between objects
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      *   so it doesn't divide the remaining horizontal space equally
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****      */
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_LAYOUT_GRID,   /**< Align same-sized object into a grid*/
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     _LV_LAYOUT_LAST
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** };
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** typedef uint8_t lv_layout_t;
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /**
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * How to resize the container around the children.
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  */
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** enum {
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_FIT_NONE,  /**< Do not change the size automatically*/
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_FIT_TIGHT, /**< Shrink wrap around the children */
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_FIT_PARENT, /**< Align the size to the parent's edge*/
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_FIT_MAX,  /**< Align the size to the parent's edge first but if there is an object out of it
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****                      then get larger */
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     _LV_FIT_LAST
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** };
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** typedef uint8_t lv_fit_t;
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** typedef struct {
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     /*Inherited from 'base_obj' so no inherited ext. */ /*Ext. of ancestor*/
ARM GAS  D:\Temp\ccdhGYQR.s 			page 12


 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     /*New data for this type */
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     lv_layout_t layout : 4;     /*A layout from 'lv_layout_t' enum*/
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     lv_fit_t fit_left : 2;   /*A fit type from `lv_fit_t` enum */
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     lv_fit_t fit_right : 2;  /*A fit type from `lv_fit_t` enum */
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     lv_fit_t fit_top : 2;    /*A fit type from `lv_fit_t` enum */
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     lv_fit_t fit_bottom : 2; /*A fit type from `lv_fit_t` enum */
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** } lv_cont_ext_t;
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /*Part of the container*/
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** enum {
 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     LV_CONT_PART_MAIN = LV_OBJ_PART_MAIN,
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     _LV_CONT_PART_VIRTUAL_LAST = _LV_OBJ_PART_VIRTUAL_LAST,
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     _LV_CONT_PART_REAL_LAST = _LV_OBJ_PART_REAL_LAST,
 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** };
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /**********************
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * GLOBAL PROTOTYPES
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  **********************/
 119:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
 120:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /**
 121:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * Create a container objects
 122:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param par pointer to an object, it will be the parent of the new container
 123:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param copy pointer to a container object, if not NULL then the new object will be copied from i
 124:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @return pointer to the created container
 125:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  */
 126:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** lv_obj_t * lv_cont_create(lv_obj_t * par, const lv_obj_t * copy);
 127:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
 128:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /*=====================
 129:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * Setter functions
 130:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  *====================*/
 131:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
 132:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /**
 133:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * Set a layout on a container
 134:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param cont pointer to a container object
 135:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param layout a layout from 'lv_cont_layout_t'
 136:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  */
 137:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** void lv_cont_set_layout(lv_obj_t * cont, lv_layout_t layout);
 138:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
 139:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /**
 140:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * Set the fit policy in all 4 directions separately.
 141:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * It tell how to change the container's size automatically.
 142:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param cont pointer to a container object
 143:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param left left fit policy from `lv_fit_t`
 144:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param right right fit policy from `lv_fit_t`
 145:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param top top fit policy from `lv_fit_t`
 146:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param bottom bottom fit policy from `lv_fit_t`
 147:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  */
 148:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** void lv_cont_set_fit4(lv_obj_t * cont, lv_fit_t left, lv_fit_t right, lv_fit_t top, lv_fit_t bottom
 149:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** 
 150:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** /**
 151:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * Set the fit policy horizontally and vertically separately.
 152:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * It tells how to change the container's size automatically.
 153:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param cont pointer to a container object
 154:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param hor horizontal fit policy from `lv_fit_t`
 155:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  * @param ver vertical fit policy from `lv_fit_t`
 156:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****  */
 157:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** static inline void lv_cont_set_fit2(lv_obj_t * cont, lv_fit_t hor, lv_fit_t ver)
ARM GAS  D:\Temp\ccdhGYQR.s 			page 13


 199              		.loc 4 157 20 view .LVU37
 200              	.LBB18:
 158:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h **** {
 159:d:\_project\stm32\f407\hack_rf_new\lvgl\src/lv_widgets\lv_cont.h ****     lv_cont_set_fit4(cont, hor, hor, ver, ver);
 201              		.loc 4 159 5 view .LVU38
 202 0070 0123     		movs	r3, #1
 203 0072 0093     		str	r3, [sp]
 204 0074 0022     		movs	r2, #0
 205 0076 1146     		mov	r1, r2
 206 0078 2046     		mov	r0, r4
 207 007a FFF7FEFF 		bl	lv_cont_set_fit4
 208              	.LVL24:
 209              		.loc 4 159 5 is_stmt 0 view .LVU39
 210              	.LBE18:
 211              	.LBE17:
 212              	.LBE19:
  32:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** 
  33:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     label = lv_label_create(btn2, NULL);
 213              		.loc 1 33 5 is_stmt 1 view .LVU40
 214              		.loc 1 33 13 is_stmt 0 view .LVU41
 215 007e 0021     		movs	r1, #0
 216 0080 2046     		mov	r0, r4
 217 0082 FFF7FEFF 		bl	lv_label_create
 218              	.LVL25:
  34:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c ****     lv_label_set_text(label, "Toggled");
 219              		.loc 1 34 5 is_stmt 1 view .LVU42
 220 0086 0449     		ldr	r1, .L11+8
 221 0088 FFF7FEFF 		bl	lv_label_set_text
 222              	.LVL26:
  35:lv_examples/src/lv_ex_widgets/lv_ex_btn/lv_ex_btn_1.c **** }
 223              		.loc 1 35 1 is_stmt 0 view .LVU43
 224 008c 03B0     		add	sp, sp, #12
 225              	.LCFI3:
 226              		.cfi_def_cfa_offset 12
 227              		@ sp needed
 228 008e 30BD     		pop	{r4, r5, pc}
 229              	.LVL27:
 230              	.L12:
 231              		.loc 1 35 1 view .LVU44
 232              		.align	2
 233              	.L11:
 234 0090 00000000 		.word	event_handler
 235 0094 00000000 		.word	.LC2
 236 0098 08000000 		.word	.LC1
 237              		.cfi_endproc
 238              	.LFE564:
 240              		.section	.rodata.event_handler.str1.4,"aMS",%progbits,1
 241              		.align	2
 242              	.LC0:
 243 0000 436C6963 		.ascii	"Clicked\000"
 243      6B656400 
 244              	.LC1:
 245 0008 546F6767 		.ascii	"Toggled\000"
 245      6C656400 
 246              		.section	.rodata.lv_ex_btn_1.str1.4,"aMS",%progbits,1
 247              		.align	2
 248              	.LC2:
ARM GAS  D:\Temp\ccdhGYQR.s 			page 14


 249 0000 42757474 		.ascii	"Button\000"
 249      6F6E00
 250              		.text
 251              	.Letext0:
 252              		.file 5 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 253              		.file 6 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 254              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 255              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 256              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 257              		.file 10 "lvgl/lv_conf.h"
 258              		.file 11 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src/lv_misc/lv_types.h"
 259              		.file 12 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src/lv_misc/lv_mem.h"
 260              		.file 13 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src/lv_misc/lv_ll.h"
 261              		.file 14 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 262              		.file 15 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 263              		.file 16 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 264              		.file 17 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 265              		.file 18 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_area.h"
 266              		.file 19 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src/lv_core/lv_obj.h"
 267              		.file 20 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src/lv_hal/lv_hal_indev.h"
 268              		.file 21 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_font\\lv_font.h"
 269              		.file 22 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_anim.h"
 270              		.file 23 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src/lv_core/lv_style.h"
 271              		.file 24 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_bidi.h"
 272              		.file 25 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_txt.h"
 273              		.file 26 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_draw\\lv_draw_label.h"
 274              		.file 27 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src/lv_hal/lv_hal_disp.h"
 275              		.file 28 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src/lv_widgets/lv_label.h"
 276              		.file 29 "<built-in>"
ARM GAS  D:\Temp\ccdhGYQR.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_ex_btn_1.c
  D:\Temp\ccdhGYQR.s:18     .text.event_handler:0000000000000000 $t
  D:\Temp\ccdhGYQR.s:25     .text.event_handler:0000000000000000 event_handler
  D:\Temp\ccdhGYQR.s:74     .text.event_handler:000000000000001c $d
  D:\Temp\ccdhGYQR.s:80     .text.lv_ex_btn_1:0000000000000000 $t
  D:\Temp\ccdhGYQR.s:87     .text.lv_ex_btn_1:0000000000000000 lv_ex_btn_1
  D:\Temp\ccdhGYQR.s:234    .text.lv_ex_btn_1:0000000000000090 $d
  D:\Temp\ccdhGYQR.s:241    .rodata.event_handler.str1.4:0000000000000000 $d
  D:\Temp\ccdhGYQR.s:247    .rodata.lv_ex_btn_1.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
puts
lv_disp_get_default
lv_disp_get_scr_act
lv_btn_create
lv_obj_set_event_cb
lv_obj_align
lv_label_create
lv_label_set_text
lv_btn_set_checkable
lv_btn_toggle
lv_cont_set_fit4
