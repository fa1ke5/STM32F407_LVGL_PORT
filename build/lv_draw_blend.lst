ARM GAS  D:\Temp\ccohqSTj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_draw_blend.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.map_blended,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	map_blended:
  26              	.LVL0:
  27              	.LFB465:
  28              		.file 1 "lvgl/src/lv_draw/lv_draw_blend.c"
   1:lvgl/src/lv_draw/lv_draw_blend.c **** /**
   2:lvgl/src/lv_draw/lv_draw_blend.c ****  * @file lv_draw_blend.c
   3:lvgl/src/lv_draw/lv_draw_blend.c ****  *
   4:lvgl/src/lv_draw/lv_draw_blend.c ****  */
   5:lvgl/src/lv_draw/lv_draw_blend.c **** 
   6:lvgl/src/lv_draw/lv_draw_blend.c **** /*********************
   7:lvgl/src/lv_draw/lv_draw_blend.c ****  *      INCLUDES
   8:lvgl/src/lv_draw/lv_draw_blend.c ****  *********************/
   9:lvgl/src/lv_draw/lv_draw_blend.c **** #include "lv_draw_blend.h"
  10:lvgl/src/lv_draw/lv_draw_blend.c **** #include "lv_img_decoder.h"
  11:lvgl/src/lv_draw/lv_draw_blend.c **** #include "../lv_misc/lv_math.h"
  12:lvgl/src/lv_draw/lv_draw_blend.c **** #include "../lv_hal/lv_hal_disp.h"
  13:lvgl/src/lv_draw/lv_draw_blend.c **** #include "../lv_core/lv_refr.h"
  14:lvgl/src/lv_draw/lv_draw_blend.c **** 
  15:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
  16:lvgl/src/lv_draw/lv_draw_blend.c ****     #include "../lv_gpu/lv_gpu_nxp_pxp.h"
  17:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
  18:lvgl/src/lv_draw/lv_draw_blend.c ****     #include "../lv_gpu/lv_gpu_nxp_vglite.h"
  19:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
  20:lvgl/src/lv_draw/lv_draw_blend.c ****     #include "../lv_gpu/lv_gpu_stm32_dma2d.h"
  21:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
  22:lvgl/src/lv_draw/lv_draw_blend.c **** 
  23:lvgl/src/lv_draw/lv_draw_blend.c **** /*********************
  24:lvgl/src/lv_draw/lv_draw_blend.c ****  *      DEFINES
  25:lvgl/src/lv_draw/lv_draw_blend.c ****  *********************/
  26:lvgl/src/lv_draw/lv_draw_blend.c **** #define GPU_SIZE_LIMIT      240
  27:lvgl/src/lv_draw/lv_draw_blend.c **** 
  28:lvgl/src/lv_draw/lv_draw_blend.c **** /**********************
  29:lvgl/src/lv_draw/lv_draw_blend.c ****  *      TYPEDEFS
  30:lvgl/src/lv_draw/lv_draw_blend.c ****  **********************/
ARM GAS  D:\Temp\ccohqSTj.s 			page 2


  31:lvgl/src/lv_draw/lv_draw_blend.c **** 
  32:lvgl/src/lv_draw/lv_draw_blend.c **** /**********************
  33:lvgl/src/lv_draw/lv_draw_blend.c ****  *  STATIC PROTOTYPES
  34:lvgl/src/lv_draw/lv_draw_blend.c ****  **********************/
  35:lvgl/src/lv_draw/lv_draw_blend.c **** 
  36:lvgl/src/lv_draw/lv_draw_blend.c **** static void fill_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
  37:lvgl/src/lv_draw/lv_draw_blend.c ****                         lv_color_t color, lv_opa_t opa,
  38:lvgl/src/lv_draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  39:lvgl/src/lv_draw/lv_draw_blend.c **** 
  40:lvgl/src/lv_draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
  41:lvgl/src/lv_draw/lv_draw_blend.c ****                                               const lv_area_t * draw_area,
  42:lvgl/src/lv_draw/lv_draw_blend.c ****                                               lv_color_t color, lv_opa_t opa,
  43:lvgl/src/lv_draw/lv_draw_blend.c ****                                               const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  44:lvgl/src/lv_draw/lv_draw_blend.c **** 
  45:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_BLEND_MODES
  46:lvgl/src/lv_draw/lv_draw_blend.c **** static void fill_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * dra
  47:lvgl/src/lv_draw/lv_draw_blend.c ****                          lv_color_t color, lv_opa_t opa,
  48:lvgl/src/lv_draw/lv_draw_blend.c ****                          const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode);
  49:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
  50:lvgl/src/lv_draw/lv_draw_blend.c **** 
  51:lvgl/src/lv_draw/lv_draw_blend.c **** static void map_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_
  52:lvgl/src/lv_draw/lv_draw_blend.c ****                        const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
  53:lvgl/src/lv_draw/lv_draw_blend.c ****                        const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  54:lvgl/src/lv_draw/lv_draw_blend.c **** 
  55:lvgl/src/lv_draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
  56:lvgl/src/lv_draw/lv_draw_blend.c ****                                              const lv_area_t * draw_area,
  57:lvgl/src/lv_draw/lv_draw_blend.c ****                                              const lv_area_t * map_area, const lv_color_t * map_buf
  58:lvgl/src/lv_draw/lv_draw_blend.c ****                                              const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  59:lvgl/src/lv_draw/lv_draw_blend.c **** 
  60:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_BLEND_MODES
  61:lvgl/src/lv_draw/lv_draw_blend.c **** static void map_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
  62:lvgl/src/lv_draw/lv_draw_blend.c ****                         const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
  63:lvgl/src/lv_draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode);
  64:lvgl/src/lv_draw/lv_draw_blend.c **** 
  65:lvgl/src/lv_draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  66:lvgl/src/lv_draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
  67:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
  68:lvgl/src/lv_draw/lv_draw_blend.c **** 
  69:lvgl/src/lv_draw/lv_draw_blend.c **** /**********************
  70:lvgl/src/lv_draw/lv_draw_blend.c ****  *  STATIC VARIABLES
  71:lvgl/src/lv_draw/lv_draw_blend.c ****  **********************/
  72:lvgl/src/lv_draw/lv_draw_blend.c **** 
  73:lvgl/src/lv_draw/lv_draw_blend.c **** #if (LV_USE_GPU || LV_USE_GPU_STM32_DMA2D) && (LV_USE_GPU_NXP_PXP == 0) && (LV_USE_GPU_NXP_VG_LITE 
  74:lvgl/src/lv_draw/lv_draw_blend.c ****     LV_ATTRIBUTE_DMA static lv_color_t blend_buf[LV_HOR_RES_MAX];
  75:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
  76:lvgl/src/lv_draw/lv_draw_blend.c **** 
  77:lvgl/src/lv_draw/lv_draw_blend.c **** /**********************
  78:lvgl/src/lv_draw/lv_draw_blend.c ****  *      MACROS
  79:lvgl/src/lv_draw/lv_draw_blend.c ****  **********************/
  80:lvgl/src/lv_draw/lv_draw_blend.c **** 
  81:lvgl/src/lv_draw/lv_draw_blend.c **** #define FILL_NORMAL_MASK_PX(out_x,  color)                                                         
  82:lvgl/src/lv_draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
  83:lvgl/src/lv_draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[out_x] = color;                             
  84:lvgl/src/lv_draw/lv_draw_blend.c ****         else disp_buf_first[out_x] = lv_color_mix(color, disp_buf_first[out_x], *mask_tmp_x);      
  85:lvgl/src/lv_draw/lv_draw_blend.c ****     }                                                                                              
  86:lvgl/src/lv_draw/lv_draw_blend.c ****     mask_tmp_x++;
  87:lvgl/src/lv_draw/lv_draw_blend.c **** 
ARM GAS  D:\Temp\ccohqSTj.s 			page 3


  88:lvgl/src/lv_draw/lv_draw_blend.c **** #define FILL_NORMAL_MASK_PX_SCR_TRANSP(out_x,  color)                                              
  89:lvgl/src/lv_draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
  90:lvgl/src/lv_draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[out_x] = color;                             
  91:lvgl/src/lv_draw/lv_draw_blend.c ****         else if(disp->driver.screen_transp) lv_color_mix_with_alpha(disp_buf_first[out_x], disp_buf
  92:lvgl/src/lv_draw/lv_draw_blend.c ****                                                                         color, *mask_tmp_x, &disp_b
  93:lvgl/src/lv_draw/lv_draw_blend.c ****         else disp_buf_first[out_x] = lv_color_mix(color, disp_buf_first[out_x], *mask_tmp_x);      
  94:lvgl/src/lv_draw/lv_draw_blend.c ****     }                                                                                              
  95:lvgl/src/lv_draw/lv_draw_blend.c ****     mask_tmp_x++;
  96:lvgl/src/lv_draw/lv_draw_blend.c **** 
  97:lvgl/src/lv_draw/lv_draw_blend.c **** #define MAP_NORMAL_MASK_PX(x)                                                          \
  98:lvgl/src/lv_draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
  99:lvgl/src/lv_draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[x] = map_buf_first[x];                      
 100:lvgl/src/lv_draw/lv_draw_blend.c ****         else disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], *mask_tmp_x);   
 101:lvgl/src/lv_draw/lv_draw_blend.c ****     }                                                                                              
 102:lvgl/src/lv_draw/lv_draw_blend.c ****     mask_tmp_x++;
 103:lvgl/src/lv_draw/lv_draw_blend.c **** 
 104:lvgl/src/lv_draw/lv_draw_blend.c **** #define MAP_NORMAL_MASK_PX_SCR_TRANSP(x)                        \
 105:lvgl/src/lv_draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
 106:lvgl/src/lv_draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[x] = map_buf_first[x];                      
 107:lvgl/src/lv_draw/lv_draw_blend.c ****         else if(disp->driver.screen_transp) lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_fir
 108:lvgl/src/lv_draw/lv_draw_blend.c ****                                                                         map_buf_first[x], *mask_tmp
 109:lvgl/src/lv_draw/lv_draw_blend.c ****         else disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], *mask_tmp_x);   
 110:lvgl/src/lv_draw/lv_draw_blend.c ****     }                                                                                              
 111:lvgl/src/lv_draw/lv_draw_blend.c ****     mask_tmp_x++;
 112:lvgl/src/lv_draw/lv_draw_blend.c **** 
 113:lvgl/src/lv_draw/lv_draw_blend.c **** /**********************
 114:lvgl/src/lv_draw/lv_draw_blend.c ****  *   GLOBAL FUNCTIONS
 115:lvgl/src/lv_draw/lv_draw_blend.c ****  **********************/
 116:lvgl/src/lv_draw/lv_draw_blend.c **** 
 117:lvgl/src/lv_draw/lv_draw_blend.c **** /**
 118:lvgl/src/lv_draw/lv_draw_blend.c ****  * Fill and area in the display buffer.
 119:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param clip_area clip the fill to this area  (absolute coordinates)
 120:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param fill_area fill this area  (absolute coordinates) (should be clipped)
 121:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param color fill color
 122:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mask a mask to apply on the fill (uint8_t array with 0x00..0xff values).
 123:lvgl/src/lv_draw/lv_draw_blend.c ****  *             Relative to fill area but its width is truncated to clip area.
 124:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 125:lvgl/src/lv_draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 126:lvgl/src/lv_draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 127:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 128:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 129:lvgl/src/lv_draw/lv_draw_blend.c ****  */
 130:lvgl/src/lv_draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM void _lv_blend_fill(const lv_area_t * clip_area, const lv_area_t * fill_area,
 131:lvgl/src/lv_draw/lv_draw_blend.c ****                                           lv_color_t color, lv_opa_t * mask, lv_draw_mask_res_t mas
 132:lvgl/src/lv_draw/lv_draw_blend.c ****                                           lv_blend_mode_t mode)
 133:lvgl/src/lv_draw/lv_draw_blend.c **** {
 134:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 135:lvgl/src/lv_draw/lv_draw_blend.c ****     if(opa < LV_OPA_MIN) return;
 136:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 137:lvgl/src/lv_draw/lv_draw_blend.c **** 
 138:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 139:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp);
 140:lvgl/src/lv_draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &vdb->area;
 141:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t * disp_buf = vdb->buf_act;
 142:lvgl/src/lv_draw/lv_draw_blend.c **** 
 143:lvgl/src/lv_draw/lv_draw_blend.c ****     if(disp->driver.gpu_wait_cb) disp->driver.gpu_wait_cb(&disp->driver);
 144:lvgl/src/lv_draw/lv_draw_blend.c **** 
ARM GAS  D:\Temp\ccohqSTj.s 			page 4


 145:lvgl/src/lv_draw/lv_draw_blend.c ****     /* Get clipped fill area which is the real draw area.
 146:lvgl/src/lv_draw/lv_draw_blend.c ****      * It is always the same or inside `fill_area` */
 147:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_area_t draw_area;
 148:lvgl/src/lv_draw/lv_draw_blend.c ****     bool is_common;
 149:lvgl/src/lv_draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, fill_area);
 150:lvgl/src/lv_draw/lv_draw_blend.c ****     if(!is_common) return;
 151:lvgl/src/lv_draw/lv_draw_blend.c **** 
 152:lvgl/src/lv_draw/lv_draw_blend.c ****     /* Now `draw_area` has absolute coordinates.
 153:lvgl/src/lv_draw/lv_draw_blend.c ****      * Make it relative to `disp_area` to simplify draw to `disp_buf`*/
 154:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.x1 -= disp_area->x1;
 155:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 156:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 157:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 158:lvgl/src/lv_draw/lv_draw_blend.c **** 
 159:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Round the values in the mask if anti-aliasing is disabled*/
 160:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_ANTIALIAS
 161:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask && disp->driver.antialiasing == 0)
 162:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 163:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask)
 164:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 165:lvgl/src/lv_draw/lv_draw_blend.c ****     {
 166:lvgl/src/lv_draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 167:lvgl/src/lv_draw/lv_draw_blend.c ****         int32_t i;
 168:lvgl/src/lv_draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 169:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 170:lvgl/src/lv_draw/lv_draw_blend.c **** 
 171:lvgl/src/lv_draw/lv_draw_blend.c ****     if(disp->driver.set_px_cb) {
 172:lvgl/src/lv_draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 173:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 174:lvgl/src/lv_draw/lv_draw_blend.c ****     else if(mode == LV_BLEND_MODE_NORMAL) {
 175:lvgl/src/lv_draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 176:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 177:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_BLEND_MODES
 178:lvgl/src/lv_draw/lv_draw_blend.c ****     else {
 179:lvgl/src/lv_draw/lv_draw_blend.c ****         fill_blended(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res, mode);
 180:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 181:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 182:lvgl/src/lv_draw/lv_draw_blend.c **** }
 183:lvgl/src/lv_draw/lv_draw_blend.c **** 
 184:lvgl/src/lv_draw/lv_draw_blend.c **** /**
 185:lvgl/src/lv_draw/lv_draw_blend.c ****  * Copy a map (image) to a display buffer.
 186:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param clip_area clip the map to this area (absolute coordinates)
 187:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param map_area area of the image  (absolute coordinates)
 188:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param map_buf a pixels of the map (image)
 189:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 190:lvgl/src/lv_draw/lv_draw_blend.c ****  *                Relative to map area but its width is truncated to clip area.
 191:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 192:lvgl/src/lv_draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 193:lvgl/src/lv_draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 194:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 195:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 196:lvgl/src/lv_draw/lv_draw_blend.c ****  */
 197:lvgl/src/lv_draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM void _lv_blend_map(const lv_area_t * clip_area, const lv_area_t * map_area,
 198:lvgl/src/lv_draw/lv_draw_blend.c ****                                          const lv_color_t * map_buf,
 199:lvgl/src/lv_draw/lv_draw_blend.c ****                                          lv_opa_t * mask, lv_draw_mask_res_t mask_res,
 200:lvgl/src/lv_draw/lv_draw_blend.c ****                                          lv_opa_t opa, lv_blend_mode_t mode)
 201:lvgl/src/lv_draw/lv_draw_blend.c **** {
ARM GAS  D:\Temp\ccohqSTj.s 			page 5


 202:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 203:lvgl/src/lv_draw/lv_draw_blend.c ****     if(opa < LV_OPA_MIN) return;
 204:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 205:lvgl/src/lv_draw/lv_draw_blend.c **** 
 206:lvgl/src/lv_draw/lv_draw_blend.c ****     /* Get clipped fill area which is the real draw area.
 207:lvgl/src/lv_draw/lv_draw_blend.c ****      * It is always the same or inside `fill_area` */
 208:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_area_t draw_area;
 209:lvgl/src/lv_draw/lv_draw_blend.c ****     bool is_common;
 210:lvgl/src/lv_draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, map_area);
 211:lvgl/src/lv_draw/lv_draw_blend.c ****     if(!is_common) return;
 212:lvgl/src/lv_draw/lv_draw_blend.c **** 
 213:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 214:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp);
 215:lvgl/src/lv_draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &vdb->area;
 216:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t * disp_buf = vdb->buf_act;
 217:lvgl/src/lv_draw/lv_draw_blend.c **** 
 218:lvgl/src/lv_draw/lv_draw_blend.c ****     if(disp->driver.gpu_wait_cb) disp->driver.gpu_wait_cb(&disp->driver);
 219:lvgl/src/lv_draw/lv_draw_blend.c **** 
 220:lvgl/src/lv_draw/lv_draw_blend.c ****     /* Now `draw_area` has absolute coordinates.
 221:lvgl/src/lv_draw/lv_draw_blend.c ****      * Make it relative to `disp_area` to simplify draw to `disp_buf`*/
 222:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.x1 -= disp_area->x1;
 223:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 224:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 225:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 226:lvgl/src/lv_draw/lv_draw_blend.c **** 
 227:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Round the values in the mask if anti-aliasing is disabled*/
 228:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_ANTIALIAS
 229:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask && disp->driver.antialiasing == 0)
 230:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 231:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask)
 232:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 233:lvgl/src/lv_draw/lv_draw_blend.c ****     {
 234:lvgl/src/lv_draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 235:lvgl/src/lv_draw/lv_draw_blend.c ****         int32_t i;
 236:lvgl/src/lv_draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 237:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 238:lvgl/src/lv_draw/lv_draw_blend.c ****     if(disp->driver.set_px_cb) {
 239:lvgl/src/lv_draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 240:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 241:lvgl/src/lv_draw/lv_draw_blend.c ****     else if(mode == LV_BLEND_MODE_NORMAL) {
 242:lvgl/src/lv_draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 243:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 244:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_BLEND_MODES
 245:lvgl/src/lv_draw/lv_draw_blend.c ****     else {
 246:lvgl/src/lv_draw/lv_draw_blend.c ****         map_blended(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res, mode);
 247:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 248:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 249:lvgl/src/lv_draw/lv_draw_blend.c **** }
 250:lvgl/src/lv_draw/lv_draw_blend.c **** 
 251:lvgl/src/lv_draw/lv_draw_blend.c **** /**********************
 252:lvgl/src/lv_draw/lv_draw_blend.c ****  *   STATIC FUNCTIONS
 253:lvgl/src/lv_draw/lv_draw_blend.c ****  **********************/
 254:lvgl/src/lv_draw/lv_draw_blend.c **** 
 255:lvgl/src/lv_draw/lv_draw_blend.c **** static void fill_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
 256:lvgl/src/lv_draw/lv_draw_blend.c ****                         lv_color_t color, lv_opa_t opa,
 257:lvgl/src/lv_draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 258:lvgl/src/lv_draw/lv_draw_blend.c **** {
ARM GAS  D:\Temp\ccohqSTj.s 			page 6


 259:lvgl/src/lv_draw/lv_draw_blend.c **** 
 260:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 261:lvgl/src/lv_draw/lv_draw_blend.c **** 
 262:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 263:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 264:lvgl/src/lv_draw/lv_draw_blend.c **** 
 265:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t x;
 266:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t y;
 267:lvgl/src/lv_draw/lv_draw_blend.c **** 
 268:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 269:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 270:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 271:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 272:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 273:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 274:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 275:lvgl/src/lv_draw/lv_draw_blend.c ****     else {
 276:lvgl/src/lv_draw/lv_draw_blend.c ****         /* The mask is relative to the clipped area.
 277:lvgl/src/lv_draw/lv_draw_blend.c ****          * In the cycles below mask will be indexed from `draw_area.x1`
 278:lvgl/src/lv_draw/lv_draw_blend.c ****          * but it corresponds to zero index. So prepare `mask_tmp` accordingly. */
 279:lvgl/src/lv_draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 280:lvgl/src/lv_draw/lv_draw_blend.c **** 
 281:lvgl/src/lv_draw/lv_draw_blend.c ****         /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 282:lvgl/src/lv_draw/lv_draw_blend.c ****         int32_t draw_area_w = lv_area_get_width(draw_area);
 283:lvgl/src/lv_draw/lv_draw_blend.c **** 
 284:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 285:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 286:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 287:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color,
 288:lvgl/src/lv_draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 289:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 290:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 291:lvgl/src/lv_draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 292:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 293:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 294:lvgl/src/lv_draw/lv_draw_blend.c **** }
 295:lvgl/src/lv_draw/lv_draw_blend.c **** 
 296:lvgl/src/lv_draw/lv_draw_blend.c **** /**
 297:lvgl/src/lv_draw/lv_draw_blend.c ****  * Fill an area with a color
 298:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
 299:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 300:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param draw_area fill this area (relative to `disp_area`)
 301:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param color fill color
 302:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 303:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 304:lvgl/src/lv_draw/lv_draw_blend.c ****  *                It fits into draw_area.
 305:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 306:lvgl/src/lv_draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 307:lvgl/src/lv_draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 308:lvgl/src/lv_draw/lv_draw_blend.c ****  */
 309:lvgl/src/lv_draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
 310:lvgl/src/lv_draw/lv_draw_blend.c ****                                               const lv_area_t * draw_area,
 311:lvgl/src/lv_draw/lv_draw_blend.c ****                                               lv_color_t color, lv_opa_t opa,
 312:lvgl/src/lv_draw/lv_draw_blend.c ****                                               const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 313:lvgl/src/lv_draw/lv_draw_blend.c **** {
 314:lvgl/src/lv_draw/lv_draw_blend.c **** 
 315:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU || LV_COLOR_SCREEN_TRANSP
ARM GAS  D:\Temp\ccohqSTj.s 			page 7


 316:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 317:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 318:lvgl/src/lv_draw/lv_draw_blend.c **** 
 319:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 320:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 321:lvgl/src/lv_draw/lv_draw_blend.c **** 
 322:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 323:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 324:lvgl/src/lv_draw/lv_draw_blend.c **** 
 325:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to the first pixel of the destination area*/
 326:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t * disp_buf_first = disp_buf + disp_w * draw_area->y1 + draw_area->x1;
 327:lvgl/src/lv_draw/lv_draw_blend.c **** 
 328:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t x;
 329:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t y;
 330:lvgl/src/lv_draw/lv_draw_blend.c **** 
 331:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 332:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 333:lvgl/src/lv_draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 334:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 335:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_FILL_SIZE_LIMIT) {
 336:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_fill(disp_buf, disp_w, draw_area, color, opa);
 337:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 338:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 339:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
 340:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_FILL_SIZE_LIMIT) {
 341:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_fill(disp_buf, disp_w, lv_area_get_height(disp_area), draw_are
 342:lvgl/src/lv_draw/lv_draw_blend.c ****                     return;
 343:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 344:lvgl/src/lv_draw/lv_draw_blend.c ****                 /* Fall down to SW render in case of error */
 345:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 346:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 347:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 348:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_fill(disp_buf_first, disp_w, color, draw_area_w, draw_area_h);
 349:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 350:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 351:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_USE_GPU
 352:lvgl/src/lv_draw/lv_draw_blend.c ****             if(disp->driver.gpu_fill_cb && lv_area_get_size(draw_area) > GPU_SIZE_LIMIT) {
 353:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_fill_cb(&disp->driver, disp_buf, disp_w, draw_area, color);
 354:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 355:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 356:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 357:lvgl/src/lv_draw/lv_draw_blend.c ****             /*Software rendering*/
 358:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 359:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 360:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 361:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 362:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 363:lvgl/src/lv_draw/lv_draw_blend.c ****         /*No mask with opacity*/
 364:lvgl/src/lv_draw/lv_draw_blend.c ****         else {
 365:lvgl/src/lv_draw/lv_draw_blend.c **** 
 366:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 367:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_FILL_OPA_SIZE_LIMIT) {
 368:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_fill(disp_buf, disp_w, draw_area, color, opa);
 369:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 370:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 371:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
 372:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_FILL_OPA_SIZE_LIMIT) {
ARM GAS  D:\Temp\ccohqSTj.s 			page 8


 373:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_fill(disp_buf, disp_w, lv_area_get_height(disp_area), draw_are
 374:lvgl/src/lv_draw/lv_draw_blend.c ****                     return;
 375:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 376:lvgl/src/lv_draw/lv_draw_blend.c ****                 /* Fall down to SW render in case of error */
 377:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 378:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_USE_GPU
 379:lvgl/src/lv_draw/lv_draw_blend.c ****             if(disp->driver.gpu_blend_cb && lv_area_get_size(draw_area) > GPU_SIZE_LIMIT) {
 380:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w ; x++) blend_buf[x].full = color.full;
 381:lvgl/src/lv_draw/lv_draw_blend.c **** 
 382:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(y = draw_area->y1; y <= draw_area->y2; y++) {
 383:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, blend_buf, draw_area_w
 384:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp_buf_first += disp_w;
 385:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 386:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 387:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 388:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 389:lvgl/src/lv_draw/lv_draw_blend.c **** 
 390:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU_STM32_DMA2D
 391:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 392:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(blend_buf[0].full != color.full) lv_color_fill(blend_buf, color, LV_HOR_RES_MAX)
 393:lvgl/src/lv_draw/lv_draw_blend.c **** 
 394:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_coord_t line_h = LV_HOR_RES_MAX / draw_area_w;
 395:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(y = 0; y <= draw_area_h - line_h; y += line_h) {
 396:lvgl/src/lv_draw/lv_draw_blend.c ****                     lv_gpu_stm32_dma2d_blend(disp_buf_first, disp_w, blend_buf, opa, draw_area_w, d
 397:lvgl/src/lv_draw/lv_draw_blend.c ****                     lv_gpu_stm32_dma2d_wait_cb(NULL);
 398:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp_buf_first += disp_w * line_h;
 399:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 400:lvgl/src/lv_draw/lv_draw_blend.c **** 
 401:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(y != draw_area_h) {
 402:lvgl/src/lv_draw/lv_draw_blend.c ****                     lv_gpu_stm32_dma2d_blend(disp_buf_first, disp_w, blend_buf, opa, draw_area_w, d
 403:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 404:lvgl/src/lv_draw/lv_draw_blend.c **** 
 405:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 406:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 407:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 408:lvgl/src/lv_draw/lv_draw_blend.c ****             lv_color_t last_dest_color = LV_COLOR_BLACK;
 409:lvgl/src/lv_draw/lv_draw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 410:lvgl/src/lv_draw/lv_draw_blend.c **** 
 411:lvgl/src/lv_draw/lv_draw_blend.c ****             uint16_t color_premult[3];
 412:lvgl/src/lv_draw/lv_draw_blend.c ****             lv_color_premult(color, opa, color_premult);
 413:lvgl/src/lv_draw/lv_draw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 414:lvgl/src/lv_draw/lv_draw_blend.c **** 
 415:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 416:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 417:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 418:lvgl/src/lv_draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 419:lvgl/src/lv_draw/lv_draw_blend.c **** 
 420:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 421:lvgl/src/lv_draw/lv_draw_blend.c ****                         if(disp->driver.screen_transp) {
 422:lvgl/src/lv_draw/lv_draw_blend.c ****                             lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, 
 423:lvgl/src/lv_draw/lv_draw_blend.c ****                                                     &last_res_color.ch.alpha);
 424:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 425:lvgl/src/lv_draw/lv_draw_blend.c ****                         else
 426:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 427:lvgl/src/lv_draw/lv_draw_blend.c ****                         {
 428:lvgl/src/lv_draw/lv_draw_blend.c ****                             last_res_color = lv_color_mix_premult(color_premult, disp_buf_first[x],
 429:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
ARM GAS  D:\Temp\ccohqSTj.s 			page 9


 430:lvgl/src/lv_draw/lv_draw_blend.c ****                     }
 431:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp_buf_first[x] = last_res_color;
 432:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 433:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 434:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 435:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 436:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 437:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Masked*/
 438:lvgl/src/lv_draw/lv_draw_blend.c ****     else {
 439:lvgl/src/lv_draw/lv_draw_blend.c ****         /*DMA2D could be used here but it's much slower than software rendering*/
 440:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU_STM32_DMA2D && 0
 441:lvgl/src/lv_draw/lv_draw_blend.c ****         if(lv_area_get_size(draw_area) > 240) {
 442:lvgl/src/lv_draw/lv_draw_blend.c ****             lv_gpu_stm32_dma2d_fill_mask(disp_buf_first, disp_w, color, mask, opa, draw_area_w, dra
 443:lvgl/src/lv_draw/lv_draw_blend.c ****             return;
 444:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 445:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 446:lvgl/src/lv_draw/lv_draw_blend.c **** 
 447:lvgl/src/lv_draw/lv_draw_blend.c ****         /*Buffer the result color to avoid recalculating the same color*/
 448:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_dest_color;
 449:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 450:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 451:lvgl/src/lv_draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 452:lvgl/src/lv_draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_first[0].full;
 453:lvgl/src/lv_draw/lv_draw_blend.c **** 
 454:lvgl/src/lv_draw/lv_draw_blend.c ****         int32_t x_end4 = draw_area_w - 4;
 455:lvgl/src/lv_draw/lv_draw_blend.c **** 
 456:lvgl/src/lv_draw/lv_draw_blend.c ****         /*Only the mask matters*/
 457:lvgl/src/lv_draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 458:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 459:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 460:lvgl/src/lv_draw/lv_draw_blend.c **** #if 0
 461:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 462:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 463:lvgl/src/lv_draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 464:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 465:lvgl/src/lv_draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(x, color)
 466:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 467:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 468:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 469:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)mask_tmp_x & 0x3); x++) {
 470:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 471:lvgl/src/lv_draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 472:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 473:lvgl/src/lv_draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(x, color)
 474:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 475:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 476:lvgl/src/lv_draw/lv_draw_blend.c **** 
 477:lvgl/src/lv_draw/lv_draw_blend.c ****                 uint32_t * mask32 = (uint32_t *) mask_tmp_x;
 478:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(; x <= x_end4; x += 4) {
 479:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(*mask32) {
 480:lvgl/src/lv_draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 481:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x] = color;
 482:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = color;
 483:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 484:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 485:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 486:lvgl/src/lv_draw/lv_draw_blend.c ****                         else {
ARM GAS  D:\Temp\ccohqSTj.s 			page 10


 487:lvgl/src/lv_draw/lv_draw_blend.c ****                             mask_tmp_x = (const lv_opa_t *)mask32;
 488:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 489:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 490:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x + 1, color)
 491:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x + 2, color)
 492:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX_SCR_TRANSP(x + 3, color)
 493:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 494:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x, color)
 495:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 496:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 497:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 498:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 499:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 500:lvgl/src/lv_draw/lv_draw_blend.c ****                     }
 501:lvgl/src/lv_draw/lv_draw_blend.c ****                     mask32++;
 502:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 503:lvgl/src/lv_draw/lv_draw_blend.c **** 
 504:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask_tmp_x = (const lv_opa_t *)mask32;
 505:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(; x < draw_area_w ; x++) {
 506:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 507:lvgl/src/lv_draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX_SCR_TRANSP(x, color)
 508:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 509:lvgl/src/lv_draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(x, color)
 510:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 511:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 512:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 513:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 514:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 515:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 516:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 517:lvgl/src/lv_draw/lv_draw_blend.c ****         /*Handle opa and mask values too*/
 518:lvgl/src/lv_draw/lv_draw_blend.c ****         else {
 519:lvgl/src/lv_draw/lv_draw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 520:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 521:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 522:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 523:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 524:lvgl/src/lv_draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 525:lvgl/src/lv_draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 526:lvgl/src/lv_draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask || last_dest_color.full != disp_buf_first[x].fu
 527:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 528:lvgl/src/lv_draw/lv_draw_blend.c ****                             if(disp->driver.screen_transp) {
 529:lvgl/src/lv_draw/lv_draw_blend.c ****                                 lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alp
 530:lvgl/src/lv_draw/lv_draw_blend.c ****                                                         &last_res_color.ch.alpha);
 531:lvgl/src/lv_draw/lv_draw_blend.c ****                             }
 532:lvgl/src/lv_draw/lv_draw_blend.c ****                             else
 533:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 534:lvgl/src/lv_draw/lv_draw_blend.c ****                             {
 535:lvgl/src/lv_draw/lv_draw_blend.c ****                                 if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 536:lvgl/src/lv_draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 537:lvgl/src/lv_draw/lv_draw_blend.c ****                             }
 538:lvgl/src/lv_draw/lv_draw_blend.c ****                             last_mask = *mask_tmp_x;
 539:lvgl/src/lv_draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 540:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 541:lvgl/src/lv_draw/lv_draw_blend.c ****                         disp_buf_first[x] = last_res_color;
 542:lvgl/src/lv_draw/lv_draw_blend.c ****                     }
 543:lvgl/src/lv_draw/lv_draw_blend.c ****                     mask_tmp_x++;
ARM GAS  D:\Temp\ccohqSTj.s 			page 11


 544:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 545:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 546:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 547:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 548:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 549:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 550:lvgl/src/lv_draw/lv_draw_blend.c **** }
 551:lvgl/src/lv_draw/lv_draw_blend.c **** 
 552:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_BLEND_MODES
 553:lvgl/src/lv_draw/lv_draw_blend.c **** /**
 554:lvgl/src/lv_draw/lv_draw_blend.c ****  * Fill an area with a color but apply blending algorithms
 555:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
 556:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 557:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param draw_area fill this area (relative to `disp_area`)
 558:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param color fill color
 559:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 560:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 561:lvgl/src/lv_draw/lv_draw_blend.c ****  *                It fits into draw_area.
 562:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 563:lvgl/src/lv_draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 564:lvgl/src/lv_draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 565:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 566:lvgl/src/lv_draw/lv_draw_blend.c ****  */
 567:lvgl/src/lv_draw/lv_draw_blend.c **** static void fill_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * dra
 568:lvgl/src/lv_draw/lv_draw_blend.c ****                          lv_color_t color, lv_opa_t opa,
 569:lvgl/src/lv_draw/lv_draw_blend.c ****                          const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode)
 570:lvgl/src/lv_draw/lv_draw_blend.c **** {
 571:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 572:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 573:lvgl/src/lv_draw/lv_draw_blend.c **** 
 574:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to current line to draw*/
 575:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t * disp_buf_tmp = disp_buf + disp_w * draw_area->y1;
 576:lvgl/src/lv_draw/lv_draw_blend.c **** 
 577:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 578:lvgl/src/lv_draw/lv_draw_blend.c ****     switch(mode) {
 579:lvgl/src/lv_draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 580:lvgl/src/lv_draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_additive;
 581:lvgl/src/lv_draw/lv_draw_blend.c ****             break;
 582:lvgl/src/lv_draw/lv_draw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 583:lvgl/src/lv_draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 584:lvgl/src/lv_draw/lv_draw_blend.c ****             break;
 585:lvgl/src/lv_draw/lv_draw_blend.c ****         default:
 586:lvgl/src/lv_draw/lv_draw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 587:lvgl/src/lv_draw/lv_draw_blend.c ****             return;
 588:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 589:lvgl/src/lv_draw/lv_draw_blend.c **** 
 590:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t x;
 591:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t y;
 592:lvgl/src/lv_draw/lv_draw_blend.c **** 
 593:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 594:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 595:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_dest_color = LV_COLOR_BLACK;
 596:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 597:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 598:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 599:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 600:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
ARM GAS  D:\Temp\ccohqSTj.s 			page 12


 601:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 602:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 603:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = last_res_color;
 604:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 605:lvgl/src/lv_draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 606:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 607:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 608:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Masked*/
 609:lvgl/src/lv_draw/lv_draw_blend.c ****     else {
 610:lvgl/src/lv_draw/lv_draw_blend.c ****         /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 611:lvgl/src/lv_draw/lv_draw_blend.c ****         int32_t draw_area_w = lv_area_get_width(draw_area);
 612:lvgl/src/lv_draw/lv_draw_blend.c **** 
 613:lvgl/src/lv_draw/lv_draw_blend.c ****         /* The mask is relative to the clipped area.
 614:lvgl/src/lv_draw/lv_draw_blend.c ****          * In the cycles below mask will be indexed from `draw_area.x1`
 615:lvgl/src/lv_draw/lv_draw_blend.c ****          * but it corresponds to zero index. So prepare `mask_tmp` accordingly. */
 616:lvgl/src/lv_draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 617:lvgl/src/lv_draw/lv_draw_blend.c **** 
 618:lvgl/src/lv_draw/lv_draw_blend.c ****         /*Buffer the result color to avoid recalculating the same color*/
 619:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_dest_color;
 620:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 621:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 622:lvgl/src/lv_draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 623:lvgl/src/lv_draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 624:lvgl/src/lv_draw/lv_draw_blend.c **** 
 625:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 626:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 627:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 628:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 629:lvgl/src/lv_draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 630:lvgl/src/lv_draw/lv_draw_blend.c **** 
 631:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa_tmp);
 632:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 633:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 634:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 635:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = last_res_color;
 636:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 637:lvgl/src/lv_draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 638:lvgl/src/lv_draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 639:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 640:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 641:lvgl/src/lv_draw/lv_draw_blend.c **** }
 642:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 643:lvgl/src/lv_draw/lv_draw_blend.c **** 
 644:lvgl/src/lv_draw/lv_draw_blend.c **** static void map_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_
 645:lvgl/src/lv_draw/lv_draw_blend.c ****                        const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
 646:lvgl/src/lv_draw/lv_draw_blend.c ****                        const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 647:lvgl/src/lv_draw/lv_draw_blend.c **** 
 648:lvgl/src/lv_draw/lv_draw_blend.c **** {
 649:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 650:lvgl/src/lv_draw/lv_draw_blend.c **** 
 651:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 652:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 653:lvgl/src/lv_draw/lv_draw_blend.c **** 
 654:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 655:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 656:lvgl/src/lv_draw/lv_draw_blend.c **** 
 657:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
ARM GAS  D:\Temp\ccohqSTj.s 			page 13


 658:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
 659:lvgl/src/lv_draw/lv_draw_blend.c **** 
 660:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to current line to draw*/
 661:lvgl/src/lv_draw/lv_draw_blend.c ****     const lv_color_t * map_buf_tmp = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area->
 662:lvgl/src/lv_draw/lv_draw_blend.c **** 
 663:lvgl/src/lv_draw/lv_draw_blend.c ****     map_buf_tmp += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 664:lvgl/src/lv_draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 665:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t x;
 666:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t y;
 667:lvgl/src/lv_draw/lv_draw_blend.c **** 
 668:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 669:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 670:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 671:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 672:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 673:lvgl/src/lv_draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 674:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 675:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 676:lvgl/src/lv_draw/lv_draw_blend.c ****     else {
 677:lvgl/src/lv_draw/lv_draw_blend.c ****         /* The mask is relative to the clipped area.
 678:lvgl/src/lv_draw/lv_draw_blend.c ****          * In the cycles below mask will be indexed from `draw_area.x1`
 679:lvgl/src/lv_draw/lv_draw_blend.c ****          * but it corresponds to zero index. So prepare `mask_tmp` accordingly. */
 680:lvgl/src/lv_draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 681:lvgl/src/lv_draw/lv_draw_blend.c **** 
 682:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 683:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 684:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 685:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 686:lvgl/src/lv_draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 687:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 688:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 689:lvgl/src/lv_draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 690:lvgl/src/lv_draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 691:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 692:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 693:lvgl/src/lv_draw/lv_draw_blend.c **** }
 694:lvgl/src/lv_draw/lv_draw_blend.c **** 
 695:lvgl/src/lv_draw/lv_draw_blend.c **** /**
 696:lvgl/src/lv_draw/lv_draw_blend.c ****  * Copy an image to an area
 697:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
 698:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 699:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param map_area coordinates of the map (image) to copy. (absolute coordinates)
 700:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param map_buf the pixel of the image
 701:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 702:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 703:lvgl/src/lv_draw/lv_draw_blend.c ****  *                It fits into draw_area.
 704:lvgl/src/lv_draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 705:lvgl/src/lv_draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 706:lvgl/src/lv_draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 707:lvgl/src/lv_draw/lv_draw_blend.c ****  */
 708:lvgl/src/lv_draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
 709:lvgl/src/lv_draw/lv_draw_blend.c ****                                              const lv_area_t * draw_area,
 710:lvgl/src/lv_draw/lv_draw_blend.c ****                                              const lv_area_t * map_area, const lv_color_t * map_buf
 711:lvgl/src/lv_draw/lv_draw_blend.c ****                                              const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 712:lvgl/src/lv_draw/lv_draw_blend.c **** {
 713:lvgl/src/lv_draw/lv_draw_blend.c **** 
 714:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
ARM GAS  D:\Temp\ccohqSTj.s 			page 14


 715:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 716:lvgl/src/lv_draw/lv_draw_blend.c **** 
 717:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 718:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 719:lvgl/src/lv_draw/lv_draw_blend.c **** 
 720:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
 721:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
 722:lvgl/src/lv_draw/lv_draw_blend.c **** 
 723:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to first pixel to draw*/
 724:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t * disp_buf_first = disp_buf + disp_w * draw_area->y1 + draw_area->x1;
 725:lvgl/src/lv_draw/lv_draw_blend.c **** 
 726:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to first pixel to draw from the map*/
 727:lvgl/src/lv_draw/lv_draw_blend.c ****     const lv_color_t * map_buf_first = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area
 728:lvgl/src/lv_draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 729:lvgl/src/lv_draw/lv_draw_blend.c **** 
 730:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP || LV_USE_GPU
 731:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 732:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 733:lvgl/src/lv_draw/lv_draw_blend.c **** 
 734:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t x;
 735:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t y;
 736:lvgl/src/lv_draw/lv_draw_blend.c **** 
 737:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 738:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 739:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU
 740:lvgl/src/lv_draw/lv_draw_blend.c ****         if(disp->driver.gpu_blend_cb && (lv_area_get_size(draw_area) > GPU_SIZE_LIMIT)) {
 741:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 742:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, map_buf_first, draw_area_w
 743:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 744:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 745:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 746:lvgl/src/lv_draw/lv_draw_blend.c ****             return;
 747:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 748:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 749:lvgl/src/lv_draw/lv_draw_blend.c **** 
 750:lvgl/src/lv_draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 751:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 752:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_BLIT_SIZE_LIMIT) {
 753:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_blit(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, draw
 754:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 755:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 756:lvgl/src/lv_draw/lv_draw_blend.c **** #elif (LV_USE_GPU_NXP_VG_LITE)
 757:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_BLIT_SIZE_LIMIT) {
 758:lvgl/src/lv_draw/lv_draw_blend.c **** 
 759:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_gpu_nxp_vglite_blit_info_t blit;
 760:lvgl/src/lv_draw/lv_draw_blend.c **** 
 761:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src = map_buf;
 762:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_width = draw_area_w;
 763:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_height = draw_area_h;
 764:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_stride = lv_area_get_width(map_area) * sizeof(lv_color_t);
 765:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_area.x1 = (draw_area->x1 - (map_area->x1 - disp_area->x1));
 766:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_area.y1 = (draw_area->y1 - (map_area->y1 - disp_area->y1));
 767:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_area.x2 = blit.src_area.x1 + draw_area_w;
 768:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_area.y2 = blit.src_area.y1 + draw_area_h;
 769:lvgl/src/lv_draw/lv_draw_blend.c **** 
 770:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst = disp_buf;
 771:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_width = lv_area_get_width(disp_area);
ARM GAS  D:\Temp\ccohqSTj.s 			page 15


 772:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_height = lv_area_get_height(disp_area);
 773:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_stride = lv_area_get_width(disp_area) * sizeof(lv_color_t);
 774:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_area.x1 = draw_area->x1;
 775:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_area.y1 = draw_area->y1;
 776:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_area.x2 = blit.dst_area.x1 + draw_area_w;
 777:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_area.y2 = blit.dst_area.y1 + draw_area_h;
 778:lvgl/src/lv_draw/lv_draw_blend.c **** 
 779:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.opa = opa;
 780:lvgl/src/lv_draw/lv_draw_blend.c **** 
 781:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_blit(&blit) == LV_RES_OK) {
 782:lvgl/src/lv_draw/lv_draw_blend.c ****                     return;
 783:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 784:lvgl/src/lv_draw/lv_draw_blend.c ****                 /* Fall down to SW render in case of error */
 785:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 786:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 787:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 788:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_copy(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, 
 789:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 790:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 791:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 792:lvgl/src/lv_draw/lv_draw_blend.c **** 
 793:lvgl/src/lv_draw/lv_draw_blend.c ****             /*Software rendering*/
 794:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 795:lvgl/src/lv_draw/lv_draw_blend.c ****                 _lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 796:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 797:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 798:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 799:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 800:lvgl/src/lv_draw/lv_draw_blend.c ****         else {
 801:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 802:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_BLIT_OPA_SIZE_LIMIT) {
 803:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_blit(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, draw
 804:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 805:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 806:lvgl/src/lv_draw/lv_draw_blend.c **** #elif (LV_USE_GPU_NXP_VG_LITE)
 807:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_BLIT_OPA_SIZE_LIMIT) {
 808:lvgl/src/lv_draw/lv_draw_blend.c **** 
 809:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_gpu_nxp_vglite_blit_info_t blit;
 810:lvgl/src/lv_draw/lv_draw_blend.c **** 
 811:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src = map_buf;
 812:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_width = lv_area_get_width(map_area);
 813:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_height = lv_area_get_height(map_area);
 814:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_stride = lv_area_get_width(map_area) * sizeof(lv_color_t);
 815:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_area.x1 = (draw_area->x1 - (map_area->x1 - disp_area->x1));
 816:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_area.y1 = (draw_area->y1 - (map_area->y1 - disp_area->y1));
 817:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_area.x2 = blit.src_area.x1 + draw_area_w;
 818:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.src_area.y2 = blit.src_area.y1 + draw_area_h;
 819:lvgl/src/lv_draw/lv_draw_blend.c **** 
 820:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst = disp_buf;
 821:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_width = lv_area_get_width(disp_area);
 822:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_height = lv_area_get_height(disp_area);
 823:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_stride = lv_area_get_width(disp_area) * sizeof(lv_color_t);
 824:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_area.x1 = draw_area->x1;
 825:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_area.y1 = draw_area->y1;
 826:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_area.x2 = blit.dst_area.x1 + draw_area_w;
 827:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.dst_area.y2 = blit.dst_area.y1 + draw_area_h;
 828:lvgl/src/lv_draw/lv_draw_blend.c **** 
ARM GAS  D:\Temp\ccohqSTj.s 			page 16


 829:lvgl/src/lv_draw/lv_draw_blend.c ****                 blit.opa = opa;
 830:lvgl/src/lv_draw/lv_draw_blend.c **** 
 831:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_blit(&blit) == LV_RES_OK) {
 832:lvgl/src/lv_draw/lv_draw_blend.c ****                     return;
 833:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 834:lvgl/src/lv_draw/lv_draw_blend.c ****                 /* Fall down to SW render in case of error */
 835:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 836:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 837:lvgl/src/lv_draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 838:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_blend(disp_buf_first, disp_w, map_buf_first, opa, map_w, draw_ar
 839:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 840:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 841:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 842:lvgl/src/lv_draw/lv_draw_blend.c **** 
 843:lvgl/src/lv_draw/lv_draw_blend.c ****             /*Software rendering*/
 844:lvgl/src/lv_draw/lv_draw_blend.c **** 
 845:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 846:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 847:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 848:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(disp->driver.screen_transp) {
 849:lvgl/src/lv_draw/lv_draw_blend.c ****                         lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, map_
 850:lvgl/src/lv_draw/lv_draw_blend.c ****                                                 &disp_buf_first[x].ch.alpha);
 851:lvgl/src/lv_draw/lv_draw_blend.c ****                     }
 852:lvgl/src/lv_draw/lv_draw_blend.c ****                     else
 853:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 854:lvgl/src/lv_draw/lv_draw_blend.c ****                     {
 855:lvgl/src/lv_draw/lv_draw_blend.c ****                         disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], opa);
 856:lvgl/src/lv_draw/lv_draw_blend.c ****                     }
 857:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 858:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 859:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 860:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 861:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 862:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 863:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Masked*/
 864:lvgl/src/lv_draw/lv_draw_blend.c ****     else {
 865:lvgl/src/lv_draw/lv_draw_blend.c ****         /*Only the mask matters*/
 866:lvgl/src/lv_draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 867:lvgl/src/lv_draw/lv_draw_blend.c ****             /*Go to the first pixel of the row */
 868:lvgl/src/lv_draw/lv_draw_blend.c **** 
 869:lvgl/src/lv_draw/lv_draw_blend.c ****             int32_t x_end4 = draw_area_w - 4;
 870:lvgl/src/lv_draw/lv_draw_blend.c **** 
 871:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 872:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 873:lvgl/src/lv_draw/lv_draw_blend.c **** #if 0
 874:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 875:lvgl/src/lv_draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x);
 876:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 877:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 878:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)mask_tmp_x & 0x3); x++) {
 879:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 880:lvgl/src/lv_draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 881:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 882:lvgl/src/lv_draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 883:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 884:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 885:lvgl/src/lv_draw/lv_draw_blend.c **** 
ARM GAS  D:\Temp\ccohqSTj.s 			page 17


 886:lvgl/src/lv_draw/lv_draw_blend.c ****                 uint32_t * mask32 = (uint32_t *) mask_tmp_x;
 887:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(; x < x_end4; x += 4) {
 888:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(*mask32) {
 889:lvgl/src/lv_draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 890:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 891:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
 892:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 893:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 894:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 895:lvgl/src/lv_draw/lv_draw_blend.c ****                         else {
 896:lvgl/src/lv_draw/lv_draw_blend.c ****                             mask_tmp_x = (const lv_opa_t *)mask32;
 897:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 898:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 899:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 1)
 900:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 2)
 901:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 3)
 902:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 903:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x)
 904:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 905:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 906:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 907:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 908:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 909:lvgl/src/lv_draw/lv_draw_blend.c ****                     }
 910:lvgl/src/lv_draw/lv_draw_blend.c ****                     mask32++;
 911:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 912:lvgl/src/lv_draw/lv_draw_blend.c **** 
 913:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask_tmp_x = (const lv_opa_t *)mask32;
 914:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(; x < draw_area_w ; x++) {
 915:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 916:lvgl/src/lv_draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 917:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 918:lvgl/src/lv_draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 919:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 920:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 921:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 922:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 923:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 924:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 925:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 926:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 927:lvgl/src/lv_draw/lv_draw_blend.c ****         /*Handle opa and mask values too*/
 928:lvgl/src/lv_draw/lv_draw_blend.c ****         else {
 929:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 930:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 931:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(mask[x]) {
 932:lvgl/src/lv_draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 933:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 934:lvgl/src/lv_draw/lv_draw_blend.c ****                         if(disp->driver.screen_transp) {
 935:lvgl/src/lv_draw/lv_draw_blend.c ****                             lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, 
 936:lvgl/src/lv_draw/lv_draw_blend.c ****                                                     &disp_buf_first[x].ch.alpha);
 937:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 938:lvgl/src/lv_draw/lv_draw_blend.c ****                         else
 939:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 940:lvgl/src/lv_draw/lv_draw_blend.c ****                         {
 941:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], o
 942:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
ARM GAS  D:\Temp\ccohqSTj.s 			page 18


 943:lvgl/src/lv_draw/lv_draw_blend.c ****                     }
 944:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 945:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 946:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 947:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 948:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 949:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 950:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 951:lvgl/src/lv_draw/lv_draw_blend.c **** }
 952:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_BLEND_MODES
 953:lvgl/src/lv_draw/lv_draw_blend.c **** static void map_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
 954:lvgl/src/lv_draw/lv_draw_blend.c ****                         const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
 955:lvgl/src/lv_draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode)
 956:lvgl/src/lv_draw/lv_draw_blend.c **** {
  29              		.loc 1 956 1 view -0
  30              		.cfi_startproc
  31              		@ args = 20, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 956 1 is_stmt 0 view .LVU1
  34 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 36
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 85B0     		sub	sp, sp, #20
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 56
  49 0006 9DF83C40 		ldrb	r4, [sp, #60]	@ zero_extendqisi2
  50 000a 0094     		str	r4, [sp]
  51 000c 9DF84870 		ldrb	r7, [sp, #72]	@ zero_extendqisi2
 957:lvgl/src/lv_draw/lv_draw_blend.c **** 
 958:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 959:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
  52              		.loc 1 959 5 is_stmt 1 view .LVU2
  53              	.LVL1:
  54              	.LBB59:
  55              	.LBI59:
  56              		.file 2 "lvgl/src/lv_draw/../lv_misc/lv_area.h"
   1:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
   2:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *
   4:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
   5:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
   6:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
   9:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/lv_draw/../lv_misc/lv_area.h **** extern "C" {
  11:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #endif
  12:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
ARM GAS  D:\Temp\ccohqSTj.s 			page 19


  13:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /*********************
  14:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *********************/
  16:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #include <string.h>
  18:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #include <stdbool.h>
  19:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #include <stdint.h>
  20:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #include "lv_mem.h"
  21:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  22:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /*********************
  23:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *      DEFINES
  24:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *********************/
  25:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /*To avoid overflow don't let the max ranges (reduce with 1000) */
  26:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - 1000))
  27:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  28:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  29:lvgl/src/lv_draw/../lv_misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  30:lvgl/src/lv_draw/../lv_misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  31:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  32:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**********************
  33:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *      TYPEDEFS
  34:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  **********************/
  35:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  36:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
  37:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * Represents a point on the screen.
  38:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
  39:lvgl/src/lv_draw/../lv_misc/lv_area.h **** typedef struct {
  40:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t x;
  41:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t y;
  42:lvgl/src/lv_draw/../lv_misc/lv_area.h **** } lv_point_t;
  43:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  44:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /** Represents an area of the screen. */
  45:lvgl/src/lv_draw/../lv_misc/lv_area.h **** typedef struct {
  46:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t x1;
  47:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t y1;
  48:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t x2;
  49:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t y2;
  50:lvgl/src/lv_draw/../lv_misc/lv_area.h **** } lv_area_t;
  51:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  52:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /** Alignments */
  53:lvgl/src/lv_draw/../lv_misc/lv_area.h **** enum {
  54:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_CENTER = 0,
  55:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_TOP_LEFT,
  56:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_TOP_MID,
  57:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_TOP_RIGHT,
  58:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_BOTTOM_LEFT,
  59:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_BOTTOM_MID,
  60:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_BOTTOM_RIGHT,
  61:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_LEFT_MID,
  62:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_RIGHT_MID,
  63:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
ARM GAS  D:\Temp\ccohqSTj.s 			page 20


  70:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/lv_draw/../lv_misc/lv_area.h **** };
  76:lvgl/src/lv_draw/../lv_misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  78:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**********************
  79:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * GLOBAL PROTOTYPES
  80:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  **********************/
  81:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  82:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
  83:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * Initialize an area
  84:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param area_p pointer to an area
  85:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param x1 left coordinate of the area
  86:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param y1 top coordinate of the area
  87:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param x2 right coordinate of the area
  88:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param y2 bottom coordinate of the area
  89:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
  90:lvgl/src/lv_draw/../lv_misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
  91:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  92:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
  93:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * Copy an area
  94:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param dest pointer to the destination area
  95:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param src pointer to the source area
  96:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
  97:lvgl/src/lv_draw/../lv_misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
  98:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
  99:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     _lv_memcpy_small(dest, src, sizeof(lv_area_t));
 100:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 101:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
 102:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
 103:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * Get the width of an area
 104:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param area_p pointer to an area
 105:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 106:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
  57              		.loc 2 107 26 view .LVU3
  58              	.LBB60:
 108:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
  59              		.loc 2 109 5 view .LVU4
  60              		.loc 2 109 31 is_stmt 0 view .LVU5
  61 0010 8488     		ldrh	r4, [r0, #4]
  62              		.loc 2 109 44 view .LVU6
  63 0012 B0F900C0 		ldrsh	ip, [r0]
  64 0016 1FFA8CF5 		uxth	r5, ip
  65              		.loc 2 109 36 view .LVU7
  66 001a 641B     		subs	r4, r4, r5
  67 001c A4B2     		uxth	r4, r4
  68              		.loc 2 109 49 view .LVU8
  69 001e 0134     		adds	r4, r4, #1
  70              		.loc 2 109 12 view .LVU9
  71 0020 24B2     		sxth	r4, r4
  72 0022 0294     		str	r4, [sp, #8]
  73              	.LVL2:
ARM GAS  D:\Temp\ccohqSTj.s 			page 21


  74              		.loc 2 109 12 view .LVU10
  75              	.LBE60:
  76              	.LBE59:
 960:lvgl/src/lv_draw/lv_draw_blend.c **** 
 961:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 962:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
  77              		.loc 1 962 5 is_stmt 1 view .LVU11
  78              	.LBB61:
  79              	.LBI61:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
  80              		.loc 2 107 26 view .LVU12
  81              	.LBB62:
  82              		.loc 2 109 5 view .LVU13
  83              		.loc 2 109 31 is_stmt 0 view .LVU14
  84 0024 9588     		ldrh	r5, [r2, #4]
  85              		.loc 2 109 44 view .LVU15
  86 0026 B2F90040 		ldrsh	r4, [r2]
  87              	.LVL3:
  88              		.loc 2 109 44 view .LVU16
  89 002a A6B2     		uxth	r6, r4
  90              		.loc 2 109 36 view .LVU17
  91 002c AD1B     		subs	r5, r5, r6
  92 002e ADB2     		uxth	r5, r5
  93              		.loc 2 109 49 view .LVU18
  94 0030 0135     		adds	r5, r5, #1
  95              		.loc 2 109 12 view .LVU19
  96 0032 2EB2     		sxth	r6, r5
  97 0034 0396     		str	r6, [sp, #12]
  98              	.LVL4:
  99              		.loc 2 109 12 view .LVU20
 100              	.LBE62:
 101              	.LBE61:
 963:lvgl/src/lv_draw/lv_draw_blend.c **** 
 964:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
 965:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
 102              		.loc 1 965 5 is_stmt 1 view .LVU21
 103              	.LBB63:
 104              	.LBI63:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 105              		.loc 2 107 26 view .LVU22
 106              	.LBB64:
 107              		.loc 2 109 5 view .LVU23
 108              		.loc 2 109 31 is_stmt 0 view .LVU24
 109 0036 9D88     		ldrh	r5, [r3, #4]
 110              		.loc 2 109 44 view .LVU25
 111 0038 B3F900E0 		ldrsh	lr, [r3]
 112 003c 1FFA8EF6 		uxth	r6, lr
 113              		.loc 2 109 36 view .LVU26
 114 0040 AD1B     		subs	r5, r5, r6
 115 0042 ADB2     		uxth	r5, r5
 116              		.loc 2 109 49 view .LVU27
 117 0044 0135     		adds	r5, r5, #1
 118              		.loc 2 109 12 view .LVU28
 119 0046 2EB2     		sxth	r6, r5
 120 0048 0196     		str	r6, [sp, #4]
 121              	.LVL5:
 122              		.loc 2 109 12 view .LVU29
ARM GAS  D:\Temp\ccohqSTj.s 			page 22


 123              	.LBE64:
 124              	.LBE63:
 966:lvgl/src/lv_draw/lv_draw_blend.c **** 
 967:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to current line to draw*/
 968:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t * disp_buf_tmp = disp_buf + disp_w * draw_area->y1;
 125              		.loc 1 968 5 is_stmt 1 view .LVU30
 126              		.loc 1 968 62 is_stmt 0 view .LVU31
 127 004a B2F902B0 		ldrsh	fp, [r2, #2]
 128              		.loc 1 968 51 view .LVU32
 129 004e 029D     		ldr	r5, [sp, #8]
 130 0050 05FB0BF6 		mul	r6, r5, fp
 131              	.LVL6:
 132              		.loc 1 968 18 view .LVU33
 133 0054 01EB4606 		add	r6, r1, r6, lsl #1
 134              	.LVL7:
 969:lvgl/src/lv_draw/lv_draw_blend.c **** 
 970:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to current line to draw*/
 971:lvgl/src/lv_draw/lv_draw_blend.c ****     const lv_color_t * map_buf_tmp = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area->
 135              		.loc 1 971 5 is_stmt 1 view .LVU34
 136              		.loc 1 971 82 is_stmt 0 view .LVU35
 137 0058 B3F90230 		ldrsh	r3, [r3, #2]
 138              	.LVL8:
 139              		.loc 1 971 98 view .LVU36
 140 005c B0F90250 		ldrsh	r5, [r0, #2]
 141              		.loc 1 971 87 view .LVU37
 142 0060 5D1B     		subs	r5, r3, r5
 143              		.loc 1 971 71 view .LVU38
 144 0062 ABEB0505 		sub	r5, fp, r5
 145              		.loc 1 971 54 view .LVU39
 146 0066 019B     		ldr	r3, [sp, #4]
 147 0068 03FB05F5 		mul	r5, r3, r5
 148              		.loc 1 971 24 view .LVU40
 149 006c 0E9B     		ldr	r3, [sp, #56]
 150 006e 03EB4505 		add	r5, r3, r5, lsl #1
 151              	.LVL9:
 972:lvgl/src/lv_draw/lv_draw_blend.c **** 
 973:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 152              		.loc 1 973 5 is_stmt 1 view .LVU41
 974:lvgl/src/lv_draw/lv_draw_blend.c ****     switch(mode) {
 153              		.loc 1 974 5 view .LVU42
 154 0072 012F     		cmp	r7, #1
 155 0074 0ED0     		beq	.L15
 156 0076 022F     		cmp	r7, #2
 157 0078 5CD1     		bne	.L1
 975:lvgl/src/lv_draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 976:lvgl/src/lv_draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_additive;
 977:lvgl/src/lv_draw/lv_draw_blend.c ****             break;
 978:lvgl/src/lv_draw/lv_draw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 979:lvgl/src/lv_draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 158              		.loc 1 979 22 is_stmt 0 view .LVU43
 159 007a DFF8C0A0 		ldr	r10, .L21
 160              	.L2:
 161 007e 1746     		mov	r7, r2
 162              	.LVL10:
 980:lvgl/src/lv_draw/lv_draw_blend.c ****             break;
 981:lvgl/src/lv_draw/lv_draw_blend.c ****         default:
 982:lvgl/src/lv_draw/lv_draw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
ARM GAS  D:\Temp\ccohqSTj.s 			page 23


 983:lvgl/src/lv_draw/lv_draw_blend.c ****             return;
 984:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 985:lvgl/src/lv_draw/lv_draw_blend.c **** 
 986:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t x;
 163              		.loc 1 986 5 is_stmt 1 view .LVU44
 987:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t y;
 164              		.loc 1 987 5 view .LVU45
 988:lvgl/src/lv_draw/lv_draw_blend.c **** 
 989:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 990:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 165              		.loc 1 990 5 view .LVU46
 166              		.loc 1 990 7 is_stmt 0 view .LVU47
 167 0080 9DF84430 		ldrb	r3, [sp, #68]	@ zero_extendqisi2
 168 0084 012B     		cmp	r3, #1
 169 0086 08D0     		beq	.L18
 170              	.LBB65:
 991:lvgl/src/lv_draw/lv_draw_blend.c ****         /*Go to the first px of the row*/
 992:lvgl/src/lv_draw/lv_draw_blend.c ****         map_buf_tmp += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 993:lvgl/src/lv_draw/lv_draw_blend.c **** 
 994:lvgl/src/lv_draw/lv_draw_blend.c ****         /*The map will be indexed from `draw_area->x1` so compensate it.*/
 995:lvgl/src/lv_draw/lv_draw_blend.c ****         map_buf_tmp -= draw_area->x1;
 996:lvgl/src/lv_draw/lv_draw_blend.c **** 
 997:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 998:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 999:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
1000:lvgl/src/lv_draw/lv_draw_blend.c ****             }
1001:lvgl/src/lv_draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
1002:lvgl/src/lv_draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
1003:lvgl/src/lv_draw/lv_draw_blend.c ****         }
1004:lvgl/src/lv_draw/lv_draw_blend.c ****     }
1005:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Masked*/
1006:lvgl/src/lv_draw/lv_draw_blend.c ****     else {
1007:lvgl/src/lv_draw/lv_draw_blend.c ****         /* The mask is relative to the clipped area.
1008:lvgl/src/lv_draw/lv_draw_blend.c ****          * In the cycles below mask will be indexed from `draw_area.x1`
1009:lvgl/src/lv_draw/lv_draw_blend.c ****          * but it corresponds to zero index. So prepare `mask_tmp` accordingly. */
1010:lvgl/src/lv_draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 171              		.loc 1 1010 9 is_stmt 1 view .LVU48
 172              		.loc 1 1010 26 is_stmt 0 view .LVU49
 173 0088 109B     		ldr	r3, [sp, #64]
 174 008a A3EB0409 		sub	r9, r3, r4
 175              	.LVL11:
1011:lvgl/src/lv_draw/lv_draw_blend.c **** 
1012:lvgl/src/lv_draw/lv_draw_blend.c ****         map_buf_tmp -= draw_area->x1;
 176              		.loc 1 1012 9 is_stmt 1 view .LVU50
 177              		.loc 1 1012 21 is_stmt 0 view .LVU51
 178 008e A5EB4408 		sub	r8, r5, r4, lsl #1
 179              	.LVL12:
1013:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 180              		.loc 1 1013 9 is_stmt 1 view .LVU52
 181              		.loc 1 1013 9 is_stmt 0 view .LVU53
 182 0092 48E0     		b	.L9
 183              	.LVL13:
 184              	.L15:
 185              		.loc 1 1013 9 view .LVU54
 186              	.LBE65:
 976:lvgl/src/lv_draw/lv_draw_blend.c ****             break;
 187              		.loc 1 976 22 view .LVU55
ARM GAS  D:\Temp\ccohqSTj.s 			page 24


 188 0094 DFF8A8A0 		ldr	r10, .L21+4
 189 0098 F1E7     		b	.L2
 190              	.LVL14:
 191              	.L18:
 992:lvgl/src/lv_draw/lv_draw_blend.c **** 
 192              		.loc 1 992 9 is_stmt 1 view .LVU56
 995:lvgl/src/lv_draw/lv_draw_blend.c **** 
 193              		.loc 1 995 9 view .LVU57
 995:lvgl/src/lv_draw/lv_draw_blend.c **** 
 194              		.loc 1 995 21 is_stmt 0 view .LVU58
 195 009a ACEB0E0C 		sub	ip, ip, lr
 196 009e 05EB4C05 		add	r5, r5, ip, lsl #1
 197              	.LVL15:
 997:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 198              		.loc 1 997 9 is_stmt 1 view .LVU59
 997:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 199              		.loc 1 997 9 is_stmt 0 view .LVU60
 200 00a2 DDF80480 		ldr	r8, [sp, #4]
 201 00a6 DDF80890 		ldr	r9, [sp, #8]
 202 00aa 05E0     		b	.L5
 203              	.LVL16:
 204              	.L19:
1001:lvgl/src/lv_draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 205              		.loc 1 1001 13 is_stmt 1 discriminator 2 view .LVU61
1001:lvgl/src/lv_draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 206              		.loc 1 1001 26 is_stmt 0 discriminator 2 view .LVU62
 207 00ac 06EB4906 		add	r6, r6, r9, lsl #1
 208              	.LVL17:
1002:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 209              		.loc 1 1002 13 is_stmt 1 discriminator 2 view .LVU63
1002:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 210              		.loc 1 1002 25 is_stmt 0 discriminator 2 view .LVU64
 211 00b0 05EB4805 		add	r5, r5, r8, lsl #1
 212              	.LVL18:
 997:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 213              		.loc 1 997 53 discriminator 2 view .LVU65
 214 00b4 0BF1010B 		add	fp, fp, #1
 215              	.LVL19:
 216              	.L5:
 997:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 217              		.loc 1 997 46 discriminator 1 view .LVU66
 218 00b8 B7F90630 		ldrsh	r3, [r7, #6]
 997:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 219              		.loc 1 997 9 discriminator 1 view .LVU67
 220 00bc 5B45     		cmp	r3, fp
 221 00be 39DB     		blt	.L1
 998:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 222              		.loc 1 998 13 is_stmt 1 view .LVU68
 998:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 223              		.loc 1 998 30 is_stmt 0 view .LVU69
 224 00c0 B7F90040 		ldrsh	r4, [r7]
 225              	.LVL20:
 226              	.L6:
 998:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 227              		.loc 1 998 50 discriminator 1 view .LVU70
 228 00c4 B7F90430 		ldrsh	r3, [r7, #4]
 998:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
ARM GAS  D:\Temp\ccohqSTj.s 			page 25


 229              		.loc 1 998 13 discriminator 1 view .LVU71
 230 00c8 A342     		cmp	r3, r4
 231 00ca EFDB     		blt	.L19
 999:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 232              		.loc 1 999 17 is_stmt 1 discriminator 3 view .LVU72
 999:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 233              		.loc 1 999 35 is_stmt 0 discriminator 3 view .LVU73
 234 00cc 009A     		ldr	r2, [sp]
 235 00ce 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 236 00d2 35F81400 		ldrh	r0, [r5, r4, lsl #1]
 237 00d6 D047     		blx	r10
 238              	.LVL21:
 239 00d8 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 998:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 240              		.loc 1 998 57 discriminator 3 view .LVU74
 241 00dc 0134     		adds	r4, r4, #1
 242              	.LVL22:
 998:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 243              		.loc 1 998 57 discriminator 3 view .LVU75
 244 00de F1E7     		b	.L6
 245              	.LVL23:
 246              	.L16:
 247              	.LBB68:
 248              	.LBB66:
1014:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
1015:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
1016:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 249              		.loc 1 1016 26 view .LVU76
 250 00e0 009A     		ldr	r2, [sp]
 251              	.L12:
 252              	.LVL24:
1017:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 253              		.loc 1 1017 17 is_stmt 1 discriminator 4 view .LVU77
 254              		.loc 1 1017 35 is_stmt 0 discriminator 4 view .LVU78
 255 00e2 36F81510 		ldrh	r1, [r6, r5, lsl #1]
 256 00e6 38F81500 		ldrh	r0, [r8, r5, lsl #1]
 257 00ea D047     		blx	r10
 258              	.LVL25:
 259              		.loc 1 1017 35 discriminator 4 view .LVU79
 260 00ec 26F81500 		strh	r0, [r6, r5, lsl #1]	@ movhi
 261              	.L11:
 262              		.loc 1 1017 35 discriminator 4 view .LVU80
 263              	.LBE66:
1014:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 264              		.loc 1 1014 57 discriminator 2 view .LVU81
 265 00f0 0134     		adds	r4, r4, #1
 266              	.LVL26:
 267              	.L10:
1014:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 268              		.loc 1 1014 50 discriminator 1 view .LVU82
 269 00f2 B7F90430 		ldrsh	r3, [r7, #4]
1014:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 270              		.loc 1 1014 13 discriminator 1 view .LVU83
 271 00f6 A342     		cmp	r3, r4
 272 00f8 0BDB     		blt	.L20
 273              	.LBB67:
1015:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
ARM GAS  D:\Temp\ccohqSTj.s 			page 26


 274              		.loc 1 1015 17 is_stmt 1 view .LVU84
1015:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 275              		.loc 1 1015 28 is_stmt 0 view .LVU85
 276 00fa 2546     		mov	r5, r4
 277 00fc 19F80420 		ldrb	r2, [r9, r4]	@ zero_extendqisi2
1015:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 278              		.loc 1 1015 19 view .LVU86
 279 0100 002A     		cmp	r2, #0
 280 0102 F5D0     		beq	.L11
1016:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 281              		.loc 1 1016 17 is_stmt 1 view .LVU87
1016:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 282              		.loc 1 1016 26 is_stmt 0 view .LVU88
 283 0104 FC2A     		cmp	r2, #252
 284 0106 EBD8     		bhi	.L16
1016:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 285              		.loc 1 1016 76 discriminator 1 view .LVU89
 286 0108 009B     		ldr	r3, [sp]
 287 010a 02FB03F2 		mul	r2, r2, r3
1016:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 288              		.loc 1 1016 26 discriminator 1 view .LVU90
 289 010e 120A     		lsrs	r2, r2, #8
 290 0110 E7E7     		b	.L12
 291              	.L20:
1016:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 292              		.loc 1 1016 26 discriminator 1 view .LVU91
 293              	.LBE67:
1018:lvgl/src/lv_draw/lv_draw_blend.c ****             }
1019:lvgl/src/lv_draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 294              		.loc 1 1019 13 is_stmt 1 discriminator 2 view .LVU92
 295              		.loc 1 1019 26 is_stmt 0 discriminator 2 view .LVU93
 296 0112 029B     		ldr	r3, [sp, #8]
 297 0114 06EB4306 		add	r6, r6, r3, lsl #1
 298              	.LVL27:
1020:lvgl/src/lv_draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 299              		.loc 1 1020 13 is_stmt 1 discriminator 2 view .LVU94
 300              		.loc 1 1020 22 is_stmt 0 discriminator 2 view .LVU95
 301 0118 039B     		ldr	r3, [sp, #12]
 302 011a 9944     		add	r9, r9, r3
 303              	.LVL28:
1021:lvgl/src/lv_draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 304              		.loc 1 1021 13 is_stmt 1 discriminator 2 view .LVU96
 305              		.loc 1 1021 25 is_stmt 0 discriminator 2 view .LVU97
 306 011c 019B     		ldr	r3, [sp, #4]
 307 011e 08EB4308 		add	r8, r8, r3, lsl #1
 308              	.LVL29:
1013:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 309              		.loc 1 1013 53 discriminator 2 view .LVU98
 310 0122 0BF1010B 		add	fp, fp, #1
 311              	.LVL30:
 312              	.L9:
1013:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 313              		.loc 1 1013 46 discriminator 1 view .LVU99
 314 0126 B7F90630 		ldrsh	r3, [r7, #6]
1013:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 315              		.loc 1 1013 9 discriminator 1 view .LVU100
 316 012a 5B45     		cmp	r3, fp
ARM GAS  D:\Temp\ccohqSTj.s 			page 27


 317 012c 02DB     		blt	.L1
1014:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 318              		.loc 1 1014 13 is_stmt 1 view .LVU101
1014:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 319              		.loc 1 1014 30 is_stmt 0 view .LVU102
 320 012e B7F90040 		ldrsh	r4, [r7]
 321              	.LVL31:
1014:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 322              		.loc 1 1014 13 view .LVU103
 323 0132 DEE7     		b	.L10
 324              	.LVL32:
 325              	.L1:
1014:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 326              		.loc 1 1014 13 view .LVU104
 327              	.LBE68:
1022:lvgl/src/lv_draw/lv_draw_blend.c ****         }
1023:lvgl/src/lv_draw/lv_draw_blend.c ****     }
1024:lvgl/src/lv_draw/lv_draw_blend.c **** }
 328              		.loc 1 1024 1 view .LVU105
 329 0134 05B0     		add	sp, sp, #20
 330              	.LCFI2:
 331              		.cfi_def_cfa_offset 36
 332              		@ sp needed
 333 0136 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 334              	.LVL33:
 335              	.L22:
 336              		.loc 1 1024 1 view .LVU106
 337 013a 00BF     		.align	2
 338              	.L21:
 339 013c 00000000 		.word	color_blend_true_color_subtractive
 340 0140 00000000 		.word	color_blend_true_color_additive
 341              		.cfi_endproc
 342              	.LFE465:
 344              		.section	.text.fill_set_px,"ax",%progbits
 345              		.align	1
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 349              		.fpu fpv4-sp-d16
 351              	fill_set_px:
 352              	.LVL34:
 353              	.LFB460:
 258:lvgl/src/lv_draw/lv_draw_blend.c **** 
 354              		.loc 1 258 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 12, pretend = 0, frame = 16
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 258:lvgl/src/lv_draw/lv_draw_blend.c **** 
 358              		.loc 1 258 1 is_stmt 0 view .LVU108
 359 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 360              	.LCFI3:
 361              		.cfi_def_cfa_offset 36
 362              		.cfi_offset 4, -36
 363              		.cfi_offset 5, -32
 364              		.cfi_offset 6, -28
 365              		.cfi_offset 7, -24
 366              		.cfi_offset 8, -20
ARM GAS  D:\Temp\ccohqSTj.s 			page 28


 367              		.cfi_offset 9, -16
 368              		.cfi_offset 10, -12
 369              		.cfi_offset 11, -8
 370              		.cfi_offset 14, -4
 371 0004 89B0     		sub	sp, sp, #36
 372              	.LCFI4:
 373              		.cfi_def_cfa_offset 72
 374 0006 0446     		mov	r4, r0
 375 0008 0691     		str	r1, [sp, #24]
 376 000a 1546     		mov	r5, r2
 377 000c 9846     		mov	r8, r3	@ movhi
 378 000e 9DF84890 		ldrb	r9, [sp, #72]	@ zero_extendqisi2
 260:lvgl/src/lv_draw/lv_draw_blend.c **** 
 379              		.loc 1 260 5 is_stmt 1 view .LVU109
 260:lvgl/src/lv_draw/lv_draw_blend.c **** 
 380              		.loc 1 260 24 is_stmt 0 view .LVU110
 381 0012 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 382              	.LVL35:
 260:lvgl/src/lv_draw/lv_draw_blend.c **** 
 383              		.loc 1 260 24 view .LVU111
 384 0016 0646     		mov	r6, r0
 385              	.LVL36:
 263:lvgl/src/lv_draw/lv_draw_blend.c **** 
 386              		.loc 1 263 5 is_stmt 1 view .LVU112
 387              	.LBB69:
 388              	.LBI69:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 389              		.loc 2 107 26 view .LVU113
 390              	.LBB70:
 391              		.loc 2 109 5 view .LVU114
 392              		.loc 2 109 31 is_stmt 0 view .LVU115
 393 0018 A388     		ldrh	r3, [r4, #4]
 394              		.loc 2 109 44 view .LVU116
 395 001a 2288     		ldrh	r2, [r4]
 396              		.loc 2 109 36 view .LVU117
 397 001c 9B1A     		subs	r3, r3, r2
 398 001e 9BB2     		uxth	r3, r3
 399              		.loc 2 109 49 view .LVU118
 400 0020 0133     		adds	r3, r3, #1
 401              		.loc 2 109 12 view .LVU119
 402 0022 1BB2     		sxth	r3, r3
 403 0024 0593     		str	r3, [sp, #20]
 404              	.LVL37:
 405              		.loc 2 109 12 view .LVU120
 406              	.LBE70:
 407              	.LBE69:
 265:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t y;
 408              		.loc 1 265 5 is_stmt 1 view .LVU121
 266:lvgl/src/lv_draw/lv_draw_blend.c **** 
 409              		.loc 1 266 5 view .LVU122
 268:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 410              		.loc 1 268 5 view .LVU123
 268:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 411              		.loc 1 268 7 is_stmt 0 view .LVU124
 412 0026 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 413 002a 012B     		cmp	r3, #1
 414 002c 0DD0     		beq	.L36
ARM GAS  D:\Temp\ccohqSTj.s 			page 29


 415              	.LBB71:
 279:lvgl/src/lv_draw/lv_draw_blend.c **** 
 416              		.loc 1 279 9 is_stmt 1 view .LVU125
 279:lvgl/src/lv_draw/lv_draw_blend.c **** 
 417              		.loc 1 279 53 is_stmt 0 view .LVU126
 418 002e B5F90020 		ldrsh	r2, [r5]
 279:lvgl/src/lv_draw/lv_draw_blend.c **** 
 419              		.loc 1 279 26 view .LVU127
 420 0032 139F     		ldr	r7, [sp, #76]
 421 0034 BF1A     		subs	r7, r7, r2
 422              	.LVL38:
 282:lvgl/src/lv_draw/lv_draw_blend.c **** 
 423              		.loc 1 282 9 is_stmt 1 view .LVU128
 424              	.LBB72:
 425              	.LBI72:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 426              		.loc 2 107 26 view .LVU129
 427              	.LBB73:
 428              		.loc 2 109 5 view .LVU130
 429              		.loc 2 109 31 is_stmt 0 view .LVU131
 430 0036 AB88     		ldrh	r3, [r5, #4]
 431              		.loc 2 109 44 view .LVU132
 432 0038 92B2     		uxth	r2, r2
 433              		.loc 2 109 36 view .LVU133
 434 003a 9B1A     		subs	r3, r3, r2
 435 003c 9BB2     		uxth	r3, r3
 436              		.loc 2 109 49 view .LVU134
 437 003e 0133     		adds	r3, r3, #1
 438              		.loc 2 109 12 view .LVU135
 439 0040 1BB2     		sxth	r3, r3
 440 0042 0793     		str	r3, [sp, #28]
 441              	.LVL39:
 442              		.loc 2 109 12 view .LVU136
 443              	.LBE73:
 444              	.LBE72:
 284:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 445              		.loc 1 284 9 is_stmt 1 view .LVU137
 284:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 446              		.loc 1 284 26 is_stmt 0 view .LVU138
 447 0044 B5F902B0 		ldrsh	fp, [r5, #2]
 448              	.LVL40:
 284:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 449              		.loc 1 284 9 view .LVU139
 450 0048 3EE0     		b	.L30
 451              	.LVL41:
 452              	.L36:
 284:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 453              		.loc 1 284 9 view .LVU140
 454              	.LBE71:
 269:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 455              		.loc 1 269 9 is_stmt 1 view .LVU141
 269:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 456              		.loc 1 269 26 is_stmt 0 view .LVU142
 457 004a B5F902A0 		ldrsh	r10, [r5, #2]
 458              	.LVL42:
 269:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 459              		.loc 1 269 26 view .LVU143
ARM GAS  D:\Temp\ccohqSTj.s 			page 30


 460 004e DDF818B0 		ldr	fp, [sp, #24]
 269:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 461              		.loc 1 269 9 view .LVU144
 462 0052 14E0     		b	.L25
 463              	.LVL43:
 464              	.L27:
 271:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 465              		.loc 1 271 17 is_stmt 1 discriminator 3 view .LVU145
 271:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 466              		.loc 1 271 29 is_stmt 0 discriminator 3 view .LVU146
 467 0054 D6F81490 		ldr	r9, [r6, #20]
 271:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 468              		.loc 1 271 17 discriminator 3 view .LVU147
 469 0058 0297     		str	r7, [sp, #8]
 470 005a ADF80480 		strh	r8, [sp, #4]	@ movhi
 471 005e 0FFA8AF3 		sxth	r3, r10
 472 0062 0093     		str	r3, [sp]
 473 0064 23B2     		sxth	r3, r4
 474 0066 059A     		ldr	r2, [sp, #20]
 475 0068 5946     		mov	r1, fp
 476 006a 3046     		mov	r0, r6
 477 006c C847     		blx	r9
 478              	.LVL44:
 270:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 479              		.loc 1 270 57 discriminator 3 view .LVU148
 480 006e 0134     		adds	r4, r4, #1
 481              	.LVL45:
 482              	.L26:
 270:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 483              		.loc 1 270 50 discriminator 1 view .LVU149
 484 0070 B5F90430 		ldrsh	r3, [r5, #4]
 270:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 485              		.loc 1 270 13 discriminator 1 view .LVU150
 486 0074 A342     		cmp	r3, r4
 487 0076 EDDA     		bge	.L27
 270:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 488              		.loc 1 270 13 discriminator 1 view .LVU151
 489 0078 B946     		mov	r9, r7
 269:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 490              		.loc 1 269 53 discriminator 2 view .LVU152
 491 007a 0AF1010A 		add	r10, r10, #1
 492              	.LVL46:
 493              	.L25:
 269:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 494              		.loc 1 269 46 discriminator 1 view .LVU153
 495 007e B5F90630 		ldrsh	r3, [r5, #6]
 269:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 496              		.loc 1 269 9 discriminator 1 view .LVU154
 497 0082 5345     		cmp	r3, r10
 498 0084 27DB     		blt	.L23
 270:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 499              		.loc 1 270 13 is_stmt 1 view .LVU155
 270:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 500              		.loc 1 270 30 is_stmt 0 view .LVU156
 501 0086 B5F90040 		ldrsh	r4, [r5]
 502              	.LVL47:
 270:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
ARM GAS  D:\Temp\ccohqSTj.s 			page 31


 503              		.loc 1 270 30 view .LVU157
 504 008a 4F46     		mov	r7, r9
 270:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 505              		.loc 1 270 13 view .LVU158
 506 008c F0E7     		b	.L26
 507              	.LVL48:
 508              	.L32:
 509              	.LBB74:
 285:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 510              		.loc 1 285 57 discriminator 2 view .LVU159
 511 008e 0134     		adds	r4, r4, #1
 512              	.LVL49:
 513              	.L31:
 285:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 514              		.loc 1 285 50 discriminator 1 view .LVU160
 515 0090 B5F90430 		ldrsh	r3, [r5, #4]
 285:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 516              		.loc 1 285 13 discriminator 1 view .LVU161
 517 0094 A342     		cmp	r3, r4
 518 0096 13DB     		blt	.L37
 286:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color,
 519              		.loc 1 286 17 is_stmt 1 view .LVU162
 286:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color,
 520              		.loc 1 286 28 is_stmt 0 view .LVU163
 521 0098 3B5D     		ldrb	r3, [r7, r4]	@ zero_extendqisi2
 286:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, color,
 522              		.loc 1 286 19 view .LVU164
 523 009a 002B     		cmp	r3, #0
 524 009c F7D0     		beq	.L32
 287:lvgl/src/lv_draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 525              		.loc 1 287 21 is_stmt 1 view .LVU165
 287:lvgl/src/lv_draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 526              		.loc 1 287 33 is_stmt 0 view .LVU166
 527 009e D6F814A0 		ldr	r10, [r6, #20]
 288:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 528              		.loc 1 288 44 view .LVU167
 529 00a2 03FB09F3 		mul	r3, r3, r9
 287:lvgl/src/lv_draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 530              		.loc 1 287 21 view .LVU168
 531 00a6 1B0A     		lsrs	r3, r3, #8
 532 00a8 0293     		str	r3, [sp, #8]
 533 00aa ADF80480 		strh	r8, [sp, #4]	@ movhi
 534 00ae 0FFA8BF3 		sxth	r3, fp
 535 00b2 0093     		str	r3, [sp]
 536 00b4 23B2     		sxth	r3, r4
 537 00b6 059A     		ldr	r2, [sp, #20]
 538 00b8 0699     		ldr	r1, [sp, #24]
 539 00ba 3046     		mov	r0, r6
 540 00bc D047     		blx	r10
 541              	.LVL50:
 542 00be E6E7     		b	.L32
 543              	.L37:
 291:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 544              		.loc 1 291 13 is_stmt 1 discriminator 2 view .LVU169
 291:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 545              		.loc 1 291 22 is_stmt 0 discriminator 2 view .LVU170
 546 00c0 079B     		ldr	r3, [sp, #28]
ARM GAS  D:\Temp\ccohqSTj.s 			page 32


 547 00c2 1F44     		add	r7, r7, r3
 548              	.LVL51:
 284:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 549              		.loc 1 284 53 discriminator 2 view .LVU171
 550 00c4 0BF1010B 		add	fp, fp, #1
 551              	.LVL52:
 552              	.L30:
 284:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 553              		.loc 1 284 46 discriminator 1 view .LVU172
 554 00c8 B5F90630 		ldrsh	r3, [r5, #6]
 284:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 555              		.loc 1 284 9 discriminator 1 view .LVU173
 556 00cc 5B45     		cmp	r3, fp
 557 00ce 02DB     		blt	.L23
 285:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 558              		.loc 1 285 13 is_stmt 1 view .LVU174
 285:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 559              		.loc 1 285 30 is_stmt 0 view .LVU175
 560 00d0 B5F90040 		ldrsh	r4, [r5]
 561              	.LVL53:
 285:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 562              		.loc 1 285 13 view .LVU176
 563 00d4 DCE7     		b	.L31
 564              	.LVL54:
 565              	.L23:
 285:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 566              		.loc 1 285 13 view .LVU177
 567              	.LBE74:
 294:lvgl/src/lv_draw/lv_draw_blend.c **** 
 568              		.loc 1 294 1 view .LVU178
 569 00d6 09B0     		add	sp, sp, #36
 570              	.LCFI5:
 571              		.cfi_def_cfa_offset 36
 572              		@ sp needed
 573 00d8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 294:lvgl/src/lv_draw/lv_draw_blend.c **** 
 574              		.loc 1 294 1 view .LVU179
 575              		.cfi_endproc
 576              	.LFE460:
 578              		.section	.text.map_set_px,"ax",%progbits
 579              		.align	1
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu fpv4-sp-d16
 585              	map_set_px:
 586              	.LVL55:
 587              	.LFB463:
 648:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 588              		.loc 1 648 1 is_stmt 1 view -0
 589              		.cfi_startproc
 590              		@ args = 16, pretend = 0, frame = 16
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 648:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 592              		.loc 1 648 1 is_stmt 0 view .LVU181
 593 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 594              	.LCFI6:
ARM GAS  D:\Temp\ccohqSTj.s 			page 33


 595              		.cfi_def_cfa_offset 36
 596              		.cfi_offset 4, -36
 597              		.cfi_offset 5, -32
 598              		.cfi_offset 6, -28
 599              		.cfi_offset 7, -24
 600              		.cfi_offset 8, -20
 601              		.cfi_offset 9, -16
 602              		.cfi_offset 10, -12
 603              		.cfi_offset 11, -8
 604              		.cfi_offset 14, -4
 605 0004 89B0     		sub	sp, sp, #36
 606              	.LCFI7:
 607              		.cfi_def_cfa_offset 72
 608 0006 0446     		mov	r4, r0
 609 0008 0591     		str	r1, [sp, #20]
 610 000a 1546     		mov	r5, r2
 611 000c 9846     		mov	r8, r3
 612 000e 9DF84CA0 		ldrb	r10, [sp, #76]	@ zero_extendqisi2
 649:lvgl/src/lv_draw/lv_draw_blend.c **** 
 613              		.loc 1 649 5 is_stmt 1 view .LVU182
 649:lvgl/src/lv_draw/lv_draw_blend.c **** 
 614              		.loc 1 649 24 is_stmt 0 view .LVU183
 615 0012 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 616              	.LVL56:
 649:lvgl/src/lv_draw/lv_draw_blend.c **** 
 617              		.loc 1 649 24 view .LVU184
 618 0016 0646     		mov	r6, r0
 619              	.LVL57:
 652:lvgl/src/lv_draw/lv_draw_blend.c **** 
 620              		.loc 1 652 5 is_stmt 1 view .LVU185
 621              	.LBB75:
 622              	.LBI75:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 623              		.loc 2 107 26 view .LVU186
 624              	.LBB76:
 625              		.loc 2 109 5 view .LVU187
 626              		.loc 2 109 31 is_stmt 0 view .LVU188
 627 0018 A388     		ldrh	r3, [r4, #4]
 628              		.loc 2 109 44 view .LVU189
 629 001a B4F90020 		ldrsh	r2, [r4]
 630 001e 91B2     		uxth	r1, r2
 631              		.loc 2 109 36 view .LVU190
 632 0020 5B1A     		subs	r3, r3, r1
 633 0022 9BB2     		uxth	r3, r3
 634              		.loc 2 109 49 view .LVU191
 635 0024 0133     		adds	r3, r3, #1
 636              		.loc 2 109 12 view .LVU192
 637 0026 1BB2     		sxth	r3, r3
 638 0028 0493     		str	r3, [sp, #16]
 639              	.LVL58:
 640              		.loc 2 109 12 view .LVU193
 641              	.LBE76:
 642              	.LBE75:
 655:lvgl/src/lv_draw/lv_draw_blend.c **** 
 643              		.loc 1 655 5 is_stmt 1 view .LVU194
 644              	.LBB77:
 645              	.LBI77:
ARM GAS  D:\Temp\ccohqSTj.s 			page 34


 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 646              		.loc 2 107 26 view .LVU195
 647              	.LBB78:
 648              		.loc 2 109 5 view .LVU196
 649              		.loc 2 109 31 is_stmt 0 view .LVU197
 650 002a AB88     		ldrh	r3, [r5, #4]
 651              		.loc 2 109 44 view .LVU198
 652 002c B5F90090 		ldrsh	r9, [r5]
 653 0030 1FFA89F1 		uxth	r1, r9
 654              		.loc 2 109 36 view .LVU199
 655 0034 5B1A     		subs	r3, r3, r1
 656 0036 9BB2     		uxth	r3, r3
 657              		.loc 2 109 49 view .LVU200
 658 0038 0133     		adds	r3, r3, #1
 659              		.loc 2 109 12 view .LVU201
 660 003a 1BB2     		sxth	r3, r3
 661 003c 0793     		str	r3, [sp, #28]
 662              	.LVL59:
 663              		.loc 2 109 12 view .LVU202
 664              	.LBE78:
 665              	.LBE77:
 658:lvgl/src/lv_draw/lv_draw_blend.c **** 
 666              		.loc 1 658 5 is_stmt 1 view .LVU203
 667              	.LBB79:
 668              	.LBI79:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 669              		.loc 2 107 26 view .LVU204
 670              	.LBB80:
 671              		.loc 2 109 5 view .LVU205
 672              		.loc 2 109 31 is_stmt 0 view .LVU206
 673 003e B8F80410 		ldrh	r1, [r8, #4]
 674              		.loc 2 109 44 view .LVU207
 675 0042 B8F90030 		ldrsh	r3, [r8]
 676 0046 98B2     		uxth	r0, r3
 677              	.LVL60:
 678              		.loc 2 109 36 view .LVU208
 679 0048 091A     		subs	r1, r1, r0
 680 004a 89B2     		uxth	r1, r1
 681              		.loc 2 109 49 view .LVU209
 682 004c 0131     		adds	r1, r1, #1
 683              		.loc 2 109 12 view .LVU210
 684 004e 08B2     		sxth	r0, r1
 685 0050 0690     		str	r0, [sp, #24]
 686              	.LVL61:
 687              		.loc 2 109 12 view .LVU211
 688              	.LBE80:
 689              	.LBE79:
 661:lvgl/src/lv_draw/lv_draw_blend.c **** 
 690              		.loc 1 661 5 is_stmt 1 view .LVU212
 661:lvgl/src/lv_draw/lv_draw_blend.c **** 
 691              		.loc 1 661 66 is_stmt 0 view .LVU213
 692 0052 B5F90270 		ldrsh	r7, [r5, #2]
 661:lvgl/src/lv_draw/lv_draw_blend.c **** 
 693              		.loc 1 661 82 view .LVU214
 694 0056 B8F90280 		ldrsh	r8, [r8, #2]
 695              	.LVL62:
 661:lvgl/src/lv_draw/lv_draw_blend.c **** 
ARM GAS  D:\Temp\ccohqSTj.s 			page 35


 696              		.loc 1 661 98 view .LVU215
 697 005a B4F90210 		ldrsh	r1, [r4, #2]
 661:lvgl/src/lv_draw/lv_draw_blend.c **** 
 698              		.loc 1 661 87 view .LVU216
 699 005e A8EB0108 		sub	r8, r8, r1
 661:lvgl/src/lv_draw/lv_draw_blend.c **** 
 700              		.loc 1 661 71 view .LVU217
 701 0062 A7EB0808 		sub	r8, r7, r8
 702              	.LVL63:
 663:lvgl/src/lv_draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 703              		.loc 1 663 5 is_stmt 1 view .LVU218
 663:lvgl/src/lv_draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 704              		.loc 1 663 51 is_stmt 0 view .LVU219
 705 0066 9B1A     		subs	r3, r3, r2
 663:lvgl/src/lv_draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 706              		.loc 1 663 35 view .LVU220
 707 0068 A9EB0303 		sub	r3, r9, r3
 708              	.LVL64:
 664:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t x;
 709              		.loc 1 664 5 is_stmt 1 view .LVU221
 664:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t x;
 710              		.loc 1 664 17 is_stmt 0 view .LVU222
 711 006c 00FB0838 		mla	r8, r0, r8, r3
 712              	.LVL65:
 664:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t x;
 713              		.loc 1 664 17 view .LVU223
 714 0070 A8EB0908 		sub	r8, r8, r9
 715 0074 129B     		ldr	r3, [sp, #72]
 716              	.LVL66:
 664:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t x;
 717              		.loc 1 664 17 view .LVU224
 718 0076 03EB4808 		add	r8, r3, r8, lsl #1
 719              	.LVL67:
 665:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t y;
 720              		.loc 1 665 5 is_stmt 1 view .LVU225
 666:lvgl/src/lv_draw/lv_draw_blend.c **** 
 721              		.loc 1 666 5 view .LVU226
 668:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 722              		.loc 1 668 5 view .LVU227
 668:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 723              		.loc 1 668 7 is_stmt 0 view .LVU228
 724 007a 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 725 007e 012B     		cmp	r3, #1
 726 0080 04D0     		beq	.L52
 727              	.LBB81:
 680:lvgl/src/lv_draw/lv_draw_blend.c **** 
 728              		.loc 1 680 9 is_stmt 1 view .LVU229
 680:lvgl/src/lv_draw/lv_draw_blend.c **** 
 729              		.loc 1 680 26 is_stmt 0 view .LVU230
 730 0082 149B     		ldr	r3, [sp, #80]
 731 0084 A3EB0909 		sub	r9, r3, r9
 732              	.LVL68:
 682:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 733              		.loc 1 682 9 is_stmt 1 view .LVU231
 682:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 734              		.loc 1 682 9 is_stmt 0 view .LVU232
 735 0088 BB46     		mov	fp, r7
ARM GAS  D:\Temp\ccohqSTj.s 			page 36


 736 008a 43E0     		b	.L45
 737              	.LVL69:
 738              	.L52:
 682:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 739              		.loc 1 682 9 view .LVU233
 740 008c 8346     		mov	fp, r0
 741 008e A946     		mov	r9, r5
 742              	.LBE81:
 743 0090 16E0     		b	.L39
 744              	.LVL70:
 745              	.L42:
 671:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 746              		.loc 1 671 17 is_stmt 1 discriminator 3 view .LVU234
 671:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 747              		.loc 1 671 29 is_stmt 0 discriminator 3 view .LVU235
 748 0092 D6F814A0 		ldr	r10, [r6, #20]
 671:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 749              		.loc 1 671 17 discriminator 3 view .LVU236
 750 0096 0295     		str	r5, [sp, #8]
 751 0098 38F81430 		ldrh	r3, [r8, r4, lsl #1]
 752 009c ADF80430 		strh	r3, [sp, #4]	@ movhi
 753 00a0 3BB2     		sxth	r3, r7
 754 00a2 0093     		str	r3, [sp]
 755 00a4 23B2     		sxth	r3, r4
 756 00a6 049A     		ldr	r2, [sp, #16]
 757 00a8 0599     		ldr	r1, [sp, #20]
 758 00aa 3046     		mov	r0, r6
 759 00ac D047     		blx	r10
 760              	.LVL71:
 670:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 761              		.loc 1 670 57 discriminator 3 view .LVU237
 762 00ae 0134     		adds	r4, r4, #1
 763              	.LVL72:
 764              	.L41:
 670:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 765              		.loc 1 670 50 discriminator 1 view .LVU238
 766 00b0 B9F90430 		ldrsh	r3, [r9, #4]
 670:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 767              		.loc 1 670 13 discriminator 1 view .LVU239
 768 00b4 A342     		cmp	r3, r4
 769 00b6 ECDA     		bge	.L42
 670:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 770              		.loc 1 670 13 discriminator 1 view .LVU240
 771 00b8 AA46     		mov	r10, r5
 673:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 772              		.loc 1 673 13 is_stmt 1 discriminator 2 view .LVU241
 673:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 773              		.loc 1 673 25 is_stmt 0 discriminator 2 view .LVU242
 774 00ba 08EB4B08 		add	r8, r8, fp, lsl #1
 775              	.LVL73:
 669:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 776              		.loc 1 669 53 discriminator 2 view .LVU243
 777 00be 0137     		adds	r7, r7, #1
 778              	.LVL74:
 779              	.L39:
 669:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 780              		.loc 1 669 46 discriminator 1 view .LVU244
ARM GAS  D:\Temp\ccohqSTj.s 			page 37


 781 00c0 B9F90630 		ldrsh	r3, [r9, #6]
 669:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 782              		.loc 1 669 9 discriminator 1 view .LVU245
 783 00c4 BB42     		cmp	r3, r7
 784 00c6 2CDB     		blt	.L38
 670:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 785              		.loc 1 670 13 is_stmt 1 view .LVU246
 670:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 786              		.loc 1 670 30 is_stmt 0 view .LVU247
 787 00c8 B9F90040 		ldrsh	r4, [r9]
 788              	.LVL75:
 670:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 789              		.loc 1 670 30 view .LVU248
 790 00cc 5546     		mov	r5, r10
 670:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 791              		.loc 1 670 13 view .LVU249
 792 00ce EFE7     		b	.L41
 793              	.LVL76:
 794              	.L47:
 795              	.LBB82:
 683:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 796              		.loc 1 683 57 discriminator 2 view .LVU250
 797 00d0 0134     		adds	r4, r4, #1
 798              	.LVL77:
 799              	.L46:
 683:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 800              		.loc 1 683 50 discriminator 1 view .LVU251
 801 00d2 B5F90430 		ldrsh	r3, [r5, #4]
 683:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 802              		.loc 1 683 13 discriminator 1 view .LVU252
 803 00d6 A342     		cmp	r3, r4
 804 00d8 15DB     		blt	.L53
 684:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 805              		.loc 1 684 17 is_stmt 1 view .LVU253
 684:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 806              		.loc 1 684 28 is_stmt 0 view .LVU254
 807 00da 19F80430 		ldrb	r3, [r9, r4]	@ zero_extendqisi2
 684:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.set_px_cb(&disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 808              		.loc 1 684 19 view .LVU255
 809 00de 002B     		cmp	r3, #0
 810 00e0 F6D0     		beq	.L47
 685:lvgl/src/lv_draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 811              		.loc 1 685 21 is_stmt 1 view .LVU256
 685:lvgl/src/lv_draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 812              		.loc 1 685 33 is_stmt 0 view .LVU257
 813 00e2 7769     		ldr	r7, [r6, #20]
 686:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 814              		.loc 1 686 44 view .LVU258
 815 00e4 03FB0AF3 		mul	r3, r3, r10
 685:lvgl/src/lv_draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 816              		.loc 1 685 21 view .LVU259
 817 00e8 1B0A     		lsrs	r3, r3, #8
 818 00ea 0293     		str	r3, [sp, #8]
 819 00ec 38F81430 		ldrh	r3, [r8, r4, lsl #1]
 820 00f0 ADF80430 		strh	r3, [sp, #4]	@ movhi
 821 00f4 0FFA8BF3 		sxth	r3, fp
 822 00f8 0093     		str	r3, [sp]
ARM GAS  D:\Temp\ccohqSTj.s 			page 38


 823 00fa 23B2     		sxth	r3, r4
 824 00fc 049A     		ldr	r2, [sp, #16]
 825 00fe 0599     		ldr	r1, [sp, #20]
 826 0100 3046     		mov	r0, r6
 827 0102 B847     		blx	r7
 828              	.LVL78:
 829 0104 E4E7     		b	.L47
 830              	.L53:
 689:lvgl/src/lv_draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 831              		.loc 1 689 13 is_stmt 1 discriminator 2 view .LVU260
 689:lvgl/src/lv_draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 832              		.loc 1 689 22 is_stmt 0 discriminator 2 view .LVU261
 833 0106 079B     		ldr	r3, [sp, #28]
 834 0108 9944     		add	r9, r9, r3
 835              	.LVL79:
 690:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 836              		.loc 1 690 13 is_stmt 1 discriminator 2 view .LVU262
 690:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 837              		.loc 1 690 25 is_stmt 0 discriminator 2 view .LVU263
 838 010a 069B     		ldr	r3, [sp, #24]
 839 010c 08EB4308 		add	r8, r8, r3, lsl #1
 840              	.LVL80:
 682:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 841              		.loc 1 682 53 discriminator 2 view .LVU264
 842 0110 0BF1010B 		add	fp, fp, #1
 843              	.LVL81:
 844              	.L45:
 682:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 845              		.loc 1 682 46 discriminator 1 view .LVU265
 846 0114 B5F90630 		ldrsh	r3, [r5, #6]
 682:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 847              		.loc 1 682 9 discriminator 1 view .LVU266
 848 0118 5B45     		cmp	r3, fp
 849 011a 02DB     		blt	.L38
 683:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 850              		.loc 1 683 13 is_stmt 1 view .LVU267
 683:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 851              		.loc 1 683 30 is_stmt 0 view .LVU268
 852 011c B5F90040 		ldrsh	r4, [r5]
 853              	.LVL82:
 683:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 854              		.loc 1 683 13 view .LVU269
 855 0120 D7E7     		b	.L46
 856              	.LVL83:
 857              	.L38:
 683:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 858              		.loc 1 683 13 view .LVU270
 859              	.LBE82:
 693:lvgl/src/lv_draw/lv_draw_blend.c **** 
 860              		.loc 1 693 1 view .LVU271
 861 0122 09B0     		add	sp, sp, #36
 862              	.LCFI8:
 863              		.cfi_def_cfa_offset 36
 864              		@ sp needed
 865 0124 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 693:lvgl/src/lv_draw/lv_draw_blend.c **** 
 866              		.loc 1 693 1 view .LVU272
ARM GAS  D:\Temp\ccohqSTj.s 			page 39


 867              		.cfi_endproc
 868              	.LFE463:
 870              		.section	.text.color_blend_true_color_additive,"ax",%progbits
 871              		.align	1
 872              		.syntax unified
 873              		.thumb
 874              		.thumb_func
 875              		.fpu fpv4-sp-d16
 877              	color_blend_true_color_additive:
 878              	.LVL84:
 879              	.LFB466:
1025:lvgl/src/lv_draw/lv_draw_blend.c **** 
1026:lvgl/src/lv_draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
1027:lvgl/src/lv_draw/lv_draw_blend.c **** {
 880              		.loc 1 1027 1 is_stmt 1 view -0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
1028:lvgl/src/lv_draw/lv_draw_blend.c **** 
1029:lvgl/src/lv_draw/lv_draw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 885              		.loc 1 1029 5 view .LVU274
 886              		.loc 1 1029 7 is_stmt 0 view .LVU275
 887 0000 022A     		cmp	r2, #2
 888 0002 5AD9     		bls	.L61
1027:lvgl/src/lv_draw/lv_draw_blend.c **** 
 889              		.loc 1 1027 1 view .LVU276
 890 0004 70B4     		push	{r4, r5, r6}
 891              	.LCFI9:
 892              		.cfi_def_cfa_offset 12
 893              		.cfi_offset 4, -12
 894              		.cfi_offset 5, -8
 895              		.cfi_offset 6, -4
1030:lvgl/src/lv_draw/lv_draw_blend.c **** 
1031:lvgl/src/lv_draw/lv_draw_blend.c ****     uint32_t tmp;
 896              		.loc 1 1031 5 is_stmt 1 view .LVU277
1032:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 1
1033:lvgl/src/lv_draw/lv_draw_blend.c ****     tmp = bg.full + fg.full;
1034:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.full = LV_MATH_MIN(tmp, 1);
1035:lvgl/src/lv_draw/lv_draw_blend.c **** #else
1036:lvgl/src/lv_draw/lv_draw_blend.c ****     tmp = bg.ch.red + fg.ch.red;
 897              		.loc 1 1036 5 view .LVU278
 898              		.loc 1 1036 16 is_stmt 0 view .LVU279
 899 0006 C1F3C423 		ubfx	r3, r1, #11, #5
 900              		.loc 1 1036 28 view .LVU280
 901 000a C0F3C424 		ubfx	r4, r0, #11, #5
 902              		.loc 1 1036 21 view .LVU281
 903 000e 2344     		add	r3, r3, r4
 904              	.LVL85:
1037:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
1038:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.red = LV_MATH_MIN(tmp, 7);
1039:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
1040:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.red = LV_MATH_MIN(tmp, 31);
 905              		.loc 1 1040 5 is_stmt 1 view .LVU282
 906              		.loc 1 1040 17 is_stmt 0 view .LVU283
 907 0010 1F2B     		cmp	r3, #31
 908 0012 28BF     		it	cs
ARM GAS  D:\Temp\ccohqSTj.s 			page 40


 909 0014 1F23     		movcs	r3, #31
 910              	.LVL86:
 911              		.loc 1 1040 15 view .LVU284
 912 0016 63F3CF20 		bfi	r0, r3, #11, #5
1041:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
1042:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.red = LV_MATH_MIN(tmp, 255);
1043:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
1044:lvgl/src/lv_draw/lv_draw_blend.c **** 
1045:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
1046:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.green = LV_MATH_MIN(tmp, 7);
1047:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
1048:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_16_SWAP == 0
1049:lvgl/src/lv_draw/lv_draw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 913              		.loc 1 1049 5 is_stmt 1 view .LVU285
 914              		.loc 1 1049 16 is_stmt 0 view .LVU286
 915 001a C1F34513 		ubfx	r3, r1, #5, #6
 916              		.loc 1 1049 30 view .LVU287
 917 001e C0F34514 		ubfx	r4, r0, #5, #6
 918              	.LVL87:
 919              		.loc 1 1049 23 view .LVU288
 920 0022 2344     		add	r3, r3, r4
 921              	.LVL88:
1050:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.green = LV_MATH_MIN(tmp, 63);
 922              		.loc 1 1050 5 is_stmt 1 view .LVU289
 923              		.loc 1 1050 19 is_stmt 0 view .LVU290
 924 0024 3F2B     		cmp	r3, #63
 925 0026 28BF     		it	cs
 926 0028 3F23     		movcs	r3, #63
 927              	.LVL89:
 928              		.loc 1 1050 17 view .LVU291
 929 002a 63F34A10 		bfi	r0, r3, #5, #6
1051:lvgl/src/lv_draw/lv_draw_blend.c **** #else
1052:lvgl/src/lv_draw/lv_draw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
1053:lvgl/src/lv_draw/lv_draw_blend.c ****     tmp = LV_MATH_MIN(tmp, 63);
1054:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.green_h = tmp >> 3;
1055:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.green_l = tmp & 0x7;
1056:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
1057:lvgl/src/lv_draw/lv_draw_blend.c **** 
1058:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
1059:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.green = LV_MATH_MIN(tmp, 255);
1060:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
1061:lvgl/src/lv_draw/lv_draw_blend.c **** 
1062:lvgl/src/lv_draw/lv_draw_blend.c ****     tmp = bg.ch.blue + fg.ch.blue;
 930              		.loc 1 1062 5 is_stmt 1 view .LVU292
 931              		.loc 1 1062 16 is_stmt 0 view .LVU293
 932 002e 01F01F03 		and	r3, r1, #31
 933              		.loc 1 1062 29 view .LVU294
 934 0032 00F01F04 		and	r4, r0, #31
 935              	.LVL90:
 936              		.loc 1 1062 22 view .LVU295
 937 0036 2344     		add	r3, r3, r4
 938              	.LVL91:
1063:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
1064:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.blue = LV_MATH_MIN(tmp, 4);
1065:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
1066:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.blue = LV_MATH_MIN(tmp, 31);
 939              		.loc 1 1066 5 is_stmt 1 view .LVU296
ARM GAS  D:\Temp\ccohqSTj.s 			page 41


 940              		.loc 1 1066 18 is_stmt 0 view .LVU297
 941 0038 1F2B     		cmp	r3, #31
 942 003a 28BF     		it	cs
 943 003c 1F23     		movcs	r3, #31
 944              	.LVL92:
 945              		.loc 1 1066 16 view .LVU298
 946 003e 63F30400 		bfi	r0, r3, #0, #5
1067:lvgl/src/lv_draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
1068:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.blue = LV_MATH_MIN(tmp, 255);
1069:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
1070:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
1071:lvgl/src/lv_draw/lv_draw_blend.c **** 
1072:lvgl/src/lv_draw/lv_draw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 947              		.loc 1 1072 5 is_stmt 1 view .LVU299
 948              		.loc 1 1072 7 is_stmt 0 view .LVU300
 949 0042 FF2A     		cmp	r2, #255
 950 0044 37D0     		beq	.L56
1073:lvgl/src/lv_draw/lv_draw_blend.c **** 
1074:lvgl/src/lv_draw/lv_draw_blend.c ****     return lv_color_mix(fg, bg, opa);
 951              		.loc 1 1074 5 is_stmt 1 view .LVU301
 952              	.LVL93:
 953              	.LBB85:
 954              	.LBI85:
 955              		.file 3 "lvgl/src/lv_draw/../lv_misc/lv_color.h"
   1:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
   2:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *
   4:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
   5:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
   6:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
   9:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/lv_draw/../lv_misc/lv_color.h **** extern "C" {
  11:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  12:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  13:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*********************
  14:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *********************/
  16:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  19:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*Error checking*/
  20:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  21:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  22:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  23:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  24:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  25:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  26:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  27:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  28:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  29:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  30:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  31:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  32:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #include <stdint.h>
  33:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
ARM GAS  D:\Temp\ccohqSTj.s 			page 42


  34:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*********************
  35:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *      DEFINES
  36:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *********************/
  37:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_WHITE   LV_COLOR_MAKE(0xFF, 0xFF, 0xFF)
  38:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SILVER  LV_COLOR_MAKE(0xC0, 0xC0, 0xC0)
  39:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_GRAY    LV_COLOR_MAKE(0x80, 0x80, 0x80)
  40:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_BLACK   LV_COLOR_MAKE(0x00, 0x00, 0x00)
  41:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_RED     LV_COLOR_MAKE(0xFF, 0x00, 0x00)
  42:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MAROON  LV_COLOR_MAKE(0x80, 0x00, 0x00)
  43:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_YELLOW  LV_COLOR_MAKE(0xFF, 0xFF, 0x00)
  44:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_OLIVE   LV_COLOR_MAKE(0x80, 0x80, 0x00)
  45:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_LIME    LV_COLOR_MAKE(0x00, 0xFF, 0x00)
  46:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_GREEN   LV_COLOR_MAKE(0x00, 0x80, 0x00)
  47:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_CYAN    LV_COLOR_MAKE(0x00, 0xFF, 0xFF)
  48:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_AQUA    LV_COLOR_CYAN
  49:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_TEAL    LV_COLOR_MAKE(0x00, 0x80, 0x80)
  50:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_BLUE    LV_COLOR_MAKE(0x00, 0x00, 0xFF)
  51:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_NAVY    LV_COLOR_MAKE(0x00, 0x00, 0x80)
  52:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MAGENTA LV_COLOR_MAKE(0xFF, 0x00, 0xFF)
  53:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_PURPLE  LV_COLOR_MAKE(0x80, 0x00, 0x80)
  54:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_ORANGE  LV_COLOR_MAKE(0xFF, 0xA5, 0x00)
  55:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  56:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
  57:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Opacity percentages.
  58:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
  59:lvgl/src/lv_draw/../lv_misc/lv_color.h **** enum {
  60:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  61:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_0      = 0,
  62:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_10     = 25,
  63:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_20     = 51,
  64:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_30     = 76,
  65:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_40     = 102,
  66:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_50     = 127,
  67:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_60     = 153,
  68:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_70     = 178,
  69:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_80     = 204,
  70:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_90     = 229,
  71:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_100    = 255,
  72:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_COVER  = 255,
  73:lvgl/src/lv_draw/../lv_misc/lv_color.h **** };
  74:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  75:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  76:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  77:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  78:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  79:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 8
  80:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  81:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 8
  82:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  83:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 16
  84:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  85:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 32
  86:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
  87:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  88:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  89:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  90:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /* Adjust color mix functions rounding.
ARM GAS  D:\Temp\ccohqSTj.s 			page 43


  91:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  92:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Should be in range of 0..254
  93:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  94:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 64: round up from x.75
  95:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 128: round up from half
  96:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 192: round up from x.25
  97:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 254: round up */
  98:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  99:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
 100:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
 101:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 102:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
 103:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 104:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 105:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 106:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*---------------------------------------
 107:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Macros for all existing color depths
 108:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * to set/get values of the color channels
 109:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *------------------------------------------*/
 110:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 111:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 112:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 113:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 114:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 115:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 116:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 117:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 118:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 119:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 120:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 121:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 122:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 123:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 124:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 125:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 126:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 127:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 128:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 129:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 130:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 134:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 136:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 139:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 143:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 145:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
ARM GAS  D:\Temp\ccohqSTj.s 			page 44


 148:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 149:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 150:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 151:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 152:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 153:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 154:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 155:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 156:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 157:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 158:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*---------------------------------------
 159:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Macros for the current color depth
 160:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * to set/get values of the color channels
 161:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *------------------------------------------*/
 162:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 163:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R1(c,v)
 164:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G1(c,v)
 165:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B1(c,v)
 166:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A1(c,v)
 167:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 168:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R1(c)
 169:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G1(c)
 170:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B1(c)
 171:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A1(c)
 172:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 173:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 174:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R8(c,v)
 175:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G8(c,v)
 176:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B8(c,v)
 177:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A8(c,v)
 178:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 179:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R8(c)
 180:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G8(c)
 181:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B8(c)
 182:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A8(c)
 183:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 184:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 185:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R16(c,v)
 186:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G16(c,v)
 187:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B16(c,v)
 188:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A16(c,v)
 189:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 190:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R16(c)
 191:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G16(c)
 192:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B16(c)
 193:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A16(c)
 194:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 195:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 196:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R32(c,v)
 197:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G32(c,v)
 198:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B32(c,v)
 199:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A32(c,v)
 200:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 201:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R32(c)
 202:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G32(c)
 203:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B32(c)
 204:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A32(c)
ARM GAS  D:\Temp\ccohqSTj.s 			page 45


 205:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 206:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 207:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**********************
 208:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *      TYPEDEFS
 209:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  **********************/
 210:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 211:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 212:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list */
 213:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     union {
 214:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t blue : 1;
 215:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t green : 1;
 216:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t red : 1;
 217:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 218:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color1_t;
 219:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 220:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 221:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     struct {
 222:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t blue : 2;
 223:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t green : 3;
 224:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t red : 3;
 225:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 226:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t full;
 227:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color8_t;
 228:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 229:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 230:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     struct {
 231:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 232:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t blue : 5;
 233:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t green : 6;
 234:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t red : 5;
 235:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 236:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t green_h : 3;
 237:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t red : 5;
 238:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t blue : 5;
 239:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t green_l : 3;
 240:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 241:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 242:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint16_t full;
 243:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color16_t;
 244:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 245:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 246:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     struct {
 247:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t blue;
 248:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t green;
 249:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t red;
 250:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t alpha;
 251:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 252:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint32_t full;
 253:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color32_t;
 254:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 255:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 256:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint8_t lv_color_int_t;
 257:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color1_t lv_color_t;
 258:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {0x00}
 259:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 260:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint8_t lv_color_int_t;
 261:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color8_t lv_color_t;
ARM GAS  D:\Temp\ccohqSTj.s 			page 46


 262:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00}}
 263:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 264:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint16_t lv_color_int_t;
 265:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color16_t lv_color_t;
 266:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # if LV_COLOR_16_SWAP == 0
 267:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #  define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00}}
 268:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # else
 269:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #  define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00, 0x00}}
 270:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # endif
 271:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 272:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint32_t lv_color_int_t;
 273:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color32_t lv_color_t;
 274:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00, 0x00}}
 275:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 276:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
 277:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 278:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 279:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef struct {
 280:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint16_t h;
 281:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t s;
 282:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t v;
 283:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color_hsv_t;
 284:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 285:lvgl/src/lv_draw/../lv_misc/lv_color.h **** //! @cond Doxygen_Suppress
 286:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 287:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint8_t lv_opa_t;
 288:lvgl/src/lv_draw/../lv_misc/lv_color.h **** //! @endcond
 289:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 290:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**********************
 291:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * GLOBAL PROTOTYPES
 292:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  **********************/
 293:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 294:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*In color conversations:
 295:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 296:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 297:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *         8 bit Red has 3 bits
 298:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        ----------------------
 299:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 300:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *
 301:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 302:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 303:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        16 bit Red has 5 bits
 304:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        ----------------------
 305:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 306:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
 307:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 308:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 309:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 310:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
 311:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 312:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 313:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 1;
 314:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 315:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else {
 316:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 317:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 318:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
ARM GAS  D:\Temp\ccohqSTj.s 			page 47


 319:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 320:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 1;
 321:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 322:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else {
 323:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 324:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 325:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 326:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 327:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 1;
 328:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 329:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else {
 330:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 331:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 332:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 333:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 334:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 335:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 336:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 337:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 338:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if(color.full == 0)
 339:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 340:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else
 341:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFF;
 342:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 343:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
 344:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 345:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color8_t ret;
 346:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /* 5 - 3  = 2*/
 347:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /* 6 - 3  = 3*/
 348:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /* 5 - 2  = 3*/
 349:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 350:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 351:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color8_t ret;
 352:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /* 8 - 3  = 5*/
 353:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /* 8 - 3  = 5*/
 354:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /* 8 - 2  = 6*/
 355:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 356:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 357:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 358:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 359:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 360:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 361:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 362:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if(color.full == 0)
 363:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 364:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else
 365:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFFFF;
 366:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 367:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color16_t ret;
 368:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 369:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 370:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 371:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 372:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 373:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
 374:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 375:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color16_t ret;
ARM GAS  D:\Temp\ccohqSTj.s 			page 48


 376:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /* 8 - 5  = 3*/
 377:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /* 8 - 6  = 2*/
 378:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /* 8 - 5  = 3*/
 379:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 380:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 381:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 382:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 383:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 384:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 385:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 386:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if(color.full == 0)
 387:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFF000000;
 388:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else
 389:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFFFFFFFF;
 390:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 391:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color32_t ret;
 392:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 393:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 394:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 395:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 396:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 397:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 398:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /**
 399:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * The floating point math for conversion is:
 400:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 401:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * The faster integer math for conversion is:
 402:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 403:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 404:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *
 405:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 406:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *
 407:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 408:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 409:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       0           8      7        7       255
 410:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       1          16     14        7       255
 411:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       2          32     28        7       255
 412:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       3          65     25        3       255
 413:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       4         131     19        1       255
 414:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       5         263      7        0       255
 415:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *
 416:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 417:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 418:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       0           4      3        3       255
 419:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       1           8      6        3       255
 420:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       2          16     12        3       255
 421:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       3          32     24        3       255
 422:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       4          64     48        3       255
 423:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       5         129     33        1       255
 424:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       6         259      3        0       255
 425:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      */
 426:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 427:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color32_t ret;
 428:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 429:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 430:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 431:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 432:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
ARM GAS  D:\Temp\ccohqSTj.s 			page 49


 433:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 434:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
 435:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 436:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 437:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 438:lvgl/src/lv_draw/../lv_misc/lv_color.h **** //! @cond Doxygen_Suppress
 439:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 440:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
 441:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Mix two colors with a given ratio.
 442:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 443:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 444:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 445:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @return the mixed color
 446:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 956              		.loc 3 447 48 view .LVU302
 957              	.LBB86:
 448:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color_t ret;
 958              		.loc 3 449 5 view .LVU303
 450:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 451:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 959              		.loc 3 452 5 view .LVU304
 960 0046 C0F3C423 		ubfx	r3, r0, #11, #5
 961 004a C1F3C424 		ubfx	r4, r1, #11, #5
 962              	.LVL94:
 963              		.loc 3 452 5 is_stmt 0 view .LVU305
 964 004e C2F1FF06 		rsb	r6, r2, #255
 965 0052 06FB04F4 		mul	r4, r6, r4
 966 0056 02FB0343 		mla	r3, r2, r3, r4
 967 005a 8033     		adds	r3, r3, #128
 968 005c 03EB0324 		add	r4, r3, r3, lsl #8
 969 0060 03EBC413 		add	r3, r3, r4, lsl #7
 970 0064 C3F3C453 		ubfx	r3, r3, #23, #5
 971 0068 4FF00005 		mov	r5, #0	@ movhi
 972              	.LVL95:
 973              		.loc 3 452 5 view .LVU306
 974 006c 63F3CF25 		bfi	r5, r3, #11, #5
 975              	.LVL96:
 453:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 976              		.loc 3 454 5 is_stmt 1 view .LVU307
 977 0070 C0F34513 		ubfx	r3, r0, #5, #6
 978 0074 C1F34514 		ubfx	r4, r1, #5, #6
 979 0078 04FB06F4 		mul	r4, r4, r6
 980 007c 03FB0243 		mla	r3, r3, r2, r4
 981 0080 8033     		adds	r3, r3, #128
 982 0082 03EB0324 		add	r4, r3, r3, lsl #8
 983 0086 03EBC413 		add	r3, r3, r4, lsl #7
 984 008a C3F3C553 		ubfx	r3, r3, #23, #6
 985 008e 63F34A15 		bfi	r5, r3, #5, #6
 455:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 986              		.loc 3 456 5 view .LVU308
 987 0092 00F01F03 		and	r3, r0, #31
 988 0096 01F01F04 		and	r4, r1, #31
ARM GAS  D:\Temp\ccohqSTj.s 			page 50


 989              		.loc 3 456 5 is_stmt 0 view .LVU309
 990 009a 04FB06F4 		mul	r4, r4, r6
 991              		.loc 3 456 5 view .LVU310
 992 009e 03FB0242 		mla	r2, r3, r2, r4
 993              	.LVL97:
 994              		.loc 3 456 5 view .LVU311
 995 00a2 8032     		adds	r2, r2, #128
 996 00a4 02EB0223 		add	r3, r2, r2, lsl #8
 997 00a8 02EBC312 		add	r2, r2, r3, lsl #7
 998 00ac C2F3C452 		ubfx	r2, r2, #23, #5
 999 00b0 62F30405 		bfi	r5, r2, #0, #5
 457:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 1000              		.loc 3 458 5 is_stmt 1 view .LVU312
 1001              		.loc 3 458 5 view .LVU313
 459:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 460:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 461:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 462:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 463:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret;
 1002              		.loc 3 464 5 view .LVU314
 1003 00b4 2846     		mov	r0, r5	@ movhi
 1004              	.LVL98:
 1005              	.L56:
 1006              	.LVL99:
 1007              		.loc 3 464 5 is_stmt 0 view .LVU315
 1008              	.LBE86:
 1009              	.LBE85:
1075:lvgl/src/lv_draw/lv_draw_blend.c **** }
 1010              		.loc 1 1075 1 view .LVU316
 1011 00b6 70BC     		pop	{r4, r5, r6}
 1012              	.LCFI10:
 1013              		.cfi_restore 6
 1014              		.cfi_restore 5
 1015              		.cfi_restore 4
 1016              		.cfi_def_cfa_offset 0
 1017              	.LVL100:
 1018              		.loc 1 1075 1 view .LVU317
 1019 00b8 7047     		bx	lr
 1020              	.LVL101:
 1021              	.L61:
1029:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1022              		.loc 1 1029 27 is_stmt 1 discriminator 1 view .LVU318
1029:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1023              		.loc 1 1029 34 is_stmt 0 discriminator 1 view .LVU319
 1024 00ba 0846     		mov	r0, r1	@ movhi
 1025              	.LVL102:
 1026              		.loc 1 1075 1 discriminator 1 view .LVU320
 1027 00bc 7047     		bx	lr
 1028              		.cfi_endproc
 1029              	.LFE466:
 1031              		.section	.text.color_blend_true_color_subtractive,"ax",%progbits
 1032              		.align	1
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
ARM GAS  D:\Temp\ccohqSTj.s 			page 51


 1036              		.fpu fpv4-sp-d16
 1038              	color_blend_true_color_subtractive:
 1039              	.LVL103:
 1040              	.LFB467:
1076:lvgl/src/lv_draw/lv_draw_blend.c **** 
1077:lvgl/src/lv_draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
1078:lvgl/src/lv_draw/lv_draw_blend.c **** {
 1041              		.loc 1 1078 1 is_stmt 1 view -0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		@ link register save eliminated.
1079:lvgl/src/lv_draw/lv_draw_blend.c **** 
1080:lvgl/src/lv_draw/lv_draw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 1046              		.loc 1 1080 5 view .LVU322
 1047              		.loc 1 1080 7 is_stmt 0 view .LVU323
 1048 0000 022A     		cmp	r2, #2
 1049 0002 57D9     		bls	.L69
1078:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1050              		.loc 1 1078 1 view .LVU324
 1051 0004 70B4     		push	{r4, r5, r6}
 1052              	.LCFI11:
 1053              		.cfi_def_cfa_offset 12
 1054              		.cfi_offset 4, -12
 1055              		.cfi_offset 5, -8
 1056              		.cfi_offset 6, -4
1081:lvgl/src/lv_draw/lv_draw_blend.c **** 
1082:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t tmp;
 1057              		.loc 1 1082 5 is_stmt 1 view .LVU325
1083:lvgl/src/lv_draw/lv_draw_blend.c ****     tmp = bg.ch.red - fg.ch.red;
 1058              		.loc 1 1083 5 view .LVU326
 1059              		.loc 1 1083 16 is_stmt 0 view .LVU327
 1060 0006 C1F3C423 		ubfx	r3, r1, #11, #5
 1061              		.loc 1 1083 28 view .LVU328
 1062 000a C0F3C424 		ubfx	r4, r0, #11, #5
 1063              		.loc 1 1083 9 view .LVU329
 1064 000e 1B1B     		subs	r3, r3, r4
 1065              	.LVL104:
1084:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.red = LV_MATH_MAX(tmp, 0);
 1066              		.loc 1 1084 5 is_stmt 1 view .LVU330
 1067              		.loc 1 1084 17 is_stmt 0 view .LVU331
 1068 0010 23EAE373 		bic	r3, r3, r3, asr #31
 1069              	.LVL105:
 1070              		.loc 1 1084 15 view .LVU332
 1071 0014 63F3CF20 		bfi	r0, r3, #11, #5
1085:lvgl/src/lv_draw/lv_draw_blend.c **** 
1086:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_16_SWAP == 0
1087:lvgl/src/lv_draw/lv_draw_blend.c ****     tmp = bg.ch.green - fg.ch.green;
 1072              		.loc 1 1087 5 is_stmt 1 view .LVU333
 1073              		.loc 1 1087 16 is_stmt 0 view .LVU334
 1074 0018 C1F34513 		ubfx	r3, r1, #5, #6
 1075              		.loc 1 1087 30 view .LVU335
 1076 001c C0F34514 		ubfx	r4, r0, #5, #6
 1077              	.LVL106:
 1078              		.loc 1 1087 9 view .LVU336
 1079 0020 1B1B     		subs	r3, r3, r4
 1080              	.LVL107:
ARM GAS  D:\Temp\ccohqSTj.s 			page 52


1088:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.green = LV_MATH_MAX(tmp, 0);
 1081              		.loc 1 1088 5 is_stmt 1 view .LVU337
 1082              		.loc 1 1088 19 is_stmt 0 view .LVU338
 1083 0022 23EAE373 		bic	r3, r3, r3, asr #31
 1084              	.LVL108:
 1085              		.loc 1 1088 17 view .LVU339
 1086 0026 63F34A10 		bfi	r0, r3, #5, #6
1089:lvgl/src/lv_draw/lv_draw_blend.c **** #else
1090:lvgl/src/lv_draw/lv_draw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
1091:lvgl/src/lv_draw/lv_draw_blend.c ****     tmp = LV_MATH_MAX(tmp, 0);
1092:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.green_h = tmp >> 3;
1093:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.green_l = tmp & 0x7;
1094:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
1095:lvgl/src/lv_draw/lv_draw_blend.c **** 
1096:lvgl/src/lv_draw/lv_draw_blend.c ****     tmp = bg.ch.blue - fg.ch.blue;
 1087              		.loc 1 1096 5 is_stmt 1 view .LVU340
 1088              		.loc 1 1096 16 is_stmt 0 view .LVU341
 1089 002a 01F01F03 		and	r3, r1, #31
 1090              		.loc 1 1096 29 view .LVU342
 1091 002e 00F01F04 		and	r4, r0, #31
 1092              	.LVL109:
 1093              		.loc 1 1096 9 view .LVU343
 1094 0032 1B1B     		subs	r3, r3, r4
 1095              	.LVL110:
1097:lvgl/src/lv_draw/lv_draw_blend.c ****     fg.ch.blue = LV_MATH_MAX(tmp, 0);
 1096              		.loc 1 1097 5 is_stmt 1 view .LVU344
 1097              		.loc 1 1097 18 is_stmt 0 view .LVU345
 1098 0034 23EAE373 		bic	r3, r3, r3, asr #31
 1099              	.LVL111:
 1100              		.loc 1 1097 16 view .LVU346
 1101 0038 63F30400 		bfi	r0, r3, #0, #5
1098:lvgl/src/lv_draw/lv_draw_blend.c **** 
1099:lvgl/src/lv_draw/lv_draw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 1102              		.loc 1 1099 5 is_stmt 1 view .LVU347
 1103              		.loc 1 1099 7 is_stmt 0 view .LVU348
 1104 003c FF2A     		cmp	r2, #255
 1105 003e 37D0     		beq	.L64
1100:lvgl/src/lv_draw/lv_draw_blend.c **** 
1101:lvgl/src/lv_draw/lv_draw_blend.c ****     return lv_color_mix(fg, bg, opa);
 1106              		.loc 1 1101 5 is_stmt 1 view .LVU349
 1107              	.LVL112:
 1108              	.LBB89:
 1109              	.LBI89:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 1110              		.loc 3 447 48 view .LVU350
 1111              	.LBB90:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1112              		.loc 3 449 5 view .LVU351
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1113              		.loc 3 452 5 view .LVU352
 1114 0040 C0F3C423 		ubfx	r3, r0, #11, #5
 1115 0044 C1F3C424 		ubfx	r4, r1, #11, #5
 1116              	.LVL113:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1117              		.loc 3 452 5 is_stmt 0 view .LVU353
 1118 0048 C2F1FF06 		rsb	r6, r2, #255
 1119 004c 06FB04F4 		mul	r4, r6, r4
ARM GAS  D:\Temp\ccohqSTj.s 			page 53


 1120 0050 02FB0343 		mla	r3, r2, r3, r4
 1121 0054 8033     		adds	r3, r3, #128
 1122 0056 03EB0324 		add	r4, r3, r3, lsl #8
 1123 005a 03EBC413 		add	r3, r3, r4, lsl #7
 1124 005e C3F3C453 		ubfx	r3, r3, #23, #5
 1125 0062 4FF00005 		mov	r5, #0	@ movhi
 1126              	.LVL114:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1127              		.loc 3 452 5 view .LVU354
 1128 0066 63F3CF25 		bfi	r5, r3, #11, #5
 1129              	.LVL115:
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1130              		.loc 3 454 5 is_stmt 1 view .LVU355
 1131 006a C0F34513 		ubfx	r3, r0, #5, #6
 1132 006e C1F34514 		ubfx	r4, r1, #5, #6
 1133 0072 04FB06F4 		mul	r4, r4, r6
 1134 0076 03FB0243 		mla	r3, r3, r2, r4
 1135 007a 8033     		adds	r3, r3, #128
 1136 007c 03EB0324 		add	r4, r3, r3, lsl #8
 1137 0080 03EBC413 		add	r3, r3, r4, lsl #7
 1138 0084 C3F3C553 		ubfx	r3, r3, #23, #6
 1139 0088 63F34A15 		bfi	r5, r3, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1140              		.loc 3 456 5 view .LVU356
 1141 008c 00F01F03 		and	r3, r0, #31
 1142 0090 01F01F04 		and	r4, r1, #31
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1143              		.loc 3 456 5 is_stmt 0 view .LVU357
 1144 0094 04FB06F4 		mul	r4, r4, r6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1145              		.loc 3 456 5 view .LVU358
 1146 0098 03FB0242 		mla	r2, r3, r2, r4
 1147              	.LVL116:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1148              		.loc 3 456 5 view .LVU359
 1149 009c 8032     		adds	r2, r2, #128
 1150 009e 02EB0223 		add	r3, r2, r2, lsl #8
 1151 00a2 02EBC312 		add	r2, r2, r3, lsl #7
 1152 00a6 C2F3C452 		ubfx	r2, r2, #23, #5
 1153 00aa 62F30405 		bfi	r5, r2, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 1154              		.loc 3 458 5 is_stmt 1 view .LVU360
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 1155              		.loc 3 458 5 view .LVU361
 1156              		.loc 3 464 5 view .LVU362
 1157 00ae 2846     		mov	r0, r5	@ movhi
 1158              	.LVL117:
 1159              	.L64:
 1160              	.LVL118:
 1161              		.loc 3 464 5 is_stmt 0 view .LVU363
 1162              	.LBE90:
 1163              	.LBE89:
1102:lvgl/src/lv_draw/lv_draw_blend.c **** }
 1164              		.loc 1 1102 1 view .LVU364
 1165 00b0 70BC     		pop	{r4, r5, r6}
 1166              	.LCFI12:
 1167              		.cfi_restore 6
ARM GAS  D:\Temp\ccohqSTj.s 			page 54


 1168              		.cfi_restore 5
 1169              		.cfi_restore 4
 1170              		.cfi_def_cfa_offset 0
 1171              	.LVL119:
 1172              		.loc 1 1102 1 view .LVU365
 1173 00b2 7047     		bx	lr
 1174              	.LVL120:
 1175              	.L69:
1080:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1176              		.loc 1 1080 27 is_stmt 1 discriminator 1 view .LVU366
1080:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1177              		.loc 1 1080 34 is_stmt 0 discriminator 1 view .LVU367
 1178 00b4 0846     		mov	r0, r1	@ movhi
 1179              	.LVL121:
 1180              		.loc 1 1102 1 discriminator 1 view .LVU368
 1181 00b6 7047     		bx	lr
 1182              		.cfi_endproc
 1183              	.LFE467:
 1185              		.section	.text.fill_normal,"ax",%progbits
 1186              		.align	1
 1187              		.syntax unified
 1188              		.thumb
 1189              		.thumb_func
 1190              		.fpu fpv4-sp-d16
 1192              	fill_normal:
 1193              	.LVL122:
 1194              	.LFB461:
 313:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1195              		.loc 1 313 1 is_stmt 1 view -0
 1196              		.cfi_startproc
 1197              		@ args = 12, pretend = 0, frame = 48
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 313:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1199              		.loc 1 313 1 is_stmt 0 view .LVU370
 1200 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1201              	.LCFI13:
 1202              		.cfi_def_cfa_offset 36
 1203              		.cfi_offset 4, -36
 1204              		.cfi_offset 5, -32
 1205              		.cfi_offset 6, -28
 1206              		.cfi_offset 7, -24
 1207              		.cfi_offset 8, -20
 1208              		.cfi_offset 9, -16
 1209              		.cfi_offset 10, -12
 1210              		.cfi_offset 11, -8
 1211              		.cfi_offset 14, -4
 1212 0004 8FB0     		sub	sp, sp, #60
 1213              	.LCFI14:
 1214              		.cfi_def_cfa_offset 96
 1215 0006 0446     		mov	r4, r0
 1216 0008 0391     		str	r1, [sp, #12]
 1217 000a 1646     		mov	r6, r2
 1218 000c 0892     		str	r2, [sp, #32]
 1219 000e 1D46     		mov	r5, r3	@ movhi
 1220 0010 9DF86030 		ldrb	r3, [sp, #96]	@ zero_extendqisi2
 1221              	.LVL123:
 313:lvgl/src/lv_draw/lv_draw_blend.c **** 
ARM GAS  D:\Temp\ccohqSTj.s 			page 55


 1222              		.loc 1 313 1 view .LVU371
 1223 0014 0493     		str	r3, [sp, #16]
 316:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1224              		.loc 1 316 5 is_stmt 1 view .LVU372
 316:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1225              		.loc 1 316 24 is_stmt 0 view .LVU373
 1226 0016 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 1227              	.LVL124:
 316:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1228              		.loc 1 316 24 view .LVU374
 1229 001a 0990     		str	r0, [sp, #36]
 1230              	.LVL125:
 320:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1231              		.loc 1 320 5 is_stmt 1 view .LVU375
 1232              	.LBB122:
 1233              	.LBI122:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 1234              		.loc 2 107 26 view .LVU376
 1235              	.LBB123:
 1236              		.loc 2 109 5 view .LVU377
 1237              		.loc 2 109 31 is_stmt 0 view .LVU378
 1238 001c A388     		ldrh	r3, [r4, #4]
 1239              		.loc 2 109 44 view .LVU379
 1240 001e 2288     		ldrh	r2, [r4]
 1241              		.loc 2 109 36 view .LVU380
 1242 0020 9B1A     		subs	r3, r3, r2
 1243 0022 9BB2     		uxth	r3, r3
 1244              		.loc 2 109 49 view .LVU381
 1245 0024 0133     		adds	r3, r3, #1
 1246              		.loc 2 109 12 view .LVU382
 1247 0026 1CB2     		sxth	r4, r3
 1248              	.LVL126:
 1249              		.loc 2 109 12 view .LVU383
 1250 0028 0694     		str	r4, [sp, #24]
 1251              	.LVL127:
 1252              		.loc 2 109 12 view .LVU384
 1253              	.LBE123:
 1254              	.LBE122:
 322:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 1255              		.loc 1 322 5 is_stmt 1 view .LVU385
 1256              	.LBB124:
 1257              	.LBI124:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 1258              		.loc 2 107 26 view .LVU386
 1259              	.LBB125:
 1260              		.loc 2 109 5 view .LVU387
 1261              		.loc 2 109 31 is_stmt 0 view .LVU388
 1262 002a 3046     		mov	r0, r6
 1263              	.LVL128:
 1264              		.loc 2 109 31 view .LVU389
 1265 002c B388     		ldrh	r3, [r6, #4]
 1266              		.loc 2 109 44 view .LVU390
 1267 002e B6F90010 		ldrsh	r1, [r6]
 1268 0032 8AB2     		uxth	r2, r1
 1269              		.loc 2 109 36 view .LVU391
 1270 0034 9B1A     		subs	r3, r3, r2
 1271 0036 9BB2     		uxth	r3, r3
ARM GAS  D:\Temp\ccohqSTj.s 			page 56


 1272              		.loc 2 109 49 view .LVU392
 1273 0038 0133     		adds	r3, r3, #1
 1274              		.loc 2 109 12 view .LVU393
 1275 003a 1BB2     		sxth	r3, r3
 1276 003c 0593     		str	r3, [sp, #20]
 1277              	.LVL129:
 1278              		.loc 2 109 12 view .LVU394
 1279              	.LBE125:
 1280              	.LBE124:
 322:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 1281              		.loc 1 322 13 view .LVU395
 1282 003e 1E46     		mov	r6, r3
 1283              	.LVL130:
 323:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1284              		.loc 1 323 5 is_stmt 1 view .LVU396
 1285              	.LBB126:
 1286              	.LBI126:
 110:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 111:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
 112:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
 113:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * Get the height of an area
 114:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param area_p pointer to an area
 115:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 116:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
 117:lvgl/src/lv_draw/../lv_misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 1287              		.loc 2 117 26 view .LVU397
 1288              	.LBB127:
 118:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 119:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 1289              		.loc 2 119 5 view .LVU398
 1290              		.loc 2 119 31 is_stmt 0 view .LVU399
 1291 0040 C388     		ldrh	r3, [r0, #6]
 1292              	.LVL131:
 1293              		.loc 2 119 44 view .LVU400
 1294 0042 B0F90220 		ldrsh	r2, [r0, #2]
 1295 0046 90B2     		uxth	r0, r2
 1296              	.LVL132:
 1297              		.loc 2 119 36 view .LVU401
 1298 0048 1B1A     		subs	r3, r3, r0
 1299 004a 9BB2     		uxth	r3, r3
 1300              		.loc 2 119 49 view .LVU402
 1301 004c 0133     		adds	r3, r3, #1
 1302              		.loc 2 119 12 view .LVU403
 1303 004e 1BB2     		sxth	r3, r3
 1304 0050 0B93     		str	r3, [sp, #44]
 1305              	.LVL133:
 1306              		.loc 2 119 12 view .LVU404
 1307              	.LBE127:
 1308              	.LBE126:
 326:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1309              		.loc 1 326 5 is_stmt 1 view .LVU405
 326:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1310              		.loc 1 326 64 is_stmt 0 view .LVU406
 1311 0052 9446     		mov	ip, r2
 326:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1312              		.loc 1 326 69 view .LVU407
 1313 0054 04FB0212 		mla	r2, r4, r2, r1
ARM GAS  D:\Temp\ccohqSTj.s 			page 57


 326:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1314              		.loc 1 326 18 view .LVU408
 1315 0058 039B     		ldr	r3, [sp, #12]
 1316              	.LVL134:
 326:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1317              		.loc 1 326 18 view .LVU409
 1318 005a 03EB4204 		add	r4, r3, r2, lsl #1
 1319              	.LVL135:
 328:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t y;
 1320              		.loc 1 328 5 is_stmt 1 view .LVU410
 329:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1321              		.loc 1 329 5 view .LVU411
 332:lvgl/src/lv_draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 1322              		.loc 1 332 5 view .LVU412
 332:lvgl/src/lv_draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 1323              		.loc 1 332 7 is_stmt 0 view .LVU413
 1324 005e 9DF86830 		ldrb	r3, [sp, #104]	@ zero_extendqisi2
 1325 0062 012B     		cmp	r3, #1
 1326 0064 0FD0     		beq	.L126
 1327              	.LBB128:
 448:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 1328              		.loc 1 448 9 is_stmt 1 view .LVU414
 449:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 1329              		.loc 1 449 9 view .LVU415
 450:lvgl/src/lv_draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 1330              		.loc 1 450 9 view .LVU416
 1331              	.LVL136:
 451:lvgl/src/lv_draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_first[0].full;
 1332              		.loc 1 451 9 view .LVU417
 451:lvgl/src/lv_draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_first[0].full;
 1333              		.loc 1 451 49 is_stmt 0 view .LVU418
 1334 0066 039B     		ldr	r3, [sp, #12]
 1335 0068 33F81210 		ldrh	r1, [r3, r2, lsl #1]
 451:lvgl/src/lv_draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_first[0].full;
 1336              		.loc 1 451 30 view .LVU419
 1337 006c 0846     		mov	r0, r1	@ movhi
 1338              	.LVL137:
 452:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1339              		.loc 1 452 9 is_stmt 1 view .LVU420
 454:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1340              		.loc 1 454 9 view .LVU421
 454:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1341              		.loc 1 454 17 is_stmt 0 view .LVU422
 1342 006e 059B     		ldr	r3, [sp, #20]
 1343 0070 043B     		subs	r3, r3, #4
 1344 0072 0393     		str	r3, [sp, #12]
 1345              	.LVL138:
 457:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 1346              		.loc 1 457 9 is_stmt 1 view .LVU423
 457:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 1347              		.loc 1 457 11 is_stmt 0 view .LVU424
 1348 0074 049B     		ldr	r3, [sp, #16]
 1349              	.LVL139:
 457:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 1350              		.loc 1 457 11 view .LVU425
 1351 0076 FD2B     		cmp	r3, #253
 1352 0078 00F2CB82 		bhi	.L120
ARM GAS  D:\Temp\ccohqSTj.s 			page 58


 1353              	.LBB129:
 519:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 1354              		.loc 1 519 22 view .LVU426
 1355 007c 0027     		movs	r7, #0
 1356              	.LBE129:
 450:lvgl/src/lv_draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 1357              		.loc 1 450 18 view .LVU427
 1358 007e BE46     		mov	lr, r7
 1359 0080 DDF86490 		ldr	r9, [sp, #100]
 1360 0084 2BE3     		b	.L88
 1361              	.LVL140:
 1362              	.L126:
 450:lvgl/src/lv_draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_first[0].full;
 1363              		.loc 1 450 18 view .LVU428
 1364              	.LBE128:
 333:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 1365              		.loc 1 333 9 is_stmt 1 view .LVU429
 333:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 1366              		.loc 1 333 11 is_stmt 0 view .LVU430
 1367 0086 049B     		ldr	r3, [sp, #16]
 1368 0088 FD2B     		cmp	r3, #253
 1369 008a 22D9     		bls	.L72
 352:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_fill_cb(&disp->driver, disp_buf, disp_w, draw_area, color);
 1370              		.loc 1 352 13 is_stmt 1 view .LVU431
 352:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_fill_cb(&disp->driver, disp_buf, disp_w, draw_area, color);
 1371              		.loc 1 352 28 is_stmt 0 view .LVU432
 1372 008c 099B     		ldr	r3, [sp, #36]
 1373 008e DB6A     		ldr	r3, [r3, #44]
 352:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_fill_cb(&disp->driver, disp_buf, disp_w, draw_area, color);
 1374              		.loc 1 352 15 view .LVU433
 1375 0090 23B1     		cbz	r3, .L73
 352:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_fill_cb(&disp->driver, disp_buf, disp_w, draw_area, color);
 1376              		.loc 1 352 44 discriminator 1 view .LVU434
 1377 0092 0898     		ldr	r0, [sp, #32]
 1378 0094 FFF7FEFF 		bl	lv_area_get_size
 1379              	.LVL141:
 352:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_fill_cb(&disp->driver, disp_buf, disp_w, draw_area, color);
 1380              		.loc 1 352 41 discriminator 1 view .LVU435
 1381 0098 F028     		cmp	r0, #240
 1382 009a 04D8     		bhi	.L74
 1383              	.L73:
 313:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1384              		.loc 1 313 1 discriminator 1 view .LVU436
 1385 009c 0026     		movs	r6, #0
 1386              	.LVL142:
 313:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1387              		.loc 1 313 1 discriminator 1 view .LVU437
 1388 009e 0B9F     		ldr	r7, [sp, #44]
 1389 00a0 DDF81880 		ldr	r8, [sp, #24]
 1390 00a4 10E0     		b	.L75
 1391              	.LVL143:
 1392              	.L74:
 353:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 1393              		.loc 1 353 17 is_stmt 1 view .LVU438
 353:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 1394              		.loc 1 353 29 is_stmt 0 view .LVU439
 1395 00a6 0998     		ldr	r0, [sp, #36]
ARM GAS  D:\Temp\ccohqSTj.s 			page 59


 1396 00a8 C46A     		ldr	r4, [r0, #44]
 1397              	.LVL144:
 353:lvgl/src/lv_draw/lv_draw_blend.c ****                 return;
 1398              		.loc 1 353 17 view .LVU440
 1399 00aa ADF80050 		strh	r5, [sp]	@ movhi
 1400 00ae 089B     		ldr	r3, [sp, #32]
 1401 00b0 069A     		ldr	r2, [sp, #24]
 1402 00b2 0399     		ldr	r1, [sp, #12]
 1403 00b4 A047     		blx	r4
 1404              	.LVL145:
 354:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 1405              		.loc 1 354 17 is_stmt 1 view .LVU441
 1406 00b6 09E0     		b	.L70
 1407              	.LVL146:
 1408              	.L77:
 359:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 1409              		.loc 1 359 17 discriminator 3 view .LVU442
 1410 00b8 059A     		ldr	r2, [sp, #20]
 1411 00ba 2946     		mov	r1, r5	@ movhi
 1412 00bc 2046     		mov	r0, r4
 1413 00be FFF7FEFF 		bl	lv_color_fill
 1414              	.LVL147:
 360:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 1415              		.loc 1 360 17 discriminator 3 view .LVU443
 360:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 1416              		.loc 1 360 32 is_stmt 0 discriminator 3 view .LVU444
 1417 00c2 04EB4804 		add	r4, r4, r8, lsl #1
 1418              	.LVL148:
 358:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 1419              		.loc 1 358 42 discriminator 3 view .LVU445
 1420 00c6 0136     		adds	r6, r6, #1
 1421              	.LVL149:
 1422              	.L75:
 358:lvgl/src/lv_draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 1423              		.loc 1 358 13 discriminator 1 view .LVU446
 1424 00c8 BE42     		cmp	r6, r7
 1425 00ca F5DB     		blt	.L77
 1426              	.LVL150:
 1427              	.L70:
 550:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1428              		.loc 1 550 1 view .LVU447
 1429 00cc 0FB0     		add	sp, sp, #60
 1430              	.LCFI15:
 1431              		.cfi_remember_state
 1432              		.cfi_def_cfa_offset 36
 1433              		@ sp needed
 1434 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1435              	.LVL151:
 1436              	.L72:
 1437              	.LCFI16:
 1438              		.cfi_restore_state
 1439              	.LBB149:
 379:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w ; x++) blend_buf[x].full = color.full;
 1440              		.loc 1 379 13 is_stmt 1 view .LVU448
 379:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w ; x++) blend_buf[x].full = color.full;
 1441              		.loc 1 379 28 is_stmt 0 view .LVU449
 1442 00d2 099B     		ldr	r3, [sp, #36]
ARM GAS  D:\Temp\ccohqSTj.s 			page 60


 1443 00d4 9B6A     		ldr	r3, [r3, #40]
 379:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w ; x++) blend_buf[x].full = color.full;
 1444              		.loc 1 379 15 view .LVU450
 1445 00d6 23B1     		cbz	r3, .L78
 379:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w ; x++) blend_buf[x].full = color.full;
 1446              		.loc 1 379 45 discriminator 1 view .LVU451
 1447 00d8 0898     		ldr	r0, [sp, #32]
 1448 00da FFF7FEFF 		bl	lv_area_get_size
 1449              	.LVL152:
 379:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w ; x++) blend_buf[x].full = color.full;
 1450              		.loc 1 379 42 discriminator 1 view .LVU452
 1451 00de F028     		cmp	r0, #240
 1452 00e0 55D8     		bhi	.L127
 1453              	.L78:
 408:lvgl/src/lv_draw/lv_draw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 1454              		.loc 1 408 13 is_stmt 1 view .LVU453
 408:lvgl/src/lv_draw/lv_draw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 1455              		.loc 1 408 24 is_stmt 0 view .LVU454
 1456 00e2 4FF00001 		mov	r1, #0	@ movhi
 409:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1457              		.loc 1 409 13 is_stmt 1 view .LVU455
 1458              	.LVL153:
 1459              	.LBB150:
 1460              	.LBI150:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 1461              		.loc 3 447 48 view .LVU456
 1462              	.LBB151:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1463              		.loc 3 449 5 view .LVU457
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1464              		.loc 3 452 5 view .LVU458
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1465              		.loc 3 452 5 is_stmt 0 view .LVU459
 1466 00e6 C5F3C423 		ubfx	r3, r5, #11, #5
 1467 00ea 0498     		ldr	r0, [sp, #16]
 1468 00ec 00FB03F3 		mul	r3, r0, r3
 1469 00f0 8033     		adds	r3, r3, #128
 1470 00f2 03EB0322 		add	r2, r3, r3, lsl #8
 1471 00f6 03EBC213 		add	r3, r3, r2, lsl #7
 1472 00fa C3F3C453 		ubfx	r3, r3, #23, #5
 1473              	.LVL154:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1474              		.loc 3 452 5 view .LVU460
 1475 00fe 8C46     		mov	ip, r1	@ movhi
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1476              		.loc 3 452 5 view .LVU461
 1477 0100 63F3CF2C 		bfi	ip, r3, #11, #5
 1478              	.LVL155:
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1479              		.loc 3 454 5 is_stmt 1 view .LVU462
 1480 0104 C5F34513 		ubfx	r3, r5, #5, #6
 1481 0108 03FB00F3 		mul	r3, r3, r0
 1482 010c 8033     		adds	r3, r3, #128
 1483 010e 03EB0322 		add	r2, r3, r3, lsl #8
 1484 0112 03EBC213 		add	r3, r3, r2, lsl #7
 1485 0116 C3F3C553 		ubfx	r3, r3, #23, #6
 1486 011a 63F34A1C 		bfi	ip, r3, #5, #6
ARM GAS  D:\Temp\ccohqSTj.s 			page 61


 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1487              		.loc 3 456 5 view .LVU463
 1488 011e 05F01F03 		and	r3, r5, #31
 1489 0122 03FB00F3 		mul	r3, r3, r0
 1490 0126 8033     		adds	r3, r3, #128
 1491 0128 03EB0322 		add	r2, r3, r3, lsl #8
 1492 012c 03EBC213 		add	r3, r3, r2, lsl #7
 1493 0130 C3F3C453 		ubfx	r3, r3, #23, #5
 1494 0134 63F3040C 		bfi	ip, r3, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 1495              		.loc 3 458 5 view .LVU464
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 1496              		.loc 3 458 5 view .LVU465
 1497              		.loc 3 464 5 view .LVU466
 1498              	.LVL156:
 1499              		.loc 3 464 5 is_stmt 0 view .LVU467
 1500              	.LBE151:
 1501              	.LBE150:
 411:lvgl/src/lv_draw/lv_draw_blend.c ****             lv_color_premult(color, opa, color_premult);
 1502              		.loc 1 411 13 is_stmt 1 view .LVU468
 412:lvgl/src/lv_draw/lv_draw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 1503              		.loc 1 412 13 view .LVU469
 1504              	.LBB152:
 1505              	.LBI152:
 465:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 466:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 467:lvgl/src/lv_draw/../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 1506              		.loc 3 467 42 view .LVU470
 1507              	.LBB153:
 468:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 469:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 470:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 1508              		.loc 3 470 5 view .LVU471
 1509              		.loc 3 470 25 is_stmt 0 view .LVU472
 1510 0138 C5F3C422 		ubfx	r2, r5, #11, #5
 1511              		.loc 3 470 43 view .LVU473
 1512 013c 83B2     		uxth	r3, r0
 1513 013e 02FB03F2 		mul	r2, r2, r3
 1514              		.loc 3 470 12 view .LVU474
 1515 0142 ADF83020 		strh	r2, [sp, #48]	@ movhi
 471:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 1516              		.loc 3 471 5 is_stmt 1 view .LVU475
 1517              		.loc 3 471 25 is_stmt 0 view .LVU476
 1518 0146 C5F34512 		ubfx	r2, r5, #5, #6
 1519              		.loc 3 471 43 view .LVU477
 1520 014a 03FB02F2 		mul	r2, r3, r2
 1521              		.loc 3 471 12 view .LVU478
 1522 014e ADF83220 		strh	r2, [sp, #50]	@ movhi
 472:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 1523              		.loc 3 472 5 is_stmt 1 view .LVU479
 1524              		.loc 3 472 25 is_stmt 0 view .LVU480
 1525 0152 05F01F05 		and	r5, r5, #31
 1526              	.LVL157:
 1527              		.loc 3 472 43 view .LVU481
 1528 0156 03FB05F3 		mul	r3, r3, r5
 1529              		.loc 3 472 12 view .LVU482
 1530 015a ADF83430 		strh	r3, [sp, #52]	@ movhi
ARM GAS  D:\Temp\ccohqSTj.s 			page 62


 1531              	.LVL158:
 1532              		.loc 3 472 12 view .LVU483
 1533              	.LBE153:
 1534              	.LBE152:
 413:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1535              		.loc 1 413 13 is_stmt 1 view .LVU484
 413:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1536              		.loc 1 413 22 is_stmt 0 view .LVU485
 1537 015e C043     		mvns	r0, r0
 1538 0160 C0B2     		uxtb	r0, r0
 1539              	.LVL159:
 415:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1540              		.loc 1 415 13 is_stmt 1 view .LVU486
 415:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1541              		.loc 1 415 19 is_stmt 0 view .LVU487
 1542 0162 0027     		movs	r7, #0
 1543 0164 DDF82CE0 		ldr	lr, [sp, #44]
 1544 0168 DDF81880 		ldr	r8, [sp, #24]
 415:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1545              		.loc 1 415 13 view .LVU488
 1546 016c 60E0     		b	.L83
 1547              	.LVL160:
 1548              	.L80:
 380:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1549              		.loc 1 380 51 is_stmt 1 discriminator 3 view .LVU489
 380:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1550              		.loc 1 380 69 is_stmt 0 discriminator 3 view .LVU490
 1551 016e 5D4A     		ldr	r2, .L142
 1552 0170 22F81350 		strh	r5, [r2, r3, lsl #1]	@ movhi
 380:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1553              		.loc 1 380 47 discriminator 3 view .LVU491
 1554 0174 0133     		adds	r3, r3, #1
 1555              	.LVL161:
 1556              	.L79:
 380:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1557              		.loc 1 380 17 discriminator 1 view .LVU492
 1558 0176 B342     		cmp	r3, r6
 1559 0178 F9DB     		blt	.L80
 382:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, blend_buf, draw_area_w
 1560              		.loc 1 382 17 is_stmt 1 view .LVU493
 382:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, blend_buf, draw_area_w
 1561              		.loc 1 382 34 is_stmt 0 view .LVU494
 1562 017a 089B     		ldr	r3, [sp, #32]
 1563              	.LVL162:
 382:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, blend_buf, draw_area_w
 1564              		.loc 1 382 34 view .LVU495
 1565 017c B3F90250 		ldrsh	r5, [r3, #2]
 1566              	.LVL163:
 382:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, blend_buf, draw_area_w
 1567              		.loc 1 382 34 view .LVU496
 1568 0180 099E     		ldr	r6, [sp, #36]
 1569              	.LVL164:
 382:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, blend_buf, draw_area_w
 1570              		.loc 1 382 34 view .LVU497
 1571 0182 DDF81890 		ldr	r9, [sp, #24]
 1572 0186 9846     		mov	r8, r3
 1573 0188 DDF810A0 		ldr	r10, [sp, #16]
ARM GAS  D:\Temp\ccohqSTj.s 			page 63


 382:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, blend_buf, draw_area_w
 1574              		.loc 1 382 17 view .LVU498
 1575 018c 0CE0     		b	.L81
 1576              	.LVL165:
 1577              	.L127:
 380:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1578              		.loc 1 380 23 view .LVU499
 1579 018e 0023     		movs	r3, #0
 1580 0190 F1E7     		b	.L79
 1581              	.LVL166:
 1582              	.L82:
 383:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp_buf_first += disp_w;
 1583              		.loc 1 383 21 is_stmt 1 discriminator 3 view .LVU500
 383:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp_buf_first += disp_w;
 1584              		.loc 1 383 33 is_stmt 0 discriminator 3 view .LVU501
 1585 0192 B76A     		ldr	r7, [r6, #40]
 383:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp_buf_first += disp_w;
 1586              		.loc 1 383 21 discriminator 3 view .LVU502
 1587 0194 CDF800A0 		str	r10, [sp]
 1588 0198 059B     		ldr	r3, [sp, #20]
 1589 019a 524A     		ldr	r2, .L142
 1590 019c 2146     		mov	r1, r4
 1591 019e 3046     		mov	r0, r6
 1592 01a0 B847     		blx	r7
 1593              	.LVL167:
 384:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 1594              		.loc 1 384 21 is_stmt 1 discriminator 3 view .LVU503
 384:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 1595              		.loc 1 384 36 is_stmt 0 discriminator 3 view .LVU504
 1596 01a2 04EB4904 		add	r4, r4, r9, lsl #1
 1597              	.LVL168:
 382:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, blend_buf, draw_area_w
 1598              		.loc 1 382 61 discriminator 3 view .LVU505
 1599 01a6 0135     		adds	r5, r5, #1
 1600              	.LVL169:
 1601              	.L81:
 382:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, blend_buf, draw_area_w
 1602              		.loc 1 382 54 discriminator 1 view .LVU506
 1603 01a8 B8F90630 		ldrsh	r3, [r8, #6]
 382:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, blend_buf, draw_area_w
 1604              		.loc 1 382 17 discriminator 1 view .LVU507
 1605 01ac AB42     		cmp	r3, r5
 1606 01ae F0DA     		bge	.L82
 382:lvgl/src/lv_draw/lv_draw_blend.c ****                     disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, blend_buf, draw_area_w
 1607              		.loc 1 382 17 discriminator 1 view .LVU508
 1608 01b0 8CE7     		b	.L70
 1609              	.LVL170:
 1610              	.L129:
 418:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1611              		.loc 1 418 25 is_stmt 1 view .LVU509
 418:lvgl/src/lv_draw/lv_draw_blend.c **** 
 1612              		.loc 1 418 41 is_stmt 0 view .LVU510
 1613 01b2 34F81210 		ldrh	r1, [r4, r2, lsl #1]
 1614              	.LVL171:
 428:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 1615              		.loc 1 428 29 is_stmt 1 view .LVU511
 1616              	.LBB154:
ARM GAS  D:\Temp\ccohqSTj.s 			page 64


 1617              	.LBI154:
 473:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 474:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     (void) mix;
 475:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 476:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 477:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 478:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 479:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 480:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 481:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 482:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 483:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
 484:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 485:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 486:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 487:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 488:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 489:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @return the mixed color
 490:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 491:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
 492:lvgl/src/lv_draw/../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 1618              		.loc 3 492 48 view .LVU512
 1619              	.LBB155:
 493:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 494:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color_t ret;
 1620              		.loc 3 494 5 view .LVU513
 495:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 496:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 497:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_MATH_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROU
 1621              		.loc 3 497 5 view .LVU514
 1622 01b6 BDF830C0 		ldrh	ip, [sp, #48]
 1623              	.LVL172:
 1624              		.loc 3 497 5 is_stmt 0 view .LVU515
 1625 01ba CB0A     		lsrs	r3, r1, #11
 1626 01bc 00FB03C3 		mla	r3, r0, r3, ip
 1627 01c0 8033     		adds	r3, r3, #128
 1628 01c2 03EB032C 		add	ip, r3, r3, lsl #8
 1629 01c6 03EBCC13 		add	r3, r3, ip, lsl #7
 1630 01ca C3F3C453 		ubfx	r3, r3, #23, #5
 1631 01ce 63F3CF2B 		bfi	fp, r3, #11, #5
 498:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_MATH_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROU
 1632              		.loc 3 498 5 is_stmt 1 view .LVU516
 1633 01d2 BDF832C0 		ldrh	ip, [sp, #50]
 1634 01d6 C1F34513 		ubfx	r3, r1, #5, #6
 1635 01da 03FB00C3 		mla	r3, r3, r0, ip
 1636 01de 8033     		adds	r3, r3, #128
 1637 01e0 03EB032C 		add	ip, r3, r3, lsl #8
 1638 01e4 03EBCC13 		add	r3, r3, ip, lsl #7
 1639 01e8 C3F3C553 		ubfx	r3, r3, #23, #6
 1640 01ec 63F34A1B 		bfi	fp, r3, #5, #6
 499:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_MATH_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROU
 1641              		.loc 3 499 5 view .LVU517
 1642 01f0 BDF834C0 		ldrh	ip, [sp, #52]
 1643 01f4 01F01F03 		and	r3, r1, #31
 1644 01f8 03FB00C3 		mla	r3, r3, r0, ip
 1645 01fc 8033     		adds	r3, r3, #128
 1646 01fe 03EB032C 		add	ip, r3, r3, lsl #8
ARM GAS  D:\Temp\ccohqSTj.s 			page 65


 1647 0202 03EBCC13 		add	r3, r3, ip, lsl #7
 1648 0206 C3F3C453 		ubfx	r3, r3, #23, #5
 1649 020a 63F3040B 		bfi	fp, r3, #0, #5
 500:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 1650              		.loc 3 500 5 view .LVU518
 1651              		.loc 3 500 5 view .LVU519
 501:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 502:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 503:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*Restore color1*/
 504:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color_t c1;
 505:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 506:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 507:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 508:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 509:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 510:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 511:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret;
 1652              		.loc 3 511 5 view .LVU520
 1653 020e DC46     		mov	ip, fp	@ movhi
 1654              	.LVL173:
 1655              	.L84:
 1656              		.loc 3 511 5 is_stmt 0 view .LVU521
 1657              	.LBE155:
 1658              	.LBE154:
 431:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 1659              		.loc 1 431 21 is_stmt 1 discriminator 2 view .LVU522
 431:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 1660              		.loc 1 431 39 is_stmt 0 discriminator 2 view .LVU523
 1661 0210 A5F800C0 		strh	ip, [r5]	@ movhi
 416:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 1662              		.loc 1 416 46 discriminator 2 view .LVU524
 1663 0214 0132     		adds	r2, r2, #1
 1664              	.LVL174:
 1665              	.L86:
 416:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 1666              		.loc 1 416 17 discriminator 1 view .LVU525
 1667 0216 B242     		cmp	r2, r6
 1668 0218 07DA     		bge	.L128
 417:lvgl/src/lv_draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1669              		.loc 1 417 21 is_stmt 1 view .LVU526
 417:lvgl/src/lv_draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1670              		.loc 1 417 39 is_stmt 0 view .LVU527
 1671 021a 8BB2     		uxth	r3, r1
 417:lvgl/src/lv_draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1672              		.loc 1 417 62 view .LVU528
 1673 021c 04EB4205 		add	r5, r4, r2, lsl #1
 417:lvgl/src/lv_draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1674              		.loc 1 417 65 view .LVU529
 1675 0220 34F81290 		ldrh	r9, [r4, r2, lsl #1]
 417:lvgl/src/lv_draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1676              		.loc 1 417 23 view .LVU530
 1677 0224 4B45     		cmp	r3, r9
 1678 0226 C4D1     		bne	.L129
 417:lvgl/src/lv_draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1679              		.loc 1 417 23 view .LVU531
 1680 0228 F2E7     		b	.L84
 1681              	.L128:
ARM GAS  D:\Temp\ccohqSTj.s 			page 66


 433:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 1682              		.loc 1 433 17 is_stmt 1 discriminator 2 view .LVU532
 433:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 1683              		.loc 1 433 32 is_stmt 0 discriminator 2 view .LVU533
 1684 022a 04EB4804 		add	r4, r4, r8, lsl #1
 1685              	.LVL175:
 415:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1686              		.loc 1 415 42 discriminator 2 view .LVU534
 1687 022e 0137     		adds	r7, r7, #1
 1688              	.LVL176:
 1689              	.L83:
 415:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1690              		.loc 1 415 13 discriminator 1 view .LVU535
 1691 0230 7745     		cmp	r7, lr
 1692 0232 BFF64BAF 		bge	.L70
 416:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 1693              		.loc 1 416 23 view .LVU536
 1694 0236 0022     		movs	r2, #0
 1695 0238 EDE7     		b	.L86
 1696              	.LVL177:
 1697              	.L90:
 416:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 1698              		.loc 1 416 23 view .LVU537
 1699              	.LBE149:
 1700              	.LBB156:
 1701              	.LBB134:
 473:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1702              		.loc 1 473 21 is_stmt 1 discriminator 4 view .LVU538
 1703 023a 34F813C0 		ldrh	ip, [r4, r3, lsl #1]
 1704              	.LVL178:
 1705              	.LBB135:
 1706              	.LBI135:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 1707              		.loc 3 447 48 discriminator 4 view .LVU539
 1708              	.LBB136:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1709              		.loc 3 449 5 discriminator 4 view .LVU540
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1710              		.loc 3 452 5 discriminator 4 view .LVU541
 1711 023e C5F3C420 		ubfx	r0, r5, #11, #5
 1712              	.LVL179:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1713              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU542
 1714 0242 4FEADC2A 		lsr	r10, ip, #11
 1715 0246 C1F1FF0E 		rsb	lr, r1, #255
 1716              	.LVL180:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1717              		.loc 3 452 5 discriminator 4 view .LVU543
 1718 024a 0EFB0AFA 		mul	r10, lr, r10
 1719 024e 01FB00A0 		mla	r0, r1, r0, r10
 1720 0252 8030     		adds	r0, r0, #128
 1721 0254 00EB002A 		add	r10, r0, r0, lsl #8
 1722 0258 00EBCA10 		add	r0, r0, r10, lsl #7
 1723 025c C0F3C450 		ubfx	r0, r0, #23, #5
 1724 0260 60F3CF27 		bfi	r7, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1725              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU544
ARM GAS  D:\Temp\ccohqSTj.s 			page 67


 1726 0264 C5F34510 		ubfx	r0, r5, #5, #6
 1727 0268 CCF3451A 		ubfx	r10, ip, #5, #6
 1728 026c 0AFB0EFA 		mul	r10, r10, lr
 1729 0270 00FB01A0 		mla	r0, r0, r1, r10
 1730 0274 8030     		adds	r0, r0, #128
 1731 0276 00EB002A 		add	r10, r0, r0, lsl #8
 1732 027a 00EBCA10 		add	r0, r0, r10, lsl #7
 1733 027e C0F3C550 		ubfx	r0, r0, #23, #6
 1734 0282 60F34A17 		bfi	r7, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1735              		.loc 3 456 5 discriminator 4 view .LVU545
 1736 0286 05F01F00 		and	r0, r5, #31
 1737 028a 0CF01F0C 		and	ip, ip, #31
 1738              	.LVL181:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1739              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU546
 1740 028e 0CFB0EFE 		mul	lr, ip, lr
 1741 0292 00FB01E1 		mla	r1, r0, r1, lr
 1742              	.LVL182:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1743              		.loc 3 456 5 discriminator 4 view .LVU547
 1744 0296 8031     		adds	r1, r1, #128
 1745 0298 01EB0120 		add	r0, r1, r1, lsl #8
 1746 029c 01EBC011 		add	r1, r1, r0, lsl #7
 1747 02a0 C1F3C451 		ubfx	r1, r1, #23, #5
 1748 02a4 61F30407 		bfi	r7, r1, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 1749              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU548
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 1750              		.loc 3 458 5 discriminator 4 view .LVU549
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 1751              		.loc 3 464 5 discriminator 4 view .LVU550
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 1752              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU551
 1753              	.LBE136:
 1754              	.LBE135:
 473:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1755              		.loc 1 473 21 discriminator 4 view .LVU552
 1756 02a8 24F81370 		strh	r7, [r4, r3, lsl #1]	@ movhi
 1757              	.LVL183:
 1758              	.L89:
 473:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1759              		.loc 1 473 21 is_stmt 1 discriminator 6 view .LVU553
 1760 02ac 0132     		adds	r2, r2, #1
 1761              	.LVL184:
 469:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1762              		.loc 1 469 82 is_stmt 0 discriminator 6 view .LVU554
 1763 02ae 0133     		adds	r3, r3, #1
 1764              	.LVL185:
 1765              	.L108:
 469:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1766              		.loc 1 469 17 discriminator 2 view .LVU555
 1767 02b0 B342     		cmp	r3, r6
 1768 02b2 80F23F81 		bge	.L124
 469:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1769              		.loc 1 469 44 discriminator 3 view .LVU556
 1770 02b6 12F0030F 		tst	r2, #3
ARM GAS  D:\Temp\ccohqSTj.s 			page 68


 1771 02ba 07D0     		beq	.L130
 473:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1772              		.loc 1 473 21 is_stmt 1 view .LVU557
 1773 02bc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1774 02be 0029     		cmp	r1, #0
 1775 02c0 F4D0     		beq	.L89
 473:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1776              		.loc 1 473 21 discriminator 1 view .LVU558
 1777 02c2 FF29     		cmp	r1, #255
 1778 02c4 B9D1     		bne	.L90
 473:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1779              		.loc 1 473 21 discriminator 3 view .LVU559
 1780 02c6 24F81350 		strh	r5, [r4, r3, lsl #1]	@ movhi
 1781 02ca EFE7     		b	.L89
 1782              	.L130:
 473:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1783              		.loc 1 473 21 is_stmt 0 discriminator 3 view .LVU560
 1784 02cc 0896     		str	r6, [sp, #32]
 1785 02ce ADF82480 		strh	r8, [sp, #36]	@ movhi
 1786 02d2 BDF81EC0 		ldrh	ip, [sp, #30]
 1787              	.LVL186:
 473:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1788              		.loc 1 473 21 discriminator 3 view .LVU561
 1789 02d6 BDF828E0 		ldrh	lr, [sp, #40]
 1790              	.LVL187:
 473:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1791              		.loc 1 473 21 discriminator 3 view .LVU562
 1792 02da ADF82A70 		strh	r7, [sp, #42]	@ movhi
 1793 02de BDF81C70 		ldrh	r7, [sp, #28]
 1794              	.LVL188:
 473:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 1795              		.loc 1 473 21 discriminator 3 view .LVU563
 1796 02e2 0EE0     		b	.L102
 1797              	.L143:
 1798              		.align	2
 1799              	.L142:
 1800 02e4 00000000 		.word	.LANCHOR0
 1801              	.LVL189:
 1802              	.L132:
 481:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = color;
 1803              		.loc 1 481 29 is_stmt 1 view .LVU564
 481:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = color;
 1804              		.loc 1 481 47 is_stmt 0 view .LVU565
 1805 02e8 24F81350 		strh	r5, [r4, r3, lsl #1]	@ movhi
 482:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 1806              		.loc 1 482 29 is_stmt 1 view .LVU566
 482:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 1807              		.loc 1 482 43 is_stmt 0 view .LVU567
 1808 02ec 591C     		adds	r1, r3, #1
 482:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = color;
 1809              		.loc 1 482 51 view .LVU568
 1810 02ee 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 483:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 1811              		.loc 1 483 29 is_stmt 1 view .LVU569
 483:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 1812              		.loc 1 483 43 is_stmt 0 view .LVU570
 1813 02f2 991C     		adds	r1, r3, #2
ARM GAS  D:\Temp\ccohqSTj.s 			page 69


 483:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = color;
 1814              		.loc 1 483 51 view .LVU571
 1815 02f4 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 484:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 1816              		.loc 1 484 29 is_stmt 1 view .LVU572
 484:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 1817              		.loc 1 484 43 is_stmt 0 view .LVU573
 1818 02f8 D91C     		adds	r1, r3, #3
 484:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 1819              		.loc 1 484 51 view .LVU574
 1820 02fa 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 1821              	.L93:
 501:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 1822              		.loc 1 501 21 is_stmt 1 view .LVU575
 501:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 1823              		.loc 1 501 27 is_stmt 0 view .LVU576
 1824 02fe 0432     		adds	r2, r2, #4
 1825              	.LVL190:
 478:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(*mask32) {
 1826              		.loc 1 478 38 view .LVU577
 1827 0300 0433     		adds	r3, r3, #4
 1828              	.LVL191:
 1829              	.L102:
 478:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(*mask32) {
 1830              		.loc 1 478 17 discriminator 1 view .LVU578
 1831 0302 0399     		ldr	r1, [sp, #12]
 1832 0304 8B42     		cmp	r3, r1
 1833 0306 00F32181 		bgt	.L131
 479:lvgl/src/lv_draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 1834              		.loc 1 479 21 is_stmt 1 view .LVU579
 479:lvgl/src/lv_draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 1835              		.loc 1 479 24 is_stmt 0 view .LVU580
 1836 030a 1168     		ldr	r1, [r2]
 479:lvgl/src/lv_draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 1837              		.loc 1 479 23 view .LVU581
 1838 030c 0029     		cmp	r1, #0
 1839 030e F6D0     		beq	.L93
 480:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x] = color;
 1840              		.loc 1 480 25 is_stmt 1 view .LVU582
 480:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x] = color;
 1841              		.loc 1 480 27 is_stmt 0 view .LVU583
 1842 0310 B1F1FF3F 		cmp	r1, #-1
 1843 0314 E8D0     		beq	.L132
 487:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1844              		.loc 1 487 29 is_stmt 1 view .LVU584
 1845              	.LVL192:
 494:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 1846              		.loc 1 494 29 view .LVU585
 1847 0316 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1848 0318 D9B3     		cbz	r1, .L95
 494:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 1849              		.loc 1 494 29 discriminator 1 view .LVU586
 1850 031a FF29     		cmp	r1, #255
 1851 031c 00F0FB80 		beq	.L133
 494:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 1852              		.loc 1 494 29 discriminator 4 view .LVU587
 1853 0320 34F81360 		ldrh	r6, [r4, r3, lsl #1]
ARM GAS  D:\Temp\ccohqSTj.s 			page 70


 1854              	.LVL193:
 1855              	.LBB137:
 1856              	.LBI137:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 1857              		.loc 3 447 48 discriminator 4 view .LVU588
 1858              	.LBB138:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1859              		.loc 3 449 5 discriminator 4 view .LVU589
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1860              		.loc 3 452 5 discriminator 4 view .LVU590
 1861 0324 C5F3C420 		ubfx	r0, r5, #11, #5
 1862              	.LVL194:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1863              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU591
 1864 0328 4FEAD62A 		lsr	r10, r6, #11
 1865 032c C1F1FF08 		rsb	r8, r1, #255
 1866              	.LVL195:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1867              		.loc 3 452 5 discriminator 4 view .LVU592
 1868 0330 08FB0AFA 		mul	r10, r8, r10
 1869 0334 01FB00A0 		mla	r0, r1, r0, r10
 1870 0338 8030     		adds	r0, r0, #128
 1871 033a 00EB002A 		add	r10, r0, r0, lsl #8
 1872 033e 00EBCA10 		add	r0, r0, r10, lsl #7
 1873 0342 C0F3C450 		ubfx	r0, r0, #23, #5
 1874 0346 60F3CF29 		bfi	r9, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1875              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU593
 1876 034a C5F34510 		ubfx	r0, r5, #5, #6
 1877 034e C6F3451A 		ubfx	r10, r6, #5, #6
 1878 0352 0AFB08FA 		mul	r10, r10, r8
 1879 0356 00FB01A0 		mla	r0, r0, r1, r10
 1880 035a 8030     		adds	r0, r0, #128
 1881 035c 00EB002A 		add	r10, r0, r0, lsl #8
 1882 0360 00EBCA10 		add	r0, r0, r10, lsl #7
 1883 0364 C0F3C550 		ubfx	r0, r0, #23, #6
 1884 0368 60F34A19 		bfi	r9, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1885              		.loc 3 456 5 discriminator 4 view .LVU594
 1886 036c 05F01F00 		and	r0, r5, #31
 1887 0370 06F01F06 		and	r6, r6, #31
 1888              	.LVL196:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1889              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU595
 1890 0374 06FB08F6 		mul	r6, r6, r8
 1891 0378 00FB0166 		mla	r6, r0, r1, r6
 1892 037c 8036     		adds	r6, r6, #128
 1893 037e 06EB0620 		add	r0, r6, r6, lsl #8
 1894 0382 06EBC016 		add	r6, r6, r0, lsl #7
 1895 0386 C6F3C456 		ubfx	r6, r6, #23, #5
 1896 038a 66F30409 		bfi	r9, r6, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 1897              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU596
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 1898              		.loc 3 458 5 discriminator 4 view .LVU597
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 1899              		.loc 3 464 5 discriminator 4 view .LVU598
ARM GAS  D:\Temp\ccohqSTj.s 			page 71


 1900              	.LVL197:
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 1901              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU599
 1902              	.LBE138:
 1903              	.LBE137:
 494:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 1904              		.loc 1 494 29 discriminator 4 view .LVU600
 1905 038e 24F81390 		strh	r9, [r4, r3, lsl #1]	@ movhi
 1906              	.LVL198:
 1907              	.L95:
 494:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 1908              		.loc 1 494 29 is_stmt 1 discriminator 6 view .LVU601
 495:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 1909              		.loc 1 495 29 discriminator 6 view .LVU602
 1910 0392 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1911 0394 E9B3     		cbz	r1, .L97
 495:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 1912              		.loc 1 495 29 discriminator 1 view .LVU603
 1913 0396 FF29     		cmp	r1, #255
 1914 0398 00F0C080 		beq	.L134
 495:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 1915              		.loc 1 495 29 discriminator 4 view .LVU604
 1916 039c 03F1010A 		add	r10, r3, #1
 1917 03a0 34F81A60 		ldrh	r6, [r4, r10, lsl #1]
 1918              	.LVL199:
 1919              	.LBB139:
 1920              	.LBI139:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 1921              		.loc 3 447 48 discriminator 4 view .LVU605
 1922              	.LBB140:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1923              		.loc 3 449 5 discriminator 4 view .LVU606
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1924              		.loc 3 452 5 discriminator 4 view .LVU607
 1925 03a4 C5F3C420 		ubfx	r0, r5, #11, #5
 1926              	.LVL200:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1927              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU608
 1928 03a8 4FEAD62B 		lsr	fp, r6, #11
 1929 03ac C1F1FF08 		rsb	r8, r1, #255
 1930              	.LVL201:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1931              		.loc 3 452 5 discriminator 4 view .LVU609
 1932 03b0 08FB0BFB 		mul	fp, r8, fp
 1933 03b4 01FB00B0 		mla	r0, r1, r0, fp
 1934 03b8 8030     		adds	r0, r0, #128
 1935 03ba 00EB002B 		add	fp, r0, r0, lsl #8
 1936 03be 00EBCB10 		add	r0, r0, fp, lsl #7
 1937 03c2 C0F3C450 		ubfx	r0, r0, #23, #5
 1938 03c6 60F3CF2E 		bfi	lr, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1939              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU610
 1940 03ca C5F34510 		ubfx	r0, r5, #5, #6
 1941 03ce C6F3451B 		ubfx	fp, r6, #5, #6
 1942 03d2 0BFB08FB 		mul	fp, fp, r8
 1943 03d6 00FB01B0 		mla	r0, r0, r1, fp
 1944 03da 8030     		adds	r0, r0, #128
ARM GAS  D:\Temp\ccohqSTj.s 			page 72


 1945 03dc 00EB002B 		add	fp, r0, r0, lsl #8
 1946 03e0 00EBCB10 		add	r0, r0, fp, lsl #7
 1947 03e4 C0F3C550 		ubfx	r0, r0, #23, #6
 1948 03e8 60F34A1E 		bfi	lr, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1949              		.loc 3 456 5 discriminator 4 view .LVU611
 1950 03ec 05F01F00 		and	r0, r5, #31
 1951 03f0 06F01F06 		and	r6, r6, #31
 1952              	.LVL202:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1953              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU612
 1954 03f4 06FB08F6 		mul	r6, r6, r8
 1955 03f8 00FB0166 		mla	r6, r0, r1, r6
 1956 03fc 8036     		adds	r6, r6, #128
 1957 03fe 06EB0620 		add	r0, r6, r6, lsl #8
 1958 0402 06EBC010 		add	r0, r6, r0, lsl #7
 1959 0406 C0F3C450 		ubfx	r0, r0, #23, #5
 1960 040a 60F3040E 		bfi	lr, r0, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 1961              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU613
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 1962              		.loc 3 458 5 discriminator 4 view .LVU614
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 1963              		.loc 3 464 5 discriminator 4 view .LVU615
 1964              	.LVL203:
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 1965              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU616
 1966              	.LBE140:
 1967              	.LBE139:
 495:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 1968              		.loc 1 495 29 discriminator 4 view .LVU617
 1969 040e 24F81AE0 		strh	lr, [r4, r10, lsl #1]	@ movhi
 1970              	.LVL204:
 1971              	.L97:
 495:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 1972              		.loc 1 495 29 is_stmt 1 discriminator 6 view .LVU618
 496:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 1973              		.loc 1 496 29 discriminator 6 view .LVU619
 1974 0412 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 1975 0414 E9B3     		cbz	r1, .L99
 496:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 1976              		.loc 1 496 29 discriminator 1 view .LVU620
 1977 0416 FF29     		cmp	r1, #255
 1978 0418 00F08480 		beq	.L135
 496:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 1979              		.loc 1 496 29 discriminator 4 view .LVU621
 1980 041c 03F1020A 		add	r10, r3, #2
 1981 0420 34F81A60 		ldrh	r6, [r4, r10, lsl #1]
 1982              	.LVL205:
 1983              	.LBB141:
 1984              	.LBI141:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 1985              		.loc 3 447 48 discriminator 4 view .LVU622
 1986              	.LBB142:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1987              		.loc 3 449 5 discriminator 4 view .LVU623
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
ARM GAS  D:\Temp\ccohqSTj.s 			page 73


 1988              		.loc 3 452 5 discriminator 4 view .LVU624
 1989 0424 C5F3C420 		ubfx	r0, r5, #11, #5
 1990              	.LVL206:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1991              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU625
 1992 0428 4FEAD62B 		lsr	fp, r6, #11
 1993 042c C1F1FF08 		rsb	r8, r1, #255
 1994              	.LVL207:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1995              		.loc 3 452 5 discriminator 4 view .LVU626
 1996 0430 08FB0BFB 		mul	fp, r8, fp
 1997 0434 01FB00B0 		mla	r0, r1, r0, fp
 1998 0438 8030     		adds	r0, r0, #128
 1999 043a 00EB002B 		add	fp, r0, r0, lsl #8
 2000 043e 00EBCB10 		add	r0, r0, fp, lsl #7
 2001 0442 C0F3C450 		ubfx	r0, r0, #23, #5
 2002 0446 60F3CF2C 		bfi	ip, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2003              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU627
 2004 044a C5F34510 		ubfx	r0, r5, #5, #6
 2005 044e C6F3451B 		ubfx	fp, r6, #5, #6
 2006 0452 0BFB08FB 		mul	fp, fp, r8
 2007 0456 00FB01B0 		mla	r0, r0, r1, fp
 2008 045a 8030     		adds	r0, r0, #128
 2009 045c 00EB002B 		add	fp, r0, r0, lsl #8
 2010 0460 00EBCB10 		add	r0, r0, fp, lsl #7
 2011 0464 C0F3C550 		ubfx	r0, r0, #23, #6
 2012 0468 60F34A1C 		bfi	ip, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2013              		.loc 3 456 5 discriminator 4 view .LVU628
 2014 046c 05F01F00 		and	r0, r5, #31
 2015 0470 06F01F06 		and	r6, r6, #31
 2016              	.LVL208:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2017              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU629
 2018 0474 06FB08F6 		mul	r6, r6, r8
 2019 0478 00FB0166 		mla	r6, r0, r1, r6
 2020 047c 8036     		adds	r6, r6, #128
 2021 047e 06EB0620 		add	r0, r6, r6, lsl #8
 2022 0482 06EBC010 		add	r0, r6, r0, lsl #7
 2023 0486 C0F3C450 		ubfx	r0, r0, #23, #5
 2024 048a 60F3040C 		bfi	ip, r0, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2025              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU630
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2026              		.loc 3 458 5 discriminator 4 view .LVU631
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2027              		.loc 3 464 5 discriminator 4 view .LVU632
 2028              	.LVL209:
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2029              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU633
 2030              	.LBE142:
 2031              	.LBE141:
 496:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 2032              		.loc 1 496 29 discriminator 4 view .LVU634
 2033 048e 24F81AC0 		strh	ip, [r4, r10, lsl #1]	@ movhi
 2034              	.LVL210:
ARM GAS  D:\Temp\ccohqSTj.s 			page 74


 2035              	.L99:
 496:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 2036              		.loc 1 496 29 is_stmt 1 discriminator 6 view .LVU635
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2037              		.loc 1 497 29 discriminator 6 view .LVU636
 2038 0492 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 2039 0494 0029     		cmp	r1, #0
 2040 0496 3FF432AF 		beq	.L93
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2041              		.loc 1 497 29 discriminator 1 view .LVU637
 2042 049a FF29     		cmp	r1, #255
 2043 049c 46D0     		beq	.L136
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2044              		.loc 1 497 29 discriminator 4 view .LVU638
 2045 049e 03F1030A 		add	r10, r3, #3
 2046 04a2 34F81A60 		ldrh	r6, [r4, r10, lsl #1]
 2047              	.LVL211:
 2048              	.LBB143:
 2049              	.LBI143:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 2050              		.loc 3 447 48 discriminator 4 view .LVU639
 2051              	.LBB144:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2052              		.loc 3 449 5 discriminator 4 view .LVU640
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2053              		.loc 3 452 5 discriminator 4 view .LVU641
 2054 04a6 C5F3C420 		ubfx	r0, r5, #11, #5
 2055              	.LVL212:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2056              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU642
 2057 04aa 4FEAD62B 		lsr	fp, r6, #11
 2058 04ae C1F1FF08 		rsb	r8, r1, #255
 2059              	.LVL213:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2060              		.loc 3 452 5 discriminator 4 view .LVU643
 2061 04b2 08FB0BFB 		mul	fp, r8, fp
 2062 04b6 01FB00B0 		mla	r0, r1, r0, fp
 2063 04ba 8030     		adds	r0, r0, #128
 2064 04bc 00EB002B 		add	fp, r0, r0, lsl #8
 2065 04c0 00EBCB10 		add	r0, r0, fp, lsl #7
 2066 04c4 C0F3C450 		ubfx	r0, r0, #23, #5
 2067 04c8 60F3CF27 		bfi	r7, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2068              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU644
 2069 04cc C5F34510 		ubfx	r0, r5, #5, #6
 2070 04d0 C6F3451B 		ubfx	fp, r6, #5, #6
 2071 04d4 0BFB08FB 		mul	fp, fp, r8
 2072 04d8 00FB01B0 		mla	r0, r0, r1, fp
 2073 04dc 8030     		adds	r0, r0, #128
 2074 04de 00EB002B 		add	fp, r0, r0, lsl #8
 2075 04e2 00EBCB10 		add	r0, r0, fp, lsl #7
 2076 04e6 C0F3C550 		ubfx	r0, r0, #23, #6
 2077 04ea 60F34A17 		bfi	r7, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2078              		.loc 3 456 5 discriminator 4 view .LVU645
 2079 04ee 05F01F00 		and	r0, r5, #31
 2080 04f2 06F01F06 		and	r6, r6, #31
ARM GAS  D:\Temp\ccohqSTj.s 			page 75


 2081              	.LVL214:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2082              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU646
 2083 04f6 06FB08F6 		mul	r6, r6, r8
 2084 04fa 00FB0166 		mla	r6, r0, r1, r6
 2085 04fe 8036     		adds	r6, r6, #128
 2086 0500 06EB0620 		add	r0, r6, r6, lsl #8
 2087 0504 06EBC010 		add	r0, r6, r0, lsl #7
 2088 0508 C0F3C450 		ubfx	r0, r0, #23, #5
 2089 050c 60F30407 		bfi	r7, r0, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2090              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU647
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2091              		.loc 3 458 5 discriminator 4 view .LVU648
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2092              		.loc 3 464 5 discriminator 4 view .LVU649
 2093              	.LVL215:
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2094              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU650
 2095              	.LBE144:
 2096              	.LBE143:
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2097              		.loc 1 497 29 discriminator 4 view .LVU651
 2098 0510 24F81A70 		strh	r7, [r4, r10, lsl #1]	@ movhi
 2099 0514 F3E6     		b	.L93
 2100              	.LVL216:
 2101              	.L133:
 494:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 1, color)
 2102              		.loc 1 494 29 is_stmt 1 discriminator 3 view .LVU652
 2103 0516 24F81350 		strh	r5, [r4, r3, lsl #1]	@ movhi
 2104 051a 3AE7     		b	.L95
 2105              	.LVL217:
 2106              	.L134:
 495:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 2, color)
 2107              		.loc 1 495 29 discriminator 3 view .LVU653
 2108 051c 591C     		adds	r1, r3, #1
 2109 051e 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 2110 0522 76E7     		b	.L97
 2111              	.LVL218:
 2112              	.L135:
 496:lvgl/src/lv_draw/lv_draw_blend.c ****                             FILL_NORMAL_MASK_PX(x + 3, color)
 2113              		.loc 1 496 29 discriminator 3 view .LVU654
 2114 0524 991C     		adds	r1, r3, #2
 2115 0526 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 2116 052a B2E7     		b	.L99
 2117              	.LVL219:
 2118              	.L136:
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2119              		.loc 1 497 29 discriminator 3 view .LVU655
 2120 052c D91C     		adds	r1, r3, #3
 2121 052e 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 2122 0532 E4E6     		b	.L93
 2123              	.LVL220:
 2124              	.L124:
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2125              		.loc 1 497 29 is_stmt 0 discriminator 3 view .LVU656
 2126 0534 0896     		str	r6, [sp, #32]
ARM GAS  D:\Temp\ccohqSTj.s 			page 76


 2127 0536 ADF82480 		strh	r8, [sp, #36]	@ movhi
 2128 053a BDF81EC0 		ldrh	ip, [sp, #30]
 2129              	.LVL221:
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2130              		.loc 1 497 29 discriminator 3 view .LVU657
 2131 053e BDF828E0 		ldrh	lr, [sp, #40]
 2132              	.LVL222:
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2133              		.loc 1 497 29 discriminator 3 view .LVU658
 2134 0542 ADF82A70 		strh	r7, [sp, #42]	@ movhi
 2135 0546 BDF81C70 		ldrh	r7, [sp, #28]
 2136              	.LVL223:
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2137              		.loc 1 497 29 discriminator 3 view .LVU659
 2138 054a DAE6     		b	.L102
 2139              	.LVL224:
 2140              	.L131:
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2141              		.loc 1 497 29 discriminator 3 view .LVU660
 2142 054c 089E     		ldr	r6, [sp, #32]
 2143 054e BDF82480 		ldrh	r8, [sp, #36]
 2144              	.LVL225:
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2145              		.loc 1 497 29 discriminator 3 view .LVU661
 2146 0552 ADF81C70 		strh	r7, [sp, #28]	@ movhi
 2147 0556 ADF81EC0 		strh	ip, [sp, #30]	@ movhi
 2148 055a ADF828E0 		strh	lr, [sp, #40]	@ movhi
 2149 055e BDF82A70 		ldrh	r7, [sp, #42]
 2150              	.LVL226:
 497:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2151              		.loc 1 497 29 discriminator 3 view .LVU662
 2152 0562 3AE0     		b	.L104
 2153              	.LVL227:
 2154              	.L106:
 509:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2155              		.loc 1 509 21 is_stmt 1 discriminator 4 view .LVU663
 2156 0564 34F813C0 		ldrh	ip, [r4, r3, lsl #1]
 2157              	.LVL228:
 2158              	.LBB145:
 2159              	.LBI145:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 2160              		.loc 3 447 48 discriminator 4 view .LVU664
 2161              	.LBB146:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2162              		.loc 3 449 5 discriminator 4 view .LVU665
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2163              		.loc 3 452 5 discriminator 4 view .LVU666
 2164 0568 C5F3C420 		ubfx	r0, r5, #11, #5
 2165              	.LVL229:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2166              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU667
 2167 056c 4FEADC2A 		lsr	r10, ip, #11
 2168 0570 C1F1FF0E 		rsb	lr, r1, #255
 2169              	.LVL230:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2170              		.loc 3 452 5 discriminator 4 view .LVU668
 2171 0574 0EFB0AFA 		mul	r10, lr, r10
ARM GAS  D:\Temp\ccohqSTj.s 			page 77


 2172 0578 01FB00A0 		mla	r0, r1, r0, r10
 2173 057c 8030     		adds	r0, r0, #128
 2174 057e 00EB002A 		add	r10, r0, r0, lsl #8
 2175 0582 00EBCA10 		add	r0, r0, r10, lsl #7
 2176 0586 C0F3C450 		ubfx	r0, r0, #23, #5
 2177 058a 60F3CF28 		bfi	r8, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2178              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU669
 2179 058e C5F34510 		ubfx	r0, r5, #5, #6
 2180 0592 CCF3451A 		ubfx	r10, ip, #5, #6
 2181 0596 0AFB0EFA 		mul	r10, r10, lr
 2182 059a 00FB01A0 		mla	r0, r0, r1, r10
 2183 059e 8030     		adds	r0, r0, #128
 2184 05a0 00EB002A 		add	r10, r0, r0, lsl #8
 2185 05a4 00EBCA10 		add	r0, r0, r10, lsl #7
 2186 05a8 C0F3C550 		ubfx	r0, r0, #23, #6
 2187 05ac 60F34A18 		bfi	r8, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2188              		.loc 3 456 5 discriminator 4 view .LVU670
 2189 05b0 05F01F00 		and	r0, r5, #31
 2190 05b4 0CF01F0C 		and	ip, ip, #31
 2191              	.LVL231:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2192              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU671
 2193 05b8 0CFB0EFE 		mul	lr, ip, lr
 2194 05bc 00FB01E1 		mla	r1, r0, r1, lr
 2195              	.LVL232:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2196              		.loc 3 456 5 discriminator 4 view .LVU672
 2197 05c0 8031     		adds	r1, r1, #128
 2198 05c2 01EB0120 		add	r0, r1, r1, lsl #8
 2199 05c6 01EBC011 		add	r1, r1, r0, lsl #7
 2200 05ca C1F3C451 		ubfx	r1, r1, #23, #5
 2201 05ce 61F30408 		bfi	r8, r1, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2202              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU673
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2203              		.loc 3 458 5 discriminator 4 view .LVU674
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2204              		.loc 3 464 5 discriminator 4 view .LVU675
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2205              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU676
 2206              	.LBE146:
 2207              	.LBE145:
 509:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2208              		.loc 1 509 21 discriminator 4 view .LVU677
 2209 05d2 24F81380 		strh	r8, [r4, r3, lsl #1]	@ movhi
 2210              	.LVL233:
 2211              	.L105:
 509:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2212              		.loc 1 509 21 is_stmt 1 discriminator 6 view .LVU678
 2213 05d6 0132     		adds	r2, r2, #1
 2214              	.LVL234:
 505:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2215              		.loc 1 505 42 is_stmt 0 discriminator 6 view .LVU679
 2216 05d8 0133     		adds	r3, r3, #1
 2217              	.LVL235:
ARM GAS  D:\Temp\ccohqSTj.s 			page 78


 2218              	.L104:
 505:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2219              		.loc 1 505 17 discriminator 1 view .LVU680
 2220 05da B342     		cmp	r3, r6
 2221 05dc 07DA     		bge	.L137
 509:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2222              		.loc 1 509 21 is_stmt 1 view .LVU681
 2223 05de 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2224 05e0 0029     		cmp	r1, #0
 2225 05e2 F8D0     		beq	.L105
 509:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2226              		.loc 1 509 21 discriminator 1 view .LVU682
 2227 05e4 FF29     		cmp	r1, #255
 2228 05e6 BDD1     		bne	.L106
 509:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2229              		.loc 1 509 21 discriminator 3 view .LVU683
 2230 05e8 24F81350 		strh	r5, [r4, r3, lsl #1]	@ movhi
 2231 05ec F3E7     		b	.L105
 2232              	.L137:
 513:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2233              		.loc 1 513 17 discriminator 2 view .LVU684
 513:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2234              		.loc 1 513 32 is_stmt 0 discriminator 2 view .LVU685
 2235 05ee 069B     		ldr	r3, [sp, #24]
 2236              	.LVL236:
 513:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2237              		.loc 1 513 32 discriminator 2 view .LVU686
 2238 05f0 04EB4304 		add	r4, r4, r3, lsl #1
 2239              	.LVL237:
 514:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2240              		.loc 1 514 17 is_stmt 1 discriminator 2 view .LVU687
 514:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2241              		.loc 1 514 22 is_stmt 0 discriminator 2 view .LVU688
 2242 05f4 199B     		ldr	r3, [sp, #100]
 2243 05f6 059A     		ldr	r2, [sp, #20]
 2244              	.LVL238:
 514:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2245              		.loc 1 514 22 discriminator 2 view .LVU689
 2246 05f8 1344     		add	r3, r3, r2
 2247 05fa 1993     		str	r3, [sp, #100]
 2248              	.LVL239:
 514:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2249              		.loc 1 514 22 discriminator 2 view .LVU690
 2250              	.LBE134:
 458:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2251              		.loc 1 458 42 discriminator 2 view .LVU691
 2252 05fc 049B     		ldr	r3, [sp, #16]
 2253              	.LVL240:
 458:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2254              		.loc 1 458 42 discriminator 2 view .LVU692
 2255 05fe 0133     		adds	r3, r3, #1
 2256 0600 0493     		str	r3, [sp, #16]
 2257              	.LVL241:
 2258              	.L87:
 458:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2259              		.loc 1 458 13 discriminator 1 view .LVU693
 2260 0602 049B     		ldr	r3, [sp, #16]
ARM GAS  D:\Temp\ccohqSTj.s 			page 79


 2261 0604 0B9A     		ldr	r2, [sp, #44]
 2262 0606 9342     		cmp	r3, r2
 2263 0608 BFF660AD 		bge	.L70
 2264              	.LBB147:
 459:lvgl/src/lv_draw/lv_draw_blend.c **** #if 0
 2265              		.loc 1 459 34 view .LVU694
 2266 060c 199A     		ldr	r2, [sp, #100]
 469:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2267              		.loc 1 469 23 view .LVU695
 2268 060e 0023     		movs	r3, #0
 2269 0610 4EE6     		b	.L108
 2270              	.LVL242:
 2271              	.L120:
 469:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2272              		.loc 1 469 23 view .LVU696
 2273              	.LBE147:
 458:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2274              		.loc 1 458 19 view .LVU697
 2275 0612 0023     		movs	r3, #0
 2276 0614 0493     		str	r3, [sp, #16]
 2277 0616 F4E7     		b	.L87
 2278              	.LVL243:
 2279              	.L141:
 2280              	.LBB148:
 2281              	.LBB130:
 525:lvgl/src/lv_draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask || last_dest_color.full != disp_buf_first[x].fu
 2282              		.loc 1 525 68 discriminator 2 view .LVU698
 2283 0618 049F     		ldr	r7, [sp, #16]
 2284              	.LVL244:
 525:lvgl/src/lv_draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask || last_dest_color.full != disp_buf_first[x].fu
 2285              		.loc 1 525 68 discriminator 2 view .LVU699
 2286 061a 01FB07F7 		mul	r7, r1, r7
 524:lvgl/src/lv_draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 2287              		.loc 1 524 62 discriminator 2 view .LVU700
 2288 061e 3F0A     		lsrs	r7, r7, #8
 2289              	.L111:
 2290              	.LVL245:
 526:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2291              		.loc 1 526 25 is_stmt 1 view .LVU701
 526:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2292              		.loc 1 526 27 is_stmt 0 view .LVU702
 2293 0620 7145     		cmp	r1, lr
 2294 0622 4CD0     		beq	.L138
 2295              	.L112:
 535:lvgl/src/lv_draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 2296              		.loc 1 535 33 is_stmt 1 view .LVU703
 535:lvgl/src/lv_draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 2297              		.loc 1 535 35 is_stmt 0 view .LVU704
 2298 0624 FF2F     		cmp	r7, #255
 2299 0626 50D0     		beq	.L139
 536:lvgl/src/lv_draw/lv_draw_blend.c ****                             }
 2300              		.loc 1 536 38 is_stmt 1 view .LVU705
 2301 0628 34F813E0 		ldrh	lr, [r4, r3, lsl #1]
 2302              	.LVL246:
 2303              	.LBB131:
 2304              	.LBI131:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
ARM GAS  D:\Temp\ccohqSTj.s 			page 80


 2305              		.loc 3 447 48 view .LVU706
 2306              	.LBB132:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2307              		.loc 3 449 5 view .LVU707
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2308              		.loc 3 452 5 view .LVU708
 2309 062c C5F3C421 		ubfx	r1, r5, #11, #5
 2310              	.LVL247:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2311              		.loc 3 452 5 is_stmt 0 view .LVU709
 2312 0630 4FEADE20 		lsr	r0, lr, #11
 2313              	.LVL248:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2314              		.loc 3 452 5 view .LVU710
 2315 0634 C7F1FF08 		rsb	r8, r7, #255
 2316              	.LVL249:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2317              		.loc 3 452 5 view .LVU711
 2318 0638 08FB00F0 		mul	r0, r8, r0
 2319 063c 07FB0101 		mla	r1, r7, r1, r0
 2320 0640 8031     		adds	r1, r1, #128
 2321 0642 01EB0120 		add	r0, r1, r1, lsl #8
 2322 0646 01EBC011 		add	r1, r1, r0, lsl #7
 2323 064a C1F3C451 		ubfx	r1, r1, #23, #5
 2324 064e 61F3CF2A 		bfi	r10, r1, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2325              		.loc 3 454 5 is_stmt 1 view .LVU712
 2326 0652 C5F34510 		ubfx	r0, r5, #5, #6
 2327 0656 CEF34511 		ubfx	r1, lr, #5, #6
 2328 065a 01FB08F1 		mul	r1, r1, r8
 2329 065e 00FB0710 		mla	r0, r0, r7, r1
 2330 0662 8030     		adds	r0, r0, #128
 2331 0664 00EB0021 		add	r1, r0, r0, lsl #8
 2332 0668 00EBC110 		add	r0, r0, r1, lsl #7
 2333 066c C0F3C550 		ubfx	r0, r0, #23, #6
 2334 0670 60F34A1A 		bfi	r10, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2335              		.loc 3 456 5 view .LVU713
 2336 0674 05F01F01 		and	r1, r5, #31
 2337 0678 0EF01F0E 		and	lr, lr, #31
 2338              	.LVL250:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2339              		.loc 3 456 5 is_stmt 0 view .LVU714
 2340 067c 0EFB08F8 		mul	r8, lr, r8
 2341 0680 01FB0781 		mla	r1, r1, r7, r8
 2342 0684 8031     		adds	r1, r1, #128
 2343 0686 01EB0120 		add	r0, r1, r1, lsl #8
 2344 068a 01EBC011 		add	r1, r1, r0, lsl #7
 2345 068e C1F3C451 		ubfx	r1, r1, #23, #5
 2346 0692 61F3040A 		bfi	r10, r1, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2347              		.loc 3 458 5 is_stmt 1 view .LVU715
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2348              		.loc 3 458 5 view .LVU716
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2349              		.loc 3 464 5 view .LVU717
 2350 0696 D046     		mov	r8, r10	@ movhi
ARM GAS  D:\Temp\ccohqSTj.s 			page 81


 2351              	.LVL251:
 2352              	.L115:
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2353              		.loc 3 464 5 is_stmt 0 view .LVU718
 2354              	.LBE132:
 2355              	.LBE131:
 538:lvgl/src/lv_draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 2356              		.loc 1 538 29 is_stmt 1 view .LVU719
 538:lvgl/src/lv_draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 2357              		.loc 1 538 39 is_stmt 0 view .LVU720
 2358 0698 92F800E0 		ldrb	lr, [r2]	@ zero_extendqisi2
 2359              	.LVL252:
 539:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 2360              		.loc 1 539 29 is_stmt 1 view .LVU721
 539:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 2361              		.loc 1 539 50 is_stmt 0 view .LVU722
 2362 069c 34F81300 		ldrh	r0, [r4, r3, lsl #1]
 2363              	.LVL253:
 2364              	.L113:
 541:lvgl/src/lv_draw/lv_draw_blend.c ****                     }
 2365              		.loc 1 541 25 is_stmt 1 view .LVU723
 541:lvgl/src/lv_draw/lv_draw_blend.c ****                     }
 2366              		.loc 1 541 43 is_stmt 0 view .LVU724
 2367 06a0 24F81380 		strh	r8, [r4, r3, lsl #1]	@ movhi
 2368              	.L110:
 543:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 2369              		.loc 1 543 21 is_stmt 1 discriminator 2 view .LVU725
 543:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 2370              		.loc 1 543 31 is_stmt 0 discriminator 2 view .LVU726
 2371 06a4 0132     		adds	r2, r2, #1
 2372              	.LVL254:
 522:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 2373              		.loc 1 522 46 discriminator 2 view .LVU727
 2374 06a6 0133     		adds	r3, r3, #1
 2375              	.LVL255:
 2376              	.L117:
 522:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 2377              		.loc 1 522 17 discriminator 1 view .LVU728
 2378 06a8 B342     		cmp	r3, r6
 2379 06aa 10DA     		bge	.L140
 523:lvgl/src/lv_draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 2380              		.loc 1 523 21 is_stmt 1 view .LVU729
 523:lvgl/src/lv_draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 2381              		.loc 1 523 24 is_stmt 0 view .LVU730
 2382 06ac 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 523:lvgl/src/lv_draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 2383              		.loc 1 523 23 view .LVU731
 2384 06ae 0029     		cmp	r1, #0
 2385 06b0 F8D0     		beq	.L110
 524:lvgl/src/lv_draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 2386              		.loc 1 524 25 is_stmt 1 view .LVU732
 524:lvgl/src/lv_draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 2387              		.loc 1 524 27 is_stmt 0 view .LVU733
 2388 06b2 7145     		cmp	r1, lr
 2389 06b4 B4D0     		beq	.L111
 524:lvgl/src/lv_draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 2390              		.loc 1 524 54 is_stmt 1 discriminator 1 view .LVU734
ARM GAS  D:\Temp\ccohqSTj.s 			page 82


 524:lvgl/src/lv_draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 2391              		.loc 1 524 62 is_stmt 0 discriminator 1 view .LVU735
 2392 06b6 FF29     		cmp	r1, #255
 2393 06b8 AED1     		bne	.L141
 524:lvgl/src/lv_draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 2394              		.loc 1 524 62 view .LVU736
 2395 06ba 049F     		ldr	r7, [sp, #16]
 2396              	.LVL256:
 524:lvgl/src/lv_draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 2397              		.loc 1 524 62 view .LVU737
 2398 06bc B0E7     		b	.L111
 2399              	.LVL257:
 2400              	.L138:
 526:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2401              		.loc 1 526 71 discriminator 1 view .LVU738
 2402 06be 81B2     		uxth	r1, r0
 526:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2403              		.loc 1 526 97 discriminator 1 view .LVU739
 2404 06c0 34F813B0 		ldrh	fp, [r4, r3, lsl #1]
 526:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2405              		.loc 1 526 53 discriminator 1 view .LVU740
 2406 06c4 5945     		cmp	r1, fp
 2407 06c6 ADD1     		bne	.L112
 526:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2408              		.loc 1 526 53 discriminator 1 view .LVU741
 2409 06c8 EAE7     		b	.L113
 2410              	.L139:
 535:lvgl/src/lv_draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 2411              		.loc 1 535 61 is_stmt 1 discriminator 1 view .LVU742
 535:lvgl/src/lv_draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 2412              		.loc 1 535 76 is_stmt 0 discriminator 1 view .LVU743
 2413 06ca A846     		mov	r8, r5	@ movhi
 2414              	.LVL258:
 535:lvgl/src/lv_draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 2415              		.loc 1 535 76 discriminator 1 view .LVU744
 2416 06cc E4E7     		b	.L115
 2417              	.LVL259:
 2418              	.L140:
 535:lvgl/src/lv_draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 2419              		.loc 1 535 76 discriminator 1 view .LVU745
 2420 06ce 4146     		mov	r1, r8	@ movhi
 2421              	.LVL260:
 545:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2422              		.loc 1 545 17 is_stmt 1 discriminator 2 view .LVU746
 545:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2423              		.loc 1 545 32 is_stmt 0 discriminator 2 view .LVU747
 2424 06d0 069B     		ldr	r3, [sp, #24]
 2425              	.LVL261:
 545:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 2426              		.loc 1 545 32 discriminator 2 view .LVU748
 2427 06d2 04EB4304 		add	r4, r4, r3, lsl #1
 2428              	.LVL262:
 546:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2429              		.loc 1 546 17 is_stmt 1 discriminator 2 view .LVU749
 546:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2430              		.loc 1 546 22 is_stmt 0 discriminator 2 view .LVU750
 2431 06d6 059B     		ldr	r3, [sp, #20]
ARM GAS  D:\Temp\ccohqSTj.s 			page 83


 2432 06d8 9944     		add	r9, r9, r3
 2433              	.LVL263:
 546:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2434              		.loc 1 546 22 discriminator 2 view .LVU751
 2435              	.LBE130:
 520:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2436              		.loc 1 520 57 discriminator 2 view .LVU752
 2437 06da 0CF1010C 		add	ip, ip, #1
 2438              	.LVL264:
 2439              	.L88:
 520:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2440              		.loc 1 520 50 discriminator 1 view .LVU753
 2441 06de 089B     		ldr	r3, [sp, #32]
 2442 06e0 B3F90630 		ldrsh	r3, [r3, #6]
 520:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2443              		.loc 1 520 13 discriminator 1 view .LVU754
 2444 06e4 6345     		cmp	r3, ip
 2445 06e6 FFF6F1AC 		blt	.L70
 2446              	.LBB133:
 521:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2447              		.loc 1 521 34 view .LVU755
 2448 06ea 4A46     		mov	r2, r9
 522:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 2449              		.loc 1 522 23 view .LVU756
 2450 06ec 0023     		movs	r3, #0
 2451 06ee 8846     		mov	r8, r1	@ movhi
 2452              	.LVL265:
 522:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 2453              		.loc 1 522 23 view .LVU757
 2454 06f0 DAE7     		b	.L117
 2455              	.LBE133:
 2456              	.LBE148:
 2457              	.LBE156:
 2458              		.cfi_endproc
 2459              	.LFE461:
 2461 06f2 00BF     		.section	.text.map_normal,"ax",%progbits
 2462              		.align	1
 2463              		.syntax unified
 2464              		.thumb
 2465              		.thumb_func
 2466              		.fpu fpv4-sp-d16
 2468              	map_normal:
 2469              	.LVL266:
 2470              	.LFB464:
 712:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2471              		.loc 1 712 1 is_stmt 1 view -0
 2472              		.cfi_startproc
 2473              		@ args = 16, pretend = 0, frame = 48
 2474              		@ frame_needed = 0, uses_anonymous_args = 0
 712:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2475              		.loc 1 712 1 is_stmt 0 view .LVU759
 2476 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2477              	.LCFI17:
 2478              		.cfi_def_cfa_offset 36
 2479              		.cfi_offset 4, -36
 2480              		.cfi_offset 5, -32
 2481              		.cfi_offset 6, -28
ARM GAS  D:\Temp\ccohqSTj.s 			page 84


 2482              		.cfi_offset 7, -24
 2483              		.cfi_offset 8, -20
 2484              		.cfi_offset 9, -16
 2485              		.cfi_offset 10, -12
 2486              		.cfi_offset 11, -8
 2487              		.cfi_offset 14, -4
 2488 0004 8FB0     		sub	sp, sp, #60
 2489              	.LCFI18:
 2490              		.cfi_def_cfa_offset 96
 2491 0006 1546     		mov	r5, r2
 2492 0008 0592     		str	r2, [sp, #20]
 2493 000a 9DF86470 		ldrb	r7, [sp, #100]	@ zero_extendqisi2
 715:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2494              		.loc 1 715 5 is_stmt 1 view .LVU760
 2495              	.LVL267:
 2496              	.LBB184:
 2497              	.LBI184:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 2498              		.loc 2 107 26 view .LVU761
 2499              	.LBB185:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2500              		.loc 2 109 5 view .LVU762
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2501              		.loc 2 109 31 is_stmt 0 view .LVU763
 2502 000e 8288     		ldrh	r2, [r0, #4]
 2503              	.LVL268:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2504              		.loc 2 109 44 view .LVU764
 2505 0010 B0F90040 		ldrsh	r4, [r0]
 2506 0014 0294     		str	r4, [sp, #8]
 2507 0016 BDF80840 		ldrh	r4, [sp, #8]
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2508              		.loc 2 109 36 view .LVU765
 2509 001a 121B     		subs	r2, r2, r4
 2510 001c 92B2     		uxth	r2, r2
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2511              		.loc 2 109 49 view .LVU766
 2512 001e 0132     		adds	r2, r2, #1
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2513              		.loc 2 109 12 view .LVU767
 2514 0020 12B2     		sxth	r2, r2
 2515 0022 0692     		str	r2, [sp, #24]
 2516              	.LVL269:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2517              		.loc 2 109 12 view .LVU768
 2518              	.LBE185:
 2519              	.LBE184:
 717:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 2520              		.loc 1 717 5 is_stmt 1 view .LVU769
 2521              	.LBB186:
 2522              	.LBI186:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 2523              		.loc 2 107 26 view .LVU770
 2524              	.LBB187:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2525              		.loc 2 109 5 view .LVU771
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
ARM GAS  D:\Temp\ccohqSTj.s 			page 85


 2526              		.loc 2 109 31 is_stmt 0 view .LVU772
 2527 0024 AA88     		ldrh	r2, [r5, #4]
 2528              	.LVL270:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2529              		.loc 2 109 44 view .LVU773
 2530 0026 B5F900C0 		ldrsh	ip, [r5]
 2531 002a 1FFA8CF4 		uxth	r4, ip
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2532              		.loc 2 109 36 view .LVU774
 2533 002e 121B     		subs	r2, r2, r4
 2534 0030 92B2     		uxth	r2, r2
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2535              		.loc 2 109 49 view .LVU775
 2536 0032 0132     		adds	r2, r2, #1
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2537              		.loc 2 109 12 view .LVU776
 2538 0034 12B2     		sxth	r2, r2
 2539 0036 0792     		str	r2, [sp, #28]
 2540              	.LVL271:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2541              		.loc 2 109 12 view .LVU777
 2542              	.LBE187:
 2543              	.LBE186:
 717:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 2544              		.loc 1 717 13 view .LVU778
 2545 0038 1646     		mov	r6, r2
 2546              	.LVL272:
 718:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2547              		.loc 1 718 5 is_stmt 1 view .LVU779
 2548              	.LBB188:
 2549              	.LBI188:
 117:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 2550              		.loc 2 117 26 view .LVU780
 2551              	.LBB189:
 2552              		.loc 2 119 5 view .LVU781
 2553              		.loc 2 119 31 is_stmt 0 view .LVU782
 2554 003a EC88     		ldrh	r4, [r5, #6]
 2555              		.loc 2 119 44 view .LVU783
 2556 003c B5F90220 		ldrsh	r2, [r5, #2]
 2557              	.LVL273:
 2558              		.loc 2 119 44 view .LVU784
 2559 0040 95B2     		uxth	r5, r2
 2560              	.LVL274:
 2561              		.loc 2 119 36 view .LVU785
 2562 0042 641B     		subs	r4, r4, r5
 2563 0044 A4B2     		uxth	r4, r4
 2564              		.loc 2 119 49 view .LVU786
 2565 0046 0134     		adds	r4, r4, #1
 2566              		.loc 2 119 12 view .LVU787
 2567 0048 25B2     		sxth	r5, r4
 2568 004a 0895     		str	r5, [sp, #32]
 2569              	.LVL275:
 2570              		.loc 2 119 12 view .LVU788
 2571              	.LBE189:
 2572              	.LBE188:
 721:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2573              		.loc 1 721 5 is_stmt 1 view .LVU789
ARM GAS  D:\Temp\ccohqSTj.s 			page 86


 2574              	.LBB190:
 2575              	.LBI190:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 2576              		.loc 2 107 26 view .LVU790
 2577              	.LBB191:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2578              		.loc 2 109 5 view .LVU791
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2579              		.loc 2 109 31 is_stmt 0 view .LVU792
 2580 004c 9C88     		ldrh	r4, [r3, #4]
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2581              		.loc 2 109 44 view .LVU793
 2582 004e B3F900E0 		ldrsh	lr, [r3]
 2583 0052 1FFA8EF5 		uxth	r5, lr
 2584              	.LVL276:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2585              		.loc 2 109 36 view .LVU794
 2586 0056 641B     		subs	r4, r4, r5
 2587 0058 A4B2     		uxth	r4, r4
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2588              		.loc 2 109 49 view .LVU795
 2589 005a 0134     		adds	r4, r4, #1
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2590              		.loc 2 109 12 view .LVU796
 2591 005c 25B2     		sxth	r5, r4
 2592 005e 0495     		str	r5, [sp, #16]
 2593              	.LVL277:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 2594              		.loc 2 109 12 view .LVU797
 2595              	.LBE191:
 2596              	.LBE190:
 724:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2597              		.loc 1 724 5 is_stmt 1 view .LVU798
 724:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2598              		.loc 1 724 69 is_stmt 0 view .LVU799
 2599 0060 069C     		ldr	r4, [sp, #24]
 2600 0062 04FB02C4 		mla	r4, r4, r2, ip
 724:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2601              		.loc 1 724 18 view .LVU800
 2602 0066 01EB4404 		add	r4, r1, r4, lsl #1
 2603              	.LVL278:
 727:lvgl/src/lv_draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 2604              		.loc 1 727 5 is_stmt 1 view .LVU801
 727:lvgl/src/lv_draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 2605              		.loc 1 727 84 is_stmt 0 view .LVU802
 2606 006a B3F90230 		ldrsh	r3, [r3, #2]
 2607              	.LVL279:
 727:lvgl/src/lv_draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 2608              		.loc 1 727 100 view .LVU803
 2609 006e B0F90210 		ldrsh	r1, [r0, #2]
 2610              	.LVL280:
 727:lvgl/src/lv_draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 2611              		.loc 1 727 89 view .LVU804
 2612 0072 5B1A     		subs	r3, r3, r1
 727:lvgl/src/lv_draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 2613              		.loc 1 727 73 view .LVU805
 2614 0074 D21A     		subs	r2, r2, r3
ARM GAS  D:\Temp\ccohqSTj.s 			page 87


 2615              	.LVL281:
 728:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2616              		.loc 1 728 5 is_stmt 1 view .LVU806
 728:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2617              		.loc 1 728 53 is_stmt 0 view .LVU807
 2618 0076 0299     		ldr	r1, [sp, #8]
 2619 0078 AEEB010E 		sub	lr, lr, r1
 728:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2620              		.loc 1 728 37 view .LVU808
 2621 007c ACEB0E05 		sub	r5, ip, lr
 2622              	.LVL282:
 728:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2623              		.loc 1 728 19 view .LVU809
 2624 0080 049B     		ldr	r3, [sp, #16]
 2625 0082 03FB0252 		mla	r2, r3, r2, r5
 2626              	.LVL283:
 728:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2627              		.loc 1 728 19 view .LVU810
 2628 0086 189D     		ldr	r5, [sp, #96]
 2629 0088 05EB4205 		add	r5, r5, r2, lsl #1
 2630              	.LVL284:
 731:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2631              		.loc 1 731 5 is_stmt 1 view .LVU811
 731:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2632              		.loc 1 731 24 is_stmt 0 view .LVU812
 2633 008c FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 2634              	.LVL285:
 731:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2635              		.loc 1 731 24 view .LVU813
 2636 0090 0290     		str	r0, [sp, #8]
 2637              	.LVL286:
 734:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t y;
 2638              		.loc 1 734 5 is_stmt 1 view .LVU814
 735:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2639              		.loc 1 735 5 view .LVU815
 738:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU
 2640              		.loc 1 738 5 view .LVU816
 738:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU
 2641              		.loc 1 738 7 is_stmt 0 view .LVU817
 2642 0092 9DF86C30 		ldrb	r3, [sp, #108]	@ zero_extendqisi2
 2643 0096 012B     		cmp	r3, #1
 2644 0098 08D0     		beq	.L189
 866:lvgl/src/lv_draw/lv_draw_blend.c ****             /*Go to the first pixel of the row */
 2645              		.loc 1 866 9 is_stmt 1 view .LVU818
 866:lvgl/src/lv_draw/lv_draw_blend.c ****             /*Go to the first pixel of the row */
 2646              		.loc 1 866 11 is_stmt 0 view .LVU819
 2647 009a FD2F     		cmp	r7, #253
 2648 009c 40F20983 		bls	.L183
 2649              	.LBB192:
 869:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2650              		.loc 1 869 13 is_stmt 1 view .LVU820
 869:lvgl/src/lv_draw/lv_draw_blend.c **** 
 2651              		.loc 1 869 21 is_stmt 0 view .LVU821
 2652 00a0 079B     		ldr	r3, [sp, #28]
 2653 00a2 043B     		subs	r3, r3, #4
 2654 00a4 0293     		str	r3, [sp, #8]
 2655              	.LVL287:
ARM GAS  D:\Temp\ccohqSTj.s 			page 88


 871:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2656              		.loc 1 871 13 is_stmt 1 view .LVU822
 871:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2657              		.loc 1 871 19 is_stmt 0 view .LVU823
 2658 00a6 0023     		movs	r3, #0
 2659              	.LVL288:
 871:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2660              		.loc 1 871 19 view .LVU824
 2661 00a8 0593     		str	r3, [sp, #20]
 2662              	.LVL289:
 871:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2663              		.loc 1 871 13 view .LVU825
 2664 00aa A0E2     		b	.L156
 2665              	.LVL290:
 2666              	.L189:
 871:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2667              		.loc 1 871 13 view .LVU826
 2668              	.LBE192:
 740:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 2669              		.loc 1 740 9 is_stmt 1 view .LVU827
 740:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 2670              		.loc 1 740 24 is_stmt 0 view .LVU828
 2671 00ac 836A     		ldr	r3, [r0, #40]
 740:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 2672              		.loc 1 740 11 view .LVU829
 2673 00ae 23B1     		cbz	r3, .L146
 740:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 2674              		.loc 1 740 42 discriminator 1 view .LVU830
 2675 00b0 0598     		ldr	r0, [sp, #20]
 2676              	.LVL291:
 740:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 2677              		.loc 1 740 42 discriminator 1 view .LVU831
 2678 00b2 FFF7FEFF 		bl	lv_area_get_size
 2679              	.LVL292:
 740:lvgl/src/lv_draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 2680              		.loc 1 740 38 discriminator 1 view .LVU832
 2681 00b6 F028     		cmp	r0, #240
 2682 00b8 08D8     		bhi	.L190
 2683              	.L146:
 750:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 2684              		.loc 1 750 9 is_stmt 1 view .LVU833
 750:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 2685              		.loc 1 750 11 is_stmt 0 view .LVU834
 2686 00ba FD2F     		cmp	r7, #253
 2687 00bc 34D8     		bhi	.L181
 845:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2688              		.loc 1 845 19 view .LVU835
 2689 00be 4FF0000E 		mov	lr, #0
 2690 00c2 DDF82080 		ldr	r8, [sp, #32]
 2691 00c6 DDF818A0 		ldr	r10, [sp, #24]
 2692 00ca 7AE0     		b	.L151
 2693              	.L190:
 741:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, map_buf_first, draw_area_w
 2694              		.loc 1 741 13 is_stmt 1 view .LVU836
 741:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, map_buf_first, draw_area_w
 2695              		.loc 1 741 30 is_stmt 0 view .LVU837
 2696 00cc 059B     		ldr	r3, [sp, #20]
ARM GAS  D:\Temp\ccohqSTj.s 			page 89


 2697 00ce B3F90260 		ldrsh	r6, [r3, #2]
 2698              	.LVL293:
 741:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, map_buf_first, draw_area_w
 2699              		.loc 1 741 30 view .LVU838
 2700 00d2 DDF80880 		ldr	r8, [sp, #8]
 2701 00d6 DDF818A0 		ldr	r10, [sp, #24]
 2702 00da 9946     		mov	r9, r3
 2703 00dc BB46     		mov	fp, r7
 741:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, map_buf_first, draw_area_w
 2704              		.loc 1 741 13 view .LVU839
 2705 00de 0EE0     		b	.L147
 2706              	.L148:
 742:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 2707              		.loc 1 742 17 is_stmt 1 discriminator 3 view .LVU840
 742:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 2708              		.loc 1 742 29 is_stmt 0 discriminator 3 view .LVU841
 2709 00e0 D8F82870 		ldr	r7, [r8, #40]
 742:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 2710              		.loc 1 742 17 discriminator 3 view .LVU842
 2711 00e4 CDF800B0 		str	fp, [sp]
 2712 00e8 079B     		ldr	r3, [sp, #28]
 2713 00ea 2A46     		mov	r2, r5
 2714 00ec 2146     		mov	r1, r4
 2715 00ee 4046     		mov	r0, r8
 2716 00f0 B847     		blx	r7
 2717              	.LVL294:
 743:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2718              		.loc 1 743 17 is_stmt 1 discriminator 3 view .LVU843
 743:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2719              		.loc 1 743 32 is_stmt 0 discriminator 3 view .LVU844
 2720 00f2 04EB4A04 		add	r4, r4, r10, lsl #1
 2721              	.LVL295:
 744:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2722              		.loc 1 744 17 is_stmt 1 discriminator 3 view .LVU845
 744:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2723              		.loc 1 744 31 is_stmt 0 discriminator 3 view .LVU846
 2724 00f6 049B     		ldr	r3, [sp, #16]
 2725 00f8 05EB4305 		add	r5, r5, r3, lsl #1
 2726              	.LVL296:
 741:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, map_buf_first, draw_area_w
 2727              		.loc 1 741 57 discriminator 3 view .LVU847
 2728 00fc 0136     		adds	r6, r6, #1
 2729              	.LVL297:
 2730              	.L147:
 741:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, map_buf_first, draw_area_w
 2731              		.loc 1 741 50 discriminator 1 view .LVU848
 2732 00fe B9F90630 		ldrsh	r3, [r9, #6]
 741:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, map_buf_first, draw_area_w
 2733              		.loc 1 741 13 discriminator 1 view .LVU849
 2734 0102 B342     		cmp	r3, r6
 2735 0104 ECDA     		bge	.L148
 741:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp->driver.gpu_blend_cb(&disp->driver, disp_buf_first, map_buf_first, draw_area_w
 2736              		.loc 1 741 13 discriminator 1 view .LVU850
 2737 0106 0CE0     		b	.L144
 2738              	.L152:
 795:lvgl/src/lv_draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 2739              		.loc 1 795 17 is_stmt 1 discriminator 3 view .LVU851
ARM GAS  D:\Temp\ccohqSTj.s 			page 90


 2740 0108 4FEA4902 		lsl	r2, r9, #1
 2741 010c 2946     		mov	r1, r5
 2742 010e 2046     		mov	r0, r4
 2743 0110 FFF7FEFF 		bl	_lv_memcpy
 2744              	.LVL298:
 796:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2745              		.loc 1 796 17 discriminator 3 view .LVU852
 796:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2746              		.loc 1 796 32 is_stmt 0 discriminator 3 view .LVU853
 2747 0114 04EB4A04 		add	r4, r4, r10, lsl #1
 2748              	.LVL299:
 797:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2749              		.loc 1 797 17 is_stmt 1 discriminator 3 view .LVU854
 797:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2750              		.loc 1 797 31 is_stmt 0 discriminator 3 view .LVU855
 2751 0118 05EB4805 		add	r5, r5, r8, lsl #1
 2752              	.LVL300:
 794:lvgl/src/lv_draw/lv_draw_blend.c ****                 _lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 2753              		.loc 1 794 42 discriminator 3 view .LVU856
 2754 011c 0136     		adds	r6, r6, #1
 2755              	.LVL301:
 2756              	.L150:
 794:lvgl/src/lv_draw/lv_draw_blend.c ****                 _lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 2757              		.loc 1 794 13 discriminator 1 view .LVU857
 2758 011e BE42     		cmp	r6, r7
 2759 0120 F2DB     		blt	.L152
 2760              	.LVL302:
 2761              	.L144:
 951:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_USE_BLEND_MODES
 2762              		.loc 1 951 1 view .LVU858
 2763 0122 0FB0     		add	sp, sp, #60
 2764              	.LCFI19:
 2765              		.cfi_remember_state
 2766              		.cfi_def_cfa_offset 36
 2767              		@ sp needed
 2768 0124 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2769              	.LVL303:
 2770              	.L181:
 2771              	.LCFI20:
 2772              		.cfi_restore_state
 794:lvgl/src/lv_draw/lv_draw_blend.c ****                 _lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 2773              		.loc 1 794 19 view .LVU859
 2774 0128 0026     		movs	r6, #0
 2775              	.LVL304:
 794:lvgl/src/lv_draw/lv_draw_blend.c ****                 _lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 2776              		.loc 1 794 19 view .LVU860
 2777 012a 089F     		ldr	r7, [sp, #32]
 2778 012c DDF81080 		ldr	r8, [sp, #16]
 2779 0130 DDF81C90 		ldr	r9, [sp, #28]
 2780 0134 DDF818A0 		ldr	r10, [sp, #24]
 2781 0138 F1E7     		b	.L150
 2782              	.LVL305:
 2783              	.L153:
 855:lvgl/src/lv_draw/lv_draw_blend.c ****                     }
 2784              		.loc 1 855 25 is_stmt 1 discriminator 3 view .LVU861
 2785 013a 35F81030 		ldrh	r3, [r5, r0, lsl #1]
 2786 013e 34F81010 		ldrh	r1, [r4, r0, lsl #1]
ARM GAS  D:\Temp\ccohqSTj.s 			page 91


 2787              	.LVL306:
 2788              	.LBB207:
 2789              	.LBI207:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 2790              		.loc 3 447 48 discriminator 3 view .LVU862
 2791              	.LBB208:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2792              		.loc 3 449 5 discriminator 3 view .LVU863
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2793              		.loc 3 452 5 discriminator 3 view .LVU864
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2794              		.loc 3 452 5 is_stmt 0 discriminator 3 view .LVU865
 2795 0142 DA0A     		lsrs	r2, r3, #11
 2796              	.LVL307:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2797              		.loc 3 452 5 discriminator 3 view .LVU866
 2798 0144 4FEAD12B 		lsr	fp, r1, #11
 2799 0148 C7F1FF0C 		rsb	ip, r7, #255
 2800 014c 0CFB0BFB 		mul	fp, ip, fp
 2801 0150 07FB02B2 		mla	r2, r7, r2, fp
 2802 0154 8032     		adds	r2, r2, #128
 2803 0156 02EB022B 		add	fp, r2, r2, lsl #8
 2804 015a 02EBCB12 		add	r2, r2, fp, lsl #7
 2805 015e C2F3C452 		ubfx	r2, r2, #23, #5
 2806 0162 62F3CF29 		bfi	r9, r2, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2807              		.loc 3 454 5 is_stmt 1 discriminator 3 view .LVU867
 2808 0166 C3F34512 		ubfx	r2, r3, #5, #6
 2809 016a C1F3451B 		ubfx	fp, r1, #5, #6
 2810 016e 0BFB0CFB 		mul	fp, fp, ip
 2811 0172 02FB07B2 		mla	r2, r2, r7, fp
 2812 0176 8032     		adds	r2, r2, #128
 2813 0178 02EB022B 		add	fp, r2, r2, lsl #8
 2814 017c 02EBCB12 		add	r2, r2, fp, lsl #7
 2815 0180 C2F3C552 		ubfx	r2, r2, #23, #6
 2816 0184 62F34A19 		bfi	r9, r2, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2817              		.loc 3 456 5 discriminator 3 view .LVU868
 2818 0188 03F01F03 		and	r3, r3, #31
 2819              	.LVL308:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2820              		.loc 3 456 5 is_stmt 0 discriminator 3 view .LVU869
 2821 018c 01F01F01 		and	r1, r1, #31
 2822              	.LVL309:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2823              		.loc 3 456 5 discriminator 3 view .LVU870
 2824 0190 01FB0CFC 		mul	ip, r1, ip
 2825 0194 03FB07C3 		mla	r3, r3, r7, ip
 2826 0198 8033     		adds	r3, r3, #128
 2827 019a 03EB0322 		add	r2, r3, r3, lsl #8
 2828 019e 03EBC213 		add	r3, r3, r2, lsl #7
 2829 01a2 C3F3C453 		ubfx	r3, r3, #23, #5
 2830 01a6 63F30409 		bfi	r9, r3, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2831              		.loc 3 458 5 is_stmt 1 discriminator 3 view .LVU871
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2832              		.loc 3 458 5 discriminator 3 view .LVU872
ARM GAS  D:\Temp\ccohqSTj.s 			page 92


 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2833              		.loc 3 464 5 discriminator 3 view .LVU873
 2834              	.LVL310:
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2835              		.loc 3 464 5 is_stmt 0 discriminator 3 view .LVU874
 2836              	.LBE208:
 2837              	.LBE207:
 855:lvgl/src/lv_draw/lv_draw_blend.c ****                     }
 2838              		.loc 1 855 45 discriminator 3 view .LVU875
 2839 01aa 24F81090 		strh	r9, [r4, r0, lsl #1]	@ movhi
 846:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2840              		.loc 1 846 46 discriminator 3 view .LVU876
 2841 01ae 0130     		adds	r0, r0, #1
 2842              	.LVL311:
 2843              	.L154:
 846:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2844              		.loc 1 846 17 discriminator 1 view .LVU877
 2845 01b0 B042     		cmp	r0, r6
 2846 01b2 C2DB     		blt	.L153
 858:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2847              		.loc 1 858 17 is_stmt 1 discriminator 2 view .LVU878
 858:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 2848              		.loc 1 858 32 is_stmt 0 discriminator 2 view .LVU879
 2849 01b4 04EB4A04 		add	r4, r4, r10, lsl #1
 2850              	.LVL312:
 859:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2851              		.loc 1 859 17 is_stmt 1 discriminator 2 view .LVU880
 859:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 2852              		.loc 1 859 31 is_stmt 0 discriminator 2 view .LVU881
 2853 01b8 049B     		ldr	r3, [sp, #16]
 2854 01ba 05EB4305 		add	r5, r5, r3, lsl #1
 2855              	.LVL313:
 845:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2856              		.loc 1 845 42 discriminator 2 view .LVU882
 2857 01be 0EF1010E 		add	lr, lr, #1
 2858              	.LVL314:
 2859              	.L151:
 845:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 2860              		.loc 1 845 13 discriminator 1 view .LVU883
 2861 01c2 C645     		cmp	lr, r8
 2862 01c4 ADDA     		bge	.L144
 846:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2863              		.loc 1 846 23 view .LVU884
 2864 01c6 0020     		movs	r0, #0
 2865 01c8 F2E7     		b	.L154
 2866              	.LVL315:
 2867              	.L158:
 2868              	.LBB209:
 2869              	.LBB193:
 882:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2870              		.loc 1 882 21 is_stmt 1 discriminator 4 view .LVU885
 2871 01ca 35F813C0 		ldrh	ip, [r5, r3, lsl #1]
 2872              	.LVL316:
 882:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2873              		.loc 1 882 21 is_stmt 0 discriminator 4 view .LVU886
 2874 01ce 34F81370 		ldrh	r7, [r4, r3, lsl #1]
 2875              	.LVL317:
ARM GAS  D:\Temp\ccohqSTj.s 			page 93


 2876              	.LBB194:
 2877              	.LBI194:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 2878              		.loc 3 447 48 is_stmt 1 discriminator 4 view .LVU887
 2879              	.LBB195:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 2880              		.loc 3 449 5 discriminator 4 view .LVU888
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2881              		.loc 3 452 5 discriminator 4 view .LVU889
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2882              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU890
 2883 01d2 4FEADC20 		lsr	r0, ip, #11
 2884              	.LVL318:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2885              		.loc 3 452 5 discriminator 4 view .LVU891
 2886 01d6 4FEAD728 		lsr	r8, r7, #11
 2887              	.LVL319:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2888              		.loc 3 452 5 discriminator 4 view .LVU892
 2889 01da C1F1FF0E 		rsb	lr, r1, #255
 2890              	.LVL320:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2891              		.loc 3 452 5 discriminator 4 view .LVU893
 2892 01de 0EFB08F8 		mul	r8, lr, r8
 2893 01e2 01FB0080 		mla	r0, r1, r0, r8
 2894 01e6 8030     		adds	r0, r0, #128
 2895 01e8 00EB0028 		add	r8, r0, r0, lsl #8
 2896 01ec 00EBC810 		add	r0, r0, r8, lsl #7
 2897 01f0 C0F3C450 		ubfx	r0, r0, #23, #5
 2898 01f4 60F3CF2A 		bfi	r10, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2899              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU894
 2900 01f8 CCF34510 		ubfx	r0, ip, #5, #6
 2901 01fc C7F34518 		ubfx	r8, r7, #5, #6
 2902 0200 08FB0EF8 		mul	r8, r8, lr
 2903 0204 00FB0180 		mla	r0, r0, r1, r8
 2904 0208 8030     		adds	r0, r0, #128
 2905 020a 00EB0028 		add	r8, r0, r0, lsl #8
 2906 020e 00EBC810 		add	r0, r0, r8, lsl #7
 2907 0212 C0F3C550 		ubfx	r0, r0, #23, #6
 2908 0216 60F34A1A 		bfi	r10, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2909              		.loc 3 456 5 discriminator 4 view .LVU895
 2910 021a 0CF01F0C 		and	ip, ip, #31
 2911              	.LVL321:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2912              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU896
 2913 021e 07F01F07 		and	r7, r7, #31
 2914              	.LVL322:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2915              		.loc 3 456 5 discriminator 4 view .LVU897
 2916 0222 07FB0EFE 		mul	lr, r7, lr
 2917 0226 0CFB01E1 		mla	r1, ip, r1, lr
 2918              	.LVL323:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2919              		.loc 3 456 5 discriminator 4 view .LVU898
 2920 022a 8031     		adds	r1, r1, #128
ARM GAS  D:\Temp\ccohqSTj.s 			page 94


 2921 022c 01EB0120 		add	r0, r1, r1, lsl #8
 2922 0230 01EBC011 		add	r1, r1, r0, lsl #7
 2923 0234 C1F3C451 		ubfx	r1, r1, #23, #5
 2924 0238 61F3040A 		bfi	r10, r1, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2925              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU899
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 2926              		.loc 3 458 5 discriminator 4 view .LVU900
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2927              		.loc 3 464 5 discriminator 4 view .LVU901
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 2928              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU902
 2929              	.LBE195:
 2930              	.LBE194:
 882:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2931              		.loc 1 882 21 discriminator 4 view .LVU903
 2932 023c 24F813A0 		strh	r10, [r4, r3, lsl #1]	@ movhi
 2933              	.LVL324:
 2934              	.L157:
 882:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2935              		.loc 1 882 21 is_stmt 1 discriminator 6 view .LVU904
 2936 0240 0132     		adds	r2, r2, #1
 2937              	.LVL325:
 878:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2938              		.loc 1 878 82 is_stmt 0 discriminator 6 view .LVU905
 2939 0242 0133     		adds	r3, r3, #1
 2940              	.LVL326:
 2941              	.L176:
 878:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2942              		.loc 1 878 17 discriminator 2 view .LVU906
 2943 0244 B342     		cmp	r3, r6
 2944 0246 80F26481 		bge	.L187
 878:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2945              		.loc 1 878 44 discriminator 3 view .LVU907
 2946 024a 12F0030F 		tst	r2, #3
 2947 024e 09D0     		beq	.L191
 882:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2948              		.loc 1 882 21 is_stmt 1 view .LVU908
 2949 0250 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2950 0252 0029     		cmp	r1, #0
 2951 0254 F4D0     		beq	.L157
 882:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2952              		.loc 1 882 21 discriminator 1 view .LVU909
 2953 0256 FF29     		cmp	r1, #255
 2954 0258 B7D1     		bne	.L158
 882:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2955              		.loc 1 882 21 discriminator 3 view .LVU910
 2956 025a 35F81310 		ldrh	r1, [r5, r3, lsl #1]
 2957 025e 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 2958 0262 EDE7     		b	.L157
 2959              	.L191:
 882:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2960              		.loc 1 882 21 is_stmt 0 discriminator 3 view .LVU911
 2961 0264 0B96     		str	r6, [sp, #44]
 2962 0266 ADF830B0 		strh	fp, [sp, #48]	@ movhi
 2963 026a BDF80CC0 		ldrh	ip, [sp, #12]
 2964              	.LVL327:
ARM GAS  D:\Temp\ccohqSTj.s 			page 95


 882:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2965              		.loc 1 882 21 discriminator 3 view .LVU912
 2966 026e BDF824E0 		ldrh	lr, [sp, #36]
 2967              	.LVL328:
 882:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2968              		.loc 1 882 21 discriminator 3 view .LVU913
 2969 0272 BDF82A80 		ldrh	r8, [sp, #42]
 2970              	.LVL329:
 882:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 2971              		.loc 1 882 21 discriminator 3 view .LVU914
 2972 0276 ADF832A0 		strh	r10, [sp, #50]	@ movhi
 2973 027a 14E0     		b	.L170
 2974              	.LVL330:
 2975              	.L193:
 890:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
 2976              		.loc 1 890 29 is_stmt 1 view .LVU915
 890:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
 2977              		.loc 1 890 47 is_stmt 0 view .LVU916
 2978 027c 35F81310 		ldrh	r1, [r5, r3, lsl #1]
 2979 0280 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 891:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 2980              		.loc 1 891 29 is_stmt 1 view .LVU917
 891:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 2981              		.loc 1 891 66 is_stmt 0 view .LVU918
 2982 0284 591C     		adds	r1, r3, #1
 891:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 2983              		.loc 1 891 51 view .LVU919
 2984 0286 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 2985              	.LVL331:
 891:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 2986              		.loc 1 891 51 view .LVU920
 2987 028a 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 892:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 2988              		.loc 1 892 29 is_stmt 1 view .LVU921
 892:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 2989              		.loc 1 892 66 is_stmt 0 view .LVU922
 2990 028e 991C     		adds	r1, r3, #2
 892:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 2991              		.loc 1 892 51 view .LVU923
 2992 0290 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 2993 0294 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 893:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 2994              		.loc 1 893 29 is_stmt 1 view .LVU924
 893:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 2995              		.loc 1 893 66 is_stmt 0 view .LVU925
 2996 0298 D91C     		adds	r1, r3, #3
 893:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 2997              		.loc 1 893 51 view .LVU926
 2998 029a 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 2999 029e 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 3000              	.LVL332:
 3001              	.L161:
 910:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 3002              		.loc 1 910 21 is_stmt 1 view .LVU927
 910:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 3003              		.loc 1 910 27 is_stmt 0 view .LVU928
 3004 02a2 0432     		adds	r2, r2, #4
ARM GAS  D:\Temp\ccohqSTj.s 			page 96


 3005              	.LVL333:
 887:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(*mask32) {
 3006              		.loc 1 887 37 view .LVU929
 3007 02a4 0433     		adds	r3, r3, #4
 3008              	.LVL334:
 3009              	.L170:
 887:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(*mask32) {
 3010              		.loc 1 887 17 discriminator 1 view .LVU930
 3011 02a6 0299     		ldr	r1, [sp, #8]
 3012 02a8 8B42     		cmp	r3, r1
 3013 02aa 80F23E81 		bge	.L192
 888:lvgl/src/lv_draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 3014              		.loc 1 888 21 is_stmt 1 view .LVU931
 888:lvgl/src/lv_draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 3015              		.loc 1 888 24 is_stmt 0 view .LVU932
 3016 02ae 1168     		ldr	r1, [r2]
 888:lvgl/src/lv_draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 3017              		.loc 1 888 23 view .LVU933
 3018 02b0 0029     		cmp	r1, #0
 3019 02b2 F6D0     		beq	.L161
 889:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 3020              		.loc 1 889 25 is_stmt 1 view .LVU934
 889:lvgl/src/lv_draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 3021              		.loc 1 889 27 is_stmt 0 view .LVU935
 3022 02b4 B1F1FF3F 		cmp	r1, #-1
 3023 02b8 E0D0     		beq	.L193
 896:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3024              		.loc 1 896 29 is_stmt 1 view .LVU936
 3025              	.LVL335:
 903:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3026              		.loc 1 903 29 view .LVU937
 3027 02ba 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3028 02bc E1B3     		cbz	r1, .L163
 903:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3029              		.loc 1 903 29 discriminator 1 view .LVU938
 3030 02be FF29     		cmp	r1, #255
 3031 02c0 00F01081 		beq	.L194
 903:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3032              		.loc 1 903 29 discriminator 4 view .LVU939
 3033 02c4 35F81370 		ldrh	r7, [r5, r3, lsl #1]
 3034 02c8 34F81360 		ldrh	r6, [r4, r3, lsl #1]
 3035              	.LVL336:
 3036              	.LBB196:
 3037              	.LBI196:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 3038              		.loc 3 447 48 discriminator 4 view .LVU940
 3039              	.LBB197:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3040              		.loc 3 449 5 discriminator 4 view .LVU941
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3041              		.loc 3 452 5 discriminator 4 view .LVU942
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3042              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU943
 3043 02cc F80A     		lsrs	r0, r7, #11
 3044              	.LVL337:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3045              		.loc 3 452 5 discriminator 4 view .LVU944
ARM GAS  D:\Temp\ccohqSTj.s 			page 97


 3046 02ce 4FEAD62A 		lsr	r10, r6, #11
 3047              	.LVL338:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3048              		.loc 3 452 5 discriminator 4 view .LVU945
 3049 02d2 C1F1FF09 		rsb	r9, r1, #255
 3050 02d6 09FB0AFA 		mul	r10, r9, r10
 3051 02da 01FB00A0 		mla	r0, r1, r0, r10
 3052 02de 8030     		adds	r0, r0, #128
 3053 02e0 00EB002A 		add	r10, r0, r0, lsl #8
 3054 02e4 00EBCA10 		add	r0, r0, r10, lsl #7
 3055 02e8 C0F3C450 		ubfx	r0, r0, #23, #5
 3056 02ec 60F3CF28 		bfi	r8, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3057              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU946
 3058 02f0 C7F34510 		ubfx	r0, r7, #5, #6
 3059 02f4 C6F3451A 		ubfx	r10, r6, #5, #6
 3060 02f8 0AFB09FA 		mul	r10, r10, r9
 3061 02fc 00FB01A0 		mla	r0, r0, r1, r10
 3062 0300 8030     		adds	r0, r0, #128
 3063 0302 00EB002A 		add	r10, r0, r0, lsl #8
 3064 0306 00EBCA10 		add	r0, r0, r10, lsl #7
 3065 030a C0F3C550 		ubfx	r0, r0, #23, #6
 3066 030e 60F34A18 		bfi	r8, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3067              		.loc 3 456 5 discriminator 4 view .LVU947
 3068 0312 07F01F07 		and	r7, r7, #31
 3069              	.LVL339:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3070              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU948
 3071 0316 06F01F06 		and	r6, r6, #31
 3072              	.LVL340:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3073              		.loc 3 456 5 discriminator 4 view .LVU949
 3074 031a 06FB09F6 		mul	r6, r6, r9
 3075 031e 07FB0166 		mla	r6, r7, r1, r6
 3076 0322 8036     		adds	r6, r6, #128
 3077 0324 06EB0621 		add	r1, r6, r6, lsl #8
 3078              	.LVL341:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3079              		.loc 3 456 5 discriminator 4 view .LVU950
 3080 0328 06EBC116 		add	r6, r6, r1, lsl #7
 3081 032c C6F3C456 		ubfx	r6, r6, #23, #5
 3082 0330 66F30408 		bfi	r8, r6, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3083              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU951
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3084              		.loc 3 458 5 discriminator 4 view .LVU952
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3085              		.loc 3 464 5 discriminator 4 view .LVU953
 3086              	.LVL342:
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3087              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU954
 3088              	.LBE197:
 3089              	.LBE196:
 903:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3090              		.loc 1 903 29 discriminator 4 view .LVU955
 3091 0334 24F81380 		strh	r8, [r4, r3, lsl #1]	@ movhi
ARM GAS  D:\Temp\ccohqSTj.s 			page 98


 3092              	.LVL343:
 3093              	.L163:
 903:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3094              		.loc 1 903 29 is_stmt 1 discriminator 6 view .LVU956
 904:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3095              		.loc 1 904 29 discriminator 6 view .LVU957
 3096 0338 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 3097 033a F1B3     		cbz	r1, .L165
 904:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3098              		.loc 1 904 29 discriminator 1 view .LVU958
 3099 033c FF29     		cmp	r1, #255
 3100 033e 00F0D680 		beq	.L195
 904:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3101              		.loc 1 904 29 discriminator 4 view .LVU959
 3102 0342 03F10109 		add	r9, r3, #1
 3103 0346 35F81970 		ldrh	r7, [r5, r9, lsl #1]
 3104 034a 34F81960 		ldrh	r6, [r4, r9, lsl #1]
 3105              	.LVL344:
 3106              	.LBB198:
 3107              	.LBI198:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 3108              		.loc 3 447 48 discriminator 4 view .LVU960
 3109              	.LBB199:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3110              		.loc 3 449 5 discriminator 4 view .LVU961
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3111              		.loc 3 452 5 discriminator 4 view .LVU962
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3112              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU963
 3113 034e F80A     		lsrs	r0, r7, #11
 3114              	.LVL345:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3115              		.loc 3 452 5 discriminator 4 view .LVU964
 3116 0350 4FEAD62B 		lsr	fp, r6, #11
 3117              	.LVL346:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3118              		.loc 3 452 5 discriminator 4 view .LVU965
 3119 0354 C1F1FF0A 		rsb	r10, r1, #255
 3120              	.LVL347:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3121              		.loc 3 452 5 discriminator 4 view .LVU966
 3122 0358 0AFB0BFB 		mul	fp, r10, fp
 3123 035c 01FB00B0 		mla	r0, r1, r0, fp
 3124 0360 8030     		adds	r0, r0, #128
 3125 0362 00EB002B 		add	fp, r0, r0, lsl #8
 3126 0366 00EBCB10 		add	r0, r0, fp, lsl #7
 3127 036a C0F3C450 		ubfx	r0, r0, #23, #5
 3128 036e 60F3CF2E 		bfi	lr, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3129              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU967
 3130 0372 C7F34510 		ubfx	r0, r7, #5, #6
 3131 0376 C6F3451B 		ubfx	fp, r6, #5, #6
 3132 037a 0BFB0AFB 		mul	fp, fp, r10
 3133 037e 00FB01B0 		mla	r0, r0, r1, fp
 3134 0382 8030     		adds	r0, r0, #128
 3135 0384 00EB002B 		add	fp, r0, r0, lsl #8
 3136 0388 00EBCB10 		add	r0, r0, fp, lsl #7
ARM GAS  D:\Temp\ccohqSTj.s 			page 99


 3137 038c C0F3C550 		ubfx	r0, r0, #23, #6
 3138 0390 60F34A1E 		bfi	lr, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3139              		.loc 3 456 5 discriminator 4 view .LVU968
 3140 0394 07F01F07 		and	r7, r7, #31
 3141              	.LVL348:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3142              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU969
 3143 0398 06F01F06 		and	r6, r6, #31
 3144              	.LVL349:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3145              		.loc 3 456 5 discriminator 4 view .LVU970
 3146 039c 06FB0AF6 		mul	r6, r6, r10
 3147 03a0 07FB0166 		mla	r6, r7, r1, r6
 3148 03a4 8036     		adds	r6, r6, #128
 3149 03a6 06EB0621 		add	r1, r6, r6, lsl #8
 3150              	.LVL350:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3151              		.loc 3 456 5 discriminator 4 view .LVU971
 3152 03aa 06EBC116 		add	r6, r6, r1, lsl #7
 3153 03ae C6F3C456 		ubfx	r6, r6, #23, #5
 3154 03b2 66F3040E 		bfi	lr, r6, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3155              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU972
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3156              		.loc 3 458 5 discriminator 4 view .LVU973
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3157              		.loc 3 464 5 discriminator 4 view .LVU974
 3158              	.LVL351:
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3159              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU975
 3160              	.LBE199:
 3161              	.LBE198:
 904:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3162              		.loc 1 904 29 discriminator 4 view .LVU976
 3163 03b6 24F819E0 		strh	lr, [r4, r9, lsl #1]	@ movhi
 3164              	.LVL352:
 3165              	.L165:
 904:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3166              		.loc 1 904 29 is_stmt 1 discriminator 6 view .LVU977
 905:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3167              		.loc 1 905 29 discriminator 6 view .LVU978
 3168 03ba 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3169 03bc F1B3     		cbz	r1, .L167
 905:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3170              		.loc 1 905 29 discriminator 1 view .LVU979
 3171 03be FF29     		cmp	r1, #255
 3172 03c0 00F09B80 		beq	.L196
 905:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3173              		.loc 1 905 29 discriminator 4 view .LVU980
 3174 03c4 03F10209 		add	r9, r3, #2
 3175 03c8 35F81970 		ldrh	r7, [r5, r9, lsl #1]
 3176 03cc 34F81960 		ldrh	r6, [r4, r9, lsl #1]
 3177              	.LVL353:
 3178              	.LBB200:
 3179              	.LBI200:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
ARM GAS  D:\Temp\ccohqSTj.s 			page 100


 3180              		.loc 3 447 48 discriminator 4 view .LVU981
 3181              	.LBB201:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3182              		.loc 3 449 5 discriminator 4 view .LVU982
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3183              		.loc 3 452 5 discriminator 4 view .LVU983
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3184              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU984
 3185 03d0 F80A     		lsrs	r0, r7, #11
 3186              	.LVL354:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3187              		.loc 3 452 5 discriminator 4 view .LVU985
 3188 03d2 4FEAD62B 		lsr	fp, r6, #11
 3189              	.LVL355:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3190              		.loc 3 452 5 discriminator 4 view .LVU986
 3191 03d6 C1F1FF0A 		rsb	r10, r1, #255
 3192              	.LVL356:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3193              		.loc 3 452 5 discriminator 4 view .LVU987
 3194 03da 0AFB0BFB 		mul	fp, r10, fp
 3195 03de 01FB00B0 		mla	r0, r1, r0, fp
 3196 03e2 8030     		adds	r0, r0, #128
 3197 03e4 00EB002B 		add	fp, r0, r0, lsl #8
 3198 03e8 00EBCB10 		add	r0, r0, fp, lsl #7
 3199 03ec C0F3C450 		ubfx	r0, r0, #23, #5
 3200 03f0 60F3CF2C 		bfi	ip, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3201              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU988
 3202 03f4 C7F34510 		ubfx	r0, r7, #5, #6
 3203 03f8 C6F3451B 		ubfx	fp, r6, #5, #6
 3204 03fc 0BFB0AFB 		mul	fp, fp, r10
 3205 0400 00FB01B0 		mla	r0, r0, r1, fp
 3206 0404 8030     		adds	r0, r0, #128
 3207 0406 00EB002B 		add	fp, r0, r0, lsl #8
 3208 040a 00EBCB10 		add	r0, r0, fp, lsl #7
 3209 040e C0F3C550 		ubfx	r0, r0, #23, #6
 3210 0412 60F34A1C 		bfi	ip, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3211              		.loc 3 456 5 discriminator 4 view .LVU989
 3212 0416 07F01F07 		and	r7, r7, #31
 3213              	.LVL357:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3214              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU990
 3215 041a 06F01F06 		and	r6, r6, #31
 3216              	.LVL358:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3217              		.loc 3 456 5 discriminator 4 view .LVU991
 3218 041e 06FB0AF6 		mul	r6, r6, r10
 3219 0422 07FB0166 		mla	r6, r7, r1, r6
 3220 0426 8036     		adds	r6, r6, #128
 3221 0428 06EB0621 		add	r1, r6, r6, lsl #8
 3222              	.LVL359:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3223              		.loc 3 456 5 discriminator 4 view .LVU992
 3224 042c 06EBC116 		add	r6, r6, r1, lsl #7
 3225 0430 C6F3C456 		ubfx	r6, r6, #23, #5
ARM GAS  D:\Temp\ccohqSTj.s 			page 101


 3226 0434 66F3040C 		bfi	ip, r6, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3227              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU993
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3228              		.loc 3 458 5 discriminator 4 view .LVU994
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3229              		.loc 3 464 5 discriminator 4 view .LVU995
 3230              	.LVL360:
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3231              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU996
 3232              	.LBE201:
 3233              	.LBE200:
 905:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3234              		.loc 1 905 29 discriminator 4 view .LVU997
 3235 0438 24F819C0 		strh	ip, [r4, r9, lsl #1]	@ movhi
 3236              	.LVL361:
 3237              	.L167:
 905:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3238              		.loc 1 905 29 is_stmt 1 discriminator 6 view .LVU998
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3239              		.loc 1 906 29 discriminator 6 view .LVU999
 3240 043c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 3241 043e 0029     		cmp	r1, #0
 3242 0440 3FF42FAF 		beq	.L161
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3243              		.loc 1 906 29 discriminator 1 view .LVU1000
 3244 0444 FF29     		cmp	r1, #255
 3245 0446 5ED0     		beq	.L197
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3246              		.loc 1 906 29 discriminator 4 view .LVU1001
 3247 0448 03F10309 		add	r9, r3, #3
 3248 044c 35F81900 		ldrh	r0, [r5, r9, lsl #1]
 3249              	.LVL362:
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3250              		.loc 1 906 29 is_stmt 0 discriminator 4 view .LVU1002
 3251 0450 ADF80C00 		strh	r0, [sp, #12]	@ movhi
 3252 0454 34F81970 		ldrh	r7, [r4, r9, lsl #1]
 3253              	.LVL363:
 3254              	.LBB202:
 3255              	.LBI202:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 3256              		.loc 3 447 48 is_stmt 1 discriminator 4 view .LVU1003
 3257              	.LBB203:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3258              		.loc 3 449 5 discriminator 4 view .LVU1004
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3259              		.loc 3 452 5 discriminator 4 view .LVU1005
 3260 0458 80B2     		uxth	r0, r0
 3261              	.LVL364:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3262              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU1006
 3263 045a C00A     		lsrs	r0, r0, #11
 3264 045c 4FEAD72B 		lsr	fp, r7, #11
 3265              	.LVL365:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3266              		.loc 3 452 5 discriminator 4 view .LVU1007
 3267 0460 C1F1FF0A 		rsb	r10, r1, #255
ARM GAS  D:\Temp\ccohqSTj.s 			page 102


 3268              	.LVL366:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3269              		.loc 3 452 5 discriminator 4 view .LVU1008
 3270 0464 0AFB0BFB 		mul	fp, r10, fp
 3271 0468 01FB00B0 		mla	r0, r1, r0, fp
 3272 046c 8030     		adds	r0, r0, #128
 3273 046e 00EB002B 		add	fp, r0, r0, lsl #8
 3274 0472 00EBCB10 		add	r0, r0, fp, lsl #7
 3275 0476 C0F3C450 		ubfx	r0, r0, #23, #5
 3276 047a BDF83460 		ldrh	r6, [sp, #52]
 3277 047e 60F3CF26 		bfi	r6, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3278              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU1009
 3279 0482 BDF80C00 		ldrh	r0, [sp, #12]
 3280 0486 C0F34510 		ubfx	r0, r0, #5, #6
 3281              	.LVL367:
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3282              		.loc 3 454 5 is_stmt 0 discriminator 4 view .LVU1010
 3283 048a ADF82470 		strh	r7, [sp, #36]	@ movhi
 3284 048e C7F3451B 		ubfx	fp, r7, #5, #6
 3285              	.LVL368:
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3286              		.loc 3 454 5 discriminator 4 view .LVU1011
 3287 0492 0BFB0AFB 		mul	fp, fp, r10
 3288 0496 00FB01B0 		mla	r0, r0, r1, fp
 3289 049a 8030     		adds	r0, r0, #128
 3290 049c 00EB002B 		add	fp, r0, r0, lsl #8
 3291 04a0 00EBCB10 		add	r0, r0, fp, lsl #7
 3292 04a4 C0F3C550 		ubfx	r0, r0, #23, #6
 3293 04a8 60F34A16 		bfi	r6, r0, #5, #6
 3294 04ac 3046     		mov	r0, r6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3295              		.loc 3 456 5 is_stmt 1 discriminator 4 view .LVU1012
 3296 04ae BDF80C60 		ldrh	r6, [sp, #12]
 3297 04b2 06F01F07 		and	r7, r6, #31
 3298 04b6 BDF82460 		ldrh	r6, [sp, #36]
 3299 04ba 06F01F06 		and	r6, r6, #31
 3300 04be 06FB0AF6 		mul	r6, r6, r10
 3301 04c2 07FB0166 		mla	r6, r7, r1, r6
 3302 04c6 8036     		adds	r6, r6, #128
 3303 04c8 06EB0621 		add	r1, r6, r6, lsl #8
 3304              	.LVL369:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3305              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU1013
 3306 04cc 06EBC116 		add	r6, r6, r1, lsl #7
 3307 04d0 C6F3C456 		ubfx	r6, r6, #23, #5
 3308              	.LVL370:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3309              		.loc 3 456 5 discriminator 4 view .LVU1014
 3310 04d4 0146     		mov	r1, r0
 3311 04d6 66F30401 		bfi	r1, r6, #0, #5
 3312 04da ADF83410 		strh	r1, [sp, #52]	@ movhi
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3313              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU1015
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3314              		.loc 3 458 5 discriminator 4 view .LVU1016
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
ARM GAS  D:\Temp\ccohqSTj.s 			page 103


 3315              		.loc 3 464 5 discriminator 4 view .LVU1017
 3316              	.LVL371:
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3317              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU1018
 3318              	.LBE203:
 3319              	.LBE202:
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3320              		.loc 1 906 29 discriminator 4 view .LVU1019
 3321 04de 24F81910 		strh	r1, [r4, r9, lsl #1]	@ movhi
 3322 04e2 DEE6     		b	.L161
 3323              	.LVL372:
 3324              	.L194:
 903:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3325              		.loc 1 903 29 is_stmt 1 discriminator 3 view .LVU1020
 3326 04e4 35F81310 		ldrh	r1, [r5, r3, lsl #1]
 3327 04e8 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 3328 04ec 24E7     		b	.L163
 3329              	.LVL373:
 3330              	.L195:
 904:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3331              		.loc 1 904 29 discriminator 3 view .LVU1021
 3332 04ee 591C     		adds	r1, r3, #1
 3333 04f0 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 3334              	.LVL374:
 904:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3335              		.loc 1 904 29 is_stmt 0 discriminator 3 view .LVU1022
 3336 04f4 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 3337 04f8 5FE7     		b	.L165
 3338              	.LVL375:
 3339              	.L196:
 905:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3340              		.loc 1 905 29 is_stmt 1 discriminator 3 view .LVU1023
 3341 04fa 991C     		adds	r1, r3, #2
 3342 04fc 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 3343              	.LVL376:
 905:lvgl/src/lv_draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3344              		.loc 1 905 29 is_stmt 0 discriminator 3 view .LVU1024
 3345 0500 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 3346 0504 9AE7     		b	.L167
 3347              	.LVL377:
 3348              	.L197:
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3349              		.loc 1 906 29 is_stmt 1 discriminator 3 view .LVU1025
 3350 0506 D91C     		adds	r1, r3, #3
 3351 0508 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 3352              	.LVL378:
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3353              		.loc 1 906 29 is_stmt 0 discriminator 3 view .LVU1026
 3354 050c 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 3355 0510 C7E6     		b	.L161
 3356              	.LVL379:
 3357              	.L187:
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3358              		.loc 1 906 29 discriminator 3 view .LVU1027
 3359 0512 0B96     		str	r6, [sp, #44]
 3360 0514 ADF830B0 		strh	fp, [sp, #48]	@ movhi
 3361 0518 BDF80CC0 		ldrh	ip, [sp, #12]
ARM GAS  D:\Temp\ccohqSTj.s 			page 104


 3362              	.LVL380:
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3363              		.loc 1 906 29 discriminator 3 view .LVU1028
 3364 051c BDF824E0 		ldrh	lr, [sp, #36]
 3365              	.LVL381:
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3366              		.loc 1 906 29 discriminator 3 view .LVU1029
 3367 0520 BDF82A80 		ldrh	r8, [sp, #42]
 3368              	.LVL382:
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3369              		.loc 1 906 29 discriminator 3 view .LVU1030
 3370 0524 ADF832A0 		strh	r10, [sp, #50]	@ movhi
 3371 0528 BDE6     		b	.L170
 3372              	.LVL383:
 3373              	.L192:
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3374              		.loc 1 906 29 discriminator 3 view .LVU1031
 3375 052a 0B9E     		ldr	r6, [sp, #44]
 3376 052c BDF830B0 		ldrh	fp, [sp, #48]
 3377              	.LVL384:
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3378              		.loc 1 906 29 discriminator 3 view .LVU1032
 3379 0530 ADF80CC0 		strh	ip, [sp, #12]	@ movhi
 3380 0534 ADF824E0 		strh	lr, [sp, #36]	@ movhi
 3381 0538 ADF82A80 		strh	r8, [sp, #42]	@ movhi
 3382 053c BDF832A0 		ldrh	r10, [sp, #50]
 3383              	.LVL385:
 906:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3384              		.loc 1 906 29 discriminator 3 view .LVU1033
 3385 0540 3CE0     		b	.L172
 3386              	.LVL386:
 3387              	.L174:
 918:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3388              		.loc 1 918 21 is_stmt 1 discriminator 4 view .LVU1034
 3389 0542 35F813C0 		ldrh	ip, [r5, r3, lsl #1]
 3390              	.LVL387:
 918:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3391              		.loc 1 918 21 is_stmt 0 discriminator 4 view .LVU1035
 3392 0546 34F81370 		ldrh	r7, [r4, r3, lsl #1]
 3393              	.LVL388:
 3394              	.LBB204:
 3395              	.LBI204:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 3396              		.loc 3 447 48 is_stmt 1 discriminator 4 view .LVU1036
 3397              	.LBB205:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3398              		.loc 3 449 5 discriminator 4 view .LVU1037
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3399              		.loc 3 452 5 discriminator 4 view .LVU1038
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3400              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU1039
 3401 054a 4FEADC20 		lsr	r0, ip, #11
 3402              	.LVL389:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3403              		.loc 3 452 5 discriminator 4 view .LVU1040
 3404 054e 4FEAD728 		lsr	r8, r7, #11
 3405              	.LVL390:
ARM GAS  D:\Temp\ccohqSTj.s 			page 105


 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3406              		.loc 3 452 5 discriminator 4 view .LVU1041
 3407 0552 C1F1FF0E 		rsb	lr, r1, #255
 3408              	.LVL391:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3409              		.loc 3 452 5 discriminator 4 view .LVU1042
 3410 0556 0EFB08F8 		mul	r8, lr, r8
 3411 055a 01FB0080 		mla	r0, r1, r0, r8
 3412 055e 8030     		adds	r0, r0, #128
 3413 0560 00EB0028 		add	r8, r0, r0, lsl #8
 3414 0564 00EBC810 		add	r0, r0, r8, lsl #7
 3415 0568 C0F3C450 		ubfx	r0, r0, #23, #5
 3416 056c 60F3CF2B 		bfi	fp, r0, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3417              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU1043
 3418 0570 CCF34510 		ubfx	r0, ip, #5, #6
 3419 0574 C7F34518 		ubfx	r8, r7, #5, #6
 3420 0578 08FB0EF8 		mul	r8, r8, lr
 3421 057c 00FB0180 		mla	r0, r0, r1, r8
 3422 0580 8030     		adds	r0, r0, #128
 3423 0582 00EB0028 		add	r8, r0, r0, lsl #8
 3424 0586 00EBC810 		add	r0, r0, r8, lsl #7
 3425 058a C0F3C550 		ubfx	r0, r0, #23, #6
 3426 058e 60F34A1B 		bfi	fp, r0, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3427              		.loc 3 456 5 discriminator 4 view .LVU1044
 3428 0592 0CF01F0C 		and	ip, ip, #31
 3429              	.LVL392:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3430              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU1045
 3431 0596 07F01F07 		and	r7, r7, #31
 3432              	.LVL393:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3433              		.loc 3 456 5 discriminator 4 view .LVU1046
 3434 059a 07FB0EFE 		mul	lr, r7, lr
 3435 059e 0CFB01E1 		mla	r1, ip, r1, lr
 3436              	.LVL394:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3437              		.loc 3 456 5 discriminator 4 view .LVU1047
 3438 05a2 8031     		adds	r1, r1, #128
 3439 05a4 01EB0120 		add	r0, r1, r1, lsl #8
 3440 05a8 01EBC011 		add	r1, r1, r0, lsl #7
 3441 05ac C1F3C451 		ubfx	r1, r1, #23, #5
 3442 05b0 61F3040B 		bfi	fp, r1, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3443              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU1048
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3444              		.loc 3 458 5 discriminator 4 view .LVU1049
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3445              		.loc 3 464 5 discriminator 4 view .LVU1050
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3446              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU1051
 3447              	.LBE205:
 3448              	.LBE204:
 918:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3449              		.loc 1 918 21 discriminator 4 view .LVU1052
 3450 05b4 24F813B0 		strh	fp, [r4, r3, lsl #1]	@ movhi
ARM GAS  D:\Temp\ccohqSTj.s 			page 106


 3451              	.LVL395:
 3452              	.L173:
 918:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3453              		.loc 1 918 21 is_stmt 1 discriminator 6 view .LVU1053
 3454 05b8 0132     		adds	r2, r2, #1
 3455              	.LVL396:
 914:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3456              		.loc 1 914 42 is_stmt 0 discriminator 6 view .LVU1054
 3457 05ba 0133     		adds	r3, r3, #1
 3458              	.LVL397:
 3459              	.L172:
 914:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3460              		.loc 1 914 17 discriminator 1 view .LVU1055
 3461 05bc B342     		cmp	r3, r6
 3462 05be 09DA     		bge	.L198
 918:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3463              		.loc 1 918 21 is_stmt 1 view .LVU1056
 3464 05c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3465 05c2 0029     		cmp	r1, #0
 3466 05c4 F8D0     		beq	.L173
 918:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3467              		.loc 1 918 21 discriminator 1 view .LVU1057
 3468 05c6 FF29     		cmp	r1, #255
 3469 05c8 BBD1     		bne	.L174
 918:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 3470              		.loc 1 918 21 discriminator 3 view .LVU1058
 3471 05ca 35F81310 		ldrh	r1, [r5, r3, lsl #1]
 3472 05ce 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 3473 05d2 F1E7     		b	.L173
 3474              	.L198:
 922:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3475              		.loc 1 922 17 discriminator 2 view .LVU1059
 922:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3476              		.loc 1 922 32 is_stmt 0 discriminator 2 view .LVU1060
 3477 05d4 069B     		ldr	r3, [sp, #24]
 3478              	.LVL398:
 922:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3479              		.loc 1 922 32 discriminator 2 view .LVU1061
 3480 05d6 04EB4304 		add	r4, r4, r3, lsl #1
 3481              	.LVL399:
 923:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3482              		.loc 1 923 17 is_stmt 1 discriminator 2 view .LVU1062
 923:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3483              		.loc 1 923 22 is_stmt 0 discriminator 2 view .LVU1063
 3484 05da 1A9B     		ldr	r3, [sp, #104]
 3485 05dc 079A     		ldr	r2, [sp, #28]
 3486              	.LVL400:
 923:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3487              		.loc 1 923 22 discriminator 2 view .LVU1064
 3488 05de 1344     		add	r3, r3, r2
 3489 05e0 1A93     		str	r3, [sp, #104]
 3490              	.LVL401:
 924:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 3491              		.loc 1 924 17 is_stmt 1 discriminator 2 view .LVU1065
 924:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 3492              		.loc 1 924 31 is_stmt 0 discriminator 2 view .LVU1066
 3493 05e2 049B     		ldr	r3, [sp, #16]
ARM GAS  D:\Temp\ccohqSTj.s 			page 107


 3494              	.LVL402:
 924:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 3495              		.loc 1 924 31 discriminator 2 view .LVU1067
 3496 05e4 05EB4305 		add	r5, r5, r3, lsl #1
 3497              	.LVL403:
 924:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 3498              		.loc 1 924 31 discriminator 2 view .LVU1068
 3499              	.LBE193:
 871:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3500              		.loc 1 871 42 discriminator 2 view .LVU1069
 3501 05e8 059B     		ldr	r3, [sp, #20]
 3502 05ea 0133     		adds	r3, r3, #1
 3503 05ec 0593     		str	r3, [sp, #20]
 3504              	.LVL404:
 3505              	.L156:
 871:lvgl/src/lv_draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3506              		.loc 1 871 13 discriminator 1 view .LVU1070
 3507 05ee 059B     		ldr	r3, [sp, #20]
 3508 05f0 089A     		ldr	r2, [sp, #32]
 3509 05f2 9342     		cmp	r3, r2
 3510 05f4 BFF695AD 		bge	.L144
 3511              	.LBB206:
 872:lvgl/src/lv_draw/lv_draw_blend.c **** #if 0
 3512              		.loc 1 872 34 view .LVU1071
 3513 05f8 1A9A     		ldr	r2, [sp, #104]
 878:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3514              		.loc 1 878 23 view .LVU1072
 3515 05fa 0023     		movs	r3, #0
 3516 05fc 22E6     		b	.L176
 3517              	.LVL405:
 3518              	.L185:
 878:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3519              		.loc 1 878 23 view .LVU1073
 3520              	.LBE206:
 3521              	.LBE209:
 3522              	.LBB210:
 932:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3523              		.loc 1 932 34 view .LVU1074
 3524 05fe 029B     		ldr	r3, [sp, #8]
 3525              	.L178:
 3526              	.LVL406:
 941:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 3527              		.loc 1 941 29 is_stmt 1 discriminator 4 view .LVU1075
 3528 0600 35F81C70 		ldrh	r7, [r5, ip, lsl #1]
 3529 0604 34F81C00 		ldrh	r0, [r4, ip, lsl #1]
 3530              	.LVL407:
 3531              	.LBB211:
 3532              	.LBI211:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 3533              		.loc 3 447 48 discriminator 4 view .LVU1076
 3534              	.LBB212:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3535              		.loc 3 449 5 discriminator 4 view .LVU1077
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3536              		.loc 3 452 5 discriminator 4 view .LVU1078
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3537              		.loc 3 452 5 is_stmt 0 discriminator 4 view .LVU1079
ARM GAS  D:\Temp\ccohqSTj.s 			page 108


 3538 0608 FA0A     		lsrs	r2, r7, #11
 3539              	.LVL408:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3540              		.loc 3 452 5 discriminator 4 view .LVU1080
 3541 060a 4FEAD02B 		lsr	fp, r0, #11
 3542 060e C3F1FF0E 		rsb	lr, r3, #255
 3543 0612 0EFB0BFB 		mul	fp, lr, fp
 3544 0616 03FB02B2 		mla	r2, r3, r2, fp
 3545 061a 8032     		adds	r2, r2, #128
 3546 061c 02EB022B 		add	fp, r2, r2, lsl #8
 3547 0620 02EBCB12 		add	r2, r2, fp, lsl #7
 3548 0624 C2F3C452 		ubfx	r2, r2, #23, #5
 3549 0628 62F3CF28 		bfi	r8, r2, #11, #5
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3550              		.loc 3 454 5 is_stmt 1 discriminator 4 view .LVU1081
 3551 062c C7F34512 		ubfx	r2, r7, #5, #6
 3552 0630 C0F3451B 		ubfx	fp, r0, #5, #6
 3553 0634 0BFB0EFB 		mul	fp, fp, lr
 3554 0638 02FB03B2 		mla	r2, r2, r3, fp
 3555 063c 8032     		adds	r2, r2, #128
 3556 063e 02EB022B 		add	fp, r2, r2, lsl #8
 3557 0642 02EBCB12 		add	r2, r2, fp, lsl #7
 3558 0646 C2F3C552 		ubfx	r2, r2, #23, #6
 3559 064a 62F34A18 		bfi	r8, r2, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3560              		.loc 3 456 5 discriminator 4 view .LVU1082
 3561 064e 07F01F07 		and	r7, r7, #31
 3562              	.LVL409:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3563              		.loc 3 456 5 is_stmt 0 discriminator 4 view .LVU1083
 3564 0652 00F01F00 		and	r0, r0, #31
 3565              	.LVL410:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3566              		.loc 3 456 5 discriminator 4 view .LVU1084
 3567 0656 00FB0EFE 		mul	lr, r0, lr
 3568 065a 07FB03E3 		mla	r3, r7, r3, lr
 3569              	.LVL411:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3570              		.loc 3 456 5 discriminator 4 view .LVU1085
 3571 065e 8033     		adds	r3, r3, #128
 3572 0660 03EB032E 		add	lr, r3, r3, lsl #8
 3573 0664 03EBCE13 		add	r3, r3, lr, lsl #7
 3574 0668 C3F3C453 		ubfx	r3, r3, #23, #5
 3575 066c 63F30408 		bfi	r8, r3, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3576              		.loc 3 458 5 is_stmt 1 discriminator 4 view .LVU1086
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3577              		.loc 3 458 5 discriminator 4 view .LVU1087
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3578              		.loc 3 464 5 discriminator 4 view .LVU1088
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3579              		.loc 3 464 5 is_stmt 0 discriminator 4 view .LVU1089
 3580              	.LBE212:
 3581              	.LBE211:
 941:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 3582              		.loc 1 941 49 discriminator 4 view .LVU1090
 3583 0670 24F81C80 		strh	r8, [r4, ip, lsl #1]	@ movhi
ARM GAS  D:\Temp\ccohqSTj.s 			page 109


 3584              	.L177:
 941:lvgl/src/lv_draw/lv_draw_blend.c ****                         }
 3585              		.loc 1 941 49 discriminator 4 view .LVU1091
 3586              	.LBE210:
 930:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(mask[x]) {
 3587              		.loc 1 930 46 discriminator 2 view .LVU1092
 3588 0674 0131     		adds	r1, r1, #1
 3589              	.LVL412:
 3590              	.L180:
 930:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(mask[x]) {
 3591              		.loc 1 930 17 discriminator 1 view .LVU1093
 3592 0676 B142     		cmp	r1, r6
 3593 0678 0BDA     		bge	.L199
 931:lvgl/src/lv_draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 3594              		.loc 1 931 21 is_stmt 1 view .LVU1094
 931:lvgl/src/lv_draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 3595              		.loc 1 931 28 is_stmt 0 view .LVU1095
 3596 067a 8C46     		mov	ip, r1
 3597 067c 19F80130 		ldrb	r3, [r9, r1]	@ zero_extendqisi2
 931:lvgl/src/lv_draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 3598              		.loc 1 931 23 view .LVU1096
 3599 0680 002B     		cmp	r3, #0
 3600 0682 F7D0     		beq	.L177
 3601              	.LBB213:
 932:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3602              		.loc 1 932 25 is_stmt 1 view .LVU1097
 932:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3603              		.loc 1 932 34 is_stmt 0 view .LVU1098
 3604 0684 FC2B     		cmp	r3, #252
 3605 0686 BAD8     		bhi	.L185
 932:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3606              		.loc 1 932 80 discriminator 1 view .LVU1099
 3607 0688 029A     		ldr	r2, [sp, #8]
 3608 068a 03FB02F3 		mul	r3, r3, r2
 932:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3609              		.loc 1 932 34 discriminator 1 view .LVU1100
 3610 068e 1B0A     		lsrs	r3, r3, #8
 3611 0690 B6E7     		b	.L178
 3612              	.L199:
 932:lvgl/src/lv_draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3613              		.loc 1 932 34 discriminator 1 view .LVU1101
 3614              	.LBE213:
 945:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3615              		.loc 1 945 17 is_stmt 1 discriminator 2 view .LVU1102
 945:lvgl/src/lv_draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3616              		.loc 1 945 32 is_stmt 0 discriminator 2 view .LVU1103
 3617 0692 069B     		ldr	r3, [sp, #24]
 3618 0694 04EB4304 		add	r4, r4, r3, lsl #1
 3619              	.LVL413:
 946:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3620              		.loc 1 946 17 is_stmt 1 discriminator 2 view .LVU1104
 946:lvgl/src/lv_draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3621              		.loc 1 946 22 is_stmt 0 discriminator 2 view .LVU1105
 3622 0698 079B     		ldr	r3, [sp, #28]
 3623 069a 9944     		add	r9, r9, r3
 3624              	.LVL414:
 947:lvgl/src/lv_draw/lv_draw_blend.c ****             }
ARM GAS  D:\Temp\ccohqSTj.s 			page 110


 3625              		.loc 1 947 17 is_stmt 1 discriminator 2 view .LVU1106
 947:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 3626              		.loc 1 947 31 is_stmt 0 discriminator 2 view .LVU1107
 3627 069c 049B     		ldr	r3, [sp, #16]
 3628 069e 05EB4305 		add	r5, r5, r3, lsl #1
 3629              	.LVL415:
 929:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3630              		.loc 1 929 42 discriminator 2 view .LVU1108
 3631 06a2 0AF1010A 		add	r10, r10, #1
 3632              	.LVL416:
 3633              	.L155:
 929:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3634              		.loc 1 929 13 discriminator 1 view .LVU1109
 3635 06a6 089B     		ldr	r3, [sp, #32]
 3636 06a8 9A45     		cmp	r10, r3
 3637 06aa BFF63AAD 		bge	.L144
 930:lvgl/src/lv_draw/lv_draw_blend.c ****                     if(mask[x]) {
 3638              		.loc 1 930 23 view .LVU1110
 3639 06ae 0021     		movs	r1, #0
 3640 06b0 E1E7     		b	.L180
 3641              	.LVL417:
 3642              	.L183:
 929:lvgl/src/lv_draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3643              		.loc 1 929 19 view .LVU1111
 3644 06b2 4FF0000A 		mov	r10, #0
 3645 06b6 0297     		str	r7, [sp, #8]
 3646 06b8 DDF86890 		ldr	r9, [sp, #104]
 3647 06bc F3E7     		b	.L155
 3648              		.cfi_endproc
 3649              	.LFE464:
 3651              		.section	.text.fill_blended,"ax",%progbits
 3652              		.align	1
 3653              		.syntax unified
 3654              		.thumb
 3655              		.thumb_func
 3656              		.fpu fpv4-sp-d16
 3658              	fill_blended:
 3659              	.LVL418:
 3660              	.LFB462:
 570:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 3661              		.loc 1 570 1 is_stmt 1 view -0
 3662              		.cfi_startproc
 3663              		@ args = 16, pretend = 0, frame = 16
 3664              		@ frame_needed = 0, uses_anonymous_args = 0
 570:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 3665              		.loc 1 570 1 is_stmt 0 view .LVU1113
 3666 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3667              	.LCFI21:
 3668              		.cfi_def_cfa_offset 36
 3669              		.cfi_offset 4, -36
 3670              		.cfi_offset 5, -32
 3671              		.cfi_offset 6, -28
 3672              		.cfi_offset 7, -24
 3673              		.cfi_offset 8, -20
 3674              		.cfi_offset 9, -16
 3675              		.cfi_offset 10, -12
 3676              		.cfi_offset 11, -8
ARM GAS  D:\Temp\ccohqSTj.s 			page 111


 3677              		.cfi_offset 14, -4
 3678 0004 85B0     		sub	sp, sp, #20
 3679              	.LCFI22:
 3680              		.cfi_def_cfa_offset 56
 3681 0006 9DF83840 		ldrb	r4, [sp, #56]	@ zero_extendqisi2
 3682 000a 0094     		str	r4, [sp]
 3683 000c 9DF84460 		ldrb	r6, [sp, #68]	@ zero_extendqisi2
 572:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3684              		.loc 1 572 5 is_stmt 1 view .LVU1114
 3685              	.LVL419:
 3686              	.LBB223:
 3687              	.LBI223:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 3688              		.loc 2 107 26 view .LVU1115
 3689              	.LBB224:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3690              		.loc 2 109 5 view .LVU1116
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3691              		.loc 2 109 31 is_stmt 0 view .LVU1117
 3692 0010 8488     		ldrh	r4, [r0, #4]
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3693              		.loc 2 109 44 view .LVU1118
 3694 0012 0088     		ldrh	r0, [r0]
 3695              	.LVL420:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3696              		.loc 2 109 36 view .LVU1119
 3697 0014 201A     		subs	r0, r4, r0
 3698 0016 80B2     		uxth	r0, r0
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3699              		.loc 2 109 49 view .LVU1120
 3700 0018 0130     		adds	r0, r0, #1
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3701              		.loc 2 109 12 view .LVU1121
 3702 001a 00B2     		sxth	r0, r0
 3703 001c 0290     		str	r0, [sp, #8]
 3704              	.LVL421:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3705              		.loc 2 109 12 view .LVU1122
 3706              	.LBE224:
 3707              	.LBE223:
 575:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3708              		.loc 1 575 5 is_stmt 1 view .LVU1123
 575:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3709              		.loc 1 575 62 is_stmt 0 view .LVU1124
 3710 001e B2F902B0 		ldrsh	fp, [r2, #2]
 575:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3711              		.loc 1 575 51 view .LVU1125
 3712 0022 00FB0BF0 		mul	r0, r0, fp
 3713              	.LVL422:
 575:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3714              		.loc 1 575 18 view .LVU1126
 3715 0026 01EB4005 		add	r5, r1, r0, lsl #1
 3716              	.LVL423:
 577:lvgl/src/lv_draw/lv_draw_blend.c ****     switch(mode) {
 3717              		.loc 1 577 5 is_stmt 1 view .LVU1127
 578:lvgl/src/lv_draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 3718              		.loc 1 578 5 view .LVU1128
ARM GAS  D:\Temp\ccohqSTj.s 			page 112


 3719 002a 012E     		cmp	r6, #1
 3720 002c 1BD0     		beq	.L217
 3721 002e 022E     		cmp	r6, #2
 3722 0030 40F0A180 		bne	.L200
 583:lvgl/src/lv_draw/lv_draw_blend.c ****             break;
 3723              		.loc 1 583 22 is_stmt 0 view .LVU1129
 3724 0034 DFF844A1 		ldr	r10, .L225
 3725              	.L201:
 3726 0038 ADF80630 		strh	r3, [sp, #6]	@ movhi
 3727 003c 9046     		mov	r8, r2
 3728              	.LVL424:
 590:lvgl/src/lv_draw/lv_draw_blend.c ****     int32_t y;
 3729              		.loc 1 590 5 is_stmt 1 view .LVU1130
 591:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3730              		.loc 1 591 5 view .LVU1131
 594:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_dest_color = LV_COLOR_BLACK;
 3731              		.loc 1 594 5 view .LVU1132
 594:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_dest_color = LV_COLOR_BLACK;
 3732              		.loc 1 594 7 is_stmt 0 view .LVU1133
 3733 003e 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
 3734              	.LVL425:
 594:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_dest_color = LV_COLOR_BLACK;
 3735              		.loc 1 594 7 view .LVU1134
 3736 0042 012B     		cmp	r3, #1
 3737 0044 12D0     		beq	.L220
 3738              	.LBB225:
 611:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3739              		.loc 1 611 9 is_stmt 1 view .LVU1135
 3740              	.LVL426:
 3741              	.LBB226:
 3742              	.LBI226:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 3743              		.loc 2 107 26 view .LVU1136
 3744              	.LBB227:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3745              		.loc 2 109 5 view .LVU1137
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3746              		.loc 2 109 31 is_stmt 0 view .LVU1138
 3747 0046 9388     		ldrh	r3, [r2, #4]
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3748              		.loc 2 109 44 view .LVU1139
 3749 0048 B2F90020 		ldrsh	r2, [r2]
 3750              	.LVL427:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3751              		.loc 2 109 44 view .LVU1140
 3752 004c 94B2     		uxth	r4, r2
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3753              		.loc 2 109 36 view .LVU1141
 3754 004e 1B1B     		subs	r3, r3, r4
 3755 0050 9BB2     		uxth	r3, r3
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3756              		.loc 2 109 49 view .LVU1142
 3757 0052 0133     		adds	r3, r3, #1
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3758              		.loc 2 109 12 view .LVU1143
 3759 0054 1BB2     		sxth	r3, r3
 3760 0056 0393     		str	r3, [sp, #12]
ARM GAS  D:\Temp\ccohqSTj.s 			page 113


 3761              	.LVL428:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3762              		.loc 2 109 12 view .LVU1144
 3763              	.LBE227:
 3764              	.LBE226:
 616:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3765              		.loc 1 616 9 is_stmt 1 view .LVU1145
 616:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3766              		.loc 1 616 26 is_stmt 0 view .LVU1146
 3767 0058 0F9F     		ldr	r7, [sp, #60]
 3768 005a BF1A     		subs	r7, r7, r2
 3769              	.LVL429:
 619:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 3770              		.loc 1 619 9 is_stmt 1 view .LVU1147
 620:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 3771              		.loc 1 620 9 view .LVU1148
 621:lvgl/src/lv_draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 3772              		.loc 1 621 9 view .LVU1149
 622:lvgl/src/lv_draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 3773              		.loc 1 622 9 view .LVU1150
 622:lvgl/src/lv_draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 3774              		.loc 1 622 47 is_stmt 0 view .LVU1151
 3775 005c 31F81000 		ldrh	r0, [r1, r0, lsl #1]
 622:lvgl/src/lv_draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 3776              		.loc 1 622 30 view .LVU1152
 3777 0060 8446     		mov	ip, r0	@ movhi
 3778              	.LVL430:
 623:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3779              		.loc 1 623 9 is_stmt 1 view .LVU1153
 625:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3780              		.loc 1 625 9 view .LVU1154
 621:lvgl/src/lv_draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 3781              		.loc 1 621 18 is_stmt 0 view .LVU1155
 3782 0062 0021     		movs	r1, #0
 3783              	.LVL431:
 625:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3784              		.loc 1 625 9 view .LVU1156
 3785 0064 80E0     		b	.L209
 3786              	.LVL432:
 3787              	.L217:
 625:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3788              		.loc 1 625 9 view .LVU1157
 3789              	.LBE225:
 580:lvgl/src/lv_draw/lv_draw_blend.c ****             break;
 3790              		.loc 1 580 22 view .LVU1158
 3791 0066 DFF818A1 		ldr	r10, .L225+4
 3792 006a E5E7     		b	.L201
 3793              	.LVL433:
 3794              	.L220:
 3795              	.LBB230:
 595:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 3796              		.loc 1 595 9 is_stmt 1 view .LVU1159
 595:lvgl/src/lv_draw/lv_draw_blend.c ****         lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 3797              		.loc 1 595 20 is_stmt 0 view .LVU1160
 3798 006c 4FF00006 		mov	r6, #0	@ movhi
 3799              	.LVL434:
 596:lvgl/src/lv_draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
ARM GAS  D:\Temp\ccohqSTj.s 			page 114


 3800              		.loc 1 596 9 is_stmt 1 view .LVU1161
 3801              	.LBB231:
 3802              	.LBI231:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 3803              		.loc 3 447 48 view .LVU1162
 3804              	.LBB232:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3805              		.loc 3 449 5 view .LVU1163
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3806              		.loc 3 452 5 view .LVU1164
 3807 0070 BDF80640 		ldrh	r4, [sp, #6]
 3808 0074 C4F3C423 		ubfx	r3, r4, #11, #5
 3809 0078 0099     		ldr	r1, [sp]
 3810              	.LVL435:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3811              		.loc 3 452 5 is_stmt 0 view .LVU1165
 3812 007a 01FB03F3 		mul	r3, r1, r3
 3813 007e 8033     		adds	r3, r3, #128
 3814 0080 03EB0322 		add	r2, r3, r3, lsl #8
 3815              	.LVL436:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3816              		.loc 3 452 5 view .LVU1166
 3817 0084 03EBC213 		add	r3, r3, r2, lsl #7
 3818 0088 C3F3C453 		ubfx	r3, r3, #23, #5
 3819              	.LVL437:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3820              		.loc 3 452 5 view .LVU1167
 3821 008c 3046     		mov	r0, r6	@ movhi
 3822              	.LVL438:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3823              		.loc 3 452 5 view .LVU1168
 3824 008e 63F3CF20 		bfi	r0, r3, #11, #5
 3825              	.LVL439:
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3826              		.loc 3 454 5 is_stmt 1 view .LVU1169
 3827 0092 C4F34513 		ubfx	r3, r4, #5, #6
 3828 0096 03FB01F3 		mul	r3, r3, r1
 3829 009a 8033     		adds	r3, r3, #128
 3830 009c 03EB0322 		add	r2, r3, r3, lsl #8
 3831 00a0 03EBC213 		add	r3, r3, r2, lsl #7
 3832 00a4 C3F3C553 		ubfx	r3, r3, #23, #6
 3833 00a8 63F34A10 		bfi	r0, r3, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3834              		.loc 3 456 5 view .LVU1170
 3835 00ac 04F01F03 		and	r3, r4, #31
 3836 00b0 03FB01F3 		mul	r3, r3, r1
 3837 00b4 8033     		adds	r3, r3, #128
 3838 00b6 03EB0322 		add	r2, r3, r3, lsl #8
 3839 00ba 03EBC213 		add	r3, r3, r2, lsl #7
 3840 00be C3F3C453 		ubfx	r3, r3, #23, #5
 3841 00c2 63F30400 		bfi	r0, r3, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3842              		.loc 3 458 5 view .LVU1171
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3843              		.loc 3 458 5 view .LVU1172
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3844              		.loc 3 464 5 view .LVU1173
ARM GAS  D:\Temp\ccohqSTj.s 			page 115


 3845              	.LVL440:
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 3846              		.loc 3 464 5 is_stmt 0 view .LVU1174
 3847              	.LBE232:
 3848              	.LBE231:
 597:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3849              		.loc 1 597 9 is_stmt 1 view .LVU1175
 597:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3850              		.loc 1 597 9 is_stmt 0 view .LVU1176
 3851 00c6 DDF80890 		ldr	r9, [sp, #8]
 3852 00ca 18E0     		b	.L204
 3853              	.LVL441:
 3854              	.L222:
 600:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 3855              		.loc 1 600 21 is_stmt 1 view .LVU1177
 600:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 3856              		.loc 1 600 37 is_stmt 0 view .LVU1178
 3857 00cc 35F81460 		ldrh	r6, [r5, r4, lsl #1]
 3858              	.LVL442:
 601:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 3859              		.loc 1 601 21 is_stmt 1 view .LVU1179
 601:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 3860              		.loc 1 601 38 is_stmt 0 view .LVU1180
 3861 00d0 009A     		ldr	r2, [sp]
 3862              	.LVL443:
 601:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 3863              		.loc 1 601 38 view .LVU1181
 3864 00d2 3146     		mov	r1, r6	@ movhi
 3865 00d4 BDF80600 		ldrh	r0, [sp, #6]
 3866              	.LVL444:
 601:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 3867              		.loc 1 601 38 view .LVU1182
 3868 00d8 D047     		blx	r10
 3869              	.LVL445:
 3870              	.L206:
 603:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 3871              		.loc 1 603 17 is_stmt 1 discriminator 2 view .LVU1183
 603:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 3872              		.loc 1 603 33 is_stmt 0 discriminator 2 view .LVU1184
 3873 00da 3880     		strh	r0, [r7]	@ movhi
 598:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3874              		.loc 1 598 57 discriminator 2 view .LVU1185
 3875 00dc 0134     		adds	r4, r4, #1
 3876              	.LVL446:
 3877              	.L205:
 598:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3878              		.loc 1 598 50 discriminator 1 view .LVU1186
 3879 00de B8F90430 		ldrsh	r3, [r8, #4]
 598:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3880              		.loc 1 598 13 discriminator 1 view .LVU1187
 3881 00e2 A342     		cmp	r3, r4
 3882 00e4 07DB     		blt	.L221
 599:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3883              		.loc 1 599 17 is_stmt 1 view .LVU1188
 599:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3884              		.loc 1 599 35 is_stmt 0 view .LVU1189
 3885 00e6 B3B2     		uxth	r3, r6
ARM GAS  D:\Temp\ccohqSTj.s 			page 116


 599:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3886              		.loc 1 599 56 view .LVU1190
 3887 00e8 05EB4407 		add	r7, r5, r4, lsl #1
 599:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3888              		.loc 1 599 59 view .LVU1191
 3889 00ec 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 599:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3890              		.loc 1 599 19 view .LVU1192
 3891 00f0 9342     		cmp	r3, r2
 3892 00f2 EBD1     		bne	.L222
 599:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 3893              		.loc 1 599 19 view .LVU1193
 3894 00f4 F1E7     		b	.L206
 3895              	.L221:
 605:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 3896              		.loc 1 605 13 is_stmt 1 discriminator 2 view .LVU1194
 605:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 3897              		.loc 1 605 26 is_stmt 0 discriminator 2 view .LVU1195
 3898 00f6 05EB4905 		add	r5, r5, r9, lsl #1
 3899              	.LVL447:
 597:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3900              		.loc 1 597 53 discriminator 2 view .LVU1196
 3901 00fa 0BF1010B 		add	fp, fp, #1
 3902              	.LVL448:
 3903              	.L204:
 597:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3904              		.loc 1 597 46 discriminator 1 view .LVU1197
 3905 00fe B8F90630 		ldrsh	r3, [r8, #6]
 597:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 3906              		.loc 1 597 9 discriminator 1 view .LVU1198
 3907 0102 5B45     		cmp	r3, fp
 3908 0104 37DB     		blt	.L200
 598:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3909              		.loc 1 598 13 is_stmt 1 view .LVU1199
 598:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3910              		.loc 1 598 30 is_stmt 0 view .LVU1200
 3911 0106 B8F90040 		ldrsh	r4, [r8]
 3912              	.LVL449:
 598:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3913              		.loc 1 598 13 view .LVU1201
 3914 010a E8E7     		b	.L205
 3915              	.LVL450:
 3916              	.L224:
 598:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 3917              		.loc 1 598 13 view .LVU1202
 3918              	.LBE230:
 3919              	.LBB233:
 628:lvgl/src/lv_draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3920              		.loc 1 628 63 discriminator 1 view .LVU1203
 3921 010c 1FFA8CF3 		uxth	r3, ip
 628:lvgl/src/lv_draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3922              		.loc 1 628 87 discriminator 1 view .LVU1204
 3923 0110 35F814E0 		ldrh	lr, [r5, r4, lsl #1]
 628:lvgl/src/lv_draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3924              		.loc 1 628 45 discriminator 1 view .LVU1205
 3925 0114 7345     		cmp	r3, lr
 3926 0116 19D1     		bne	.L212
ARM GAS  D:\Temp\ccohqSTj.s 			page 117


 628:lvgl/src/lv_draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3927              		.loc 1 628 45 discriminator 1 view .LVU1206
 3928 0118 09E0     		b	.L213
 3929              	.L218:
 3930              	.LBB228:
 629:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3931              		.loc 1 629 30 view .LVU1207
 3932 011a 009A     		ldr	r2, [sp]
 3933              	.L214:
 3934              	.LVL451:
 631:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3935              		.loc 1 631 21 is_stmt 1 discriminator 4 view .LVU1208
 631:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3936              		.loc 1 631 38 is_stmt 0 discriminator 4 view .LVU1209
 3937 011c 35F81610 		ldrh	r1, [r5, r6, lsl #1]
 3938              	.LVL452:
 631:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3939              		.loc 1 631 38 discriminator 4 view .LVU1210
 3940 0120 BDF80600 		ldrh	r0, [sp, #6]
 3941              	.LVL453:
 631:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 3942              		.loc 1 631 38 discriminator 4 view .LVU1211
 3943 0124 D047     		blx	r10
 3944              	.LVL454:
 632:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 3945              		.loc 1 632 21 is_stmt 1 discriminator 4 view .LVU1212
 632:lvgl/src/lv_draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 3946              		.loc 1 632 31 is_stmt 0 discriminator 4 view .LVU1213
 3947 0126 99F80010 		ldrb	r1, [r9]	@ zero_extendqisi2
 3948              	.LVL455:
 633:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 3949              		.loc 1 633 21 is_stmt 1 discriminator 4 view .LVU1214
 633:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 3950              		.loc 1 633 42 is_stmt 0 discriminator 4 view .LVU1215
 3951 012a 35F816C0 		ldrh	ip, [r5, r6, lsl #1]
 3952              	.LVL456:
 3953              	.L213:
 633:lvgl/src/lv_draw/lv_draw_blend.c ****                 }
 3954              		.loc 1 633 42 discriminator 4 view .LVU1216
 3955              	.LBE228:
 635:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 3956              		.loc 1 635 17 is_stmt 1 view .LVU1217
 635:lvgl/src/lv_draw/lv_draw_blend.c ****             }
 3957              		.loc 1 635 33 is_stmt 0 view .LVU1218
 3958 012e 25F81600 		strh	r0, [r5, r6, lsl #1]	@ movhi
 3959              	.L211:
 626:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3960              		.loc 1 626 57 discriminator 2 view .LVU1219
 3961 0132 0134     		adds	r4, r4, #1
 3962              	.LVL457:
 3963              	.L210:
 626:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3964              		.loc 1 626 50 discriminator 1 view .LVU1220
 3965 0134 B8F90430 		ldrsh	r3, [r8, #4]
 626:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 3966              		.loc 1 626 13 discriminator 1 view .LVU1221
 3967 0138 A342     		cmp	r3, r4
ARM GAS  D:\Temp\ccohqSTj.s 			page 118


 3968 013a 0EDB     		blt	.L223
 627:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 3969              		.loc 1 627 17 is_stmt 1 view .LVU1222
 627:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 3970              		.loc 1 627 28 is_stmt 0 view .LVU1223
 3971 013c 2646     		mov	r6, r4
 3972 013e 07EB0409 		add	r9, r7, r4
 3973 0142 3A5D     		ldrb	r2, [r7, r4]	@ zero_extendqisi2
 627:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 3974              		.loc 1 627 19 view .LVU1224
 3975 0144 002A     		cmp	r2, #0
 3976 0146 F4D0     		beq	.L211
 628:lvgl/src/lv_draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3977              		.loc 1 628 17 is_stmt 1 view .LVU1225
 628:lvgl/src/lv_draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 3978              		.loc 1 628 19 is_stmt 0 view .LVU1226
 3979 0148 8A42     		cmp	r2, r1
 3980 014a DFD0     		beq	.L224
 3981              	.L212:
 3982              	.LBB229:
 629:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3983              		.loc 1 629 21 is_stmt 1 view .LVU1227
 629:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3984              		.loc 1 629 30 is_stmt 0 view .LVU1228
 3985 014c FC2A     		cmp	r2, #252
 3986 014e E4D8     		bhi	.L218
 629:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3987              		.loc 1 629 74 discriminator 1 view .LVU1229
 3988 0150 009B     		ldr	r3, [sp]
 3989 0152 02FB03F2 		mul	r2, r2, r3
 629:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3990              		.loc 1 629 30 discriminator 1 view .LVU1230
 3991 0156 120A     		lsrs	r2, r2, #8
 3992 0158 E0E7     		b	.L214
 3993              	.L223:
 629:lvgl/src/lv_draw/lv_draw_blend.c **** 
 3994              		.loc 1 629 30 discriminator 1 view .LVU1231
 3995              	.LBE229:
 637:lvgl/src/lv_draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 3996              		.loc 1 637 13 is_stmt 1 discriminator 2 view .LVU1232
 637:lvgl/src/lv_draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 3997              		.loc 1 637 26 is_stmt 0 discriminator 2 view .LVU1233
 3998 015a 029B     		ldr	r3, [sp, #8]
 3999 015c 05EB4305 		add	r5, r5, r3, lsl #1
 4000              	.LVL458:
 638:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 4001              		.loc 1 638 13 is_stmt 1 discriminator 2 view .LVU1234
 638:lvgl/src/lv_draw/lv_draw_blend.c ****         }
 4002              		.loc 1 638 22 is_stmt 0 discriminator 2 view .LVU1235
 4003 0160 039B     		ldr	r3, [sp, #12]
 4004 0162 1F44     		add	r7, r7, r3
 4005              	.LVL459:
 625:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 4006              		.loc 1 625 53 discriminator 2 view .LVU1236
 4007 0164 0BF1010B 		add	fp, fp, #1
 4008              	.LVL460:
 4009              	.L209:
ARM GAS  D:\Temp\ccohqSTj.s 			page 119


 625:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 4010              		.loc 1 625 46 discriminator 1 view .LVU1237
 4011 0168 B8F90630 		ldrsh	r3, [r8, #6]
 625:lvgl/src/lv_draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 4012              		.loc 1 625 9 discriminator 1 view .LVU1238
 4013 016c 5B45     		cmp	r3, fp
 4014 016e 02DB     		blt	.L200
 626:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 4015              		.loc 1 626 13 is_stmt 1 view .LVU1239
 626:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 4016              		.loc 1 626 30 is_stmt 0 view .LVU1240
 4017 0170 B8F90040 		ldrsh	r4, [r8]
 4018              	.LVL461:
 626:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 4019              		.loc 1 626 13 view .LVU1241
 4020 0174 DEE7     		b	.L210
 4021              	.LVL462:
 4022              	.L200:
 626:lvgl/src/lv_draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 4023              		.loc 1 626 13 view .LVU1242
 4024              	.LBE233:
 641:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 4025              		.loc 1 641 1 view .LVU1243
 4026 0176 05B0     		add	sp, sp, #20
 4027              	.LCFI23:
 4028              		.cfi_def_cfa_offset 36
 4029              		@ sp needed
 4030 0178 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4031              	.LVL463:
 4032              	.L226:
 641:lvgl/src/lv_draw/lv_draw_blend.c **** #endif
 4033              		.loc 1 641 1 view .LVU1244
 4034              		.align	2
 4035              	.L225:
 4036 017c 00000000 		.word	color_blend_true_color_subtractive
 4037 0180 00000000 		.word	color_blend_true_color_additive
 4038              		.cfi_endproc
 4039              	.LFE462:
 4041              		.section	.text._lv_blend_fill,"ax",%progbits
 4042              		.align	1
 4043              		.global	_lv_blend_fill
 4044              		.syntax unified
 4045              		.thumb
 4046              		.thumb_func
 4047              		.fpu fpv4-sp-d16
 4049              	_lv_blend_fill:
 4050              	.LVL464:
 4051              	.LFB458:
 133:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4052              		.loc 1 133 1 is_stmt 1 view -0
 4053              		.cfi_startproc
 4054              		@ args = 12, pretend = 0, frame = 24
 4055              		@ frame_needed = 0, uses_anonymous_args = 0
 133:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4056              		.loc 1 133 1 is_stmt 0 view .LVU1246
 4057 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4058              	.LCFI24:
ARM GAS  D:\Temp\ccohqSTj.s 			page 120


 4059              		.cfi_def_cfa_offset 36
 4060              		.cfi_offset 4, -36
 4061              		.cfi_offset 5, -32
 4062              		.cfi_offset 6, -28
 4063              		.cfi_offset 7, -24
 4064              		.cfi_offset 8, -20
 4065              		.cfi_offset 9, -16
 4066              		.cfi_offset 10, -12
 4067              		.cfi_offset 11, -8
 4068              		.cfi_offset 14, -4
 4069 0004 8BB0     		sub	sp, sp, #44
 4070              	.LCFI25:
 4071              		.cfi_def_cfa_offset 80
 4072 0006 9DF85060 		ldrb	r6, [sp, #80]	@ zero_extendqisi2
 4073 000a 9DF85450 		ldrb	r5, [sp, #84]	@ zero_extendqisi2
 4074 000e 9DF85890 		ldrb	r9, [sp, #88]	@ zero_extendqisi2
 135:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4075              		.loc 1 135 5 is_stmt 1 view .LVU1247
 135:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4076              		.loc 1 135 7 is_stmt 0 view .LVU1248
 4077 0012 012D     		cmp	r5, #1
 4078 0014 00D9     		bls	.L227
 136:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4079              		.loc 1 136 5 is_stmt 1 view .LVU1249
 136:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4080              		.loc 1 136 7 is_stmt 0 view .LVU1250
 4081 0016 16B9     		cbnz	r6, .L240
 4082              	.LVL465:
 4083              	.L227:
 182:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4084              		.loc 1 182 1 view .LVU1251
 4085 0018 0BB0     		add	sp, sp, #44
 4086              	.LCFI26:
 4087              		.cfi_remember_state
 4088              		.cfi_def_cfa_offset 36
 4089              		@ sp needed
 4090 001a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4091              	.LVL466:
 4092              	.L240:
 4093              	.LCFI27:
 4094              		.cfi_restore_state
 182:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4095              		.loc 1 182 1 view .LVU1252
 4096 001e 1C46     		mov	r4, r3
 4097 0020 ADF81E20 		strh	r2, [sp, #30]	@ movhi
 4098 0024 0691     		str	r1, [sp, #24]
 4099 0026 0590     		str	r0, [sp, #20]
 138:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp);
 4100              		.loc 1 138 5 is_stmt 1 view .LVU1253
 138:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp);
 4101              		.loc 1 138 24 is_stmt 0 view .LVU1254
 4102 0028 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 4103              	.LVL467:
 138:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp);
 4104              		.loc 1 138 24 view .LVU1255
 4105 002c 8046     		mov	r8, r0
 4106              	.LVL468:
ARM GAS  D:\Temp\ccohqSTj.s 			page 121


 139:lvgl/src/lv_draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &vdb->area;
 4107              		.loc 1 139 5 is_stmt 1 view .LVU1256
 139:lvgl/src/lv_draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &vdb->area;
 4108              		.loc 1 139 27 is_stmt 0 view .LVU1257
 4109 002e FFF7FEFF 		bl	lv_disp_get_buf
 4110              	.LVL469:
 139:lvgl/src/lv_draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &vdb->area;
 4111              		.loc 1 139 27 view .LVU1258
 4112 0032 0746     		mov	r7, r0
 4113              	.LVL470:
 140:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t * disp_buf = vdb->buf_act;
 4114              		.loc 1 140 5 is_stmt 1 view .LVU1259
 140:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t * disp_buf = vdb->buf_act;
 4115              		.loc 1 140 23 is_stmt 0 view .LVU1260
 4116 0034 00F1100A 		add	r10, r0, #16
 4117              	.LVL471:
 141:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4118              		.loc 1 141 5 is_stmt 1 view .LVU1261
 141:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4119              		.loc 1 141 18 is_stmt 0 view .LVU1262
 4120 0038 D0F808B0 		ldr	fp, [r0, #8]
 4121              	.LVL472:
 143:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4122              		.loc 1 143 5 is_stmt 1 view .LVU1263
 143:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4123              		.loc 1 143 20 is_stmt 0 view .LVU1264
 4124 003c D8F82430 		ldr	r3, [r8, #36]
 143:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4125              		.loc 1 143 7 view .LVU1265
 4126 0040 0BB1     		cbz	r3, .L229
 143:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4127              		.loc 1 143 34 is_stmt 1 discriminator 1 view .LVU1266
 4128 0042 4046     		mov	r0, r8
 4129              	.LVL473:
 143:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4130              		.loc 1 143 34 is_stmt 0 discriminator 1 view .LVU1267
 4131 0044 9847     		blx	r3
 4132              	.LVL474:
 4133              	.L229:
 147:lvgl/src/lv_draw/lv_draw_blend.c ****     bool is_common;
 4134              		.loc 1 147 5 is_stmt 1 view .LVU1268
 148:lvgl/src/lv_draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, fill_area);
 4135              		.loc 1 148 5 view .LVU1269
 149:lvgl/src/lv_draw/lv_draw_blend.c ****     if(!is_common) return;
 4136              		.loc 1 149 5 view .LVU1270
 149:lvgl/src/lv_draw/lv_draw_blend.c ****     if(!is_common) return;
 4137              		.loc 1 149 17 is_stmt 0 view .LVU1271
 4138 0046 069A     		ldr	r2, [sp, #24]
 4139 0048 0599     		ldr	r1, [sp, #20]
 4140 004a 08A8     		add	r0, sp, #32
 4141 004c FFF7FEFF 		bl	_lv_area_intersect
 4142              	.LVL475:
 150:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4143              		.loc 1 150 5 is_stmt 1 view .LVU1272
 150:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4144              		.loc 1 150 7 is_stmt 0 view .LVU1273
 4145 0050 0028     		cmp	r0, #0
ARM GAS  D:\Temp\ccohqSTj.s 			page 122


 4146 0052 E1D0     		beq	.L227
 154:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4147              		.loc 1 154 5 is_stmt 1 view .LVU1274
 154:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4148              		.loc 1 154 30 is_stmt 0 view .LVU1275
 4149 0054 B7F810C0 		ldrh	ip, [r7, #16]
 154:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4150              		.loc 1 154 18 view .LVU1276
 4151 0058 BDF82020 		ldrh	r2, [sp, #32]
 4152 005c A2EB0C02 		sub	r2, r2, ip
 4153 0060 92B2     		uxth	r2, r2
 4154 0062 ADF82020 		strh	r2, [sp, #32]	@ movhi
 155:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4155              		.loc 1 155 5 is_stmt 1 view .LVU1277
 155:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4156              		.loc 1 155 30 is_stmt 0 view .LVU1278
 4157 0066 788A     		ldrh	r0, [r7, #18]
 4158              	.LVL476:
 155:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4159              		.loc 1 155 18 view .LVU1279
 4160 0068 BDF82210 		ldrh	r1, [sp, #34]
 4161 006c 091A     		subs	r1, r1, r0
 4162 006e ADF82210 		strh	r1, [sp, #34]	@ movhi
 156:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4163              		.loc 1 156 5 is_stmt 1 view .LVU1280
 156:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4164              		.loc 1 156 18 is_stmt 0 view .LVU1281
 4165 0072 BDF82430 		ldrh	r3, [sp, #36]
 4166 0076 A3EB0C03 		sub	r3, r3, ip
 4167 007a 9BB2     		uxth	r3, r3
 4168 007c ADF82430 		strh	r3, [sp, #36]	@ movhi
 157:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4169              		.loc 1 157 5 is_stmt 1 view .LVU1282
 157:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4170              		.loc 1 157 18 is_stmt 0 view .LVU1283
 4171 0080 BDF82610 		ldrh	r1, [sp, #38]
 4172 0084 091A     		subs	r1, r1, r0
 4173 0086 ADF82610 		strh	r1, [sp, #38]	@ movhi
 161:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 4174              		.loc 1 161 5 is_stmt 1 view .LVU1284
 161:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 4175              		.loc 1 161 7 is_stmt 0 view .LVU1285
 4176 008a ACB1     		cbz	r4, .L230
 161:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 4177              		.loc 1 161 42 discriminator 1 view .LVU1286
 4178 008c 98F80810 		ldrb	r1, [r8, #8]	@ zero_extendqisi2
 161:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 4179              		.loc 1 161 13 discriminator 1 view .LVU1287
 4180 0090 11F0010F 		tst	r1, #1
 4181 0094 10D1     		bne	.L230
 4182              	.LBB234:
 166:lvgl/src/lv_draw/lv_draw_blend.c ****         int32_t i;
 4183              		.loc 1 166 9 is_stmt 1 view .LVU1288
 4184              	.LVL477:
 4185              	.LBB235:
 4186              	.LBI235:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
ARM GAS  D:\Temp\ccohqSTj.s 			page 123


 4187              		.loc 2 107 26 view .LVU1289
 4188              	.LBB236:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 4189              		.loc 2 109 5 view .LVU1290
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 4190              		.loc 2 109 36 is_stmt 0 view .LVU1291
 4191 0096 9A1A     		subs	r2, r3, r2
 4192 0098 92B2     		uxth	r2, r2
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 4193              		.loc 2 109 49 view .LVU1292
 4194 009a 0132     		adds	r2, r2, #1
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 4195              		.loc 2 109 12 view .LVU1293
 4196 009c 12B2     		sxth	r2, r2
 4197              	.LVL478:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 4198              		.loc 2 109 12 view .LVU1294
 4199              	.LBE236:
 4200              	.LBE235:
 167:lvgl/src/lv_draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4201              		.loc 1 167 9 is_stmt 1 view .LVU1295
 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4202              		.loc 1 168 9 view .LVU1296
 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4203              		.loc 1 168 15 is_stmt 0 view .LVU1297
 4204 009e 0023     		movs	r3, #0
 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4205              		.loc 1 168 9 view .LVU1298
 4206 00a0 02E0     		b	.L231
 4207              	.LVL479:
 4208              	.L238:
 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4209              		.loc 1 168 46 view .LVU1299
 4210 00a2 0020     		movs	r0, #0
 4211              	.L232:
 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4212              		.loc 1 168 46 discriminator 5 view .LVU1300
 4213 00a4 0870     		strb	r0, [r1]
 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4214              		.loc 1 168 33 discriminator 5 view .LVU1301
 4215 00a6 0133     		adds	r3, r3, #1
 4216              	.LVL480:
 4217              	.L231:
 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4218              		.loc 1 168 9 discriminator 6 view .LVU1302
 4219 00a8 9342     		cmp	r3, r2
 4220 00aa 05DA     		bge	.L230
 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4221              		.loc 1 168 38 is_stmt 1 discriminator 7 view .LVU1303
 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4222              		.loc 1 168 52 is_stmt 0 discriminator 7 view .LVU1304
 4223 00ac E118     		adds	r1, r4, r3
 4224 00ae E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4225              		.loc 1 168 46 discriminator 7 view .LVU1305
 4226 00b0 8028     		cmp	r0, #128
 4227 00b2 F6D9     		bls	.L238
ARM GAS  D:\Temp\ccohqSTj.s 			page 124


 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4228              		.loc 1 168 46 view .LVU1306
 4229 00b4 FF20     		movs	r0, #255
 4230 00b6 F5E7     		b	.L232
 4231              	.LVL481:
 4232              	.L230:
 168:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4233              		.loc 1 168 46 view .LVU1307
 4234              	.LBE234:
 171:lvgl/src/lv_draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4235              		.loc 1 171 5 is_stmt 1 view .LVU1308
 171:lvgl/src/lv_draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4236              		.loc 1 171 20 is_stmt 0 view .LVU1309
 4237 00b8 D8F81430 		ldr	r3, [r8, #20]
 171:lvgl/src/lv_draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4238              		.loc 1 171 7 view .LVU1310
 4239 00bc 53B1     		cbz	r3, .L234
 172:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4240              		.loc 1 172 9 is_stmt 1 view .LVU1311
 4241 00be 0296     		str	r6, [sp, #8]
 4242 00c0 0194     		str	r4, [sp, #4]
 4243 00c2 0095     		str	r5, [sp]
 4244 00c4 BDF81E30 		ldrh	r3, [sp, #30]
 4245 00c8 08AA     		add	r2, sp, #32
 4246 00ca 5946     		mov	r1, fp
 4247 00cc 5046     		mov	r0, r10
 4248 00ce FFF7FEFF 		bl	fill_set_px
 4249              	.LVL482:
 4250 00d2 A1E7     		b	.L227
 4251              	.L234:
 174:lvgl/src/lv_draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4252              		.loc 1 174 10 view .LVU1312
 174:lvgl/src/lv_draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4253              		.loc 1 174 12 is_stmt 0 view .LVU1313
 4254 00d4 B9F1000F 		cmp	r9, #0
 4255 00d8 0AD1     		bne	.L236
 175:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4256              		.loc 1 175 9 is_stmt 1 view .LVU1314
 4257 00da 0296     		str	r6, [sp, #8]
 4258 00dc 0194     		str	r4, [sp, #4]
 4259 00de 0095     		str	r5, [sp]
 4260 00e0 BDF81E30 		ldrh	r3, [sp, #30]
 4261 00e4 08AA     		add	r2, sp, #32
 4262 00e6 5946     		mov	r1, fp
 4263 00e8 5046     		mov	r0, r10
 4264 00ea FFF7FEFF 		bl	fill_normal
 4265              	.LVL483:
 4266 00ee 93E7     		b	.L227
 4267              	.L236:
 179:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4268              		.loc 1 179 9 view .LVU1315
 4269 00f0 CDF80C90 		str	r9, [sp, #12]
 4270 00f4 0296     		str	r6, [sp, #8]
 4271 00f6 0194     		str	r4, [sp, #4]
 4272 00f8 0095     		str	r5, [sp]
 4273 00fa BDF81E30 		ldrh	r3, [sp, #30]
 4274 00fe 08AA     		add	r2, sp, #32
ARM GAS  D:\Temp\ccohqSTj.s 			page 125


 4275 0100 5946     		mov	r1, fp
 4276 0102 5046     		mov	r0, r10
 4277 0104 FFF7FEFF 		bl	fill_blended
 4278              	.LVL484:
 4279 0108 86E7     		b	.L227
 4280              		.cfi_endproc
 4281              	.LFE458:
 4283              		.section	.text._lv_blend_map,"ax",%progbits
 4284              		.align	1
 4285              		.global	_lv_blend_map
 4286              		.syntax unified
 4287              		.thumb
 4288              		.thumb_func
 4289              		.fpu fpv4-sp-d16
 4291              	_lv_blend_map:
 4292              	.LVL485:
 4293              	.LFB459:
 201:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4294              		.loc 1 201 1 view -0
 4295              		.cfi_startproc
 4296              		@ args = 12, pretend = 0, frame = 16
 4297              		@ frame_needed = 0, uses_anonymous_args = 0
 201:lvgl/src/lv_draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4298              		.loc 1 201 1 is_stmt 0 view .LVU1317
 4299 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4300              	.LCFI28:
 4301              		.cfi_def_cfa_offset 36
 4302              		.cfi_offset 4, -36
 4303              		.cfi_offset 5, -32
 4304              		.cfi_offset 6, -28
 4305              		.cfi_offset 7, -24
 4306              		.cfi_offset 8, -20
 4307              		.cfi_offset 9, -16
 4308              		.cfi_offset 10, -12
 4309              		.cfi_offset 11, -8
 4310              		.cfi_offset 14, -4
 4311 0004 8BB0     		sub	sp, sp, #44
 4312              	.LCFI29:
 4313              		.cfi_def_cfa_offset 80
 4314 0006 9DF85060 		ldrb	r6, [sp, #80]	@ zero_extendqisi2
 4315 000a 9DF85450 		ldrb	r5, [sp, #84]	@ zero_extendqisi2
 4316 000e 9DF85880 		ldrb	r8, [sp, #88]	@ zero_extendqisi2
 203:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4317              		.loc 1 203 5 is_stmt 1 view .LVU1318
 203:lvgl/src/lv_draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4318              		.loc 1 203 7 is_stmt 0 view .LVU1319
 4319 0012 012D     		cmp	r5, #1
 4320 0014 00D9     		bls	.L241
 204:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4321              		.loc 1 204 5 is_stmt 1 view .LVU1320
 204:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4322              		.loc 1 204 7 is_stmt 0 view .LVU1321
 4323 0016 16B9     		cbnz	r6, .L254
 4324              	.LVL486:
 4325              	.L241:
 249:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4326              		.loc 1 249 1 view .LVU1322
ARM GAS  D:\Temp\ccohqSTj.s 			page 126


 4327 0018 0BB0     		add	sp, sp, #44
 4328              	.LCFI30:
 4329              		.cfi_remember_state
 4330              		.cfi_def_cfa_offset 36
 4331              		@ sp needed
 4332 001a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4333              	.LVL487:
 4334              	.L254:
 4335              	.LCFI31:
 4336              		.cfi_restore_state
 249:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4337              		.loc 1 249 1 view .LVU1323
 4338 001e 1C46     		mov	r4, r3
 4339 0020 1746     		mov	r7, r2
 4340 0022 0A46     		mov	r2, r1
 4341              	.LVL488:
 249:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4342              		.loc 1 249 1 view .LVU1324
 4343 0024 0691     		str	r1, [sp, #24]
 4344 0026 0146     		mov	r1, r0
 4345              	.LVL489:
 208:lvgl/src/lv_draw/lv_draw_blend.c ****     bool is_common;
 4346              		.loc 1 208 5 is_stmt 1 view .LVU1325
 209:lvgl/src/lv_draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, map_area);
 4347              		.loc 1 209 5 view .LVU1326
 210:lvgl/src/lv_draw/lv_draw_blend.c ****     if(!is_common) return;
 4348              		.loc 1 210 5 view .LVU1327
 210:lvgl/src/lv_draw/lv_draw_blend.c ****     if(!is_common) return;
 4349              		.loc 1 210 17 is_stmt 0 view .LVU1328
 4350 0028 08A8     		add	r0, sp, #32
 4351              	.LVL490:
 210:lvgl/src/lv_draw/lv_draw_blend.c ****     if(!is_common) return;
 4352              		.loc 1 210 17 view .LVU1329
 4353 002a FFF7FEFF 		bl	_lv_area_intersect
 4354              	.LVL491:
 211:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4355              		.loc 1 211 5 is_stmt 1 view .LVU1330
 211:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4356              		.loc 1 211 7 is_stmt 0 view .LVU1331
 4357 002e 0028     		cmp	r0, #0
 4358 0030 F2D0     		beq	.L241
 213:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp);
 4359              		.loc 1 213 5 is_stmt 1 view .LVU1332
 213:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp);
 4360              		.loc 1 213 24 is_stmt 0 view .LVU1333
 4361 0032 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 4362              	.LVL492:
 213:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp);
 4363              		.loc 1 213 24 view .LVU1334
 4364 0036 8246     		mov	r10, r0
 4365              	.LVL493:
 214:lvgl/src/lv_draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &vdb->area;
 4366              		.loc 1 214 5 is_stmt 1 view .LVU1335
 214:lvgl/src/lv_draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &vdb->area;
 4367              		.loc 1 214 27 is_stmt 0 view .LVU1336
 4368 0038 FFF7FEFF 		bl	lv_disp_get_buf
 4369              	.LVL494:
ARM GAS  D:\Temp\ccohqSTj.s 			page 127


 214:lvgl/src/lv_draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &vdb->area;
 4370              		.loc 1 214 27 view .LVU1337
 4371 003c 8146     		mov	r9, r0
 4372              	.LVL495:
 215:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t * disp_buf = vdb->buf_act;
 4373              		.loc 1 215 5 is_stmt 1 view .LVU1338
 215:lvgl/src/lv_draw/lv_draw_blend.c ****     lv_color_t * disp_buf = vdb->buf_act;
 4374              		.loc 1 215 23 is_stmt 0 view .LVU1339
 4375 003e 00F1100B 		add	fp, r0, #16
 4376              	.LVL496:
 216:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4377              		.loc 1 216 5 is_stmt 1 view .LVU1340
 216:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4378              		.loc 1 216 18 is_stmt 0 view .LVU1341
 4379 0042 8368     		ldr	r3, [r0, #8]
 4380 0044 0793     		str	r3, [sp, #28]
 4381              	.LVL497:
 218:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4382              		.loc 1 218 5 is_stmt 1 view .LVU1342
 218:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4383              		.loc 1 218 20 is_stmt 0 view .LVU1343
 4384 0046 DAF82430 		ldr	r3, [r10, #36]
 4385              	.LVL498:
 218:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4386              		.loc 1 218 7 view .LVU1344
 4387 004a 0BB1     		cbz	r3, .L243
 218:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4388              		.loc 1 218 34 is_stmt 1 discriminator 1 view .LVU1345
 4389 004c 5046     		mov	r0, r10
 4390              	.LVL499:
 218:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4391              		.loc 1 218 34 is_stmt 0 discriminator 1 view .LVU1346
 4392 004e 9847     		blx	r3
 4393              	.LVL500:
 4394              	.L243:
 222:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4395              		.loc 1 222 5 is_stmt 1 view .LVU1347
 222:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4396              		.loc 1 222 30 is_stmt 0 view .LVU1348
 4397 0050 B9F810C0 		ldrh	ip, [r9, #16]
 222:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4398              		.loc 1 222 18 view .LVU1349
 4399 0054 BDF82020 		ldrh	r2, [sp, #32]
 4400 0058 A2EB0C02 		sub	r2, r2, ip
 4401 005c 92B2     		uxth	r2, r2
 4402 005e ADF82020 		strh	r2, [sp, #32]	@ movhi
 223:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4403              		.loc 1 223 5 is_stmt 1 view .LVU1350
 223:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4404              		.loc 1 223 30 is_stmt 0 view .LVU1351
 4405 0062 B9F81200 		ldrh	r0, [r9, #18]
 223:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4406              		.loc 1 223 18 view .LVU1352
 4407 0066 BDF82210 		ldrh	r1, [sp, #34]
 4408 006a 091A     		subs	r1, r1, r0
 4409 006c ADF82210 		strh	r1, [sp, #34]	@ movhi
 224:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
ARM GAS  D:\Temp\ccohqSTj.s 			page 128


 4410              		.loc 1 224 5 is_stmt 1 view .LVU1353
 224:lvgl/src/lv_draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4411              		.loc 1 224 18 is_stmt 0 view .LVU1354
 4412 0070 BDF82430 		ldrh	r3, [sp, #36]
 4413 0074 A3EB0C03 		sub	r3, r3, ip
 4414 0078 9BB2     		uxth	r3, r3
 4415 007a ADF82430 		strh	r3, [sp, #36]	@ movhi
 225:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4416              		.loc 1 225 5 is_stmt 1 view .LVU1355
 225:lvgl/src/lv_draw/lv_draw_blend.c **** 
 4417              		.loc 1 225 18 is_stmt 0 view .LVU1356
 4418 007e BDF82610 		ldrh	r1, [sp, #38]
 4419 0082 091A     		subs	r1, r1, r0
 4420 0084 ADF82610 		strh	r1, [sp, #38]	@ movhi
 229:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 4421              		.loc 1 229 5 is_stmt 1 view .LVU1357
 229:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 4422              		.loc 1 229 7 is_stmt 0 view .LVU1358
 4423 0088 ACB1     		cbz	r4, .L244
 229:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 4424              		.loc 1 229 42 discriminator 1 view .LVU1359
 4425 008a 9AF80810 		ldrb	r1, [r10, #8]	@ zero_extendqisi2
 229:lvgl/src/lv_draw/lv_draw_blend.c **** #else
 4426              		.loc 1 229 13 discriminator 1 view .LVU1360
 4427 008e 11F0010F 		tst	r1, #1
 4428 0092 10D1     		bne	.L244
 4429              	.LBB237:
 234:lvgl/src/lv_draw/lv_draw_blend.c ****         int32_t i;
 4430              		.loc 1 234 9 is_stmt 1 view .LVU1361
 4431              	.LVL501:
 4432              	.LBB238:
 4433              	.LBI238:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 4434              		.loc 2 107 26 view .LVU1362
 4435              	.LBB239:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 4436              		.loc 2 109 5 view .LVU1363
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 4437              		.loc 2 109 36 is_stmt 0 view .LVU1364
 4438 0094 9A1A     		subs	r2, r3, r2
 4439 0096 92B2     		uxth	r2, r2
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 4440              		.loc 2 109 49 view .LVU1365
 4441 0098 0132     		adds	r2, r2, #1
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 4442              		.loc 2 109 12 view .LVU1366
 4443 009a 12B2     		sxth	r2, r2
 4444              	.LVL502:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 4445              		.loc 2 109 12 view .LVU1367
 4446              	.LBE239:
 4447              	.LBE238:
 235:lvgl/src/lv_draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4448              		.loc 1 235 9 is_stmt 1 view .LVU1368
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4449              		.loc 1 236 9 view .LVU1369
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
ARM GAS  D:\Temp\ccohqSTj.s 			page 129


 4450              		.loc 1 236 15 is_stmt 0 view .LVU1370
 4451 009c 0023     		movs	r3, #0
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4452              		.loc 1 236 9 view .LVU1371
 4453 009e 02E0     		b	.L245
 4454              	.LVL503:
 4455              	.L252:
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4456              		.loc 1 236 46 view .LVU1372
 4457 00a0 0020     		movs	r0, #0
 4458              	.L246:
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4459              		.loc 1 236 46 discriminator 5 view .LVU1373
 4460 00a2 0870     		strb	r0, [r1]
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4461              		.loc 1 236 33 discriminator 5 view .LVU1374
 4462 00a4 0133     		adds	r3, r3, #1
 4463              	.LVL504:
 4464              	.L245:
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4465              		.loc 1 236 9 discriminator 6 view .LVU1375
 4466 00a6 9342     		cmp	r3, r2
 4467 00a8 05DA     		bge	.L244
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4468              		.loc 1 236 38 is_stmt 1 discriminator 7 view .LVU1376
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4469              		.loc 1 236 52 is_stmt 0 discriminator 7 view .LVU1377
 4470 00aa E118     		adds	r1, r4, r3
 4471 00ac E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4472              		.loc 1 236 46 discriminator 7 view .LVU1378
 4473 00ae 8028     		cmp	r0, #128
 4474 00b0 F6D9     		bls	.L252
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4475              		.loc 1 236 46 view .LVU1379
 4476 00b2 FF20     		movs	r0, #255
 4477 00b4 F5E7     		b	.L246
 4478              	.LVL505:
 4479              	.L244:
 236:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4480              		.loc 1 236 46 view .LVU1380
 4481              	.LBE237:
 238:lvgl/src/lv_draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4482              		.loc 1 238 5 is_stmt 1 view .LVU1381
 238:lvgl/src/lv_draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4483              		.loc 1 238 20 is_stmt 0 view .LVU1382
 4484 00b6 DAF81430 		ldr	r3, [r10, #20]
 238:lvgl/src/lv_draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4485              		.loc 1 238 7 view .LVU1383
 4486 00ba 53B1     		cbz	r3, .L248
 239:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4487              		.loc 1 239 9 is_stmt 1 view .LVU1384
 4488 00bc 0396     		str	r6, [sp, #12]
 4489 00be 0294     		str	r4, [sp, #8]
 4490 00c0 0195     		str	r5, [sp, #4]
 4491 00c2 0097     		str	r7, [sp]
 4492 00c4 069B     		ldr	r3, [sp, #24]
ARM GAS  D:\Temp\ccohqSTj.s 			page 130


 4493 00c6 08AA     		add	r2, sp, #32
 4494 00c8 0799     		ldr	r1, [sp, #28]
 4495 00ca 5846     		mov	r0, fp
 4496 00cc FFF7FEFF 		bl	map_set_px
 4497              	.LVL506:
 4498 00d0 A2E7     		b	.L241
 4499              	.L248:
 241:lvgl/src/lv_draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4500              		.loc 1 241 10 view .LVU1385
 241:lvgl/src/lv_draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4501              		.loc 1 241 12 is_stmt 0 view .LVU1386
 4502 00d2 B8F1000F 		cmp	r8, #0
 4503 00d6 0AD1     		bne	.L250
 242:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4504              		.loc 1 242 9 is_stmt 1 view .LVU1387
 4505 00d8 0396     		str	r6, [sp, #12]
 4506 00da 0294     		str	r4, [sp, #8]
 4507 00dc 0195     		str	r5, [sp, #4]
 4508 00de 0097     		str	r7, [sp]
 4509 00e0 069B     		ldr	r3, [sp, #24]
 4510 00e2 08AA     		add	r2, sp, #32
 4511 00e4 0799     		ldr	r1, [sp, #28]
 4512 00e6 5846     		mov	r0, fp
 4513 00e8 FFF7FEFF 		bl	map_normal
 4514              	.LVL507:
 4515 00ec 94E7     		b	.L241
 4516              	.L250:
 246:lvgl/src/lv_draw/lv_draw_blend.c ****     }
 4517              		.loc 1 246 9 view .LVU1388
 4518 00ee CDF81080 		str	r8, [sp, #16]
 4519 00f2 0396     		str	r6, [sp, #12]
 4520 00f4 0294     		str	r4, [sp, #8]
 4521 00f6 0195     		str	r5, [sp, #4]
 4522 00f8 0097     		str	r7, [sp]
 4523 00fa 069B     		ldr	r3, [sp, #24]
 4524 00fc 08AA     		add	r2, sp, #32
 4525 00fe 0799     		ldr	r1, [sp, #28]
 4526 0100 5846     		mov	r0, fp
 4527 0102 FFF7FEFF 		bl	map_blended
 4528              	.LVL508:
 4529 0106 87E7     		b	.L241
 4530              		.cfi_endproc
 4531              	.LFE459:
 4533              		.section	.bss.blend_buf,"aw",%nobits
 4534              		.align	2
 4535              		.set	.LANCHOR0,. + 0
 4538              	blend_buf:
 4539 0000 00000000 		.space	640
 4539      00000000 
 4539      00000000 
 4539      00000000 
 4539      00000000 
 4540              		.text
 4541              	.Letext0:
 4542              		.file 4 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 4543              		.file 5 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 4544              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  D:\Temp\ccohqSTj.s 			page 131


 4545              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 4546              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 4547              		.file 9 "lvgl/lv_conf.h"
 4548              		.file 10 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4549              		.file 11 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4550              		.file 12 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 4551              		.file 13 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4552              		.file 14 "lvgl/src/lv_draw/../lv_misc/lv_types.h"
 4553              		.file 15 "lvgl/src/lv_draw/../lv_misc/lv_mem.h"
 4554              		.file 16 "lvgl/src/lv_draw/lv_draw_mask.h"
 4555              		.file 17 "lvgl/src/lv_draw/lv_draw_blend.h"
 4556              		.file 18 "lvgl/src/lv_draw/../lv_core/../lv_font/lv_font.h"
 4557              		.file 19 "lvgl/src/lv_draw/../lv_core/../lv_misc/lv_anim.h"
 4558              		.file 20 "lvgl/src/lv_draw/../lv_core/lv_style.h"
 4559              		.file 21 "lvgl/src/lv_draw/../lv_hal/../lv_misc/lv_ll.h"
 4560              		.file 22 "lvgl/src/lv_draw/../lv_hal/../lv_misc/lv_task.h"
 4561              		.file 23 "lvgl/src/lv_draw/../lv_hal/lv_hal_indev.h"
 4562              		.file 24 "lvgl/src/lv_draw/../lv_hal/lv_hal_disp.h"
 4563              		.file 25 "lvgl/src/lv_draw/../lv_core/lv_obj.h"
 4564              		.file 26 "lvgl/src/lv_draw/../lv_core/../lv_draw/../lv_misc/lv_bidi.h"
 4565              		.file 27 "lvgl/src/lv_draw/../lv_core/../lv_draw/../lv_misc/lv_txt.h"
 4566              		.file 28 "lvgl/src/lv_draw/../lv_core/../lv_draw/lv_draw_label.h"
 4567              		.file 29 "lvgl/src/lv_draw/../lv_core/lv_refr.h"
ARM GAS  D:\Temp\ccohqSTj.s 			page 132


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_draw_blend.c
  D:\Temp\ccohqSTj.s:18     .text.map_blended:0000000000000000 $t
  D:\Temp\ccohqSTj.s:25     .text.map_blended:0000000000000000 map_blended
  D:\Temp\ccohqSTj.s:339    .text.map_blended:000000000000013c $d
  D:\Temp\ccohqSTj.s:1038   .text.color_blend_true_color_subtractive:0000000000000000 color_blend_true_color_subtractive
  D:\Temp\ccohqSTj.s:877    .text.color_blend_true_color_additive:0000000000000000 color_blend_true_color_additive
  D:\Temp\ccohqSTj.s:345    .text.fill_set_px:0000000000000000 $t
  D:\Temp\ccohqSTj.s:351    .text.fill_set_px:0000000000000000 fill_set_px
  D:\Temp\ccohqSTj.s:579    .text.map_set_px:0000000000000000 $t
  D:\Temp\ccohqSTj.s:585    .text.map_set_px:0000000000000000 map_set_px
  D:\Temp\ccohqSTj.s:871    .text.color_blend_true_color_additive:0000000000000000 $t
  D:\Temp\ccohqSTj.s:1032   .text.color_blend_true_color_subtractive:0000000000000000 $t
  D:\Temp\ccohqSTj.s:1186   .text.fill_normal:0000000000000000 $t
  D:\Temp\ccohqSTj.s:1192   .text.fill_normal:0000000000000000 fill_normal
  D:\Temp\ccohqSTj.s:1800   .text.fill_normal:00000000000002e4 $d
  D:\Temp\ccohqSTj.s:1805   .text.fill_normal:00000000000002e8 $t
  D:\Temp\ccohqSTj.s:2462   .text.map_normal:0000000000000000 $t
  D:\Temp\ccohqSTj.s:2468   .text.map_normal:0000000000000000 map_normal
  D:\Temp\ccohqSTj.s:3652   .text.fill_blended:0000000000000000 $t
  D:\Temp\ccohqSTj.s:3658   .text.fill_blended:0000000000000000 fill_blended
  D:\Temp\ccohqSTj.s:4036   .text.fill_blended:000000000000017c $d
  D:\Temp\ccohqSTj.s:4042   .text._lv_blend_fill:0000000000000000 $t
  D:\Temp\ccohqSTj.s:4049   .text._lv_blend_fill:0000000000000000 _lv_blend_fill
  D:\Temp\ccohqSTj.s:4284   .text._lv_blend_map:0000000000000000 $t
  D:\Temp\ccohqSTj.s:4291   .text._lv_blend_map:0000000000000000 _lv_blend_map
  D:\Temp\ccohqSTj.s:4534   .bss.blend_buf:0000000000000000 $d
  D:\Temp\ccohqSTj.s:4538   .bss.blend_buf:0000000000000000 blend_buf

UNDEFINED SYMBOLS
_lv_refr_get_disp_refreshing
lv_area_get_size
lv_color_fill
_lv_memcpy
lv_disp_get_buf
_lv_area_intersect
