ARM GAS  D:\Temp\ccEl19zy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_refr.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_refr_join_area,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	lv_refr_join_area:
  26              	.LFB470:
  27              		.file 1 "lvgl/src/lv_core/lv_refr.c"
   1:lvgl/src/lv_core/lv_refr.c **** /**
   2:lvgl/src/lv_core/lv_refr.c ****  * @file lv_refr.c
   3:lvgl/src/lv_core/lv_refr.c ****  *
   4:lvgl/src/lv_core/lv_refr.c ****  */
   5:lvgl/src/lv_core/lv_refr.c **** 
   6:lvgl/src/lv_core/lv_refr.c **** /*********************
   7:lvgl/src/lv_core/lv_refr.c ****  *      INCLUDES
   8:lvgl/src/lv_core/lv_refr.c ****  *********************/
   9:lvgl/src/lv_core/lv_refr.c **** #include <stddef.h>
  10:lvgl/src/lv_core/lv_refr.c **** #include "lv_refr.h"
  11:lvgl/src/lv_core/lv_refr.c **** #include "lv_disp.h"
  12:lvgl/src/lv_core/lv_refr.c **** #include "../lv_hal/lv_hal_tick.h"
  13:lvgl/src/lv_core/lv_refr.c **** #include "../lv_hal/lv_hal_disp.h"
  14:lvgl/src/lv_core/lv_refr.c **** #include "../lv_misc/lv_task.h"
  15:lvgl/src/lv_core/lv_refr.c **** #include "../lv_misc/lv_mem.h"
  16:lvgl/src/lv_core/lv_refr.c **** #include "../lv_misc/lv_math.h"
  17:lvgl/src/lv_core/lv_refr.c **** #include "../lv_misc/lv_gc.h"
  18:lvgl/src/lv_core/lv_refr.c **** #include "../lv_draw/lv_draw.h"
  19:lvgl/src/lv_core/lv_refr.c **** #include "../lv_font/lv_font_fmt_txt.h"
  20:lvgl/src/lv_core/lv_refr.c **** #include "../lv_gpu/lv_gpu_stm32_dma2d.h"
  21:lvgl/src/lv_core/lv_refr.c **** 
  22:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_PERF_MONITOR
  23:lvgl/src/lv_core/lv_refr.c ****     #include "../lv_widgets/lv_label.h"
  24:lvgl/src/lv_core/lv_refr.c **** #endif
  25:lvgl/src/lv_core/lv_refr.c **** 
  26:lvgl/src/lv_core/lv_refr.c **** /*********************
  27:lvgl/src/lv_core/lv_refr.c ****  *      DEFINES
  28:lvgl/src/lv_core/lv_refr.c ****  *********************/
  29:lvgl/src/lv_core/lv_refr.c **** /* Draw translucent random colored areas on the invalidated (redrawn) areas*/
  30:lvgl/src/lv_core/lv_refr.c **** #define MASK_AREA_DEBUG 0
  31:lvgl/src/lv_core/lv_refr.c **** 
ARM GAS  D:\Temp\ccEl19zy.s 			page 2


  32:lvgl/src/lv_core/lv_refr.c **** /**********************
  33:lvgl/src/lv_core/lv_refr.c ****  *      TYPEDEFS
  34:lvgl/src/lv_core/lv_refr.c ****  **********************/
  35:lvgl/src/lv_core/lv_refr.c **** 
  36:lvgl/src/lv_core/lv_refr.c **** /**********************
  37:lvgl/src/lv_core/lv_refr.c ****  *  STATIC PROTOTYPES
  38:lvgl/src/lv_core/lv_refr.c ****  **********************/
  39:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_join_area(void);
  40:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_areas(void);
  41:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_area(const lv_area_t * area_p);
  42:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_area_part(const lv_area_t * area_p);
  43:lvgl/src/lv_core/lv_refr.c **** static lv_obj_t * lv_refr_get_top_obj(const lv_area_t * area_p, lv_obj_t * obj);
  44:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_obj_and_children(lv_obj_t * top_p, const lv_area_t * mask_p);
  45:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_obj(lv_obj_t * obj, const lv_area_t * mask_ori_p);
  46:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_vdb_flush(void);
  47:lvgl/src/lv_core/lv_refr.c **** 
  48:lvgl/src/lv_core/lv_refr.c **** /**********************
  49:lvgl/src/lv_core/lv_refr.c ****  *  STATIC VARIABLES
  50:lvgl/src/lv_core/lv_refr.c ****  **********************/
  51:lvgl/src/lv_core/lv_refr.c **** static uint32_t px_num;
  52:lvgl/src/lv_core/lv_refr.c **** static lv_disp_t * disp_refr; /*Display being refreshed*/
  53:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_PERF_MONITOR
  54:lvgl/src/lv_core/lv_refr.c ****     static uint32_t fps_sum_cnt;
  55:lvgl/src/lv_core/lv_refr.c ****     static uint32_t fps_sum_all;
  56:lvgl/src/lv_core/lv_refr.c **** #endif
  57:lvgl/src/lv_core/lv_refr.c **** 
  58:lvgl/src/lv_core/lv_refr.c **** /**********************
  59:lvgl/src/lv_core/lv_refr.c ****  *      MACROS
  60:lvgl/src/lv_core/lv_refr.c ****  **********************/
  61:lvgl/src/lv_core/lv_refr.c **** 
  62:lvgl/src/lv_core/lv_refr.c **** /**********************
  63:lvgl/src/lv_core/lv_refr.c ****  *   GLOBAL FUNCTIONS
  64:lvgl/src/lv_core/lv_refr.c ****  **********************/
  65:lvgl/src/lv_core/lv_refr.c **** 
  66:lvgl/src/lv_core/lv_refr.c **** /**
  67:lvgl/src/lv_core/lv_refr.c ****  * Initialize the screen refresh subsystem
  68:lvgl/src/lv_core/lv_refr.c ****  */
  69:lvgl/src/lv_core/lv_refr.c **** void _lv_refr_init(void)
  70:lvgl/src/lv_core/lv_refr.c **** {
  71:lvgl/src/lv_core/lv_refr.c ****     /*Nothing to do*/
  72:lvgl/src/lv_core/lv_refr.c **** }
  73:lvgl/src/lv_core/lv_refr.c **** 
  74:lvgl/src/lv_core/lv_refr.c **** /**
  75:lvgl/src/lv_core/lv_refr.c ****  * Redraw the invalidated areas now.
  76:lvgl/src/lv_core/lv_refr.c ****  * Normally the redrawing is periodically executed in `lv_task_handler` but a long blocking process
  77:lvgl/src/lv_core/lv_refr.c ****  * can prevent the call of `lv_task_handler`. In this case if the GUI is updated in the process
  78:lvgl/src/lv_core/lv_refr.c ****  * (e.g. progress bar) this function can be called when the screen should be updated.
  79:lvgl/src/lv_core/lv_refr.c ****  * @param disp pointer to display to refresh. NULL to refresh all displays.
  80:lvgl/src/lv_core/lv_refr.c ****  */
  81:lvgl/src/lv_core/lv_refr.c **** void lv_refr_now(lv_disp_t * disp)
  82:lvgl/src/lv_core/lv_refr.c **** {
  83:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_ANIMATION
  84:lvgl/src/lv_core/lv_refr.c ****     lv_anim_refr_now();
  85:lvgl/src/lv_core/lv_refr.c **** #endif
  86:lvgl/src/lv_core/lv_refr.c **** 
  87:lvgl/src/lv_core/lv_refr.c ****     if(disp) {
  88:lvgl/src/lv_core/lv_refr.c ****         _lv_disp_refr_task(disp->refr_task);
ARM GAS  D:\Temp\ccEl19zy.s 			page 3


  89:lvgl/src/lv_core/lv_refr.c ****     }
  90:lvgl/src/lv_core/lv_refr.c ****     else {
  91:lvgl/src/lv_core/lv_refr.c ****         lv_disp_t * d;
  92:lvgl/src/lv_core/lv_refr.c ****         d = lv_disp_get_next(NULL);
  93:lvgl/src/lv_core/lv_refr.c ****         while(d) {
  94:lvgl/src/lv_core/lv_refr.c ****             _lv_disp_refr_task(d->refr_task);
  95:lvgl/src/lv_core/lv_refr.c ****             d = lv_disp_get_next(d);
  96:lvgl/src/lv_core/lv_refr.c ****         }
  97:lvgl/src/lv_core/lv_refr.c ****     }
  98:lvgl/src/lv_core/lv_refr.c **** }
  99:lvgl/src/lv_core/lv_refr.c **** 
 100:lvgl/src/lv_core/lv_refr.c **** /**
 101:lvgl/src/lv_core/lv_refr.c ****  * Invalidate an area on display to redraw it
 102:lvgl/src/lv_core/lv_refr.c ****  * @param area_p pointer to area which should be invalidated (NULL: delete the invalidated areas)
 103:lvgl/src/lv_core/lv_refr.c ****  * @param disp pointer to display where the area should be invalidated (NULL can be used if there i
 104:lvgl/src/lv_core/lv_refr.c ****  * only one display)
 105:lvgl/src/lv_core/lv_refr.c ****  */
 106:lvgl/src/lv_core/lv_refr.c **** void _lv_inv_area(lv_disp_t * disp, const lv_area_t * area_p)
 107:lvgl/src/lv_core/lv_refr.c **** {
 108:lvgl/src/lv_core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 109:lvgl/src/lv_core/lv_refr.c ****     if(!disp) return;
 110:lvgl/src/lv_core/lv_refr.c **** 
 111:lvgl/src/lv_core/lv_refr.c ****     /*Clear the invalidate buffer if the parameter is NULL*/
 112:lvgl/src/lv_core/lv_refr.c ****     if(area_p == NULL) {
 113:lvgl/src/lv_core/lv_refr.c ****         disp->inv_p = 0;
 114:lvgl/src/lv_core/lv_refr.c ****         return;
 115:lvgl/src/lv_core/lv_refr.c ****     }
 116:lvgl/src/lv_core/lv_refr.c **** 
 117:lvgl/src/lv_core/lv_refr.c ****     lv_area_t scr_area;
 118:lvgl/src/lv_core/lv_refr.c ****     scr_area.x1 = 0;
 119:lvgl/src/lv_core/lv_refr.c ****     scr_area.y1 = 0;
 120:lvgl/src/lv_core/lv_refr.c ****     scr_area.x2 = lv_disp_get_hor_res(disp) - 1;
 121:lvgl/src/lv_core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 122:lvgl/src/lv_core/lv_refr.c **** 
 123:lvgl/src/lv_core/lv_refr.c ****     lv_area_t com_area;
 124:lvgl/src/lv_core/lv_refr.c ****     bool suc;
 125:lvgl/src/lv_core/lv_refr.c **** 
 126:lvgl/src/lv_core/lv_refr.c ****     suc = _lv_area_intersect(&com_area, area_p, &scr_area);
 127:lvgl/src/lv_core/lv_refr.c **** 
 128:lvgl/src/lv_core/lv_refr.c ****     /*The area is truncated to the screen*/
 129:lvgl/src/lv_core/lv_refr.c ****     if(suc != false) {
 130:lvgl/src/lv_core/lv_refr.c ****         if(disp->driver.rounder_cb) disp->driver.rounder_cb(&disp->driver, &com_area);
 131:lvgl/src/lv_core/lv_refr.c **** 
 132:lvgl/src/lv_core/lv_refr.c ****         /*Save only if this area is not in one of the saved areas*/
 133:lvgl/src/lv_core/lv_refr.c ****         uint16_t i;
 134:lvgl/src/lv_core/lv_refr.c ****         for(i = 0; i < disp->inv_p; i++) {
 135:lvgl/src/lv_core/lv_refr.c ****             if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 136:lvgl/src/lv_core/lv_refr.c ****         }
 137:lvgl/src/lv_core/lv_refr.c **** 
 138:lvgl/src/lv_core/lv_refr.c ****         /*Save the area*/
 139:lvgl/src/lv_core/lv_refr.c ****         if(disp->inv_p < LV_INV_BUF_SIZE) {
 140:lvgl/src/lv_core/lv_refr.c ****             lv_area_copy(&disp->inv_areas[disp->inv_p], &com_area);
 141:lvgl/src/lv_core/lv_refr.c ****         }
 142:lvgl/src/lv_core/lv_refr.c ****         else {   /*If no place for the area add the screen*/
 143:lvgl/src/lv_core/lv_refr.c ****             disp->inv_p = 0;
 144:lvgl/src/lv_core/lv_refr.c ****             lv_area_copy(&disp->inv_areas[disp->inv_p], &scr_area);
 145:lvgl/src/lv_core/lv_refr.c ****         }
ARM GAS  D:\Temp\ccEl19zy.s 			page 4


 146:lvgl/src/lv_core/lv_refr.c ****         disp->inv_p++;
 147:lvgl/src/lv_core/lv_refr.c ****         lv_task_set_prio(disp->refr_task, LV_REFR_TASK_PRIO);
 148:lvgl/src/lv_core/lv_refr.c ****     }
 149:lvgl/src/lv_core/lv_refr.c **** }
 150:lvgl/src/lv_core/lv_refr.c **** 
 151:lvgl/src/lv_core/lv_refr.c **** /**
 152:lvgl/src/lv_core/lv_refr.c ****  * Get the display which is being refreshed
 153:lvgl/src/lv_core/lv_refr.c ****  * @return the display being refreshed
 154:lvgl/src/lv_core/lv_refr.c ****  */
 155:lvgl/src/lv_core/lv_refr.c **** lv_disp_t * _lv_refr_get_disp_refreshing(void)
 156:lvgl/src/lv_core/lv_refr.c **** {
 157:lvgl/src/lv_core/lv_refr.c ****     return disp_refr;
 158:lvgl/src/lv_core/lv_refr.c **** }
 159:lvgl/src/lv_core/lv_refr.c **** 
 160:lvgl/src/lv_core/lv_refr.c **** /**
 161:lvgl/src/lv_core/lv_refr.c ****  * Set the display which is being refreshed.
 162:lvgl/src/lv_core/lv_refr.c ****  * It shouldn't be used directly by the user.
 163:lvgl/src/lv_core/lv_refr.c ****  * It can be used to trick the drawing functions about there is an active display.
 164:lvgl/src/lv_core/lv_refr.c ****  * @param the display being refreshed
 165:lvgl/src/lv_core/lv_refr.c ****  */
 166:lvgl/src/lv_core/lv_refr.c **** void _lv_refr_set_disp_refreshing(lv_disp_t * disp)
 167:lvgl/src/lv_core/lv_refr.c **** {
 168:lvgl/src/lv_core/lv_refr.c ****     disp_refr = disp;
 169:lvgl/src/lv_core/lv_refr.c **** }
 170:lvgl/src/lv_core/lv_refr.c **** 
 171:lvgl/src/lv_core/lv_refr.c **** /**
 172:lvgl/src/lv_core/lv_refr.c ****  * Called periodically to handle the refreshing
 173:lvgl/src/lv_core/lv_refr.c ****  * @param task pointer to the task itself
 174:lvgl/src/lv_core/lv_refr.c ****  */
 175:lvgl/src/lv_core/lv_refr.c **** void _lv_disp_refr_task(lv_task_t * task)
 176:lvgl/src/lv_core/lv_refr.c **** {
 177:lvgl/src/lv_core/lv_refr.c ****     LV_LOG_TRACE("lv_refr_task: started");
 178:lvgl/src/lv_core/lv_refr.c **** 
 179:lvgl/src/lv_core/lv_refr.c ****     uint32_t start = lv_tick_get();
 180:lvgl/src/lv_core/lv_refr.c ****     uint32_t elaps = 0;
 181:lvgl/src/lv_core/lv_refr.c **** 
 182:lvgl/src/lv_core/lv_refr.c ****     disp_refr = task->user_data;
 183:lvgl/src/lv_core/lv_refr.c **** 
 184:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_PERF_MONITOR == 0
 185:lvgl/src/lv_core/lv_refr.c ****     /* Ensure the task does not run again automatically.
 186:lvgl/src/lv_core/lv_refr.c ****      * This is done before refreshing in case refreshing invalidates something else.
 187:lvgl/src/lv_core/lv_refr.c ****      */
 188:lvgl/src/lv_core/lv_refr.c ****     lv_task_set_prio(task, LV_TASK_PRIO_OFF);
 189:lvgl/src/lv_core/lv_refr.c **** #endif
 190:lvgl/src/lv_core/lv_refr.c **** 
 191:lvgl/src/lv_core/lv_refr.c ****     /*Do nothing if there is no active screen*/
 192:lvgl/src/lv_core/lv_refr.c ****     if(disp_refr->act_scr == NULL) {
 193:lvgl/src/lv_core/lv_refr.c ****         disp_refr->inv_p = 0;
 194:lvgl/src/lv_core/lv_refr.c ****         return;
 195:lvgl/src/lv_core/lv_refr.c ****     }
 196:lvgl/src/lv_core/lv_refr.c **** 
 197:lvgl/src/lv_core/lv_refr.c ****     lv_refr_join_area();
 198:lvgl/src/lv_core/lv_refr.c **** 
 199:lvgl/src/lv_core/lv_refr.c ****     lv_refr_areas();
 200:lvgl/src/lv_core/lv_refr.c **** 
 201:lvgl/src/lv_core/lv_refr.c ****     /*If refresh happened ...*/
 202:lvgl/src/lv_core/lv_refr.c ****     if(disp_refr->inv_p != 0) {
ARM GAS  D:\Temp\ccEl19zy.s 			page 5


 203:lvgl/src/lv_core/lv_refr.c ****         /* In true double buffered mode copy the refreshed areas to the new VDB to keep it up to da
 204:lvgl/src/lv_core/lv_refr.c ****          * With set_px_cb we don't know anything about the buffer (even it's size) so skip copying.
 205:lvgl/src/lv_core/lv_refr.c ****         if(lv_disp_is_true_double_buf(disp_refr)) {
 206:lvgl/src/lv_core/lv_refr.c ****             if(disp_refr->driver.set_px_cb) {
 207:lvgl/src/lv_core/lv_refr.c ****                 LV_LOG_WARN("Can't handle 2 screen sized buffers with set_px_cb. Display is not ref
 208:lvgl/src/lv_core/lv_refr.c ****             }
 209:lvgl/src/lv_core/lv_refr.c ****             else {
 210:lvgl/src/lv_core/lv_refr.c ****                 lv_disp_buf_t * vdb = lv_disp_get_buf(disp_refr);
 211:lvgl/src/lv_core/lv_refr.c **** 
 212:lvgl/src/lv_core/lv_refr.c ****                 /*Flush the content of the VDB*/
 213:lvgl/src/lv_core/lv_refr.c ****                 lv_refr_vdb_flush();
 214:lvgl/src/lv_core/lv_refr.c **** 
 215:lvgl/src/lv_core/lv_refr.c ****                 /* With true double buffering the flushing should be only the address change of the
 216:lvgl/src/lv_core/lv_refr.c ****                  * current frame buffer. Wait until the address change is ready and copy the change
 217:lvgl/src/lv_core/lv_refr.c ****                  * content to the other frame buffer (new active VDB) to keep the buffers synchroni
 218:lvgl/src/lv_core/lv_refr.c ****                 while(vdb->flushing);
 219:lvgl/src/lv_core/lv_refr.c **** 
 220:lvgl/src/lv_core/lv_refr.c ****                 lv_color_t * copy_buf = NULL;
 221:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_GPU_STM32_DMA2D
 222:lvgl/src/lv_core/lv_refr.c ****                 LV_UNUSED(copy_buf);
 223:lvgl/src/lv_core/lv_refr.c **** #else
 224:lvgl/src/lv_core/lv_refr.c ****                 copy_buf = _lv_mem_buf_get(disp_refr->driver.hor_res * sizeof(lv_color_t));
 225:lvgl/src/lv_core/lv_refr.c **** #endif
 226:lvgl/src/lv_core/lv_refr.c **** 
 227:lvgl/src/lv_core/lv_refr.c ****                 uint8_t * buf_act = (uint8_t *)vdb->buf_act;
 228:lvgl/src/lv_core/lv_refr.c ****                 uint8_t * buf_ina = (uint8_t *)vdb->buf_act == vdb->buf1 ? vdb->buf2 : vdb->buf1;
 229:lvgl/src/lv_core/lv_refr.c **** 
 230:lvgl/src/lv_core/lv_refr.c ****                 lv_coord_t hres = lv_disp_get_hor_res(disp_refr);
 231:lvgl/src/lv_core/lv_refr.c ****                 uint16_t a;
 232:lvgl/src/lv_core/lv_refr.c ****                 for(a = 0; a < disp_refr->inv_p; a++) {
 233:lvgl/src/lv_core/lv_refr.c ****                     if(disp_refr->inv_area_joined[a] == 0) {
 234:lvgl/src/lv_core/lv_refr.c ****                         uint32_t start_offs =
 235:lvgl/src/lv_core/lv_refr.c ****                             (hres * disp_refr->inv_areas[a].y1 + disp_refr->inv_areas[a].x1) * size
 236:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_GPU_STM32_DMA2D
 237:lvgl/src/lv_core/lv_refr.c ****                         lv_gpu_stm32_dma2d_copy((lv_color_t *)(buf_act + start_offs), disp_refr->dr
 238:lvgl/src/lv_core/lv_refr.c ****                                                 (lv_color_t *)(buf_ina + start_offs), disp_refr->dr
 239:lvgl/src/lv_core/lv_refr.c ****                                                 lv_area_get_width(&disp_refr->inv_areas[a]),
 240:lvgl/src/lv_core/lv_refr.c ****                                                 lv_area_get_height(&disp_refr->inv_areas[a]));
 241:lvgl/src/lv_core/lv_refr.c **** #else
 242:lvgl/src/lv_core/lv_refr.c **** 
 243:lvgl/src/lv_core/lv_refr.c ****                         lv_coord_t y;
 244:lvgl/src/lv_core/lv_refr.c ****                         uint32_t line_length = lv_area_get_width(&disp_refr->inv_areas[a]) * sizeof
 245:lvgl/src/lv_core/lv_refr.c **** 
 246:lvgl/src/lv_core/lv_refr.c ****                         for(y = disp_refr->inv_areas[a].y1; y <= disp_refr->inv_areas[a].y2; y++) {
 247:lvgl/src/lv_core/lv_refr.c ****                             /* The frame buffer is probably in an external RAM where sequential acc
 248:lvgl/src/lv_core/lv_refr.c ****                              * So first copy a line into a buffer and write it back the ext. RAM */
 249:lvgl/src/lv_core/lv_refr.c ****                             _lv_memcpy(copy_buf, buf_ina + start_offs, line_length);
 250:lvgl/src/lv_core/lv_refr.c ****                             _lv_memcpy(buf_act + start_offs, copy_buf, line_length);
 251:lvgl/src/lv_core/lv_refr.c ****                             start_offs += hres * sizeof(lv_color_t);
 252:lvgl/src/lv_core/lv_refr.c ****                         }
 253:lvgl/src/lv_core/lv_refr.c **** #endif
 254:lvgl/src/lv_core/lv_refr.c ****                     }
 255:lvgl/src/lv_core/lv_refr.c ****                 }
 256:lvgl/src/lv_core/lv_refr.c **** 
 257:lvgl/src/lv_core/lv_refr.c ****                 if(copy_buf) _lv_mem_buf_release(copy_buf);
 258:lvgl/src/lv_core/lv_refr.c ****             }
 259:lvgl/src/lv_core/lv_refr.c ****         } /*End of true double buffer handling*/
ARM GAS  D:\Temp\ccEl19zy.s 			page 6


 260:lvgl/src/lv_core/lv_refr.c **** 
 261:lvgl/src/lv_core/lv_refr.c ****         /*Clean up*/
 262:lvgl/src/lv_core/lv_refr.c ****         _lv_memset_00(disp_refr->inv_areas, sizeof(disp_refr->inv_areas));
 263:lvgl/src/lv_core/lv_refr.c ****         _lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
 264:lvgl/src/lv_core/lv_refr.c ****         disp_refr->inv_p = 0;
 265:lvgl/src/lv_core/lv_refr.c **** 
 266:lvgl/src/lv_core/lv_refr.c ****         elaps = lv_tick_elaps(start);
 267:lvgl/src/lv_core/lv_refr.c ****         /*Call monitor cb if present*/
 268:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->driver.monitor_cb) {
 269:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.monitor_cb(&disp_refr->driver, elaps, px_num);
 270:lvgl/src/lv_core/lv_refr.c ****         }
 271:lvgl/src/lv_core/lv_refr.c ****     }
 272:lvgl/src/lv_core/lv_refr.c **** 
 273:lvgl/src/lv_core/lv_refr.c ****     _lv_mem_buf_free_all();
 274:lvgl/src/lv_core/lv_refr.c ****     _lv_font_clean_up_fmt_txt();
 275:lvgl/src/lv_core/lv_refr.c **** 
 276:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_PERF_MONITOR && LV_USE_LABEL
 277:lvgl/src/lv_core/lv_refr.c ****     static lv_obj_t * perf_label = NULL;
 278:lvgl/src/lv_core/lv_refr.c ****     if(perf_label == NULL) {
 279:lvgl/src/lv_core/lv_refr.c ****         perf_label = lv_label_create(lv_layer_sys(), NULL);
 280:lvgl/src/lv_core/lv_refr.c ****         lv_label_set_align(perf_label, LV_LABEL_ALIGN_RIGHT);
 281:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_bg_opa(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, LV_OPA_COVE
 282:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_bg_color(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, LV_COLOR_
 283:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_text_color(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, LV_COLO
 284:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_pad_top(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, 3);
 285:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_pad_bottom(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, 3);
 286:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_pad_left(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, 3);
 287:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_pad_right(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, 3);
 288:lvgl/src/lv_core/lv_refr.c ****         lv_label_set_text(perf_label, "?");
 289:lvgl/src/lv_core/lv_refr.c ****         lv_obj_align(perf_label, NULL, LV_ALIGN_IN_BOTTOM_RIGHT, 0, 0);
 290:lvgl/src/lv_core/lv_refr.c ****     }
 291:lvgl/src/lv_core/lv_refr.c **** 
 292:lvgl/src/lv_core/lv_refr.c ****     static uint32_t perf_last_time = 0;
 293:lvgl/src/lv_core/lv_refr.c ****     static uint32_t elaps_sum = 0;
 294:lvgl/src/lv_core/lv_refr.c ****     static uint32_t frame_cnt = 0;
 295:lvgl/src/lv_core/lv_refr.c ****     if(lv_tick_elaps(perf_last_time) < 300) {
 296:lvgl/src/lv_core/lv_refr.c ****         if(px_num > 5000) {
 297:lvgl/src/lv_core/lv_refr.c ****             elaps_sum += elaps;
 298:lvgl/src/lv_core/lv_refr.c ****             frame_cnt ++;
 299:lvgl/src/lv_core/lv_refr.c ****         }
 300:lvgl/src/lv_core/lv_refr.c ****     }
 301:lvgl/src/lv_core/lv_refr.c ****     else {
 302:lvgl/src/lv_core/lv_refr.c ****         perf_last_time = lv_tick_get();
 303:lvgl/src/lv_core/lv_refr.c ****         uint32_t fps_limit = 1000 / disp_refr->refr_task->period;
 304:lvgl/src/lv_core/lv_refr.c ****         uint32_t fps;
 305:lvgl/src/lv_core/lv_refr.c **** 
 306:lvgl/src/lv_core/lv_refr.c ****         if(elaps_sum == 0) elaps_sum = 1;
 307:lvgl/src/lv_core/lv_refr.c ****         if(frame_cnt == 0) fps = fps_limit;
 308:lvgl/src/lv_core/lv_refr.c ****         else fps = (1000 * frame_cnt) / elaps_sum;
 309:lvgl/src/lv_core/lv_refr.c ****         elaps_sum = 0;
 310:lvgl/src/lv_core/lv_refr.c ****         frame_cnt = 0;
 311:lvgl/src/lv_core/lv_refr.c ****         if(fps > fps_limit) fps = fps_limit;
 312:lvgl/src/lv_core/lv_refr.c **** 
 313:lvgl/src/lv_core/lv_refr.c ****         fps_sum_all += fps;
 314:lvgl/src/lv_core/lv_refr.c ****         fps_sum_cnt ++;
 315:lvgl/src/lv_core/lv_refr.c ****         uint32_t cpu = 100 - lv_task_get_idle();
 316:lvgl/src/lv_core/lv_refr.c ****         lv_label_set_text_fmt(perf_label, "%d FPS\n%d%% CPU", fps, cpu);
ARM GAS  D:\Temp\ccEl19zy.s 			page 7


 317:lvgl/src/lv_core/lv_refr.c ****         lv_obj_align(perf_label, NULL, LV_ALIGN_IN_BOTTOM_RIGHT, 0, 0);
 318:lvgl/src/lv_core/lv_refr.c ****     }
 319:lvgl/src/lv_core/lv_refr.c **** #endif
 320:lvgl/src/lv_core/lv_refr.c **** 
 321:lvgl/src/lv_core/lv_refr.c ****     LV_LOG_TRACE("lv_refr_task: ready");
 322:lvgl/src/lv_core/lv_refr.c **** }
 323:lvgl/src/lv_core/lv_refr.c **** 
 324:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_PERF_MONITOR
 325:lvgl/src/lv_core/lv_refr.c **** uint32_t lv_refr_get_fps_avg(void)
 326:lvgl/src/lv_core/lv_refr.c **** {
 327:lvgl/src/lv_core/lv_refr.c ****     return fps_sum_all / fps_sum_cnt;
 328:lvgl/src/lv_core/lv_refr.c **** }
 329:lvgl/src/lv_core/lv_refr.c **** #endif
 330:lvgl/src/lv_core/lv_refr.c **** 
 331:lvgl/src/lv_core/lv_refr.c **** /**********************
 332:lvgl/src/lv_core/lv_refr.c ****  *   STATIC FUNCTIONS
 333:lvgl/src/lv_core/lv_refr.c ****  **********************/
 334:lvgl/src/lv_core/lv_refr.c **** 
 335:lvgl/src/lv_core/lv_refr.c **** /**
 336:lvgl/src/lv_core/lv_refr.c ****  * Join the areas which has got common parts
 337:lvgl/src/lv_core/lv_refr.c ****  */
 338:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_join_area(void)
 339:lvgl/src/lv_core/lv_refr.c **** {
  28              		.loc 1 339 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 28
  35              		.cfi_offset 4, -28
  36              		.cfi_offset 5, -24
  37              		.cfi_offset 6, -20
  38              		.cfi_offset 7, -16
  39              		.cfi_offset 8, -12
  40              		.cfi_offset 9, -8
  41              		.cfi_offset 14, -4
  42 0004 83B0     		sub	sp, sp, #12
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 40
 340:lvgl/src/lv_core/lv_refr.c ****     uint32_t join_from;
  45              		.loc 1 340 5 view .LVU1
 341:lvgl/src/lv_core/lv_refr.c ****     uint32_t join_in;
  46              		.loc 1 341 5 view .LVU2
 342:lvgl/src/lv_core/lv_refr.c ****     lv_area_t joined_area;
  47              		.loc 1 342 5 view .LVU3
 343:lvgl/src/lv_core/lv_refr.c ****     for(join_in = 0; join_in < disp_refr->inv_p; join_in++) {
  48              		.loc 1 343 5 view .LVU4
  49              	.LVL0:
  50              		.loc 1 343 17 is_stmt 0 view .LVU5
  51 0006 0025     		movs	r5, #0
  52              		.loc 1 343 5 view .LVU6
  53 0008 58E0     		b	.L2
  54              	.LVL1:
  55              	.L11:
  56              	.LBB50:
  57              	.LBB51:
ARM GAS  D:\Temp\ccEl19zy.s 			page 8


  58              	.LBB52:
  59              		.file 2 "lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h"
   1:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
   2:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @file lv_mem.h
   3:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  *
   4:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
   5:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
   6:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #ifndef LV_MEM_H
   7:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #define LV_MEM_H
   8:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
   9:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #ifdef __cplusplus
  10:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** extern "C" {
  11:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #endif
  12:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  13:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /*********************
  14:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  *      INCLUDES
  15:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  *********************/
  16:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  18:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #include <stdint.h>
  19:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #include <stddef.h>
  20:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #include "lv_log.h"
  21:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #include "lv_types.h"
  22:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  23:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
  24:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #include <string.h>
  25:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #endif
  26:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  27:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /*********************
  28:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  *      DEFINES
  29:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  *********************/
  30:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  31:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #ifndef LV_MEM_BUF_MAX_NUM
  32:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #define LV_MEM_BUF_MAX_NUM    16
  33:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #endif
  34:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  35:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**********************
  36:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  *      TYPEDEFS
  37:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  **********************/
  38:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  39:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
  40:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Heap information structure.
  41:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
  42:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** typedef struct {
  43:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     uint32_t total_size; /**< Total heap size */
  44:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     uint32_t free_cnt;
  45:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     uint32_t free_size; /**< Size of available memory */
  46:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     uint32_t free_biggest_size;
  47:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     uint32_t used_cnt;
  48:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used */
  49:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     uint8_t used_pct; /**< Percentage used */
  50:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation */
  51:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** } lv_mem_monitor_t;
  52:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  53:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** typedef struct {
  54:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     void * p;
  55:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     uint16_t size;
ARM GAS  D:\Temp\ccEl19zy.s 			page 9


  56:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     uint8_t used    : 1;
  57:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** } lv_mem_buf_t;
  58:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  59:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  60:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** extern lv_mem_buf_arr_t _lv_mem_buf;
  61:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  62:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**********************
  63:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * GLOBAL PROTOTYPES
  64:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  **********************/
  65:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  66:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
  67:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  68:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
  69:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** void _lv_mem_init(void);
  70:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  71:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
  72:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
  73:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  74:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
  75:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** void _lv_mem_deinit(void);
  76:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  77:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
  78:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Allocate a memory dynamically
  79:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param size size of the memory to allocate in bytes
  80:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @return pointer to the allocated memory
  81:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
  82:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** void * lv_mem_alloc(size_t size);
  83:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  84:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
  85:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Free an allocated data
  86:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory
  87:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
  88:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** void lv_mem_free(const void * data);
  89:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  90:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
  91:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  92:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory.
  93:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Its content will be copied to the new memory block and freed
  94:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param new_size the desired new size in byte
  95:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @return pointer to the new memory
  96:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
  97:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  98:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
  99:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 100:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Join the adjacent free memory blocks
 101:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 102:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** void lv_mem_defrag(void);
 103:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 104:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 105:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  *
 106:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @return
 107:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 108:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** lv_res_t lv_mem_test(void);
 109:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 110:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 111:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Give information about the work memory of dynamic allocation
 112:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param mon_p pointer to a dm_mon_p variable,
ARM GAS  D:\Temp\ccEl19zy.s 			page 10


 113:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  *              the result of the analysis will be stored here
 114:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 115:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 116:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 117:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 118:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Give the size of an allocated memory
 119:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory
 120:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @return the size of data memory in bytes
 121:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 122:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** uint32_t _lv_mem_get_size(const void * data);
 123:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 124:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 125:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Get a temporal buffer with the given size.
 126:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param size the required size
 127:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 128:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** void * _lv_mem_buf_get(uint32_t size);
 129:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 130:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 131:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Release a memory buffer
 132:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param p buffer to release
 133:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 134:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** void _lv_mem_buf_release(void * p);
 135:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 136:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 137:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Free all memory buffers
 138:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 139:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** void _lv_mem_buf_free_all(void);
 140:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 141:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** //! @cond Doxygen_Suppress
 142:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 143:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 144:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 145:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 146:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Wrapper for the standard memcpy
 147:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 148:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 149:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 150:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 151:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** static inline void * _lv_memcpy(void * dst, const void * src, size_t len)
 152:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** {
 153:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     return memcpy(dst, src, len);
 154:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** }
 155:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 156:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 157:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Wrapper for the standard memcpy
 158:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 159:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 160:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 161:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 162:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** static inline void * _lv_memcpy_small(void * dst, const void * src, size_t len)
 163:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** {
 164:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     return memcpy(dst, src, len);
 165:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** }
 166:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 167:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 168:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Wrapper for the standard memset
 169:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
ARM GAS  D:\Temp\ccEl19zy.s 			page 11


 170:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param v value to set [0..255]
 171:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param len number of byte to set
 172:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 173:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** static inline void _lv_memset(void * dst, uint8_t v, size_t len)
 174:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** {
 175:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     memset(dst, v, len);
 176:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** }
 177:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 178:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 179:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 180:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 181:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param len number of byte to set
 182:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 183:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** static inline void _lv_memset_00(void * dst, size_t len)
 184:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** {
 185:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     memset(dst, 0x00, len);
 186:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** }
 187:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 188:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 189:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 190:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 191:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param len number of byte to set
 192:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 193:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** static inline void _lv_memset_ff(void * dst, size_t len)
 194:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** {
 195:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     memset(dst, 0xFF, len);
 196:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** }
 197:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 198:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** #else
 199:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 200:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 201:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 202:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 203:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 204:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 205:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * _lv_memcpy(void * dst, const void * src, size_t len);
 206:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 207:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** /**
 208:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 209:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 210:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 211:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 212:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****  */
 213:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * _lv_memcpy_small(void * dst, const void * src, size_t le
 214:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** {
 215:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 216:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 217:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 218:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     while(len) {
 219:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         *d8 = *s8;
 220:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         d8++;
 221:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         s8++;
 222:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         len--;
 223:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     }
 224:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 225:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     return dst;
  60              		.loc 2 225 5 is_stmt 1 view .LVU7
ARM GAS  D:\Temp\ccEl19zy.s 			page 12


  61              		.loc 2 225 5 is_stmt 0 view .LVU8
  62              	.LBE52:
  63              	.LBE51:
  64              	.LBE50:
 344:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 345:lvgl/src/lv_core/lv_refr.c **** 
 346:lvgl/src/lv_core/lv_refr.c ****         /*Check all areas to join them in 'join_in'*/
 347:lvgl/src/lv_core/lv_refr.c ****         for(join_from = 0; join_from < disp_refr->inv_p; join_from++) {
 348:lvgl/src/lv_core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 349:lvgl/src/lv_core/lv_refr.c ****             if(disp_refr->inv_area_joined[join_from] != 0 || join_in == join_from) {
 350:lvgl/src/lv_core/lv_refr.c ****                 continue;
 351:lvgl/src/lv_core/lv_refr.c ****             }
 352:lvgl/src/lv_core/lv_refr.c **** 
 353:lvgl/src/lv_core/lv_refr.c ****             /*Check if the areas are on each other*/
 354:lvgl/src/lv_core/lv_refr.c ****             if(_lv_area_is_on(&disp_refr->inv_areas[join_in], &disp_refr->inv_areas[join_from]) == 
 355:lvgl/src/lv_core/lv_refr.c ****                 continue;
 356:lvgl/src/lv_core/lv_refr.c ****             }
 357:lvgl/src/lv_core/lv_refr.c **** 
 358:lvgl/src/lv_core/lv_refr.c ****             _lv_area_join(&joined_area, &disp_refr->inv_areas[join_in], &disp_refr->inv_areas[join_
 359:lvgl/src/lv_core/lv_refr.c **** 
 360:lvgl/src/lv_core/lv_refr.c ****             /*Join two area only if the joined area size is smaller*/
 361:lvgl/src/lv_core/lv_refr.c ****             if(lv_area_get_size(&joined_area) < (lv_area_get_size(&disp_refr->inv_areas[join_in]) +
 362:lvgl/src/lv_core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 363:lvgl/src/lv_core/lv_refr.c ****                 lv_area_copy(&disp_refr->inv_areas[join_in], &joined_area);
 364:lvgl/src/lv_core/lv_refr.c **** 
 365:lvgl/src/lv_core/lv_refr.c ****                 /*Mark 'join_form' is joined into 'join_in'*/
 366:lvgl/src/lv_core/lv_refr.c ****                 disp_refr->inv_area_joined[join_from] = 1;
  65              		.loc 1 366 17 is_stmt 1 view .LVU9
  66              		.loc 1 366 55 is_stmt 0 view .LVU10
  67 000a 2644     		add	r6, r6, r4
  68 000c 0123     		movs	r3, #1
  69 000e 86F86231 		strb	r3, [r6, #354]
  70              	.L5:
 347:lvgl/src/lv_core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
  71              		.loc 1 347 67 discriminator 2 view .LVU11
  72 0012 0134     		adds	r4, r4, #1
  73              	.LVL2:
  74              	.L4:
 347:lvgl/src/lv_core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
  75              		.loc 1 347 49 discriminator 1 view .LVU12
  76 0014 324B     		ldr	r3, .L13
  77 0016 1968     		ldr	r1, [r3]
  78 0018 B1F88231 		ldrh	r3, [r1, #386]
  79 001c C3F30903 		ubfx	r3, r3, #0, #10
 347:lvgl/src/lv_core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
  80              		.loc 1 347 9 discriminator 1 view .LVU13
  81 0020 A342     		cmp	r3, r4
  82 0022 4AD9     		bls	.L3
 349:lvgl/src/lv_core/lv_refr.c ****                 continue;
  83              		.loc 1 349 13 is_stmt 1 view .LVU14
 349:lvgl/src/lv_core/lv_refr.c ****                 continue;
  84              		.loc 1 349 42 is_stmt 0 view .LVU15
  85 0024 0B19     		adds	r3, r1, r4
  86 0026 93F86231 		ldrb	r3, [r3, #354]	@ zero_extendqisi2
 349:lvgl/src/lv_core/lv_refr.c ****                 continue;
  87              		.loc 1 349 15 view .LVU16
  88 002a 002B     		cmp	r3, #0
ARM GAS  D:\Temp\ccEl19zy.s 			page 13


  89 002c F1D1     		bne	.L5
 349:lvgl/src/lv_core/lv_refr.c ****                 continue;
  90              		.loc 1 349 59 discriminator 1 view .LVU17
  91 002e AC42     		cmp	r4, r5
  92 0030 EFD0     		beq	.L5
 354:lvgl/src/lv_core/lv_refr.c ****                 continue;
  93              		.loc 1 354 13 is_stmt 1 view .LVU18
 354:lvgl/src/lv_core/lv_refr.c ****                 continue;
  94              		.loc 1 354 31 is_stmt 0 view .LVU19
  95 0032 05F10C00 		add	r0, r5, #12
  96 0036 01EBC000 		add	r0, r1, r0, lsl #3
 354:lvgl/src/lv_core/lv_refr.c ****                 continue;
  97              		.loc 1 354 63 view .LVU20
  98 003a 04F10C03 		add	r3, r4, #12
  99 003e 01EBC301 		add	r1, r1, r3, lsl #3
 354:lvgl/src/lv_core/lv_refr.c ****                 continue;
 100              		.loc 1 354 16 view .LVU21
 101 0042 0231     		adds	r1, r1, #2
 102 0044 0230     		adds	r0, r0, #2
 103 0046 FFF7FEFF 		bl	_lv_area_is_on
 104              	.LVL3:
 354:lvgl/src/lv_core/lv_refr.c ****                 continue;
 105              		.loc 1 354 15 view .LVU22
 106 004a 0028     		cmp	r0, #0
 107 004c E1D0     		beq	.L5
 358:lvgl/src/lv_core/lv_refr.c **** 
 108              		.loc 1 358 13 is_stmt 1 view .LVU23
 358:lvgl/src/lv_core/lv_refr.c **** 
 109              		.loc 1 358 51 is_stmt 0 view .LVU24
 110 004e DFF89080 		ldr	r8, .L13
 111 0052 D8F80020 		ldr	r2, [r8]
 358:lvgl/src/lv_core/lv_refr.c **** 
 112              		.loc 1 358 41 view .LVU25
 113 0056 05F10C07 		add	r7, r5, #12
 114 005a FF00     		lsls	r7, r7, #3
 115 005c D119     		adds	r1, r2, r7
 358:lvgl/src/lv_core/lv_refr.c **** 
 116              		.loc 1 358 73 view .LVU26
 117 005e 04F10C06 		add	r6, r4, #12
 118 0062 F600     		lsls	r6, r6, #3
 119 0064 3244     		add	r2, r2, r6
 358:lvgl/src/lv_core/lv_refr.c **** 
 120              		.loc 1 358 13 view .LVU27
 121 0066 0232     		adds	r2, r2, #2
 122 0068 0231     		adds	r1, r1, #2
 123 006a 6846     		mov	r0, sp
 124 006c FFF7FEFF 		bl	_lv_area_join
 125              	.LVL4:
 361:lvgl/src/lv_core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 126              		.loc 1 361 13 is_stmt 1 view .LVU28
 361:lvgl/src/lv_core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 127              		.loc 1 361 16 is_stmt 0 view .LVU29
 128 0070 6846     		mov	r0, sp
 129 0072 FFF7FEFF 		bl	lv_area_get_size
 130              	.LVL5:
 131 0076 8146     		mov	r9, r0
 361:lvgl/src/lv_core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
ARM GAS  D:\Temp\ccEl19zy.s 			page 14


 132              		.loc 1 361 77 view .LVU30
 133 0078 D8F80000 		ldr	r0, [r8]
 361:lvgl/src/lv_core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 134              		.loc 1 361 67 view .LVU31
 135 007c 3844     		add	r0, r0, r7
 361:lvgl/src/lv_core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 136              		.loc 1 361 50 view .LVU32
 137 007e 0230     		adds	r0, r0, #2
 138 0080 FFF7FEFF 		bl	lv_area_get_size
 139              	.LVL6:
 140 0084 0746     		mov	r7, r0
 362:lvgl/src/lv_core/lv_refr.c ****                 lv_area_copy(&disp_refr->inv_areas[join_in], &joined_area);
 141              		.loc 1 362 77 view .LVU33
 142 0086 D8F80000 		ldr	r0, [r8]
 362:lvgl/src/lv_core/lv_refr.c ****                 lv_area_copy(&disp_refr->inv_areas[join_in], &joined_area);
 143              		.loc 1 362 67 view .LVU34
 144 008a 3044     		add	r0, r0, r6
 362:lvgl/src/lv_core/lv_refr.c ****                 lv_area_copy(&disp_refr->inv_areas[join_in], &joined_area);
 145              		.loc 1 362 50 view .LVU35
 146 008c 0230     		adds	r0, r0, #2
 147 008e FFF7FEFF 		bl	lv_area_get_size
 148              	.LVL7:
 361:lvgl/src/lv_core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 149              		.loc 1 361 99 view .LVU36
 150 0092 3844     		add	r0, r0, r7
 361:lvgl/src/lv_core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 151              		.loc 1 361 15 view .LVU37
 152 0094 8145     		cmp	r9, r0
 153 0096 BCD2     		bcs	.L5
 363:lvgl/src/lv_core/lv_refr.c **** 
 154              		.loc 1 363 17 is_stmt 1 view .LVU38
 363:lvgl/src/lv_core/lv_refr.c **** 
 155              		.loc 1 363 40 is_stmt 0 view .LVU39
 156 0098 D8F80060 		ldr	r6, [r8]
 363:lvgl/src/lv_core/lv_refr.c **** 
 157              		.loc 1 363 17 view .LVU40
 158 009c 05F10C02 		add	r2, r5, #12
 159 00a0 06EBC202 		add	r2, r6, r2, lsl #3
 160 00a4 0232     		adds	r2, r2, #2
 161              	.LVL8:
 162              	.LBB57:
 163              	.LBI50:
 164              		.file 3 "lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h"
   1:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /**
   2:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  *
   4:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  */
   5:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
   6:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
   9:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** extern "C" {
  11:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** #endif
  12:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
  13:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /*********************
  14:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  *      INCLUDES
ARM GAS  D:\Temp\ccEl19zy.s 			page 15


  15:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  *********************/
  16:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** #include <string.h>
  18:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** #include <stdbool.h>
  19:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** #include <stdint.h>
  20:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** #include "lv_mem.h"
  21:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
  22:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /*********************
  23:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  *      DEFINES
  24:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  *********************/
  25:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /*To avoid overflow don't let the max ranges (reduce with 1000) */
  26:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - 1000))
  27:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  28:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
  29:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  30:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  31:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
  32:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /**********************
  33:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  *      TYPEDEFS
  34:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  **********************/
  35:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
  36:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /**
  37:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * Represents a point on the screen.
  38:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  */
  39:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** typedef struct {
  40:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     lv_coord_t x;
  41:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     lv_coord_t y;
  42:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** } lv_point_t;
  43:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
  44:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /** Represents an area of the screen. */
  45:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** typedef struct {
  46:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     lv_coord_t x1;
  47:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     lv_coord_t y1;
  48:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     lv_coord_t x2;
  49:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     lv_coord_t y2;
  50:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** } lv_area_t;
  51:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
  52:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /** Alignments */
  53:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** enum {
  54:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_CENTER = 0,
  55:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_IN_TOP_LEFT,
  56:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_IN_TOP_MID,
  57:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_IN_TOP_RIGHT,
  58:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_IN_BOTTOM_LEFT,
  59:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_IN_BOTTOM_MID,
  60:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_IN_BOTTOM_RIGHT,
  61:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_IN_LEFT_MID,
  62:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_IN_RIGHT_MID,
  63:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
ARM GAS  D:\Temp\ccEl19zy.s 			page 16


  72:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** };
  76:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
  78:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /**********************
  79:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * GLOBAL PROTOTYPES
  80:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  **********************/
  81:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
  82:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /**
  83:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * Initialize an area
  84:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @param area_p pointer to an area
  85:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @param x1 left coordinate of the area
  86:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @param y1 top coordinate of the area
  87:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @param x2 right coordinate of the area
  88:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @param y2 bottom coordinate of the area
  89:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  */
  90:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
  91:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
  92:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /**
  93:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * Copy an area
  94:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @param dest pointer to the destination area
  95:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @param src pointer to the source area
  96:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  */
  97:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 165              		.loc 3 97 20 is_stmt 1 view .LVU41
 166              	.LBE57:
  98:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** {
  99:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     _lv_memcpy_small(dest, src, sizeof(lv_area_t));
 167              		.loc 3 99 5 view .LVU42
 168              	.LBB58:
 169              	.LBB55:
 170              	.LBI51:
 213:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** {
 171              		.loc 2 213 44 view .LVU43
 172              	.LBB53:
 215:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 173              		.loc 2 215 5 view .LVU44
 216:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 174              		.loc 2 216 5 view .LVU45
 218:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         *d8 = *s8;
 175              		.loc 2 218 5 view .LVU46
 216:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 176              		.loc 2 216 21 is_stmt 0 view .LVU47
 177 00a6 6946     		mov	r1, sp
 178              	.LBE53:
 179              	.LBE55:
 180              	.LBE58:
 363:lvgl/src/lv_core/lv_refr.c **** 
 181              		.loc 1 363 17 view .LVU48
 182 00a8 0823     		movs	r3, #8
 183              	.LVL9:
 184              	.L6:
 185              	.LBB59:
 186              	.LBB56:
 187              	.LBB54:
ARM GAS  D:\Temp\ccEl19zy.s 			page 17


 218:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         *d8 = *s8;
 188              		.loc 2 218 10 view .LVU49
 189 00aa 002B     		cmp	r3, #0
 190 00ac ADD0     		beq	.L11
 219:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         d8++;
 191              		.loc 2 219 9 is_stmt 1 view .LVU50
 219:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         d8++;
 192              		.loc 2 219 15 is_stmt 0 view .LVU51
 193 00ae 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 194              	.LVL10:
 219:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         d8++;
 195              		.loc 2 219 13 view .LVU52
 196 00b2 02F8010B 		strb	r0, [r2], #1
 197              	.LVL11:
 220:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         s8++;
 198              		.loc 2 220 9 is_stmt 1 view .LVU53
 221:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         len--;
 199              		.loc 2 221 9 view .LVU54
 222:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     }
 200              		.loc 2 222 9 view .LVU55
 222:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     }
 201              		.loc 2 222 12 is_stmt 0 view .LVU56
 202 00b6 013B     		subs	r3, r3, #1
 203              	.LVL12:
 222:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     }
 204              		.loc 2 222 12 view .LVU57
 205 00b8 F7E7     		b	.L6
 206              	.LVL13:
 207              	.L3:
 222:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     }
 208              		.loc 2 222 12 view .LVU58
 209              	.LBE54:
 210              	.LBE56:
 211              	.LBE59:
 343:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 212              		.loc 1 343 57 discriminator 2 view .LVU59
 213 00ba 0135     		adds	r5, r5, #1
 214              	.LVL14:
 215              	.L2:
 343:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 216              		.loc 1 343 41 discriminator 1 view .LVU60
 217 00bc 084B     		ldr	r3, .L13
 218 00be 1B68     		ldr	r3, [r3]
 219 00c0 B3F88221 		ldrh	r2, [r3, #386]
 220 00c4 C2F30902 		ubfx	r2, r2, #0, #10
 343:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 221              		.loc 1 343 5 discriminator 1 view .LVU61
 222 00c8 AA42     		cmp	r2, r5
 223 00ca 06D9     		bls	.L12
 344:lvgl/src/lv_core/lv_refr.c **** 
 224              		.loc 1 344 9 is_stmt 1 view .LVU62
 344:lvgl/src/lv_core/lv_refr.c **** 
 225              		.loc 1 344 38 is_stmt 0 view .LVU63
 226 00cc 2B44     		add	r3, r3, r5
 227 00ce 93F86231 		ldrb	r3, [r3, #354]	@ zero_extendqisi2
 344:lvgl/src/lv_core/lv_refr.c **** 
 228              		.loc 1 344 11 view .LVU64
ARM GAS  D:\Temp\ccEl19zy.s 			page 18


 229 00d2 002B     		cmp	r3, #0
 230 00d4 F1D1     		bne	.L3
 347:lvgl/src/lv_core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 231              		.loc 1 347 23 view .LVU65
 232 00d6 0024     		movs	r4, #0
 233 00d8 9CE7     		b	.L4
 234              	.L12:
 367:lvgl/src/lv_core/lv_refr.c ****             }
 368:lvgl/src/lv_core/lv_refr.c ****         }
 369:lvgl/src/lv_core/lv_refr.c ****     }
 370:lvgl/src/lv_core/lv_refr.c **** }
 235              		.loc 1 370 1 view .LVU66
 236 00da 03B0     		add	sp, sp, #12
 237              	.LCFI2:
 238              		.cfi_def_cfa_offset 28
 239              		@ sp needed
 240 00dc BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 241              	.LVL15:
 242              	.L14:
 243              		.loc 1 370 1 view .LVU67
 244              		.align	2
 245              	.L13:
 246 00e0 00000000 		.word	.LANCHOR0
 247              		.cfi_endproc
 248              	.LFE470:
 250              		.section	.text.lv_refr_get_top_obj,"ax",%progbits
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	lv_refr_get_top_obj:
 258              	.LVL16:
 259              	.LFB474:
 371:lvgl/src/lv_core/lv_refr.c **** 
 372:lvgl/src/lv_core/lv_refr.c **** /**
 373:lvgl/src/lv_core/lv_refr.c ****  * Refresh the joined areas
 374:lvgl/src/lv_core/lv_refr.c ****  */
 375:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_areas(void)
 376:lvgl/src/lv_core/lv_refr.c **** {
 377:lvgl/src/lv_core/lv_refr.c ****     px_num = 0;
 378:lvgl/src/lv_core/lv_refr.c **** 
 379:lvgl/src/lv_core/lv_refr.c ****     if(disp_refr->inv_p == 0) return;
 380:lvgl/src/lv_core/lv_refr.c **** 
 381:lvgl/src/lv_core/lv_refr.c ****     /*Find the last area which will be drawn*/
 382:lvgl/src/lv_core/lv_refr.c ****     int32_t i;
 383:lvgl/src/lv_core/lv_refr.c ****     int32_t last_i = 0;
 384:lvgl/src/lv_core/lv_refr.c ****     for(i = disp_refr->inv_p - 1; i >= 0; i--) {
 385:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 386:lvgl/src/lv_core/lv_refr.c ****             last_i = i;
 387:lvgl/src/lv_core/lv_refr.c ****             break;
 388:lvgl/src/lv_core/lv_refr.c ****         }
 389:lvgl/src/lv_core/lv_refr.c ****     }
 390:lvgl/src/lv_core/lv_refr.c **** 
 391:lvgl/src/lv_core/lv_refr.c ****     disp_refr->driver.buffer->last_area = 0;
 392:lvgl/src/lv_core/lv_refr.c ****     disp_refr->driver.buffer->last_part = 0;
 393:lvgl/src/lv_core/lv_refr.c **** 
ARM GAS  D:\Temp\ccEl19zy.s 			page 19


 394:lvgl/src/lv_core/lv_refr.c ****     for(i = 0; i < disp_refr->inv_p; i++) {
 395:lvgl/src/lv_core/lv_refr.c ****         /*Refresh the unjoined areas*/
 396:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 397:lvgl/src/lv_core/lv_refr.c **** 
 398:lvgl/src/lv_core/lv_refr.c ****             if(i == last_i) disp_refr->driver.buffer->last_area = 1;
 399:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.buffer->last_part = 0;
 400:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area(&disp_refr->inv_areas[i]);
 401:lvgl/src/lv_core/lv_refr.c **** 
 402:lvgl/src/lv_core/lv_refr.c ****             px_num += lv_area_get_size(&disp_refr->inv_areas[i]);
 403:lvgl/src/lv_core/lv_refr.c ****         }
 404:lvgl/src/lv_core/lv_refr.c ****     }
 405:lvgl/src/lv_core/lv_refr.c **** }
 406:lvgl/src/lv_core/lv_refr.c **** 
 407:lvgl/src/lv_core/lv_refr.c **** /**
 408:lvgl/src/lv_core/lv_refr.c ****  * Refresh an area if there is Virtual Display Buffer
 409:lvgl/src/lv_core/lv_refr.c ****  * @param area_p pointer to an area to refresh
 410:lvgl/src/lv_core/lv_refr.c ****  */
 411:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_area(const lv_area_t * area_p)
 412:lvgl/src/lv_core/lv_refr.c **** {
 413:lvgl/src/lv_core/lv_refr.c ****     /*True double buffering: there are two screen sized buffers. Just redraw directly into a
 414:lvgl/src/lv_core/lv_refr.c ****      * buffer*/
 415:lvgl/src/lv_core/lv_refr.c ****     if(lv_disp_is_true_double_buf(disp_refr)) {
 416:lvgl/src/lv_core/lv_refr.c ****         lv_disp_buf_t * vdb = lv_disp_get_buf(disp_refr);
 417:lvgl/src/lv_core/lv_refr.c ****         vdb->area.x1        = 0;
 418:lvgl/src/lv_core/lv_refr.c ****         vdb->area.x2        = lv_disp_get_hor_res(disp_refr) - 1;
 419:lvgl/src/lv_core/lv_refr.c ****         vdb->area.y1        = 0;
 420:lvgl/src/lv_core/lv_refr.c ****         vdb->area.y2        = lv_disp_get_ver_res(disp_refr) - 1;
 421:lvgl/src/lv_core/lv_refr.c ****         disp_refr->driver.buffer->last_part = 1;
 422:lvgl/src/lv_core/lv_refr.c ****         lv_refr_area_part(area_p);
 423:lvgl/src/lv_core/lv_refr.c ****     }
 424:lvgl/src/lv_core/lv_refr.c ****     /*The buffer is smaller: refresh the area in parts*/
 425:lvgl/src/lv_core/lv_refr.c ****     else {
 426:lvgl/src/lv_core/lv_refr.c ****         lv_disp_buf_t * vdb = lv_disp_get_buf(disp_refr);
 427:lvgl/src/lv_core/lv_refr.c ****         /*Calculate the max row num*/
 428:lvgl/src/lv_core/lv_refr.c ****         lv_coord_t w = lv_area_get_width(area_p);
 429:lvgl/src/lv_core/lv_refr.c ****         lv_coord_t h = lv_area_get_height(area_p);
 430:lvgl/src/lv_core/lv_refr.c ****         lv_coord_t y2 =
 431:lvgl/src/lv_core/lv_refr.c ****             area_p->y2 >= lv_disp_get_ver_res(disp_refr) ? lv_disp_get_ver_res(disp_refr) - 1 : are
 432:lvgl/src/lv_core/lv_refr.c **** 
 433:lvgl/src/lv_core/lv_refr.c ****         int32_t max_row = (uint32_t)vdb->size / w;
 434:lvgl/src/lv_core/lv_refr.c **** 
 435:lvgl/src/lv_core/lv_refr.c ****         if(max_row > h) max_row = h;
 436:lvgl/src/lv_core/lv_refr.c **** 
 437:lvgl/src/lv_core/lv_refr.c ****         /*Round down the lines of VDB if rounding is added*/
 438:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->driver.rounder_cb) {
 439:lvgl/src/lv_core/lv_refr.c ****             lv_area_t tmp;
 440:lvgl/src/lv_core/lv_refr.c ****             tmp.x1 = 0;
 441:lvgl/src/lv_core/lv_refr.c ****             tmp.x2 = 0;
 442:lvgl/src/lv_core/lv_refr.c ****             tmp.y1 = 0;
 443:lvgl/src/lv_core/lv_refr.c **** 
 444:lvgl/src/lv_core/lv_refr.c ****             lv_coord_t h_tmp = max_row;
 445:lvgl/src/lv_core/lv_refr.c ****             do {
 446:lvgl/src/lv_core/lv_refr.c ****                 tmp.y2 = h_tmp - 1;
 447:lvgl/src/lv_core/lv_refr.c ****                 disp_refr->driver.rounder_cb(&disp_refr->driver, &tmp);
 448:lvgl/src/lv_core/lv_refr.c **** 
 449:lvgl/src/lv_core/lv_refr.c ****                 /*If this height fits into `max_row` then fine*/
 450:lvgl/src/lv_core/lv_refr.c ****                 if(lv_area_get_height(&tmp) <= max_row) break;
ARM GAS  D:\Temp\ccEl19zy.s 			page 20


 451:lvgl/src/lv_core/lv_refr.c **** 
 452:lvgl/src/lv_core/lv_refr.c ****                 /*Decrement the height of the area until it fits into `max_row` after rounding*/
 453:lvgl/src/lv_core/lv_refr.c ****                 h_tmp--;
 454:lvgl/src/lv_core/lv_refr.c ****             } while(h_tmp > 0);
 455:lvgl/src/lv_core/lv_refr.c **** 
 456:lvgl/src/lv_core/lv_refr.c ****             if(h_tmp <= 0) {
 457:lvgl/src/lv_core/lv_refr.c ****                 LV_LOG_WARN("Can't set VDB height using the round function. (Wrong round_cb or to "
 458:lvgl/src/lv_core/lv_refr.c ****                             "small VDB)");
 459:lvgl/src/lv_core/lv_refr.c ****                 return;
 460:lvgl/src/lv_core/lv_refr.c ****             }
 461:lvgl/src/lv_core/lv_refr.c ****             else {
 462:lvgl/src/lv_core/lv_refr.c ****                 max_row = tmp.y2 + 1;
 463:lvgl/src/lv_core/lv_refr.c ****             }
 464:lvgl/src/lv_core/lv_refr.c ****         }
 465:lvgl/src/lv_core/lv_refr.c **** 
 466:lvgl/src/lv_core/lv_refr.c ****         /*Always use the full row*/
 467:lvgl/src/lv_core/lv_refr.c ****         lv_coord_t row;
 468:lvgl/src/lv_core/lv_refr.c ****         lv_coord_t row_last = 0;
 469:lvgl/src/lv_core/lv_refr.c ****         for(row = area_p->y1; row + max_row - 1 <= y2; row += max_row) {
 470:lvgl/src/lv_core/lv_refr.c ****             /*Calc. the next y coordinates of VDB*/
 471:lvgl/src/lv_core/lv_refr.c ****             vdb->area.x1 = area_p->x1;
 472:lvgl/src/lv_core/lv_refr.c ****             vdb->area.x2 = area_p->x2;
 473:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y1 = row;
 474:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y2 = row + max_row - 1;
 475:lvgl/src/lv_core/lv_refr.c ****             if(vdb->area.y2 > y2) vdb->area.y2 = y2;
 476:lvgl/src/lv_core/lv_refr.c ****             row_last = vdb->area.y2;
 477:lvgl/src/lv_core/lv_refr.c ****             if(y2 == row_last) disp_refr->driver.buffer->last_part = 1;
 478:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 479:lvgl/src/lv_core/lv_refr.c ****         }
 480:lvgl/src/lv_core/lv_refr.c **** 
 481:lvgl/src/lv_core/lv_refr.c ****         /*If the last y coordinates are not handled yet ...*/
 482:lvgl/src/lv_core/lv_refr.c ****         if(y2 != row_last) {
 483:lvgl/src/lv_core/lv_refr.c ****             /*Calc. the next y coordinates of VDB*/
 484:lvgl/src/lv_core/lv_refr.c ****             vdb->area.x1 = area_p->x1;
 485:lvgl/src/lv_core/lv_refr.c ****             vdb->area.x2 = area_p->x2;
 486:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y1 = row;
 487:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y2 = y2;
 488:lvgl/src/lv_core/lv_refr.c **** 
 489:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.buffer->last_part = 1;
 490:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 491:lvgl/src/lv_core/lv_refr.c ****         }
 492:lvgl/src/lv_core/lv_refr.c ****     }
 493:lvgl/src/lv_core/lv_refr.c **** }
 494:lvgl/src/lv_core/lv_refr.c **** 
 495:lvgl/src/lv_core/lv_refr.c **** /**
 496:lvgl/src/lv_core/lv_refr.c ****  * Refresh a part of an area which is on the actual Virtual Display Buffer
 497:lvgl/src/lv_core/lv_refr.c ****  * @param area_p pointer to an area to refresh
 498:lvgl/src/lv_core/lv_refr.c ****  */
 499:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_area_part(const lv_area_t * area_p)
 500:lvgl/src/lv_core/lv_refr.c **** {
 501:lvgl/src/lv_core/lv_refr.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp_refr);
 502:lvgl/src/lv_core/lv_refr.c **** 
 503:lvgl/src/lv_core/lv_refr.c ****     /*In non double buffered mode, before rendering the next part wait until the previous image is
 504:lvgl/src/lv_core/lv_refr.c ****      * flushed*/
 505:lvgl/src/lv_core/lv_refr.c ****     if(lv_disp_is_double_buf(disp_refr) == false) {
 506:lvgl/src/lv_core/lv_refr.c ****         while(vdb->flushing) {
 507:lvgl/src/lv_core/lv_refr.c ****             if(disp_refr->driver.wait_cb) disp_refr->driver.wait_cb(&disp_refr->driver);
ARM GAS  D:\Temp\ccEl19zy.s 			page 21


 508:lvgl/src/lv_core/lv_refr.c ****         }
 509:lvgl/src/lv_core/lv_refr.c ****     }
 510:lvgl/src/lv_core/lv_refr.c **** 
 511:lvgl/src/lv_core/lv_refr.c ****     lv_obj_t * top_act_scr = NULL;
 512:lvgl/src/lv_core/lv_refr.c ****     lv_obj_t * top_prev_scr = NULL;
 513:lvgl/src/lv_core/lv_refr.c **** 
 514:lvgl/src/lv_core/lv_refr.c ****     /*Get the new mask from the original area and the act. VDB
 515:lvgl/src/lv_core/lv_refr.c ****      It will be a part of 'area_p'*/
 516:lvgl/src/lv_core/lv_refr.c ****     lv_area_t start_mask;
 517:lvgl/src/lv_core/lv_refr.c ****     _lv_area_intersect(&start_mask, area_p, &vdb->area);
 518:lvgl/src/lv_core/lv_refr.c **** 
 519:lvgl/src/lv_core/lv_refr.c ****     /*Get the most top object which is not covered by others*/
 520:lvgl/src/lv_core/lv_refr.c ****     top_act_scr = lv_refr_get_top_obj(&start_mask, lv_disp_get_scr_act(disp_refr));
 521:lvgl/src/lv_core/lv_refr.c ****     if(disp_refr->prev_scr) {
 522:lvgl/src/lv_core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(&start_mask, disp_refr->prev_scr);
 523:lvgl/src/lv_core/lv_refr.c ****     }
 524:lvgl/src/lv_core/lv_refr.c **** 
 525:lvgl/src/lv_core/lv_refr.c ****     /*Draw a display background if there is no top object*/
 526:lvgl/src/lv_core/lv_refr.c ****     if(top_act_scr == NULL && top_prev_scr == NULL) {
 527:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->bg_img) {
 528:lvgl/src/lv_core/lv_refr.c ****             lv_draw_img_dsc_t dsc;
 529:lvgl/src/lv_core/lv_refr.c ****             lv_draw_img_dsc_init(&dsc);
 530:lvgl/src/lv_core/lv_refr.c ****             dsc.opa = disp_refr->bg_opa;
 531:lvgl/src/lv_core/lv_refr.c ****             lv_img_header_t header;
 532:lvgl/src/lv_core/lv_refr.c ****             lv_res_t res;
 533:lvgl/src/lv_core/lv_refr.c ****             res = lv_img_decoder_get_info(disp_refr->bg_img, &header);
 534:lvgl/src/lv_core/lv_refr.c ****             if(res == LV_RES_OK) {
 535:lvgl/src/lv_core/lv_refr.c ****                 lv_area_t a;
 536:lvgl/src/lv_core/lv_refr.c ****                 lv_area_set(&a, 0, 0, header.w - 1, header.h - 1);
 537:lvgl/src/lv_core/lv_refr.c ****                 lv_draw_img(&a, &start_mask, disp_refr->bg_img, &dsc);
 538:lvgl/src/lv_core/lv_refr.c ****             }
 539:lvgl/src/lv_core/lv_refr.c ****             else {
 540:lvgl/src/lv_core/lv_refr.c ****                 LV_LOG_WARN("Can't draw the background image")
 541:lvgl/src/lv_core/lv_refr.c ****             }
 542:lvgl/src/lv_core/lv_refr.c ****         }
 543:lvgl/src/lv_core/lv_refr.c ****         else {
 544:lvgl/src/lv_core/lv_refr.c ****             lv_draw_rect_dsc_t dsc;
 545:lvgl/src/lv_core/lv_refr.c ****             lv_draw_rect_dsc_init(&dsc);
 546:lvgl/src/lv_core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 547:lvgl/src/lv_core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 548:lvgl/src/lv_core/lv_refr.c ****             lv_draw_rect(&start_mask, &start_mask, &dsc);
 549:lvgl/src/lv_core/lv_refr.c **** 
 550:lvgl/src/lv_core/lv_refr.c ****         }
 551:lvgl/src/lv_core/lv_refr.c ****     }
 552:lvgl/src/lv_core/lv_refr.c ****     /*Refresh the previous screen if any*/
 553:lvgl/src/lv_core/lv_refr.c ****     if(disp_refr->prev_scr) {
 554:lvgl/src/lv_core/lv_refr.c ****         /*Get the most top object which is not covered by others*/
 555:lvgl/src/lv_core/lv_refr.c ****         if(top_prev_scr == NULL) {
 556:lvgl/src/lv_core/lv_refr.c ****             top_prev_scr = disp_refr->prev_scr;
 557:lvgl/src/lv_core/lv_refr.c ****         }
 558:lvgl/src/lv_core/lv_refr.c ****         /*Do the refreshing from the top object*/
 559:lvgl/src/lv_core/lv_refr.c ****         lv_refr_obj_and_children(top_prev_scr, &start_mask);
 560:lvgl/src/lv_core/lv_refr.c **** 
 561:lvgl/src/lv_core/lv_refr.c ****     }
 562:lvgl/src/lv_core/lv_refr.c **** 
 563:lvgl/src/lv_core/lv_refr.c ****     if(top_act_scr == NULL) {
 564:lvgl/src/lv_core/lv_refr.c ****         top_act_scr = disp_refr->act_scr;
ARM GAS  D:\Temp\ccEl19zy.s 			page 22


 565:lvgl/src/lv_core/lv_refr.c ****     }
 566:lvgl/src/lv_core/lv_refr.c ****     /*Do the refreshing from the top object*/
 567:lvgl/src/lv_core/lv_refr.c ****     lv_refr_obj_and_children(top_act_scr, &start_mask);
 568:lvgl/src/lv_core/lv_refr.c **** 
 569:lvgl/src/lv_core/lv_refr.c ****     /*Also refresh top and sys layer unconditionally*/
 570:lvgl/src/lv_core/lv_refr.c ****     lv_refr_obj_and_children(lv_disp_get_layer_top(disp_refr), &start_mask);
 571:lvgl/src/lv_core/lv_refr.c ****     lv_refr_obj_and_children(lv_disp_get_layer_sys(disp_refr), &start_mask);
 572:lvgl/src/lv_core/lv_refr.c **** 
 573:lvgl/src/lv_core/lv_refr.c ****     /* In true double buffered mode flush only once when all areas were rendered.
 574:lvgl/src/lv_core/lv_refr.c ****      * In normal mode flush after every area */
 575:lvgl/src/lv_core/lv_refr.c ****     if(lv_disp_is_true_double_buf(disp_refr) == false) {
 576:lvgl/src/lv_core/lv_refr.c ****         lv_refr_vdb_flush();
 577:lvgl/src/lv_core/lv_refr.c ****     }
 578:lvgl/src/lv_core/lv_refr.c **** }
 579:lvgl/src/lv_core/lv_refr.c **** 
 580:lvgl/src/lv_core/lv_refr.c **** /**
 581:lvgl/src/lv_core/lv_refr.c ****  * Search the most top object which fully covers an area
 582:lvgl/src/lv_core/lv_refr.c ****  * @param area_p pointer to an area
 583:lvgl/src/lv_core/lv_refr.c ****  * @param obj the first object to start the searching (typically a screen)
 584:lvgl/src/lv_core/lv_refr.c ****  * @return
 585:lvgl/src/lv_core/lv_refr.c ****  */
 586:lvgl/src/lv_core/lv_refr.c **** static lv_obj_t * lv_refr_get_top_obj(const lv_area_t * area_p, lv_obj_t * obj)
 587:lvgl/src/lv_core/lv_refr.c **** {
 260              		.loc 1 587 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		.loc 1 587 1 is_stmt 0 view .LVU69
 265 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 266              	.LCFI3:
 267              		.cfi_def_cfa_offset 32
 268              		.cfi_offset 3, -32
 269              		.cfi_offset 4, -28
 270              		.cfi_offset 5, -24
 271              		.cfi_offset 6, -20
 272              		.cfi_offset 7, -16
 273              		.cfi_offset 8, -12
 274              		.cfi_offset 9, -8
 275              		.cfi_offset 14, -4
 276 0004 0746     		mov	r7, r0
 277 0006 0E46     		mov	r6, r1
 588:lvgl/src/lv_core/lv_refr.c ****     lv_obj_t * found_p = NULL;
 278              		.loc 1 588 5 is_stmt 1 view .LVU70
 279              	.LVL17:
 589:lvgl/src/lv_core/lv_refr.c **** 
 590:lvgl/src/lv_core/lv_refr.c ****     /*If this object is fully cover the draw area check the children too */
 591:lvgl/src/lv_core/lv_refr.c ****     if(_lv_area_is_in(area_p, &obj->coords, 0) && obj->hidden == 0) {
 280              		.loc 1 591 5 view .LVU71
 281              		.loc 1 591 8 is_stmt 0 view .LVU72
 282 0008 0022     		movs	r2, #0
 283 000a 1031     		adds	r1, r1, #16
 284              	.LVL18:
 285              		.loc 1 591 8 view .LVU73
 286 000c FFF7FEFF 		bl	_lv_area_is_in
 287              	.LVL19:
 288              		.loc 1 591 7 view .LVU74
 289 0010 B0B3     		cbz	r0, .L21
ARM GAS  D:\Temp\ccEl19zy.s 			page 23


 290              		.loc 1 591 63 discriminator 1 view .LVU75
 291 0012 96F83430 		ldrb	r3, [r6, #52]	@ zero_extendqisi2
 292              		.loc 1 591 48 discriminator 1 view .LVU76
 293 0016 13F0100F 		tst	r3, #16
 294 001a 33D1     		bne	.L22
 295              	.LBB60:
 592:lvgl/src/lv_core/lv_refr.c ****         lv_design_res_t design_res = obj->design_cb(obj, area_p, LV_DESIGN_COVER_CHK);
 296              		.loc 1 592 9 is_stmt 1 view .LVU77
 297              		.loc 1 592 41 is_stmt 0 view .LVU78
 298 001c 336A     		ldr	r3, [r6, #32]
 299              		.loc 1 592 38 view .LVU79
 300 001e 0222     		movs	r2, #2
 301 0020 3946     		mov	r1, r7
 302 0022 3046     		mov	r0, r6
 303 0024 9847     		blx	r3
 304              	.LVL20:
 305 0026 8146     		mov	r9, r0
 306              	.LVL21:
 593:lvgl/src/lv_core/lv_refr.c ****         if(design_res == LV_DESIGN_RES_MASKED) return NULL;
 307              		.loc 1 593 9 is_stmt 1 view .LVU80
 308              		.loc 1 593 11 is_stmt 0 view .LVU81
 309 0028 0328     		cmp	r0, #3
 310 002a 2DD0     		beq	.L23
 594:lvgl/src/lv_core/lv_refr.c **** 
 595:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_OPA_SCALE
 596:lvgl/src/lv_core/lv_refr.c ****         if(design_res == LV_DESIGN_RES_COVER && lv_obj_get_style_opa_scale(obj, LV_OBJ_PART_MAIN) !
 311              		.loc 1 596 9 is_stmt 1 view .LVU82
 312              		.loc 1 596 11 is_stmt 0 view .LVU83
 313 002c 0128     		cmp	r0, #1
 314 002e 13D0     		beq	.L27
 315              	.LVL22:
 316              	.L17:
 597:lvgl/src/lv_core/lv_refr.c ****             design_res = LV_DESIGN_RES_NOT_COVER;
 598:lvgl/src/lv_core/lv_refr.c ****         }
 599:lvgl/src/lv_core/lv_refr.c **** #endif
 600:lvgl/src/lv_core/lv_refr.c **** 
 601:lvgl/src/lv_core/lv_refr.c ****         lv_obj_t * i;
 317              		.loc 1 601 9 is_stmt 1 view .LVU84
 602:lvgl/src/lv_core/lv_refr.c ****         _LV_LL_READ(obj->child_ll, i) {
 318              		.loc 1 602 9 view .LVU85
 319 0030 06F10408 		add	r8, r6, #4
 320 0034 4046     		mov	r0, r8
 321 0036 FFF7FEFF 		bl	_lv_ll_get_head
 322              	.LVL23:
 323 003a 0446     		mov	r4, r0
 324              	.LVL24:
 325              		.loc 1 602 9 is_stmt 0 view .LVU86
 326              	.LBE60:
 588:lvgl/src/lv_core/lv_refr.c **** 
 327              		.loc 1 588 16 view .LVU87
 328 003c 0025     		movs	r5, #0
 329              	.LVL25:
 330              	.L18:
 331              	.LBB63:
 332              		.loc 1 602 9 discriminator 1 view .LVU88
 333 003e B4B1     		cbz	r4, .L19
 603:lvgl/src/lv_core/lv_refr.c ****             found_p = lv_refr_get_top_obj(area_p, i);
ARM GAS  D:\Temp\ccEl19zy.s 			page 24


 334              		.loc 1 603 13 is_stmt 1 view .LVU89
 335              		.loc 1 603 23 is_stmt 0 view .LVU90
 336 0040 2146     		mov	r1, r4
 337 0042 3846     		mov	r0, r7
 338              	.LVL26:
 339              		.loc 1 603 23 view .LVU91
 340 0044 FFF7DCFF 		bl	lv_refr_get_top_obj
 341              	.LVL27:
 604:lvgl/src/lv_core/lv_refr.c **** 
 605:lvgl/src/lv_core/lv_refr.c ****             /*If a children is ok then break*/
 606:lvgl/src/lv_core/lv_refr.c ****             if(found_p != NULL) {
 342              		.loc 1 606 13 is_stmt 1 view .LVU92
 343              		.loc 1 606 15 is_stmt 0 view .LVU93
 344 0048 0546     		mov	r5, r0
 345 004a 80B9     		cbnz	r0, .L19
 602:lvgl/src/lv_core/lv_refr.c ****             found_p = lv_refr_get_top_obj(area_p, i);
 346              		.loc 1 602 9 discriminator 2 view .LVU94
 347 004c 2146     		mov	r1, r4
 348 004e 4046     		mov	r0, r8
 349              	.LVL28:
 602:lvgl/src/lv_core/lv_refr.c ****             found_p = lv_refr_get_top_obj(area_p, i);
 350              		.loc 1 602 9 discriminator 2 view .LVU95
 351 0050 FFF7FEFF 		bl	_lv_ll_get_next
 352              	.LVL29:
 353 0054 0446     		mov	r4, r0
 354              	.LVL30:
 602:lvgl/src/lv_core/lv_refr.c ****             found_p = lv_refr_get_top_obj(area_p, i);
 355              		.loc 1 602 9 discriminator 2 view .LVU96
 356 0056 F2E7     		b	.L18
 357              	.LVL31:
 358              	.L27:
 359              	.LBB61:
 360              	.LBI61:
 361              		.file 4 "lvgl/src/lv_core/lv_obj_style_dec.h"
   1:lvgl/src/lv_core/lv_obj_style_dec.h **** 
   2:lvgl/src/lv_core/lv_obj_style_dec.h **** /**
   3:lvgl/src/lv_core/lv_obj_style_dec.h ****  * @file lv_obj_style_dec.h
   4:lvgl/src/lv_core/lv_obj_style_dec.h ****  *
   5:lvgl/src/lv_core/lv_obj_style_dec.h ****  */
   6:lvgl/src/lv_core/lv_obj_style_dec.h **** 
   7:lvgl/src/lv_core/lv_obj_style_dec.h **** #ifndef LV_OBJ_STYLE_DEC_H
   8:lvgl/src/lv_core/lv_obj_style_dec.h **** #define LV_OBJ_STYLE_DEC_H
   9:lvgl/src/lv_core/lv_obj_style_dec.h **** 
  10:lvgl/src/lv_core/lv_obj_style_dec.h **** #ifdef __cplusplus
  11:lvgl/src/lv_core/lv_obj_style_dec.h **** extern "C" {
  12:lvgl/src/lv_core/lv_obj_style_dec.h **** #endif
  13:lvgl/src/lv_core/lv_obj_style_dec.h **** 
  14:lvgl/src/lv_core/lv_obj_style_dec.h **** /*********************
  15:lvgl/src/lv_core/lv_obj_style_dec.h ****  *      DEFINES
  16:lvgl/src/lv_core/lv_obj_style_dec.h ****  *********************/
  17:lvgl/src/lv_core/lv_obj_style_dec.h **** 
  18:lvgl/src/lv_core/lv_obj_style_dec.h **** /**
  19:lvgl/src/lv_core/lv_obj_style_dec.h ****  * Macro to declare the most important style set/get API functions.
  20:lvgl/src/lv_core/lv_obj_style_dec.h ****  *
  21:lvgl/src/lv_core/lv_obj_style_dec.h ****  * Get the value of a style property from an object in the object's current state
  22:lvgl/src/lv_core/lv_obj_style_dec.h ****  * -----------------------------------------------------------------------------
  23:lvgl/src/lv_core/lv_obj_style_dec.h ****  *  - Get the value of a style property from an object in the object's current state.
ARM GAS  D:\Temp\ccEl19zy.s 			page 25


  24:lvgl/src/lv_core/lv_obj_style_dec.h ****  *  - Transition animation is taken into account.
  25:lvgl/src/lv_core/lv_obj_style_dec.h ****  *  - If the property is not set in the object's styles check the parent(s) if the property can be 
  26:lvgl/src/lv_core/lv_obj_style_dec.h ****  *  - If still not found return a default value.
  27:lvgl/src/lv_core/lv_obj_style_dec.h ****  *  - For example:
  28:lvgl/src/lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t w = lv_obj_get_style_border_width(btn1, LV_BTN_PART_MAIN);`
  29:lvgl/src/lv_core/lv_obj_style_dec.h ****  *
  30:lvgl/src/lv_core/lv_obj_style_dec.h ****  * Set a local style property for an object in a given state
  31:lvgl/src/lv_core/lv_obj_style_dec.h ****  * ---------------------------------------------------------
  32:lvgl/src/lv_core/lv_obj_style_dec.h ****  *  - For example:
  33:lvgl/src/lv_core/lv_obj_style_dec.h ****  *      `lv_obj_set_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, 2);`
  34:lvgl/src/lv_core/lv_obj_style_dec.h ****  *
  35:lvgl/src/lv_core/lv_obj_style_dec.h ****  * Get a local style property's value of an object in a given state
  36:lvgl/src/lv_core/lv_obj_style_dec.h ****  * ----------------------------------------------------------------
  37:lvgl/src/lv_core/lv_obj_style_dec.h ****  *  - Return the best matching property in the given state.
  38:lvgl/src/lv_core/lv_obj_style_dec.h ****  *  - E.g. if `state` parameter is LV_STATE_PRESSED | LV_STATE_CHECKED` but the property defined on
  39:lvgl/src/lv_core/lv_obj_style_dec.h ****  *    `LV_STATE_PRESSED` and `LV_STATE_DEFAULT` the best matching state is `LV_STATE_PRESSED`
  40:lvgl/src/lv_core/lv_obj_style_dec.h ****  *    (because it has higher precedence) and it will be returned.
  41:lvgl/src/lv_core/lv_obj_style_dec.h ****  *  - If the property is not found even in `LV_STATE_DEFAULT` `-1` is returned.
  42:lvgl/src/lv_core/lv_obj_style_dec.h ****  *  - For example:
  43:lvgl/src/lv_core/lv_obj_style_dec.h ****  *      `//Type of result should be lv_style_int_t/lv_opa_t/lv_color_t/const void * according to th
  44:lvgl/src/lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t result;`
  45:lvgl/src/lv_core/lv_obj_style_dec.h ****  *      `lv_obj_get_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, &result);`
  46:lvgl/src/lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  47:lvgl/src/lv_core/lv_obj_style_dec.h ****  *
  48:lvgl/src/lv_core/lv_obj_style_dec.h ****  * Get the value from a style in a given state
  49:lvgl/src/lv_core/lv_obj_style_dec.h ****  * -------------------------------------------
  50:lvgl/src/lv_core/lv_obj_style_dec.h ****  * - The same rules applies to the return value then for "lv_obj_get_style_local_...()" above
  51:lvgl/src/lv_core/lv_obj_style_dec.h ****  * - For example
  52:lvgl/src/lv_core/lv_obj_style_dec.h ****  *      `int16_t weight = lv_style_get_border_width(&style1, LV_STATE_PRESSED, &result);`
  53:lvgl/src/lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  54:lvgl/src/lv_core/lv_obj_style_dec.h **** 
  55:lvgl/src/lv_core/lv_obj_style_dec.h ****  * Set a value in a style in a given state
  56:lvgl/src/lv_core/lv_obj_style_dec.h ****  * ---------------------------------------
  57:lvgl/src/lv_core/lv_obj_style_dec.h ****  * - For example
  58:lvgl/src/lv_core/lv_obj_style_dec.h ****  *      `lv_style_set_border_width(&style1, LV_STATE_PRESSED, 2);`
  59:lvgl/src/lv_core/lv_obj_style_dec.h ****  */
  60:lvgl/src/lv_core/lv_obj_style_dec.h **** 
  61:lvgl/src/lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  62:lvgl/src/lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  63:lvgl/src/lv_core/lv_obj_style_dec.h ****     {                                                                                              
  64:lvgl/src/lv_core/lv_obj_style_dec.h ****         return (value_type) _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);       
  65:lvgl/src/lv_core/lv_obj_style_dec.h ****     }
  66:lvgl/src/lv_core/lv_obj_style_dec.h **** 
  67:lvgl/src/lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  68:lvgl/src/lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  69:lvgl/src/lv_core/lv_obj_style_dec.h ****     {                                                                                              
  70:lvgl/src/lv_core/lv_obj_style_dec.h ****         return _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);                    
  71:lvgl/src/lv_core/lv_obj_style_dec.h ****     }
  72:lvgl/src/lv_core/lv_obj_style_dec.h **** 
  73:lvgl/src/lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_scalar(prop_name, func_name, value_type, style_type)                  
  74:lvgl/src/lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  75:lvgl/src/lv_core/lv_obj_style_dec.h ****     {                                                                                              
  76:lvgl/src/lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  77:lvgl/src/lv_core/lv_obj_style_dec.h ****     }
  78:lvgl/src/lv_core/lv_obj_style_dec.h **** 
  79:lvgl/src/lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_nonscalar(prop_name, func_name, value_type, style_type)               
  80:lvgl/src/lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
ARM GAS  D:\Temp\ccEl19zy.s 			page 26


  81:lvgl/src/lv_core/lv_obj_style_dec.h ****     {                                                                                              
  82:lvgl/src/lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  83:lvgl/src/lv_core/lv_obj_style_dec.h ****     }
  84:lvgl/src/lv_core/lv_obj_style_dec.h **** 
  85:lvgl/src/lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  86:lvgl/src/lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  87:lvgl/src/lv_core/lv_obj_style_dec.h ****     {                                                                                              
  88:lvgl/src/lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  89:lvgl/src/lv_core/lv_obj_style_dec.h ****     }
  90:lvgl/src/lv_core/lv_obj_style_dec.h **** 
  91:lvgl/src/lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  92:lvgl/src/lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  93:lvgl/src/lv_core/lv_obj_style_dec.h ****     {                                                                                              
  94:lvgl/src/lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  95:lvgl/src/lv_core/lv_obj_style_dec.h ****     }
  96:lvgl/src/lv_core/lv_obj_style_dec.h **** 
  97:lvgl/src/lv_core/lv_obj_style_dec.h **** #define _LV_OBJ_STYLE_SET_GET_DECLARE(prop_name, func_name, value_type, style_type, scalar)        
  98:lvgl/src/lv_core/lv_obj_style_dec.h ****     _OBJ_GET_STYLE_##scalar(prop_name, func_name, value_type, style_type)                          
  99:lvgl/src/lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_LOCAL_##scalar(prop_name, func_name, value_type, style_type)                    
 100:lvgl/src/lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_##scalar(prop_name, func_name, value_type, style_type)
 101:lvgl/src/lv_core/lv_obj_style_dec.h **** 
 102:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(RADIUS, radius, lv_style_int_t, _int, scalar)
 103:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 104:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 105:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_WIDTH, transform_width, lv_style_int_t, _int, scalar)
 106:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_HEIGHT, transform_height, lv_style_int_t, _int, scalar)
 107:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ANGLE, transform_angle, lv_style_int_t, _int, scalar)
 108:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ZOOM, transform_zoom, lv_style_int_t, _int, scalar)
 109:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OPA_SCALE, opa_scale, lv_opa_t, _opa, scalar)
 362              		.loc 4 109 1 is_stmt 1 view .LVU97
 363              	.LBB62:
 364              		.loc 4 109 1 view .LVU98
 365 0058 48F20C02 		movw	r2, #32780
 366 005c 0021     		movs	r1, #0
 367 005e 3046     		mov	r0, r6
 368              	.LVL32:
 369              		.loc 4 109 1 is_stmt 0 view .LVU99
 370 0060 FFF7FEFF 		bl	_lv_obj_get_style_opa
 371              	.LVL33:
 372              		.loc 4 109 1 view .LVU100
 373              	.LBE62:
 374              	.LBE61:
 596:lvgl/src/lv_core/lv_refr.c ****             design_res = LV_DESIGN_RES_NOT_COVER;
 375              		.loc 1 596 46 view .LVU101
 376 0064 FF28     		cmp	r0, #255
 377 0066 E3D0     		beq	.L17
 597:lvgl/src/lv_core/lv_refr.c ****         }
 378              		.loc 1 597 24 view .LVU102
 379 0068 4FF00209 		mov	r9, #2
 380 006c E0E7     		b	.L17
 381              	.LVL34:
 382              	.L19:
 607:lvgl/src/lv_core/lv_refr.c ****                 break;
 608:lvgl/src/lv_core/lv_refr.c ****             }
 609:lvgl/src/lv_core/lv_refr.c ****         }
 610:lvgl/src/lv_core/lv_refr.c **** 
 611:lvgl/src/lv_core/lv_refr.c ****         /*If no better children use this object*/
ARM GAS  D:\Temp\ccEl19zy.s 			page 27


 612:lvgl/src/lv_core/lv_refr.c ****         if(found_p == NULL) {
 383              		.loc 1 612 9 is_stmt 1 view .LVU103
 384              		.loc 1 612 11 is_stmt 0 view .LVU104
 385 006e 15B1     		cbz	r5, .L28
 386              	.LVL35:
 387              	.L15:
 388              		.loc 1 612 11 view .LVU105
 389              	.LBE63:
 613:lvgl/src/lv_core/lv_refr.c ****             if(design_res == LV_DESIGN_RES_COVER) {
 614:lvgl/src/lv_core/lv_refr.c ****                 found_p = obj;
 615:lvgl/src/lv_core/lv_refr.c ****             }
 616:lvgl/src/lv_core/lv_refr.c ****         }
 617:lvgl/src/lv_core/lv_refr.c ****     }
 618:lvgl/src/lv_core/lv_refr.c **** 
 619:lvgl/src/lv_core/lv_refr.c ****     return found_p;
 620:lvgl/src/lv_core/lv_refr.c **** }
 390              		.loc 1 620 1 view .LVU106
 391 0070 2846     		mov	r0, r5
 392 0072 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 393              	.LVL36:
 394              	.L28:
 395              	.LBB64:
 613:lvgl/src/lv_core/lv_refr.c ****             if(design_res == LV_DESIGN_RES_COVER) {
 396              		.loc 1 613 13 is_stmt 1 view .LVU107
 613:lvgl/src/lv_core/lv_refr.c ****             if(design_res == LV_DESIGN_RES_COVER) {
 397              		.loc 1 613 15 is_stmt 0 view .LVU108
 398 0076 B9F1010F 		cmp	r9, #1
 399 007a F9D1     		bne	.L15
 614:lvgl/src/lv_core/lv_refr.c ****             }
 400              		.loc 1 614 25 view .LVU109
 401 007c 3546     		mov	r5, r6
 402              	.LVL37:
 614:lvgl/src/lv_core/lv_refr.c ****             }
 403              		.loc 1 614 25 view .LVU110
 404 007e F7E7     		b	.L15
 405              	.LVL38:
 406              	.L21:
 614:lvgl/src/lv_core/lv_refr.c ****             }
 407              		.loc 1 614 25 view .LVU111
 408              	.LBE64:
 588:lvgl/src/lv_core/lv_refr.c **** 
 409              		.loc 1 588 16 view .LVU112
 410 0080 0025     		movs	r5, #0
 411 0082 F5E7     		b	.L15
 412              	.L22:
 413 0084 0025     		movs	r5, #0
 414 0086 F3E7     		b	.L15
 415              	.LVL39:
 416              	.L23:
 417              	.LBB65:
 593:lvgl/src/lv_core/lv_refr.c **** 
 418              		.loc 1 593 55 view .LVU113
 419 0088 0025     		movs	r5, #0
 420 008a F1E7     		b	.L15
 421              	.LBE65:
 422              		.cfi_endproc
 423              	.LFE474:
ARM GAS  D:\Temp\ccEl19zy.s 			page 28


 425              		.section	.text.lv_refr_obj,"ax",%progbits
 426              		.align	1
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu fpv4-sp-d16
 432              	lv_refr_obj:
 433              	.LVL40:
 434              	.LFB476:
 621:lvgl/src/lv_core/lv_refr.c **** 
 622:lvgl/src/lv_core/lv_refr.c **** /**
 623:lvgl/src/lv_core/lv_refr.c ****  * Make the refreshing from an object. Draw all its children and the youngers too.
 624:lvgl/src/lv_core/lv_refr.c ****  * @param top_p pointer to an objects. Start the drawing from it.
 625:lvgl/src/lv_core/lv_refr.c ****  * @param mask_p pointer to an area, the objects will be drawn only here
 626:lvgl/src/lv_core/lv_refr.c ****  */
 627:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_obj_and_children(lv_obj_t * top_p, const lv_area_t * mask_p)
 628:lvgl/src/lv_core/lv_refr.c **** {
 629:lvgl/src/lv_core/lv_refr.c ****     /* Normally always will be a top_obj (at least the screen)
 630:lvgl/src/lv_core/lv_refr.c ****      * but in special cases (e.g. if the screen has alpha) it won't.
 631:lvgl/src/lv_core/lv_refr.c ****      * In this case use the screen directly */
 632:lvgl/src/lv_core/lv_refr.c ****     if(top_p == NULL) top_p = lv_disp_get_scr_act(disp_refr);
 633:lvgl/src/lv_core/lv_refr.c ****     if(top_p == NULL) return;  /*Shouldn't happen*/
 634:lvgl/src/lv_core/lv_refr.c **** 
 635:lvgl/src/lv_core/lv_refr.c ****     /*Refresh the top object and its children*/
 636:lvgl/src/lv_core/lv_refr.c ****     lv_refr_obj(top_p, mask_p);
 637:lvgl/src/lv_core/lv_refr.c **** 
 638:lvgl/src/lv_core/lv_refr.c ****     /*Draw the 'younger' sibling objects because they can be on top_obj */
 639:lvgl/src/lv_core/lv_refr.c ****     lv_obj_t * par;
 640:lvgl/src/lv_core/lv_refr.c ****     lv_obj_t * border_p = top_p;
 641:lvgl/src/lv_core/lv_refr.c **** 
 642:lvgl/src/lv_core/lv_refr.c ****     par = lv_obj_get_parent(top_p);
 643:lvgl/src/lv_core/lv_refr.c **** 
 644:lvgl/src/lv_core/lv_refr.c ****     /*Do until not reach the screen*/
 645:lvgl/src/lv_core/lv_refr.c ****     while(par != NULL) {
 646:lvgl/src/lv_core/lv_refr.c ****         /*object before border_p has to be redrawn*/
 647:lvgl/src/lv_core/lv_refr.c ****         lv_obj_t * i = _lv_ll_get_prev(&(par->child_ll), border_p);
 648:lvgl/src/lv_core/lv_refr.c **** 
 649:lvgl/src/lv_core/lv_refr.c ****         while(i != NULL) {
 650:lvgl/src/lv_core/lv_refr.c ****             /*Refresh the objects*/
 651:lvgl/src/lv_core/lv_refr.c ****             lv_refr_obj(i, mask_p);
 652:lvgl/src/lv_core/lv_refr.c ****             i = _lv_ll_get_prev(&(par->child_ll), i);
 653:lvgl/src/lv_core/lv_refr.c ****         }
 654:lvgl/src/lv_core/lv_refr.c **** 
 655:lvgl/src/lv_core/lv_refr.c ****         /*Call the post draw design function of the parents of the to object*/
 656:lvgl/src/lv_core/lv_refr.c ****         if(par->design_cb) par->design_cb(par, mask_p, LV_DESIGN_DRAW_POST);
 657:lvgl/src/lv_core/lv_refr.c **** 
 658:lvgl/src/lv_core/lv_refr.c ****         /*The new border will be there last parents,
 659:lvgl/src/lv_core/lv_refr.c ****          *so the 'younger' brothers of parent will be refreshed*/
 660:lvgl/src/lv_core/lv_refr.c ****         border_p = par;
 661:lvgl/src/lv_core/lv_refr.c ****         /*Go a level deeper*/
 662:lvgl/src/lv_core/lv_refr.c ****         par = lv_obj_get_parent(par);
 663:lvgl/src/lv_core/lv_refr.c ****     }
 664:lvgl/src/lv_core/lv_refr.c **** }
 665:lvgl/src/lv_core/lv_refr.c **** 
 666:lvgl/src/lv_core/lv_refr.c **** /**
 667:lvgl/src/lv_core/lv_refr.c ****  * Refresh an object an all of its children. (Called recursively)
 668:lvgl/src/lv_core/lv_refr.c ****  * @param obj pointer to an object to refresh
ARM GAS  D:\Temp\ccEl19zy.s 			page 29


 669:lvgl/src/lv_core/lv_refr.c ****  * @param mask_ori_p pointer to an area, the objects will be drawn only here
 670:lvgl/src/lv_core/lv_refr.c ****  */
 671:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_obj(lv_obj_t * obj, const lv_area_t * mask_ori_p)
 672:lvgl/src/lv_core/lv_refr.c **** {
 435              		.loc 1 672 1 is_stmt 1 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 40
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 673:lvgl/src/lv_core/lv_refr.c ****     /*Do not refresh hidden objects*/
 674:lvgl/src/lv_core/lv_refr.c ****     if(obj->hidden != 0) return;
 439              		.loc 1 674 5 view .LVU115
 440              		.loc 1 674 20 is_stmt 0 view .LVU116
 441 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 442              		.loc 1 674 7 view .LVU117
 443 0004 13F0100F 		tst	r3, #16
 444 0008 00D0     		beq	.L42
 445 000a 7047     		bx	lr
 446              	.L42:
 672:lvgl/src/lv_core/lv_refr.c ****     /*Do not refresh hidden objects*/
 447              		.loc 1 672 1 view .LVU118
 448 000c 70B5     		push	{r4, r5, r6, lr}
 449              	.LCFI4:
 450              		.cfi_def_cfa_offset 16
 451              		.cfi_offset 4, -16
 452              		.cfi_offset 5, -12
 453              		.cfi_offset 6, -8
 454              		.cfi_offset 14, -4
 455 000e 8AB0     		sub	sp, sp, #40
 456              	.LCFI5:
 457              		.cfi_def_cfa_offset 56
 458 0010 0E46     		mov	r6, r1
 459 0012 0446     		mov	r4, r0
 675:lvgl/src/lv_core/lv_refr.c **** 
 676:lvgl/src/lv_core/lv_refr.c ****     bool union_ok; /* Store the return value of area_union */
 460              		.loc 1 676 5 is_stmt 1 view .LVU119
 677:lvgl/src/lv_core/lv_refr.c ****     /* Truncate the original mask to the coordinates of the parent
 678:lvgl/src/lv_core/lv_refr.c ****      * because the parent and its children are visible only here */
 679:lvgl/src/lv_core/lv_refr.c ****     lv_area_t obj_mask;
 461              		.loc 1 679 5 view .LVU120
 680:lvgl/src/lv_core/lv_refr.c ****     lv_area_t obj_ext_mask;
 462              		.loc 1 680 5 view .LVU121
 681:lvgl/src/lv_core/lv_refr.c ****     lv_area_t obj_area;
 463              		.loc 1 681 5 view .LVU122
 682:lvgl/src/lv_core/lv_refr.c ****     lv_coord_t ext_size = obj->ext_draw_pad;
 464              		.loc 1 682 5 view .LVU123
 465              		.loc 1 682 16 is_stmt 0 view .LVU124
 466 0014 B0F93250 		ldrsh	r5, [r0, #50]
 467              	.LVL41:
 683:lvgl/src/lv_core/lv_refr.c ****     lv_obj_get_coords(obj, &obj_area);
 468              		.loc 1 683 5 is_stmt 1 view .LVU125
 469 0018 04A9     		add	r1, sp, #16
 470              	.LVL42:
 471              		.loc 1 683 5 is_stmt 0 view .LVU126
 472 001a FFF7FEFF 		bl	lv_obj_get_coords
 473              	.LVL43:
 684:lvgl/src/lv_core/lv_refr.c ****     obj_area.x1 -= ext_size;
 474              		.loc 1 684 5 is_stmt 1 view .LVU127
ARM GAS  D:\Temp\ccEl19zy.s 			page 30


 475              		.loc 1 684 17 is_stmt 0 view .LVU128
 476 001e ABB2     		uxth	r3, r5
 477 0020 BDF81020 		ldrh	r2, [sp, #16]
 478 0024 D21A     		subs	r2, r2, r3
 479 0026 ADF81020 		strh	r2, [sp, #16]	@ movhi
 685:lvgl/src/lv_core/lv_refr.c ****     obj_area.y1 -= ext_size;
 480              		.loc 1 685 5 is_stmt 1 view .LVU129
 481              		.loc 1 685 17 is_stmt 0 view .LVU130
 482 002a BDF81220 		ldrh	r2, [sp, #18]
 483 002e D21A     		subs	r2, r2, r3
 484 0030 ADF81220 		strh	r2, [sp, #18]	@ movhi
 686:lvgl/src/lv_core/lv_refr.c ****     obj_area.x2 += ext_size;
 485              		.loc 1 686 5 is_stmt 1 view .LVU131
 486              		.loc 1 686 17 is_stmt 0 view .LVU132
 487 0034 BDF81420 		ldrh	r2, [sp, #20]
 488 0038 1A44     		add	r2, r2, r3
 489 003a ADF81420 		strh	r2, [sp, #20]	@ movhi
 687:lvgl/src/lv_core/lv_refr.c ****     obj_area.y2 += ext_size;
 490              		.loc 1 687 5 is_stmt 1 view .LVU133
 491              		.loc 1 687 17 is_stmt 0 view .LVU134
 492 003e BDF81620 		ldrh	r2, [sp, #22]
 493 0042 1344     		add	r3, r3, r2
 494 0044 ADF81630 		strh	r3, [sp, #22]	@ movhi
 688:lvgl/src/lv_core/lv_refr.c ****     union_ok = _lv_area_intersect(&obj_ext_mask, mask_ori_p, &obj_area);
 495              		.loc 1 688 5 is_stmt 1 view .LVU135
 496              		.loc 1 688 16 is_stmt 0 view .LVU136
 497 0048 04AA     		add	r2, sp, #16
 498 004a 3146     		mov	r1, r6
 499 004c 06A8     		add	r0, sp, #24
 500 004e FFF7FEFF 		bl	_lv_area_intersect
 501              	.LVL44:
 689:lvgl/src/lv_core/lv_refr.c **** 
 690:lvgl/src/lv_core/lv_refr.c ****     /*Draw the parent and its children only if they ore on 'mask_parent'*/
 691:lvgl/src/lv_core/lv_refr.c ****     if(union_ok != false) {
 502              		.loc 1 691 5 is_stmt 1 view .LVU137
 503              		.loc 1 691 7 is_stmt 0 view .LVU138
 504 0052 A8B1     		cbz	r0, .L29
 692:lvgl/src/lv_core/lv_refr.c **** 
 693:lvgl/src/lv_core/lv_refr.c ****         /* Redraw the object */
 694:lvgl/src/lv_core/lv_refr.c ****         if(obj->design_cb) obj->design_cb(obj, &obj_ext_mask, LV_DESIGN_DRAW_MAIN);
 505              		.loc 1 694 9 is_stmt 1 view .LVU139
 506              		.loc 1 694 15 is_stmt 0 view .LVU140
 507 0054 236A     		ldr	r3, [r4, #32]
 508              		.loc 1 694 11 view .LVU141
 509 0056 1BB1     		cbz	r3, .L33
 510              		.loc 1 694 28 is_stmt 1 discriminator 1 view .LVU142
 511 0058 0022     		movs	r2, #0
 512 005a 06A9     		add	r1, sp, #24
 513 005c 2046     		mov	r0, r4
 514              	.LVL45:
 515              		.loc 1 694 28 is_stmt 0 discriminator 1 view .LVU143
 516 005e 9847     		blx	r3
 517              	.LVL46:
 518              	.L33:
 695:lvgl/src/lv_core/lv_refr.c **** 
 696:lvgl/src/lv_core/lv_refr.c **** #if MASK_AREA_DEBUG
 697:lvgl/src/lv_core/lv_refr.c ****         static lv_color_t debug_color = LV_COLOR_RED;
ARM GAS  D:\Temp\ccEl19zy.s 			page 31


 698:lvgl/src/lv_core/lv_refr.c ****         lv_draw_rect_dsc_t draw_dsc;
 699:lvgl/src/lv_core/lv_refr.c ****         lv_draw_rect_dsc_init(&draw_dsc);
 700:lvgl/src/lv_core/lv_refr.c ****         draw_dsc.bg_color.full = debug_color.full;
 701:lvgl/src/lv_core/lv_refr.c ****         draw_dsc.bg_opa = LV_OPA_20;
 702:lvgl/src/lv_core/lv_refr.c ****         draw_dsc.border_width = 2;
 703:lvgl/src/lv_core/lv_refr.c ****         draw_dsc.border_opa = LV_OPA_50;
 704:lvgl/src/lv_core/lv_refr.c ****         draw_dsc.border_color.full = (debug_color.full + 0x13) * 9;
 705:lvgl/src/lv_core/lv_refr.c **** 
 706:lvgl/src/lv_core/lv_refr.c ****         lv_draw_rect(&obj_ext_mask, &obj_ext_mask, &draw_dsc);
 707:lvgl/src/lv_core/lv_refr.c ****         debug_color.full *= 17;
 708:lvgl/src/lv_core/lv_refr.c ****         debug_color.full += 0xA1;
 709:lvgl/src/lv_core/lv_refr.c **** #if LV_COLOR_DEPTH == 32
 710:lvgl/src/lv_core/lv_refr.c ****         debug_color.ch.alpha = 0xff;
 711:lvgl/src/lv_core/lv_refr.c **** #endif
 712:lvgl/src/lv_core/lv_refr.c **** #endif
 713:lvgl/src/lv_core/lv_refr.c ****         /*Create a new 'obj_mask' without 'ext_size' because the children can't be visible there*/
 714:lvgl/src/lv_core/lv_refr.c ****         lv_obj_get_coords(obj, &obj_area);
 519              		.loc 1 714 9 is_stmt 1 view .LVU144
 520 0060 04A9     		add	r1, sp, #16
 521 0062 2046     		mov	r0, r4
 522 0064 FFF7FEFF 		bl	lv_obj_get_coords
 523              	.LVL47:
 715:lvgl/src/lv_core/lv_refr.c ****         union_ok = _lv_area_intersect(&obj_mask, mask_ori_p, &obj_area);
 524              		.loc 1 715 9 view .LVU145
 525              		.loc 1 715 20 is_stmt 0 view .LVU146
 526 0068 04AA     		add	r2, sp, #16
 527 006a 3146     		mov	r1, r6
 528 006c 08A8     		add	r0, sp, #32
 529 006e FFF7FEFF 		bl	_lv_area_intersect
 530              	.LVL48:
 716:lvgl/src/lv_core/lv_refr.c ****         if(union_ok != false) {
 531              		.loc 1 716 9 is_stmt 1 view .LVU147
 532              		.loc 1 716 11 is_stmt 0 view .LVU148
 533 0072 38B9     		cbnz	r0, .L43
 534              	.LVL49:
 535              	.L34:
 717:lvgl/src/lv_core/lv_refr.c ****             lv_area_t mask_child; /*Mask from obj and its child*/
 718:lvgl/src/lv_core/lv_refr.c ****             lv_obj_t * child_p;
 719:lvgl/src/lv_core/lv_refr.c ****             lv_area_t child_area;
 720:lvgl/src/lv_core/lv_refr.c ****             _LV_LL_READ_BACK(obj->child_ll, child_p) {
 721:lvgl/src/lv_core/lv_refr.c ****                 lv_obj_get_coords(child_p, &child_area);
 722:lvgl/src/lv_core/lv_refr.c ****                 ext_size = child_p->ext_draw_pad;
 723:lvgl/src/lv_core/lv_refr.c ****                 child_area.x1 -= ext_size;
 724:lvgl/src/lv_core/lv_refr.c ****                 child_area.y1 -= ext_size;
 725:lvgl/src/lv_core/lv_refr.c ****                 child_area.x2 += ext_size;
 726:lvgl/src/lv_core/lv_refr.c ****                 child_area.y2 += ext_size;
 727:lvgl/src/lv_core/lv_refr.c ****                 /* Get the union (common parts) of original mask (from obj)
 728:lvgl/src/lv_core/lv_refr.c ****                  * and its child */
 729:lvgl/src/lv_core/lv_refr.c ****                 union_ok = _lv_area_intersect(&mask_child, &obj_mask, &child_area);
 730:lvgl/src/lv_core/lv_refr.c **** 
 731:lvgl/src/lv_core/lv_refr.c ****                 /*If the parent and the child has common area then refresh the child */
 732:lvgl/src/lv_core/lv_refr.c ****                 if(union_ok) {
 733:lvgl/src/lv_core/lv_refr.c ****                     /*Refresh the next children*/
 734:lvgl/src/lv_core/lv_refr.c ****                     lv_refr_obj(child_p, &mask_child);
 735:lvgl/src/lv_core/lv_refr.c ****                 }
 736:lvgl/src/lv_core/lv_refr.c ****             }
 737:lvgl/src/lv_core/lv_refr.c ****         }
ARM GAS  D:\Temp\ccEl19zy.s 			page 32


 738:lvgl/src/lv_core/lv_refr.c **** 
 739:lvgl/src/lv_core/lv_refr.c ****         /* If all the children are redrawn make 'post draw' design */
 740:lvgl/src/lv_core/lv_refr.c ****         if(obj->design_cb) obj->design_cb(obj, &obj_ext_mask, LV_DESIGN_DRAW_POST);
 536              		.loc 1 740 9 is_stmt 1 view .LVU149
 537              		.loc 1 740 15 is_stmt 0 view .LVU150
 538 0074 236A     		ldr	r3, [r4, #32]
 539              		.loc 1 740 11 view .LVU151
 540 0076 1BB1     		cbz	r3, .L29
 541              		.loc 1 740 28 is_stmt 1 discriminator 1 view .LVU152
 542 0078 0122     		movs	r2, #1
 543 007a 06A9     		add	r1, sp, #24
 544 007c 2046     		mov	r0, r4
 545 007e 9847     		blx	r3
 546              	.LVL50:
 547              	.L29:
 741:lvgl/src/lv_core/lv_refr.c ****     }
 742:lvgl/src/lv_core/lv_refr.c **** }
 548              		.loc 1 742 1 is_stmt 0 view .LVU153
 549 0080 0AB0     		add	sp, sp, #40
 550              	.LCFI6:
 551              		.cfi_remember_state
 552              		.cfi_def_cfa_offset 16
 553              		@ sp needed
 554 0082 70BD     		pop	{r4, r5, r6, pc}
 555              	.LVL51:
 556              	.L43:
 557              	.LCFI7:
 558              		.cfi_restore_state
 559              	.LBB66:
 717:lvgl/src/lv_core/lv_refr.c ****             lv_area_t mask_child; /*Mask from obj and its child*/
 560              		.loc 1 717 13 is_stmt 1 view .LVU154
 718:lvgl/src/lv_core/lv_refr.c ****             lv_area_t child_area;
 561              		.loc 1 718 13 view .LVU155
 719:lvgl/src/lv_core/lv_refr.c ****             _LV_LL_READ_BACK(obj->child_ll, child_p) {
 562              		.loc 1 719 13 view .LVU156
 720:lvgl/src/lv_core/lv_refr.c ****                 lv_obj_get_coords(child_p, &child_area);
 563              		.loc 1 720 13 view .LVU157
 564 0084 261D     		adds	r6, r4, #4
 565              	.LVL52:
 720:lvgl/src/lv_core/lv_refr.c ****                 lv_obj_get_coords(child_p, &child_area);
 566              		.loc 1 720 13 is_stmt 0 view .LVU158
 567 0086 3046     		mov	r0, r6
 568              	.LVL53:
 720:lvgl/src/lv_core/lv_refr.c ****                 lv_obj_get_coords(child_p, &child_area);
 569              		.loc 1 720 13 view .LVU159
 570 0088 FFF7FEFF 		bl	_lv_ll_get_tail
 571              	.LVL54:
 572 008c 0546     		mov	r5, r0
 573              	.LVL55:
 720:lvgl/src/lv_core/lv_refr.c ****                 lv_obj_get_coords(child_p, &child_area);
 574              		.loc 1 720 13 view .LVU160
 575 008e 08E0     		b	.L35
 576              	.LVL56:
 577              	.L44:
 734:lvgl/src/lv_core/lv_refr.c ****                 }
 578              		.loc 1 734 21 is_stmt 1 view .LVU161
 579 0090 6946     		mov	r1, sp
ARM GAS  D:\Temp\ccEl19zy.s 			page 33


 580 0092 2846     		mov	r0, r5
 581              	.LVL57:
 734:lvgl/src/lv_core/lv_refr.c ****                 }
 582              		.loc 1 734 21 is_stmt 0 view .LVU162
 583 0094 FFF7B4FF 		bl	lv_refr_obj
 584              	.LVL58:
 585              	.L36:
 720:lvgl/src/lv_core/lv_refr.c ****                 lv_obj_get_coords(child_p, &child_area);
 586              		.loc 1 720 13 discriminator 2 view .LVU163
 587 0098 2946     		mov	r1, r5
 588 009a 3046     		mov	r0, r6
 589 009c FFF7FEFF 		bl	_lv_ll_get_prev
 590              	.LVL59:
 591 00a0 0546     		mov	r5, r0
 592              	.LVL60:
 593              	.L35:
 720:lvgl/src/lv_core/lv_refr.c ****                 lv_obj_get_coords(child_p, &child_area);
 594              		.loc 1 720 13 discriminator 1 view .LVU164
 595 00a2 002D     		cmp	r5, #0
 596 00a4 E6D0     		beq	.L34
 721:lvgl/src/lv_core/lv_refr.c ****                 ext_size = child_p->ext_draw_pad;
 597              		.loc 1 721 17 is_stmt 1 view .LVU165
 598 00a6 02A9     		add	r1, sp, #8
 599 00a8 2846     		mov	r0, r5
 721:lvgl/src/lv_core/lv_refr.c ****                 ext_size = child_p->ext_draw_pad;
 600              		.loc 1 721 17 is_stmt 0 view .LVU166
 601 00aa FFF7FEFF 		bl	lv_obj_get_coords
 602              	.LVL61:
 722:lvgl/src/lv_core/lv_refr.c ****                 child_area.x1 -= ext_size;
 603              		.loc 1 722 17 is_stmt 1 view .LVU167
 722:lvgl/src/lv_core/lv_refr.c ****                 child_area.x1 -= ext_size;
 604              		.loc 1 722 26 is_stmt 0 view .LVU168
 605 00ae B5F93230 		ldrsh	r3, [r5, #50]
 606              	.LVL62:
 723:lvgl/src/lv_core/lv_refr.c ****                 child_area.y1 -= ext_size;
 607              		.loc 1 723 17 is_stmt 1 view .LVU169
 723:lvgl/src/lv_core/lv_refr.c ****                 child_area.y1 -= ext_size;
 608              		.loc 1 723 31 is_stmt 0 view .LVU170
 609 00b2 9BB2     		uxth	r3, r3
 723:lvgl/src/lv_core/lv_refr.c ****                 child_area.y1 -= ext_size;
 610              		.loc 1 723 31 view .LVU171
 611 00b4 BDF80820 		ldrh	r2, [sp, #8]
 612 00b8 D21A     		subs	r2, r2, r3
 613 00ba ADF80820 		strh	r2, [sp, #8]	@ movhi
 724:lvgl/src/lv_core/lv_refr.c ****                 child_area.x2 += ext_size;
 614              		.loc 1 724 17 is_stmt 1 view .LVU172
 724:lvgl/src/lv_core/lv_refr.c ****                 child_area.x2 += ext_size;
 615              		.loc 1 724 31 is_stmt 0 view .LVU173
 616 00be BDF80A20 		ldrh	r2, [sp, #10]
 617 00c2 D21A     		subs	r2, r2, r3
 618 00c4 ADF80A20 		strh	r2, [sp, #10]	@ movhi
 725:lvgl/src/lv_core/lv_refr.c ****                 child_area.y2 += ext_size;
 619              		.loc 1 725 17 is_stmt 1 view .LVU174
 725:lvgl/src/lv_core/lv_refr.c ****                 child_area.y2 += ext_size;
 620              		.loc 1 725 31 is_stmt 0 view .LVU175
 621 00c8 BDF80C20 		ldrh	r2, [sp, #12]
 622 00cc 1A44     		add	r2, r2, r3
ARM GAS  D:\Temp\ccEl19zy.s 			page 34


 623 00ce ADF80C20 		strh	r2, [sp, #12]	@ movhi
 726:lvgl/src/lv_core/lv_refr.c ****                 /* Get the union (common parts) of original mask (from obj)
 624              		.loc 1 726 17 is_stmt 1 view .LVU176
 726:lvgl/src/lv_core/lv_refr.c ****                 /* Get the union (common parts) of original mask (from obj)
 625              		.loc 1 726 31 is_stmt 0 view .LVU177
 626 00d2 BDF80E20 		ldrh	r2, [sp, #14]
 627 00d6 1344     		add	r3, r3, r2
 628              	.LVL63:
 726:lvgl/src/lv_core/lv_refr.c ****                 /* Get the union (common parts) of original mask (from obj)
 629              		.loc 1 726 31 view .LVU178
 630 00d8 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 729:lvgl/src/lv_core/lv_refr.c **** 
 631              		.loc 1 729 17 is_stmt 1 view .LVU179
 729:lvgl/src/lv_core/lv_refr.c **** 
 632              		.loc 1 729 28 is_stmt 0 view .LVU180
 633 00dc 02AA     		add	r2, sp, #8
 634 00de 08A9     		add	r1, sp, #32
 635 00e0 6846     		mov	r0, sp
 636 00e2 FFF7FEFF 		bl	_lv_area_intersect
 637              	.LVL64:
 732:lvgl/src/lv_core/lv_refr.c ****                     /*Refresh the next children*/
 638              		.loc 1 732 17 is_stmt 1 view .LVU181
 732:lvgl/src/lv_core/lv_refr.c ****                     /*Refresh the next children*/
 639              		.loc 1 732 19 is_stmt 0 view .LVU182
 640 00e6 0028     		cmp	r0, #0
 641 00e8 D6D0     		beq	.L36
 642 00ea D1E7     		b	.L44
 643              	.LBE66:
 644              		.cfi_endproc
 645              	.LFE476:
 647              		.section	.text.lv_refr_obj_and_children,"ax",%progbits
 648              		.align	1
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 652              		.fpu fpv4-sp-d16
 654              	lv_refr_obj_and_children:
 655              	.LVL65:
 656              	.LFB475:
 628:lvgl/src/lv_core/lv_refr.c ****     /* Normally always will be a top_obj (at least the screen)
 657              		.loc 1 628 1 is_stmt 1 view -0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 628:lvgl/src/lv_core/lv_refr.c ****     /* Normally always will be a top_obj (at least the screen)
 661              		.loc 1 628 1 is_stmt 0 view .LVU184
 662 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 663              	.LCFI8:
 664              		.cfi_def_cfa_offset 24
 665              		.cfi_offset 3, -24
 666              		.cfi_offset 4, -20
 667              		.cfi_offset 5, -16
 668              		.cfi_offset 6, -12
 669              		.cfi_offset 7, -8
 670              		.cfi_offset 14, -4
 671 0002 0E46     		mov	r6, r1
 632:lvgl/src/lv_core/lv_refr.c ****     if(top_p == NULL) return;  /*Shouldn't happen*/
ARM GAS  D:\Temp\ccEl19zy.s 			page 35


 672              		.loc 1 632 5 is_stmt 1 view .LVU185
 632:lvgl/src/lv_core/lv_refr.c ****     if(top_p == NULL) return;  /*Shouldn't happen*/
 673              		.loc 1 632 7 is_stmt 0 view .LVU186
 674 0004 0446     		mov	r4, r0
 675 0006 48B1     		cbz	r0, .L54
 676              	.LVL66:
 677              	.L46:
 633:lvgl/src/lv_core/lv_refr.c **** 
 678              		.loc 1 633 5 is_stmt 1 view .LVU187
 633:lvgl/src/lv_core/lv_refr.c **** 
 679              		.loc 1 633 7 is_stmt 0 view .LVU188
 680 0008 64B3     		cbz	r4, .L45
 636:lvgl/src/lv_core/lv_refr.c **** 
 681              		.loc 1 636 5 is_stmt 1 view .LVU189
 682 000a 3146     		mov	r1, r6
 683 000c 2046     		mov	r0, r4
 636:lvgl/src/lv_core/lv_refr.c **** 
 684              		.loc 1 636 5 is_stmt 0 view .LVU190
 685 000e FFF7FEFF 		bl	lv_refr_obj
 686              	.LVL67:
 639:lvgl/src/lv_core/lv_refr.c ****     lv_obj_t * border_p = top_p;
 687              		.loc 1 639 5 is_stmt 1 view .LVU191
 640:lvgl/src/lv_core/lv_refr.c **** 
 688              		.loc 1 640 5 view .LVU192
 642:lvgl/src/lv_core/lv_refr.c **** 
 689              		.loc 1 642 5 view .LVU193
 642:lvgl/src/lv_core/lv_refr.c **** 
 690              		.loc 1 642 11 is_stmt 0 view .LVU194
 691 0012 2046     		mov	r0, r4
 692 0014 FFF7FEFF 		bl	lv_obj_get_parent
 693              	.LVL68:
 694 0018 0746     		mov	r7, r0
 695              	.LVL69:
 645:lvgl/src/lv_core/lv_refr.c ****         /*object before border_p has to be redrawn*/
 696              		.loc 1 645 5 is_stmt 1 view .LVU195
 645:lvgl/src/lv_core/lv_refr.c ****         /*object before border_p has to be redrawn*/
 697              		.loc 1 645 10 is_stmt 0 view .LVU196
 698 001a 10E0     		b	.L48
 699              	.LVL70:
 700              	.L54:
 632:lvgl/src/lv_core/lv_refr.c ****     if(top_p == NULL) return;  /*Shouldn't happen*/
 701              		.loc 1 632 23 is_stmt 1 discriminator 1 view .LVU197
 632:lvgl/src/lv_core/lv_refr.c ****     if(top_p == NULL) return;  /*Shouldn't happen*/
 702              		.loc 1 632 31 is_stmt 0 discriminator 1 view .LVU198
 703 001c 124B     		ldr	r3, .L56
 704 001e 1868     		ldr	r0, [r3]
 705              	.LVL71:
 632:lvgl/src/lv_core/lv_refr.c ****     if(top_p == NULL) return;  /*Shouldn't happen*/
 706              		.loc 1 632 31 discriminator 1 view .LVU199
 707 0020 FFF7FEFF 		bl	lv_disp_get_scr_act
 708              	.LVL72:
 632:lvgl/src/lv_core/lv_refr.c ****     if(top_p == NULL) return;  /*Shouldn't happen*/
 709              		.loc 1 632 31 discriminator 1 view .LVU200
 710 0024 0446     		mov	r4, r0
 711              	.LVL73:
 632:lvgl/src/lv_core/lv_refr.c ****     if(top_p == NULL) return;  /*Shouldn't happen*/
 712              		.loc 1 632 31 discriminator 1 view .LVU201
ARM GAS  D:\Temp\ccEl19zy.s 			page 36


 713 0026 EFE7     		b	.L46
 714              	.LVL74:
 715              	.L55:
 716              	.LBB67:
 656:lvgl/src/lv_core/lv_refr.c **** 
 717              		.loc 1 656 9 is_stmt 1 view .LVU202
 656:lvgl/src/lv_core/lv_refr.c **** 
 718              		.loc 1 656 15 is_stmt 0 view .LVU203
 719 0028 3B6A     		ldr	r3, [r7, #32]
 656:lvgl/src/lv_core/lv_refr.c **** 
 720              		.loc 1 656 11 view .LVU204
 721 002a 1BB1     		cbz	r3, .L51
 656:lvgl/src/lv_core/lv_refr.c **** 
 722              		.loc 1 656 28 is_stmt 1 discriminator 1 view .LVU205
 723 002c 0122     		movs	r2, #1
 724 002e 3146     		mov	r1, r6
 725 0030 3846     		mov	r0, r7
 726              	.LVL75:
 656:lvgl/src/lv_core/lv_refr.c **** 
 727              		.loc 1 656 28 is_stmt 0 discriminator 1 view .LVU206
 728 0032 9847     		blx	r3
 729              	.LVL76:
 730              	.L51:
 660:lvgl/src/lv_core/lv_refr.c ****         /*Go a level deeper*/
 731              		.loc 1 660 9 is_stmt 1 view .LVU207
 662:lvgl/src/lv_core/lv_refr.c ****     }
 732              		.loc 1 662 9 view .LVU208
 662:lvgl/src/lv_core/lv_refr.c ****     }
 733              		.loc 1 662 15 is_stmt 0 view .LVU209
 734 0034 3846     		mov	r0, r7
 735 0036 FFF7FEFF 		bl	lv_obj_get_parent
 736              	.LVL77:
 660:lvgl/src/lv_core/lv_refr.c ****         /*Go a level deeper*/
 737              		.loc 1 660 18 view .LVU210
 738 003a 3C46     		mov	r4, r7
 739              	.LVL78:
 662:lvgl/src/lv_core/lv_refr.c ****     }
 740              		.loc 1 662 15 view .LVU211
 741 003c 0746     		mov	r7, r0
 742              	.LVL79:
 743              	.L48:
 662:lvgl/src/lv_core/lv_refr.c ****     }
 744              		.loc 1 662 15 view .LVU212
 745              	.LBE67:
 645:lvgl/src/lv_core/lv_refr.c ****         /*object before border_p has to be redrawn*/
 746              		.loc 1 645 10 view .LVU213
 747 003e 8FB1     		cbz	r7, .L45
 748              	.LBB68:
 647:lvgl/src/lv_core/lv_refr.c **** 
 749              		.loc 1 647 9 is_stmt 1 view .LVU214
 647:lvgl/src/lv_core/lv_refr.c **** 
 750              		.loc 1 647 40 is_stmt 0 view .LVU215
 751 0040 3D1D     		adds	r5, r7, #4
 647:lvgl/src/lv_core/lv_refr.c **** 
 752              		.loc 1 647 24 view .LVU216
 753 0042 2146     		mov	r1, r4
 754 0044 2846     		mov	r0, r5
ARM GAS  D:\Temp\ccEl19zy.s 			page 37


 755              	.LVL80:
 647:lvgl/src/lv_core/lv_refr.c **** 
 756              		.loc 1 647 24 view .LVU217
 757 0046 FFF7FEFF 		bl	_lv_ll_get_prev
 758              	.LVL81:
 759 004a 0446     		mov	r4, r0
 760              	.LVL82:
 649:lvgl/src/lv_core/lv_refr.c ****             /*Refresh the objects*/
 761              		.loc 1 649 9 is_stmt 1 view .LVU218
 762              	.L49:
 649:lvgl/src/lv_core/lv_refr.c ****             /*Refresh the objects*/
 763              		.loc 1 649 14 is_stmt 0 view .LVU219
 764 004c 002C     		cmp	r4, #0
 765 004e EBD0     		beq	.L55
 651:lvgl/src/lv_core/lv_refr.c ****             i = _lv_ll_get_prev(&(par->child_ll), i);
 766              		.loc 1 651 13 is_stmt 1 view .LVU220
 767 0050 3146     		mov	r1, r6
 768 0052 2046     		mov	r0, r4
 651:lvgl/src/lv_core/lv_refr.c ****             i = _lv_ll_get_prev(&(par->child_ll), i);
 769              		.loc 1 651 13 is_stmt 0 view .LVU221
 770 0054 FFF7FEFF 		bl	lv_refr_obj
 771              	.LVL83:
 652:lvgl/src/lv_core/lv_refr.c ****         }
 772              		.loc 1 652 13 is_stmt 1 view .LVU222
 652:lvgl/src/lv_core/lv_refr.c ****         }
 773              		.loc 1 652 17 is_stmt 0 view .LVU223
 774 0058 2146     		mov	r1, r4
 775 005a 2846     		mov	r0, r5
 776 005c FFF7FEFF 		bl	_lv_ll_get_prev
 777              	.LVL84:
 778 0060 0446     		mov	r4, r0
 779              	.LVL85:
 652:lvgl/src/lv_core/lv_refr.c ****         }
 780              		.loc 1 652 17 view .LVU224
 781 0062 F3E7     		b	.L49
 782              	.LVL86:
 783              	.L45:
 652:lvgl/src/lv_core/lv_refr.c ****         }
 784              		.loc 1 652 17 view .LVU225
 785              	.LBE68:
 664:lvgl/src/lv_core/lv_refr.c **** 
 786              		.loc 1 664 1 view .LVU226
 787 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 788              	.LVL87:
 789              	.L57:
 664:lvgl/src/lv_core/lv_refr.c **** 
 790              		.loc 1 664 1 view .LVU227
 791 0066 00BF     		.align	2
 792              	.L56:
 793 0068 00000000 		.word	.LANCHOR0
 794              		.cfi_endproc
 795              	.LFE475:
 797              		.section	.text._lv_refr_init,"ax",%progbits
 798              		.align	1
 799              		.global	_lv_refr_init
 800              		.syntax unified
 801              		.thumb
ARM GAS  D:\Temp\ccEl19zy.s 			page 38


 802              		.thumb_func
 803              		.fpu fpv4-sp-d16
 805              	_lv_refr_init:
 806              	.LFB463:
  70:lvgl/src/lv_core/lv_refr.c ****     /*Nothing to do*/
 807              		.loc 1 70 1 is_stmt 1 view -0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              		@ link register save eliminated.
  72:lvgl/src/lv_core/lv_refr.c **** 
 812              		.loc 1 72 1 view .LVU229
 813 0000 7047     		bx	lr
 814              		.cfi_endproc
 815              	.LFE463:
 817              		.section	.text._lv_inv_area,"ax",%progbits
 818              		.align	1
 819              		.global	_lv_inv_area
 820              		.syntax unified
 821              		.thumb
 822              		.thumb_func
 823              		.fpu fpv4-sp-d16
 825              	_lv_inv_area:
 826              	.LVL88:
 827              	.LFB465:
 107:lvgl/src/lv_core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 828              		.loc 1 107 1 view -0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 16
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 107:lvgl/src/lv_core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 832              		.loc 1 107 1 is_stmt 0 view .LVU231
 833 0000 30B5     		push	{r4, r5, lr}
 834              	.LCFI9:
 835              		.cfi_def_cfa_offset 12
 836              		.cfi_offset 4, -12
 837              		.cfi_offset 5, -8
 838              		.cfi_offset 14, -4
 839 0002 85B0     		sub	sp, sp, #20
 840              	.LCFI10:
 841              		.cfi_def_cfa_offset 32
 842 0004 0C46     		mov	r4, r1
 108:lvgl/src/lv_core/lv_refr.c ****     if(!disp) return;
 843              		.loc 1 108 5 is_stmt 1 view .LVU232
 108:lvgl/src/lv_core/lv_refr.c ****     if(!disp) return;
 844              		.loc 1 108 7 is_stmt 0 view .LVU233
 845 0006 0546     		mov	r5, r0
 846 0008 A0B3     		cbz	r0, .L75
 847              	.LVL89:
 848              	.L60:
 109:lvgl/src/lv_core/lv_refr.c **** 
 849              		.loc 1 109 5 is_stmt 1 view .LVU234
 109:lvgl/src/lv_core/lv_refr.c **** 
 850              		.loc 1 109 7 is_stmt 0 view .LVU235
 851 000a 002D     		cmp	r5, #0
 852 000c 3CD0     		beq	.L59
 112:lvgl/src/lv_core/lv_refr.c ****         disp->inv_p = 0;
ARM GAS  D:\Temp\ccEl19zy.s 			page 39


 853              		.loc 1 112 5 is_stmt 1 view .LVU236
 112:lvgl/src/lv_core/lv_refr.c ****         disp->inv_p = 0;
 854              		.loc 1 112 7 is_stmt 0 view .LVU237
 855 000e ACB3     		cbz	r4, .L76
 117:lvgl/src/lv_core/lv_refr.c ****     scr_area.x1 = 0;
 856              		.loc 1 117 5 is_stmt 1 view .LVU238
 118:lvgl/src/lv_core/lv_refr.c ****     scr_area.y1 = 0;
 857              		.loc 1 118 5 view .LVU239
 118:lvgl/src/lv_core/lv_refr.c ****     scr_area.y1 = 0;
 858              		.loc 1 118 17 is_stmt 0 view .LVU240
 859 0010 0023     		movs	r3, #0
 860 0012 ADF80830 		strh	r3, [sp, #8]	@ movhi
 119:lvgl/src/lv_core/lv_refr.c ****     scr_area.x2 = lv_disp_get_hor_res(disp) - 1;
 861              		.loc 1 119 5 is_stmt 1 view .LVU241
 119:lvgl/src/lv_core/lv_refr.c ****     scr_area.x2 = lv_disp_get_hor_res(disp) - 1;
 862              		.loc 1 119 17 is_stmt 0 view .LVU242
 863 0016 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 120:lvgl/src/lv_core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 864              		.loc 1 120 5 is_stmt 1 view .LVU243
 120:lvgl/src/lv_core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 865              		.loc 1 120 19 is_stmt 0 view .LVU244
 866 001a 2846     		mov	r0, r5
 120:lvgl/src/lv_core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 867              		.loc 1 120 19 view .LVU245
 868 001c FFF7FEFF 		bl	lv_disp_get_hor_res
 869              	.LVL90:
 120:lvgl/src/lv_core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 870              		.loc 1 120 19 view .LVU246
 871 0020 80B2     		uxth	r0, r0
 120:lvgl/src/lv_core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 872              		.loc 1 120 45 view .LVU247
 873 0022 0138     		subs	r0, r0, #1
 120:lvgl/src/lv_core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 874              		.loc 1 120 17 view .LVU248
 875 0024 ADF80C00 		strh	r0, [sp, #12]	@ movhi
 121:lvgl/src/lv_core/lv_refr.c **** 
 876              		.loc 1 121 5 is_stmt 1 view .LVU249
 121:lvgl/src/lv_core/lv_refr.c **** 
 877              		.loc 1 121 19 is_stmt 0 view .LVU250
 878 0028 2846     		mov	r0, r5
 879 002a FFF7FEFF 		bl	lv_disp_get_ver_res
 880              	.LVL91:
 881 002e 80B2     		uxth	r0, r0
 121:lvgl/src/lv_core/lv_refr.c **** 
 882              		.loc 1 121 45 view .LVU251
 883 0030 0138     		subs	r0, r0, #1
 121:lvgl/src/lv_core/lv_refr.c **** 
 884              		.loc 1 121 17 view .LVU252
 885 0032 ADF80E00 		strh	r0, [sp, #14]	@ movhi
 123:lvgl/src/lv_core/lv_refr.c ****     bool suc;
 886              		.loc 1 123 5 is_stmt 1 view .LVU253
 124:lvgl/src/lv_core/lv_refr.c **** 
 887              		.loc 1 124 5 view .LVU254
 126:lvgl/src/lv_core/lv_refr.c **** 
 888              		.loc 1 126 5 view .LVU255
 126:lvgl/src/lv_core/lv_refr.c **** 
 889              		.loc 1 126 11 is_stmt 0 view .LVU256
ARM GAS  D:\Temp\ccEl19zy.s 			page 40


 890 0036 02AA     		add	r2, sp, #8
 891 0038 2146     		mov	r1, r4
 892 003a 6846     		mov	r0, sp
 893 003c FFF7FEFF 		bl	_lv_area_intersect
 894              	.LVL92:
 129:lvgl/src/lv_core/lv_refr.c ****         if(disp->driver.rounder_cb) disp->driver.rounder_cb(&disp->driver, &com_area);
 895              		.loc 1 129 5 is_stmt 1 view .LVU257
 129:lvgl/src/lv_core/lv_refr.c ****         if(disp->driver.rounder_cb) disp->driver.rounder_cb(&disp->driver, &com_area);
 896              		.loc 1 129 7 is_stmt 0 view .LVU258
 897 0040 10B3     		cbz	r0, .L59
 898              	.LBB69:
 130:lvgl/src/lv_core/lv_refr.c **** 
 899              		.loc 1 130 9 is_stmt 1 view .LVU259
 130:lvgl/src/lv_core/lv_refr.c **** 
 900              		.loc 1 130 24 is_stmt 0 view .LVU260
 901 0042 2B69     		ldr	r3, [r5, #16]
 130:lvgl/src/lv_core/lv_refr.c **** 
 902              		.loc 1 130 11 view .LVU261
 903 0044 13B1     		cbz	r3, .L64
 130:lvgl/src/lv_core/lv_refr.c **** 
 904              		.loc 1 130 37 is_stmt 1 discriminator 1 view .LVU262
 905 0046 6946     		mov	r1, sp
 906 0048 2846     		mov	r0, r5
 907              	.LVL93:
 130:lvgl/src/lv_core/lv_refr.c **** 
 908              		.loc 1 130 37 is_stmt 0 discriminator 1 view .LVU263
 909 004a 9847     		blx	r3
 910              	.LVL94:
 911              	.L64:
 912              	.LBE69:
 107:lvgl/src/lv_core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 913              		.loc 1 107 1 discriminator 1 view .LVU264
 914 004c 0024     		movs	r4, #0
 915              	.LVL95:
 916              	.L65:
 917              	.LBB84:
 134:lvgl/src/lv_core/lv_refr.c ****             if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 918              		.loc 1 134 28 discriminator 1 view .LVU265
 919 004e B5F88231 		ldrh	r3, [r5, #386]
 920 0052 C3F30903 		ubfx	r3, r3, #0, #10
 134:lvgl/src/lv_core/lv_refr.c ****             if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 921              		.loc 1 134 9 discriminator 1 view .LVU266
 922 0056 A342     		cmp	r3, r4
 923 0058 18D9     		bls	.L77
 135:lvgl/src/lv_core/lv_refr.c ****         }
 924              		.loc 1 135 13 is_stmt 1 view .LVU267
 135:lvgl/src/lv_core/lv_refr.c ****         }
 925              		.loc 1 135 42 is_stmt 0 view .LVU268
 926 005a 04F10C01 		add	r1, r4, #12
 927 005e 05EBC101 		add	r1, r5, r1, lsl #3
 135:lvgl/src/lv_core/lv_refr.c ****         }
 928              		.loc 1 135 16 view .LVU269
 929 0062 0022     		movs	r2, #0
 930 0064 0231     		adds	r1, r1, #2
 931 0066 6846     		mov	r0, sp
 932 0068 FFF7FEFF 		bl	_lv_area_is_in
 933              	.LVL96:
ARM GAS  D:\Temp\ccEl19zy.s 			page 41


 135:lvgl/src/lv_core/lv_refr.c ****         }
 934              		.loc 1 135 15 view .LVU270
 935 006c 60B9     		cbnz	r0, .L59
 134:lvgl/src/lv_core/lv_refr.c ****             if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 936              		.loc 1 134 38 discriminator 2 view .LVU271
 937 006e 0134     		adds	r4, r4, #1
 938              	.LVL97:
 134:lvgl/src/lv_core/lv_refr.c ****             if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 939              		.loc 1 134 38 discriminator 2 view .LVU272
 940 0070 A4B2     		uxth	r4, r4
 941              	.LVL98:
 134:lvgl/src/lv_core/lv_refr.c ****             if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 942              		.loc 1 134 38 discriminator 2 view .LVU273
 943 0072 ECE7     		b	.L65
 944              	.LVL99:
 945              	.L75:
 134:lvgl/src/lv_core/lv_refr.c ****             if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 946              		.loc 1 134 38 discriminator 2 view .LVU274
 947              	.LBE84:
 108:lvgl/src/lv_core/lv_refr.c ****     if(!disp) return;
 948              		.loc 1 108 15 is_stmt 1 discriminator 1 view .LVU275
 108:lvgl/src/lv_core/lv_refr.c ****     if(!disp) return;
 949              		.loc 1 108 22 is_stmt 0 discriminator 1 view .LVU276
 950 0074 FFF7FEFF 		bl	lv_disp_get_default
 951              	.LVL100:
 108:lvgl/src/lv_core/lv_refr.c ****     if(!disp) return;
 952              		.loc 1 108 22 discriminator 1 view .LVU277
 953 0078 0546     		mov	r5, r0
 954              	.LVL101:
 108:lvgl/src/lv_core/lv_refr.c ****     if(!disp) return;
 955              		.loc 1 108 22 discriminator 1 view .LVU278
 956 007a C6E7     		b	.L60
 957              	.L76:
 113:lvgl/src/lv_core/lv_refr.c ****         return;
 958              		.loc 1 113 9 is_stmt 1 view .LVU279
 113:lvgl/src/lv_core/lv_refr.c ****         return;
 959              		.loc 1 113 21 is_stmt 0 view .LVU280
 960 007c B5F88231 		ldrh	r3, [r5, #386]
 961 0080 6FF30903 		bfc	r3, #0, #10
 962 0084 A5F88231 		strh	r3, [r5, #386]	@ movhi
 114:lvgl/src/lv_core/lv_refr.c ****     }
 963              		.loc 1 114 9 is_stmt 1 view .LVU281
 964              	.LVL102:
 965              	.L59:
 149:lvgl/src/lv_core/lv_refr.c **** 
 966              		.loc 1 149 1 is_stmt 0 view .LVU282
 967 0088 05B0     		add	sp, sp, #20
 968              	.LCFI11:
 969              		.cfi_remember_state
 970              		.cfi_def_cfa_offset 12
 971              		@ sp needed
 972 008a 30BD     		pop	{r4, r5, pc}
 973              	.LVL103:
 974              	.L77:
 975              	.LCFI12:
 976              		.cfi_restore_state
 977              	.LBB85:
ARM GAS  D:\Temp\ccEl19zy.s 			page 42


 139:lvgl/src/lv_core/lv_refr.c ****             lv_area_copy(&disp->inv_areas[disp->inv_p], &com_area);
 978              		.loc 1 139 9 is_stmt 1 view .LVU283
 139:lvgl/src/lv_core/lv_refr.c ****             lv_area_copy(&disp->inv_areas[disp->inv_p], &com_area);
 979              		.loc 1 139 11 is_stmt 0 view .LVU284
 980 008c 1F2B     		cmp	r3, #31
 981 008e 1BD8     		bhi	.L67
 140:lvgl/src/lv_core/lv_refr.c ****         }
 982              		.loc 1 140 13 is_stmt 1 view .LVU285
 983 0090 0C33     		adds	r3, r3, #12
 984 0092 05EBC303 		add	r3, r5, r3, lsl #3
 985 0096 0233     		adds	r3, r3, #2
 986              	.LVL104:
 987              	.LBB70:
 988              	.LBI70:
  97:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** {
 989              		.loc 3 97 20 view .LVU286
 990              	.LBE70:
 991              	.LBE85:
 992              		.loc 3 99 5 view .LVU287
 993              	.LBB86:
 994              	.LBB75:
 995              	.LBB71:
 996              	.LBI71:
 213:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** {
 997              		.loc 2 213 44 view .LVU288
 998              	.LBB72:
 215:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 999              		.loc 2 215 5 view .LVU289
 216:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 1000              		.loc 2 216 5 view .LVU290
 218:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1001              		.loc 2 218 5 view .LVU291
 216:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 1002              		.loc 2 216 21 is_stmt 0 view .LVU292
 1003 0098 6946     		mov	r1, sp
 1004              	.LBE72:
 1005              	.LBE71:
 1006              	.LBE75:
 140:lvgl/src/lv_core/lv_refr.c ****         }
 1007              		.loc 1 140 13 view .LVU293
 1008 009a 0822     		movs	r2, #8
 1009 009c 04E0     		b	.L68
 1010              	.LVL105:
 1011              	.L69:
 1012              	.LBB76:
 1013              	.LBB74:
 1014              	.LBB73:
 219:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         d8++;
 1015              		.loc 2 219 9 is_stmt 1 view .LVU294
 219:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         d8++;
 1016              		.loc 2 219 15 is_stmt 0 view .LVU295
 1017 009e 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 1018              	.LVL106:
 219:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         d8++;
 1019              		.loc 2 219 13 view .LVU296
 1020 00a2 03F8010B 		strb	r0, [r3], #1
 1021              	.LVL107:
ARM GAS  D:\Temp\ccEl19zy.s 			page 43


 220:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         s8++;
 1022              		.loc 2 220 9 is_stmt 1 view .LVU297
 221:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         len--;
 1023              		.loc 2 221 9 view .LVU298
 222:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     }
 1024              		.loc 2 222 9 view .LVU299
 222:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     }
 1025              		.loc 2 222 12 is_stmt 0 view .LVU300
 1026 00a6 013A     		subs	r2, r2, #1
 1027              	.LVL108:
 1028              	.L68:
 218:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1029              		.loc 2 218 10 view .LVU301
 1030 00a8 002A     		cmp	r2, #0
 1031 00aa F8D1     		bne	.L69
 1032              	.LVL109:
 1033              	.L70:
 218:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1034              		.loc 2 218 10 view .LVU302
 1035              	.LBE73:
 1036              	.LBE74:
 1037              	.LBE76:
 146:lvgl/src/lv_core/lv_refr.c ****         lv_task_set_prio(disp->refr_task, LV_REFR_TASK_PRIO);
 1038              		.loc 1 146 9 is_stmt 1 view .LVU303
 146:lvgl/src/lv_core/lv_refr.c ****         lv_task_set_prio(disp->refr_task, LV_REFR_TASK_PRIO);
 1039              		.loc 1 146 13 is_stmt 0 view .LVU304
 1040 00ac B5F88231 		ldrh	r3, [r5, #386]
 1041 00b0 C3F30902 		ubfx	r2, r3, #0, #10
 146:lvgl/src/lv_core/lv_refr.c ****         lv_task_set_prio(disp->refr_task, LV_REFR_TASK_PRIO);
 1042              		.loc 1 146 20 view .LVU305
 1043 00b4 0132     		adds	r2, r2, #1
 1044 00b6 62F30903 		bfi	r3, r2, #0, #10
 1045 00ba A5F88231 		strh	r3, [r5, #386]	@ movhi
 147:lvgl/src/lv_core/lv_refr.c ****     }
 1046              		.loc 1 147 9 is_stmt 1 view .LVU306
 1047 00be 0321     		movs	r1, #3
 1048 00c0 686B     		ldr	r0, [r5, #52]
 1049 00c2 FFF7FEFF 		bl	lv_task_set_prio
 1050              	.LVL110:
 1051 00c6 DFE7     		b	.L59
 1052              	.L67:
 143:lvgl/src/lv_core/lv_refr.c ****             lv_area_copy(&disp->inv_areas[disp->inv_p], &scr_area);
 1053              		.loc 1 143 13 view .LVU307
 143:lvgl/src/lv_core/lv_refr.c ****             lv_area_copy(&disp->inv_areas[disp->inv_p], &scr_area);
 1054              		.loc 1 143 25 is_stmt 0 view .LVU308
 1055 00c8 B5F88231 		ldrh	r3, [r5, #386]
 1056 00cc 6FF30903 		bfc	r3, #0, #10
 1057 00d0 A5F88231 		strh	r3, [r5, #386]	@ movhi
 144:lvgl/src/lv_core/lv_refr.c ****         }
 1058              		.loc 1 144 13 is_stmt 1 view .LVU309
 1059 00d4 05F16201 		add	r1, r5, #98
 1060              	.LVL111:
 1061              	.LBB77:
 1062              	.LBI77:
  97:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** {
 1063              		.loc 3 97 20 view .LVU310
 1064              	.LBE77:
ARM GAS  D:\Temp\ccEl19zy.s 			page 44


 1065              	.LBE86:
 1066              		.loc 3 99 5 view .LVU311
 1067              	.LBB87:
 1068              	.LBB82:
 1069              	.LBB78:
 1070              	.LBI78:
 213:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** {
 1071              		.loc 2 213 44 view .LVU312
 1072              	.LBB79:
 215:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 1073              		.loc 2 215 5 view .LVU313
 216:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 1074              		.loc 2 216 5 view .LVU314
 218:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1075              		.loc 2 218 5 view .LVU315
 216:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 1076              		.loc 2 216 21 is_stmt 0 view .LVU316
 1077 00d8 02AA     		add	r2, sp, #8
 1078              	.LVL112:
 216:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h **** 
 1079              		.loc 2 216 21 view .LVU317
 1080              	.LBE79:
 1081              	.LBE78:
 1082              	.LBE82:
 144:lvgl/src/lv_core/lv_refr.c ****         }
 1083              		.loc 1 144 13 view .LVU318
 1084 00da 0823     		movs	r3, #8
 1085 00dc 04E0     		b	.L71
 1086              	.LVL113:
 1087              	.L72:
 1088              	.LBB83:
 1089              	.LBB81:
 1090              	.LBB80:
 219:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         d8++;
 1091              		.loc 2 219 9 is_stmt 1 view .LVU319
 219:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         d8++;
 1092              		.loc 2 219 15 is_stmt 0 view .LVU320
 1093 00de 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1094              	.LVL114:
 219:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         d8++;
 1095              		.loc 2 219 13 view .LVU321
 1096 00e2 01F8010B 		strb	r0, [r1], #1
 1097              	.LVL115:
 220:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         s8++;
 1098              		.loc 2 220 9 is_stmt 1 view .LVU322
 221:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         len--;
 1099              		.loc 2 221 9 view .LVU323
 222:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     }
 1100              		.loc 2 222 9 view .LVU324
 222:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****     }
 1101              		.loc 2 222 12 is_stmt 0 view .LVU325
 1102 00e6 013B     		subs	r3, r3, #1
 1103              	.LVL116:
 1104              	.L71:
 218:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1105              		.loc 2 218 10 view .LVU326
 1106 00e8 002B     		cmp	r3, #0
ARM GAS  D:\Temp\ccEl19zy.s 			page 45


 1107 00ea F8D1     		bne	.L72
 218:lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1108              		.loc 2 218 10 view .LVU327
 1109 00ec DEE7     		b	.L70
 1110              	.LBE80:
 1111              	.LBE81:
 1112              	.LBE83:
 1113              	.LBE87:
 1114              		.cfi_endproc
 1115              	.LFE465:
 1117              		.section	.text._lv_refr_get_disp_refreshing,"ax",%progbits
 1118              		.align	1
 1119              		.global	_lv_refr_get_disp_refreshing
 1120              		.syntax unified
 1121              		.thumb
 1122              		.thumb_func
 1123              		.fpu fpv4-sp-d16
 1125              	_lv_refr_get_disp_refreshing:
 1126              	.LFB466:
 156:lvgl/src/lv_core/lv_refr.c ****     return disp_refr;
 1127              		.loc 1 156 1 is_stmt 1 view -0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131              		@ link register save eliminated.
 157:lvgl/src/lv_core/lv_refr.c **** }
 1132              		.loc 1 157 5 view .LVU329
 158:lvgl/src/lv_core/lv_refr.c **** 
 1133              		.loc 1 158 1 is_stmt 0 view .LVU330
 1134 0000 014B     		ldr	r3, .L79
 1135 0002 1868     		ldr	r0, [r3]
 1136 0004 7047     		bx	lr
 1137              	.L80:
 1138 0006 00BF     		.align	2
 1139              	.L79:
 1140 0008 00000000 		.word	.LANCHOR0
 1141              		.cfi_endproc
 1142              	.LFE466:
 1144              		.section	.text.lv_refr_vdb_flush,"ax",%progbits
 1145              		.align	1
 1146              		.syntax unified
 1147              		.thumb
 1148              		.thumb_func
 1149              		.fpu fpv4-sp-d16
 1151              	lv_refr_vdb_flush:
 1152              	.LFB477:
 743:lvgl/src/lv_core/lv_refr.c **** 
 744:lvgl/src/lv_core/lv_refr.c **** /**
 745:lvgl/src/lv_core/lv_refr.c ****  * Flush the content of the VDB
 746:lvgl/src/lv_core/lv_refr.c ****  */
 747:lvgl/src/lv_core/lv_refr.c **** static void lv_refr_vdb_flush(void)
 748:lvgl/src/lv_core/lv_refr.c **** {
 1153              		.loc 1 748 1 is_stmt 1 view -0
 1154              		.cfi_startproc
 1155              		@ args = 0, pretend = 0, frame = 0
 1156              		@ frame_needed = 0, uses_anonymous_args = 0
 1157 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  D:\Temp\ccEl19zy.s 			page 46


 1158              	.LCFI13:
 1159              		.cfi_def_cfa_offset 16
 1160              		.cfi_offset 3, -16
 1161              		.cfi_offset 4, -12
 1162              		.cfi_offset 5, -8
 1163              		.cfi_offset 14, -4
 749:lvgl/src/lv_core/lv_refr.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp_refr);
 1164              		.loc 1 749 5 view .LVU332
 1165              		.loc 1 749 27 is_stmt 0 view .LVU333
 1166 0002 1E4D     		ldr	r5, .L94
 1167 0004 2868     		ldr	r0, [r5]
 1168 0006 FFF7FEFF 		bl	lv_disp_get_buf
 1169              	.LVL117:
 1170 000a 0446     		mov	r4, r0
 1171              	.LVL118:
 750:lvgl/src/lv_core/lv_refr.c **** 
 751:lvgl/src/lv_core/lv_refr.c ****     /*In double buffered mode wait until the other buffer is flushed before flushing the current
 752:lvgl/src/lv_core/lv_refr.c ****      * one*/
 753:lvgl/src/lv_core/lv_refr.c ****     if(lv_disp_is_double_buf(disp_refr)) {
 1172              		.loc 1 753 5 is_stmt 1 view .LVU334
 1173              		.loc 1 753 8 is_stmt 0 view .LVU335
 1174 000c 2868     		ldr	r0, [r5]
 1175              	.LVL119:
 1176              		.loc 1 753 8 view .LVU336
 1177 000e FFF7FEFF 		bl	lv_disp_is_double_buf
 1178              	.LVL120:
 1179              		.loc 1 753 7 view .LVU337
 1180 0012 78B9     		cbnz	r0, .L84
 1181              	.L83:
 754:lvgl/src/lv_core/lv_refr.c ****         while(vdb->flushing) {
 755:lvgl/src/lv_core/lv_refr.c ****             if(disp_refr->driver.wait_cb) disp_refr->driver.wait_cb(&disp_refr->driver);
 756:lvgl/src/lv_core/lv_refr.c ****         }
 757:lvgl/src/lv_core/lv_refr.c ****     }
 758:lvgl/src/lv_core/lv_refr.c **** 
 759:lvgl/src/lv_core/lv_refr.c ****     vdb->flushing = 1;
 1182              		.loc 1 759 5 is_stmt 1 view .LVU338
 1183              		.loc 1 759 19 is_stmt 0 view .LVU339
 1184 0014 0123     		movs	r3, #1
 1185 0016 A361     		str	r3, [r4, #24]
 760:lvgl/src/lv_core/lv_refr.c **** 
 761:lvgl/src/lv_core/lv_refr.c ****     if(disp_refr->driver.buffer->last_area && disp_refr->driver.buffer->last_part) vdb->flushing_la
 1186              		.loc 1 761 5 is_stmt 1 view .LVU340
 1187              		.loc 1 761 17 is_stmt 0 view .LVU341
 1188 0018 184B     		ldr	r3, .L94
 1189 001a 1B68     		ldr	r3, [r3]
 1190              		.loc 1 761 25 view .LVU342
 1191 001c 5B68     		ldr	r3, [r3, #4]
 1192              		.loc 1 761 32 view .LVU343
 1193 001e 1A6A     		ldr	r2, [r3, #32]
 1194              		.loc 1 761 7 view .LVU344
 1195 0020 12F0010F 		tst	r2, #1
 1196 0024 10D0     		beq	.L86
 1197              		.loc 1 761 71 discriminator 1 view .LVU345
 1198 0026 1B6A     		ldr	r3, [r3, #32]
 1199              		.loc 1 761 44 discriminator 1 view .LVU346
 1200 0028 13F0020F 		tst	r3, #2
 1201 002c 0CD0     		beq	.L86
ARM GAS  D:\Temp\ccEl19zy.s 			page 47


 1202              		.loc 1 761 84 is_stmt 1 discriminator 2 view .LVU347
 1203              		.loc 1 761 103 is_stmt 0 discriminator 2 view .LVU348
 1204 002e 0123     		movs	r3, #1
 1205 0030 E361     		str	r3, [r4, #28]
 1206 0032 0BE0     		b	.L87
 1207              	.L84:
 754:lvgl/src/lv_core/lv_refr.c ****         while(vdb->flushing) {
 1208              		.loc 1 754 18 view .LVU349
 1209 0034 A369     		ldr	r3, [r4, #24]
 754:lvgl/src/lv_core/lv_refr.c ****         while(vdb->flushing) {
 1210              		.loc 1 754 14 view .LVU350
 1211 0036 002B     		cmp	r3, #0
 1212 0038 ECD0     		beq	.L83
 755:lvgl/src/lv_core/lv_refr.c ****         }
 1213              		.loc 1 755 13 is_stmt 1 view .LVU351
 755:lvgl/src/lv_core/lv_refr.c ****         }
 1214              		.loc 1 755 25 is_stmt 0 view .LVU352
 1215 003a 104B     		ldr	r3, .L94
 1216 003c 1868     		ldr	r0, [r3]
 755:lvgl/src/lv_core/lv_refr.c ****         }
 1217              		.loc 1 755 33 view .LVU353
 1218 003e C369     		ldr	r3, [r0, #28]
 755:lvgl/src/lv_core/lv_refr.c ****         }
 1219              		.loc 1 755 15 view .LVU354
 1220 0040 002B     		cmp	r3, #0
 1221 0042 F7D0     		beq	.L84
 755:lvgl/src/lv_core/lv_refr.c ****         }
 1222              		.loc 1 755 43 is_stmt 1 discriminator 1 view .LVU355
 1223 0044 9847     		blx	r3
 1224              	.LVL121:
 1225 0046 F5E7     		b	.L84
 1226              	.L86:
 762:lvgl/src/lv_core/lv_refr.c ****     else vdb->flushing_last = 0;
 1227              		.loc 1 762 10 view .LVU356
 1228              		.loc 1 762 29 is_stmt 0 view .LVU357
 1229 0048 0023     		movs	r3, #0
 1230 004a E361     		str	r3, [r4, #28]
 1231              	.L87:
 763:lvgl/src/lv_core/lv_refr.c **** 
 764:lvgl/src/lv_core/lv_refr.c ****     /*Flush the rendered content to the display*/
 765:lvgl/src/lv_core/lv_refr.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1232              		.loc 1 765 5 is_stmt 1 view .LVU358
 1233              		.loc 1 765 24 is_stmt 0 view .LVU359
 1234 004c FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 1235              	.LVL122:
 1236 0050 0546     		mov	r5, r0
 1237              	.LVL123:
 766:lvgl/src/lv_core/lv_refr.c ****     if(disp->driver.gpu_wait_cb) disp->driver.gpu_wait_cb(&disp->driver);
 1238              		.loc 1 766 5 is_stmt 1 view .LVU360
 1239              		.loc 1 766 20 is_stmt 0 view .LVU361
 1240 0052 436A     		ldr	r3, [r0, #36]
 1241              		.loc 1 766 7 view .LVU362
 1242 0054 03B1     		cbz	r3, .L88
 1243              		.loc 1 766 34 is_stmt 1 discriminator 1 view .LVU363
 1244 0056 9847     		blx	r3
 1245              	.LVL124:
 1246              	.L88:
ARM GAS  D:\Temp\ccEl19zy.s 			page 48


 767:lvgl/src/lv_core/lv_refr.c **** 
 768:lvgl/src/lv_core/lv_refr.c ****     if(disp->driver.flush_cb) disp->driver.flush_cb(&disp->driver, &vdb->area, vdb->buf_act);
 1247              		.loc 1 768 5 view .LVU364
 1248              		.loc 1 768 20 is_stmt 0 view .LVU365
 1249 0058 EB68     		ldr	r3, [r5, #12]
 1250              		.loc 1 768 7 view .LVU366
 1251 005a 23B1     		cbz	r3, .L89
 1252              		.loc 1 768 31 is_stmt 1 discriminator 1 view .LVU367
 1253 005c A268     		ldr	r2, [r4, #8]
 1254 005e 04F11001 		add	r1, r4, #16
 1255 0062 2846     		mov	r0, r5
 1256 0064 9847     		blx	r3
 1257              	.LVL125:
 1258              	.L89:
 769:lvgl/src/lv_core/lv_refr.c **** 
 770:lvgl/src/lv_core/lv_refr.c ****     if(vdb->buf1 && vdb->buf2) {
 1259              		.loc 1 770 5 view .LVU368
 1260              		.loc 1 770 11 is_stmt 0 view .LVU369
 1261 0066 2368     		ldr	r3, [r4]
 1262              		.loc 1 770 7 view .LVU370
 1263 0068 2BB1     		cbz	r3, .L81
 1264              		.loc 1 770 24 discriminator 1 view .LVU371
 1265 006a 6268     		ldr	r2, [r4, #4]
 1266              		.loc 1 770 18 discriminator 1 view .LVU372
 1267 006c 1AB1     		cbz	r2, .L81
 771:lvgl/src/lv_core/lv_refr.c ****         if(vdb->buf_act == vdb->buf1)
 1268              		.loc 1 771 9 is_stmt 1 view .LVU373
 1269              		.loc 1 771 15 is_stmt 0 view .LVU374
 1270 006e A168     		ldr	r1, [r4, #8]
 1271              		.loc 1 771 11 view .LVU375
 1272 0070 8B42     		cmp	r3, r1
 1273 0072 01D0     		beq	.L93
 772:lvgl/src/lv_core/lv_refr.c ****             vdb->buf_act = vdb->buf2;
 773:lvgl/src/lv_core/lv_refr.c ****         else
 774:lvgl/src/lv_core/lv_refr.c ****             vdb->buf_act = vdb->buf1;
 1274              		.loc 1 774 13 is_stmt 1 view .LVU376
 1275              		.loc 1 774 26 is_stmt 0 view .LVU377
 1276 0074 A360     		str	r3, [r4, #8]
 1277              	.L81:
 775:lvgl/src/lv_core/lv_refr.c ****     }
 776:lvgl/src/lv_core/lv_refr.c **** }
 1278              		.loc 1 776 1 view .LVU378
 1279 0076 38BD     		pop	{r3, r4, r5, pc}
 1280              	.LVL126:
 1281              	.L93:
 772:lvgl/src/lv_core/lv_refr.c ****             vdb->buf_act = vdb->buf2;
 1282              		.loc 1 772 13 is_stmt 1 view .LVU379
 772:lvgl/src/lv_core/lv_refr.c ****             vdb->buf_act = vdb->buf2;
 1283              		.loc 1 772 26 is_stmt 0 view .LVU380
 1284 0078 A260     		str	r2, [r4, #8]
 1285 007a FCE7     		b	.L81
 1286              	.L95:
 1287              		.align	2
 1288              	.L94:
 1289 007c 00000000 		.word	.LANCHOR0
 1290              		.cfi_endproc
 1291              	.LFE477:
ARM GAS  D:\Temp\ccEl19zy.s 			page 49


 1293              		.section	.text.lv_refr_area_part,"ax",%progbits
 1294              		.align	1
 1295              		.syntax unified
 1296              		.thumb
 1297              		.thumb_func
 1298              		.fpu fpv4-sp-d16
 1300              	lv_refr_area_part:
 1301              	.LVL127:
 1302              	.LFB473:
 500:lvgl/src/lv_core/lv_refr.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp_refr);
 1303              		.loc 1 500 1 is_stmt 1 view -0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 104
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 500:lvgl/src/lv_core/lv_refr.c ****     lv_disp_buf_t * vdb = lv_disp_get_buf(disp_refr);
 1307              		.loc 1 500 1 is_stmt 0 view .LVU382
 1308 0000 70B5     		push	{r4, r5, r6, lr}
 1309              	.LCFI14:
 1310              		.cfi_def_cfa_offset 16
 1311              		.cfi_offset 4, -16
 1312              		.cfi_offset 5, -12
 1313              		.cfi_offset 6, -8
 1314              		.cfi_offset 14, -4
 1315 0002 9CB0     		sub	sp, sp, #112
 1316              	.LCFI15:
 1317              		.cfi_def_cfa_offset 128
 1318 0004 0646     		mov	r6, r0
 501:lvgl/src/lv_core/lv_refr.c **** 
 1319              		.loc 1 501 5 is_stmt 1 view .LVU383
 501:lvgl/src/lv_core/lv_refr.c **** 
 1320              		.loc 1 501 27 is_stmt 0 view .LVU384
 1321 0006 4B4D     		ldr	r5, .L116
 1322 0008 2868     		ldr	r0, [r5]
 1323              	.LVL128:
 501:lvgl/src/lv_core/lv_refr.c **** 
 1324              		.loc 1 501 27 view .LVU385
 1325 000a FFF7FEFF 		bl	lv_disp_get_buf
 1326              	.LVL129:
 1327 000e 0446     		mov	r4, r0
 1328              	.LVL130:
 505:lvgl/src/lv_core/lv_refr.c ****         while(vdb->flushing) {
 1329              		.loc 1 505 5 is_stmt 1 view .LVU386
 505:lvgl/src/lv_core/lv_refr.c ****         while(vdb->flushing) {
 1330              		.loc 1 505 8 is_stmt 0 view .LVU387
 1331 0010 2868     		ldr	r0, [r5]
 1332              	.LVL131:
 505:lvgl/src/lv_core/lv_refr.c ****         while(vdb->flushing) {
 1333              		.loc 1 505 8 view .LVU388
 1334 0012 FFF7FEFF 		bl	lv_disp_is_double_buf
 1335              	.LVL132:
 505:lvgl/src/lv_core/lv_refr.c ****         while(vdb->flushing) {
 1336              		.loc 1 505 7 view .LVU389
 1337 0016 40B9     		cbnz	r0, .L97
 1338              	.L99:
 506:lvgl/src/lv_core/lv_refr.c ****             if(disp_refr->driver.wait_cb) disp_refr->driver.wait_cb(&disp_refr->driver);
 1339              		.loc 1 506 18 view .LVU390
 1340 0018 A369     		ldr	r3, [r4, #24]
ARM GAS  D:\Temp\ccEl19zy.s 			page 50


 506:lvgl/src/lv_core/lv_refr.c ****             if(disp_refr->driver.wait_cb) disp_refr->driver.wait_cb(&disp_refr->driver);
 1341              		.loc 1 506 14 view .LVU391
 1342 001a 33B1     		cbz	r3, .L97
 507:lvgl/src/lv_core/lv_refr.c ****         }
 1343              		.loc 1 507 13 is_stmt 1 view .LVU392
 507:lvgl/src/lv_core/lv_refr.c ****         }
 1344              		.loc 1 507 25 is_stmt 0 view .LVU393
 1345 001c 454B     		ldr	r3, .L116
 1346 001e 1868     		ldr	r0, [r3]
 507:lvgl/src/lv_core/lv_refr.c ****         }
 1347              		.loc 1 507 33 view .LVU394
 1348 0020 C369     		ldr	r3, [r0, #28]
 507:lvgl/src/lv_core/lv_refr.c ****         }
 1349              		.loc 1 507 15 view .LVU395
 1350 0022 002B     		cmp	r3, #0
 1351 0024 F8D0     		beq	.L99
 507:lvgl/src/lv_core/lv_refr.c ****         }
 1352              		.loc 1 507 43 is_stmt 1 discriminator 1 view .LVU396
 1353 0026 9847     		blx	r3
 1354              	.LVL133:
 1355 0028 F6E7     		b	.L99
 1356              	.L97:
 511:lvgl/src/lv_core/lv_refr.c ****     lv_obj_t * top_prev_scr = NULL;
 1357              		.loc 1 511 5 view .LVU397
 1358              	.LVL134:
 512:lvgl/src/lv_core/lv_refr.c **** 
 1359              		.loc 1 512 5 view .LVU398
 516:lvgl/src/lv_core/lv_refr.c ****     _lv_area_intersect(&start_mask, area_p, &vdb->area);
 1360              		.loc 1 516 5 view .LVU399
 517:lvgl/src/lv_core/lv_refr.c **** 
 1361              		.loc 1 517 5 view .LVU400
 1362 002a 04F11002 		add	r2, r4, #16
 1363 002e 3146     		mov	r1, r6
 1364 0030 1AA8     		add	r0, sp, #104
 1365 0032 FFF7FEFF 		bl	_lv_area_intersect
 1366              	.LVL135:
 520:lvgl/src/lv_core/lv_refr.c ****     if(disp_refr->prev_scr) {
 1367              		.loc 1 520 5 view .LVU401
 520:lvgl/src/lv_core/lv_refr.c ****     if(disp_refr->prev_scr) {
 1368              		.loc 1 520 19 is_stmt 0 view .LVU402
 1369 0036 3F4D     		ldr	r5, .L116
 1370 0038 2868     		ldr	r0, [r5]
 1371 003a FFF7FEFF 		bl	lv_disp_get_scr_act
 1372              	.LVL136:
 1373 003e 0146     		mov	r1, r0
 1374 0040 1AA8     		add	r0, sp, #104
 1375 0042 FFF7FEFF 		bl	lv_refr_get_top_obj
 1376              	.LVL137:
 1377 0046 0446     		mov	r4, r0
 1378              	.LVL138:
 521:lvgl/src/lv_core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(&start_mask, disp_refr->prev_scr);
 1379              		.loc 1 521 5 is_stmt 1 view .LVU403
 521:lvgl/src/lv_core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(&start_mask, disp_refr->prev_scr);
 1380              		.loc 1 521 17 is_stmt 0 view .LVU404
 1381 0048 2B68     		ldr	r3, [r5]
 1382 004a 996C     		ldr	r1, [r3, #72]
 521:lvgl/src/lv_core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(&start_mask, disp_refr->prev_scr);
ARM GAS  D:\Temp\ccEl19zy.s 			page 51


 1383              		.loc 1 521 7 view .LVU405
 1384 004c 41B3     		cbz	r1, .L109
 522:lvgl/src/lv_core/lv_refr.c ****     }
 1385              		.loc 1 522 9 is_stmt 1 view .LVU406
 522:lvgl/src/lv_core/lv_refr.c ****     }
 1386              		.loc 1 522 24 is_stmt 0 view .LVU407
 1387 004e 1AA8     		add	r0, sp, #104
 1388              	.LVL139:
 522:lvgl/src/lv_core/lv_refr.c ****     }
 1389              		.loc 1 522 24 view .LVU408
 1390 0050 FFF7FEFF 		bl	lv_refr_get_top_obj
 1391              	.LVL140:
 1392 0054 0546     		mov	r5, r0
 1393              	.LVL141:
 1394              	.L101:
 526:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->bg_img) {
 1395              		.loc 1 526 5 is_stmt 1 view .LVU409
 526:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->bg_img) {
 1396              		.loc 1 526 7 is_stmt 0 view .LVU410
 1397 0056 2CB3     		cbz	r4, .L112
 1398              	.L102:
 553:lvgl/src/lv_core/lv_refr.c ****         /*Get the most top object which is not covered by others*/
 1399              		.loc 1 553 5 is_stmt 1 view .LVU411
 553:lvgl/src/lv_core/lv_refr.c ****         /*Get the most top object which is not covered by others*/
 1400              		.loc 1 553 17 is_stmt 0 view .LVU412
 1401 0058 364B     		ldr	r3, .L116
 1402 005a 1B68     		ldr	r3, [r3]
 1403 005c 9B6C     		ldr	r3, [r3, #72]
 553:lvgl/src/lv_core/lv_refr.c ****         /*Get the most top object which is not covered by others*/
 1404              		.loc 1 553 7 view .LVU413
 1405 005e 2BB1     		cbz	r3, .L105
 555:lvgl/src/lv_core/lv_refr.c ****             top_prev_scr = disp_refr->prev_scr;
 1406              		.loc 1 555 9 is_stmt 1 view .LVU414
 555:lvgl/src/lv_core/lv_refr.c ****             top_prev_scr = disp_refr->prev_scr;
 1407              		.loc 1 555 11 is_stmt 0 view .LVU415
 1408 0060 002D     		cmp	r5, #0
 1409 0062 5ED0     		beq	.L113
 1410              	.LVL142:
 1411              	.L106:
 559:lvgl/src/lv_core/lv_refr.c **** 
 1412              		.loc 1 559 9 is_stmt 1 view .LVU416
 1413 0064 1AA9     		add	r1, sp, #104
 1414 0066 2846     		mov	r0, r5
 1415 0068 FFF7FEFF 		bl	lv_refr_obj_and_children
 1416              	.LVL143:
 1417              	.L105:
 563:lvgl/src/lv_core/lv_refr.c ****         top_act_scr = disp_refr->act_scr;
 1418              		.loc 1 563 5 view .LVU417
 563:lvgl/src/lv_core/lv_refr.c ****         top_act_scr = disp_refr->act_scr;
 1419              		.loc 1 563 7 is_stmt 0 view .LVU418
 1420 006c 002C     		cmp	r4, #0
 1421 006e 5AD0     		beq	.L114
 1422              	.L107:
 567:lvgl/src/lv_core/lv_refr.c **** 
 1423              		.loc 1 567 5 is_stmt 1 view .LVU419
 1424 0070 1AA9     		add	r1, sp, #104
 1425 0072 2046     		mov	r0, r4
ARM GAS  D:\Temp\ccEl19zy.s 			page 52


 1426 0074 FFF7FEFF 		bl	lv_refr_obj_and_children
 1427              	.LVL144:
 570:lvgl/src/lv_core/lv_refr.c ****     lv_refr_obj_and_children(lv_disp_get_layer_sys(disp_refr), &start_mask);
 1428              		.loc 1 570 5 view .LVU420
 1429 0078 2E4C     		ldr	r4, .L116
 1430              	.LVL145:
 570:lvgl/src/lv_core/lv_refr.c ****     lv_refr_obj_and_children(lv_disp_get_layer_sys(disp_refr), &start_mask);
 1431              		.loc 1 570 5 is_stmt 0 view .LVU421
 1432 007a 2068     		ldr	r0, [r4]
 1433 007c FFF7FEFF 		bl	lv_disp_get_layer_top
 1434              	.LVL146:
 1435 0080 1AA9     		add	r1, sp, #104
 1436 0082 FFF7FEFF 		bl	lv_refr_obj_and_children
 1437              	.LVL147:
 571:lvgl/src/lv_core/lv_refr.c **** 
 1438              		.loc 1 571 5 is_stmt 1 view .LVU422
 1439 0086 2068     		ldr	r0, [r4]
 1440 0088 FFF7FEFF 		bl	lv_disp_get_layer_sys
 1441              	.LVL148:
 1442 008c 1AA9     		add	r1, sp, #104
 1443 008e FFF7FEFF 		bl	lv_refr_obj_and_children
 1444              	.LVL149:
 575:lvgl/src/lv_core/lv_refr.c ****         lv_refr_vdb_flush();
 1445              		.loc 1 575 5 view .LVU423
 575:lvgl/src/lv_core/lv_refr.c ****         lv_refr_vdb_flush();
 1446              		.loc 1 575 8 is_stmt 0 view .LVU424
 1447 0092 2068     		ldr	r0, [r4]
 1448 0094 FFF7FEFF 		bl	lv_disp_is_true_double_buf
 1449              	.LVL150:
 575:lvgl/src/lv_core/lv_refr.c ****         lv_refr_vdb_flush();
 1450              		.loc 1 575 7 view .LVU425
 1451 0098 0028     		cmp	r0, #0
 1452 009a 48D0     		beq	.L115
 1453              	.L96:
 578:lvgl/src/lv_core/lv_refr.c **** 
 1454              		.loc 1 578 1 view .LVU426
 1455 009c 1CB0     		add	sp, sp, #112
 1456              	.LCFI16:
 1457              		.cfi_remember_state
 1458              		.cfi_def_cfa_offset 16
 1459              		@ sp needed
 1460 009e 70BD     		pop	{r4, r5, r6, pc}
 1461              	.LVL151:
 1462              	.L109:
 1463              	.LCFI17:
 1464              		.cfi_restore_state
 512:lvgl/src/lv_core/lv_refr.c **** 
 1465              		.loc 1 512 16 view .LVU427
 1466 00a0 0025     		movs	r5, #0
 1467 00a2 D8E7     		b	.L101
 1468              	.LVL152:
 1469              	.L112:
 526:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->bg_img) {
 1470              		.loc 1 526 28 discriminator 1 view .LVU428
 1471 00a4 002D     		cmp	r5, #0
 1472 00a6 D7D1     		bne	.L102
 527:lvgl/src/lv_core/lv_refr.c ****             lv_draw_img_dsc_t dsc;
ARM GAS  D:\Temp\ccEl19zy.s 			page 53


 1473              		.loc 1 527 9 is_stmt 1 view .LVU429
 527:lvgl/src/lv_core/lv_refr.c ****             lv_draw_img_dsc_t dsc;
 1474              		.loc 1 527 21 is_stmt 0 view .LVU430
 1475 00a8 224B     		ldr	r3, .L116
 1476 00aa 1B68     		ldr	r3, [r3]
 1477 00ac DB6D     		ldr	r3, [r3, #92]
 527:lvgl/src/lv_core/lv_refr.c ****             lv_draw_img_dsc_t dsc;
 1478              		.loc 1 527 11 view .LVU431
 1479 00ae 2BB3     		cbz	r3, .L103
 1480              	.LBB88:
 528:lvgl/src/lv_core/lv_refr.c ****             lv_draw_img_dsc_init(&dsc);
 1481              		.loc 1 528 13 is_stmt 1 view .LVU432
 529:lvgl/src/lv_core/lv_refr.c ****             dsc.opa = disp_refr->bg_opa;
 1482              		.loc 1 529 13 view .LVU433
 1483 00b0 05A8     		add	r0, sp, #20
 1484 00b2 FFF7FEFF 		bl	lv_draw_img_dsc_init
 1485              	.LVL153:
 530:lvgl/src/lv_core/lv_refr.c ****             lv_img_header_t header;
 1486              		.loc 1 530 13 view .LVU434
 530:lvgl/src/lv_core/lv_refr.c ****             lv_img_header_t header;
 1487              		.loc 1 530 32 is_stmt 0 view .LVU435
 1488 00b6 1F4B     		ldr	r3, .L116
 1489 00b8 1B68     		ldr	r3, [r3]
 1490 00ba 93F86020 		ldrb	r2, [r3, #96]	@ zero_extendqisi2
 530:lvgl/src/lv_core/lv_refr.c ****             lv_img_header_t header;
 1491              		.loc 1 530 21 view .LVU436
 1492 00be 8DF81420 		strb	r2, [sp, #20]
 531:lvgl/src/lv_core/lv_refr.c ****             lv_res_t res;
 1493              		.loc 1 531 13 is_stmt 1 view .LVU437
 532:lvgl/src/lv_core/lv_refr.c ****             res = lv_img_decoder_get_info(disp_refr->bg_img, &header);
 1494              		.loc 1 532 13 view .LVU438
 533:lvgl/src/lv_core/lv_refr.c ****             if(res == LV_RES_OK) {
 1495              		.loc 1 533 13 view .LVU439
 533:lvgl/src/lv_core/lv_refr.c ****             if(res == LV_RES_OK) {
 1496              		.loc 1 533 19 is_stmt 0 view .LVU440
 1497 00c2 02A9     		add	r1, sp, #8
 1498 00c4 D86D     		ldr	r0, [r3, #92]
 1499 00c6 FFF7FEFF 		bl	lv_img_decoder_get_info
 1500              	.LVL154:
 534:lvgl/src/lv_core/lv_refr.c ****                 lv_area_t a;
 1501              		.loc 1 534 13 is_stmt 1 view .LVU441
 534:lvgl/src/lv_core/lv_refr.c ****                 lv_area_t a;
 1502              		.loc 1 534 15 is_stmt 0 view .LVU442
 1503 00ca 0128     		cmp	r0, #1
 1504 00cc C4D1     		bne	.L102
 1505              	.LBB89:
 535:lvgl/src/lv_core/lv_refr.c ****                 lv_area_set(&a, 0, 0, header.w - 1, header.h - 1);
 1506              		.loc 1 535 17 is_stmt 1 view .LVU443
 536:lvgl/src/lv_core/lv_refr.c ****                 lv_draw_img(&a, &start_mask, disp_refr->bg_img, &dsc);
 1507              		.loc 1 536 17 view .LVU444
 536:lvgl/src/lv_core/lv_refr.c ****                 lv_draw_img(&a, &start_mask, disp_refr->bg_img, &dsc);
 1508              		.loc 1 536 45 is_stmt 0 view .LVU445
 1509 00ce 029B     		ldr	r3, [sp, #8]
 1510 00d0 C3F38A23 		ubfx	r3, r3, #10, #11
 536:lvgl/src/lv_core/lv_refr.c ****                 lv_draw_img(&a, &start_mask, disp_refr->bg_img, &dsc);
 1511              		.loc 1 536 59 view .LVU446
 1512 00d4 BDF80A20 		ldrh	r2, [sp, #10]
ARM GAS  D:\Temp\ccEl19zy.s 			page 54


 1513 00d8 5209     		lsrs	r2, r2, #5
 536:lvgl/src/lv_core/lv_refr.c ****                 lv_draw_img(&a, &start_mask, disp_refr->bg_img, &dsc);
 1514              		.loc 1 536 17 view .LVU447
 1515 00da 013A     		subs	r2, r2, #1
 1516 00dc 0092     		str	r2, [sp]
 1517 00de 013B     		subs	r3, r3, #1
 1518 00e0 0022     		movs	r2, #0
 1519 00e2 1146     		mov	r1, r2
 1520 00e4 03A8     		add	r0, sp, #12
 1521              	.LVL155:
 536:lvgl/src/lv_core/lv_refr.c ****                 lv_draw_img(&a, &start_mask, disp_refr->bg_img, &dsc);
 1522              		.loc 1 536 17 view .LVU448
 1523 00e6 FFF7FEFF 		bl	lv_area_set
 1524              	.LVL156:
 537:lvgl/src/lv_core/lv_refr.c ****             }
 1525              		.loc 1 537 17 is_stmt 1 view .LVU449
 537:lvgl/src/lv_core/lv_refr.c ****             }
 1526              		.loc 1 537 55 is_stmt 0 view .LVU450
 1527 00ea 124B     		ldr	r3, .L116
 1528 00ec 1A68     		ldr	r2, [r3]
 537:lvgl/src/lv_core/lv_refr.c ****             }
 1529              		.loc 1 537 17 view .LVU451
 1530 00ee 05AB     		add	r3, sp, #20
 1531 00f0 D26D     		ldr	r2, [r2, #92]
 1532 00f2 1AA9     		add	r1, sp, #104
 1533 00f4 03A8     		add	r0, sp, #12
 1534 00f6 FFF7FEFF 		bl	lv_draw_img
 1535              	.LVL157:
 1536              	.LBE89:
 541:lvgl/src/lv_core/lv_refr.c ****         }
 1537              		.loc 1 541 13 is_stmt 1 view .LVU452
 1538 00fa ADE7     		b	.L102
 1539              	.L103:
 541:lvgl/src/lv_core/lv_refr.c ****         }
 1540              		.loc 1 541 13 is_stmt 0 view .LVU453
 1541              	.LBE88:
 1542              	.LBB90:
 544:lvgl/src/lv_core/lv_refr.c ****             lv_draw_rect_dsc_init(&dsc);
 1543              		.loc 1 544 13 is_stmt 1 view .LVU454
 545:lvgl/src/lv_core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 1544              		.loc 1 545 13 view .LVU455
 1545 00fc 05A8     		add	r0, sp, #20
 1546 00fe FFF7FEFF 		bl	lv_draw_rect_dsc_init
 1547              	.LVL158:
 546:lvgl/src/lv_core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 1548              		.loc 1 546 13 view .LVU456
 546:lvgl/src/lv_core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 1549              		.loc 1 546 37 is_stmt 0 view .LVU457
 1550 0102 0C4B     		ldr	r3, .L116
 1551 0104 1B68     		ldr	r3, [r3]
 546:lvgl/src/lv_core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 1552              		.loc 1 546 26 view .LVU458
 1553 0106 B3F85A20 		ldrh	r2, [r3, #90]
 1554 010a ADF81620 		strh	r2, [sp, #22]	@ movhi
 547:lvgl/src/lv_core/lv_refr.c ****             lv_draw_rect(&start_mask, &start_mask, &dsc);
 1555              		.loc 1 547 13 is_stmt 1 view .LVU459
 547:lvgl/src/lv_core/lv_refr.c ****             lv_draw_rect(&start_mask, &start_mask, &dsc);
ARM GAS  D:\Temp\ccEl19zy.s 			page 55


 1556              		.loc 1 547 35 is_stmt 0 view .LVU460
 1557 010e 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 547:lvgl/src/lv_core/lv_refr.c ****             lv_draw_rect(&start_mask, &start_mask, &dsc);
 1558              		.loc 1 547 24 view .LVU461
 1559 0112 8DF82030 		strb	r3, [sp, #32]
 548:lvgl/src/lv_core/lv_refr.c **** 
 1560              		.loc 1 548 13 is_stmt 1 view .LVU462
 1561 0116 05AA     		add	r2, sp, #20
 1562 0118 1AA9     		add	r1, sp, #104
 1563 011a 0846     		mov	r0, r1
 1564 011c FFF7FEFF 		bl	lv_draw_rect
 1565              	.LVL159:
 1566 0120 9AE7     		b	.L102
 1567              	.L113:
 1568              	.LBE90:
 556:lvgl/src/lv_core/lv_refr.c ****         }
 1569              		.loc 1 556 26 is_stmt 0 view .LVU463
 1570 0122 1D46     		mov	r5, r3
 1571              	.LVL160:
 556:lvgl/src/lv_core/lv_refr.c ****         }
 1572              		.loc 1 556 26 view .LVU464
 1573 0124 9EE7     		b	.L106
 1574              	.LVL161:
 1575              	.L114:
 564:lvgl/src/lv_core/lv_refr.c ****     }
 1576              		.loc 1 564 9 is_stmt 1 view .LVU465
 564:lvgl/src/lv_core/lv_refr.c ****     }
 1577              		.loc 1 564 32 is_stmt 0 view .LVU466
 1578 0126 034B     		ldr	r3, .L116
 1579 0128 1B68     		ldr	r3, [r3]
 564:lvgl/src/lv_core/lv_refr.c ****     }
 1580              		.loc 1 564 21 view .LVU467
 1581 012a 5C6C     		ldr	r4, [r3, #68]
 1582              	.LVL162:
 564:lvgl/src/lv_core/lv_refr.c ****     }
 1583              		.loc 1 564 21 view .LVU468
 1584 012c A0E7     		b	.L107
 1585              	.LVL163:
 1586              	.L115:
 576:lvgl/src/lv_core/lv_refr.c ****     }
 1587              		.loc 1 576 9 is_stmt 1 view .LVU469
 1588 012e FFF7FEFF 		bl	lv_refr_vdb_flush
 1589              	.LVL164:
 578:lvgl/src/lv_core/lv_refr.c **** 
 1590              		.loc 1 578 1 is_stmt 0 view .LVU470
 1591 0132 B3E7     		b	.L96
 1592              	.L117:
 1593              		.align	2
 1594              	.L116:
 1595 0134 00000000 		.word	.LANCHOR0
 1596              		.cfi_endproc
 1597              	.LFE473:
 1599              		.section	.text.lv_refr_area,"ax",%progbits
 1600              		.align	1
 1601              		.syntax unified
 1602              		.thumb
 1603              		.thumb_func
ARM GAS  D:\Temp\ccEl19zy.s 			page 56


 1604              		.fpu fpv4-sp-d16
 1606              	lv_refr_area:
 1607              	.LVL165:
 1608              	.LFB472:
 412:lvgl/src/lv_core/lv_refr.c ****     /*True double buffering: there are two screen sized buffers. Just redraw directly into a
 1609              		.loc 1 412 1 is_stmt 1 view -0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 8
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 412:lvgl/src/lv_core/lv_refr.c ****     /*True double buffering: there are two screen sized buffers. Just redraw directly into a
 1613              		.loc 1 412 1 is_stmt 0 view .LVU472
 1614 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1615              	.LCFI18:
 1616              		.cfi_def_cfa_offset 28
 1617              		.cfi_offset 4, -28
 1618              		.cfi_offset 5, -24
 1619              		.cfi_offset 6, -20
 1620              		.cfi_offset 7, -16
 1621              		.cfi_offset 8, -12
 1622              		.cfi_offset 9, -8
 1623              		.cfi_offset 14, -4
 1624 0004 83B0     		sub	sp, sp, #12
 1625              	.LCFI19:
 1626              		.cfi_def_cfa_offset 40
 1627 0006 0646     		mov	r6, r0
 415:lvgl/src/lv_core/lv_refr.c ****         lv_disp_buf_t * vdb = lv_disp_get_buf(disp_refr);
 1628              		.loc 1 415 5 is_stmt 1 view .LVU473
 415:lvgl/src/lv_core/lv_refr.c ****         lv_disp_buf_t * vdb = lv_disp_get_buf(disp_refr);
 1629              		.loc 1 415 8 is_stmt 0 view .LVU474
 1630 0008 624B     		ldr	r3, .L136
 1631 000a 1868     		ldr	r0, [r3]
 1632              	.LVL166:
 415:lvgl/src/lv_core/lv_refr.c ****         lv_disp_buf_t * vdb = lv_disp_get_buf(disp_refr);
 1633              		.loc 1 415 8 view .LVU475
 1634 000c FFF7FEFF 		bl	lv_disp_is_true_double_buf
 1635              	.LVL167:
 415:lvgl/src/lv_core/lv_refr.c ****         lv_disp_buf_t * vdb = lv_disp_get_buf(disp_refr);
 1636              		.loc 1 415 7 view .LVU476
 1637 0010 08B3     		cbz	r0, .L119
 1638              	.LBB91:
 416:lvgl/src/lv_core/lv_refr.c ****         vdb->area.x1        = 0;
 1639              		.loc 1 416 9 is_stmt 1 view .LVU477
 416:lvgl/src/lv_core/lv_refr.c ****         vdb->area.x1        = 0;
 1640              		.loc 1 416 31 is_stmt 0 view .LVU478
 1641 0012 604C     		ldr	r4, .L136
 1642 0014 2068     		ldr	r0, [r4]
 1643 0016 FFF7FEFF 		bl	lv_disp_get_buf
 1644              	.LVL168:
 1645 001a 0546     		mov	r5, r0
 1646              	.LVL169:
 417:lvgl/src/lv_core/lv_refr.c ****         vdb->area.x2        = lv_disp_get_hor_res(disp_refr) - 1;
 1647              		.loc 1 417 9 is_stmt 1 view .LVU479
 417:lvgl/src/lv_core/lv_refr.c ****         vdb->area.x2        = lv_disp_get_hor_res(disp_refr) - 1;
 1648              		.loc 1 417 29 is_stmt 0 view .LVU480
 1649 001c 0027     		movs	r7, #0
 1650 001e 0782     		strh	r7, [r0, #16]	@ movhi
 418:lvgl/src/lv_core/lv_refr.c ****         vdb->area.y1        = 0;
ARM GAS  D:\Temp\ccEl19zy.s 			page 57


 1651              		.loc 1 418 9 is_stmt 1 view .LVU481
 418:lvgl/src/lv_core/lv_refr.c ****         vdb->area.y1        = 0;
 1652              		.loc 1 418 31 is_stmt 0 view .LVU482
 1653 0020 2068     		ldr	r0, [r4]
 1654              	.LVL170:
 418:lvgl/src/lv_core/lv_refr.c ****         vdb->area.y1        = 0;
 1655              		.loc 1 418 31 view .LVU483
 1656 0022 FFF7FEFF 		bl	lv_disp_get_hor_res
 1657              	.LVL171:
 1658 0026 80B2     		uxth	r0, r0
 418:lvgl/src/lv_core/lv_refr.c ****         vdb->area.y1        = 0;
 1659              		.loc 1 418 62 view .LVU484
 1660 0028 0138     		subs	r0, r0, #1
 418:lvgl/src/lv_core/lv_refr.c ****         vdb->area.y1        = 0;
 1661              		.loc 1 418 29 view .LVU485
 1662 002a A882     		strh	r0, [r5, #20]	@ movhi
 419:lvgl/src/lv_core/lv_refr.c ****         vdb->area.y2        = lv_disp_get_ver_res(disp_refr) - 1;
 1663              		.loc 1 419 9 is_stmt 1 view .LVU486
 419:lvgl/src/lv_core/lv_refr.c ****         vdb->area.y2        = lv_disp_get_ver_res(disp_refr) - 1;
 1664              		.loc 1 419 29 is_stmt 0 view .LVU487
 1665 002c 6F82     		strh	r7, [r5, #18]	@ movhi
 420:lvgl/src/lv_core/lv_refr.c ****         disp_refr->driver.buffer->last_part = 1;
 1666              		.loc 1 420 9 is_stmt 1 view .LVU488
 420:lvgl/src/lv_core/lv_refr.c ****         disp_refr->driver.buffer->last_part = 1;
 1667              		.loc 1 420 31 is_stmt 0 view .LVU489
 1668 002e 2068     		ldr	r0, [r4]
 1669 0030 FFF7FEFF 		bl	lv_disp_get_ver_res
 1670              	.LVL172:
 1671 0034 80B2     		uxth	r0, r0
 420:lvgl/src/lv_core/lv_refr.c ****         disp_refr->driver.buffer->last_part = 1;
 1672              		.loc 1 420 62 view .LVU490
 1673 0036 0138     		subs	r0, r0, #1
 420:lvgl/src/lv_core/lv_refr.c ****         disp_refr->driver.buffer->last_part = 1;
 1674              		.loc 1 420 29 view .LVU491
 1675 0038 E882     		strh	r0, [r5, #22]	@ movhi
 421:lvgl/src/lv_core/lv_refr.c ****         lv_refr_area_part(area_p);
 1676              		.loc 1 421 9 is_stmt 1 view .LVU492
 421:lvgl/src/lv_core/lv_refr.c ****         lv_refr_area_part(area_p);
 1677              		.loc 1 421 18 is_stmt 0 view .LVU493
 1678 003a 2368     		ldr	r3, [r4]
 421:lvgl/src/lv_core/lv_refr.c ****         lv_refr_area_part(area_p);
 1679              		.loc 1 421 26 view .LVU494
 1680 003c 5A68     		ldr	r2, [r3, #4]
 421:lvgl/src/lv_core/lv_refr.c ****         lv_refr_area_part(area_p);
 1681              		.loc 1 421 45 view .LVU495
 1682 003e 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 1683 0042 43F00203 		orr	r3, r3, #2
 1684 0046 82F82030 		strb	r3, [r2, #32]
 422:lvgl/src/lv_core/lv_refr.c ****     }
 1685              		.loc 1 422 9 is_stmt 1 view .LVU496
 1686 004a 3046     		mov	r0, r6
 1687 004c FFF7FEFF 		bl	lv_refr_area_part
 1688              	.LVL173:
 1689              	.L118:
 422:lvgl/src/lv_core/lv_refr.c ****     }
 1690              		.loc 1 422 9 is_stmt 0 view .LVU497
 1691              	.LBE91:
ARM GAS  D:\Temp\ccEl19zy.s 			page 58


 493:lvgl/src/lv_core/lv_refr.c **** 
 1692              		.loc 1 493 1 view .LVU498
 1693 0050 03B0     		add	sp, sp, #12
 1694              	.LCFI20:
 1695              		.cfi_remember_state
 1696              		.cfi_def_cfa_offset 28
 1697              		@ sp needed
 1698 0052 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1699              	.LVL174:
 1700              	.L119:
 1701              	.LCFI21:
 1702              		.cfi_restore_state
 1703              	.LBB92:
 426:lvgl/src/lv_core/lv_refr.c ****         /*Calculate the max row num*/
 1704              		.loc 1 426 9 is_stmt 1 view .LVU499
 426:lvgl/src/lv_core/lv_refr.c ****         /*Calculate the max row num*/
 1705              		.loc 1 426 31 is_stmt 0 view .LVU500
 1706 0056 DFF83C91 		ldr	r9, .L136
 1707 005a D9F80000 		ldr	r0, [r9]
 1708 005e FFF7FEFF 		bl	lv_disp_get_buf
 1709              	.LVL175:
 1710 0062 0446     		mov	r4, r0
 1711              	.LVL176:
 428:lvgl/src/lv_core/lv_refr.c ****         lv_coord_t h = lv_area_get_height(area_p);
 1712              		.loc 1 428 9 is_stmt 1 view .LVU501
 1713              	.LBB93:
 1714              	.LBI93:
 100:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** }
 101:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
 102:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /**
 103:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * Get the width of an area
 104:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @param area_p pointer to an area
 105:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 106:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  */
 107:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 1715              		.loc 3 107 26 view .LVU502
 1716              	.LBB94:
 108:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** {
 109:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 1717              		.loc 3 109 5 view .LVU503
 1718              		.loc 3 109 31 is_stmt 0 view .LVU504
 1719 0064 B6F80480 		ldrh	r8, [r6, #4]
 1720              		.loc 3 109 44 view .LVU505
 1721 0068 3388     		ldrh	r3, [r6]
 1722              		.loc 3 109 36 view .LVU506
 1723 006a A8EB0308 		sub	r8, r8, r3
 1724 006e 1FFA88F8 		uxth	r8, r8
 1725              		.loc 3 109 49 view .LVU507
 1726 0072 08F10108 		add	r8, r8, #1
 1727              		.loc 3 109 12 view .LVU508
 1728 0076 0FFA88F8 		sxth	r8, r8
 1729              	.LVL177:
 1730              		.loc 3 109 12 view .LVU509
 1731              	.LBE94:
 1732              	.LBE93:
 429:lvgl/src/lv_core/lv_refr.c ****         lv_coord_t y2 =
 1733              		.loc 1 429 9 is_stmt 1 view .LVU510
ARM GAS  D:\Temp\ccEl19zy.s 			page 59


 1734              	.LBB95:
 1735              	.LBI95:
 110:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** }
 111:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** 
 112:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** /**
 113:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * Get the height of an area
 114:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @param area_p pointer to an area
 115:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 116:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****  */
 117:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 1736              		.loc 3 117 26 view .LVU511
 1737              	.LBB96:
 118:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** {
 119:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 1738              		.loc 3 119 5 view .LVU512
 1739              		.loc 3 119 31 is_stmt 0 view .LVU513
 1740 007a B6F90670 		ldrsh	r7, [r6, #6]
 1741 007e BDB2     		uxth	r5, r7
 1742              		.loc 3 119 44 view .LVU514
 1743 0080 7388     		ldrh	r3, [r6, #2]
 1744              		.loc 3 119 36 view .LVU515
 1745 0082 ED1A     		subs	r5, r5, r3
 1746 0084 ADB2     		uxth	r5, r5
 1747              		.loc 3 119 49 view .LVU516
 1748 0086 0135     		adds	r5, r5, #1
 1749              		.loc 3 119 12 view .LVU517
 1750 0088 2DB2     		sxth	r5, r5
 1751              	.LVL178:
 1752              		.loc 3 119 12 view .LVU518
 1753              	.LBE96:
 1754              	.LBE95:
 430:lvgl/src/lv_core/lv_refr.c ****             area_p->y2 >= lv_disp_get_ver_res(disp_refr) ? lv_disp_get_ver_res(disp_refr) - 1 : are
 1755              		.loc 1 430 9 is_stmt 1 view .LVU519
 431:lvgl/src/lv_core/lv_refr.c **** 
 1756              		.loc 1 431 27 is_stmt 0 view .LVU520
 1757 008a D9F80000 		ldr	r0, [r9]
 1758              	.LVL179:
 431:lvgl/src/lv_core/lv_refr.c **** 
 1759              		.loc 1 431 27 view .LVU521
 1760 008e FFF7FEFF 		bl	lv_disp_get_ver_res
 1761              	.LVL180:
 430:lvgl/src/lv_core/lv_refr.c ****             area_p->y2 >= lv_disp_get_ver_res(disp_refr) ? lv_disp_get_ver_res(disp_refr) - 1 : are
 1762              		.loc 1 430 20 view .LVU522
 1763 0092 B842     		cmp	r0, r7
 1764 0094 37DD     		ble	.L133
 430:lvgl/src/lv_core/lv_refr.c ****             area_p->y2 >= lv_disp_get_ver_res(disp_refr) ? lv_disp_get_ver_res(disp_refr) - 1 : are
 1765              		.loc 1 430 20 discriminator 2 view .LVU523
 1766 0096 B6F90670 		ldrsh	r7, [r6, #6]
 1767              	.L122:
 1768              	.LVL181:
 433:lvgl/src/lv_core/lv_refr.c **** 
 1769              		.loc 1 433 9 is_stmt 1 discriminator 4 view .LVU524
 433:lvgl/src/lv_core/lv_refr.c **** 
 1770              		.loc 1 433 40 is_stmt 0 discriminator 4 view .LVU525
 1771 009a E368     		ldr	r3, [r4, #12]
 433:lvgl/src/lv_core/lv_refr.c **** 
 1772              		.loc 1 433 47 discriminator 4 view .LVU526
ARM GAS  D:\Temp\ccEl19zy.s 			page 60


 1773 009c B3FBF8F3 		udiv	r3, r3, r8
 1774              	.LVL182:
 435:lvgl/src/lv_core/lv_refr.c **** 
 1775              		.loc 1 435 9 is_stmt 1 discriminator 4 view .LVU527
 435:lvgl/src/lv_core/lv_refr.c **** 
 1776              		.loc 1 435 20 is_stmt 0 discriminator 4 view .LVU528
 1777 00a0 A846     		mov	r8, r5
 1778              	.LVL183:
 435:lvgl/src/lv_core/lv_refr.c **** 
 1779              		.loc 1 435 11 discriminator 4 view .LVU529
 1780 00a2 9D42     		cmp	r5, r3
 1781 00a4 00DB     		blt	.L123
 433:lvgl/src/lv_core/lv_refr.c **** 
 1782              		.loc 1 433 17 view .LVU530
 1783 00a6 9846     		mov	r8, r3
 1784              	.L123:
 1785              	.LVL184:
 438:lvgl/src/lv_core/lv_refr.c ****             lv_area_t tmp;
 1786              		.loc 1 438 9 is_stmt 1 view .LVU531
 438:lvgl/src/lv_core/lv_refr.c ****             lv_area_t tmp;
 1787              		.loc 1 438 21 is_stmt 0 view .LVU532
 1788 00a8 3A4B     		ldr	r3, .L136
 1789 00aa 1B68     		ldr	r3, [r3]
 438:lvgl/src/lv_core/lv_refr.c ****             lv_area_t tmp;
 1790              		.loc 1 438 29 view .LVU533
 1791 00ac 1B69     		ldr	r3, [r3, #16]
 438:lvgl/src/lv_core/lv_refr.c ****             lv_area_t tmp;
 1792              		.loc 1 438 11 view .LVU534
 1793 00ae 2BB3     		cbz	r3, .L124
 1794              	.LBB97:
 439:lvgl/src/lv_core/lv_refr.c ****             tmp.x1 = 0;
 1795              		.loc 1 439 13 is_stmt 1 view .LVU535
 440:lvgl/src/lv_core/lv_refr.c ****             tmp.x2 = 0;
 1796              		.loc 1 440 13 view .LVU536
 440:lvgl/src/lv_core/lv_refr.c ****             tmp.x2 = 0;
 1797              		.loc 1 440 20 is_stmt 0 view .LVU537
 1798 00b0 0023     		movs	r3, #0
 1799 00b2 ADF80030 		strh	r3, [sp]	@ movhi
 441:lvgl/src/lv_core/lv_refr.c ****             tmp.y1 = 0;
 1800              		.loc 1 441 13 is_stmt 1 view .LVU538
 441:lvgl/src/lv_core/lv_refr.c ****             tmp.y1 = 0;
 1801              		.loc 1 441 20 is_stmt 0 view .LVU539
 1802 00b6 ADF80430 		strh	r3, [sp, #4]	@ movhi
 442:lvgl/src/lv_core/lv_refr.c **** 
 1803              		.loc 1 442 13 is_stmt 1 view .LVU540
 442:lvgl/src/lv_core/lv_refr.c **** 
 1804              		.loc 1 442 20 is_stmt 0 view .LVU541
 1805 00ba ADF80230 		strh	r3, [sp, #2]	@ movhi
 444:lvgl/src/lv_core/lv_refr.c ****             do {
 1806              		.loc 1 444 13 is_stmt 1 view .LVU542
 444:lvgl/src/lv_core/lv_refr.c ****             do {
 1807              		.loc 1 444 24 is_stmt 0 view .LVU543
 1808 00be 0FFA88F9 		sxth	r9, r8
 1809              	.LVL185:
 1810              	.L126:
 445:lvgl/src/lv_core/lv_refr.c ****                 tmp.y2 = h_tmp - 1;
 1811              		.loc 1 445 13 is_stmt 1 view .LVU544
ARM GAS  D:\Temp\ccEl19zy.s 			page 61


 446:lvgl/src/lv_core/lv_refr.c ****                 disp_refr->driver.rounder_cb(&disp_refr->driver, &tmp);
 1812              		.loc 1 446 17 view .LVU545
 446:lvgl/src/lv_core/lv_refr.c ****                 disp_refr->driver.rounder_cb(&disp_refr->driver, &tmp);
 1813              		.loc 1 446 32 is_stmt 0 view .LVU546
 1814 00c2 09F1FF35 		add	r5, r9, #-1
 1815 00c6 2DB2     		sxth	r5, r5
 446:lvgl/src/lv_core/lv_refr.c ****                 disp_refr->driver.rounder_cb(&disp_refr->driver, &tmp);
 1816              		.loc 1 446 24 view .LVU547
 1817 00c8 ADF80650 		strh	r5, [sp, #6]	@ movhi
 447:lvgl/src/lv_core/lv_refr.c **** 
 1818              		.loc 1 447 17 is_stmt 1 view .LVU548
 447:lvgl/src/lv_core/lv_refr.c **** 
 1819              		.loc 1 447 26 is_stmt 0 view .LVU549
 1820 00cc 314B     		ldr	r3, .L136
 1821 00ce 1868     		ldr	r0, [r3]
 447:lvgl/src/lv_core/lv_refr.c **** 
 1822              		.loc 1 447 34 view .LVU550
 1823 00d0 0369     		ldr	r3, [r0, #16]
 447:lvgl/src/lv_core/lv_refr.c **** 
 1824              		.loc 1 447 17 view .LVU551
 1825 00d2 6946     		mov	r1, sp
 1826 00d4 9847     		blx	r3
 1827              	.LVL186:
 450:lvgl/src/lv_core/lv_refr.c **** 
 1828              		.loc 1 450 17 is_stmt 1 view .LVU552
 1829              	.LBB98:
 1830              	.LBI98:
 117:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** {
 1831              		.loc 3 117 26 view .LVU553
 1832              	.LBB99:
 1833              		.loc 3 119 5 view .LVU554
 1834              		.loc 3 119 31 is_stmt 0 view .LVU555
 1835 00d6 BDF90620 		ldrsh	r2, [sp, #6]
 1836 00da 93B2     		uxth	r3, r2
 1837              		.loc 3 119 44 view .LVU556
 1838 00dc BDF80210 		ldrh	r1, [sp, #2]
 1839              		.loc 3 119 36 view .LVU557
 1840 00e0 5B1A     		subs	r3, r3, r1
 1841 00e2 9BB2     		uxth	r3, r3
 1842              		.loc 3 119 49 view .LVU558
 1843 00e4 0133     		adds	r3, r3, #1
 1844              		.loc 3 119 12 view .LVU559
 1845 00e6 1BB2     		sxth	r3, r3
 1846              	.LVL187:
 1847              		.loc 3 119 12 view .LVU560
 1848              	.LBE99:
 1849              	.LBE98:
 450:lvgl/src/lv_core/lv_refr.c **** 
 1850              		.loc 1 450 19 view .LVU561
 1851 00e8 4345     		cmp	r3, r8
 1852 00ea 02DD     		ble	.L125
 453:lvgl/src/lv_core/lv_refr.c ****             } while(h_tmp > 0);
 1853              		.loc 1 453 17 is_stmt 1 view .LVU562
 1854              	.LVL188:
 453:lvgl/src/lv_core/lv_refr.c ****             } while(h_tmp > 0);
 1855              		.loc 1 453 22 is_stmt 0 view .LVU563
 1856 00ec A946     		mov	r9, r5
ARM GAS  D:\Temp\ccEl19zy.s 			page 62


 454:lvgl/src/lv_core/lv_refr.c **** 
 1857              		.loc 1 454 13 view .LVU564
 1858 00ee 002D     		cmp	r5, #0
 1859 00f0 E7DC     		bgt	.L126
 1860              	.LVL189:
 1861              	.L125:
 456:lvgl/src/lv_core/lv_refr.c ****                 LV_LOG_WARN("Can't set VDB height using the round function. (Wrong round_cb or to "
 1862              		.loc 1 456 13 is_stmt 1 view .LVU565
 456:lvgl/src/lv_core/lv_refr.c ****                 LV_LOG_WARN("Can't set VDB height using the round function. (Wrong round_cb or to "
 1863              		.loc 1 456 15 is_stmt 0 view .LVU566
 1864 00f2 B9F1000F 		cmp	r9, #0
 1865 00f6 ABDD     		ble	.L118
 462:lvgl/src/lv_core/lv_refr.c ****             }
 1866              		.loc 1 462 17 is_stmt 1 view .LVU567
 462:lvgl/src/lv_core/lv_refr.c ****             }
 1867              		.loc 1 462 25 is_stmt 0 view .LVU568
 1868 00f8 02F10108 		add	r8, r2, #1
 1869              	.LVL190:
 1870              	.L124:
 462:lvgl/src/lv_core/lv_refr.c ****             }
 1871              		.loc 1 462 25 view .LVU569
 1872              	.LBE97:
 467:lvgl/src/lv_core/lv_refr.c ****         lv_coord_t row_last = 0;
 1873              		.loc 1 467 9 is_stmt 1 view .LVU570
 468:lvgl/src/lv_core/lv_refr.c ****         for(row = area_p->y1; row + max_row - 1 <= y2; row += max_row) {
 1874              		.loc 1 468 9 view .LVU571
 469:lvgl/src/lv_core/lv_refr.c ****             /*Calc. the next y coordinates of VDB*/
 1875              		.loc 1 469 9 view .LVU572
 469:lvgl/src/lv_core/lv_refr.c ****             /*Calc. the next y coordinates of VDB*/
 1876              		.loc 1 469 17 is_stmt 0 view .LVU573
 1877 00fc B6F90230 		ldrsh	r3, [r6, #2]
 1878              	.LVL191:
 468:lvgl/src/lv_core/lv_refr.c ****         for(row = area_p->y1; row + max_row - 1 <= y2; row += max_row) {
 1879              		.loc 1 468 20 view .LVU574
 1880 0100 4FF00009 		mov	r9, #0
 469:lvgl/src/lv_core/lv_refr.c ****             /*Calc. the next y coordinates of VDB*/
 1881              		.loc 1 469 9 view .LVU575
 1882 0104 0FE0     		b	.L128
 1883              	.LVL192:
 1884              	.L133:
 431:lvgl/src/lv_core/lv_refr.c **** 
 1885              		.loc 1 431 60 discriminator 1 view .LVU576
 1886 0106 D9F80000 		ldr	r0, [r9]
 1887 010a FFF7FEFF 		bl	lv_disp_get_ver_res
 1888              	.LVL193:
 1889 010e 87B2     		uxth	r7, r0
 431:lvgl/src/lv_core/lv_refr.c **** 
 1890              		.loc 1 431 91 discriminator 1 view .LVU577
 1891 0110 013F     		subs	r7, r7, #1
 430:lvgl/src/lv_core/lv_refr.c ****             area_p->y2 >= lv_disp_get_ver_res(disp_refr) ? lv_disp_get_ver_res(disp_refr) - 1 : are
 1892              		.loc 1 430 20 discriminator 1 view .LVU578
 1893 0112 3FB2     		sxth	r7, r7
 1894 0114 C1E7     		b	.L122
 1895              	.LVL194:
 1896              	.L129:
 476:lvgl/src/lv_core/lv_refr.c ****             if(y2 == row_last) disp_refr->driver.buffer->last_part = 1;
 1897              		.loc 1 476 13 is_stmt 1 view .LVU579
ARM GAS  D:\Temp\ccEl19zy.s 			page 63


 476:lvgl/src/lv_core/lv_refr.c ****             if(y2 == row_last) disp_refr->driver.buffer->last_part = 1;
 1898              		.loc 1 476 22 is_stmt 0 view .LVU580
 1899 0116 B4F91690 		ldrsh	r9, [r4, #22]
 1900              	.LVL195:
 477:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1901              		.loc 1 477 13 is_stmt 1 view .LVU581
 477:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1902              		.loc 1 477 15 is_stmt 0 view .LVU582
 1903 011a 4F45     		cmp	r7, r9
 1904 011c 18D0     		beq	.L134
 1905              	.LVL196:
 1906              	.L130:
 478:lvgl/src/lv_core/lv_refr.c ****         }
 1907              		.loc 1 478 13 is_stmt 1 discriminator 2 view .LVU583
 1908 011e 3046     		mov	r0, r6
 1909 0120 FFF7FEFF 		bl	lv_refr_area_part
 1910              	.LVL197:
 469:lvgl/src/lv_core/lv_refr.c ****             /*Calc. the next y coordinates of VDB*/
 1911              		.loc 1 469 60 is_stmt 0 discriminator 2 view .LVU584
 1912 0124 2BB2     		sxth	r3, r5
 1913              	.LVL198:
 1914              	.L128:
 469:lvgl/src/lv_core/lv_refr.c ****             /*Calc. the next y coordinates of VDB*/
 1915              		.loc 1 469 35 discriminator 1 view .LVU585
 1916 0126 03EB0802 		add	r2, r3, r8
 469:lvgl/src/lv_core/lv_refr.c ****             /*Calc. the next y coordinates of VDB*/
 1917              		.loc 1 469 45 discriminator 1 view .LVU586
 1918 012a 013A     		subs	r2, r2, #1
 469:lvgl/src/lv_core/lv_refr.c ****             /*Calc. the next y coordinates of VDB*/
 1919              		.loc 1 469 9 discriminator 1 view .LVU587
 1920 012c BA42     		cmp	r2, r7
 1921 012e 19DC     		bgt	.L135
 471:lvgl/src/lv_core/lv_refr.c ****             vdb->area.x2 = area_p->x2;
 1922              		.loc 1 471 13 is_stmt 1 view .LVU588
 471:lvgl/src/lv_core/lv_refr.c ****             vdb->area.x2 = area_p->x2;
 1923              		.loc 1 471 34 is_stmt 0 view .LVU589
 1924 0130 B6F90020 		ldrsh	r2, [r6]
 471:lvgl/src/lv_core/lv_refr.c ****             vdb->area.x2 = area_p->x2;
 1925              		.loc 1 471 26 view .LVU590
 1926 0134 2282     		strh	r2, [r4, #16]	@ movhi
 472:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y1 = row;
 1927              		.loc 1 472 13 is_stmt 1 view .LVU591
 472:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y1 = row;
 1928              		.loc 1 472 34 is_stmt 0 view .LVU592
 1929 0136 B6F90420 		ldrsh	r2, [r6, #4]
 472:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y1 = row;
 1930              		.loc 1 472 26 view .LVU593
 1931 013a A282     		strh	r2, [r4, #20]	@ movhi
 473:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y2 = row + max_row - 1;
 1932              		.loc 1 473 13 is_stmt 1 view .LVU594
 473:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y2 = row + max_row - 1;
 1933              		.loc 1 473 26 is_stmt 0 view .LVU595
 1934 013c 6382     		strh	r3, [r4, #18]	@ movhi
 474:lvgl/src/lv_core/lv_refr.c ****             if(vdb->area.y2 > y2) vdb->area.y2 = y2;
 1935              		.loc 1 474 13 is_stmt 1 view .LVU596
 474:lvgl/src/lv_core/lv_refr.c ****             if(vdb->area.y2 > y2) vdb->area.y2 = y2;
 1936              		.loc 1 474 32 is_stmt 0 view .LVU597
ARM GAS  D:\Temp\ccEl19zy.s 			page 64


 1937 013e 4344     		add	r3, r3, r8
 1938              	.LVL199:
 474:lvgl/src/lv_core/lv_refr.c ****             if(vdb->area.y2 > y2) vdb->area.y2 = y2;
 1939              		.loc 1 474 32 view .LVU598
 1940 0140 9DB2     		uxth	r5, r3
 474:lvgl/src/lv_core/lv_refr.c ****             if(vdb->area.y2 > y2) vdb->area.y2 = y2;
 1941              		.loc 1 474 42 view .LVU599
 1942 0142 6B1E     		subs	r3, r5, #1
 1943 0144 1BB2     		sxth	r3, r3
 474:lvgl/src/lv_core/lv_refr.c ****             if(vdb->area.y2 > y2) vdb->area.y2 = y2;
 1944              		.loc 1 474 26 view .LVU600
 1945 0146 E382     		strh	r3, [r4, #22]	@ movhi
 475:lvgl/src/lv_core/lv_refr.c ****             row_last = vdb->area.y2;
 1946              		.loc 1 475 13 is_stmt 1 view .LVU601
 475:lvgl/src/lv_core/lv_refr.c ****             row_last = vdb->area.y2;
 1947              		.loc 1 475 15 is_stmt 0 view .LVU602
 1948 0148 BB42     		cmp	r3, r7
 1949 014a E4DD     		ble	.L129
 475:lvgl/src/lv_core/lv_refr.c ****             row_last = vdb->area.y2;
 1950              		.loc 1 475 35 is_stmt 1 discriminator 1 view .LVU603
 475:lvgl/src/lv_core/lv_refr.c ****             row_last = vdb->area.y2;
 1951              		.loc 1 475 48 is_stmt 0 discriminator 1 view .LVU604
 1952 014c E782     		strh	r7, [r4, #22]	@ movhi
 1953 014e E2E7     		b	.L129
 1954              	.L134:
 477:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1955              		.loc 1 477 32 is_stmt 1 discriminator 1 view .LVU605
 477:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1956              		.loc 1 477 41 is_stmt 0 discriminator 1 view .LVU606
 1957 0150 104B     		ldr	r3, .L136
 1958 0152 1B68     		ldr	r3, [r3]
 477:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1959              		.loc 1 477 49 discriminator 1 view .LVU607
 1960 0154 5A68     		ldr	r2, [r3, #4]
 477:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1961              		.loc 1 477 68 discriminator 1 view .LVU608
 1962 0156 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 1963 015a 43F00203 		orr	r3, r3, #2
 1964 015e 82F82030 		strb	r3, [r2, #32]
 1965              	.LVL200:
 477:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1966              		.loc 1 477 68 discriminator 1 view .LVU609
 1967 0162 DCE7     		b	.L130
 1968              	.LVL201:
 1969              	.L135:
 482:lvgl/src/lv_core/lv_refr.c ****             /*Calc. the next y coordinates of VDB*/
 1970              		.loc 1 482 9 is_stmt 1 view .LVU610
 482:lvgl/src/lv_core/lv_refr.c ****             /*Calc. the next y coordinates of VDB*/
 1971              		.loc 1 482 11 is_stmt 0 view .LVU611
 1972 0164 B945     		cmp	r9, r7
 1973 0166 3FF473AF 		beq	.L118
 484:lvgl/src/lv_core/lv_refr.c ****             vdb->area.x2 = area_p->x2;
 1974              		.loc 1 484 13 is_stmt 1 view .LVU612
 484:lvgl/src/lv_core/lv_refr.c ****             vdb->area.x2 = area_p->x2;
 1975              		.loc 1 484 34 is_stmt 0 view .LVU613
 1976 016a B6F90020 		ldrsh	r2, [r6]
 484:lvgl/src/lv_core/lv_refr.c ****             vdb->area.x2 = area_p->x2;
ARM GAS  D:\Temp\ccEl19zy.s 			page 65


 1977              		.loc 1 484 26 view .LVU614
 1978 016e 2282     		strh	r2, [r4, #16]	@ movhi
 485:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y1 = row;
 1979              		.loc 1 485 13 is_stmt 1 view .LVU615
 485:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y1 = row;
 1980              		.loc 1 485 34 is_stmt 0 view .LVU616
 1981 0170 B6F90420 		ldrsh	r2, [r6, #4]
 485:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y1 = row;
 1982              		.loc 1 485 26 view .LVU617
 1983 0174 A282     		strh	r2, [r4, #20]	@ movhi
 486:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y2 = y2;
 1984              		.loc 1 486 13 is_stmt 1 view .LVU618
 486:lvgl/src/lv_core/lv_refr.c ****             vdb->area.y2 = y2;
 1985              		.loc 1 486 26 is_stmt 0 view .LVU619
 1986 0176 6382     		strh	r3, [r4, #18]	@ movhi
 487:lvgl/src/lv_core/lv_refr.c **** 
 1987              		.loc 1 487 13 is_stmt 1 view .LVU620
 487:lvgl/src/lv_core/lv_refr.c **** 
 1988              		.loc 1 487 26 is_stmt 0 view .LVU621
 1989 0178 E782     		strh	r7, [r4, #22]	@ movhi
 489:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1990              		.loc 1 489 13 is_stmt 1 view .LVU622
 489:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1991              		.loc 1 489 22 is_stmt 0 view .LVU623
 1992 017a 064B     		ldr	r3, .L136
 1993              	.LVL202:
 489:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1994              		.loc 1 489 22 view .LVU624
 1995 017c 1B68     		ldr	r3, [r3]
 489:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1996              		.loc 1 489 30 view .LVU625
 1997 017e 5A68     		ldr	r2, [r3, #4]
 489:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area_part(area_p);
 1998              		.loc 1 489 49 view .LVU626
 1999 0180 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 2000 0184 43F00203 		orr	r3, r3, #2
 2001 0188 82F82030 		strb	r3, [r2, #32]
 2002              	.LVL203:
 490:lvgl/src/lv_core/lv_refr.c ****         }
 2003              		.loc 1 490 13 is_stmt 1 view .LVU627
 2004 018c 3046     		mov	r0, r6
 2005 018e FFF7FEFF 		bl	lv_refr_area_part
 2006              	.LVL204:
 2007 0192 5DE7     		b	.L118
 2008              	.L137:
 2009              		.align	2
 2010              	.L136:
 2011 0194 00000000 		.word	.LANCHOR0
 2012              	.LBE92:
 2013              		.cfi_endproc
 2014              	.LFE472:
 2016              		.section	.text.lv_refr_areas,"ax",%progbits
 2017              		.align	1
 2018              		.syntax unified
 2019              		.thumb
 2020              		.thumb_func
 2021              		.fpu fpv4-sp-d16
ARM GAS  D:\Temp\ccEl19zy.s 			page 66


 2023              	lv_refr_areas:
 2024              	.LFB471:
 376:lvgl/src/lv_core/lv_refr.c ****     px_num = 0;
 2025              		.loc 1 376 1 view -0
 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 377:lvgl/src/lv_core/lv_refr.c **** 
 2029              		.loc 1 377 5 view .LVU629
 377:lvgl/src/lv_core/lv_refr.c **** 
 2030              		.loc 1 377 12 is_stmt 0 view .LVU630
 2031 0000 2B4B     		ldr	r3, .L153
 2032 0002 0022     		movs	r2, #0
 2033 0004 1A60     		str	r2, [r3]
 379:lvgl/src/lv_core/lv_refr.c **** 
 2034              		.loc 1 379 5 is_stmt 1 view .LVU631
 379:lvgl/src/lv_core/lv_refr.c **** 
 2035              		.loc 1 379 17 is_stmt 0 view .LVU632
 2036 0006 2B4B     		ldr	r3, .L153+4
 2037 0008 1A68     		ldr	r2, [r3]
 379:lvgl/src/lv_core/lv_refr.c **** 
 2038              		.loc 1 379 25 view .LVU633
 2039 000a B2F88231 		ldrh	r3, [r2, #386]
 2040 000e C3F30903 		ubfx	r3, r3, #0, #10
 379:lvgl/src/lv_core/lv_refr.c **** 
 2041              		.loc 1 379 7 view .LVU634
 2042 0012 002B     		cmp	r3, #0
 2043 0014 4BD0     		beq	.L148
 376:lvgl/src/lv_core/lv_refr.c ****     px_num = 0;
 2044              		.loc 1 376 1 view .LVU635
 2045 0016 70B5     		push	{r4, r5, r6, lr}
 2046              	.LCFI22:
 2047              		.cfi_def_cfa_offset 16
 2048              		.cfi_offset 4, -16
 2049              		.cfi_offset 5, -12
 2050              		.cfi_offset 6, -8
 2051              		.cfi_offset 14, -4
 382:lvgl/src/lv_core/lv_refr.c ****     int32_t last_i = 0;
 2052              		.loc 1 382 5 is_stmt 1 view .LVU636
 383:lvgl/src/lv_core/lv_refr.c ****     for(i = disp_refr->inv_p - 1; i >= 0; i--) {
 2053              		.loc 1 383 5 view .LVU637
 2054              	.LVL205:
 384:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 2055              		.loc 1 384 5 view .LVU638
 384:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 2056              		.loc 1 384 11 is_stmt 0 view .LVU639
 2057 0018 5C1E     		subs	r4, r3, #1
 2058              	.LVL206:
 2059              	.L140:
 384:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 2060              		.loc 1 384 5 discriminator 1 view .LVU640
 2061 001a 002C     		cmp	r4, #0
 2062 001c 05DB     		blt	.L151
 385:lvgl/src/lv_core/lv_refr.c ****             last_i = i;
 2063              		.loc 1 385 9 is_stmt 1 view .LVU641
 385:lvgl/src/lv_core/lv_refr.c ****             last_i = i;
 2064              		.loc 1 385 38 is_stmt 0 view .LVU642
ARM GAS  D:\Temp\ccEl19zy.s 			page 67


 2065 001e 1319     		adds	r3, r2, r4
 2066 0020 93F86231 		ldrb	r3, [r3, #354]	@ zero_extendqisi2
 385:lvgl/src/lv_core/lv_refr.c ****             last_i = i;
 2067              		.loc 1 385 11 view .LVU643
 2068 0024 13B1     		cbz	r3, .L141
 384:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 2069              		.loc 1 384 44 discriminator 2 view .LVU644
 2070 0026 013C     		subs	r4, r4, #1
 2071              	.LVL207:
 384:lvgl/src/lv_core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 2072              		.loc 1 384 44 discriminator 2 view .LVU645
 2073 0028 F7E7     		b	.L140
 2074              	.L151:
 383:lvgl/src/lv_core/lv_refr.c ****     for(i = disp_refr->inv_p - 1; i >= 0; i--) {
 2075              		.loc 1 383 13 view .LVU646
 2076 002a 0024     		movs	r4, #0
 2077              	.LVL208:
 2078              	.L141:
 391:lvgl/src/lv_core/lv_refr.c ****     disp_refr->driver.buffer->last_part = 0;
 2079              		.loc 1 391 5 is_stmt 1 view .LVU647
 391:lvgl/src/lv_core/lv_refr.c ****     disp_refr->driver.buffer->last_part = 0;
 2080              		.loc 1 391 22 is_stmt 0 view .LVU648
 2081 002c 5168     		ldr	r1, [r2, #4]
 391:lvgl/src/lv_core/lv_refr.c ****     disp_refr->driver.buffer->last_part = 0;
 2082              		.loc 1 391 41 view .LVU649
 2083 002e 91F82030 		ldrb	r3, [r1, #32]	@ zero_extendqisi2
 2084 0032 6FF30003 		bfc	r3, #0, #1
 2085 0036 81F82030 		strb	r3, [r1, #32]
 392:lvgl/src/lv_core/lv_refr.c **** 
 2086              		.loc 1 392 5 is_stmt 1 view .LVU650
 392:lvgl/src/lv_core/lv_refr.c **** 
 2087              		.loc 1 392 22 is_stmt 0 view .LVU651
 2088 003a 5268     		ldr	r2, [r2, #4]
 392:lvgl/src/lv_core/lv_refr.c **** 
 2089              		.loc 1 392 41 view .LVU652
 2090 003c 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 2091 0040 6FF34103 		bfc	r3, #1, #1
 2092 0044 82F82030 		strb	r3, [r2, #32]
 394:lvgl/src/lv_core/lv_refr.c ****         /*Refresh the unjoined areas*/
 2093              		.loc 1 394 5 is_stmt 1 view .LVU653
 2094              	.LVL209:
 394:lvgl/src/lv_core/lv_refr.c ****         /*Refresh the unjoined areas*/
 2095              		.loc 1 394 11 is_stmt 0 view .LVU654
 2096 0048 0025     		movs	r5, #0
 394:lvgl/src/lv_core/lv_refr.c ****         /*Refresh the unjoined areas*/
 2097              		.loc 1 394 5 view .LVU655
 2098 004a 18E0     		b	.L143
 2099              	.LVL210:
 2100              	.L145:
 399:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area(&disp_refr->inv_areas[i]);
 2101              		.loc 1 399 13 is_stmt 1 view .LVU656
 399:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area(&disp_refr->inv_areas[i]);
 2102              		.loc 1 399 30 is_stmt 0 view .LVU657
 2103 004c 4268     		ldr	r2, [r0, #4]
 399:lvgl/src/lv_core/lv_refr.c ****             lv_refr_area(&disp_refr->inv_areas[i]);
 2104              		.loc 1 399 49 view .LVU658
 2105 004e 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
ARM GAS  D:\Temp\ccEl19zy.s 			page 68


 2106 0052 6FF34103 		bfc	r3, #1, #1
 2107 0056 82F82030 		strb	r3, [r2, #32]
 400:lvgl/src/lv_core/lv_refr.c **** 
 2108              		.loc 1 400 13 is_stmt 1 view .LVU659
 400:lvgl/src/lv_core/lv_refr.c **** 
 2109              		.loc 1 400 26 is_stmt 0 view .LVU660
 2110 005a 05F10C06 		add	r6, r5, #12
 2111 005e F600     		lsls	r6, r6, #3
 2112 0060 3044     		add	r0, r0, r6
 400:lvgl/src/lv_core/lv_refr.c **** 
 2113              		.loc 1 400 13 view .LVU661
 2114 0062 0230     		adds	r0, r0, #2
 2115 0064 FFF7FEFF 		bl	lv_refr_area
 2116              	.LVL211:
 402:lvgl/src/lv_core/lv_refr.c ****         }
 2117              		.loc 1 402 13 is_stmt 1 view .LVU662
 402:lvgl/src/lv_core/lv_refr.c ****         }
 2118              		.loc 1 402 50 is_stmt 0 view .LVU663
 2119 0068 124B     		ldr	r3, .L153+4
 2120 006a 1868     		ldr	r0, [r3]
 402:lvgl/src/lv_core/lv_refr.c ****         }
 2121              		.loc 1 402 40 view .LVU664
 2122 006c 3044     		add	r0, r0, r6
 402:lvgl/src/lv_core/lv_refr.c ****         }
 2123              		.loc 1 402 23 view .LVU665
 2124 006e 0230     		adds	r0, r0, #2
 2125 0070 FFF7FEFF 		bl	lv_area_get_size
 2126              	.LVL212:
 402:lvgl/src/lv_core/lv_refr.c ****         }
 2127              		.loc 1 402 20 view .LVU666
 2128 0074 0E4A     		ldr	r2, .L153
 2129 0076 1368     		ldr	r3, [r2]
 2130 0078 1844     		add	r0, r0, r3
 2131 007a 1060     		str	r0, [r2]
 2132              	.L144:
 394:lvgl/src/lv_core/lv_refr.c ****         /*Refresh the unjoined areas*/
 2133              		.loc 1 394 39 discriminator 2 view .LVU667
 2134 007c 0135     		adds	r5, r5, #1
 2135              	.LVL213:
 2136              	.L143:
 394:lvgl/src/lv_core/lv_refr.c ****         /*Refresh the unjoined areas*/
 2137              		.loc 1 394 29 discriminator 1 view .LVU668
 2138 007e 0D4B     		ldr	r3, .L153+4
 2139 0080 1868     		ldr	r0, [r3]
 2140 0082 B0F88231 		ldrh	r3, [r0, #386]
 2141 0086 C3F30903 		ubfx	r3, r3, #0, #10
 394:lvgl/src/lv_core/lv_refr.c ****         /*Refresh the unjoined areas*/
 2142              		.loc 1 394 5 discriminator 1 view .LVU669
 2143 008a AB42     		cmp	r3, r5
 2144 008c 0EDD     		ble	.L152
 396:lvgl/src/lv_core/lv_refr.c **** 
 2145              		.loc 1 396 9 is_stmt 1 view .LVU670
 396:lvgl/src/lv_core/lv_refr.c **** 
 2146              		.loc 1 396 38 is_stmt 0 view .LVU671
 2147 008e 4319     		adds	r3, r0, r5
 2148 0090 93F86231 		ldrb	r3, [r3, #354]	@ zero_extendqisi2
 396:lvgl/src/lv_core/lv_refr.c **** 
ARM GAS  D:\Temp\ccEl19zy.s 			page 69


 2149              		.loc 1 396 11 view .LVU672
 2150 0094 002B     		cmp	r3, #0
 2151 0096 F1D1     		bne	.L144
 398:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.buffer->last_part = 0;
 2152              		.loc 1 398 13 is_stmt 1 view .LVU673
 398:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.buffer->last_part = 0;
 2153              		.loc 1 398 15 is_stmt 0 view .LVU674
 2154 0098 A542     		cmp	r5, r4
 2155 009a D7D1     		bne	.L145
 398:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.buffer->last_part = 0;
 2156              		.loc 1 398 29 is_stmt 1 discriminator 1 view .LVU675
 398:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.buffer->last_part = 0;
 2157              		.loc 1 398 46 is_stmt 0 discriminator 1 view .LVU676
 2158 009c 4268     		ldr	r2, [r0, #4]
 398:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.buffer->last_part = 0;
 2159              		.loc 1 398 65 discriminator 1 view .LVU677
 2160 009e 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 2161 00a2 43F00103 		orr	r3, r3, #1
 2162 00a6 82F82030 		strb	r3, [r2, #32]
 2163 00aa CFE7     		b	.L145
 2164              	.L152:
 405:lvgl/src/lv_core/lv_refr.c **** 
 2165              		.loc 1 405 1 view .LVU678
 2166 00ac 70BD     		pop	{r4, r5, r6, pc}
 2167              	.LVL214:
 2168              	.L148:
 2169              	.LCFI23:
 2170              		.cfi_def_cfa_offset 0
 2171              		.cfi_restore 4
 2172              		.cfi_restore 5
 2173              		.cfi_restore 6
 2174              		.cfi_restore 14
 405:lvgl/src/lv_core/lv_refr.c **** 
 2175              		.loc 1 405 1 view .LVU679
 2176 00ae 7047     		bx	lr
 2177              	.L154:
 2178              		.align	2
 2179              	.L153:
 2180 00b0 00000000 		.word	.LANCHOR1
 2181 00b4 00000000 		.word	.LANCHOR0
 2182              		.cfi_endproc
 2183              	.LFE471:
 2185              		.section	.text._lv_refr_set_disp_refreshing,"ax",%progbits
 2186              		.align	1
 2187              		.global	_lv_refr_set_disp_refreshing
 2188              		.syntax unified
 2189              		.thumb
 2190              		.thumb_func
 2191              		.fpu fpv4-sp-d16
 2193              	_lv_refr_set_disp_refreshing:
 2194              	.LVL215:
 2195              	.LFB467:
 167:lvgl/src/lv_core/lv_refr.c ****     disp_refr = disp;
 2196              		.loc 1 167 1 is_stmt 1 view -0
 2197              		.cfi_startproc
 2198              		@ args = 0, pretend = 0, frame = 0
 2199              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\Temp\ccEl19zy.s 			page 70


 2200              		@ link register save eliminated.
 168:lvgl/src/lv_core/lv_refr.c **** }
 2201              		.loc 1 168 5 view .LVU681
 168:lvgl/src/lv_core/lv_refr.c **** }
 2202              		.loc 1 168 15 is_stmt 0 view .LVU682
 2203 0000 014B     		ldr	r3, .L156
 2204 0002 1860     		str	r0, [r3]
 169:lvgl/src/lv_core/lv_refr.c **** 
 2205              		.loc 1 169 1 view .LVU683
 2206 0004 7047     		bx	lr
 2207              	.L157:
 2208 0006 00BF     		.align	2
 2209              	.L156:
 2210 0008 00000000 		.word	.LANCHOR0
 2211              		.cfi_endproc
 2212              	.LFE467:
 2214              		.section	.text._lv_disp_refr_task,"ax",%progbits
 2215              		.align	1
 2216              		.global	_lv_disp_refr_task
 2217              		.syntax unified
 2218              		.thumb
 2219              		.thumb_func
 2220              		.fpu fpv4-sp-d16
 2222              	_lv_disp_refr_task:
 2223              	.LVL216:
 2224              	.LFB468:
 176:lvgl/src/lv_core/lv_refr.c ****     LV_LOG_TRACE("lv_refr_task: started");
 2225              		.loc 1 176 1 is_stmt 1 view -0
 2226              		.cfi_startproc
 2227              		@ args = 0, pretend = 0, frame = 8
 2228              		@ frame_needed = 0, uses_anonymous_args = 0
 176:lvgl/src/lv_core/lv_refr.c ****     LV_LOG_TRACE("lv_refr_task: started");
 2229              		.loc 1 176 1 is_stmt 0 view .LVU685
 2230 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2231              	.LCFI24:
 2232              		.cfi_def_cfa_offset 36
 2233              		.cfi_offset 4, -36
 2234              		.cfi_offset 5, -32
 2235              		.cfi_offset 6, -28
 2236              		.cfi_offset 7, -24
 2237              		.cfi_offset 8, -20
 2238              		.cfi_offset 9, -16
 2239              		.cfi_offset 10, -12
 2240              		.cfi_offset 11, -8
 2241              		.cfi_offset 14, -4
 2242 0004 85B0     		sub	sp, sp, #20
 2243              	.LCFI25:
 2244              		.cfi_def_cfa_offset 56
 2245 0006 0446     		mov	r4, r0
 177:lvgl/src/lv_core/lv_refr.c **** 
 2246              		.loc 1 177 42 is_stmt 1 view .LVU686
 179:lvgl/src/lv_core/lv_refr.c ****     uint32_t elaps = 0;
 2247              		.loc 1 179 5 view .LVU687
 179:lvgl/src/lv_core/lv_refr.c ****     uint32_t elaps = 0;
 2248              		.loc 1 179 22 is_stmt 0 view .LVU688
 2249 0008 FFF7FEFF 		bl	lv_tick_get
 2250              	.LVL217:
ARM GAS  D:\Temp\ccEl19zy.s 			page 71


 180:lvgl/src/lv_core/lv_refr.c **** 
 2251              		.loc 1 180 5 is_stmt 1 view .LVU689
 182:lvgl/src/lv_core/lv_refr.c **** 
 2252              		.loc 1 182 5 view .LVU690
 182:lvgl/src/lv_core/lv_refr.c **** 
 2253              		.loc 1 182 21 is_stmt 0 view .LVU691
 2254 000c E368     		ldr	r3, [r4, #12]
 182:lvgl/src/lv_core/lv_refr.c **** 
 2255              		.loc 1 182 15 view .LVU692
 2256 000e A74A     		ldr	r2, .L184
 2257 0010 1360     		str	r3, [r2]
 192:lvgl/src/lv_core/lv_refr.c ****         disp_refr->inv_p = 0;
 2258              		.loc 1 192 5 is_stmt 1 view .LVU693
 192:lvgl/src/lv_core/lv_refr.c ****         disp_refr->inv_p = 0;
 2259              		.loc 1 192 17 is_stmt 0 view .LVU694
 2260 0012 5A6C     		ldr	r2, [r3, #68]
 192:lvgl/src/lv_core/lv_refr.c ****         disp_refr->inv_p = 0;
 2261              		.loc 1 192 7 view .LVU695
 2262 0014 62B3     		cbz	r2, .L178
 2263 0016 0646     		mov	r6, r0
 197:lvgl/src/lv_core/lv_refr.c **** 
 2264              		.loc 1 197 5 is_stmt 1 view .LVU696
 2265 0018 FFF7FEFF 		bl	lv_refr_join_area
 2266              	.LVL218:
 199:lvgl/src/lv_core/lv_refr.c **** 
 2267              		.loc 1 199 5 view .LVU697
 2268 001c FFF7FEFF 		bl	lv_refr_areas
 2269              	.LVL219:
 202:lvgl/src/lv_core/lv_refr.c ****         /* In true double buffered mode copy the refreshed areas to the new VDB to keep it up to da
 2270              		.loc 1 202 5 view .LVU698
 202:lvgl/src/lv_core/lv_refr.c ****         /* In true double buffered mode copy the refreshed areas to the new VDB to keep it up to da
 2271              		.loc 1 202 17 is_stmt 0 view .LVU699
 2272 0020 A24B     		ldr	r3, .L184
 2273 0022 1868     		ldr	r0, [r3]
 202:lvgl/src/lv_core/lv_refr.c ****         /* In true double buffered mode copy the refreshed areas to the new VDB to keep it up to da
 2274              		.loc 1 202 25 view .LVU700
 2275 0024 B0F88231 		ldrh	r3, [r0, #386]
 2276 0028 C3F30903 		ubfx	r3, r3, #0, #10
 202:lvgl/src/lv_core/lv_refr.c ****         /* In true double buffered mode copy the refreshed areas to the new VDB to keep it up to da
 2277              		.loc 1 202 7 view .LVU701
 2278 002c 4BBB     		cbnz	r3, .L179
 180:lvgl/src/lv_core/lv_refr.c **** 
 2279              		.loc 1 180 14 view .LVU702
 2280 002e 0025     		movs	r5, #0
 2281              	.LVL220:
 2282              	.L161:
 273:lvgl/src/lv_core/lv_refr.c ****     _lv_font_clean_up_fmt_txt();
 2283              		.loc 1 273 5 is_stmt 1 view .LVU703
 2284 0030 FFF7FEFF 		bl	_lv_mem_buf_free_all
 2285              	.LVL221:
 274:lvgl/src/lv_core/lv_refr.c **** 
 2286              		.loc 1 274 5 view .LVU704
 2287 0034 FFF7FEFF 		bl	_lv_font_clean_up_fmt_txt
 2288              	.LVL222:
 277:lvgl/src/lv_core/lv_refr.c ****     if(perf_label == NULL) {
 2289              		.loc 1 277 5 view .LVU705
 278:lvgl/src/lv_core/lv_refr.c ****         perf_label = lv_label_create(lv_layer_sys(), NULL);
ARM GAS  D:\Temp\ccEl19zy.s 			page 72


 2290              		.loc 1 278 5 view .LVU706
 278:lvgl/src/lv_core/lv_refr.c ****         perf_label = lv_label_create(lv_layer_sys(), NULL);
 2291              		.loc 1 278 19 is_stmt 0 view .LVU707
 2292 0038 9D4B     		ldr	r3, .L184+4
 2293 003a 1B68     		ldr	r3, [r3]
 278:lvgl/src/lv_core/lv_refr.c ****         perf_label = lv_label_create(lv_layer_sys(), NULL);
 2294              		.loc 1 278 7 view .LVU708
 2295 003c 002B     		cmp	r3, #0
 2296 003e 00F0AF80 		beq	.L180
 2297              	.L170:
 292:lvgl/src/lv_core/lv_refr.c ****     static uint32_t elaps_sum = 0;
 2298              		.loc 1 292 5 is_stmt 1 view .LVU709
 293:lvgl/src/lv_core/lv_refr.c ****     static uint32_t frame_cnt = 0;
 2299              		.loc 1 293 5 view .LVU710
 294:lvgl/src/lv_core/lv_refr.c ****     if(lv_tick_elaps(perf_last_time) < 300) {
 2300              		.loc 1 294 5 view .LVU711
 295:lvgl/src/lv_core/lv_refr.c ****         if(px_num > 5000) {
 2301              		.loc 1 295 5 view .LVU712
 295:lvgl/src/lv_core/lv_refr.c ****         if(px_num > 5000) {
 2302              		.loc 1 295 8 is_stmt 0 view .LVU713
 2303 0042 9C4B     		ldr	r3, .L184+8
 2304 0044 1868     		ldr	r0, [r3]
 2305 0046 FFF7FEFF 		bl	lv_tick_elaps
 2306              	.LVL223:
 295:lvgl/src/lv_core/lv_refr.c ****         if(px_num > 5000) {
 2307              		.loc 1 295 7 view .LVU714
 2308 004a B0F5967F 		cmp	r0, #300
 2309 004e 80F0EC80 		bcs	.L171
 296:lvgl/src/lv_core/lv_refr.c ****             elaps_sum += elaps;
 2310              		.loc 1 296 9 is_stmt 1 view .LVU715
 296:lvgl/src/lv_core/lv_refr.c ****             elaps_sum += elaps;
 2311              		.loc 1 296 19 is_stmt 0 view .LVU716
 2312 0052 994B     		ldr	r3, .L184+12
 2313 0054 1A68     		ldr	r2, [r3]
 296:lvgl/src/lv_core/lv_refr.c ****             elaps_sum += elaps;
 2314              		.loc 1 296 11 view .LVU717
 2315 0056 41F28833 		movw	r3, #5000
 2316 005a 9A42     		cmp	r2, r3
 2317 005c 0ED9     		bls	.L158
 297:lvgl/src/lv_core/lv_refr.c ****             frame_cnt ++;
 2318              		.loc 1 297 13 is_stmt 1 view .LVU718
 297:lvgl/src/lv_core/lv_refr.c ****             frame_cnt ++;
 2319              		.loc 1 297 23 is_stmt 0 view .LVU719
 2320 005e 974A     		ldr	r2, .L184+16
 2321 0060 1368     		ldr	r3, [r2]
 2322 0062 1D44     		add	r5, r5, r3
 2323              	.LVL224:
 297:lvgl/src/lv_core/lv_refr.c ****             frame_cnt ++;
 2324              		.loc 1 297 23 view .LVU720
 2325 0064 1560     		str	r5, [r2]
 298:lvgl/src/lv_core/lv_refr.c ****         }
 2326              		.loc 1 298 13 is_stmt 1 view .LVU721
 298:lvgl/src/lv_core/lv_refr.c ****         }
 2327              		.loc 1 298 23 is_stmt 0 view .LVU722
 2328 0066 964A     		ldr	r2, .L184+20
 2329 0068 1368     		ldr	r3, [r2]
 2330 006a 0133     		adds	r3, r3, #1
ARM GAS  D:\Temp\ccEl19zy.s 			page 73


 2331 006c 1360     		str	r3, [r2]
 2332 006e 05E0     		b	.L158
 2333              	.LVL225:
 2334              	.L178:
 193:lvgl/src/lv_core/lv_refr.c ****         return;
 2335              		.loc 1 193 9 is_stmt 1 view .LVU723
 193:lvgl/src/lv_core/lv_refr.c ****         return;
 2336              		.loc 1 193 26 is_stmt 0 view .LVU724
 2337 0070 B3F88221 		ldrh	r2, [r3, #386]
 2338 0074 6FF30902 		bfc	r2, #0, #10
 2339 0078 A3F88221 		strh	r2, [r3, #386]	@ movhi
 194:lvgl/src/lv_core/lv_refr.c ****     }
 2340              		.loc 1 194 9 is_stmt 1 view .LVU725
 2341              	.LVL226:
 2342              	.L158:
 322:lvgl/src/lv_core/lv_refr.c **** 
 2343              		.loc 1 322 1 is_stmt 0 view .LVU726
 2344 007c 05B0     		add	sp, sp, #20
 2345              	.LCFI26:
 2346              		.cfi_remember_state
 2347              		.cfi_def_cfa_offset 36
 2348              		@ sp needed
 2349 007e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2350              	.LVL227:
 2351              	.L179:
 2352              	.LCFI27:
 2353              		.cfi_restore_state
 205:lvgl/src/lv_core/lv_refr.c ****             if(disp_refr->driver.set_px_cb) {
 2354              		.loc 1 205 9 is_stmt 1 view .LVU727
 205:lvgl/src/lv_core/lv_refr.c ****             if(disp_refr->driver.set_px_cb) {
 2355              		.loc 1 205 12 is_stmt 0 view .LVU728
 2356 0082 FFF7FEFF 		bl	lv_disp_is_true_double_buf
 2357              	.LVL228:
 205:lvgl/src/lv_core/lv_refr.c ****             if(disp_refr->driver.set_px_cb) {
 2358              		.loc 1 205 11 view .LVU729
 2359 0086 18B1     		cbz	r0, .L162
 206:lvgl/src/lv_core/lv_refr.c ****                 LV_LOG_WARN("Can't handle 2 screen sized buffers with set_px_cb. Display is not ref
 2360              		.loc 1 206 13 is_stmt 1 view .LVU730
 206:lvgl/src/lv_core/lv_refr.c ****                 LV_LOG_WARN("Can't handle 2 screen sized buffers with set_px_cb. Display is not ref
 2361              		.loc 1 206 25 is_stmt 0 view .LVU731
 2362 0088 884B     		ldr	r3, .L184
 2363 008a 1868     		ldr	r0, [r3]
 206:lvgl/src/lv_core/lv_refr.c ****                 LV_LOG_WARN("Can't handle 2 screen sized buffers with set_px_cb. Display is not ref
 2364              		.loc 1 206 33 view .LVU732
 2365 008c 4369     		ldr	r3, [r0, #20]
 206:lvgl/src/lv_core/lv_refr.c ****                 LV_LOG_WARN("Can't handle 2 screen sized buffers with set_px_cb. Display is not ref
 2366              		.loc 1 206 15 view .LVU733
 2367 008e 03B3     		cbz	r3, .L181
 2368              	.LVL229:
 2369              	.L162:
 262:lvgl/src/lv_core/lv_refr.c ****         _lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
 2370              		.loc 1 262 9 is_stmt 1 view .LVU734
 262:lvgl/src/lv_core/lv_refr.c ****         _lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
 2371              		.loc 1 262 32 is_stmt 0 view .LVU735
 2372 0090 864C     		ldr	r4, .L184
 2373 0092 2068     		ldr	r0, [r4]
 262:lvgl/src/lv_core/lv_refr.c ****         _lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
ARM GAS  D:\Temp\ccEl19zy.s 			page 74


 2374              		.loc 1 262 9 view .LVU736
 2375 0094 4FF48071 		mov	r1, #256
 2376 0098 6230     		adds	r0, r0, #98
 2377 009a FFF7FEFF 		bl	_lv_memset_00
 2378              	.LVL230:
 263:lvgl/src/lv_core/lv_refr.c ****         disp_refr->inv_p = 0;
 2379              		.loc 1 263 9 is_stmt 1 view .LVU737
 263:lvgl/src/lv_core/lv_refr.c ****         disp_refr->inv_p = 0;
 2380              		.loc 1 263 32 is_stmt 0 view .LVU738
 2381 009e 2068     		ldr	r0, [r4]
 263:lvgl/src/lv_core/lv_refr.c ****         disp_refr->inv_p = 0;
 2382              		.loc 1 263 9 view .LVU739
 2383 00a0 2021     		movs	r1, #32
 2384 00a2 00F5B170 		add	r0, r0, #354
 2385 00a6 FFF7FEFF 		bl	_lv_memset_00
 2386              	.LVL231:
 264:lvgl/src/lv_core/lv_refr.c **** 
 2387              		.loc 1 264 9 is_stmt 1 view .LVU740
 264:lvgl/src/lv_core/lv_refr.c **** 
 2388              		.loc 1 264 18 is_stmt 0 view .LVU741
 2389 00aa 2368     		ldr	r3, [r4]
 264:lvgl/src/lv_core/lv_refr.c **** 
 2390              		.loc 1 264 26 view .LVU742
 2391 00ac B3F88221 		ldrh	r2, [r3, #386]
 2392 00b0 6FF30902 		bfc	r2, #0, #10
 2393 00b4 A3F88221 		strh	r2, [r3, #386]	@ movhi
 266:lvgl/src/lv_core/lv_refr.c ****         /*Call monitor cb if present*/
 2394              		.loc 1 266 9 is_stmt 1 view .LVU743
 266:lvgl/src/lv_core/lv_refr.c ****         /*Call monitor cb if present*/
 2395              		.loc 1 266 17 is_stmt 0 view .LVU744
 2396 00b8 3046     		mov	r0, r6
 2397 00ba FFF7FEFF 		bl	lv_tick_elaps
 2398              	.LVL232:
 2399 00be 0546     		mov	r5, r0
 2400              	.LVL233:
 268:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.monitor_cb(&disp_refr->driver, elaps, px_num);
 2401              		.loc 1 268 9 is_stmt 1 view .LVU745
 268:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.monitor_cb(&disp_refr->driver, elaps, px_num);
 2402              		.loc 1 268 21 is_stmt 0 view .LVU746
 2403 00c0 2068     		ldr	r0, [r4]
 2404              	.LVL234:
 268:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.monitor_cb(&disp_refr->driver, elaps, px_num);
 2405              		.loc 1 268 29 view .LVU747
 2406 00c2 8369     		ldr	r3, [r0, #24]
 268:lvgl/src/lv_core/lv_refr.c ****             disp_refr->driver.monitor_cb(&disp_refr->driver, elaps, px_num);
 2407              		.loc 1 268 11 view .LVU748
 2408 00c4 002B     		cmp	r3, #0
 2409 00c6 B3D0     		beq	.L161
 269:lvgl/src/lv_core/lv_refr.c ****         }
 2410              		.loc 1 269 13 is_stmt 1 view .LVU749
 2411 00c8 7B4A     		ldr	r2, .L184+12
 2412 00ca 1268     		ldr	r2, [r2]
 2413 00cc 2946     		mov	r1, r5
 2414 00ce 9847     		blx	r3
 2415              	.LVL235:
 2416 00d0 AEE7     		b	.L161
 2417              	.LVL236:
ARM GAS  D:\Temp\ccEl19zy.s 			page 75


 2418              	.L181:
 2419              	.LBB100:
 210:lvgl/src/lv_core/lv_refr.c **** 
 2420              		.loc 1 210 17 view .LVU750
 210:lvgl/src/lv_core/lv_refr.c **** 
 2421              		.loc 1 210 39 is_stmt 0 view .LVU751
 2422 00d2 FFF7FEFF 		bl	lv_disp_get_buf
 2423              	.LVL237:
 2424 00d6 0446     		mov	r4, r0
 2425              	.LVL238:
 213:lvgl/src/lv_core/lv_refr.c **** 
 2426              		.loc 1 213 17 is_stmt 1 view .LVU752
 2427 00d8 FFF7FEFF 		bl	lv_refr_vdb_flush
 2428              	.LVL239:
 218:lvgl/src/lv_core/lv_refr.c **** 
 2429              		.loc 1 218 17 view .LVU753
 2430              	.L163:
 218:lvgl/src/lv_core/lv_refr.c **** 
 2431              		.loc 1 218 37 discriminator 1 view .LVU754
 218:lvgl/src/lv_core/lv_refr.c **** 
 2432              		.loc 1 218 26 is_stmt 0 discriminator 1 view .LVU755
 2433 00dc A369     		ldr	r3, [r4, #24]
 218:lvgl/src/lv_core/lv_refr.c **** 
 2434              		.loc 1 218 22 discriminator 1 view .LVU756
 2435 00de 002B     		cmp	r3, #0
 2436 00e0 FCD1     		bne	.L163
 220:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_GPU_STM32_DMA2D
 2437              		.loc 1 220 17 is_stmt 1 view .LVU757
 2438              	.LVL240:
 224:lvgl/src/lv_core/lv_refr.c **** #endif
 2439              		.loc 1 224 17 view .LVU758
 224:lvgl/src/lv_core/lv_refr.c **** #endif
 2440              		.loc 1 224 53 is_stmt 0 view .LVU759
 2441 00e2 724B     		ldr	r3, .L184
 2442 00e4 1B68     		ldr	r3, [r3]
 224:lvgl/src/lv_core/lv_refr.c **** #endif
 2443              		.loc 1 224 61 view .LVU760
 2444 00e6 B3F90000 		ldrsh	r0, [r3]
 224:lvgl/src/lv_core/lv_refr.c **** #endif
 2445              		.loc 1 224 28 view .LVU761
 2446 00ea 4000     		lsls	r0, r0, #1
 2447 00ec FFF7FEFF 		bl	_lv_mem_buf_get
 2448              	.LVL241:
 2449 00f0 0290     		str	r0, [sp, #8]
 2450              	.LVL242:
 227:lvgl/src/lv_core/lv_refr.c ****                 uint8_t * buf_ina = (uint8_t *)vdb->buf_act == vdb->buf1 ? vdb->buf2 : vdb->buf1;
 2451              		.loc 1 227 17 is_stmt 1 view .LVU762
 227:lvgl/src/lv_core/lv_refr.c ****                 uint8_t * buf_ina = (uint8_t *)vdb->buf_act == vdb->buf1 ? vdb->buf2 : vdb->buf1;
 2452              		.loc 1 227 27 is_stmt 0 view .LVU763
 2453 00f2 D4F808B0 		ldr	fp, [r4, #8]
 2454              	.LVL243:
 228:lvgl/src/lv_core/lv_refr.c **** 
 2455              		.loc 1 228 17 is_stmt 1 view .LVU764
 228:lvgl/src/lv_core/lv_refr.c **** 
 2456              		.loc 1 228 67 is_stmt 0 view .LVU765
 2457 00f6 D4F800A0 		ldr	r10, [r4]
 228:lvgl/src/lv_core/lv_refr.c **** 
ARM GAS  D:\Temp\ccEl19zy.s 			page 76


 2458              		.loc 1 228 27 view .LVU766
 2459 00fa DA45     		cmp	r10, fp
 2460 00fc 07D0     		beq	.L182
 2461              	.L164:
 2462              	.LVL244:
 230:lvgl/src/lv_core/lv_refr.c ****                 uint16_t a;
 2463              		.loc 1 230 17 is_stmt 1 discriminator 4 view .LVU767
 230:lvgl/src/lv_core/lv_refr.c ****                 uint16_t a;
 2464              		.loc 1 230 35 is_stmt 0 discriminator 4 view .LVU768
 2465 00fe 6B4B     		ldr	r3, .L184
 2466 0100 1868     		ldr	r0, [r3]
 2467              	.LVL245:
 230:lvgl/src/lv_core/lv_refr.c ****                 uint16_t a;
 2468              		.loc 1 230 35 discriminator 4 view .LVU769
 2469 0102 FFF7FEFF 		bl	lv_disp_get_hor_res
 2470              	.LVL246:
 2471 0106 8146     		mov	r9, r0
 2472              	.LVL247:
 231:lvgl/src/lv_core/lv_refr.c ****                 for(a = 0; a < disp_refr->inv_p; a++) {
 2473              		.loc 1 231 17 is_stmt 1 discriminator 4 view .LVU770
 232:lvgl/src/lv_core/lv_refr.c ****                     if(disp_refr->inv_area_joined[a] == 0) {
 2474              		.loc 1 232 17 discriminator 4 view .LVU771
 232:lvgl/src/lv_core/lv_refr.c ****                     if(disp_refr->inv_area_joined[a] == 0) {
 2475              		.loc 1 232 23 is_stmt 0 discriminator 4 view .LVU772
 2476 0108 0027     		movs	r7, #0
 2477 010a 0396     		str	r6, [sp, #12]
 232:lvgl/src/lv_core/lv_refr.c ****                     if(disp_refr->inv_area_joined[a] == 0) {
 2478              		.loc 1 232 17 discriminator 4 view .LVU773
 2479 010c 04E0     		b	.L165
 2480              	.LVL248:
 2481              	.L182:
 228:lvgl/src/lv_core/lv_refr.c **** 
 2482              		.loc 1 228 27 discriminator 1 view .LVU774
 2483 010e D4F804A0 		ldr	r10, [r4, #4]
 2484 0112 F4E7     		b	.L164
 2485              	.LVL249:
 2486              	.L166:
 232:lvgl/src/lv_core/lv_refr.c ****                     if(disp_refr->inv_area_joined[a] == 0) {
 2487              		.loc 1 232 51 discriminator 2 view .LVU775
 2488 0114 0137     		adds	r7, r7, #1
 2489              	.LVL250:
 232:lvgl/src/lv_core/lv_refr.c ****                     if(disp_refr->inv_area_joined[a] == 0) {
 2490              		.loc 1 232 51 discriminator 2 view .LVU776
 2491 0116 BFB2     		uxth	r7, r7
 2492              	.LVL251:
 2493              	.L165:
 232:lvgl/src/lv_core/lv_refr.c ****                     if(disp_refr->inv_area_joined[a] == 0) {
 2494              		.loc 1 232 41 discriminator 1 view .LVU777
 2495 0118 644B     		ldr	r3, .L184
 2496 011a 1B68     		ldr	r3, [r3]
 2497 011c B3F88221 		ldrh	r2, [r3, #386]
 2498 0120 C2F30902 		ubfx	r2, r2, #0, #10
 232:lvgl/src/lv_core/lv_refr.c ****                     if(disp_refr->inv_area_joined[a] == 0) {
 2499              		.loc 1 232 17 discriminator 1 view .LVU778
 2500 0124 BA42     		cmp	r2, r7
 2501 0126 32D9     		bls	.L183
 233:lvgl/src/lv_core/lv_refr.c ****                         uint32_t start_offs =
ARM GAS  D:\Temp\ccEl19zy.s 			page 77


 2502              		.loc 1 233 21 is_stmt 1 view .LVU779
 233:lvgl/src/lv_core/lv_refr.c ****                         uint32_t start_offs =
 2503              		.loc 1 233 50 is_stmt 0 view .LVU780
 2504 0128 B846     		mov	r8, r7
 2505 012a DA19     		adds	r2, r3, r7
 2506 012c 92F86221 		ldrb	r2, [r2, #354]	@ zero_extendqisi2
 233:lvgl/src/lv_core/lv_refr.c ****                         uint32_t start_offs =
 2507              		.loc 1 233 23 view .LVU781
 2508 0130 002A     		cmp	r2, #0
 2509 0132 EFD1     		bne	.L166
 2510              	.LBB101:
 234:lvgl/src/lv_core/lv_refr.c ****                             (hres * disp_refr->inv_areas[a].y1 + disp_refr->inv_areas[a].x1) * size
 2511              		.loc 1 234 25 is_stmt 1 view .LVU782
 235:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_GPU_STM32_DMA2D
 2512              		.loc 1 235 60 is_stmt 0 view .LVU783
 2513 0134 07F10C02 		add	r2, r7, #12
 2514 0138 03EBC203 		add	r3, r3, r2, lsl #3
 2515 013c B3F90440 		ldrsh	r4, [r3, #4]
 235:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_GPU_STM32_DMA2D
 2516              		.loc 1 235 89 view .LVU784
 2517 0140 B3F90220 		ldrsh	r2, [r3, #2]
 235:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_GPU_STM32_DMA2D
 2518              		.loc 1 235 64 view .LVU785
 2519 0144 04FB0925 		mla	r5, r4, r9, r2
 234:lvgl/src/lv_core/lv_refr.c ****                             (hres * disp_refr->inv_areas[a].y1 + disp_refr->inv_areas[a].x1) * size
 2520              		.loc 1 234 34 view .LVU786
 2521 0148 6D00     		lsls	r5, r5, #1
 2522              	.LVL252:
 243:lvgl/src/lv_core/lv_refr.c ****                         uint32_t line_length = lv_area_get_width(&disp_refr->inv_areas[a]) * sizeof
 2523              		.loc 1 243 25 is_stmt 1 view .LVU787
 244:lvgl/src/lv_core/lv_refr.c **** 
 2524              		.loc 1 244 25 view .LVU788
 2525              	.LBB102:
 2526              	.LBI102:
 107:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** {
 2527              		.loc 3 107 26 view .LVU789
 2528              	.LBB103:
 109:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** }
 2529              		.loc 3 109 5 view .LVU790
 109:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** }
 2530              		.loc 3 109 31 is_stmt 0 view .LVU791
 2531 014a DE88     		ldrh	r6, [r3, #6]
 109:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** }
 2532              		.loc 3 109 44 view .LVU792
 2533 014c 92B2     		uxth	r2, r2
 109:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** }
 2534              		.loc 3 109 36 view .LVU793
 2535 014e B61A     		subs	r6, r6, r2
 2536 0150 B6B2     		uxth	r6, r6
 109:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** }
 2537              		.loc 3 109 49 view .LVU794
 2538 0152 0136     		adds	r6, r6, #1
 109:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** }
 2539              		.loc 3 109 12 view .LVU795
 2540 0154 36B2     		sxth	r6, r6
 2541              	.LVL253:
 109:lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h **** }
ARM GAS  D:\Temp\ccEl19zy.s 			page 78


 2542              		.loc 3 109 12 view .LVU796
 2543              	.LBE103:
 2544              	.LBE102:
 244:lvgl/src/lv_core/lv_refr.c **** 
 2545              		.loc 1 244 34 view .LVU797
 2546 0156 7600     		lsls	r6, r6, #1
 2547              	.LVL254:
 246:lvgl/src/lv_core/lv_refr.c ****                             /* The frame buffer is probably in an external RAM where sequential acc
 2548              		.loc 1 246 25 is_stmt 1 view .LVU798
 2549              	.L167:
 246:lvgl/src/lv_core/lv_refr.c ****                             /* The frame buffer is probably in an external RAM where sequential acc
 2550              		.loc 1 246 75 is_stmt 0 discriminator 1 view .LVU799
 2551 0158 544B     		ldr	r3, .L184
 2552 015a 1B68     		ldr	r3, [r3]
 246:lvgl/src/lv_core/lv_refr.c ****                             /* The frame buffer is probably in an external RAM where sequential acc
 2553              		.loc 1 246 89 discriminator 1 view .LVU800
 2554 015c 08F10C02 		add	r2, r8, #12
 2555 0160 03EBC203 		add	r3, r3, r2, lsl #3
 2556 0164 B3F90830 		ldrsh	r3, [r3, #8]
 246:lvgl/src/lv_core/lv_refr.c ****                             /* The frame buffer is probably in an external RAM where sequential acc
 2557              		.loc 1 246 25 discriminator 1 view .LVU801
 2558 0168 A342     		cmp	r3, r4
 2559 016a D3DB     		blt	.L166
 249:lvgl/src/lv_core/lv_refr.c ****                             _lv_memcpy(buf_act + start_offs, copy_buf, line_length);
 2560              		.loc 1 249 29 is_stmt 1 discriminator 3 view .LVU802
 2561 016c 3246     		mov	r2, r6
 2562 016e 0AEB0501 		add	r1, r10, r5
 2563 0172 0298     		ldr	r0, [sp, #8]
 2564 0174 FFF7FEFF 		bl	_lv_memcpy
 2565              	.LVL255:
 250:lvgl/src/lv_core/lv_refr.c ****                             start_offs += hres * sizeof(lv_color_t);
 2566              		.loc 1 250 29 discriminator 3 view .LVU803
 2567 0178 3246     		mov	r2, r6
 2568 017a 0299     		ldr	r1, [sp, #8]
 2569 017c 0BEB0500 		add	r0, fp, r5
 2570 0180 FFF7FEFF 		bl	_lv_memcpy
 2571              	.LVL256:
 251:lvgl/src/lv_core/lv_refr.c ****                         }
 2572              		.loc 1 251 29 discriminator 3 view .LVU804
 251:lvgl/src/lv_core/lv_refr.c ****                         }
 2573              		.loc 1 251 40 is_stmt 0 discriminator 3 view .LVU805
 2574 0184 05EB4905 		add	r5, r5, r9, lsl #1
 2575              	.LVL257:
 246:lvgl/src/lv_core/lv_refr.c ****                             /* The frame buffer is probably in an external RAM where sequential acc
 2576              		.loc 1 246 95 discriminator 3 view .LVU806
 2577 0188 0134     		adds	r4, r4, #1
 2578              	.LVL258:
 246:lvgl/src/lv_core/lv_refr.c ****                             /* The frame buffer is probably in an external RAM where sequential acc
 2579              		.loc 1 246 95 discriminator 3 view .LVU807
 2580 018a 24B2     		sxth	r4, r4
 2581              	.LVL259:
 246:lvgl/src/lv_core/lv_refr.c ****                             /* The frame buffer is probably in an external RAM where sequential acc
 2582              		.loc 1 246 95 discriminator 3 view .LVU808
 2583 018c E4E7     		b	.L167
 2584              	.LVL260:
 2585              	.L183:
 246:lvgl/src/lv_core/lv_refr.c ****                             /* The frame buffer is probably in an external RAM where sequential acc
ARM GAS  D:\Temp\ccEl19zy.s 			page 79


 2586              		.loc 1 246 95 discriminator 3 view .LVU809
 2587 018e 039E     		ldr	r6, [sp, #12]
 2588              	.LBE101:
 257:lvgl/src/lv_core/lv_refr.c ****             }
 2589              		.loc 1 257 17 is_stmt 1 view .LVU810
 257:lvgl/src/lv_core/lv_refr.c ****             }
 2590              		.loc 1 257 19 is_stmt 0 view .LVU811
 2591 0190 029B     		ldr	r3, [sp, #8]
 2592 0192 002B     		cmp	r3, #0
 2593 0194 3FF47CAF 		beq	.L162
 257:lvgl/src/lv_core/lv_refr.c ****             }
 2594              		.loc 1 257 30 is_stmt 1 discriminator 1 view .LVU812
 2595 0198 1846     		mov	r0, r3
 2596 019a FFF7FEFF 		bl	_lv_mem_buf_release
 2597              	.LVL261:
 2598 019e 77E7     		b	.L162
 2599              	.LVL262:
 2600              	.L180:
 257:lvgl/src/lv_core/lv_refr.c ****             }
 2601              		.loc 1 257 30 is_stmt 0 discriminator 1 view .LVU813
 2602              	.LBE100:
 279:lvgl/src/lv_core/lv_refr.c ****         lv_label_set_align(perf_label, LV_LABEL_ALIGN_RIGHT);
 2603              		.loc 1 279 9 is_stmt 1 view .LVU814
 2604              	.LBB104:
 2605              	.LBI104:
 2606              		.file 5 "lvgl/src/lv_core/lv_disp.h"
   1:lvgl/src/lv_core/lv_disp.h **** /**
   2:lvgl/src/lv_core/lv_disp.h ****  * @file lv_disp.h
   3:lvgl/src/lv_core/lv_disp.h ****  *
   4:lvgl/src/lv_core/lv_disp.h ****  */
   5:lvgl/src/lv_core/lv_disp.h **** 
   6:lvgl/src/lv_core/lv_disp.h **** #ifndef LV_DISP_H
   7:lvgl/src/lv_core/lv_disp.h **** #define LV_DISP_H
   8:lvgl/src/lv_core/lv_disp.h **** 
   9:lvgl/src/lv_core/lv_disp.h **** #ifdef __cplusplus
  10:lvgl/src/lv_core/lv_disp.h **** extern "C" {
  11:lvgl/src/lv_core/lv_disp.h **** #endif
  12:lvgl/src/lv_core/lv_disp.h **** 
  13:lvgl/src/lv_core/lv_disp.h **** /*********************
  14:lvgl/src/lv_core/lv_disp.h ****  *      INCLUDES
  15:lvgl/src/lv_core/lv_disp.h ****  *********************/
  16:lvgl/src/lv_core/lv_disp.h **** #include "../lv_hal/lv_hal.h"
  17:lvgl/src/lv_core/lv_disp.h **** #include "lv_obj.h"
  18:lvgl/src/lv_core/lv_disp.h **** 
  19:lvgl/src/lv_core/lv_disp.h **** /*********************
  20:lvgl/src/lv_core/lv_disp.h ****  *      DEFINES
  21:lvgl/src/lv_core/lv_disp.h ****  *********************/
  22:lvgl/src/lv_core/lv_disp.h **** 
  23:lvgl/src/lv_core/lv_disp.h **** /**********************
  24:lvgl/src/lv_core/lv_disp.h ****  *      TYPEDEFS
  25:lvgl/src/lv_core/lv_disp.h ****  **********************/
  26:lvgl/src/lv_core/lv_disp.h **** 
  27:lvgl/src/lv_core/lv_disp.h **** typedef enum {
  28:lvgl/src/lv_core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  29:lvgl/src/lv_core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  30:lvgl/src/lv_core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  31:lvgl/src/lv_core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
ARM GAS  D:\Temp\ccEl19zy.s 			page 80


  32:lvgl/src/lv_core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  33:lvgl/src/lv_core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  34:lvgl/src/lv_core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  35:lvgl/src/lv_core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  36:lvgl/src/lv_core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  37:lvgl/src/lv_core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  38:lvgl/src/lv_core/lv_disp.h **** } lv_scr_load_anim_t;
  39:lvgl/src/lv_core/lv_disp.h **** 
  40:lvgl/src/lv_core/lv_disp.h **** /**********************
  41:lvgl/src/lv_core/lv_disp.h ****  * GLOBAL PROTOTYPES
  42:lvgl/src/lv_core/lv_disp.h ****  **********************/
  43:lvgl/src/lv_core/lv_disp.h **** 
  44:lvgl/src/lv_core/lv_disp.h **** /**
  45:lvgl/src/lv_core/lv_disp.h ****  * Return with a pointer to the active screen
  46:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  47:lvgl/src/lv_core/lv_disp.h ****  * screen)
  48:lvgl/src/lv_core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  49:lvgl/src/lv_core/lv_disp.h ****  */
  50:lvgl/src/lv_core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  51:lvgl/src/lv_core/lv_disp.h **** 
  52:lvgl/src/lv_core/lv_disp.h **** /**
  53:lvgl/src/lv_core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  54:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  55:lvgl/src/lv_core/lv_disp.h ****  * screen)
  56:lvgl/src/lv_core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  57:lvgl/src/lv_core/lv_disp.h ****  */
  58:lvgl/src/lv_core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  59:lvgl/src/lv_core/lv_disp.h **** 
  60:lvgl/src/lv_core/lv_disp.h **** /**
  61:lvgl/src/lv_core/lv_disp.h ****  * Make a screen active
  62:lvgl/src/lv_core/lv_disp.h ****  * @param scr pointer to a screen
  63:lvgl/src/lv_core/lv_disp.h ****  */
  64:lvgl/src/lv_core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  65:lvgl/src/lv_core/lv_disp.h **** 
  66:lvgl/src/lv_core/lv_disp.h **** /**
  67:lvgl/src/lv_core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  68:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  69:lvgl/src/lv_core/lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  70:lvgl/src/lv_core/lv_disp.h ****  */
  71:lvgl/src/lv_core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  72:lvgl/src/lv_core/lv_disp.h **** 
  73:lvgl/src/lv_core/lv_disp.h **** /**
  74:lvgl/src/lv_core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  75:lvgl/src/lv_core/lv_disp.h ****  * layer)
  76:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to display which sys. layer should be get. (NULL to use the default screen)
  77:lvgl/src/lv_core/lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  78:lvgl/src/lv_core/lv_disp.h ****  */
  79:lvgl/src/lv_core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  80:lvgl/src/lv_core/lv_disp.h **** 
  81:lvgl/src/lv_core/lv_disp.h **** /**
  82:lvgl/src/lv_core/lv_disp.h ****  * Assign a screen to a display.
  83:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to a display where to assign the screen
  84:lvgl/src/lv_core/lv_disp.h ****  * @param scr pointer to a screen object to assign
  85:lvgl/src/lv_core/lv_disp.h ****  */
  86:lvgl/src/lv_core/lv_disp.h **** void lv_disp_assign_screen(lv_disp_t * disp, lv_obj_t * scr);
  87:lvgl/src/lv_core/lv_disp.h **** 
  88:lvgl/src/lv_core/lv_disp.h **** /**
ARM GAS  D:\Temp\ccEl19zy.s 			page 81


  89:lvgl/src/lv_core/lv_disp.h ****  * Set the background color of a display
  90:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to a display
  91:lvgl/src/lv_core/lv_disp.h ****  * @param color color of the background
  92:lvgl/src/lv_core/lv_disp.h ****  */
  93:lvgl/src/lv_core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
  94:lvgl/src/lv_core/lv_disp.h **** 
  95:lvgl/src/lv_core/lv_disp.h **** /**
  96:lvgl/src/lv_core/lv_disp.h ****  * Set the background image of a display
  97:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to a display
  98:lvgl/src/lv_core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
  99:lvgl/src/lv_core/lv_disp.h ****  */
 100:lvgl/src/lv_core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 101:lvgl/src/lv_core/lv_disp.h **** 
 102:lvgl/src/lv_core/lv_disp.h **** /**
 103:lvgl/src/lv_core/lv_disp.h ****  * Opacity of the background
 104:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to a display
 105:lvgl/src/lv_core/lv_disp.h ****  * @param opa opacity (0..255)
 106:lvgl/src/lv_core/lv_disp.h ****  */
 107:lvgl/src/lv_core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 108:lvgl/src/lv_core/lv_disp.h **** 
 109:lvgl/src/lv_core/lv_disp.h **** #if LV_USE_ANIMATION
 110:lvgl/src/lv_core/lv_disp.h **** 
 111:lvgl/src/lv_core/lv_disp.h **** /**
 112:lvgl/src/lv_core/lv_disp.h ****  * Switch screen with animation
 113:lvgl/src/lv_core/lv_disp.h ****  * @param scr pointer to the new screen to load
 114:lvgl/src/lv_core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 115:lvgl/src/lv_core/lv_disp.h ****  * @param time time of the animation
 116:lvgl/src/lv_core/lv_disp.h ****  * @param delay delay before the transition
 117:lvgl/src/lv_core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 118:lvgl/src/lv_core/lv_disp.h ****  */
 119:lvgl/src/lv_core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 120:lvgl/src/lv_core/lv_disp.h **** 
 121:lvgl/src/lv_core/lv_disp.h **** #endif
 122:lvgl/src/lv_core/lv_disp.h **** /**
 123:lvgl/src/lv_core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 124:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 125:lvgl/src/lv_core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 126:lvgl/src/lv_core/lv_disp.h ****  */
 127:lvgl/src/lv_core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 128:lvgl/src/lv_core/lv_disp.h **** 
 129:lvgl/src/lv_core/lv_disp.h **** /**
 130:lvgl/src/lv_core/lv_disp.h ****  * Manually trigger an activity on a display
 131:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 132:lvgl/src/lv_core/lv_disp.h ****  */
 133:lvgl/src/lv_core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 134:lvgl/src/lv_core/lv_disp.h **** 
 135:lvgl/src/lv_core/lv_disp.h **** /**
 136:lvgl/src/lv_core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 137:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 138:lvgl/src/lv_core/lv_disp.h ****  */
 139:lvgl/src/lv_core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 140:lvgl/src/lv_core/lv_disp.h **** 
 141:lvgl/src/lv_core/lv_disp.h **** /**
 142:lvgl/src/lv_core/lv_disp.h ****  * Get a pointer to the screen refresher task to
 143:lvgl/src/lv_core/lv_disp.h ****  * modify its parameters with `lv_task_...` functions.
 144:lvgl/src/lv_core/lv_disp.h ****  * @param disp pointer to a display
 145:lvgl/src/lv_core/lv_disp.h ****  * @return pointer to the display refresher task. (NULL on error)
ARM GAS  D:\Temp\ccEl19zy.s 			page 82


 146:lvgl/src/lv_core/lv_disp.h ****  */
 147:lvgl/src/lv_core/lv_disp.h **** lv_task_t * _lv_disp_get_refr_task(lv_disp_t * disp);
 148:lvgl/src/lv_core/lv_disp.h **** 
 149:lvgl/src/lv_core/lv_disp.h **** /*------------------------------------------------
 150:lvgl/src/lv_core/lv_disp.h ****  * To improve backward compatibility
 151:lvgl/src/lv_core/lv_disp.h ****  * Recommended only if you have one display
 152:lvgl/src/lv_core/lv_disp.h ****  *------------------------------------------------*/
 153:lvgl/src/lv_core/lv_disp.h **** 
 154:lvgl/src/lv_core/lv_disp.h **** /**
 155:lvgl/src/lv_core/lv_disp.h ****  * Get the active screen of the default display
 156:lvgl/src/lv_core/lv_disp.h ****  * @return pointer to the active screen
 157:lvgl/src/lv_core/lv_disp.h ****  */
 158:lvgl/src/lv_core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 159:lvgl/src/lv_core/lv_disp.h **** {
 160:lvgl/src/lv_core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 161:lvgl/src/lv_core/lv_disp.h **** }
 162:lvgl/src/lv_core/lv_disp.h **** 
 163:lvgl/src/lv_core/lv_disp.h **** /**
 164:lvgl/src/lv_core/lv_disp.h ****  * Get the top layer of the default display
 165:lvgl/src/lv_core/lv_disp.h ****  * @return pointer to the top layer
 166:lvgl/src/lv_core/lv_disp.h ****  */
 167:lvgl/src/lv_core/lv_disp.h **** static inline lv_obj_t * lv_layer_top(void)
 168:lvgl/src/lv_core/lv_disp.h **** {
 169:lvgl/src/lv_core/lv_disp.h ****     return lv_disp_get_layer_top(lv_disp_get_default());
 170:lvgl/src/lv_core/lv_disp.h **** }
 171:lvgl/src/lv_core/lv_disp.h **** 
 172:lvgl/src/lv_core/lv_disp.h **** /**
 173:lvgl/src/lv_core/lv_disp.h ****  * Get the active screen of the default display
 174:lvgl/src/lv_core/lv_disp.h ****  * @return pointer to the sys layer
 175:lvgl/src/lv_core/lv_disp.h ****  */
 176:lvgl/src/lv_core/lv_disp.h **** static inline lv_obj_t * lv_layer_sys(void)
 2607              		.loc 5 176 26 view .LVU815
 2608              	.LBB105:
 177:lvgl/src/lv_core/lv_disp.h **** {
 178:lvgl/src/lv_core/lv_disp.h ****     return lv_disp_get_layer_sys(lv_disp_get_default());
 2609              		.loc 5 178 5 view .LVU816
 2610              		.loc 5 178 12 is_stmt 0 view .LVU817
 2611 01a0 FFF7FEFF 		bl	lv_disp_get_default
 2612              	.LVL263:
 2613 01a4 FFF7FEFF 		bl	lv_disp_get_layer_sys
 2614              	.LVL264:
 2615              	.LBE105:
 2616              	.LBE104:
 279:lvgl/src/lv_core/lv_refr.c ****         lv_label_set_align(perf_label, LV_LABEL_ALIGN_RIGHT);
 2617              		.loc 1 279 22 view .LVU818
 2618 01a8 0021     		movs	r1, #0
 2619 01aa FFF7FEFF 		bl	lv_label_create
 2620              	.LVL265:
 279:lvgl/src/lv_core/lv_refr.c ****         lv_label_set_align(perf_label, LV_LABEL_ALIGN_RIGHT);
 2621              		.loc 1 279 20 view .LVU819
 2622 01ae 404C     		ldr	r4, .L184+4
 2623 01b0 2060     		str	r0, [r4]
 280:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_bg_opa(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, LV_OPA_COVE
 2624              		.loc 1 280 9 is_stmt 1 view .LVU820
 2625 01b2 0221     		movs	r1, #2
 2626 01b4 FFF7FEFF 		bl	lv_label_set_align
 2627              	.LVL266:
ARM GAS  D:\Temp\ccEl19zy.s 			page 83


 281:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_bg_color(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, LV_COLOR_
 2628              		.loc 1 281 9 view .LVU821
 2629              	.LBB106:
 2630              	.LBI106:
 110:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_TOP, pad_top, lv_style_int_t, _int, scalar)
 111:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 112:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 113:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 114:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 115:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 116:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_BOTTOM, margin_bottom, lv_style_int_t, _int, scalar)
 117:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_LEFT, margin_left, lv_style_int_t, _int, scalar)
 118:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_RIGHT, margin_right, lv_style_int_t, _int, scalar)
 119:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_BLEND_MODE, bg_blend_mode, lv_blend_mode_t, _int, scalar)
 120:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_MAIN_STOP, bg_main_stop, lv_style_int_t, _int, scalar)
 121:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_STOP, bg_grad_stop, lv_style_int_t, _int, scalar)
 122:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_DIR, bg_grad_dir, lv_grad_dir_t, _int, scalar)
 123:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_COLOR, bg_color, lv_color_t, _color, nonscalar)
 124:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_COLOR, bg_grad_color, lv_color_t, _color, nonscalar)
 125:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_OPA, bg_opa, lv_opa_t, _opa, scalar)
 2631              		.loc 4 125 1 view .LVU822
 2632              	.LBB107:
 2633              		.loc 4 125 1 view .LVU823
 2634 01b8 FF23     		movs	r3, #255
 2635 01ba 2C22     		movs	r2, #44
 2636 01bc 0021     		movs	r1, #0
 2637 01be 2068     		ldr	r0, [r4]
 2638 01c0 FFF7FEFF 		bl	_lv_obj_set_style_local_opa
 2639              	.LVL267:
 2640              		.loc 4 125 1 is_stmt 0 view .LVU824
 2641              	.LBE107:
 2642              	.LBE106:
 282:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_text_color(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, LV_COLO
 2643              		.loc 1 282 9 is_stmt 1 view .LVU825
 2644              	.LBB108:
 2645              	.LBI108:
 123:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_COLOR, bg_grad_color, lv_color_t, _color, nonscalar)
 2646              		.loc 4 123 1 view .LVU826
 2647              	.LBB109:
 123:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_COLOR, bg_grad_color, lv_color_t, _color, nonscalar)
 2648              		.loc 4 123 1 view .LVU827
 2649 01c4 4FF00003 		mov	r3, #0	@ movhi
 2650 01c8 2922     		movs	r2, #41
 2651 01ca 0021     		movs	r1, #0
 2652 01cc 2068     		ldr	r0, [r4]
 2653 01ce FFF7FEFF 		bl	_lv_obj_set_style_local_color
 2654              	.LVL268:
 123:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_COLOR, bg_grad_color, lv_color_t, _color, nonscalar)
 2655              		.loc 4 123 1 is_stmt 0 view .LVU828
 2656              	.LBE109:
 2657              	.LBE108:
 283:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_pad_top(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, 3);
 2658              		.loc 1 283 9 is_stmt 1 view .LVU829
 2659              	.LBB110:
 2660              	.LBI110:
 126:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_WIDTH, border_width, lv_style_int_t, _int, scalar)
 127:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_SIDE, border_side, lv_border_side_t, _int, scalar)
ARM GAS  D:\Temp\ccEl19zy.s 			page 84


 128:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_BLEND_MODE, border_blend_mode, lv_blend_mode_t, _int, scalar)
 129:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_POST, border_post, bool, _int, scalar)
 130:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_COLOR, border_color, lv_color_t, _color, nonscalar)
 131:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_OPA, border_opa, lv_opa_t, _opa, scalar)
 132:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_WIDTH, outline_width, lv_style_int_t, _int, scalar)
 133:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_PAD, outline_pad, lv_style_int_t, _int, scalar)
 134:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_BLEND_MODE, outline_blend_mode, lv_blend_mode_t, _int, scalar
 135:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_COLOR, outline_color, lv_color_t, _color, nonscalar)
 136:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_OPA, outline_opa, lv_opa_t, _opa, scalar)
 137:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_WIDTH, shadow_width, lv_style_int_t, _int, scalar)
 138:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_X, shadow_ofs_x, lv_style_int_t, _int, scalar)
 139:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_Y, shadow_ofs_y, lv_style_int_t, _int, scalar)
 140:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_SPREAD, shadow_spread, lv_style_int_t, _int, scalar)
 141:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_BLEND_MODE, shadow_blend_mode, lv_blend_mode_t, _int, scalar)
 142:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_COLOR, shadow_color, lv_color_t, _color, nonscalar)
 143:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OPA, shadow_opa, lv_opa_t, _opa, scalar)
 144:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_REPEAT, pattern_repeat, bool, _int, scalar)
 145:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_BLEND_MODE, pattern_blend_mode, lv_blend_mode_t, _int, scalar
 146:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR, pattern_recolor, lv_color_t, _color, nonscalar)
 147:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_OPA, pattern_opa, lv_opa_t, _opa, scalar)
 148:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR_OPA, pattern_recolor_opa, lv_opa_t, _opa, scalar)
 149:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_IMAGE, pattern_image, const void *, _ptr, scalar)
 150:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LETTER_SPACE, value_letter_space, lv_style_int_t, _int, scalar)
 151:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LINE_SPACE, value_line_space, lv_style_int_t, _int, scalar)
 152:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_BLEND_MODE, value_blend_mode, lv_blend_mode_t, _int, scalar)
 153:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_X, value_ofs_x, lv_style_int_t, _int, scalar)
 154:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_Y, value_ofs_y, lv_style_int_t, _int, scalar)
 155:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_ALIGN, value_align, lv_align_t, _int, scalar)
 156:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_COLOR, value_color, lv_color_t, _color, nonscalar)
 157:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OPA, value_opa, lv_opa_t, _opa, scalar)
 158:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_FONT, value_font, const lv_font_t *, _ptr, scalar)
 159:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_STR, value_str, const char *, _ptr, scalar)
 160:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LETTER_SPACE, text_letter_space, lv_style_int_t, _int, scalar)
 161:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LINE_SPACE, text_line_space, lv_style_int_t, _int, scalar)
 162:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 163:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_BLEND_MODE, text_blend_mode, lv_blend_mode_t, _int, scalar)
 164:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_COLOR, text_color, lv_color_t, _color, nonscalar)
 2661              		.loc 4 164 1 view .LVU830
 2662              	.LBB111:
 2663              		.loc 4 164 1 view .LVU831
 2664 01d2 3C4B     		ldr	r3, .L184+24
 2665 01d4 1B88     		ldrh	r3, [r3]
 2666 01d6 48F28902 		movw	r2, #32905
 2667 01da 0021     		movs	r1, #0
 2668 01dc 2068     		ldr	r0, [r4]
 2669 01de FFF7FEFF 		bl	_lv_obj_set_style_local_color
 2670              	.LVL269:
 2671              		.loc 4 164 1 is_stmt 0 view .LVU832
 2672              	.LBE111:
 2673              	.LBE110:
 284:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_pad_bottom(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, 3);
 2674              		.loc 1 284 9 is_stmt 1 view .LVU833
 2675              	.LBB112:
 2676              	.LBI112:
 110:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 2677              		.loc 4 110 1 view .LVU834
 2678              	.LBB113:
ARM GAS  D:\Temp\ccEl19zy.s 			page 85


 110:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 2679              		.loc 4 110 1 view .LVU835
 2680 01e2 0323     		movs	r3, #3
 2681 01e4 1022     		movs	r2, #16
 2682 01e6 0021     		movs	r1, #0
 2683 01e8 2068     		ldr	r0, [r4]
 2684 01ea FFF7FEFF 		bl	_lv_obj_set_style_local_int
 2685              	.LVL270:
 110:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 2686              		.loc 4 110 1 is_stmt 0 view .LVU836
 2687              	.LBE113:
 2688              	.LBE112:
 285:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_pad_left(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, 3);
 2689              		.loc 1 285 9 is_stmt 1 view .LVU837
 2690              	.LBB114:
 2691              	.LBI114:
 111:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 2692              		.loc 4 111 1 view .LVU838
 2693              	.LBB115:
 111:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 2694              		.loc 4 111 1 view .LVU839
 2695 01ee 0323     		movs	r3, #3
 2696 01f0 1122     		movs	r2, #17
 2697 01f2 0021     		movs	r1, #0
 2698 01f4 2068     		ldr	r0, [r4]
 2699 01f6 FFF7FEFF 		bl	_lv_obj_set_style_local_int
 2700              	.LVL271:
 111:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 2701              		.loc 4 111 1 is_stmt 0 view .LVU840
 2702              	.LBE115:
 2703              	.LBE114:
 286:lvgl/src/lv_core/lv_refr.c ****         lv_obj_set_style_local_pad_right(perf_label, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, 3);
 2704              		.loc 1 286 9 is_stmt 1 view .LVU841
 2705              	.LBB116:
 2706              	.LBI116:
 112:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2707              		.loc 4 112 1 view .LVU842
 2708              	.LBB117:
 112:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2709              		.loc 4 112 1 view .LVU843
 2710 01fa 0323     		movs	r3, #3
 2711 01fc 1222     		movs	r2, #18
 2712 01fe 0021     		movs	r1, #0
 2713 0200 2068     		ldr	r0, [r4]
 2714 0202 FFF7FEFF 		bl	_lv_obj_set_style_local_int
 2715              	.LVL272:
 112:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2716              		.loc 4 112 1 is_stmt 0 view .LVU844
 2717              	.LBE117:
 2718              	.LBE116:
 287:lvgl/src/lv_core/lv_refr.c ****         lv_label_set_text(perf_label, "?");
 2719              		.loc 1 287 9 is_stmt 1 view .LVU845
 2720              	.LBB118:
 2721              	.LBI118:
 113:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2722              		.loc 4 113 1 view .LVU846
 2723              	.LBB119:
ARM GAS  D:\Temp\ccEl19zy.s 			page 86


 113:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2724              		.loc 4 113 1 view .LVU847
 2725 0206 0323     		movs	r3, #3
 2726 0208 1322     		movs	r2, #19
 2727 020a 0021     		movs	r1, #0
 2728 020c 2068     		ldr	r0, [r4]
 2729 020e FFF7FEFF 		bl	_lv_obj_set_style_local_int
 2730              	.LVL273:
 113:lvgl/src/lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2731              		.loc 4 113 1 is_stmt 0 view .LVU848
 2732              	.LBE119:
 2733              	.LBE118:
 288:lvgl/src/lv_core/lv_refr.c ****         lv_obj_align(perf_label, NULL, LV_ALIGN_IN_BOTTOM_RIGHT, 0, 0);
 2734              		.loc 1 288 9 is_stmt 1 view .LVU849
 2735 0212 2D49     		ldr	r1, .L184+28
 2736 0214 2068     		ldr	r0, [r4]
 2737 0216 FFF7FEFF 		bl	lv_label_set_text
 2738              	.LVL274:
 289:lvgl/src/lv_core/lv_refr.c ****     }
 2739              		.loc 1 289 9 view .LVU850
 2740 021a 0021     		movs	r1, #0
 2741 021c 0091     		str	r1, [sp]
 2742 021e 0B46     		mov	r3, r1
 2743 0220 0622     		movs	r2, #6
 2744 0222 2068     		ldr	r0, [r4]
 2745 0224 FFF7FEFF 		bl	lv_obj_align
 2746              	.LVL275:
 2747 0228 0BE7     		b	.L170
 2748              	.L171:
 2749              	.LBB120:
 302:lvgl/src/lv_core/lv_refr.c ****         uint32_t fps_limit = 1000 / disp_refr->refr_task->period;
 2750              		.loc 1 302 9 view .LVU851
 302:lvgl/src/lv_core/lv_refr.c ****         uint32_t fps_limit = 1000 / disp_refr->refr_task->period;
 2751              		.loc 1 302 26 is_stmt 0 view .LVU852
 2752 022a FFF7FEFF 		bl	lv_tick_get
 2753              	.LVL276:
 302:lvgl/src/lv_core/lv_refr.c ****         uint32_t fps_limit = 1000 / disp_refr->refr_task->period;
 2754              		.loc 1 302 24 view .LVU853
 2755 022e 214B     		ldr	r3, .L184+8
 2756 0230 1860     		str	r0, [r3]
 303:lvgl/src/lv_core/lv_refr.c ****         uint32_t fps;
 2757              		.loc 1 303 9 is_stmt 1 view .LVU854
 303:lvgl/src/lv_core/lv_refr.c ****         uint32_t fps;
 2758              		.loc 1 303 46 is_stmt 0 view .LVU855
 2759 0232 1E4B     		ldr	r3, .L184
 2760 0234 1B68     		ldr	r3, [r3]
 2761 0236 5B6B     		ldr	r3, [r3, #52]
 303:lvgl/src/lv_core/lv_refr.c ****         uint32_t fps;
 2762              		.loc 1 303 57 view .LVU856
 2763 0238 1B68     		ldr	r3, [r3]
 303:lvgl/src/lv_core/lv_refr.c ****         uint32_t fps;
 2764              		.loc 1 303 18 view .LVU857
 2765 023a 4FF47A74 		mov	r4, #1000
 2766 023e B4FBF3F4 		udiv	r4, r4, r3
 2767              	.LVL277:
 304:lvgl/src/lv_core/lv_refr.c **** 
 2768              		.loc 1 304 9 is_stmt 1 view .LVU858
ARM GAS  D:\Temp\ccEl19zy.s 			page 87


 306:lvgl/src/lv_core/lv_refr.c ****         if(frame_cnt == 0) fps = fps_limit;
 2769              		.loc 1 306 9 view .LVU859
 306:lvgl/src/lv_core/lv_refr.c ****         if(frame_cnt == 0) fps = fps_limit;
 2770              		.loc 1 306 22 is_stmt 0 view .LVU860
 2771 0242 1E4B     		ldr	r3, .L184+16
 2772 0244 1B68     		ldr	r3, [r3]
 306:lvgl/src/lv_core/lv_refr.c ****         if(frame_cnt == 0) fps = fps_limit;
 2773              		.loc 1 306 11 view .LVU861
 2774 0246 13B9     		cbnz	r3, .L172
 306:lvgl/src/lv_core/lv_refr.c ****         if(frame_cnt == 0) fps = fps_limit;
 2775              		.loc 1 306 28 is_stmt 1 discriminator 1 view .LVU862
 306:lvgl/src/lv_core/lv_refr.c ****         if(frame_cnt == 0) fps = fps_limit;
 2776              		.loc 1 306 38 is_stmt 0 discriminator 1 view .LVU863
 2777 0248 1C4B     		ldr	r3, .L184+16
 2778 024a 0122     		movs	r2, #1
 2779 024c 1A60     		str	r2, [r3]
 2780              	.L172:
 307:lvgl/src/lv_core/lv_refr.c ****         else fps = (1000 * frame_cnt) / elaps_sum;
 2781              		.loc 1 307 9 is_stmt 1 view .LVU864
 307:lvgl/src/lv_core/lv_refr.c ****         else fps = (1000 * frame_cnt) / elaps_sum;
 2782              		.loc 1 307 22 is_stmt 0 view .LVU865
 2783 024e 1C4B     		ldr	r3, .L184+20
 2784 0250 1A68     		ldr	r2, [r3]
 307:lvgl/src/lv_core/lv_refr.c ****         else fps = (1000 * frame_cnt) / elaps_sum;
 2785              		.loc 1 307 11 view .LVU866
 2786 0252 42B1     		cbz	r2, .L176
 308:lvgl/src/lv_core/lv_refr.c ****         elaps_sum = 0;
 2787              		.loc 1 308 14 is_stmt 1 view .LVU867
 308:lvgl/src/lv_core/lv_refr.c ****         elaps_sum = 0;
 2788              		.loc 1 308 26 is_stmt 0 view .LVU868
 2789 0254 4FF47A73 		mov	r3, #1000
 2790 0258 03FB02F3 		mul	r3, r3, r2
 308:lvgl/src/lv_core/lv_refr.c ****         elaps_sum = 0;
 2791              		.loc 1 308 39 view .LVU869
 2792 025c 174A     		ldr	r2, .L184+16
 2793 025e 1268     		ldr	r2, [r2]
 308:lvgl/src/lv_core/lv_refr.c ****         elaps_sum = 0;
 2794              		.loc 1 308 18 view .LVU870
 2795 0260 B3FBF2F3 		udiv	r3, r3, r2
 2796              	.LVL278:
 308:lvgl/src/lv_core/lv_refr.c ****         elaps_sum = 0;
 2797              		.loc 1 308 18 view .LVU871
 2798 0264 00E0     		b	.L173
 2799              	.LVL279:
 2800              	.L176:
 307:lvgl/src/lv_core/lv_refr.c ****         else fps = (1000 * frame_cnt) / elaps_sum;
 2801              		.loc 1 307 32 view .LVU872
 2802 0266 2346     		mov	r3, r4
 2803              	.L173:
 2804              	.LVL280:
 309:lvgl/src/lv_core/lv_refr.c ****         frame_cnt = 0;
 2805              		.loc 1 309 9 is_stmt 1 view .LVU873
 309:lvgl/src/lv_core/lv_refr.c ****         frame_cnt = 0;
 2806              		.loc 1 309 19 is_stmt 0 view .LVU874
 2807 0268 0022     		movs	r2, #0
 2808 026a 1449     		ldr	r1, .L184+16
 2809 026c 0A60     		str	r2, [r1]
ARM GAS  D:\Temp\ccEl19zy.s 			page 88


 310:lvgl/src/lv_core/lv_refr.c ****         if(fps > fps_limit) fps = fps_limit;
 2810              		.loc 1 310 9 is_stmt 1 view .LVU875
 310:lvgl/src/lv_core/lv_refr.c ****         if(fps > fps_limit) fps = fps_limit;
 2811              		.loc 1 310 19 is_stmt 0 view .LVU876
 2812 026e 1449     		ldr	r1, .L184+20
 2813 0270 0A60     		str	r2, [r1]
 311:lvgl/src/lv_core/lv_refr.c **** 
 2814              		.loc 1 311 9 is_stmt 1 view .LVU877
 311:lvgl/src/lv_core/lv_refr.c **** 
 2815              		.loc 1 311 11 is_stmt 0 view .LVU878
 2816 0272 A342     		cmp	r3, r4
 2817 0274 00D8     		bhi	.L174
 2818 0276 1C46     		mov	r4, r3
 2819              	.LVL281:
 2820              	.L174:
 313:lvgl/src/lv_core/lv_refr.c ****         fps_sum_cnt ++;
 2821              		.loc 1 313 9 is_stmt 1 view .LVU879
 313:lvgl/src/lv_core/lv_refr.c ****         fps_sum_cnt ++;
 2822              		.loc 1 313 21 is_stmt 0 view .LVU880
 2823 0278 144A     		ldr	r2, .L184+32
 2824 027a 1368     		ldr	r3, [r2]
 2825 027c 2344     		add	r3, r3, r4
 2826 027e 1360     		str	r3, [r2]
 314:lvgl/src/lv_core/lv_refr.c ****         uint32_t cpu = 100 - lv_task_get_idle();
 2827              		.loc 1 314 9 is_stmt 1 view .LVU881
 314:lvgl/src/lv_core/lv_refr.c ****         uint32_t cpu = 100 - lv_task_get_idle();
 2828              		.loc 1 314 21 is_stmt 0 view .LVU882
 2829 0280 134A     		ldr	r2, .L184+36
 2830 0282 1368     		ldr	r3, [r2]
 2831 0284 0133     		adds	r3, r3, #1
 2832 0286 1360     		str	r3, [r2]
 315:lvgl/src/lv_core/lv_refr.c ****         lv_label_set_text_fmt(perf_label, "%d FPS\n%d%% CPU", fps, cpu);
 2833              		.loc 1 315 9 is_stmt 1 view .LVU883
 315:lvgl/src/lv_core/lv_refr.c ****         lv_label_set_text_fmt(perf_label, "%d FPS\n%d%% CPU", fps, cpu);
 2834              		.loc 1 315 30 is_stmt 0 view .LVU884
 2835 0288 FFF7FEFF 		bl	lv_task_get_idle
 2836              	.LVL282:
 316:lvgl/src/lv_core/lv_refr.c ****         lv_obj_align(perf_label, NULL, LV_ALIGN_IN_BOTTOM_RIGHT, 0, 0);
 2837              		.loc 1 316 9 is_stmt 1 view .LVU885
 2838 028c 084D     		ldr	r5, .L184+4
 2839              	.LVL283:
 316:lvgl/src/lv_core/lv_refr.c ****         lv_obj_align(perf_label, NULL, LV_ALIGN_IN_BOTTOM_RIGHT, 0, 0);
 2840              		.loc 1 316 9 is_stmt 0 view .LVU886
 2841 028e C0F16403 		rsb	r3, r0, #100
 2842              	.LVL284:
 316:lvgl/src/lv_core/lv_refr.c ****         lv_obj_align(perf_label, NULL, LV_ALIGN_IN_BOTTOM_RIGHT, 0, 0);
 2843              		.loc 1 316 9 view .LVU887
 2844 0292 2246     		mov	r2, r4
 2845 0294 0F49     		ldr	r1, .L184+40
 2846 0296 2868     		ldr	r0, [r5]
 2847 0298 FFF7FEFF 		bl	lv_label_set_text_fmt
 2848              	.LVL285:
 317:lvgl/src/lv_core/lv_refr.c ****     }
 2849              		.loc 1 317 9 is_stmt 1 view .LVU888
 2850 029c 0021     		movs	r1, #0
 2851 029e 0091     		str	r1, [sp]
 2852 02a0 0B46     		mov	r3, r1
ARM GAS  D:\Temp\ccEl19zy.s 			page 89


 2853 02a2 0622     		movs	r2, #6
 2854 02a4 2868     		ldr	r0, [r5]
 2855 02a6 FFF7FEFF 		bl	lv_obj_align
 2856              	.LVL286:
 2857              	.LBE120:
 321:lvgl/src/lv_core/lv_refr.c **** }
 2858              		.loc 1 321 40 view .LVU889
 2859 02aa E7E6     		b	.L158
 2860              	.L185:
 2861              		.align	2
 2862              	.L184:
 2863 02ac 00000000 		.word	.LANCHOR0
 2864 02b0 00000000 		.word	.LANCHOR2
 2865 02b4 00000000 		.word	.LANCHOR4
 2866 02b8 00000000 		.word	.LANCHOR1
 2867 02bc 00000000 		.word	.LANCHOR5
 2868 02c0 00000000 		.word	.LANCHOR6
 2869 02c4 00000000 		.word	.LANCHOR3
 2870 02c8 00000000 		.word	.LC1
 2871 02cc 00000000 		.word	.LANCHOR7
 2872 02d0 00000000 		.word	.LANCHOR8
 2873 02d4 04000000 		.word	.LC2
 2874              		.cfi_endproc
 2875              	.LFE468:
 2877              		.section	.text.lv_refr_now,"ax",%progbits
 2878              		.align	1
 2879              		.global	lv_refr_now
 2880              		.syntax unified
 2881              		.thumb
 2882              		.thumb_func
 2883              		.fpu fpv4-sp-d16
 2885              	lv_refr_now:
 2886              	.LVL287:
 2887              	.LFB464:
  82:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_ANIMATION
 2888              		.loc 1 82 1 view -0
 2889              		.cfi_startproc
 2890              		@ args = 0, pretend = 0, frame = 0
 2891              		@ frame_needed = 0, uses_anonymous_args = 0
  82:lvgl/src/lv_core/lv_refr.c **** #if LV_USE_ANIMATION
 2892              		.loc 1 82 1 is_stmt 0 view .LVU891
 2893 0000 10B5     		push	{r4, lr}
 2894              	.LCFI28:
 2895              		.cfi_def_cfa_offset 8
 2896              		.cfi_offset 4, -8
 2897              		.cfi_offset 14, -4
 2898 0002 0446     		mov	r4, r0
  84:lvgl/src/lv_core/lv_refr.c **** #endif
 2899              		.loc 1 84 5 is_stmt 1 view .LVU892
 2900 0004 FFF7FEFF 		bl	lv_anim_refr_now
 2901              	.LVL288:
  87:lvgl/src/lv_core/lv_refr.c ****         _lv_disp_refr_task(disp->refr_task);
 2902              		.loc 1 87 5 view .LVU893
  87:lvgl/src/lv_core/lv_refr.c ****         _lv_disp_refr_task(disp->refr_task);
 2903              		.loc 1 87 7 is_stmt 0 view .LVU894
 2904 0008 1CB1     		cbz	r4, .L187
  88:lvgl/src/lv_core/lv_refr.c ****     }
ARM GAS  D:\Temp\ccEl19zy.s 			page 90


 2905              		.loc 1 88 9 is_stmt 1 view .LVU895
 2906 000a 606B     		ldr	r0, [r4, #52]
 2907 000c FFF7FEFF 		bl	_lv_disp_refr_task
 2908              	.LVL289:
 2909              	.L186:
  98:lvgl/src/lv_core/lv_refr.c **** 
 2910              		.loc 1 98 1 is_stmt 0 view .LVU896
 2911 0010 10BD     		pop	{r4, pc}
 2912              	.LVL290:
 2913              	.L187:
 2914              	.LBB121:
  91:lvgl/src/lv_core/lv_refr.c ****         d = lv_disp_get_next(NULL);
 2915              		.loc 1 91 9 is_stmt 1 view .LVU897
  92:lvgl/src/lv_core/lv_refr.c ****         while(d) {
 2916              		.loc 1 92 9 view .LVU898
  92:lvgl/src/lv_core/lv_refr.c ****         while(d) {
 2917              		.loc 1 92 13 is_stmt 0 view .LVU899
 2918 0012 0020     		movs	r0, #0
 2919 0014 FFF7FEFF 		bl	lv_disp_get_next
 2920              	.LVL291:
 2921 0018 0446     		mov	r4, r0
 2922              	.LVL292:
  93:lvgl/src/lv_core/lv_refr.c ****             _lv_disp_refr_task(d->refr_task);
 2923              		.loc 1 93 9 is_stmt 1 view .LVU900
 2924              	.L189:
  93:lvgl/src/lv_core/lv_refr.c ****             _lv_disp_refr_task(d->refr_task);
 2925              		.loc 1 93 14 is_stmt 0 view .LVU901
 2926 001a 002C     		cmp	r4, #0
 2927 001c F8D0     		beq	.L186
  94:lvgl/src/lv_core/lv_refr.c ****             d = lv_disp_get_next(d);
 2928              		.loc 1 94 13 is_stmt 1 view .LVU902
 2929 001e 606B     		ldr	r0, [r4, #52]
 2930              	.LVL293:
  94:lvgl/src/lv_core/lv_refr.c ****             d = lv_disp_get_next(d);
 2931              		.loc 1 94 13 is_stmt 0 view .LVU903
 2932 0020 FFF7FEFF 		bl	_lv_disp_refr_task
 2933              	.LVL294:
  95:lvgl/src/lv_core/lv_refr.c ****         }
 2934              		.loc 1 95 13 is_stmt 1 view .LVU904
  95:lvgl/src/lv_core/lv_refr.c ****         }
 2935              		.loc 1 95 17 is_stmt 0 view .LVU905
 2936 0024 2046     		mov	r0, r4
 2937 0026 FFF7FEFF 		bl	lv_disp_get_next
 2938              	.LVL295:
 2939 002a 0446     		mov	r4, r0
 2940              	.LVL296:
  95:lvgl/src/lv_core/lv_refr.c ****         }
 2941              		.loc 1 95 17 view .LVU906
 2942 002c F5E7     		b	.L189
 2943              	.LBE121:
 2944              		.cfi_endproc
 2945              	.LFE464:
 2947              		.section	.text.lv_refr_get_fps_avg,"ax",%progbits
 2948              		.align	1
 2949              		.global	lv_refr_get_fps_avg
 2950              		.syntax unified
 2951              		.thumb
ARM GAS  D:\Temp\ccEl19zy.s 			page 91


 2952              		.thumb_func
 2953              		.fpu fpv4-sp-d16
 2955              	lv_refr_get_fps_avg:
 2956              	.LFB469:
 326:lvgl/src/lv_core/lv_refr.c ****     return fps_sum_all / fps_sum_cnt;
 2957              		.loc 1 326 1 is_stmt 1 view -0
 2958              		.cfi_startproc
 2959              		@ args = 0, pretend = 0, frame = 0
 2960              		@ frame_needed = 0, uses_anonymous_args = 0
 2961              		@ link register save eliminated.
 327:lvgl/src/lv_core/lv_refr.c **** }
 2962              		.loc 1 327 5 view .LVU908
 327:lvgl/src/lv_core/lv_refr.c **** }
 2963              		.loc 1 327 24 is_stmt 0 view .LVU909
 2964 0000 034B     		ldr	r3, .L193
 2965 0002 1868     		ldr	r0, [r3]
 2966 0004 034B     		ldr	r3, .L193+4
 2967 0006 1B68     		ldr	r3, [r3]
 328:lvgl/src/lv_core/lv_refr.c **** #endif
 2968              		.loc 1 328 1 view .LVU910
 2969 0008 B0FBF3F0 		udiv	r0, r0, r3
 2970 000c 7047     		bx	lr
 2971              	.L194:
 2972 000e 00BF     		.align	2
 2973              	.L193:
 2974 0010 00000000 		.word	.LANCHOR7
 2975 0014 00000000 		.word	.LANCHOR8
 2976              		.cfi_endproc
 2977              	.LFE469:
 2979              		.section	.rodata
 2980              		.align	2
 2981              		.set	.LANCHOR3,. + 0
 2982              	.LC0:
 2983 0000 FF       		.byte	255
 2984 0001 FF       		.byte	255
 2985              		.section	.bss.disp_refr,"aw",%nobits
 2986              		.align	2
 2987              		.set	.LANCHOR0,. + 0
 2990              	disp_refr:
 2991 0000 00000000 		.space	4
 2992              		.section	.bss.elaps_sum.13176,"aw",%nobits
 2993              		.align	2
 2994              		.set	.LANCHOR5,. + 0
 2997              	elaps_sum.13176:
 2998 0000 00000000 		.space	4
 2999              		.section	.bss.fps_sum_all,"aw",%nobits
 3000              		.align	2
 3001              		.set	.LANCHOR7,. + 0
 3004              	fps_sum_all:
 3005 0000 00000000 		.space	4
 3006              		.section	.bss.fps_sum_cnt,"aw",%nobits
 3007              		.align	2
 3008              		.set	.LANCHOR8,. + 0
 3011              	fps_sum_cnt:
 3012 0000 00000000 		.space	4
 3013              		.section	.bss.frame_cnt.13177,"aw",%nobits
 3014              		.align	2
ARM GAS  D:\Temp\ccEl19zy.s 			page 92


 3015              		.set	.LANCHOR6,. + 0
 3018              	frame_cnt.13177:
 3019 0000 00000000 		.space	4
 3020              		.section	.bss.perf_label.13172,"aw",%nobits
 3021              		.align	2
 3022              		.set	.LANCHOR2,. + 0
 3025              	perf_label.13172:
 3026 0000 00000000 		.space	4
 3027              		.section	.bss.perf_last_time.13175,"aw",%nobits
 3028              		.align	2
 3029              		.set	.LANCHOR4,. + 0
 3032              	perf_last_time.13175:
 3033 0000 00000000 		.space	4
 3034              		.section	.bss.px_num,"aw",%nobits
 3035              		.align	2
 3036              		.set	.LANCHOR1,. + 0
 3039              	px_num:
 3040 0000 00000000 		.space	4
 3041              		.section	.rodata._lv_disp_refr_task.str1.4,"aMS",%progbits,1
 3042              		.align	2
 3043              	.LC1:
 3044 0000 3F00     		.ascii	"?\000"
 3045 0002 0000     		.space	2
 3046              	.LC2:
 3047 0004 25642046 		.ascii	"%d FPS\012%d%% CPU\000"
 3047      50530A25 
 3047      64252520 
 3047      43505500 
 3048              		.text
 3049              	.Letext0:
 3050              		.file 6 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-none
 3051              		.file 7 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 3052              		.file 8 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 3053              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 3054              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3055              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3056              		.file 12 "lvgl/lv_conf.h"
 3057              		.file 13 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 3058              		.file 14 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 3059              		.file 15 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 3060              		.file 16 "lvgl/src/lv_core/../lv_font/../lv_misc/lv_types.h"
 3061              		.file 17 "lvgl/src/lv_core/../lv_font/lv_font.h"
 3062              		.file 18 "lvgl/src/lv_core/../lv_misc/lv_color.h"
 3063              		.file 19 "lvgl/src/lv_core/../lv_misc/lv_anim.h"
 3064              		.file 20 "lvgl/src/lv_core/../lv_draw/lv_draw_mask.h"
 3065              		.file 21 "lvgl/src/lv_core/../lv_draw/lv_draw_blend.h"
 3066              		.file 22 "lvgl/src/lv_core/lv_style.h"
 3067              		.file 23 "lvgl/src/lv_core/../lv_hal/../lv_misc/lv_ll.h"
 3068              		.file 24 "lvgl/src/lv_core/../lv_hal/../lv_misc/lv_task.h"
 3069              		.file 25 "lvgl/src/lv_core/../lv_hal/lv_hal_disp.h"
 3070              		.file 26 "lvgl/src/lv_core/lv_obj.h"
 3071              		.file 27 "lvgl/src/lv_core/../lv_hal/lv_hal_indev.h"
 3072              		.file 28 "lvgl/src/lv_core/../lv_draw/lv_draw_rect.h"
 3073              		.file 29 "lvgl/src/lv_core/../lv_draw/../lv_misc/lv_bidi.h"
 3074              		.file 30 "lvgl/src/lv_core/../lv_draw/../lv_misc/lv_txt.h"
 3075              		.file 31 "lvgl/src/lv_core/../lv_draw/lv_draw_label.h"
 3076              		.file 32 "lvgl/src/lv_core/../lv_draw/lv_img_buf.h"
ARM GAS  D:\Temp\ccEl19zy.s 			page 93


 3077              		.file 33 "lvgl/src/lv_core/../lv_draw/lv_img_decoder.h"
 3078              		.file 34 "lvgl/src/lv_core/../lv_draw/lv_draw_img.h"
 3079              		.file 35 "lvgl/src/lv_core/../lv_misc/../lv_draw/lv_img_cache.h"
 3080              		.file 36 "lvgl/src/lv_core/../lv_misc/lv_gc.h"
 3081              		.file 37 "lvgl/src/lv_core/../lv_widgets/lv_label.h"
 3082              		.file 38 "lvgl/src/lv_core/../lv_hal/lv_hal_tick.h"
 3083              		.file 39 "lvgl/src/lv_core/../lv_font/lv_font_fmt_txt.h"
ARM GAS  D:\Temp\ccEl19zy.s 			page 94


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_refr.c
  D:\Temp\ccEl19zy.s:18     .text.lv_refr_join_area:0000000000000000 $t
  D:\Temp\ccEl19zy.s:25     .text.lv_refr_join_area:0000000000000000 lv_refr_join_area
  D:\Temp\ccEl19zy.s:246    .text.lv_refr_join_area:00000000000000e0 $d
  D:\Temp\ccEl19zy.s:251    .text.lv_refr_get_top_obj:0000000000000000 $t
  D:\Temp\ccEl19zy.s:257    .text.lv_refr_get_top_obj:0000000000000000 lv_refr_get_top_obj
  D:\Temp\ccEl19zy.s:426    .text.lv_refr_obj:0000000000000000 $t
  D:\Temp\ccEl19zy.s:432    .text.lv_refr_obj:0000000000000000 lv_refr_obj
  D:\Temp\ccEl19zy.s:648    .text.lv_refr_obj_and_children:0000000000000000 $t
  D:\Temp\ccEl19zy.s:654    .text.lv_refr_obj_and_children:0000000000000000 lv_refr_obj_and_children
  D:\Temp\ccEl19zy.s:793    .text.lv_refr_obj_and_children:0000000000000068 $d
  D:\Temp\ccEl19zy.s:798    .text._lv_refr_init:0000000000000000 $t
  D:\Temp\ccEl19zy.s:805    .text._lv_refr_init:0000000000000000 _lv_refr_init
  D:\Temp\ccEl19zy.s:818    .text._lv_inv_area:0000000000000000 $t
  D:\Temp\ccEl19zy.s:825    .text._lv_inv_area:0000000000000000 _lv_inv_area
  D:\Temp\ccEl19zy.s:1118   .text._lv_refr_get_disp_refreshing:0000000000000000 $t
  D:\Temp\ccEl19zy.s:1125   .text._lv_refr_get_disp_refreshing:0000000000000000 _lv_refr_get_disp_refreshing
  D:\Temp\ccEl19zy.s:1140   .text._lv_refr_get_disp_refreshing:0000000000000008 $d
  D:\Temp\ccEl19zy.s:1145   .text.lv_refr_vdb_flush:0000000000000000 $t
  D:\Temp\ccEl19zy.s:1151   .text.lv_refr_vdb_flush:0000000000000000 lv_refr_vdb_flush
  D:\Temp\ccEl19zy.s:1289   .text.lv_refr_vdb_flush:000000000000007c $d
  D:\Temp\ccEl19zy.s:1294   .text.lv_refr_area_part:0000000000000000 $t
  D:\Temp\ccEl19zy.s:1300   .text.lv_refr_area_part:0000000000000000 lv_refr_area_part
  D:\Temp\ccEl19zy.s:1595   .text.lv_refr_area_part:0000000000000134 $d
  D:\Temp\ccEl19zy.s:1600   .text.lv_refr_area:0000000000000000 $t
  D:\Temp\ccEl19zy.s:1606   .text.lv_refr_area:0000000000000000 lv_refr_area
  D:\Temp\ccEl19zy.s:2011   .text.lv_refr_area:0000000000000194 $d
  D:\Temp\ccEl19zy.s:2017   .text.lv_refr_areas:0000000000000000 $t
  D:\Temp\ccEl19zy.s:2023   .text.lv_refr_areas:0000000000000000 lv_refr_areas
  D:\Temp\ccEl19zy.s:2180   .text.lv_refr_areas:00000000000000b0 $d
  D:\Temp\ccEl19zy.s:2186   .text._lv_refr_set_disp_refreshing:0000000000000000 $t
  D:\Temp\ccEl19zy.s:2193   .text._lv_refr_set_disp_refreshing:0000000000000000 _lv_refr_set_disp_refreshing
  D:\Temp\ccEl19zy.s:2210   .text._lv_refr_set_disp_refreshing:0000000000000008 $d
  D:\Temp\ccEl19zy.s:2215   .text._lv_disp_refr_task:0000000000000000 $t
  D:\Temp\ccEl19zy.s:2222   .text._lv_disp_refr_task:0000000000000000 _lv_disp_refr_task
  D:\Temp\ccEl19zy.s:2863   .text._lv_disp_refr_task:00000000000002ac $d
  D:\Temp\ccEl19zy.s:2878   .text.lv_refr_now:0000000000000000 $t
  D:\Temp\ccEl19zy.s:2885   .text.lv_refr_now:0000000000000000 lv_refr_now
  D:\Temp\ccEl19zy.s:2948   .text.lv_refr_get_fps_avg:0000000000000000 $t
  D:\Temp\ccEl19zy.s:2955   .text.lv_refr_get_fps_avg:0000000000000000 lv_refr_get_fps_avg
  D:\Temp\ccEl19zy.s:2974   .text.lv_refr_get_fps_avg:0000000000000010 $d
  D:\Temp\ccEl19zy.s:2980   .rodata:0000000000000000 $d
  D:\Temp\ccEl19zy.s:2986   .bss.disp_refr:0000000000000000 $d
  D:\Temp\ccEl19zy.s:2990   .bss.disp_refr:0000000000000000 disp_refr
  D:\Temp\ccEl19zy.s:2993   .bss.elaps_sum.13176:0000000000000000 $d
  D:\Temp\ccEl19zy.s:2997   .bss.elaps_sum.13176:0000000000000000 elaps_sum.13176
  D:\Temp\ccEl19zy.s:3000   .bss.fps_sum_all:0000000000000000 $d
  D:\Temp\ccEl19zy.s:3004   .bss.fps_sum_all:0000000000000000 fps_sum_all
  D:\Temp\ccEl19zy.s:3007   .bss.fps_sum_cnt:0000000000000000 $d
  D:\Temp\ccEl19zy.s:3011   .bss.fps_sum_cnt:0000000000000000 fps_sum_cnt
  D:\Temp\ccEl19zy.s:3014   .bss.frame_cnt.13177:0000000000000000 $d
  D:\Temp\ccEl19zy.s:3018   .bss.frame_cnt.13177:0000000000000000 frame_cnt.13177
  D:\Temp\ccEl19zy.s:3021   .bss.perf_label.13172:0000000000000000 $d
  D:\Temp\ccEl19zy.s:3025   .bss.perf_label.13172:0000000000000000 perf_label.13172
  D:\Temp\ccEl19zy.s:3028   .bss.perf_last_time.13175:0000000000000000 $d
  D:\Temp\ccEl19zy.s:3032   .bss.perf_last_time.13175:0000000000000000 perf_last_time.13175
ARM GAS  D:\Temp\ccEl19zy.s 			page 95


  D:\Temp\ccEl19zy.s:3035   .bss.px_num:0000000000000000 $d
  D:\Temp\ccEl19zy.s:3039   .bss.px_num:0000000000000000 px_num
  D:\Temp\ccEl19zy.s:3042   .rodata._lv_disp_refr_task.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
_lv_area_is_on
_lv_area_join
lv_area_get_size
_lv_area_is_in
_lv_ll_get_head
_lv_ll_get_next
_lv_obj_get_style_opa
lv_obj_get_coords
_lv_area_intersect
_lv_ll_get_tail
_lv_ll_get_prev
lv_obj_get_parent
lv_disp_get_scr_act
lv_disp_get_hor_res
lv_disp_get_ver_res
lv_disp_get_default
lv_task_set_prio
lv_disp_get_buf
lv_disp_is_double_buf
lv_disp_get_layer_top
lv_disp_get_layer_sys
lv_disp_is_true_double_buf
lv_draw_img_dsc_init
lv_img_decoder_get_info
lv_area_set
lv_draw_img
lv_draw_rect_dsc_init
lv_draw_rect
lv_tick_get
_lv_mem_buf_free_all
_lv_font_clean_up_fmt_txt
lv_tick_elaps
_lv_memset_00
_lv_mem_buf_get
_lv_memcpy
_lv_mem_buf_release
lv_label_create
lv_label_set_align
_lv_obj_set_style_local_opa
_lv_obj_set_style_local_color
_lv_obj_set_style_local_int
lv_label_set_text
lv_obj_align
lv_task_get_idle
lv_label_set_text_fmt
lv_anim_refr_now
lv_disp_get_next
