ARM GAS  D:\Temp\cc3iPNN1.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_indev.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.indev_proc_reset_query_handler,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	indev_proc_reset_query_handler:
  26              	.LVL0:
  27              	.LFB488:
  28              		.file 1 "lvgl/src/lv_core/lv_indev.c"
   1:lvgl/src/lv_core/lv_indev.c **** /**
   2:lvgl/src/lv_core/lv_indev.c ****  * @file lv_indev.c
   3:lvgl/src/lv_core/lv_indev.c ****  *
   4:lvgl/src/lv_core/lv_indev.c ****  */
   5:lvgl/src/lv_core/lv_indev.c **** 
   6:lvgl/src/lv_core/lv_indev.c **** /*********************
   7:lvgl/src/lv_core/lv_indev.c ****  *      INCLUDES
   8:lvgl/src/lv_core/lv_indev.c ****  ********************/
   9:lvgl/src/lv_core/lv_indev.c **** #include "lv_indev.h"
  10:lvgl/src/lv_core/lv_indev.c **** #include "lv_disp.h"
  11:lvgl/src/lv_core/lv_indev.c **** #include "lv_obj.h"
  12:lvgl/src/lv_core/lv_indev.c **** 
  13:lvgl/src/lv_core/lv_indev.c **** #include "../lv_hal/lv_hal_tick.h"
  14:lvgl/src/lv_core/lv_indev.c **** #include "../lv_core/lv_group.h"
  15:lvgl/src/lv_core/lv_indev.c **** #include "../lv_core/lv_refr.h"
  16:lvgl/src/lv_core/lv_indev.c **** #include "../lv_misc/lv_task.h"
  17:lvgl/src/lv_core/lv_indev.c **** #include "../lv_misc/lv_math.h"
  18:lvgl/src/lv_core/lv_indev.c **** 
  19:lvgl/src/lv_core/lv_indev.c **** /*********************
  20:lvgl/src/lv_core/lv_indev.c ****  *      DEFINES
  21:lvgl/src/lv_core/lv_indev.c ****  *********************/
  22:lvgl/src/lv_core/lv_indev.c **** 
  23:lvgl/src/lv_core/lv_indev.c **** #if LV_INDEV_DEF_DRAG_THROW <= 0
  24:lvgl/src/lv_core/lv_indev.c ****     #warning "LV_INDEV_DRAG_THROW must be greater than 0"
  25:lvgl/src/lv_core/lv_indev.c **** #endif
  26:lvgl/src/lv_core/lv_indev.c **** 
  27:lvgl/src/lv_core/lv_indev.c **** /**********************
  28:lvgl/src/lv_core/lv_indev.c ****  *      TYPEDEFS
  29:lvgl/src/lv_core/lv_indev.c ****  **********************/
  30:lvgl/src/lv_core/lv_indev.c **** 
ARM GAS  D:\Temp\cc3iPNN1.s 			page 2


  31:lvgl/src/lv_core/lv_indev.c **** /**********************
  32:lvgl/src/lv_core/lv_indev.c ****  *  STATIC PROTOTYPES
  33:lvgl/src/lv_core/lv_indev.c ****  **********************/
  34:lvgl/src/lv_core/lv_indev.c **** 
  35:lvgl/src/lv_core/lv_indev.c **** static void indev_pointer_proc(lv_indev_t * i, lv_indev_data_t * data);
  36:lvgl/src/lv_core/lv_indev.c **** static void indev_keypad_proc(lv_indev_t * i, lv_indev_data_t * data);
  37:lvgl/src/lv_core/lv_indev.c **** static void indev_encoder_proc(lv_indev_t * i, lv_indev_data_t * data);
  38:lvgl/src/lv_core/lv_indev.c **** static void indev_button_proc(lv_indev_t * i, lv_indev_data_t * data);
  39:lvgl/src/lv_core/lv_indev.c **** static void indev_proc_press(lv_indev_proc_t * proc);
  40:lvgl/src/lv_core/lv_indev.c **** static void indev_proc_release(lv_indev_proc_t * proc);
  41:lvgl/src/lv_core/lv_indev.c **** static void indev_proc_reset_query_handler(lv_indev_t * indev);
  42:lvgl/src/lv_core/lv_indev.c **** static void indev_click_focus(lv_indev_proc_t * proc);
  43:lvgl/src/lv_core/lv_indev.c **** static void indev_drag(lv_indev_proc_t * proc);
  44:lvgl/src/lv_core/lv_indev.c **** static void indev_drag_throw(lv_indev_proc_t * proc);
  45:lvgl/src/lv_core/lv_indev.c **** static lv_obj_t * get_dragged_obj(lv_obj_t * obj);
  46:lvgl/src/lv_core/lv_indev.c **** static void indev_gesture(lv_indev_proc_t * proc);
  47:lvgl/src/lv_core/lv_indev.c **** static bool indev_reset_check(lv_indev_proc_t * proc);
  48:lvgl/src/lv_core/lv_indev.c **** 
  49:lvgl/src/lv_core/lv_indev.c **** /**********************
  50:lvgl/src/lv_core/lv_indev.c ****  *  STATIC VARIABLES
  51:lvgl/src/lv_core/lv_indev.c ****  **********************/
  52:lvgl/src/lv_core/lv_indev.c **** static lv_indev_t * indev_act;
  53:lvgl/src/lv_core/lv_indev.c **** static lv_obj_t * indev_obj_act = NULL;
  54:lvgl/src/lv_core/lv_indev.c **** 
  55:lvgl/src/lv_core/lv_indev.c **** /**********************
  56:lvgl/src/lv_core/lv_indev.c ****  *      MACROS
  57:lvgl/src/lv_core/lv_indev.c ****  **********************/
  58:lvgl/src/lv_core/lv_indev.c **** 
  59:lvgl/src/lv_core/lv_indev.c **** /**********************
  60:lvgl/src/lv_core/lv_indev.c ****  *   GLOBAL FUNCTIONS
  61:lvgl/src/lv_core/lv_indev.c ****  **********************/
  62:lvgl/src/lv_core/lv_indev.c **** 
  63:lvgl/src/lv_core/lv_indev.c **** /**
  64:lvgl/src/lv_core/lv_indev.c ****  * Initialize the display input device subsystem
  65:lvgl/src/lv_core/lv_indev.c ****  */
  66:lvgl/src/lv_core/lv_indev.c **** void _lv_indev_init(void)
  67:lvgl/src/lv_core/lv_indev.c **** {
  68:lvgl/src/lv_core/lv_indev.c ****     lv_indev_reset(NULL, NULL); /*Reset all input devices*/
  69:lvgl/src/lv_core/lv_indev.c **** }
  70:lvgl/src/lv_core/lv_indev.c **** 
  71:lvgl/src/lv_core/lv_indev.c **** /**
  72:lvgl/src/lv_core/lv_indev.c ****  * Called periodically to read the input devices
  73:lvgl/src/lv_core/lv_indev.c ****  * @param param pointer to and input device to read
  74:lvgl/src/lv_core/lv_indev.c ****  */
  75:lvgl/src/lv_core/lv_indev.c **** void _lv_indev_read_task(lv_task_t * task)
  76:lvgl/src/lv_core/lv_indev.c **** {
  77:lvgl/src/lv_core/lv_indev.c ****     LV_LOG_TRACE("indev read task started");
  78:lvgl/src/lv_core/lv_indev.c **** 
  79:lvgl/src/lv_core/lv_indev.c ****     lv_indev_data_t data;
  80:lvgl/src/lv_core/lv_indev.c **** 
  81:lvgl/src/lv_core/lv_indev.c ****     indev_act = task->user_data;
  82:lvgl/src/lv_core/lv_indev.c **** 
  83:lvgl/src/lv_core/lv_indev.c ****     /*Read and process all indevs*/
  84:lvgl/src/lv_core/lv_indev.c ****     if(indev_act->driver.disp == NULL) return; /*Not assigned to any displays*/
  85:lvgl/src/lv_core/lv_indev.c **** 
  86:lvgl/src/lv_core/lv_indev.c ****     /*Handle reset query before processing the point*/
  87:lvgl/src/lv_core/lv_indev.c ****     indev_proc_reset_query_handler(indev_act);
ARM GAS  D:\Temp\cc3iPNN1.s 			page 3


  88:lvgl/src/lv_core/lv_indev.c **** 
  89:lvgl/src/lv_core/lv_indev.c ****     if(indev_act->proc.disabled) return;
  90:lvgl/src/lv_core/lv_indev.c ****     bool more_to_read;
  91:lvgl/src/lv_core/lv_indev.c ****     do {
  92:lvgl/src/lv_core/lv_indev.c ****         /*Read the data*/
  93:lvgl/src/lv_core/lv_indev.c ****         more_to_read = _lv_indev_read(indev_act, &data);
  94:lvgl/src/lv_core/lv_indev.c **** 
  95:lvgl/src/lv_core/lv_indev.c ****         /*The active object might deleted even in the read function*/
  96:lvgl/src/lv_core/lv_indev.c ****         indev_proc_reset_query_handler(indev_act);
  97:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act = NULL;
  98:lvgl/src/lv_core/lv_indev.c **** 
  99:lvgl/src/lv_core/lv_indev.c ****         indev_act->proc.state = data.state;
 100:lvgl/src/lv_core/lv_indev.c **** 
 101:lvgl/src/lv_core/lv_indev.c ****         /*Save the last activity time*/
 102:lvgl/src/lv_core/lv_indev.c ****         if(indev_act->proc.state == LV_INDEV_STATE_PR) {
 103:lvgl/src/lv_core/lv_indev.c ****             indev_act->driver.disp->last_activity_time = lv_tick_get();
 104:lvgl/src/lv_core/lv_indev.c ****         }
 105:lvgl/src/lv_core/lv_indev.c ****         else if(indev_act->driver.type == LV_INDEV_TYPE_ENCODER && data.enc_diff) {
 106:lvgl/src/lv_core/lv_indev.c ****             indev_act->driver.disp->last_activity_time = lv_tick_get();
 107:lvgl/src/lv_core/lv_indev.c ****         }
 108:lvgl/src/lv_core/lv_indev.c **** 
 109:lvgl/src/lv_core/lv_indev.c ****         if(indev_act->driver.type == LV_INDEV_TYPE_POINTER) {
 110:lvgl/src/lv_core/lv_indev.c ****             indev_pointer_proc(indev_act, &data);
 111:lvgl/src/lv_core/lv_indev.c ****         }
 112:lvgl/src/lv_core/lv_indev.c ****         else if(indev_act->driver.type == LV_INDEV_TYPE_KEYPAD) {
 113:lvgl/src/lv_core/lv_indev.c ****             indev_keypad_proc(indev_act, &data);
 114:lvgl/src/lv_core/lv_indev.c ****         }
 115:lvgl/src/lv_core/lv_indev.c ****         else if(indev_act->driver.type == LV_INDEV_TYPE_ENCODER) {
 116:lvgl/src/lv_core/lv_indev.c ****             indev_encoder_proc(indev_act, &data);
 117:lvgl/src/lv_core/lv_indev.c ****         }
 118:lvgl/src/lv_core/lv_indev.c ****         else if(indev_act->driver.type == LV_INDEV_TYPE_BUTTON) {
 119:lvgl/src/lv_core/lv_indev.c ****             indev_button_proc(indev_act, &data);
 120:lvgl/src/lv_core/lv_indev.c ****         }
 121:lvgl/src/lv_core/lv_indev.c ****         /*Handle reset query if it happened in during processing*/
 122:lvgl/src/lv_core/lv_indev.c ****         indev_proc_reset_query_handler(indev_act);
 123:lvgl/src/lv_core/lv_indev.c ****     } while(more_to_read);
 124:lvgl/src/lv_core/lv_indev.c **** 
 125:lvgl/src/lv_core/lv_indev.c ****     /*End of indev processing, so no act indev*/
 126:lvgl/src/lv_core/lv_indev.c ****     indev_act     = NULL;
 127:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = NULL;
 128:lvgl/src/lv_core/lv_indev.c **** 
 129:lvgl/src/lv_core/lv_indev.c ****     LV_LOG_TRACE("indev read task finished");
 130:lvgl/src/lv_core/lv_indev.c **** }
 131:lvgl/src/lv_core/lv_indev.c **** 
 132:lvgl/src/lv_core/lv_indev.c **** /**
 133:lvgl/src/lv_core/lv_indev.c ****  * Get the currently processed input device. Can be used in action functions too.
 134:lvgl/src/lv_core/lv_indev.c ****  * @return pointer to the currently processed input device or NULL if no input device processing
 135:lvgl/src/lv_core/lv_indev.c ****  * right now
 136:lvgl/src/lv_core/lv_indev.c ****  */
 137:lvgl/src/lv_core/lv_indev.c **** lv_indev_t * lv_indev_get_act(void)
 138:lvgl/src/lv_core/lv_indev.c **** {
 139:lvgl/src/lv_core/lv_indev.c ****     return indev_act;
 140:lvgl/src/lv_core/lv_indev.c **** }
 141:lvgl/src/lv_core/lv_indev.c **** 
 142:lvgl/src/lv_core/lv_indev.c **** /**
 143:lvgl/src/lv_core/lv_indev.c ****  * Get the type of an input device
 144:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
ARM GAS  D:\Temp\cc3iPNN1.s 			page 4


 145:lvgl/src/lv_core/lv_indev.c ****  * @return the type of the input device from `lv_hal_indev_type_t` (`LV_INDEV_TYPE_...`)
 146:lvgl/src/lv_core/lv_indev.c ****  */
 147:lvgl/src/lv_core/lv_indev.c **** lv_indev_type_t lv_indev_get_type(const lv_indev_t * indev)
 148:lvgl/src/lv_core/lv_indev.c **** {
 149:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL) return LV_INDEV_TYPE_NONE;
 150:lvgl/src/lv_core/lv_indev.c **** 
 151:lvgl/src/lv_core/lv_indev.c ****     return indev->driver.type;
 152:lvgl/src/lv_core/lv_indev.c **** }
 153:lvgl/src/lv_core/lv_indev.c **** 
 154:lvgl/src/lv_core/lv_indev.c **** /**
 155:lvgl/src/lv_core/lv_indev.c ****  * Reset one or all input devices
 156:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device to reset or NULL to reset all of them
 157:lvgl/src/lv_core/lv_indev.c ****  * @param obj pointer to an object which triggers the reset.
 158:lvgl/src/lv_core/lv_indev.c ****  */
 159:lvgl/src/lv_core/lv_indev.c **** void lv_indev_reset(lv_indev_t * indev, lv_obj_t * obj)
 160:lvgl/src/lv_core/lv_indev.c **** {
 161:lvgl/src/lv_core/lv_indev.c ****     if(indev) {
 162:lvgl/src/lv_core/lv_indev.c ****         indev->proc.reset_query = 1;
 163:lvgl/src/lv_core/lv_indev.c ****         if(indev_act == indev) indev_obj_act = NULL;
 164:lvgl/src/lv_core/lv_indev.c ****         if(obj == NULL || indev->proc.types.pointer.last_pressed == obj) {
 165:lvgl/src/lv_core/lv_indev.c ****             indev->proc.types.pointer.last_pressed = NULL;
 166:lvgl/src/lv_core/lv_indev.c ****         }
 167:lvgl/src/lv_core/lv_indev.c ****     }
 168:lvgl/src/lv_core/lv_indev.c ****     else {
 169:lvgl/src/lv_core/lv_indev.c ****         lv_indev_t * i = lv_indev_get_next(NULL);
 170:lvgl/src/lv_core/lv_indev.c ****         while(i) {
 171:lvgl/src/lv_core/lv_indev.c ****             i->proc.reset_query = 1;
 172:lvgl/src/lv_core/lv_indev.c ****             if(indev_act == i) indev_obj_act = NULL;
 173:lvgl/src/lv_core/lv_indev.c ****             if(obj == NULL || i->proc.types.pointer.last_pressed == obj) {
 174:lvgl/src/lv_core/lv_indev.c ****                 i->proc.types.pointer.last_pressed = NULL;
 175:lvgl/src/lv_core/lv_indev.c ****             }
 176:lvgl/src/lv_core/lv_indev.c ****             i = lv_indev_get_next(i);
 177:lvgl/src/lv_core/lv_indev.c ****         }
 178:lvgl/src/lv_core/lv_indev.c ****     }
 179:lvgl/src/lv_core/lv_indev.c **** }
 180:lvgl/src/lv_core/lv_indev.c **** 
 181:lvgl/src/lv_core/lv_indev.c **** /**
 182:lvgl/src/lv_core/lv_indev.c ****  * Reset the long press state of an input device
 183:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 184:lvgl/src/lv_core/lv_indev.c ****  */
 185:lvgl/src/lv_core/lv_indev.c **** void lv_indev_reset_long_press(lv_indev_t * indev)
 186:lvgl/src/lv_core/lv_indev.c **** {
 187:lvgl/src/lv_core/lv_indev.c ****     indev->proc.long_pr_sent         = 0;
 188:lvgl/src/lv_core/lv_indev.c ****     indev->proc.longpr_rep_timestamp = lv_tick_get();
 189:lvgl/src/lv_core/lv_indev.c ****     indev->proc.pr_timestamp         = lv_tick_get();
 190:lvgl/src/lv_core/lv_indev.c **** }
 191:lvgl/src/lv_core/lv_indev.c **** 
 192:lvgl/src/lv_core/lv_indev.c **** /**
 193:lvgl/src/lv_core/lv_indev.c ****  * Enable or disable an input devices
 194:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 195:lvgl/src/lv_core/lv_indev.c ****  * @param en true: enable; false: disable
 196:lvgl/src/lv_core/lv_indev.c ****  */
 197:lvgl/src/lv_core/lv_indev.c **** void lv_indev_enable(lv_indev_t * indev, bool en)
 198:lvgl/src/lv_core/lv_indev.c **** {
 199:lvgl/src/lv_core/lv_indev.c ****     if(!indev) return;
 200:lvgl/src/lv_core/lv_indev.c **** 
 201:lvgl/src/lv_core/lv_indev.c ****     indev->proc.disabled = en ? 0 : 1;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 5


 202:lvgl/src/lv_core/lv_indev.c **** }
 203:lvgl/src/lv_core/lv_indev.c **** 
 204:lvgl/src/lv_core/lv_indev.c **** /**
 205:lvgl/src/lv_core/lv_indev.c ****  * Set a cursor for a pointer input device (for LV_INPUT_TYPE_POINTER and LV_INPUT_TYPE_BUTTON)
 206:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 207:lvgl/src/lv_core/lv_indev.c ****  * @param cur_obj pointer to an object to be used as cursor
 208:lvgl/src/lv_core/lv_indev.c ****  */
 209:lvgl/src/lv_core/lv_indev.c **** void lv_indev_set_cursor(lv_indev_t * indev, lv_obj_t * cur_obj)
 210:lvgl/src/lv_core/lv_indev.c **** {
 211:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER) return;
 212:lvgl/src/lv_core/lv_indev.c **** 
 213:lvgl/src/lv_core/lv_indev.c ****     indev->cursor = cur_obj;
 214:lvgl/src/lv_core/lv_indev.c ****     lv_obj_set_parent(indev->cursor, lv_disp_get_layer_sys(indev->driver.disp));
 215:lvgl/src/lv_core/lv_indev.c ****     lv_obj_set_pos(indev->cursor, indev->proc.types.pointer.act_point.x, indev->proc.types.pointer.
 216:lvgl/src/lv_core/lv_indev.c ****     lv_obj_set_click(indev->cursor, false);
 217:lvgl/src/lv_core/lv_indev.c **** }
 218:lvgl/src/lv_core/lv_indev.c **** 
 219:lvgl/src/lv_core/lv_indev.c **** #if LV_USE_GROUP
 220:lvgl/src/lv_core/lv_indev.c **** /**
 221:lvgl/src/lv_core/lv_indev.c ****  * Set a destination group for a keypad input device (for LV_INDEV_TYPE_KEYPAD)
 222:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 223:lvgl/src/lv_core/lv_indev.c ****  * @param group point to a group
 224:lvgl/src/lv_core/lv_indev.c ****  */
 225:lvgl/src/lv_core/lv_indev.c **** void lv_indev_set_group(lv_indev_t * indev, lv_group_t * group)
 226:lvgl/src/lv_core/lv_indev.c **** {
 227:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type == LV_INDEV_TYPE_KEYPAD || indev->driver.type == LV_INDEV_TYPE_ENCODER) {
 228:lvgl/src/lv_core/lv_indev.c ****         indev->group = group;
 229:lvgl/src/lv_core/lv_indev.c ****     }
 230:lvgl/src/lv_core/lv_indev.c **** }
 231:lvgl/src/lv_core/lv_indev.c **** #endif
 232:lvgl/src/lv_core/lv_indev.c **** 
 233:lvgl/src/lv_core/lv_indev.c **** /**
 234:lvgl/src/lv_core/lv_indev.c ****  * Set the an array of points for LV_INDEV_TYPE_BUTTON.
 235:lvgl/src/lv_core/lv_indev.c ****  * These points will be assigned to the buttons to press a specific point on the screen
 236:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 237:lvgl/src/lv_core/lv_indev.c ****  * @param group point to a group
 238:lvgl/src/lv_core/lv_indev.c ****  */
 239:lvgl/src/lv_core/lv_indev.c **** void lv_indev_set_button_points(lv_indev_t * indev, const lv_point_t points[])
 240:lvgl/src/lv_core/lv_indev.c **** {
 241:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type == LV_INDEV_TYPE_BUTTON) {
 242:lvgl/src/lv_core/lv_indev.c ****         indev->btn_points = points;
 243:lvgl/src/lv_core/lv_indev.c ****     }
 244:lvgl/src/lv_core/lv_indev.c **** }
 245:lvgl/src/lv_core/lv_indev.c **** 
 246:lvgl/src/lv_core/lv_indev.c **** /**
 247:lvgl/src/lv_core/lv_indev.c ****  * Get the last point of an input device (for LV_INDEV_TYPE_POINTER and LV_INDEV_TYPE_BUTTON)
 248:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 249:lvgl/src/lv_core/lv_indev.c ****  * @param point pointer to a point to store the result
 250:lvgl/src/lv_core/lv_indev.c ****  */
 251:lvgl/src/lv_core/lv_indev.c **** void lv_indev_get_point(const lv_indev_t * indev, lv_point_t * point)
 252:lvgl/src/lv_core/lv_indev.c **** {
 253:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL) {
 254:lvgl/src/lv_core/lv_indev.c ****         point->x = 0;
 255:lvgl/src/lv_core/lv_indev.c ****         point->y = 0;
 256:lvgl/src/lv_core/lv_indev.c ****         return;
 257:lvgl/src/lv_core/lv_indev.c ****     }
 258:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER && indev->driver.type != LV_INDEV_TYPE_BUTTON) {
ARM GAS  D:\Temp\cc3iPNN1.s 			page 6


 259:lvgl/src/lv_core/lv_indev.c ****         point->x = -1;
 260:lvgl/src/lv_core/lv_indev.c ****         point->y = -1;
 261:lvgl/src/lv_core/lv_indev.c ****     }
 262:lvgl/src/lv_core/lv_indev.c ****     else {
 263:lvgl/src/lv_core/lv_indev.c ****         point->x = indev->proc.types.pointer.act_point.x;
 264:lvgl/src/lv_core/lv_indev.c ****         point->y = indev->proc.types.pointer.act_point.y;
 265:lvgl/src/lv_core/lv_indev.c ****     }
 266:lvgl/src/lv_core/lv_indev.c **** }
 267:lvgl/src/lv_core/lv_indev.c **** 
 268:lvgl/src/lv_core/lv_indev.c **** /**
 269:lvgl/src/lv_core/lv_indev.c **** * Get the current gesture direct
 270:lvgl/src/lv_core/lv_indev.c **** * @param indev pointer to an input device
 271:lvgl/src/lv_core/lv_indev.c **** * @return current gesture direct
 272:lvgl/src/lv_core/lv_indev.c **** */
 273:lvgl/src/lv_core/lv_indev.c **** lv_gesture_dir_t lv_indev_get_gesture_dir(const lv_indev_t * indev)
 274:lvgl/src/lv_core/lv_indev.c **** {
 275:lvgl/src/lv_core/lv_indev.c ****     return indev->proc.types.pointer.gesture_dir;
 276:lvgl/src/lv_core/lv_indev.c **** }
 277:lvgl/src/lv_core/lv_indev.c **** 
 278:lvgl/src/lv_core/lv_indev.c **** /**
 279:lvgl/src/lv_core/lv_indev.c ****  * Get the last pressed key of an input device (for LV_INDEV_TYPE_KEYPAD)
 280:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 281:lvgl/src/lv_core/lv_indev.c ****  * @return the last pressed key (0 on error)
 282:lvgl/src/lv_core/lv_indev.c ****  */
 283:lvgl/src/lv_core/lv_indev.c **** uint32_t lv_indev_get_key(const lv_indev_t * indev)
 284:lvgl/src/lv_core/lv_indev.c **** {
 285:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_KEYPAD)
 286:lvgl/src/lv_core/lv_indev.c ****         return 0;
 287:lvgl/src/lv_core/lv_indev.c ****     else
 288:lvgl/src/lv_core/lv_indev.c ****         return indev->proc.types.keypad.last_key;
 289:lvgl/src/lv_core/lv_indev.c **** }
 290:lvgl/src/lv_core/lv_indev.c **** 
 291:lvgl/src/lv_core/lv_indev.c **** /**
 292:lvgl/src/lv_core/lv_indev.c ****  * Check if there is dragging with an input device or not (for LV_INDEV_TYPE_POINTER and
 293:lvgl/src/lv_core/lv_indev.c ****  * LV_INDEV_TYPE_BUTTON)
 294:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 295:lvgl/src/lv_core/lv_indev.c ****  * @return true: drag is in progress
 296:lvgl/src/lv_core/lv_indev.c ****  */
 297:lvgl/src/lv_core/lv_indev.c **** bool lv_indev_is_dragging(const lv_indev_t * indev)
 298:lvgl/src/lv_core/lv_indev.c **** {
 299:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL) return false;
 300:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER && indev->driver.type != LV_INDEV_TYPE_BUTTON) r
 301:lvgl/src/lv_core/lv_indev.c ****     return indev->proc.types.pointer.drag_in_prog == 0 ? false : true;
 302:lvgl/src/lv_core/lv_indev.c **** }
 303:lvgl/src/lv_core/lv_indev.c **** 
 304:lvgl/src/lv_core/lv_indev.c **** /**
 305:lvgl/src/lv_core/lv_indev.c ****  * Get the types.pointer.vector of dragging of an input device (for LV_INDEV_TYPE_POINTER and
 306:lvgl/src/lv_core/lv_indev.c ****  * LV_INDEV_TYPE_BUTTON)
 307:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 308:lvgl/src/lv_core/lv_indev.c ****  * @param point pointer to a point to store the types.pointer.vector
 309:lvgl/src/lv_core/lv_indev.c ****  */
 310:lvgl/src/lv_core/lv_indev.c **** void lv_indev_get_vect(const lv_indev_t * indev, lv_point_t * point)
 311:lvgl/src/lv_core/lv_indev.c **** {
 312:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL) {
 313:lvgl/src/lv_core/lv_indev.c ****         point->x = 0;
 314:lvgl/src/lv_core/lv_indev.c ****         point->y = 0;
 315:lvgl/src/lv_core/lv_indev.c ****         return;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 7


 316:lvgl/src/lv_core/lv_indev.c ****     }
 317:lvgl/src/lv_core/lv_indev.c **** 
 318:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER && indev->driver.type != LV_INDEV_TYPE_BUTTON) {
 319:lvgl/src/lv_core/lv_indev.c ****         point->x = 0;
 320:lvgl/src/lv_core/lv_indev.c ****         point->y = 0;
 321:lvgl/src/lv_core/lv_indev.c ****     }
 322:lvgl/src/lv_core/lv_indev.c ****     else {
 323:lvgl/src/lv_core/lv_indev.c ****         point->x = indev->proc.types.pointer.vect.x;
 324:lvgl/src/lv_core/lv_indev.c ****         point->y = indev->proc.types.pointer.vect.y;
 325:lvgl/src/lv_core/lv_indev.c ****     }
 326:lvgl/src/lv_core/lv_indev.c **** }
 327:lvgl/src/lv_core/lv_indev.c **** 
 328:lvgl/src/lv_core/lv_indev.c **** /**
 329:lvgl/src/lv_core/lv_indev.c ****  * Manually finish dragging.
 330:lvgl/src/lv_core/lv_indev.c ****  * `LV_SIGNAL_DRAG_END` and `LV_EVENT_DRAG_END` will be sent.
 331:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 332:lvgl/src/lv_core/lv_indev.c ****  * @return `LV_RES_INV` if the object being dragged was deleted. Else `LV_RES_OK`.
 333:lvgl/src/lv_core/lv_indev.c ****  */
 334:lvgl/src/lv_core/lv_indev.c **** lv_res_t lv_indev_finish_drag(lv_indev_t * indev)
 335:lvgl/src/lv_core/lv_indev.c **** {
 336:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL) return LV_RES_OK;
 337:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER) return LV_RES_OK;
 338:lvgl/src/lv_core/lv_indev.c ****     if(indev->proc.types.pointer.drag_in_prog == 0) return LV_RES_OK;
 339:lvgl/src/lv_core/lv_indev.c **** 
 340:lvgl/src/lv_core/lv_indev.c ****     indev->proc.types.pointer.drag_in_prog = 0;
 341:lvgl/src/lv_core/lv_indev.c ****     indev->proc.types.pointer.drag_throw_vect.x = 0;
 342:lvgl/src/lv_core/lv_indev.c ****     indev->proc.types.pointer.drag_throw_vect.y = 0;
 343:lvgl/src/lv_core/lv_indev.c **** 
 344:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * drag_obj;
 345:lvgl/src/lv_core/lv_indev.c ****     drag_obj = get_dragged_obj(indev->proc.types.pointer.act_obj);
 346:lvgl/src/lv_core/lv_indev.c ****     if(drag_obj == NULL) return LV_RES_OK;
 347:lvgl/src/lv_core/lv_indev.c **** 
 348:lvgl/src/lv_core/lv_indev.c ****     lv_res_t res;
 349:lvgl/src/lv_core/lv_indev.c ****     res = drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_END, NULL);
 350:lvgl/src/lv_core/lv_indev.c ****     if(res != LV_RES_OK) return res;
 351:lvgl/src/lv_core/lv_indev.c **** 
 352:lvgl/src/lv_core/lv_indev.c ****     res = lv_event_send(drag_obj, LV_EVENT_DRAG_END, NULL);
 353:lvgl/src/lv_core/lv_indev.c ****     if(res != LV_RES_OK) return res;
 354:lvgl/src/lv_core/lv_indev.c **** 
 355:lvgl/src/lv_core/lv_indev.c ****     return res;
 356:lvgl/src/lv_core/lv_indev.c **** }
 357:lvgl/src/lv_core/lv_indev.c **** 
 358:lvgl/src/lv_core/lv_indev.c **** /**
 359:lvgl/src/lv_core/lv_indev.c ****  * Do nothing until the next release
 360:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 361:lvgl/src/lv_core/lv_indev.c ****  */
 362:lvgl/src/lv_core/lv_indev.c **** void lv_indev_wait_release(lv_indev_t * indev)
 363:lvgl/src/lv_core/lv_indev.c **** {
 364:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL)return;
 365:lvgl/src/lv_core/lv_indev.c ****     indev->proc.wait_until_release = 1;
 366:lvgl/src/lv_core/lv_indev.c **** }
 367:lvgl/src/lv_core/lv_indev.c **** 
 368:lvgl/src/lv_core/lv_indev.c **** /**
 369:lvgl/src/lv_core/lv_indev.c ****  * Gets a pointer to the currently active object in the currently processed input device.
 370:lvgl/src/lv_core/lv_indev.c ****  * @return pointer to currently active object or NULL if no active object
 371:lvgl/src/lv_core/lv_indev.c ****  */
 372:lvgl/src/lv_core/lv_indev.c **** lv_obj_t * lv_indev_get_obj_act(void)
ARM GAS  D:\Temp\cc3iPNN1.s 			page 8


 373:lvgl/src/lv_core/lv_indev.c **** {
 374:lvgl/src/lv_core/lv_indev.c ****     return indev_obj_act;
 375:lvgl/src/lv_core/lv_indev.c **** }
 376:lvgl/src/lv_core/lv_indev.c **** 
 377:lvgl/src/lv_core/lv_indev.c **** /**
 378:lvgl/src/lv_core/lv_indev.c ****  * Get a pointer to the indev read task to
 379:lvgl/src/lv_core/lv_indev.c ****  * modify its parameters with `lv_task_...` functions.
 380:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
 381:lvgl/src/lv_core/lv_indev.c ****  * @return pointer to the indev read refresher task. (NULL on error)
 382:lvgl/src/lv_core/lv_indev.c ****  */
 383:lvgl/src/lv_core/lv_indev.c **** lv_task_t * lv_indev_get_read_task(lv_disp_t * indev)
 384:lvgl/src/lv_core/lv_indev.c **** {
 385:lvgl/src/lv_core/lv_indev.c ****     if(!indev) {
 386:lvgl/src/lv_core/lv_indev.c ****         LV_LOG_WARN("lv_indev_get_read_task: indev was NULL");
 387:lvgl/src/lv_core/lv_indev.c ****         return NULL;
 388:lvgl/src/lv_core/lv_indev.c ****     }
 389:lvgl/src/lv_core/lv_indev.c **** 
 390:lvgl/src/lv_core/lv_indev.c ****     return indev->refr_task;
 391:lvgl/src/lv_core/lv_indev.c **** }
 392:lvgl/src/lv_core/lv_indev.c **** 
 393:lvgl/src/lv_core/lv_indev.c **** /**********************
 394:lvgl/src/lv_core/lv_indev.c ****  *   STATIC FUNCTIONS
 395:lvgl/src/lv_core/lv_indev.c ****  **********************/
 396:lvgl/src/lv_core/lv_indev.c **** 
 397:lvgl/src/lv_core/lv_indev.c **** /**
 398:lvgl/src/lv_core/lv_indev.c ****  * Process a new point from LV_INDEV_TYPE_POINTER input device
 399:lvgl/src/lv_core/lv_indev.c ****  * @param i pointer to an input device
 400:lvgl/src/lv_core/lv_indev.c ****  * @param data pointer to the data read from the input device
 401:lvgl/src/lv_core/lv_indev.c ****  */
 402:lvgl/src/lv_core/lv_indev.c **** static void indev_pointer_proc(lv_indev_t * i, lv_indev_data_t * data)
 403:lvgl/src/lv_core/lv_indev.c **** {
 404:lvgl/src/lv_core/lv_indev.c ****     /*Move the cursor if set and moved*/
 405:lvgl/src/lv_core/lv_indev.c ****     if(i->cursor != NULL &&
 406:lvgl/src/lv_core/lv_indev.c ****        (i->proc.types.pointer.last_point.x != data->point.x || i->proc.types.pointer.last_point.y !
 407:lvgl/src/lv_core/lv_indev.c ****         lv_obj_set_pos(i->cursor, data->point.x, data->point.y);
 408:lvgl/src/lv_core/lv_indev.c ****     }
 409:lvgl/src/lv_core/lv_indev.c **** 
 410:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.act_point.x = data->point.x;
 411:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.act_point.y = data->point.y;
 412:lvgl/src/lv_core/lv_indev.c **** 
 413:lvgl/src/lv_core/lv_indev.c ****     if(i->proc.state == LV_INDEV_STATE_PR) {
 414:lvgl/src/lv_core/lv_indev.c ****         indev_proc_press(&i->proc);
 415:lvgl/src/lv_core/lv_indev.c ****     }
 416:lvgl/src/lv_core/lv_indev.c ****     else {
 417:lvgl/src/lv_core/lv_indev.c ****         indev_proc_release(&i->proc);
 418:lvgl/src/lv_core/lv_indev.c ****     }
 419:lvgl/src/lv_core/lv_indev.c **** 
 420:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.last_point.x = i->proc.types.pointer.act_point.x;
 421:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.last_point.y = i->proc.types.pointer.act_point.y;
 422:lvgl/src/lv_core/lv_indev.c **** }
 423:lvgl/src/lv_core/lv_indev.c **** 
 424:lvgl/src/lv_core/lv_indev.c **** /**
 425:lvgl/src/lv_core/lv_indev.c ****  * Process a new point from LV_INDEV_TYPE_KEYPAD input device
 426:lvgl/src/lv_core/lv_indev.c ****  * @param i pointer to an input device
 427:lvgl/src/lv_core/lv_indev.c ****  * @param data pointer to the data read from the input device
 428:lvgl/src/lv_core/lv_indev.c ****  */
 429:lvgl/src/lv_core/lv_indev.c **** static void indev_keypad_proc(lv_indev_t * i, lv_indev_data_t * data)
ARM GAS  D:\Temp\cc3iPNN1.s 			page 9


 430:lvgl/src/lv_core/lv_indev.c **** {
 431:lvgl/src/lv_core/lv_indev.c **** #if LV_USE_GROUP
 432:lvgl/src/lv_core/lv_indev.c ****     if(data->state == LV_INDEV_STATE_PR && i->proc.wait_until_release) return;
 433:lvgl/src/lv_core/lv_indev.c **** 
 434:lvgl/src/lv_core/lv_indev.c ****     if(i->proc.wait_until_release) {
 435:lvgl/src/lv_core/lv_indev.c ****         i->proc.wait_until_release      = 0;
 436:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp            = 0;
 437:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent            = 0;
 438:lvgl/src/lv_core/lv_indev.c ****         i->proc.types.keypad.last_state = LV_INDEV_STATE_REL; /*To skip the processing of release*/
 439:lvgl/src/lv_core/lv_indev.c ****     }
 440:lvgl/src/lv_core/lv_indev.c **** 
 441:lvgl/src/lv_core/lv_indev.c ****     lv_group_t * g = i->group;
 442:lvgl/src/lv_core/lv_indev.c ****     if(g == NULL) return;
 443:lvgl/src/lv_core/lv_indev.c **** 
 444:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = lv_group_get_focused(g);
 445:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 446:lvgl/src/lv_core/lv_indev.c **** 
 447:lvgl/src/lv_core/lv_indev.c ****     /*Save the last key to compare it with the current latter on RELEASE*/
 448:lvgl/src/lv_core/lv_indev.c ****     uint32_t prev_key = i->proc.types.keypad.last_key;
 449:lvgl/src/lv_core/lv_indev.c **** 
 450:lvgl/src/lv_core/lv_indev.c ****     /* Save the last key.
 451:lvgl/src/lv_core/lv_indev.c ****      * It must be done here else `lv_indev_get_key` will return the last key in events and signals*
 452:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.keypad.last_key = data->key;
 453:lvgl/src/lv_core/lv_indev.c **** 
 454:lvgl/src/lv_core/lv_indev.c ****     /* Save the previous state so we can detect state changes below and also set the last state now
 455:lvgl/src/lv_core/lv_indev.c ****      * so if any signal/event handler on the way returns `LV_RES_INV` the last state is remembered
 456:lvgl/src/lv_core/lv_indev.c ****      * for the next time*/
 457:lvgl/src/lv_core/lv_indev.c ****     uint32_t prev_state             = i->proc.types.keypad.last_state;
 458:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.keypad.last_state = data->state;
 459:lvgl/src/lv_core/lv_indev.c **** 
 460:lvgl/src/lv_core/lv_indev.c ****     /*Key press happened*/
 461:lvgl/src/lv_core/lv_indev.c ****     if(data->state == LV_INDEV_STATE_PR && prev_state == LV_INDEV_STATE_REL) {
 462:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp = lv_tick_get();
 463:lvgl/src/lv_core/lv_indev.c **** 
 464:lvgl/src/lv_core/lv_indev.c ****         /*Simulate a press on the object if ENTER was pressed*/
 465:lvgl/src/lv_core/lv_indev.c ****         if(data->key == LV_KEY_ENTER) {
 466:lvgl/src/lv_core/lv_indev.c ****             /*Send the ENTER as a normal KEY*/
 467:lvgl/src/lv_core/lv_indev.c ****             lv_group_send_data(g, LV_KEY_ENTER);
 468:lvgl/src/lv_core/lv_indev.c **** 
 469:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSED, NULL);
 470:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 471:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_PRESSED, NULL);
 472:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 473:lvgl/src/lv_core/lv_indev.c ****         }
 474:lvgl/src/lv_core/lv_indev.c ****         else if(data->key == LV_KEY_ESC) {
 475:lvgl/src/lv_core/lv_indev.c ****             /*Send the ESC as a normal KEY*/
 476:lvgl/src/lv_core/lv_indev.c ****             lv_group_send_data(g, LV_KEY_ESC);
 477:lvgl/src/lv_core/lv_indev.c **** 
 478:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_CANCEL, NULL);
 479:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 480:lvgl/src/lv_core/lv_indev.c ****         }
 481:lvgl/src/lv_core/lv_indev.c ****         /*Move the focus on NEXT*/
 482:lvgl/src/lv_core/lv_indev.c ****         else if(data->key == LV_KEY_NEXT) {
 483:lvgl/src/lv_core/lv_indev.c ****             lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is disabl
 484:lvgl/src/lv_core/lv_indev.c ****             lv_group_focus_next(g);
 485:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 486:lvgl/src/lv_core/lv_indev.c ****         }
ARM GAS  D:\Temp\cc3iPNN1.s 			page 10


 487:lvgl/src/lv_core/lv_indev.c ****         /*Move the focus on PREV*/
 488:lvgl/src/lv_core/lv_indev.c ****         else if(data->key == LV_KEY_PREV) {
 489:lvgl/src/lv_core/lv_indev.c ****             lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is disabl
 490:lvgl/src/lv_core/lv_indev.c ****             lv_group_focus_prev(g);
 491:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 492:lvgl/src/lv_core/lv_indev.c ****         }
 493:lvgl/src/lv_core/lv_indev.c ****         /*Just send other keys to the object (e.g. 'A' or `LV_GROUP_KEY_RIGHT`)*/
 494:lvgl/src/lv_core/lv_indev.c ****         else {
 495:lvgl/src/lv_core/lv_indev.c ****             lv_group_send_data(g, data->key);
 496:lvgl/src/lv_core/lv_indev.c ****         }
 497:lvgl/src/lv_core/lv_indev.c ****     }
 498:lvgl/src/lv_core/lv_indev.c ****     /*Pressing*/
 499:lvgl/src/lv_core/lv_indev.c ****     else if(data->state == LV_INDEV_STATE_PR && prev_state == LV_INDEV_STATE_PR) {
 500:lvgl/src/lv_core/lv_indev.c **** 
 501:lvgl/src/lv_core/lv_indev.c ****         if(data->key == LV_KEY_ENTER) {
 502:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSING, NULL);
 503:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 504:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_PRESSING, NULL);
 505:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 506:lvgl/src/lv_core/lv_indev.c ****         }
 507:lvgl/src/lv_core/lv_indev.c **** 
 508:lvgl/src/lv_core/lv_indev.c ****         /*Long press time has elapsed?*/
 509:lvgl/src/lv_core/lv_indev.c ****         if(i->proc.long_pr_sent == 0 && lv_tick_elaps(i->proc.pr_timestamp) > i->driver.long_press_
 510:lvgl/src/lv_core/lv_indev.c ****             i->proc.long_pr_sent = 1;
 511:lvgl/src/lv_core/lv_indev.c ****             if(data->key == LV_KEY_ENTER) {
 512:lvgl/src/lv_core/lv_indev.c ****                 i->proc.longpr_rep_timestamp = lv_tick_get();
 513:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS, NULL);
 514:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 515:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 516:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 517:lvgl/src/lv_core/lv_indev.c ****             }
 518:lvgl/src/lv_core/lv_indev.c ****         }
 519:lvgl/src/lv_core/lv_indev.c ****         /*Long press repeated time has elapsed?*/
 520:lvgl/src/lv_core/lv_indev.c ****         else if(i->proc.long_pr_sent != 0 &&
 521:lvgl/src/lv_core/lv_indev.c ****                 lv_tick_elaps(i->proc.longpr_rep_timestamp) > i->driver.long_press_rep_time) {
 522:lvgl/src/lv_core/lv_indev.c **** 
 523:lvgl/src/lv_core/lv_indev.c ****             i->proc.longpr_rep_timestamp = lv_tick_get();
 524:lvgl/src/lv_core/lv_indev.c **** 
 525:lvgl/src/lv_core/lv_indev.c ****             /*Send LONG_PRESS_REP on ENTER*/
 526:lvgl/src/lv_core/lv_indev.c ****             if(data->key == LV_KEY_ENTER) {
 527:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, NULL);
 528:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 529:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 530:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 531:lvgl/src/lv_core/lv_indev.c ****             }
 532:lvgl/src/lv_core/lv_indev.c ****             /*Move the focus on NEXT again*/
 533:lvgl/src/lv_core/lv_indev.c ****             else if(data->key == LV_KEY_NEXT) {
 534:lvgl/src/lv_core/lv_indev.c ****                 lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is di
 535:lvgl/src/lv_core/lv_indev.c ****                 lv_group_focus_next(g);
 536:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 537:lvgl/src/lv_core/lv_indev.c ****             }
 538:lvgl/src/lv_core/lv_indev.c ****             /*Move the focus on PREV again*/
 539:lvgl/src/lv_core/lv_indev.c ****             else if(data->key == LV_KEY_PREV) {
 540:lvgl/src/lv_core/lv_indev.c ****                 lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is di
 541:lvgl/src/lv_core/lv_indev.c ****                 lv_group_focus_prev(g);
 542:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 543:lvgl/src/lv_core/lv_indev.c ****             }
ARM GAS  D:\Temp\cc3iPNN1.s 			page 11


 544:lvgl/src/lv_core/lv_indev.c ****             /*Just send other keys again to the object (e.g. 'A' or `LV_GROUP_KEY_RIGHT)*/
 545:lvgl/src/lv_core/lv_indev.c ****             else {
 546:lvgl/src/lv_core/lv_indev.c ****                 lv_group_send_data(g, data->key);
 547:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 548:lvgl/src/lv_core/lv_indev.c ****             }
 549:lvgl/src/lv_core/lv_indev.c ****         }
 550:lvgl/src/lv_core/lv_indev.c ****     }
 551:lvgl/src/lv_core/lv_indev.c ****     /*Release happened*/
 552:lvgl/src/lv_core/lv_indev.c ****     else if(data->state == LV_INDEV_STATE_REL && prev_state == LV_INDEV_STATE_PR) {
 553:lvgl/src/lv_core/lv_indev.c ****         /*The user might clear the key when it was released. Always release the pressed key*/
 554:lvgl/src/lv_core/lv_indev.c ****         data->key = prev_key;
 555:lvgl/src/lv_core/lv_indev.c ****         if(data->key == LV_KEY_ENTER) {
 556:lvgl/src/lv_core/lv_indev.c **** 
 557:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, NULL);
 558:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 559:lvgl/src/lv_core/lv_indev.c **** 
 560:lvgl/src/lv_core/lv_indev.c ****             if(i->proc.long_pr_sent == 0) {
 561:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 562:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 563:lvgl/src/lv_core/lv_indev.c ****             }
 564:lvgl/src/lv_core/lv_indev.c **** 
 565:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_CLICKED, NULL);
 566:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 567:lvgl/src/lv_core/lv_indev.c **** 
 568:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_RELEASED, NULL);
 569:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 570:lvgl/src/lv_core/lv_indev.c ****         }
 571:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp = 0;
 572:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent = 0;
 573:lvgl/src/lv_core/lv_indev.c ****     }
 574:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = NULL;
 575:lvgl/src/lv_core/lv_indev.c **** #else
 576:lvgl/src/lv_core/lv_indev.c ****     (void)data; /*Unused*/
 577:lvgl/src/lv_core/lv_indev.c ****     (void)i;    /*Unused*/
 578:lvgl/src/lv_core/lv_indev.c **** #endif
 579:lvgl/src/lv_core/lv_indev.c **** }
 580:lvgl/src/lv_core/lv_indev.c **** 
 581:lvgl/src/lv_core/lv_indev.c **** /**
 582:lvgl/src/lv_core/lv_indev.c ****  * Process a new point from LV_INDEV_TYPE_ENCODER input device
 583:lvgl/src/lv_core/lv_indev.c ****  * @param i pointer to an input device
 584:lvgl/src/lv_core/lv_indev.c ****  * @param data pointer to the data read from the input device
 585:lvgl/src/lv_core/lv_indev.c ****  */
 586:lvgl/src/lv_core/lv_indev.c **** static void indev_encoder_proc(lv_indev_t * i, lv_indev_data_t * data)
 587:lvgl/src/lv_core/lv_indev.c **** {
 588:lvgl/src/lv_core/lv_indev.c **** #if LV_USE_GROUP
 589:lvgl/src/lv_core/lv_indev.c **** 
 590:lvgl/src/lv_core/lv_indev.c ****     if(data->state == LV_INDEV_STATE_PR && i->proc.wait_until_release) return;
 591:lvgl/src/lv_core/lv_indev.c **** 
 592:lvgl/src/lv_core/lv_indev.c ****     if(i->proc.wait_until_release) {
 593:lvgl/src/lv_core/lv_indev.c ****         i->proc.wait_until_release      = 0;
 594:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp            = 0;
 595:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent            = 0;
 596:lvgl/src/lv_core/lv_indev.c ****         i->proc.types.keypad.last_state = LV_INDEV_STATE_REL; /*To skip the processing of release*/
 597:lvgl/src/lv_core/lv_indev.c ****     }
 598:lvgl/src/lv_core/lv_indev.c **** 
 599:lvgl/src/lv_core/lv_indev.c ****     /* Save the last keys before anything else.
 600:lvgl/src/lv_core/lv_indev.c ****      * They need to be already saved if the function returns for any reason*/
ARM GAS  D:\Temp\cc3iPNN1.s 			page 12


 601:lvgl/src/lv_core/lv_indev.c ****     lv_indev_state_t last_state     = i->proc.types.keypad.last_state;
 602:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.keypad.last_state = data->state;
 603:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.keypad.last_key   = data->key;
 604:lvgl/src/lv_core/lv_indev.c **** 
 605:lvgl/src/lv_core/lv_indev.c ****     lv_group_t * g = i->group;
 606:lvgl/src/lv_core/lv_indev.c ****     if(g == NULL) return;
 607:lvgl/src/lv_core/lv_indev.c **** 
 608:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = lv_group_get_focused(g);
 609:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 610:lvgl/src/lv_core/lv_indev.c **** 
 611:lvgl/src/lv_core/lv_indev.c ****     /*Process the steps they are valid only with released button*/
 612:lvgl/src/lv_core/lv_indev.c ****     if(data->state != LV_INDEV_STATE_REL) {
 613:lvgl/src/lv_core/lv_indev.c ****         data->enc_diff = 0;
 614:lvgl/src/lv_core/lv_indev.c ****     }
 615:lvgl/src/lv_core/lv_indev.c **** 
 616:lvgl/src/lv_core/lv_indev.c ****     /*Refresh the focused object. It might change due to lv_group_focus_prev/next*/
 617:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = lv_group_get_focused(g);
 618:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 619:lvgl/src/lv_core/lv_indev.c **** 
 620:lvgl/src/lv_core/lv_indev.c ****     /*Button press happened*/
 621:lvgl/src/lv_core/lv_indev.c ****     if(data->state == LV_INDEV_STATE_PR && last_state == LV_INDEV_STATE_REL) {
 622:lvgl/src/lv_core/lv_indev.c **** 
 623:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp = lv_tick_get();
 624:lvgl/src/lv_core/lv_indev.c **** 
 625:lvgl/src/lv_core/lv_indev.c ****         if(data->key == LV_KEY_ENTER) {
 626:lvgl/src/lv_core/lv_indev.c ****             bool editable = false;
 627:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_GET_EDITABLE, &editable);
 628:lvgl/src/lv_core/lv_indev.c **** 
 629:lvgl/src/lv_core/lv_indev.c ****             if(lv_group_get_editing(g) == true || editable == false) {
 630:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSED, NULL);
 631:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 632:lvgl/src/lv_core/lv_indev.c **** 
 633:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_PRESSED, NULL);
 634:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 635:lvgl/src/lv_core/lv_indev.c ****             }
 636:lvgl/src/lv_core/lv_indev.c ****         }
 637:lvgl/src/lv_core/lv_indev.c ****         else if(data->key == LV_KEY_LEFT) {
 638:lvgl/src/lv_core/lv_indev.c ****             /*emulate encoder left*/
 639:lvgl/src/lv_core/lv_indev.c ****             data->enc_diff--;
 640:lvgl/src/lv_core/lv_indev.c ****         }
 641:lvgl/src/lv_core/lv_indev.c ****         else if(data->key == LV_KEY_RIGHT) {
 642:lvgl/src/lv_core/lv_indev.c ****             /*emulate encoder right*/
 643:lvgl/src/lv_core/lv_indev.c ****             data->enc_diff++;
 644:lvgl/src/lv_core/lv_indev.c ****         }
 645:lvgl/src/lv_core/lv_indev.c ****         else if(data->key == LV_KEY_ESC) {
 646:lvgl/src/lv_core/lv_indev.c ****             /*Send the ESC as a normal KEY*/
 647:lvgl/src/lv_core/lv_indev.c ****             lv_group_send_data(g, LV_KEY_ESC);
 648:lvgl/src/lv_core/lv_indev.c **** 
 649:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_CANCEL, NULL);
 650:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 651:lvgl/src/lv_core/lv_indev.c ****         }
 652:lvgl/src/lv_core/lv_indev.c ****         /*Just send other keys to the object (e.g. 'A' or `LV_GROUP_KEY_RIGHT`)*/
 653:lvgl/src/lv_core/lv_indev.c ****         else {
 654:lvgl/src/lv_core/lv_indev.c ****             lv_group_send_data(g, data->key);
 655:lvgl/src/lv_core/lv_indev.c ****         }
 656:lvgl/src/lv_core/lv_indev.c ****     }
 657:lvgl/src/lv_core/lv_indev.c ****     /*Pressing*/
ARM GAS  D:\Temp\cc3iPNN1.s 			page 13


 658:lvgl/src/lv_core/lv_indev.c ****     else if(data->state == LV_INDEV_STATE_PR && last_state == LV_INDEV_STATE_PR) {
 659:lvgl/src/lv_core/lv_indev.c ****         /* Long press*/
 660:lvgl/src/lv_core/lv_indev.c ****         if(i->proc.long_pr_sent == 0 && lv_tick_elaps(i->proc.pr_timestamp) > i->driver.long_press_
 661:lvgl/src/lv_core/lv_indev.c **** 
 662:lvgl/src/lv_core/lv_indev.c ****             i->proc.long_pr_sent = 1;
 663:lvgl/src/lv_core/lv_indev.c ****             i->proc.longpr_rep_timestamp = lv_tick_get();
 664:lvgl/src/lv_core/lv_indev.c **** 
 665:lvgl/src/lv_core/lv_indev.c ****             if(data->key == LV_KEY_ENTER) {
 666:lvgl/src/lv_core/lv_indev.c ****                 bool editable = false;
 667:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_GET_EDITABLE, &editable);
 668:lvgl/src/lv_core/lv_indev.c **** 
 669:lvgl/src/lv_core/lv_indev.c ****                 /*On enter long press toggle edit mode.*/
 670:lvgl/src/lv_core/lv_indev.c ****                 if(editable) {
 671:lvgl/src/lv_core/lv_indev.c ****                     /*Don't leave edit mode if there is only one object (nowhere to navigate)*/
 672:lvgl/src/lv_core/lv_indev.c ****                     if(_lv_ll_get_len(&g->obj_ll) > 1) {
 673:lvgl/src/lv_core/lv_indev.c ****                         lv_group_set_editing(g, lv_group_get_editing(g) ? false : true); /*Toggle e
 674:lvgl/src/lv_core/lv_indev.c ****                     }
 675:lvgl/src/lv_core/lv_indev.c ****                 }
 676:lvgl/src/lv_core/lv_indev.c ****                 /*If not editable then just send a long press signal*/
 677:lvgl/src/lv_core/lv_indev.c ****                 else {
 678:lvgl/src/lv_core/lv_indev.c ****                     indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS, NULL);
 679:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 680:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 681:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 682:lvgl/src/lv_core/lv_indev.c ****                 }
 683:lvgl/src/lv_core/lv_indev.c ****             }
 684:lvgl/src/lv_core/lv_indev.c **** 
 685:lvgl/src/lv_core/lv_indev.c ****             i->proc.long_pr_sent = 1;
 686:lvgl/src/lv_core/lv_indev.c ****         }
 687:lvgl/src/lv_core/lv_indev.c ****         /*Long press repeated time has elapsed?*/
 688:lvgl/src/lv_core/lv_indev.c ****         else if(i->proc.long_pr_sent != 0 && lv_tick_elaps(i->proc.longpr_rep_timestamp) > i->drive
 689:lvgl/src/lv_core/lv_indev.c **** 
 690:lvgl/src/lv_core/lv_indev.c ****             i->proc.longpr_rep_timestamp = lv_tick_get();
 691:lvgl/src/lv_core/lv_indev.c **** 
 692:lvgl/src/lv_core/lv_indev.c ****             if(data->key == LV_KEY_ENTER) {
 693:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, NULL);
 694:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 695:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 696:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 697:lvgl/src/lv_core/lv_indev.c ****             }
 698:lvgl/src/lv_core/lv_indev.c ****             else if(data->key == LV_KEY_LEFT) {
 699:lvgl/src/lv_core/lv_indev.c ****                 /*emulate encoder left*/
 700:lvgl/src/lv_core/lv_indev.c ****                 data->enc_diff--;
 701:lvgl/src/lv_core/lv_indev.c ****             }
 702:lvgl/src/lv_core/lv_indev.c ****             else if(data->key == LV_KEY_RIGHT) {
 703:lvgl/src/lv_core/lv_indev.c ****                 /*emulate encoder right*/
 704:lvgl/src/lv_core/lv_indev.c ****                 data->enc_diff++;
 705:lvgl/src/lv_core/lv_indev.c ****             }
 706:lvgl/src/lv_core/lv_indev.c ****             else {
 707:lvgl/src/lv_core/lv_indev.c ****                 lv_group_send_data(g, data->key);
 708:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 709:lvgl/src/lv_core/lv_indev.c ****             }
 710:lvgl/src/lv_core/lv_indev.c **** 
 711:lvgl/src/lv_core/lv_indev.c ****         }
 712:lvgl/src/lv_core/lv_indev.c **** 
 713:lvgl/src/lv_core/lv_indev.c ****     }
 714:lvgl/src/lv_core/lv_indev.c ****     /*Release happened*/
ARM GAS  D:\Temp\cc3iPNN1.s 			page 14


 715:lvgl/src/lv_core/lv_indev.c ****     else if(data->state == LV_INDEV_STATE_REL && last_state == LV_INDEV_STATE_PR) {
 716:lvgl/src/lv_core/lv_indev.c **** 
 717:lvgl/src/lv_core/lv_indev.c ****         if(data->key == LV_KEY_ENTER) {
 718:lvgl/src/lv_core/lv_indev.c ****             bool editable = false;
 719:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_GET_EDITABLE, &editable);
 720:lvgl/src/lv_core/lv_indev.c **** 
 721:lvgl/src/lv_core/lv_indev.c ****             /*The button was released on a non-editable object. Just send enter*/
 722:lvgl/src/lv_core/lv_indev.c ****             if(editable == false) {
 723:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, NULL);
 724:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 725:lvgl/src/lv_core/lv_indev.c **** 
 726:lvgl/src/lv_core/lv_indev.c ****                 if(i->proc.long_pr_sent == 0) lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, 
 727:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 728:lvgl/src/lv_core/lv_indev.c **** 
 729:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_CLICKED, NULL);
 730:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 731:lvgl/src/lv_core/lv_indev.c **** 
 732:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_RELEASED, NULL);
 733:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 734:lvgl/src/lv_core/lv_indev.c ****             }
 735:lvgl/src/lv_core/lv_indev.c ****             /*An object is being edited and the button is released. */
 736:lvgl/src/lv_core/lv_indev.c ****             else if(g->editing) {
 737:lvgl/src/lv_core/lv_indev.c ****                 /*Ignore long pressed enter release because it comes from mode switch*/
 738:lvgl/src/lv_core/lv_indev.c ****                 if(!i->proc.long_pr_sent || _lv_ll_get_len(&g->obj_ll) <= 1) {
 739:lvgl/src/lv_core/lv_indev.c ****                     indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, NULL);
 740:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 741:lvgl/src/lv_core/lv_indev.c **** 
 742:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 743:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 744:lvgl/src/lv_core/lv_indev.c **** 
 745:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_CLICKED, NULL);
 746:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 747:lvgl/src/lv_core/lv_indev.c **** 
 748:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_RELEASED, NULL);
 749:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 750:lvgl/src/lv_core/lv_indev.c **** 
 751:lvgl/src/lv_core/lv_indev.c ****                     lv_group_send_data(g, LV_KEY_ENTER);
 752:lvgl/src/lv_core/lv_indev.c ****                 }
 753:lvgl/src/lv_core/lv_indev.c ****             }
 754:lvgl/src/lv_core/lv_indev.c ****             /*If the focused object is editable and now in navigate mode then on enter switch edit
 755:lvgl/src/lv_core/lv_indev.c ****                mode*/
 756:lvgl/src/lv_core/lv_indev.c ****             else if(editable && !g->editing && !i->proc.long_pr_sent) {
 757:lvgl/src/lv_core/lv_indev.c ****                 lv_group_set_editing(g, true); /*Set edit mode*/
 758:lvgl/src/lv_core/lv_indev.c ****             }
 759:lvgl/src/lv_core/lv_indev.c ****         }
 760:lvgl/src/lv_core/lv_indev.c **** 
 761:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp = 0;
 762:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent = 0;
 763:lvgl/src/lv_core/lv_indev.c ****     }
 764:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = NULL;
 765:lvgl/src/lv_core/lv_indev.c **** 
 766:lvgl/src/lv_core/lv_indev.c ****     /*if encoder steps or simulated steps via left/right keys*/
 767:lvgl/src/lv_core/lv_indev.c ****     if(data->enc_diff != 0) {
 768:lvgl/src/lv_core/lv_indev.c ****         /*In edit mode send LEFT/RIGHT keys*/
 769:lvgl/src/lv_core/lv_indev.c ****         if(lv_group_get_editing(g)) {
 770:lvgl/src/lv_core/lv_indev.c ****             int32_t s;
 771:lvgl/src/lv_core/lv_indev.c ****             if(data->enc_diff < 0) {
ARM GAS  D:\Temp\cc3iPNN1.s 			page 15


 772:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < -data->enc_diff; s++) lv_group_send_data(g, LV_KEY_LEFT);
 773:lvgl/src/lv_core/lv_indev.c ****             }
 774:lvgl/src/lv_core/lv_indev.c ****             else if(data->enc_diff > 0) {
 775:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < data->enc_diff; s++) lv_group_send_data(g, LV_KEY_RIGHT);
 776:lvgl/src/lv_core/lv_indev.c ****             }
 777:lvgl/src/lv_core/lv_indev.c ****         }
 778:lvgl/src/lv_core/lv_indev.c ****         /*In navigate mode focus on the next/prev objects*/
 779:lvgl/src/lv_core/lv_indev.c ****         else {
 780:lvgl/src/lv_core/lv_indev.c ****             int32_t s;
 781:lvgl/src/lv_core/lv_indev.c ****             if(data->enc_diff < 0) {
 782:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < -data->enc_diff; s++) lv_group_focus_prev(g);
 783:lvgl/src/lv_core/lv_indev.c ****             }
 784:lvgl/src/lv_core/lv_indev.c ****             else if(data->enc_diff > 0) {
 785:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < data->enc_diff; s++) lv_group_focus_next(g);
 786:lvgl/src/lv_core/lv_indev.c ****             }
 787:lvgl/src/lv_core/lv_indev.c ****         }
 788:lvgl/src/lv_core/lv_indev.c ****     }
 789:lvgl/src/lv_core/lv_indev.c **** 
 790:lvgl/src/lv_core/lv_indev.c **** #else
 791:lvgl/src/lv_core/lv_indev.c ****     (void)data; /*Unused*/
 792:lvgl/src/lv_core/lv_indev.c ****     (void)i;    /*Unused*/
 793:lvgl/src/lv_core/lv_indev.c **** #endif
 794:lvgl/src/lv_core/lv_indev.c **** }
 795:lvgl/src/lv_core/lv_indev.c **** 
 796:lvgl/src/lv_core/lv_indev.c **** /**
 797:lvgl/src/lv_core/lv_indev.c ****  * Process new points from a input device. indev->state.pressed has to be set
 798:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device state
 799:lvgl/src/lv_core/lv_indev.c ****  * @param x x coordinate of the next point
 800:lvgl/src/lv_core/lv_indev.c ****  * @param y y coordinate of the next point
 801:lvgl/src/lv_core/lv_indev.c ****  */
 802:lvgl/src/lv_core/lv_indev.c **** static void indev_button_proc(lv_indev_t * i, lv_indev_data_t * data)
 803:lvgl/src/lv_core/lv_indev.c **** {
 804:lvgl/src/lv_core/lv_indev.c ****     /* Die gracefully if i->btn_points is NULL */
 805:lvgl/src/lv_core/lv_indev.c ****     if(i->btn_points == NULL) {
 806:lvgl/src/lv_core/lv_indev.c ****         LV_LOG_WARN("indev_button_proc: btn_points was NULL");
 807:lvgl/src/lv_core/lv_indev.c ****         return;
 808:lvgl/src/lv_core/lv_indev.c ****     }
 809:lvgl/src/lv_core/lv_indev.c **** 
 810:lvgl/src/lv_core/lv_indev.c ****     lv_coord_t x = i->btn_points[data->btn_id].x;
 811:lvgl/src/lv_core/lv_indev.c ****     lv_coord_t y = i->btn_points[data->btn_id].y;
 812:lvgl/src/lv_core/lv_indev.c **** 
 813:lvgl/src/lv_core/lv_indev.c ****     /*If a new point comes always make a release*/
 814:lvgl/src/lv_core/lv_indev.c ****     if(data->state == LV_INDEV_STATE_PR) {
 815:lvgl/src/lv_core/lv_indev.c ****         if(i->proc.types.pointer.last_point.x != x ||
 816:lvgl/src/lv_core/lv_indev.c ****            i->proc.types.pointer.last_point.y != y) {
 817:lvgl/src/lv_core/lv_indev.c ****             indev_proc_release(&i->proc);
 818:lvgl/src/lv_core/lv_indev.c ****         }
 819:lvgl/src/lv_core/lv_indev.c ****     }
 820:lvgl/src/lv_core/lv_indev.c **** 
 821:lvgl/src/lv_core/lv_indev.c ****     if(indev_reset_check(&i->proc)) return;
 822:lvgl/src/lv_core/lv_indev.c **** 
 823:lvgl/src/lv_core/lv_indev.c ****     /*Save the new points*/
 824:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.act_point.x = x;
 825:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.act_point.y = y;
 826:lvgl/src/lv_core/lv_indev.c **** 
 827:lvgl/src/lv_core/lv_indev.c ****     if(data->state == LV_INDEV_STATE_PR) indev_proc_press(&i->proc);
 828:lvgl/src/lv_core/lv_indev.c ****     else indev_proc_release(&i->proc);
ARM GAS  D:\Temp\cc3iPNN1.s 			page 16


 829:lvgl/src/lv_core/lv_indev.c **** 
 830:lvgl/src/lv_core/lv_indev.c ****     if(indev_reset_check(&i->proc)) return;
 831:lvgl/src/lv_core/lv_indev.c **** 
 832:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.last_point.x = i->proc.types.pointer.act_point.x;
 833:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.last_point.y = i->proc.types.pointer.act_point.y;
 834:lvgl/src/lv_core/lv_indev.c **** }
 835:lvgl/src/lv_core/lv_indev.c **** 
 836:lvgl/src/lv_core/lv_indev.c **** /**
 837:lvgl/src/lv_core/lv_indev.c ****  * Process the pressed state of LV_INDEV_TYPE_POINTER input devices
 838:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device 'proc'
 839:lvgl/src/lv_core/lv_indev.c ****  * @return LV_RES_OK: no indev reset required; LV_RES_INV: indev reset is required
 840:lvgl/src/lv_core/lv_indev.c ****  */
 841:lvgl/src/lv_core/lv_indev.c **** static void indev_proc_press(lv_indev_proc_t * proc)
 842:lvgl/src/lv_core/lv_indev.c **** {
 843:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = proc->types.pointer.act_obj;
 844:lvgl/src/lv_core/lv_indev.c **** 
 845:lvgl/src/lv_core/lv_indev.c ****     if(proc->wait_until_release != 0) return;
 846:lvgl/src/lv_core/lv_indev.c **** 
 847:lvgl/src/lv_core/lv_indev.c ****     lv_disp_t * disp = indev_act->driver.disp;
 848:lvgl/src/lv_core/lv_indev.c ****     bool new_obj_searched = false;
 849:lvgl/src/lv_core/lv_indev.c **** 
 850:lvgl/src/lv_core/lv_indev.c ****     /*If there is no last object then search*/
 851:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) {
 852:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_sys(disp), &proc->types.pointer.act_p
 853:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act == NULL) indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_top(disp),
 854:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 855:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act == NULL) indev_obj_act = lv_indev_search_obj(lv_disp_get_scr_act(disp),
 856:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 857:lvgl/src/lv_core/lv_indev.c ****         new_obj_searched = true;
 858:lvgl/src/lv_core/lv_indev.c ****     }
 859:lvgl/src/lv_core/lv_indev.c ****     /*If there is last object but it is not dragged and not protected also search*/
 860:lvgl/src/lv_core/lv_indev.c ****     else if(proc->types.pointer.drag_in_prog == 0 &&
 861:lvgl/src/lv_core/lv_indev.c ****             lv_obj_is_protected(indev_obj_act, LV_PROTECT_PRESS_LOST) == false) {
 862:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_sys(disp), &proc->types.pointer.act_p
 863:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act == NULL) indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_top(disp),
 864:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 865:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act == NULL) indev_obj_act = lv_indev_search_obj(lv_disp_get_scr_act(disp),
 866:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 867:lvgl/src/lv_core/lv_indev.c ****         new_obj_searched = true;
 868:lvgl/src/lv_core/lv_indev.c ****     }
 869:lvgl/src/lv_core/lv_indev.c ****     /*If a draggable or a protected object was the last then keep it*/
 870:lvgl/src/lv_core/lv_indev.c ****     else {
 871:lvgl/src/lv_core/lv_indev.c ****     }
 872:lvgl/src/lv_core/lv_indev.c **** 
 873:lvgl/src/lv_core/lv_indev.c ****     /*The last object might have drag throw. Stop it manually*/
 874:lvgl/src/lv_core/lv_indev.c ****     if(new_obj_searched && proc->types.pointer.last_obj) {
 875:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x = 0;
 876:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y = 0;
 877:lvgl/src/lv_core/lv_indev.c ****         indev_drag_throw(proc);
 878:lvgl/src/lv_core/lv_indev.c ****     }
 879:lvgl/src/lv_core/lv_indev.c **** 
 880:lvgl/src/lv_core/lv_indev.c ****     /*If a new object was found reset some variables and send a pressed signal*/
 881:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act != proc->types.pointer.act_obj) {
 882:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_point.x = proc->types.pointer.act_point.x;
 883:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_point.y = proc->types.pointer.act_point.y;
 884:lvgl/src/lv_core/lv_indev.c **** 
 885:lvgl/src/lv_core/lv_indev.c ****         /*If a new object found the previous was lost, so send a signal*/
ARM GAS  D:\Temp\cc3iPNN1.s 			page 17


 886:lvgl/src/lv_core/lv_indev.c ****         if(proc->types.pointer.act_obj != NULL) {
 887:lvgl/src/lv_core/lv_indev.c ****             /*Save the obj because in special cases `act_obj` can change in the signal function*/
 888:lvgl/src/lv_core/lv_indev.c ****             lv_obj_t * last_obj = proc->types.pointer.act_obj;
 889:lvgl/src/lv_core/lv_indev.c **** 
 890:lvgl/src/lv_core/lv_indev.c ****             last_obj->signal_cb(last_obj, LV_SIGNAL_PRESS_LOST, indev_act);
 891:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 892:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(last_obj, LV_EVENT_PRESS_LOST, NULL);
 893:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 894:lvgl/src/lv_core/lv_indev.c **** 
 895:lvgl/src/lv_core/lv_indev.c ****         }
 896:lvgl/src/lv_core/lv_indev.c **** 
 897:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.act_obj  = indev_obj_act; /*Save the pressed object*/
 898:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_obj = indev_obj_act;
 899:lvgl/src/lv_core/lv_indev.c **** 
 900:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act != NULL) {
 901:lvgl/src/lv_core/lv_indev.c ****             /* Save the time when the obj pressed to count long press time.*/
 902:lvgl/src/lv_core/lv_indev.c ****             proc->pr_timestamp                 = lv_tick_get();
 903:lvgl/src/lv_core/lv_indev.c ****             proc->long_pr_sent                 = 0;
 904:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_limit_out = 0;
 905:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_in_prog   = 0;
 906:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_sum.x     = 0;
 907:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_sum.y     = 0;
 908:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_dir = LV_DRAG_DIR_BOTH;
 909:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.gesture_sent   = 0;
 910:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.gesture_sum.x  = 0;
 911:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.gesture_sum.y  = 0;
 912:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.x         = 0;
 913:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.y         = 0;
 914:lvgl/src/lv_core/lv_indev.c **** 
 915:lvgl/src/lv_core/lv_indev.c ****             /*Search for 'top' attribute*/
 916:lvgl/src/lv_core/lv_indev.c ****             lv_obj_t * i        = indev_obj_act;
 917:lvgl/src/lv_core/lv_indev.c ****             lv_obj_t * last_top = NULL;
 918:lvgl/src/lv_core/lv_indev.c ****             while(i != NULL) {
 919:lvgl/src/lv_core/lv_indev.c ****                 if(i->top) last_top = i;
 920:lvgl/src/lv_core/lv_indev.c ****                 i = lv_obj_get_parent(i);
 921:lvgl/src/lv_core/lv_indev.c ****             }
 922:lvgl/src/lv_core/lv_indev.c **** 
 923:lvgl/src/lv_core/lv_indev.c ****             if(last_top != NULL) {
 924:lvgl/src/lv_core/lv_indev.c ****                 /*Move the last_top object to the foreground*/
 925:lvgl/src/lv_core/lv_indev.c ****                 lv_obj_move_foreground(last_top);
 926:lvgl/src/lv_core/lv_indev.c ****             }
 927:lvgl/src/lv_core/lv_indev.c **** 
 928:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the press*/
 929:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSED, indev_act);
 930:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 931:lvgl/src/lv_core/lv_indev.c **** 
 932:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_PRESSED, NULL);
 933:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 934:lvgl/src/lv_core/lv_indev.c **** 
 935:lvgl/src/lv_core/lv_indev.c ****             if(indev_act->proc.wait_until_release) return;
 936:lvgl/src/lv_core/lv_indev.c **** 
 937:lvgl/src/lv_core/lv_indev.c ****             /*Handle focus*/
 938:lvgl/src/lv_core/lv_indev.c ****             indev_click_focus(&indev_act->proc);
 939:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 940:lvgl/src/lv_core/lv_indev.c **** 
 941:lvgl/src/lv_core/lv_indev.c ****         }
 942:lvgl/src/lv_core/lv_indev.c ****     }
ARM GAS  D:\Temp\cc3iPNN1.s 			page 18


 943:lvgl/src/lv_core/lv_indev.c **** 
 944:lvgl/src/lv_core/lv_indev.c ****     /*Calculate the types.pointer.vector*/
 945:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.vect.x = proc->types.pointer.act_point.x - proc->types.pointer.last_point.x
 946:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.vect.y = proc->types.pointer.act_point.y - proc->types.pointer.last_point.y
 947:lvgl/src/lv_core/lv_indev.c **** 
 948:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.x = (proc->types.pointer.drag_throw_vect.x * 5) >> 3;
 949:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y = (proc->types.pointer.drag_throw_vect.y * 5) >> 3;
 950:lvgl/src/lv_core/lv_indev.c **** 
 951:lvgl/src/lv_core/lv_indev.c ****     if(proc->types.pointer.drag_throw_vect.x < 0)
 952:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x++;
 953:lvgl/src/lv_core/lv_indev.c ****     else if(proc->types.pointer.drag_throw_vect.x > 0)
 954:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x--;
 955:lvgl/src/lv_core/lv_indev.c **** 
 956:lvgl/src/lv_core/lv_indev.c ****     if(proc->types.pointer.drag_throw_vect.y < 0)
 957:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y++;
 958:lvgl/src/lv_core/lv_indev.c ****     else if(proc->types.pointer.drag_throw_vect.y > 0)
 959:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y--;
 960:lvgl/src/lv_core/lv_indev.c **** 
 961:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.x += (proc->types.pointer.vect.x * 4) >> 3;
 962:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y += (proc->types.pointer.vect.y * 4) >> 3;
 963:lvgl/src/lv_core/lv_indev.c **** 
 964:lvgl/src/lv_core/lv_indev.c ****     /*If there is active object and it can be dragged run the drag*/
 965:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act != NULL) {
 966:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSING, indev_act);
 967:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 968:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(indev_obj_act, LV_EVENT_PRESSING, NULL);
 969:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 970:lvgl/src/lv_core/lv_indev.c ****         if(indev_act->proc.wait_until_release) return;
 971:lvgl/src/lv_core/lv_indev.c **** 
 972:lvgl/src/lv_core/lv_indev.c ****         indev_drag(proc);
 973:lvgl/src/lv_core/lv_indev.c ****         indev_gesture(proc);
 974:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 975:lvgl/src/lv_core/lv_indev.c **** 
 976:lvgl/src/lv_core/lv_indev.c ****         /*If there is no drag then check for long press time*/
 977:lvgl/src/lv_core/lv_indev.c ****         if(proc->types.pointer.drag_in_prog == 0 && proc->long_pr_sent == 0) {
 978:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press if enough time elapsed*/
 979:lvgl/src/lv_core/lv_indev.c ****             if(lv_tick_elaps(proc->pr_timestamp) > indev_act->driver.long_press_time) {
 980:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS, indev_act);
 981:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 982:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 983:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 984:lvgl/src/lv_core/lv_indev.c **** 
 985:lvgl/src/lv_core/lv_indev.c ****                 /*Mark the signal sending to do not send it again*/
 986:lvgl/src/lv_core/lv_indev.c ****                 proc->long_pr_sent = 1;
 987:lvgl/src/lv_core/lv_indev.c **** 
 988:lvgl/src/lv_core/lv_indev.c ****                 /*Save the long press time stamp for the long press repeat handler*/
 989:lvgl/src/lv_core/lv_indev.c ****                 proc->longpr_rep_timestamp = lv_tick_get();
 990:lvgl/src/lv_core/lv_indev.c ****             }
 991:lvgl/src/lv_core/lv_indev.c ****         }
 992:lvgl/src/lv_core/lv_indev.c ****         /*Send long press repeated signal*/
 993:lvgl/src/lv_core/lv_indev.c ****         if(proc->types.pointer.drag_in_prog == 0 && proc->long_pr_sent == 1) {
 994:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press repeat if enough time elapsed*/
 995:lvgl/src/lv_core/lv_indev.c ****             if(lv_tick_elaps(proc->longpr_rep_timestamp) > indev_act->driver.long_press_rep_time) {
 996:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, indev_act);
 997:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 998:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 999:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 19


1000:lvgl/src/lv_core/lv_indev.c ****                 proc->longpr_rep_timestamp = lv_tick_get();
1001:lvgl/src/lv_core/lv_indev.c ****             }
1002:lvgl/src/lv_core/lv_indev.c ****         }
1003:lvgl/src/lv_core/lv_indev.c ****     }
1004:lvgl/src/lv_core/lv_indev.c **** }
1005:lvgl/src/lv_core/lv_indev.c **** 
1006:lvgl/src/lv_core/lv_indev.c **** /**
1007:lvgl/src/lv_core/lv_indev.c ****  * Process the released state of LV_INDEV_TYPE_POINTER input devices
1008:lvgl/src/lv_core/lv_indev.c ****  * @param proc pointer to an input device 'proc'
1009:lvgl/src/lv_core/lv_indev.c ****  */
1010:lvgl/src/lv_core/lv_indev.c **** static void indev_proc_release(lv_indev_proc_t * proc)
1011:lvgl/src/lv_core/lv_indev.c **** {
1012:lvgl/src/lv_core/lv_indev.c ****     if(proc->wait_until_release != 0) {
1013:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.act_obj  = NULL;
1014:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_obj = NULL;
1015:lvgl/src/lv_core/lv_indev.c ****         proc->pr_timestamp           = 0;
1016:lvgl/src/lv_core/lv_indev.c ****         proc->longpr_rep_timestamp   = 0;
1017:lvgl/src/lv_core/lv_indev.c ****         proc->wait_until_release     = 0;
1018:lvgl/src/lv_core/lv_indev.c ****     }
1019:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = proc->types.pointer.act_obj;
1020:lvgl/src/lv_core/lv_indev.c **** 
1021:lvgl/src/lv_core/lv_indev.c ****     /*Forget the act obj and send a released signal */
1022:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act) {
1023:lvgl/src/lv_core/lv_indev.c **** 
1024:lvgl/src/lv_core/lv_indev.c ****         /* If the object was protected against press lost then it possible that
1025:lvgl/src/lv_core/lv_indev.c ****          * the object is already not pressed but still it is the `act_obj`.
1026:lvgl/src/lv_core/lv_indev.c ****          * In this case send the `LV_SIGNAL_RELEASED/CLICKED` instead of `LV_SIGNAL_PRESS_LOST` if
1027:lvgl/src/lv_core/lv_indev.c ****          * the indev is ON the `types.pointer.act_obj` */
1028:lvgl/src/lv_core/lv_indev.c ****         if(lv_obj_is_protected(indev_obj_act, LV_PROTECT_PRESS_LOST)) {
1029:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, indev_act);
1030:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
1031:lvgl/src/lv_core/lv_indev.c **** 
1032:lvgl/src/lv_core/lv_indev.c ****             if(proc->types.pointer.drag_in_prog == 0) {
1033:lvgl/src/lv_core/lv_indev.c ****                 if(proc->long_pr_sent == 0) {
1034:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
1035:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(proc)) return;
1036:lvgl/src/lv_core/lv_indev.c ****                 }
1037:lvgl/src/lv_core/lv_indev.c **** 
1038:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_CLICKED, NULL);
1039:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1040:lvgl/src/lv_core/lv_indev.c ****             }
1041:lvgl/src/lv_core/lv_indev.c **** 
1042:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_RELEASED, NULL);
1043:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
1044:lvgl/src/lv_core/lv_indev.c ****         }
1045:lvgl/src/lv_core/lv_indev.c ****         /* The simple case: `act_obj` was not protected against press lost.
1046:lvgl/src/lv_core/lv_indev.c ****          * If it is already not pressed then `indev_proc_press` would set `indev_obj_act = NULL`*/
1047:lvgl/src/lv_core/lv_indev.c ****         else {
1048:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, indev_act);
1049:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
1050:lvgl/src/lv_core/lv_indev.c **** 
1051:lvgl/src/lv_core/lv_indev.c ****             if(proc->long_pr_sent == 0 && proc->types.pointer.drag_in_prog == 0) {
1052:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
1053:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1054:lvgl/src/lv_core/lv_indev.c ****             }
1055:lvgl/src/lv_core/lv_indev.c **** 
1056:lvgl/src/lv_core/lv_indev.c ****             if(proc->types.pointer.drag_in_prog == 0) {
ARM GAS  D:\Temp\cc3iPNN1.s 			page 20


1057:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_CLICKED, NULL);
1058:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1059:lvgl/src/lv_core/lv_indev.c ****             }
1060:lvgl/src/lv_core/lv_indev.c **** 
1061:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_RELEASED, NULL);
1062:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
1063:lvgl/src/lv_core/lv_indev.c ****         }
1064:lvgl/src/lv_core/lv_indev.c **** 
1065:lvgl/src/lv_core/lv_indev.c ****         /*Send LV_EVENT_DRAG_THROW_BEGIN if required */
1066:lvgl/src/lv_core/lv_indev.c ****         /*If drag parent is active check recursively the drag_parent attribute*/
1067:lvgl/src/lv_core/lv_indev.c ****         lv_obj_t * drag_obj = get_dragged_obj(indev_obj_act);
1068:lvgl/src/lv_core/lv_indev.c ****         if(drag_obj) {
1069:lvgl/src/lv_core/lv_indev.c ****             if(lv_obj_get_drag_throw(drag_obj) && proc->types.pointer.drag_in_prog) {
1070:lvgl/src/lv_core/lv_indev.c ****                 if(drag_obj->signal_cb) drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_THROW_BEGIN, N
1071:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1072:lvgl/src/lv_core/lv_indev.c **** 
1073:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(drag_obj, LV_EVENT_DRAG_THROW_BEGIN, NULL);
1074:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1075:lvgl/src/lv_core/lv_indev.c ****             }
1076:lvgl/src/lv_core/lv_indev.c ****         }
1077:lvgl/src/lv_core/lv_indev.c **** 
1078:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.act_obj = NULL;
1079:lvgl/src/lv_core/lv_indev.c ****         proc->pr_timestamp          = 0;
1080:lvgl/src/lv_core/lv_indev.c ****         proc->longpr_rep_timestamp  = 0;
1081:lvgl/src/lv_core/lv_indev.c ****     }
1082:lvgl/src/lv_core/lv_indev.c **** 
1083:lvgl/src/lv_core/lv_indev.c ****     /*The reset can be set in the signal function.
1084:lvgl/src/lv_core/lv_indev.c ****      * In case of reset query ignore the remaining parts.*/
1085:lvgl/src/lv_core/lv_indev.c ****     if(proc->types.pointer.last_obj != NULL && proc->reset_query == 0) {
1086:lvgl/src/lv_core/lv_indev.c ****         indev_drag_throw(proc);
1087:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
1088:lvgl/src/lv_core/lv_indev.c ****     }
1089:lvgl/src/lv_core/lv_indev.c **** }
1090:lvgl/src/lv_core/lv_indev.c **** 
1091:lvgl/src/lv_core/lv_indev.c **** /**
1092:lvgl/src/lv_core/lv_indev.c ****  * Process a new point from LV_INDEV_TYPE_BUTTON input device
1093:lvgl/src/lv_core/lv_indev.c ****  * @param i pointer to an input device
1094:lvgl/src/lv_core/lv_indev.c ****  * @param data pointer to the data read from the input device
1095:lvgl/src/lv_core/lv_indev.c ****  * Reset input device if a reset query has been sent to it
1096:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device
1097:lvgl/src/lv_core/lv_indev.c ****  */
1098:lvgl/src/lv_core/lv_indev.c **** static void indev_proc_reset_query_handler(lv_indev_t * indev)
1099:lvgl/src/lv_core/lv_indev.c **** {
  29              		.loc 1 1099 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1100:lvgl/src/lv_core/lv_indev.c ****     if(indev->proc.reset_query) {
  34              		.loc 1 1100 5 view .LVU1
  35              		.loc 1 1100 8 is_stmt 0 view .LVU2
  36 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
  37              		.loc 1 1100 7 view .LVU3
  38 0004 13F0020F 		tst	r3, #2
  39 0008 23D0     		beq	.L4
1099:lvgl/src/lv_core/lv_indev.c ****     if(indev->proc.reset_query) {
  40              		.loc 1 1099 1 view .LVU4
ARM GAS  D:\Temp\cc3iPNN1.s 			page 21


  41 000a 10B4     		push	{r4}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 4
  44              		.cfi_offset 4, -4
1101:lvgl/src/lv_core/lv_indev.c ****         indev->proc.types.pointer.act_obj           = NULL;
  45              		.loc 1 1101 9 is_stmt 1 view .LVU5
  46              		.loc 1 1101 53 is_stmt 0 view .LVU6
  47 000c 0023     		movs	r3, #0
  48 000e 4363     		str	r3, [r0, #52]
1102:lvgl/src/lv_core/lv_indev.c ****         indev->proc.types.pointer.last_obj          = NULL;
  49              		.loc 1 1102 9 is_stmt 1 view .LVU7
  50              		.loc 1 1102 53 is_stmt 0 view .LVU8
  51 0010 8363     		str	r3, [r0, #56]
1103:lvgl/src/lv_core/lv_indev.c ****         indev->proc.types.pointer.drag_limit_out    = 0;
  52              		.loc 1 1103 9 is_stmt 1 view .LVU9
  53              		.loc 1 1103 53 is_stmt 0 view .LVU10
  54 0012 90F84610 		ldrb	r1, [r0, #70]	@ zero_extendqisi2
1104:lvgl/src/lv_core/lv_indev.c ****         indev->proc.types.pointer.drag_in_prog      = 0;
  55              		.loc 1 1104 9 is_stmt 1 view .LVU11
1105:lvgl/src/lv_core/lv_indev.c ****         indev->proc.long_pr_sent                    = 0;
  56              		.loc 1 1105 9 view .LVU12
  57              		.loc 1 1105 53 is_stmt 0 view .LVU13
  58 0016 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
1106:lvgl/src/lv_core/lv_indev.c ****         indev->proc.pr_timestamp                    = 0;
  59              		.loc 1 1106 9 is_stmt 1 view .LVU14
  60              		.loc 1 1106 53 is_stmt 0 view .LVU15
  61 001a 8364     		str	r3, [r0, #72]
1107:lvgl/src/lv_core/lv_indev.c ****         indev->proc.longpr_rep_timestamp            = 0;
  62              		.loc 1 1107 9 is_stmt 1 view .LVU16
  63              		.loc 1 1107 53 is_stmt 0 view .LVU17
  64 001c C364     		str	r3, [r0, #76]
1108:lvgl/src/lv_core/lv_indev.c ****         indev->proc.types.pointer.drag_sum.x        = 0;
  65              		.loc 1 1108 9 is_stmt 1 view .LVU18
  66              		.loc 1 1108 53 is_stmt 0 view .LVU19
  67 001e 8385     		strh	r3, [r0, #44]	@ movhi
1109:lvgl/src/lv_core/lv_indev.c ****         indev->proc.types.pointer.drag_sum.y        = 0;
  68              		.loc 1 1109 9 is_stmt 1 view .LVU20
  69              		.loc 1 1109 53 is_stmt 0 view .LVU21
  70 0020 C385     		strh	r3, [r0, #46]	@ movhi
1110:lvgl/src/lv_core/lv_indev.c ****         indev->proc.types.pointer.drag_dir = LV_DRAG_DIR_BOTH;
  71              		.loc 1 1110 9 is_stmt 1 view .LVU22
  72              		.loc 1 1110 44 is_stmt 0 view .LVU23
  73 0022 01F0FC01 		and	r1, r1, #252
  74 0026 0324     		movs	r4, #3
  75 0028 64F38401 		bfi	r1, r4, #2, #3
  76 002c 80F84610 		strb	r1, [r0, #70]
1111:lvgl/src/lv_core/lv_indev.c ****         indev->proc.types.pointer.drag_throw_vect.x = 0;
  77              		.loc 1 1111 9 is_stmt 1 view .LVU24
  78              		.loc 1 1111 53 is_stmt 0 view .LVU25
  79 0030 0386     		strh	r3, [r0, #48]	@ movhi
1112:lvgl/src/lv_core/lv_indev.c ****         indev->proc.types.pointer.drag_throw_vect.y = 0;
  80              		.loc 1 1112 9 is_stmt 1 view .LVU26
  81              		.loc 1 1112 53 is_stmt 0 view .LVU27
  82 0032 4386     		strh	r3, [r0, #50]	@ movhi
1113:lvgl/src/lv_core/lv_indev.c ****         indev->proc.types.pointer.gesture_sum.x     = 0;
  83              		.loc 1 1113 9 is_stmt 1 view .LVU28
  84              		.loc 1 1113 53 is_stmt 0 view .LVU29
ARM GAS  D:\Temp\cc3iPNN1.s 			page 22


  85 0034 A0F84230 		strh	r3, [r0, #66]	@ movhi
1114:lvgl/src/lv_core/lv_indev.c ****         indev->proc.types.pointer.gesture_sum.y     = 0;
  86              		.loc 1 1114 9 is_stmt 1 view .LVU30
  87              		.loc 1 1114 53 is_stmt 0 view .LVU31
  88 0038 A0F84430 		strh	r3, [r0, #68]	@ movhi
1115:lvgl/src/lv_core/lv_indev.c ****         indev->proc.reset_query                     = 0;
  89              		.loc 1 1115 9 is_stmt 1 view .LVU32
  90              		.loc 1 1115 53 is_stmt 0 view .LVU33
  91 003c 02F0FE02 		and	r2, r2, #254
  92 0040 63F34102 		bfi	r2, r3, #1, #1
  93 0044 80F85020 		strb	r2, [r0, #80]
1116:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act                               = NULL;
  94              		.loc 1 1116 9 is_stmt 1 view .LVU34
  95              		.loc 1 1116 53 is_stmt 0 view .LVU35
  96 0048 024A     		ldr	r2, .L7
  97 004a 1360     		str	r3, [r2]
1117:lvgl/src/lv_core/lv_indev.c ****     }
1118:lvgl/src/lv_core/lv_indev.c **** }
  98              		.loc 1 1118 1 view .LVU36
  99 004c 5DF8044B 		ldr	r4, [sp], #4
 100              	.LCFI1:
 101              		.cfi_restore 4
 102              		.cfi_def_cfa_offset 0
 103 0050 7047     		bx	lr
 104              	.L4:
 105 0052 7047     		bx	lr
 106              	.L8:
 107              		.align	2
 108              	.L7:
 109 0054 00000000 		.word	.LANCHOR0
 110              		.cfi_endproc
 111              	.LFE488:
 113              		.section	.text.indev_reset_check,"ax",%progbits
 114              		.align	1
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu fpv4-sp-d16
 120              	indev_reset_check:
 121              	.LVL1:
 122              	.LFB495:
1119:lvgl/src/lv_core/lv_indev.c **** /**
1120:lvgl/src/lv_core/lv_indev.c ****  * Search the most top, clickable object by a point
1121:lvgl/src/lv_core/lv_indev.c ****  * @param obj pointer to a start object, typically the screen
1122:lvgl/src/lv_core/lv_indev.c ****  * @param point pointer to a point for searching the most top child
1123:lvgl/src/lv_core/lv_indev.c ****  * @return pointer to the found object or NULL if there was no suitable object
1124:lvgl/src/lv_core/lv_indev.c ****  */
1125:lvgl/src/lv_core/lv_indev.c **** lv_obj_t * lv_indev_search_obj(lv_obj_t * obj, lv_point_t * point)
1126:lvgl/src/lv_core/lv_indev.c **** {
1127:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * found_p = NULL;
1128:lvgl/src/lv_core/lv_indev.c **** 
1129:lvgl/src/lv_core/lv_indev.c ****     /*If the point is on this object check its children too*/
1130:lvgl/src/lv_core/lv_indev.c ****     if(lv_obj_hittest(obj, point)) {
1131:lvgl/src/lv_core/lv_indev.c ****         lv_obj_t * i;
1132:lvgl/src/lv_core/lv_indev.c **** 
1133:lvgl/src/lv_core/lv_indev.c ****         _LV_LL_READ(obj->child_ll, i) {
1134:lvgl/src/lv_core/lv_indev.c ****             found_p = lv_indev_search_obj(i, point);
ARM GAS  D:\Temp\cc3iPNN1.s 			page 23


1135:lvgl/src/lv_core/lv_indev.c **** 
1136:lvgl/src/lv_core/lv_indev.c ****             /*If a child was found then break*/
1137:lvgl/src/lv_core/lv_indev.c ****             if(found_p != NULL) {
1138:lvgl/src/lv_core/lv_indev.c ****                 break;
1139:lvgl/src/lv_core/lv_indev.c ****             }
1140:lvgl/src/lv_core/lv_indev.c ****         }
1141:lvgl/src/lv_core/lv_indev.c **** 
1142:lvgl/src/lv_core/lv_indev.c ****         /*If then the children was not ok, and this obj is clickable
1143:lvgl/src/lv_core/lv_indev.c ****          * and it or its parent is not hidden then save this object*/
1144:lvgl/src/lv_core/lv_indev.c ****         if(found_p == NULL && lv_obj_get_click(obj) != false) {
1145:lvgl/src/lv_core/lv_indev.c ****             lv_obj_t * hidden_i = obj;
1146:lvgl/src/lv_core/lv_indev.c ****             while(hidden_i != NULL) {
1147:lvgl/src/lv_core/lv_indev.c ****                 if(lv_obj_get_hidden(hidden_i) == true) break;
1148:lvgl/src/lv_core/lv_indev.c ****                 hidden_i = lv_obj_get_parent(hidden_i);
1149:lvgl/src/lv_core/lv_indev.c ****             }
1150:lvgl/src/lv_core/lv_indev.c ****             /*No parent found with hidden == true*/
1151:lvgl/src/lv_core/lv_indev.c ****             if(hidden_i == NULL && (lv_obj_get_state(obj, LV_OBJ_PART_MAIN) & LV_STATE_DISABLED) ==
1152:lvgl/src/lv_core/lv_indev.c ****         }
1153:lvgl/src/lv_core/lv_indev.c ****     }
1154:lvgl/src/lv_core/lv_indev.c **** 
1155:lvgl/src/lv_core/lv_indev.c ****     return found_p;
1156:lvgl/src/lv_core/lv_indev.c **** }
1157:lvgl/src/lv_core/lv_indev.c **** 
1158:lvgl/src/lv_core/lv_indev.c **** /**
1159:lvgl/src/lv_core/lv_indev.c ****  * Handle focus/defocus on click for POINTER input devices
1160:lvgl/src/lv_core/lv_indev.c ****  * @param proc pointer to the state of the indev
1161:lvgl/src/lv_core/lv_indev.c ****  */
1162:lvgl/src/lv_core/lv_indev.c **** static void indev_click_focus(lv_indev_proc_t * proc)
1163:lvgl/src/lv_core/lv_indev.c **** {
1164:lvgl/src/lv_core/lv_indev.c ****     /*Handle click focus*/
1165:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * obj_to_focus = lv_obj_get_focused_obj(indev_obj_act);
1166:lvgl/src/lv_core/lv_indev.c ****     if(lv_obj_is_protected(indev_obj_act, LV_PROTECT_CLICK_FOCUS) == false &&
1167:lvgl/src/lv_core/lv_indev.c ****        proc->types.pointer.last_pressed != obj_to_focus) {
1168:lvgl/src/lv_core/lv_indev.c **** #if LV_USE_GROUP
1169:lvgl/src/lv_core/lv_indev.c ****         lv_group_t * g_act = lv_obj_get_group(obj_to_focus);
1170:lvgl/src/lv_core/lv_indev.c ****         lv_group_t * g_prev = proc->types.pointer.last_pressed ? lv_obj_get_group(proc->types.point
1171:lvgl/src/lv_core/lv_indev.c **** 
1172:lvgl/src/lv_core/lv_indev.c ****         /*If both the last and act. obj. are in the same group (or no group but it's also the same)
1173:lvgl/src/lv_core/lv_indev.c ****         if(g_act == g_prev) {
1174:lvgl/src/lv_core/lv_indev.c ****             /*The objects are in a group*/
1175:lvgl/src/lv_core/lv_indev.c ****             if(g_act) {
1176:lvgl/src/lv_core/lv_indev.c ****                 lv_group_focus_obj(obj_to_focus);
1177:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1178:lvgl/src/lv_core/lv_indev.c ****             }
1179:lvgl/src/lv_core/lv_indev.c ****             /*The object are not in group*/
1180:lvgl/src/lv_core/lv_indev.c ****             else {
1181:lvgl/src/lv_core/lv_indev.c ****                 if(proc->types.pointer.last_pressed) {
1182:lvgl/src/lv_core/lv_indev.c ****                     lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
1183:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(proc)) return;
1184:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
1185:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(proc)) return;
1186:lvgl/src/lv_core/lv_indev.c ****                 }
1187:lvgl/src/lv_core/lv_indev.c **** 
1188:lvgl/src/lv_core/lv_indev.c ****                 lv_signal_send(obj_to_focus, LV_SIGNAL_FOCUS, NULL);
1189:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1190:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(obj_to_focus, LV_EVENT_FOCUSED, NULL);
1191:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 24


1192:lvgl/src/lv_core/lv_indev.c ****             }
1193:lvgl/src/lv_core/lv_indev.c ****         }
1194:lvgl/src/lv_core/lv_indev.c ****         /*The object are not in the same group (in different group or one in not a group)*/
1195:lvgl/src/lv_core/lv_indev.c ****         else {
1196:lvgl/src/lv_core/lv_indev.c ****             /*If the prev. obj. is not in a group then defocus it.*/
1197:lvgl/src/lv_core/lv_indev.c ****             if(g_prev == NULL && proc->types.pointer.last_pressed) {
1198:lvgl/src/lv_core/lv_indev.c ****                 lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
1199:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1200:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
1201:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1202:lvgl/src/lv_core/lv_indev.c ****             }
1203:lvgl/src/lv_core/lv_indev.c ****             /*Focus on a non-group object*/
1204:lvgl/src/lv_core/lv_indev.c ****             else {
1205:lvgl/src/lv_core/lv_indev.c ****                 if(proc->types.pointer.last_pressed) {
1206:lvgl/src/lv_core/lv_indev.c ****                     /*If the prev. object also wasn't in a group defocus it*/
1207:lvgl/src/lv_core/lv_indev.c ****                     if(g_prev == NULL) {
1208:lvgl/src/lv_core/lv_indev.c ****                         lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
1209:lvgl/src/lv_core/lv_indev.c ****                         if(indev_reset_check(proc)) return;
1210:lvgl/src/lv_core/lv_indev.c ****                         lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
1211:lvgl/src/lv_core/lv_indev.c ****                         if(indev_reset_check(proc)) return;
1212:lvgl/src/lv_core/lv_indev.c ****                     }
1213:lvgl/src/lv_core/lv_indev.c ****                     /*If the prev. object also was in a group at least "LEAVE" it instead of defocu
1214:lvgl/src/lv_core/lv_indev.c ****                     else {
1215:lvgl/src/lv_core/lv_indev.c ****                         lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_LEAVE, NULL);
1216:lvgl/src/lv_core/lv_indev.c ****                         if(indev_reset_check(proc)) return;
1217:lvgl/src/lv_core/lv_indev.c ****                         lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_LEAVE, NULL);
1218:lvgl/src/lv_core/lv_indev.c ****                         if(indev_reset_check(proc)) return;
1219:lvgl/src/lv_core/lv_indev.c ****                     }
1220:lvgl/src/lv_core/lv_indev.c ****                 }
1221:lvgl/src/lv_core/lv_indev.c ****             }
1222:lvgl/src/lv_core/lv_indev.c **** 
1223:lvgl/src/lv_core/lv_indev.c ****             /*Focus to the act. in its group*/
1224:lvgl/src/lv_core/lv_indev.c ****             if(g_act) {
1225:lvgl/src/lv_core/lv_indev.c ****                 lv_group_focus_obj(obj_to_focus);
1226:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1227:lvgl/src/lv_core/lv_indev.c ****             }
1228:lvgl/src/lv_core/lv_indev.c ****             else {
1229:lvgl/src/lv_core/lv_indev.c ****                 lv_signal_send(obj_to_focus, LV_SIGNAL_FOCUS, NULL);
1230:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1231:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(obj_to_focus, LV_EVENT_FOCUSED, NULL);
1232:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1233:lvgl/src/lv_core/lv_indev.c ****             }
1234:lvgl/src/lv_core/lv_indev.c ****         }
1235:lvgl/src/lv_core/lv_indev.c **** #else
1236:lvgl/src/lv_core/lv_indev.c ****         if(proc->types.pointer.last_pressed) {
1237:lvgl/src/lv_core/lv_indev.c ****             lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
1238:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
1239:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
1240:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
1241:lvgl/src/lv_core/lv_indev.c ****         }
1242:lvgl/src/lv_core/lv_indev.c **** 
1243:lvgl/src/lv_core/lv_indev.c ****         lv_signal_send(obj_to_focus, LV_SIGNAL_FOCUS, NULL);
1244:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
1245:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(obj_to_focus, LV_EVENT_FOCUSED, NULL);
1246:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
1247:lvgl/src/lv_core/lv_indev.c **** #endif
1248:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_pressed = obj_to_focus;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 25


1249:lvgl/src/lv_core/lv_indev.c ****     }
1250:lvgl/src/lv_core/lv_indev.c **** 
1251:lvgl/src/lv_core/lv_indev.c **** }
1252:lvgl/src/lv_core/lv_indev.c **** 
1253:lvgl/src/lv_core/lv_indev.c **** /**
1254:lvgl/src/lv_core/lv_indev.c ****  * Handle the dragging of indev_proc_p->types.pointer.act_obj
1255:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to a input device state
1256:lvgl/src/lv_core/lv_indev.c ****  */
1257:lvgl/src/lv_core/lv_indev.c **** static void indev_drag(lv_indev_proc_t * proc)
1258:lvgl/src/lv_core/lv_indev.c **** {
1259:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * drag_obj    = get_dragged_obj(proc->types.pointer.act_obj);
1260:lvgl/src/lv_core/lv_indev.c ****     bool drag_just_started = false;
1261:lvgl/src/lv_core/lv_indev.c **** 
1262:lvgl/src/lv_core/lv_indev.c ****     if(drag_obj == NULL) return;
1263:lvgl/src/lv_core/lv_indev.c **** 
1264:lvgl/src/lv_core/lv_indev.c ****     if(lv_obj_get_drag(drag_obj) == false) return;
1265:lvgl/src/lv_core/lv_indev.c **** 
1266:lvgl/src/lv_core/lv_indev.c ****     lv_drag_dir_t allowed_dirs = lv_obj_get_drag_dir(drag_obj);
1267:lvgl/src/lv_core/lv_indev.c **** 
1268:lvgl/src/lv_core/lv_indev.c ****     /*Count the movement by drag*/
1269:lvgl/src/lv_core/lv_indev.c ****     if(proc->types.pointer.drag_limit_out == 0) {
1270:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_sum.x += proc->types.pointer.vect.x;
1271:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_sum.y += proc->types.pointer.vect.y;
1272:lvgl/src/lv_core/lv_indev.c **** 
1273:lvgl/src/lv_core/lv_indev.c ****         /*Enough move?*/
1274:lvgl/src/lv_core/lv_indev.c ****         bool hor_en = false;
1275:lvgl/src/lv_core/lv_indev.c ****         bool ver_en = false;
1276:lvgl/src/lv_core/lv_indev.c ****         if(allowed_dirs == LV_DRAG_DIR_HOR || allowed_dirs == LV_DRAG_DIR_BOTH) {
1277:lvgl/src/lv_core/lv_indev.c ****             hor_en = true;
1278:lvgl/src/lv_core/lv_indev.c ****         }
1279:lvgl/src/lv_core/lv_indev.c **** 
1280:lvgl/src/lv_core/lv_indev.c ****         if(allowed_dirs == LV_DRAG_DIR_VER || allowed_dirs == LV_DRAG_DIR_BOTH) {
1281:lvgl/src/lv_core/lv_indev.c ****             ver_en = true;
1282:lvgl/src/lv_core/lv_indev.c ****         }
1283:lvgl/src/lv_core/lv_indev.c **** 
1284:lvgl/src/lv_core/lv_indev.c ****         if(allowed_dirs == LV_DRAG_DIR_ONE) {
1285:lvgl/src/lv_core/lv_indev.c ****             if(LV_MATH_ABS(proc->types.pointer.drag_sum.x) > LV_MATH_ABS(proc->types.pointer.drag_s
1286:lvgl/src/lv_core/lv_indev.c ****                 hor_en = true;
1287:lvgl/src/lv_core/lv_indev.c ****             }
1288:lvgl/src/lv_core/lv_indev.c ****             else {
1289:lvgl/src/lv_core/lv_indev.c ****                 ver_en = true;
1290:lvgl/src/lv_core/lv_indev.c ****             }
1291:lvgl/src/lv_core/lv_indev.c ****         }
1292:lvgl/src/lv_core/lv_indev.c **** 
1293:lvgl/src/lv_core/lv_indev.c ****         /*If a move is greater then LV_DRAG_LIMIT then begin the drag*/
1294:lvgl/src/lv_core/lv_indev.c ****         if((hor_en && LV_MATH_ABS(proc->types.pointer.drag_sum.x) >= indev_act->driver.drag_limit) 
1295:lvgl/src/lv_core/lv_indev.c ****            (ver_en && LV_MATH_ABS(proc->types.pointer.drag_sum.y) >= indev_act->driver.drag_limit))
1296:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_limit_out = 1;
1297:lvgl/src/lv_core/lv_indev.c ****             drag_just_started                   = true;
1298:lvgl/src/lv_core/lv_indev.c ****         }
1299:lvgl/src/lv_core/lv_indev.c ****     }
1300:lvgl/src/lv_core/lv_indev.c **** 
1301:lvgl/src/lv_core/lv_indev.c ****     /*If the drag limit is exceeded handle the dragging*/
1302:lvgl/src/lv_core/lv_indev.c ****     if(proc->types.pointer.drag_limit_out != 0) {
1303:lvgl/src/lv_core/lv_indev.c ****         /*Set new position if the vector is not zero*/
1304:lvgl/src/lv_core/lv_indev.c ****         if(proc->types.pointer.vect.x != 0 || proc->types.pointer.vect.y != 0) {
1305:lvgl/src/lv_core/lv_indev.c **** 
ARM GAS  D:\Temp\cc3iPNN1.s 			page 26


1306:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t prev_x     = drag_obj->coords.x1;
1307:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t prev_y     = drag_obj->coords.y1;
1308:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t prev_par_w = lv_obj_get_width(lv_obj_get_parent(drag_obj));
1309:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t prev_par_h = lv_obj_get_height(lv_obj_get_parent(drag_obj));
1310:lvgl/src/lv_core/lv_indev.c **** 
1311:lvgl/src/lv_core/lv_indev.c ****             /*Get the coordinates of the object and modify them*/
1312:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t act_x = lv_obj_get_x(drag_obj);
1313:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t act_y = lv_obj_get_y(drag_obj);
1314:lvgl/src/lv_core/lv_indev.c **** 
1315:lvgl/src/lv_core/lv_indev.c ****             if(allowed_dirs == LV_DRAG_DIR_BOTH) {
1316:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
1317:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_dir = LV_DRAG_DIR_BOTH;
1318:lvgl/src/lv_core/lv_indev.c ****                     act_x += proc->types.pointer.drag_sum.x;
1319:lvgl/src/lv_core/lv_indev.c ****                     act_y += proc->types.pointer.drag_sum.y;
1320:lvgl/src/lv_core/lv_indev.c ****                 }
1321:lvgl/src/lv_core/lv_indev.c ****             }
1322:lvgl/src/lv_core/lv_indev.c ****             else if(allowed_dirs == LV_DRAG_DIR_HOR) {
1323:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
1324:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_dir = LV_DRAG_DIR_HOR;
1325:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_sum.y = 0;
1326:lvgl/src/lv_core/lv_indev.c ****                     act_x += proc->types.pointer.drag_sum.x;
1327:lvgl/src/lv_core/lv_indev.c ****                 }
1328:lvgl/src/lv_core/lv_indev.c ****             }
1329:lvgl/src/lv_core/lv_indev.c ****             else if(allowed_dirs == LV_DRAG_DIR_VER) {
1330:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
1331:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_dir = LV_DRAG_DIR_VER;
1332:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_sum.x = 0;
1333:lvgl/src/lv_core/lv_indev.c ****                     act_y += proc->types.pointer.drag_sum.y;
1334:lvgl/src/lv_core/lv_indev.c ****                 }
1335:lvgl/src/lv_core/lv_indev.c ****             }
1336:lvgl/src/lv_core/lv_indev.c ****             else if(allowed_dirs == LV_DRAG_DIR_ONE) {
1337:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
1338:lvgl/src/lv_core/lv_indev.c ****                     if(LV_MATH_ABS(proc->types.pointer.drag_sum.x) > LV_MATH_ABS(proc->types.pointe
1339:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_dir = LV_DRAG_DIR_HOR;
1340:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_sum.y = 0;
1341:lvgl/src/lv_core/lv_indev.c ****                         act_x += proc->types.pointer.drag_sum.x;
1342:lvgl/src/lv_core/lv_indev.c ****                     }
1343:lvgl/src/lv_core/lv_indev.c ****                     else {
1344:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_dir = LV_DRAG_DIR_VER;
1345:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_sum.x = 0;
1346:lvgl/src/lv_core/lv_indev.c ****                         act_y += proc->types.pointer.drag_sum.y;
1347:lvgl/src/lv_core/lv_indev.c ****                     }
1348:lvgl/src/lv_core/lv_indev.c ****                 }
1349:lvgl/src/lv_core/lv_indev.c ****             }
1350:lvgl/src/lv_core/lv_indev.c **** 
1351:lvgl/src/lv_core/lv_indev.c ****             /*Move the object*/
1352:lvgl/src/lv_core/lv_indev.c ****             if(allowed_dirs == LV_DRAG_DIR_HOR ||
1353:lvgl/src/lv_core/lv_indev.c ****                allowed_dirs == LV_DRAG_DIR_BOTH ||
1354:lvgl/src/lv_core/lv_indev.c ****                (allowed_dirs == LV_DRAG_DIR_ONE &&
1355:lvgl/src/lv_core/lv_indev.c ****                 LV_MATH_ABS(proc->types.pointer.drag_sum.x) > LV_MATH_ABS(proc->types.pointer.drag_
1356:lvgl/src/lv_core/lv_indev.c ****                 act_x += proc->types.pointer.vect.x;
1357:lvgl/src/lv_core/lv_indev.c ****             }
1358:lvgl/src/lv_core/lv_indev.c ****             if(allowed_dirs == LV_DRAG_DIR_VER ||
1359:lvgl/src/lv_core/lv_indev.c ****                allowed_dirs == LV_DRAG_DIR_BOTH ||
1360:lvgl/src/lv_core/lv_indev.c ****                (allowed_dirs == LV_DRAG_DIR_ONE &&
1361:lvgl/src/lv_core/lv_indev.c ****                 LV_MATH_ABS(proc->types.pointer.drag_sum.x) < LV_MATH_ABS(proc->types.pointer.drag_
1362:lvgl/src/lv_core/lv_indev.c ****                 act_y += proc->types.pointer.vect.y;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 27


1363:lvgl/src/lv_core/lv_indev.c ****             }
1364:lvgl/src/lv_core/lv_indev.c **** 
1365:lvgl/src/lv_core/lv_indev.c ****             uint16_t inv_buf_size =
1366:lvgl/src/lv_core/lv_indev.c ****                 lv_disp_get_inv_buf_size(indev_act->driver.disp); /*Get the number of currently inv
1367:lvgl/src/lv_core/lv_indev.c **** 
1368:lvgl/src/lv_core/lv_indev.c ****             lv_obj_set_pos(drag_obj, act_x, act_y);
1369:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_in_prog = 1;
1370:lvgl/src/lv_core/lv_indev.c **** 
1371:lvgl/src/lv_core/lv_indev.c ****             /*If the object didn't moved then clear the invalidated areas*/
1372:lvgl/src/lv_core/lv_indev.c ****             if(drag_obj->coords.x1 == prev_x && drag_obj->coords.y1 == prev_y) {
1373:lvgl/src/lv_core/lv_indev.c ****                 /*In a special case if the object is moved on a page and
1374:lvgl/src/lv_core/lv_indev.c ****                  * the scrollable has fit == true and the object is dragged of the page then
1375:lvgl/src/lv_core/lv_indev.c ****                  * while its coordinate is not changing only the parent's size is reduced */
1376:lvgl/src/lv_core/lv_indev.c ****                 lv_coord_t act_par_w = lv_obj_get_width(lv_obj_get_parent(drag_obj));
1377:lvgl/src/lv_core/lv_indev.c ****                 lv_coord_t act_par_h = lv_obj_get_height(lv_obj_get_parent(drag_obj));
1378:lvgl/src/lv_core/lv_indev.c ****                 if(act_par_w == prev_par_w && act_par_h == prev_par_h) {
1379:lvgl/src/lv_core/lv_indev.c ****                     uint16_t new_inv_buf_size = lv_disp_get_inv_buf_size(indev_act->driver.disp);
1380:lvgl/src/lv_core/lv_indev.c ****                     _lv_disp_pop_from_inv_buf(indev_act->driver.disp, new_inv_buf_size - inv_buf_si
1381:lvgl/src/lv_core/lv_indev.c ****                 }
1382:lvgl/src/lv_core/lv_indev.c ****             }
1383:lvgl/src/lv_core/lv_indev.c **** 
1384:lvgl/src/lv_core/lv_indev.c ****             /*Set the drag in progress flag*/
1385:lvgl/src/lv_core/lv_indev.c ****             /*Send the drag begin signal on first move*/
1386:lvgl/src/lv_core/lv_indev.c ****             if(drag_just_started) {
1387:lvgl/src/lv_core/lv_indev.c ****                 drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_BEGIN, indev_act);
1388:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1389:lvgl/src/lv_core/lv_indev.c **** 
1390:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(drag_obj, LV_EVENT_DRAG_BEGIN, NULL);
1391:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
1392:lvgl/src/lv_core/lv_indev.c ****             }
1393:lvgl/src/lv_core/lv_indev.c **** 
1394:lvgl/src/lv_core/lv_indev.c ****         }
1395:lvgl/src/lv_core/lv_indev.c ****     }
1396:lvgl/src/lv_core/lv_indev.c **** }
1397:lvgl/src/lv_core/lv_indev.c **** 
1398:lvgl/src/lv_core/lv_indev.c **** /**
1399:lvgl/src/lv_core/lv_indev.c ****  * Handle throwing by drag if the drag is ended
1400:lvgl/src/lv_core/lv_indev.c ****  * @param indev pointer to an input device state
1401:lvgl/src/lv_core/lv_indev.c ****  */
1402:lvgl/src/lv_core/lv_indev.c **** static void indev_drag_throw(lv_indev_proc_t * proc)
1403:lvgl/src/lv_core/lv_indev.c **** {
1404:lvgl/src/lv_core/lv_indev.c ****     if(proc->types.pointer.drag_in_prog == 0) return;
1405:lvgl/src/lv_core/lv_indev.c **** 
1406:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * drag_obj = get_dragged_obj(proc->types.pointer.last_obj);
1407:lvgl/src/lv_core/lv_indev.c **** 
1408:lvgl/src/lv_core/lv_indev.c ****     if(drag_obj == NULL) return;
1409:lvgl/src/lv_core/lv_indev.c **** 
1410:lvgl/src/lv_core/lv_indev.c ****     /*Return if the drag throw is not enabled*/
1411:lvgl/src/lv_core/lv_indev.c ****     if(lv_obj_get_drag_throw(drag_obj) == false) {
1412:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_in_prog = 0;
1413:lvgl/src/lv_core/lv_indev.c ****         drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_END, indev_act);
1414:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
1415:lvgl/src/lv_core/lv_indev.c **** 
1416:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(drag_obj, LV_EVENT_DRAG_END, NULL);
1417:lvgl/src/lv_core/lv_indev.c ****         return;
1418:lvgl/src/lv_core/lv_indev.c ****     }
1419:lvgl/src/lv_core/lv_indev.c **** 
ARM GAS  D:\Temp\cc3iPNN1.s 			page 28


1420:lvgl/src/lv_core/lv_indev.c ****     lv_drag_dir_t allowed_dirs = lv_obj_get_drag_dir(drag_obj);
1421:lvgl/src/lv_core/lv_indev.c **** 
1422:lvgl/src/lv_core/lv_indev.c ****     /*Reduce the vectors*/
1423:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.x =
1424:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x * (100 - indev_act->driver.drag_throw) / 100;
1425:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y =
1426:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y * (100 - indev_act->driver.drag_throw) / 100;
1427:lvgl/src/lv_core/lv_indev.c **** 
1428:lvgl/src/lv_core/lv_indev.c ****     if(proc->types.pointer.drag_throw_vect.x != 0 || proc->types.pointer.drag_throw_vect.y != 0) {
1429:lvgl/src/lv_core/lv_indev.c ****         /*Get the coordinates and modify them*/
1430:lvgl/src/lv_core/lv_indev.c ****         lv_area_t coords_ori;
1431:lvgl/src/lv_core/lv_indev.c ****         lv_obj_get_coords(drag_obj, &coords_ori);
1432:lvgl/src/lv_core/lv_indev.c ****         lv_coord_t act_x = lv_obj_get_x(drag_obj) + proc->types.pointer.drag_throw_vect.x;
1433:lvgl/src/lv_core/lv_indev.c ****         lv_coord_t act_y = lv_obj_get_y(drag_obj) + proc->types.pointer.drag_throw_vect.y;
1434:lvgl/src/lv_core/lv_indev.c **** 
1435:lvgl/src/lv_core/lv_indev.c ****         if(allowed_dirs == LV_DRAG_DIR_BOTH) lv_obj_set_pos(drag_obj, act_x, act_y);
1436:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_HOR) lv_obj_set_x(drag_obj, act_x);
1437:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_VER) lv_obj_set_y(drag_obj, act_y);
1438:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_ONE) {
1439:lvgl/src/lv_core/lv_indev.c ****             if(proc->types.pointer.drag_sum.x) lv_obj_set_x(drag_obj, act_x);
1440:lvgl/src/lv_core/lv_indev.c ****             else lv_obj_set_y(drag_obj, act_y);
1441:lvgl/src/lv_core/lv_indev.c ****         }
1442:lvgl/src/lv_core/lv_indev.c ****         lv_area_t coord_new;
1443:lvgl/src/lv_core/lv_indev.c ****         lv_obj_get_coords(drag_obj, &coord_new);
1444:lvgl/src/lv_core/lv_indev.c **** 
1445:lvgl/src/lv_core/lv_indev.c ****         /*If non of the coordinates are changed then do not continue throwing*/
1446:lvgl/src/lv_core/lv_indev.c ****         if((coords_ori.x1 == coord_new.x1 || proc->types.pointer.drag_throw_vect.x == 0) &&
1447:lvgl/src/lv_core/lv_indev.c ****            (coords_ori.y1 == coord_new.y1 || proc->types.pointer.drag_throw_vect.y == 0)) {
1448:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_in_prog      = 0;
1449:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.x            = 0;
1450:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.y            = 0;
1451:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_throw_vect.x = 0;
1452:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_throw_vect.y = 0;
1453:lvgl/src/lv_core/lv_indev.c ****             drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_END, indev_act);
1454:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
1455:lvgl/src/lv_core/lv_indev.c **** 
1456:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(drag_obj, LV_EVENT_DRAG_END, NULL);
1457:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
1458:lvgl/src/lv_core/lv_indev.c ****         }
1459:lvgl/src/lv_core/lv_indev.c ****     }
1460:lvgl/src/lv_core/lv_indev.c ****     /*If the types.pointer.vectors become 0 -> types.pointer.drag_in_prog = 0 and send a drag end
1461:lvgl/src/lv_core/lv_indev.c ****        signal*/
1462:lvgl/src/lv_core/lv_indev.c ****     else {
1463:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_in_prog = 0;
1464:lvgl/src/lv_core/lv_indev.c ****         drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_END, indev_act);
1465:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
1466:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(drag_obj, LV_EVENT_DRAG_END, NULL);
1467:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
1468:lvgl/src/lv_core/lv_indev.c ****     }
1469:lvgl/src/lv_core/lv_indev.c **** }
1470:lvgl/src/lv_core/lv_indev.c **** 
1471:lvgl/src/lv_core/lv_indev.c **** /**
1472:lvgl/src/lv_core/lv_indev.c ****  * Get the really dragged object by taking `drag_parent` into account.
1473:lvgl/src/lv_core/lv_indev.c ****  * @param obj the start object
1474:lvgl/src/lv_core/lv_indev.c ****  * @return the object to really drag
1475:lvgl/src/lv_core/lv_indev.c ****  */
1476:lvgl/src/lv_core/lv_indev.c **** static lv_obj_t * get_dragged_obj(lv_obj_t * obj)
ARM GAS  D:\Temp\cc3iPNN1.s 			page 29


1477:lvgl/src/lv_core/lv_indev.c **** {
1478:lvgl/src/lv_core/lv_indev.c ****     if(obj == NULL) return NULL;
1479:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * drag_obj = obj;
1480:lvgl/src/lv_core/lv_indev.c ****     while(lv_obj_get_drag_parent(drag_obj) != false && drag_obj != NULL) {
1481:lvgl/src/lv_core/lv_indev.c ****         drag_obj = lv_obj_get_parent(drag_obj);
1482:lvgl/src/lv_core/lv_indev.c ****     }
1483:lvgl/src/lv_core/lv_indev.c **** 
1484:lvgl/src/lv_core/lv_indev.c ****     return drag_obj;
1485:lvgl/src/lv_core/lv_indev.c **** }
1486:lvgl/src/lv_core/lv_indev.c **** 
1487:lvgl/src/lv_core/lv_indev.c **** /**
1488:lvgl/src/lv_core/lv_indev.c **** * Handle the gesture of indev_proc_p->types.pointer.act_obj
1489:lvgl/src/lv_core/lv_indev.c **** * @param indev pointer to a input device state
1490:lvgl/src/lv_core/lv_indev.c **** */
1491:lvgl/src/lv_core/lv_indev.c **** static void indev_gesture(lv_indev_proc_t * proc)
1492:lvgl/src/lv_core/lv_indev.c **** {
1493:lvgl/src/lv_core/lv_indev.c **** 
1494:lvgl/src/lv_core/lv_indev.c ****     if(proc->types.pointer.gesture_sent) return;
1495:lvgl/src/lv_core/lv_indev.c **** 
1496:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * gesture_obj = proc->types.pointer.act_obj;
1497:lvgl/src/lv_core/lv_indev.c **** 
1498:lvgl/src/lv_core/lv_indev.c ****     /*If gesture parent is active check recursively the gesture attribute*/
1499:lvgl/src/lv_core/lv_indev.c ****     while(gesture_obj && lv_obj_get_gesture_parent(gesture_obj)) {
1500:lvgl/src/lv_core/lv_indev.c ****         gesture_obj = lv_obj_get_parent(gesture_obj);
1501:lvgl/src/lv_core/lv_indev.c ****     }
1502:lvgl/src/lv_core/lv_indev.c **** 
1503:lvgl/src/lv_core/lv_indev.c ****     if(gesture_obj == NULL) return;
1504:lvgl/src/lv_core/lv_indev.c **** 
1505:lvgl/src/lv_core/lv_indev.c ****     if((LV_MATH_ABS(proc->types.pointer.vect.x) < indev_act->driver.gesture_min_velocity) &&
1506:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.vect.y) < indev_act->driver.gesture_min_velocity)) {
1507:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.gesture_sum.x = 0;
1508:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.gesture_sum.y = 0;
1509:lvgl/src/lv_core/lv_indev.c ****     }
1510:lvgl/src/lv_core/lv_indev.c **** 
1511:lvgl/src/lv_core/lv_indev.c ****     /*Count the movement by gesture*/
1512:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.gesture_sum.x += proc->types.pointer.vect.x;
1513:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.gesture_sum.y += proc->types.pointer.vect.y;
1514:lvgl/src/lv_core/lv_indev.c **** 
1515:lvgl/src/lv_core/lv_indev.c ****     if((LV_MATH_ABS(proc->types.pointer.gesture_sum.x) > indev_act->driver.gesture_limit) ||
1516:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.gesture_sum.y) > indev_act->driver.gesture_limit)) {
1517:lvgl/src/lv_core/lv_indev.c **** 
1518:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.gesture_sent = 1;
1519:lvgl/src/lv_core/lv_indev.c **** 
1520:lvgl/src/lv_core/lv_indev.c ****         if(LV_MATH_ABS(proc->types.pointer.gesture_sum.x) > LV_MATH_ABS(proc->types.pointer.gesture
1521:lvgl/src/lv_core/lv_indev.c ****             if(proc->types.pointer.gesture_sum.x > 0)
1522:lvgl/src/lv_core/lv_indev.c ****                 proc->types.pointer.gesture_dir = LV_GESTURE_DIR_RIGHT;
1523:lvgl/src/lv_core/lv_indev.c ****             else
1524:lvgl/src/lv_core/lv_indev.c ****                 proc->types.pointer.gesture_dir = LV_GESTURE_DIR_LEFT;
1525:lvgl/src/lv_core/lv_indev.c ****         }
1526:lvgl/src/lv_core/lv_indev.c ****         else {
1527:lvgl/src/lv_core/lv_indev.c ****             if(proc->types.pointer.gesture_sum.y > 0)
1528:lvgl/src/lv_core/lv_indev.c ****                 proc->types.pointer.gesture_dir = LV_GESTURE_DIR_BOTTOM;
1529:lvgl/src/lv_core/lv_indev.c ****             else
1530:lvgl/src/lv_core/lv_indev.c ****                 proc->types.pointer.gesture_dir = LV_GESTURE_DIR_TOP;
1531:lvgl/src/lv_core/lv_indev.c ****         }
1532:lvgl/src/lv_core/lv_indev.c **** 
1533:lvgl/src/lv_core/lv_indev.c ****         gesture_obj->signal_cb(gesture_obj, LV_SIGNAL_GESTURE, indev_act);
ARM GAS  D:\Temp\cc3iPNN1.s 			page 30


1534:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
1535:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(gesture_obj, LV_EVENT_GESTURE, NULL);
1536:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
1537:lvgl/src/lv_core/lv_indev.c ****     }
1538:lvgl/src/lv_core/lv_indev.c **** }
1539:lvgl/src/lv_core/lv_indev.c **** 
1540:lvgl/src/lv_core/lv_indev.c **** /**
1541:lvgl/src/lv_core/lv_indev.c ****  * Checks if the reset_query flag has been set. If so, perform necessary global indev cleanup actio
1542:lvgl/src/lv_core/lv_indev.c ****  * @param proc pointer to an input device 'proc'
1543:lvgl/src/lv_core/lv_indev.c ****  * @return true if indev query should be immediately truncated.
1544:lvgl/src/lv_core/lv_indev.c ****  */
1545:lvgl/src/lv_core/lv_indev.c **** static bool indev_reset_check(lv_indev_proc_t * proc)
1546:lvgl/src/lv_core/lv_indev.c **** {
 123              		.loc 1 1546 1 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
1547:lvgl/src/lv_core/lv_indev.c ****     if(proc->reset_query) {
 128              		.loc 1 1547 5 view .LVU38
 129              		.loc 1 1547 8 is_stmt 0 view .LVU39
 130 0000 90F83400 		ldrb	r0, [r0, #52]	@ zero_extendqisi2
 131              	.LVL2:
 132              		.loc 1 1547 7 view .LVU40
 133 0004 10F0020F 		tst	r0, #2
 134 0008 02D0     		beq	.L10
1548:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act = NULL;
 135              		.loc 1 1548 9 is_stmt 1 view .LVU41
 136              		.loc 1 1548 23 is_stmt 0 view .LVU42
 137 000a 034B     		ldr	r3, .L11
 138 000c 0022     		movs	r2, #0
 139 000e 1A60     		str	r2, [r3]
 140              	.L10:
1549:lvgl/src/lv_core/lv_indev.c ****     }
1550:lvgl/src/lv_core/lv_indev.c **** 
1551:lvgl/src/lv_core/lv_indev.c ****     return proc->reset_query ? true : false;
 141              		.loc 1 1551 5 is_stmt 1 view .LVU43
1552:lvgl/src/lv_core/lv_indev.c **** }
 142              		.loc 1 1552 1 is_stmt 0 view .LVU44
 143 0010 C0F34000 		ubfx	r0, r0, #1, #1
 144 0014 7047     		bx	lr
 145              	.L12:
 146 0016 00BF     		.align	2
 147              	.L11:
 148 0018 00000000 		.word	.LANCHOR0
 149              		.cfi_endproc
 150              	.LFE495:
 152              		.section	.text.get_dragged_obj,"ax",%progbits
 153              		.align	1
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	get_dragged_obj:
 160              	.LVL3:
 161              	.LFB493:
1477:lvgl/src/lv_core/lv_indev.c ****     if(obj == NULL) return NULL;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 31


 162              		.loc 1 1477 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
1477:lvgl/src/lv_core/lv_indev.c ****     if(obj == NULL) return NULL;
 166              		.loc 1 1477 1 is_stmt 0 view .LVU46
 167 0000 10B5     		push	{r4, lr}
 168              	.LCFI2:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
1478:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * drag_obj = obj;
 172              		.loc 1 1478 5 is_stmt 1 view .LVU47
1478:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * drag_obj = obj;
 173              		.loc 1 1478 7 is_stmt 0 view .LVU48
 174 0002 0446     		mov	r4, r0
 175 0004 48B1     		cbz	r0, .L14
 176              	.LVL4:
 177              	.L15:
1480:lvgl/src/lv_core/lv_indev.c ****         drag_obj = lv_obj_get_parent(drag_obj);
 178              		.loc 1 1480 11 view .LVU49
 179 0006 2046     		mov	r0, r4
 180 0008 FFF7FEFF 		bl	lv_obj_get_drag_parent
 181              	.LVL5:
1480:lvgl/src/lv_core/lv_indev.c ****         drag_obj = lv_obj_get_parent(drag_obj);
 182              		.loc 1 1480 10 view .LVU50
 183 000c 28B1     		cbz	r0, .L14
1480:lvgl/src/lv_core/lv_indev.c ****         drag_obj = lv_obj_get_parent(drag_obj);
 184              		.loc 1 1480 53 discriminator 1 view .LVU51
 185 000e 24B1     		cbz	r4, .L14
1481:lvgl/src/lv_core/lv_indev.c ****     }
 186              		.loc 1 1481 9 is_stmt 1 view .LVU52
1481:lvgl/src/lv_core/lv_indev.c ****     }
 187              		.loc 1 1481 20 is_stmt 0 view .LVU53
 188 0010 2046     		mov	r0, r4
 189 0012 FFF7FEFF 		bl	lv_obj_get_parent
 190              	.LVL6:
 191 0016 0446     		mov	r4, r0
 192              	.LVL7:
1481:lvgl/src/lv_core/lv_indev.c ****     }
 193              		.loc 1 1481 20 view .LVU54
 194 0018 F5E7     		b	.L15
 195              	.LVL8:
 196              	.L14:
1485:lvgl/src/lv_core/lv_indev.c **** 
 197              		.loc 1 1485 1 view .LVU55
 198 001a 2046     		mov	r0, r4
 199 001c 10BD     		pop	{r4, pc}
 200              		.cfi_endproc
 201              	.LFE493:
 203              		.section	.text.indev_drag_throw,"ax",%progbits
 204              		.align	1
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	indev_drag_throw:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 32


 211              	.LVL9:
 212              	.LFB492:
1403:lvgl/src/lv_core/lv_indev.c ****     if(proc->types.pointer.drag_in_prog == 0) return;
 213              		.loc 1 1403 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 16
 216              		@ frame_needed = 0, uses_anonymous_args = 0
1404:lvgl/src/lv_core/lv_indev.c **** 
 217              		.loc 1 1404 5 view .LVU57
1404:lvgl/src/lv_core/lv_indev.c **** 
 218              		.loc 1 1404 41 is_stmt 0 view .LVU58
 219 0000 90F82A30 		ldrb	r3, [r0, #42]	@ zero_extendqisi2
1404:lvgl/src/lv_core/lv_indev.c **** 
 220              		.loc 1 1404 7 view .LVU59
 221 0004 13F0020F 		tst	r3, #2
 222 0008 00D1     		bne	.L35
 223 000a 7047     		bx	lr
 224              	.L35:
1403:lvgl/src/lv_core/lv_indev.c ****     if(proc->types.pointer.drag_in_prog == 0) return;
 225              		.loc 1 1403 1 view .LVU60
 226 000c F0B5     		push	{r4, r5, r6, r7, lr}
 227              	.LCFI3:
 228              		.cfi_def_cfa_offset 20
 229              		.cfi_offset 4, -20
 230              		.cfi_offset 5, -16
 231              		.cfi_offset 6, -12
 232              		.cfi_offset 7, -8
 233              		.cfi_offset 14, -4
 234 000e 85B0     		sub	sp, sp, #20
 235              	.LCFI4:
 236              		.cfi_def_cfa_offset 40
 237 0010 0446     		mov	r4, r0
1406:lvgl/src/lv_core/lv_indev.c **** 
 238              		.loc 1 1406 5 is_stmt 1 view .LVU61
1406:lvgl/src/lv_core/lv_indev.c **** 
 239              		.loc 1 1406 27 is_stmt 0 view .LVU62
 240 0012 C069     		ldr	r0, [r0, #28]
 241              	.LVL10:
1406:lvgl/src/lv_core/lv_indev.c **** 
 242              		.loc 1 1406 27 view .LVU63
 243 0014 FFF7FEFF 		bl	get_dragged_obj
 244              	.LVL11:
1408:lvgl/src/lv_core/lv_indev.c **** 
 245              		.loc 1 1408 5 is_stmt 1 view .LVU64
1408:lvgl/src/lv_core/lv_indev.c **** 
 246              		.loc 1 1408 7 is_stmt 0 view .LVU65
 247 0018 0546     		mov	r5, r0
 248 001a 90B1     		cbz	r0, .L18
1411:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_in_prog = 0;
 249              		.loc 1 1411 5 is_stmt 1 view .LVU66
1411:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_in_prog = 0;
 250              		.loc 1 1411 8 is_stmt 0 view .LVU67
 251 001c FFF7FEFF 		bl	lv_obj_get_drag_throw
 252              	.LVL12:
1411:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_in_prog = 0;
 253              		.loc 1 1411 7 view .LVU68
 254 0020 B8B9     		cbnz	r0, .L20
ARM GAS  D:\Temp\cc3iPNN1.s 			page 33


1412:lvgl/src/lv_core/lv_indev.c ****         drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_END, indev_act);
 255              		.loc 1 1412 9 is_stmt 1 view .LVU69
1412:lvgl/src/lv_core/lv_indev.c ****         drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_END, indev_act);
 256              		.loc 1 1412 42 is_stmt 0 view .LVU70
 257 0022 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 258 0026 6FF34103 		bfc	r3, #1, #1
 259 002a 84F82A30 		strb	r3, [r4, #42]
1413:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 260              		.loc 1 1413 9 is_stmt 1 view .LVU71
1413:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 261              		.loc 1 1413 17 is_stmt 0 view .LVU72
 262 002e EB69     		ldr	r3, [r5, #28]
1413:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 263              		.loc 1 1413 9 view .LVU73
 264 0030 5C4A     		ldr	r2, .L42
 265 0032 1268     		ldr	r2, [r2]
 266 0034 1321     		movs	r1, #19
 267 0036 2846     		mov	r0, r5
 268 0038 9847     		blx	r3
 269              	.LVL13:
1414:lvgl/src/lv_core/lv_indev.c **** 
 270              		.loc 1 1414 9 is_stmt 1 view .LVU74
1414:lvgl/src/lv_core/lv_indev.c **** 
 271              		.loc 1 1414 12 is_stmt 0 view .LVU75
 272 003a 2046     		mov	r0, r4
 273 003c FFF7FEFF 		bl	indev_reset_check
 274              	.LVL14:
1414:lvgl/src/lv_core/lv_indev.c **** 
 275              		.loc 1 1414 11 view .LVU76
 276 0040 08B1     		cbz	r0, .L36
 277              	.L18:
1469:lvgl/src/lv_core/lv_indev.c **** 
 278              		.loc 1 1469 1 view .LVU77
 279 0042 05B0     		add	sp, sp, #20
 280              	.LCFI5:
 281              		.cfi_remember_state
 282              		.cfi_def_cfa_offset 20
 283              		@ sp needed
 284 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 285              	.LVL15:
 286              	.L36:
 287              	.LCFI6:
 288              		.cfi_restore_state
1416:lvgl/src/lv_core/lv_indev.c ****         return;
 289              		.loc 1 1416 9 is_stmt 1 view .LVU78
 290 0046 0022     		movs	r2, #0
 291 0048 0921     		movs	r1, #9
 292 004a 2846     		mov	r0, r5
 293 004c FFF7FEFF 		bl	lv_event_send
 294              	.LVL16:
1417:lvgl/src/lv_core/lv_indev.c ****     }
 295              		.loc 1 1417 9 view .LVU79
 296 0050 F7E7     		b	.L18
 297              	.L20:
1420:lvgl/src/lv_core/lv_indev.c **** 
 298              		.loc 1 1420 5 view .LVU80
1420:lvgl/src/lv_core/lv_indev.c **** 
ARM GAS  D:\Temp\cc3iPNN1.s 			page 34


 299              		.loc 1 1420 34 is_stmt 0 view .LVU81
 300 0052 2846     		mov	r0, r5
 301 0054 FFF7FEFF 		bl	lv_obj_get_drag_dir
 302              	.LVL17:
 303 0058 0646     		mov	r6, r0
 304              	.LVL18:
1423:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x * (100 - indev_act->driver.drag_throw) / 100;
 305              		.loc 1 1423 5 is_stmt 1 view .LVU82
1424:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y =
 306              		.loc 1 1424 44 is_stmt 0 view .LVU83
 307 005a B4F91430 		ldrsh	r3, [r4, #20]
1424:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y =
 308              		.loc 1 1424 65 view .LVU84
 309 005e 514A     		ldr	r2, .L42
 310 0060 1268     		ldr	r2, [r2]
1424:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y =
 311              		.loc 1 1424 73 view .LVU85
 312 0062 517D     		ldrb	r1, [r2, #21]	@ zero_extendqisi2
1424:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y =
 313              		.loc 1 1424 54 view .LVU86
 314 0064 C1F16401 		rsb	r1, r1, #100
1424:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y =
 315              		.loc 1 1424 47 view .LVU87
 316 0068 01FB03F1 		mul	r1, r1, r3
1424:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y =
 317              		.loc 1 1424 86 view .LVU88
 318 006c 4E48     		ldr	r0, .L42+4
 319 006e 80FB0173 		smull	r7, r3, r0, r1
 320 0072 C917     		asrs	r1, r1, #31
 321 0074 C1EB6311 		rsb	r1, r1, r3, asr #5
1423:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x * (100 - indev_act->driver.drag_throw) / 100;
 322              		.loc 1 1423 43 view .LVU89
 323 0078 A182     		strh	r1, [r4, #20]	@ movhi
1425:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y * (100 - indev_act->driver.drag_throw) / 100;
 324              		.loc 1 1425 5 is_stmt 1 view .LVU90
1426:lvgl/src/lv_core/lv_indev.c **** 
 325              		.loc 1 1426 44 is_stmt 0 view .LVU91
 326 007a B4F91610 		ldrsh	r1, [r4, #22]
1426:lvgl/src/lv_core/lv_indev.c **** 
 327              		.loc 1 1426 73 view .LVU92
 328 007e 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
1426:lvgl/src/lv_core/lv_indev.c **** 
 329              		.loc 1 1426 54 view .LVU93
 330 0080 C3F16403 		rsb	r3, r3, #100
1426:lvgl/src/lv_core/lv_indev.c **** 
 331              		.loc 1 1426 47 view .LVU94
 332 0084 03FB01F3 		mul	r3, r3, r1
1426:lvgl/src/lv_core/lv_indev.c **** 
 333              		.loc 1 1426 86 view .LVU95
 334 0088 80FB0310 		smull	r1, r0, r0, r3
 335 008c DB17     		asrs	r3, r3, #31
 336 008e C3EB6013 		rsb	r3, r3, r0, asr #5
1425:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y * (100 - indev_act->driver.drag_throw) / 100;
 337              		.loc 1 1425 43 view .LVU96
 338 0092 E382     		strh	r3, [r4, #22]	@ movhi
1428:lvgl/src/lv_core/lv_indev.c ****         /*Get the coordinates and modify them*/
 339              		.loc 1 1428 5 is_stmt 1 view .LVU97
ARM GAS  D:\Temp\cc3iPNN1.s 			page 35


1428:lvgl/src/lv_core/lv_indev.c ****         /*Get the coordinates and modify them*/
 340              		.loc 1 1428 51 is_stmt 0 view .LVU98
 341 0094 6369     		ldr	r3, [r4, #20]
1428:lvgl/src/lv_core/lv_indev.c ****         /*Get the coordinates and modify them*/
 342              		.loc 1 1428 7 view .LVU99
 343 0096 BBB9     		cbnz	r3, .L37
1463:lvgl/src/lv_core/lv_indev.c ****         drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_END, indev_act);
 344              		.loc 1 1463 9 is_stmt 1 view .LVU100
1463:lvgl/src/lv_core/lv_indev.c ****         drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_END, indev_act);
 345              		.loc 1 1463 42 is_stmt 0 view .LVU101
 346 0098 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 347 009c 6FF34103 		bfc	r3, #1, #1
 348 00a0 84F82A30 		strb	r3, [r4, #42]
1464:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 349              		.loc 1 1464 9 is_stmt 1 view .LVU102
1464:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 350              		.loc 1 1464 17 is_stmt 0 view .LVU103
 351 00a4 EB69     		ldr	r3, [r5, #28]
1464:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 352              		.loc 1 1464 9 view .LVU104
 353 00a6 1321     		movs	r1, #19
 354 00a8 2846     		mov	r0, r5
 355 00aa 9847     		blx	r3
 356              	.LVL19:
1465:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(drag_obj, LV_EVENT_DRAG_END, NULL);
 357              		.loc 1 1465 9 is_stmt 1 view .LVU105
1465:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(drag_obj, LV_EVENT_DRAG_END, NULL);
 358              		.loc 1 1465 12 is_stmt 0 view .LVU106
 359 00ac 2046     		mov	r0, r4
 360 00ae FFF7FEFF 		bl	indev_reset_check
 361              	.LVL20:
1465:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(drag_obj, LV_EVENT_DRAG_END, NULL);
 362              		.loc 1 1465 11 view .LVU107
 363 00b2 0028     		cmp	r0, #0
 364 00b4 C5D1     		bne	.L18
1466:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 365              		.loc 1 1466 9 is_stmt 1 view .LVU108
 366 00b6 0022     		movs	r2, #0
 367 00b8 0921     		movs	r1, #9
 368 00ba 2846     		mov	r0, r5
 369 00bc FFF7FEFF 		bl	lv_event_send
 370              	.LVL21:
1467:lvgl/src/lv_core/lv_indev.c ****     }
 371              		.loc 1 1467 9 view .LVU109
1467:lvgl/src/lv_core/lv_indev.c ****     }
 372              		.loc 1 1467 12 is_stmt 0 view .LVU110
 373 00c0 2046     		mov	r0, r4
 374 00c2 FFF7FEFF 		bl	indev_reset_check
 375              	.LVL22:
 376 00c6 BCE7     		b	.L18
 377              	.L37:
 378              	.LBB2:
1430:lvgl/src/lv_core/lv_indev.c ****         lv_obj_get_coords(drag_obj, &coords_ori);
 379              		.loc 1 1430 9 is_stmt 1 view .LVU111
1431:lvgl/src/lv_core/lv_indev.c ****         lv_coord_t act_x = lv_obj_get_x(drag_obj) + proc->types.pointer.drag_throw_vect.x;
 380              		.loc 1 1431 9 view .LVU112
 381 00c8 6946     		mov	r1, sp
ARM GAS  D:\Temp\cc3iPNN1.s 			page 36


 382 00ca 2846     		mov	r0, r5
 383 00cc FFF7FEFF 		bl	lv_obj_get_coords
 384              	.LVL23:
1432:lvgl/src/lv_core/lv_indev.c ****         lv_coord_t act_y = lv_obj_get_y(drag_obj) + proc->types.pointer.drag_throw_vect.y;
 385              		.loc 1 1432 9 view .LVU113
1432:lvgl/src/lv_core/lv_indev.c ****         lv_coord_t act_y = lv_obj_get_y(drag_obj) + proc->types.pointer.drag_throw_vect.y;
 386              		.loc 1 1432 28 is_stmt 0 view .LVU114
 387 00d0 2846     		mov	r0, r5
 388 00d2 FFF7FEFF 		bl	lv_obj_get_x
 389              	.LVL24:
1432:lvgl/src/lv_core/lv_indev.c ****         lv_coord_t act_y = lv_obj_get_y(drag_obj) + proc->types.pointer.drag_throw_vect.y;
 390              		.loc 1 1432 88 view .LVU115
 391 00d6 A38A     		ldrh	r3, [r4, #20]
1432:lvgl/src/lv_core/lv_indev.c ****         lv_coord_t act_y = lv_obj_get_y(drag_obj) + proc->types.pointer.drag_throw_vect.y;
 392              		.loc 1 1432 51 view .LVU116
 393 00d8 13FA80F0 		uxtah	r0, r3, r0
1432:lvgl/src/lv_core/lv_indev.c ****         lv_coord_t act_y = lv_obj_get_y(drag_obj) + proc->types.pointer.drag_throw_vect.y;
 394              		.loc 1 1432 20 view .LVU117
 395 00dc 07B2     		sxth	r7, r0
 396              	.LVL25:
1433:lvgl/src/lv_core/lv_indev.c **** 
 397              		.loc 1 1433 9 is_stmt 1 view .LVU118
1433:lvgl/src/lv_core/lv_indev.c **** 
 398              		.loc 1 1433 28 is_stmt 0 view .LVU119
 399 00de 2846     		mov	r0, r5
 400 00e0 FFF7FEFF 		bl	lv_obj_get_y
 401              	.LVL26:
1433:lvgl/src/lv_core/lv_indev.c **** 
 402              		.loc 1 1433 88 view .LVU120
 403 00e4 E38A     		ldrh	r3, [r4, #22]
1433:lvgl/src/lv_core/lv_indev.c **** 
 404              		.loc 1 1433 51 view .LVU121
 405 00e6 13FA80F0 		uxtah	r0, r3, r0
1433:lvgl/src/lv_core/lv_indev.c **** 
 406              		.loc 1 1433 20 view .LVU122
 407 00ea 02B2     		sxth	r2, r0
 408              	.LVL27:
1435:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_HOR) lv_obj_set_x(drag_obj, act_x);
 409              		.loc 1 1435 9 is_stmt 1 view .LVU123
1435:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_HOR) lv_obj_set_x(drag_obj, act_x);
 410              		.loc 1 1435 11 is_stmt 0 view .LVU124
 411 00ec 032E     		cmp	r6, #3
 412 00ee 3DD0     		beq	.L38
1436:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_VER) lv_obj_set_y(drag_obj, act_y);
 413              		.loc 1 1436 14 is_stmt 1 view .LVU125
1436:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_VER) lv_obj_set_y(drag_obj, act_y);
 414              		.loc 1 1436 16 is_stmt 0 view .LVU126
 415 00f0 012E     		cmp	r6, #1
 416 00f2 40D0     		beq	.L39
1437:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_ONE) {
 417              		.loc 1 1437 14 is_stmt 1 view .LVU127
1437:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_ONE) {
 418              		.loc 1 1437 16 is_stmt 0 view .LVU128
 419 00f4 022E     		cmp	r6, #2
 420 00f6 43D0     		beq	.L40
1438:lvgl/src/lv_core/lv_indev.c ****             if(proc->types.pointer.drag_sum.x) lv_obj_set_x(drag_obj, act_x);
 421              		.loc 1 1438 14 is_stmt 1 view .LVU129
ARM GAS  D:\Temp\cc3iPNN1.s 			page 37


1438:lvgl/src/lv_core/lv_indev.c ****             if(proc->types.pointer.drag_sum.x) lv_obj_set_x(drag_obj, act_x);
 422              		.loc 1 1438 16 is_stmt 0 view .LVU130
 423 00f8 042E     		cmp	r6, #4
 424 00fa 46D0     		beq	.L41
 425              	.LVL28:
 426              	.L23:
1442:lvgl/src/lv_core/lv_indev.c ****         lv_obj_get_coords(drag_obj, &coord_new);
 427              		.loc 1 1442 9 is_stmt 1 view .LVU131
1443:lvgl/src/lv_core/lv_indev.c **** 
 428              		.loc 1 1443 9 view .LVU132
 429 00fc 02A9     		add	r1, sp, #8
 430 00fe 2846     		mov	r0, r5
 431 0100 FFF7FEFF 		bl	lv_obj_get_coords
 432              	.LVL29:
1446:lvgl/src/lv_core/lv_indev.c ****            (coords_ori.y1 == coord_new.y1 || proc->types.pointer.drag_throw_vect.y == 0)) {
 433              		.loc 1 1446 9 view .LVU133
1446:lvgl/src/lv_core/lv_indev.c ****            (coords_ori.y1 == coord_new.y1 || proc->types.pointer.drag_throw_vect.y == 0)) {
 434              		.loc 1 1446 23 is_stmt 0 view .LVU134
 435 0104 BDF90020 		ldrsh	r2, [sp]
1446:lvgl/src/lv_core/lv_indev.c ****            (coords_ori.y1 == coord_new.y1 || proc->types.pointer.drag_throw_vect.y == 0)) {
 436              		.loc 1 1446 39 view .LVU135
 437 0108 BDF90830 		ldrsh	r3, [sp, #8]
1446:lvgl/src/lv_core/lv_indev.c ****            (coords_ori.y1 == coord_new.y1 || proc->types.pointer.drag_throw_vect.y == 0)) {
 438              		.loc 1 1446 11 view .LVU136
 439 010c 9A42     		cmp	r2, r3
 440 010e 03D0     		beq	.L27
1446:lvgl/src/lv_core/lv_indev.c ****            (coords_ori.y1 == coord_new.y1 || proc->types.pointer.drag_throw_vect.y == 0)) {
 441              		.loc 1 1446 81 discriminator 2 view .LVU137
 442 0110 B4F91430 		ldrsh	r3, [r4, #20]
1446:lvgl/src/lv_core/lv_indev.c ****            (coords_ori.y1 == coord_new.y1 || proc->types.pointer.drag_throw_vect.y == 0)) {
 443              		.loc 1 1446 43 discriminator 2 view .LVU138
 444 0114 002B     		cmp	r3, #0
 445 0116 94D1     		bne	.L18
 446              	.L27:
1447:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_in_prog      = 0;
 447              		.loc 1 1447 23 discriminator 3 view .LVU139
 448 0118 BDF90220 		ldrsh	r2, [sp, #2]
1447:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_in_prog      = 0;
 449              		.loc 1 1447 39 discriminator 3 view .LVU140
 450 011c BDF90A30 		ldrsh	r3, [sp, #10]
1446:lvgl/src/lv_core/lv_indev.c ****            (coords_ori.y1 == coord_new.y1 || proc->types.pointer.drag_throw_vect.y == 0)) {
 451              		.loc 1 1446 90 discriminator 3 view .LVU141
 452 0120 9A42     		cmp	r2, r3
 453 0122 03D0     		beq	.L29
1447:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_in_prog      = 0;
 454              		.loc 1 1447 81 view .LVU142
 455 0124 B4F91630 		ldrsh	r3, [r4, #22]
1447:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_in_prog      = 0;
 456              		.loc 1 1447 43 view .LVU143
 457 0128 002B     		cmp	r3, #0
 458 012a 8AD1     		bne	.L18
 459              	.L29:
1448:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.x            = 0;
 460              		.loc 1 1448 13 is_stmt 1 view .LVU144
1448:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.x            = 0;
 461              		.loc 1 1448 51 is_stmt 0 view .LVU145
 462 012c 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
ARM GAS  D:\Temp\cc3iPNN1.s 			page 38


 463 0130 6FF34103 		bfc	r3, #1, #1
 464 0134 84F82A30 		strb	r3, [r4, #42]
1449:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.y            = 0;
 465              		.loc 1 1449 13 is_stmt 1 view .LVU146
1449:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.y            = 0;
 466              		.loc 1 1449 51 is_stmt 0 view .LVU147
 467 0138 0023     		movs	r3, #0
 468 013a A381     		strh	r3, [r4, #12]	@ movhi
1450:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_throw_vect.x = 0;
 469              		.loc 1 1450 13 is_stmt 1 view .LVU148
1450:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_throw_vect.x = 0;
 470              		.loc 1 1450 51 is_stmt 0 view .LVU149
 471 013c E381     		strh	r3, [r4, #14]	@ movhi
1451:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_throw_vect.y = 0;
 472              		.loc 1 1451 13 is_stmt 1 view .LVU150
1451:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_throw_vect.y = 0;
 473              		.loc 1 1451 51 is_stmt 0 view .LVU151
 474 013e A382     		strh	r3, [r4, #20]	@ movhi
1452:lvgl/src/lv_core/lv_indev.c ****             drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_END, indev_act);
 475              		.loc 1 1452 13 is_stmt 1 view .LVU152
1452:lvgl/src/lv_core/lv_indev.c ****             drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_END, indev_act);
 476              		.loc 1 1452 51 is_stmt 0 view .LVU153
 477 0140 E382     		strh	r3, [r4, #22]	@ movhi
1453:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 478              		.loc 1 1453 13 is_stmt 1 view .LVU154
1453:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 479              		.loc 1 1453 21 is_stmt 0 view .LVU155
 480 0142 EB69     		ldr	r3, [r5, #28]
1453:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 481              		.loc 1 1453 13 view .LVU156
 482 0144 174A     		ldr	r2, .L42
 483 0146 1268     		ldr	r2, [r2]
 484 0148 1321     		movs	r1, #19
 485 014a 2846     		mov	r0, r5
 486 014c 9847     		blx	r3
 487              	.LVL30:
1454:lvgl/src/lv_core/lv_indev.c **** 
 488              		.loc 1 1454 13 is_stmt 1 view .LVU157
1454:lvgl/src/lv_core/lv_indev.c **** 
 489              		.loc 1 1454 16 is_stmt 0 view .LVU158
 490 014e 2046     		mov	r0, r4
 491 0150 FFF7FEFF 		bl	indev_reset_check
 492              	.LVL31:
1454:lvgl/src/lv_core/lv_indev.c **** 
 493              		.loc 1 1454 15 view .LVU159
 494 0154 0028     		cmp	r0, #0
 495 0156 7FF474AF 		bne	.L18
1456:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 496              		.loc 1 1456 13 is_stmt 1 view .LVU160
 497 015a 0022     		movs	r2, #0
 498 015c 0921     		movs	r1, #9
 499 015e 2846     		mov	r0, r5
 500 0160 FFF7FEFF 		bl	lv_event_send
 501              	.LVL32:
1457:lvgl/src/lv_core/lv_indev.c ****         }
 502              		.loc 1 1457 13 view .LVU161
1457:lvgl/src/lv_core/lv_indev.c ****         }
ARM GAS  D:\Temp\cc3iPNN1.s 			page 39


 503              		.loc 1 1457 16 is_stmt 0 view .LVU162
 504 0164 2046     		mov	r0, r4
 505 0166 FFF7FEFF 		bl	indev_reset_check
 506              	.LVL33:
 507 016a 6AE7     		b	.L18
 508              	.LVL34:
 509              	.L38:
1435:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_HOR) lv_obj_set_x(drag_obj, act_x);
 510              		.loc 1 1435 46 is_stmt 1 discriminator 1 view .LVU163
 511 016c 3946     		mov	r1, r7
 512 016e 2846     		mov	r0, r5
 513 0170 FFF7FEFF 		bl	lv_obj_set_pos
 514              	.LVL35:
1435:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_HOR) lv_obj_set_x(drag_obj, act_x);
 515              		.loc 1 1435 46 is_stmt 0 discriminator 1 view .LVU164
 516 0174 C2E7     		b	.L23
 517              	.LVL36:
 518              	.L39:
1436:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_VER) lv_obj_set_y(drag_obj, act_y);
 519              		.loc 1 1436 50 is_stmt 1 discriminator 1 view .LVU165
 520 0176 3946     		mov	r1, r7
 521 0178 2846     		mov	r0, r5
 522 017a FFF7FEFF 		bl	lv_obj_set_x
 523              	.LVL37:
1436:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_VER) lv_obj_set_y(drag_obj, act_y);
 524              		.loc 1 1436 50 is_stmt 0 discriminator 1 view .LVU166
 525 017e BDE7     		b	.L23
 526              	.LVL38:
 527              	.L40:
1437:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_ONE) {
 528              		.loc 1 1437 50 is_stmt 1 discriminator 1 view .LVU167
 529 0180 1146     		mov	r1, r2
 530 0182 2846     		mov	r0, r5
 531 0184 FFF7FEFF 		bl	lv_obj_set_y
 532              	.LVL39:
1437:lvgl/src/lv_core/lv_indev.c ****         else if(allowed_dirs == LV_DRAG_DIR_ONE) {
 533              		.loc 1 1437 50 is_stmt 0 discriminator 1 view .LVU168
 534 0188 B8E7     		b	.L23
 535              	.LVL40:
 536              	.L41:
1439:lvgl/src/lv_core/lv_indev.c ****             else lv_obj_set_y(drag_obj, act_y);
 537              		.loc 1 1439 13 is_stmt 1 view .LVU169
1439:lvgl/src/lv_core/lv_indev.c ****             else lv_obj_set_y(drag_obj, act_y);
 538              		.loc 1 1439 44 is_stmt 0 view .LVU170
 539 018a B4F91030 		ldrsh	r3, [r4, #16]
1439:lvgl/src/lv_core/lv_indev.c ****             else lv_obj_set_y(drag_obj, act_y);
 540              		.loc 1 1439 15 view .LVU171
 541 018e 23B1     		cbz	r3, .L26
1439:lvgl/src/lv_core/lv_indev.c ****             else lv_obj_set_y(drag_obj, act_y);
 542              		.loc 1 1439 48 is_stmt 1 discriminator 1 view .LVU172
 543 0190 3946     		mov	r1, r7
 544 0192 2846     		mov	r0, r5
 545 0194 FFF7FEFF 		bl	lv_obj_set_x
 546              	.LVL41:
1439:lvgl/src/lv_core/lv_indev.c ****             else lv_obj_set_y(drag_obj, act_y);
 547              		.loc 1 1439 48 is_stmt 0 discriminator 1 view .LVU173
 548 0198 B0E7     		b	.L23
ARM GAS  D:\Temp\cc3iPNN1.s 			page 40


 549              	.LVL42:
 550              	.L26:
1440:lvgl/src/lv_core/lv_indev.c ****         }
 551              		.loc 1 1440 18 is_stmt 1 view .LVU174
 552 019a 1146     		mov	r1, r2
 553 019c 2846     		mov	r0, r5
 554 019e FFF7FEFF 		bl	lv_obj_set_y
 555              	.LVL43:
1440:lvgl/src/lv_core/lv_indev.c ****         }
 556              		.loc 1 1440 18 is_stmt 0 view .LVU175
 557 01a2 ABE7     		b	.L23
 558              	.L43:
 559              		.align	2
 560              	.L42:
 561 01a4 00000000 		.word	.LANCHOR1
 562 01a8 1F85EB51 		.word	1374389535
 563              	.LBE2:
 564              		.cfi_endproc
 565              	.LFE492:
 567              		.section	.text.indev_proc_release,"ax",%progbits
 568              		.align	1
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv4-sp-d16
 574              	indev_proc_release:
 575              	.LVL44:
 576              	.LFB487:
1011:lvgl/src/lv_core/lv_indev.c ****     if(proc->wait_until_release != 0) {
 577              		.loc 1 1011 1 is_stmt 1 view -0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
1011:lvgl/src/lv_core/lv_indev.c ****     if(proc->wait_until_release != 0) {
 581              		.loc 1 1011 1 is_stmt 0 view .LVU177
 582 0000 38B5     		push	{r3, r4, r5, lr}
 583              	.LCFI7:
 584              		.cfi_def_cfa_offset 16
 585              		.cfi_offset 3, -16
 586              		.cfi_offset 4, -12
 587              		.cfi_offset 5, -8
 588              		.cfi_offset 14, -4
 589 0002 0446     		mov	r4, r0
1012:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.act_obj  = NULL;
 590              		.loc 1 1012 5 is_stmt 1 view .LVU178
1012:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.act_obj  = NULL;
 591              		.loc 1 1012 33 is_stmt 0 view .LVU179
 592 0004 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
1012:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.act_obj  = NULL;
 593              		.loc 1 1012 7 view .LVU180
 594 0008 13F0080F 		tst	r3, #8
 595 000c 0AD0     		beq	.L45
1013:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_obj = NULL;
 596              		.loc 1 1013 9 is_stmt 1 view .LVU181
1013:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_obj = NULL;
 597              		.loc 1 1013 38 is_stmt 0 view .LVU182
 598 000e 0023     		movs	r3, #0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 41


 599 0010 8361     		str	r3, [r0, #24]
1014:lvgl/src/lv_core/lv_indev.c ****         proc->pr_timestamp           = 0;
 600              		.loc 1 1014 9 is_stmt 1 view .LVU183
1014:lvgl/src/lv_core/lv_indev.c ****         proc->pr_timestamp           = 0;
 601              		.loc 1 1014 38 is_stmt 0 view .LVU184
 602 0012 C361     		str	r3, [r0, #28]
1015:lvgl/src/lv_core/lv_indev.c ****         proc->longpr_rep_timestamp   = 0;
 603              		.loc 1 1015 9 is_stmt 1 view .LVU185
1015:lvgl/src/lv_core/lv_indev.c ****         proc->longpr_rep_timestamp   = 0;
 604              		.loc 1 1015 38 is_stmt 0 view .LVU186
 605 0014 C362     		str	r3, [r0, #44]
1016:lvgl/src/lv_core/lv_indev.c ****         proc->wait_until_release     = 0;
 606              		.loc 1 1016 9 is_stmt 1 view .LVU187
1016:lvgl/src/lv_core/lv_indev.c ****         proc->wait_until_release     = 0;
 607              		.loc 1 1016 38 is_stmt 0 view .LVU188
 608 0016 0363     		str	r3, [r0, #48]
1017:lvgl/src/lv_core/lv_indev.c ****     }
 609              		.loc 1 1017 9 is_stmt 1 view .LVU189
1017:lvgl/src/lv_core/lv_indev.c ****     }
 610              		.loc 1 1017 38 is_stmt 0 view .LVU190
 611 0018 90F83420 		ldrb	r2, [r0, #52]	@ zero_extendqisi2
 612 001c 63F3C302 		bfi	r2, r3, #3, #1
 613 0020 80F83420 		strb	r2, [r0, #52]
 614              	.L45:
1019:lvgl/src/lv_core/lv_indev.c **** 
 615              		.loc 1 1019 5 is_stmt 1 view .LVU191
1019:lvgl/src/lv_core/lv_indev.c **** 
 616              		.loc 1 1019 40 is_stmt 0 view .LVU192
 617 0024 A069     		ldr	r0, [r4, #24]
 618              	.LVL45:
1019:lvgl/src/lv_core/lv_indev.c **** 
 619              		.loc 1 1019 19 view .LVU193
 620 0026 584B     		ldr	r3, .L59
 621 0028 1860     		str	r0, [r3]
1022:lvgl/src/lv_core/lv_indev.c **** 
 622              		.loc 1 1022 5 is_stmt 1 view .LVU194
1022:lvgl/src/lv_core/lv_indev.c **** 
 623              		.loc 1 1022 7 is_stmt 0 view .LVU195
 624 002a 0028     		cmp	r0, #0
 625 002c 00F09180 		beq	.L46
 626              	.LBB3:
1028:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, indev_act);
 627              		.loc 1 1028 9 is_stmt 1 view .LVU196
1028:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, indev_act);
 628              		.loc 1 1028 12 is_stmt 0 view .LVU197
 629 0030 1021     		movs	r1, #16
 630 0032 FFF7FEFF 		bl	lv_obj_is_protected
 631              	.LVL46:
1028:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, indev_act);
 632              		.loc 1 1028 11 view .LVU198
 633 0036 0028     		cmp	r0, #0
 634 0038 37D0     		beq	.L47
1029:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 635              		.loc 1 1029 13 is_stmt 1 view .LVU199
1029:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 636              		.loc 1 1029 26 is_stmt 0 view .LVU200
 637 003a 534B     		ldr	r3, .L59
ARM GAS  D:\Temp\cc3iPNN1.s 			page 42


 638 003c 1868     		ldr	r0, [r3]
 639 003e C369     		ldr	r3, [r0, #28]
1029:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 640              		.loc 1 1029 13 view .LVU201
 641 0040 524A     		ldr	r2, .L59+4
 642 0042 1268     		ldr	r2, [r2]
 643 0044 0E21     		movs	r1, #14
 644 0046 9847     		blx	r3
 645              	.LVL47:
1030:lvgl/src/lv_core/lv_indev.c **** 
 646              		.loc 1 1030 13 is_stmt 1 view .LVU202
1030:lvgl/src/lv_core/lv_indev.c **** 
 647              		.loc 1 1030 16 is_stmt 0 view .LVU203
 648 0048 2046     		mov	r0, r4
 649 004a FFF7FEFF 		bl	indev_reset_check
 650              	.LVL48:
1030:lvgl/src/lv_core/lv_indev.c **** 
 651              		.loc 1 1030 15 view .LVU204
 652 004e 0028     		cmp	r0, #0
 653 0050 40F08680 		bne	.L44
1032:lvgl/src/lv_core/lv_indev.c ****                 if(proc->long_pr_sent == 0) {
 654              		.loc 1 1032 13 is_stmt 1 view .LVU205
1032:lvgl/src/lv_core/lv_indev.c ****                 if(proc->long_pr_sent == 0) {
 655              		.loc 1 1032 49 is_stmt 0 view .LVU206
 656 0054 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
1032:lvgl/src/lv_core/lv_indev.c ****                 if(proc->long_pr_sent == 0) {
 657              		.loc 1 1032 15 view .LVU207
 658 0058 13F0020F 		tst	r3, #2
 659 005c 1AD1     		bne	.L49
1033:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 660              		.loc 1 1033 17 is_stmt 1 view .LVU208
1033:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 661              		.loc 1 1033 39 is_stmt 0 view .LVU209
 662 005e 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
1033:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 663              		.loc 1 1033 19 view .LVU210
 664 0062 13F0010F 		tst	r3, #1
 665 0066 0AD1     		bne	.L50
1034:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(proc)) return;
 666              		.loc 1 1034 21 is_stmt 1 view .LVU211
 667 0068 0022     		movs	r2, #0
 668 006a 0321     		movs	r1, #3
 669 006c 464B     		ldr	r3, .L59
 670 006e 1868     		ldr	r0, [r3]
 671 0070 FFF7FEFF 		bl	lv_event_send
 672              	.LVL49:
1035:lvgl/src/lv_core/lv_indev.c ****                 }
 673              		.loc 1 1035 21 view .LVU212
1035:lvgl/src/lv_core/lv_indev.c ****                 }
 674              		.loc 1 1035 24 is_stmt 0 view .LVU213
 675 0074 2046     		mov	r0, r4
 676 0076 FFF7FEFF 		bl	indev_reset_check
 677              	.LVL50:
1035:lvgl/src/lv_core/lv_indev.c ****                 }
 678              		.loc 1 1035 23 view .LVU214
 679 007a 0028     		cmp	r0, #0
 680 007c 70D1     		bne	.L44
ARM GAS  D:\Temp\cc3iPNN1.s 			page 43


 681              	.L50:
1038:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 682              		.loc 1 1038 17 is_stmt 1 view .LVU215
 683 007e 0022     		movs	r2, #0
 684 0080 0621     		movs	r1, #6
 685 0082 414B     		ldr	r3, .L59
 686 0084 1868     		ldr	r0, [r3]
 687 0086 FFF7FEFF 		bl	lv_event_send
 688              	.LVL51:
1039:lvgl/src/lv_core/lv_indev.c ****             }
 689              		.loc 1 1039 17 view .LVU216
1039:lvgl/src/lv_core/lv_indev.c ****             }
 690              		.loc 1 1039 20 is_stmt 0 view .LVU217
 691 008a 2046     		mov	r0, r4
 692 008c FFF7FEFF 		bl	indev_reset_check
 693              	.LVL52:
1039:lvgl/src/lv_core/lv_indev.c ****             }
 694              		.loc 1 1039 19 view .LVU218
 695 0090 0028     		cmp	r0, #0
 696 0092 65D1     		bne	.L44
 697              	.L49:
1042:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 698              		.loc 1 1042 13 is_stmt 1 view .LVU219
 699 0094 0022     		movs	r2, #0
 700 0096 0721     		movs	r1, #7
 701 0098 3B4B     		ldr	r3, .L59
 702 009a 1868     		ldr	r0, [r3]
 703 009c FFF7FEFF 		bl	lv_event_send
 704              	.LVL53:
1043:lvgl/src/lv_core/lv_indev.c ****         }
 705              		.loc 1 1043 13 view .LVU220
1043:lvgl/src/lv_core/lv_indev.c ****         }
 706              		.loc 1 1043 16 is_stmt 0 view .LVU221
 707 00a0 2046     		mov	r0, r4
 708 00a2 FFF7FEFF 		bl	indev_reset_check
 709              	.LVL54:
1043:lvgl/src/lv_core/lv_indev.c ****         }
 710              		.loc 1 1043 15 view .LVU222
 711 00a6 78B3     		cbz	r0, .L51
 712 00a8 5AE0     		b	.L44
 713              	.L47:
1048:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 714              		.loc 1 1048 13 is_stmt 1 view .LVU223
1048:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 715              		.loc 1 1048 26 is_stmt 0 view .LVU224
 716 00aa 374B     		ldr	r3, .L59
 717 00ac 1868     		ldr	r0, [r3]
 718 00ae C369     		ldr	r3, [r0, #28]
1048:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 719              		.loc 1 1048 13 view .LVU225
 720 00b0 364A     		ldr	r2, .L59+4
 721 00b2 1268     		ldr	r2, [r2]
 722 00b4 0E21     		movs	r1, #14
 723 00b6 9847     		blx	r3
 724              	.LVL55:
1049:lvgl/src/lv_core/lv_indev.c **** 
 725              		.loc 1 1049 13 is_stmt 1 view .LVU226
ARM GAS  D:\Temp\cc3iPNN1.s 			page 44


1049:lvgl/src/lv_core/lv_indev.c **** 
 726              		.loc 1 1049 16 is_stmt 0 view .LVU227
 727 00b8 2046     		mov	r0, r4
 728 00ba FFF7FEFF 		bl	indev_reset_check
 729              	.LVL56:
1049:lvgl/src/lv_core/lv_indev.c **** 
 730              		.loc 1 1049 15 view .LVU228
 731 00be 0028     		cmp	r0, #0
 732 00c0 4ED1     		bne	.L44
1051:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 733              		.loc 1 1051 13 is_stmt 1 view .LVU229
1051:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 734              		.loc 1 1051 35 is_stmt 0 view .LVU230
 735 00c2 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
1051:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 736              		.loc 1 1051 15 view .LVU231
 737 00c6 13F0010F 		tst	r3, #1
 738 00ca 04D1     		bne	.L52
1051:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 739              		.loc 1 1051 76 discriminator 1 view .LVU232
 740 00cc 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
1051:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 741              		.loc 1 1051 40 discriminator 1 view .LVU233
 742 00d0 13F0020F 		tst	r3, #2
 743 00d4 45D0     		beq	.L57
 744              	.L52:
1056:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_CLICKED, NULL);
 745              		.loc 1 1056 13 is_stmt 1 view .LVU234
1056:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_CLICKED, NULL);
 746              		.loc 1 1056 49 is_stmt 0 view .LVU235
 747 00d6 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
1056:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_CLICKED, NULL);
 748              		.loc 1 1056 15 view .LVU236
 749 00da 13F0020F 		tst	r3, #2
 750 00de 09D1     		bne	.L53
1057:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 751              		.loc 1 1057 17 is_stmt 1 view .LVU237
 752 00e0 0022     		movs	r2, #0
 753 00e2 0621     		movs	r1, #6
 754 00e4 284B     		ldr	r3, .L59
 755 00e6 1868     		ldr	r0, [r3]
 756 00e8 FFF7FEFF 		bl	lv_event_send
 757              	.LVL57:
1058:lvgl/src/lv_core/lv_indev.c ****             }
 758              		.loc 1 1058 17 view .LVU238
1058:lvgl/src/lv_core/lv_indev.c ****             }
 759              		.loc 1 1058 20 is_stmt 0 view .LVU239
 760 00ec 2046     		mov	r0, r4
 761 00ee FFF7FEFF 		bl	indev_reset_check
 762              	.LVL58:
1058:lvgl/src/lv_core/lv_indev.c ****             }
 763              		.loc 1 1058 19 view .LVU240
 764 00f2 A8BB     		cbnz	r0, .L44
 765              	.L53:
1061:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 766              		.loc 1 1061 13 is_stmt 1 view .LVU241
 767 00f4 0022     		movs	r2, #0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 45


 768 00f6 0721     		movs	r1, #7
 769 00f8 234B     		ldr	r3, .L59
 770 00fa 1868     		ldr	r0, [r3]
 771 00fc FFF7FEFF 		bl	lv_event_send
 772              	.LVL59:
1062:lvgl/src/lv_core/lv_indev.c ****         }
 773              		.loc 1 1062 13 view .LVU242
1062:lvgl/src/lv_core/lv_indev.c ****         }
 774              		.loc 1 1062 16 is_stmt 0 view .LVU243
 775 0100 2046     		mov	r0, r4
 776 0102 FFF7FEFF 		bl	indev_reset_check
 777              	.LVL60:
1062:lvgl/src/lv_core/lv_indev.c ****         }
 778              		.loc 1 1062 15 view .LVU244
 779 0106 58BB     		cbnz	r0, .L44
 780              	.L51:
1067:lvgl/src/lv_core/lv_indev.c ****         if(drag_obj) {
 781              		.loc 1 1067 9 is_stmt 1 view .LVU245
1067:lvgl/src/lv_core/lv_indev.c ****         if(drag_obj) {
 782              		.loc 1 1067 31 is_stmt 0 view .LVU246
 783 0108 1F4B     		ldr	r3, .L59
 784 010a 1868     		ldr	r0, [r3]
 785 010c FFF7FEFF 		bl	get_dragged_obj
 786              	.LVL61:
1068:lvgl/src/lv_core/lv_indev.c ****             if(lv_obj_get_drag_throw(drag_obj) && proc->types.pointer.drag_in_prog) {
 787              		.loc 1 1068 9 is_stmt 1 view .LVU247
1068:lvgl/src/lv_core/lv_indev.c ****             if(lv_obj_get_drag_throw(drag_obj) && proc->types.pointer.drag_in_prog) {
 788              		.loc 1 1068 11 is_stmt 0 view .LVU248
 789 0110 0546     		mov	r5, r0
 790 0112 D0B1     		cbz	r0, .L54
1069:lvgl/src/lv_core/lv_indev.c ****                 if(drag_obj->signal_cb) drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_THROW_BEGIN, N
 791              		.loc 1 1069 13 is_stmt 1 view .LVU249
1069:lvgl/src/lv_core/lv_indev.c ****                 if(drag_obj->signal_cb) drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_THROW_BEGIN, N
 792              		.loc 1 1069 16 is_stmt 0 view .LVU250
 793 0114 FFF7FEFF 		bl	lv_obj_get_drag_throw
 794              	.LVL62:
1069:lvgl/src/lv_core/lv_indev.c ****                 if(drag_obj->signal_cb) drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_THROW_BEGIN, N
 795              		.loc 1 1069 15 view .LVU251
 796 0118 B8B1     		cbz	r0, .L54
1069:lvgl/src/lv_core/lv_indev.c ****                 if(drag_obj->signal_cb) drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_THROW_BEGIN, N
 797              		.loc 1 1069 48 discriminator 1 view .LVU252
 798 011a 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 799 011e 13F0020F 		tst	r3, #2
 800 0122 12D0     		beq	.L54
1070:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 801              		.loc 1 1070 17 is_stmt 1 view .LVU253
1070:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 802              		.loc 1 1070 28 is_stmt 0 view .LVU254
 803 0124 EB69     		ldr	r3, [r5, #28]
1070:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 804              		.loc 1 1070 19 view .LVU255
 805 0126 1BB1     		cbz	r3, .L55
1070:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 806              		.loc 1 1070 41 is_stmt 1 discriminator 1 view .LVU256
 807 0128 0022     		movs	r2, #0
 808 012a 1221     		movs	r1, #18
 809 012c 2846     		mov	r0, r5
ARM GAS  D:\Temp\cc3iPNN1.s 			page 46


 810 012e 9847     		blx	r3
 811              	.LVL63:
 812              	.L55:
1071:lvgl/src/lv_core/lv_indev.c **** 
 813              		.loc 1 1071 17 view .LVU257
1071:lvgl/src/lv_core/lv_indev.c **** 
 814              		.loc 1 1071 20 is_stmt 0 view .LVU258
 815 0130 2046     		mov	r0, r4
 816 0132 FFF7FEFF 		bl	indev_reset_check
 817              	.LVL64:
1071:lvgl/src/lv_core/lv_indev.c **** 
 818              		.loc 1 1071 19 view .LVU259
 819 0136 98B9     		cbnz	r0, .L44
1073:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 820              		.loc 1 1073 17 is_stmt 1 view .LVU260
 821 0138 0022     		movs	r2, #0
 822 013a 0A21     		movs	r1, #10
 823 013c 2846     		mov	r0, r5
 824 013e FFF7FEFF 		bl	lv_event_send
 825              	.LVL65:
1074:lvgl/src/lv_core/lv_indev.c ****             }
 826              		.loc 1 1074 17 view .LVU261
1074:lvgl/src/lv_core/lv_indev.c ****             }
 827              		.loc 1 1074 20 is_stmt 0 view .LVU262
 828 0142 2046     		mov	r0, r4
 829 0144 FFF7FEFF 		bl	indev_reset_check
 830              	.LVL66:
1074:lvgl/src/lv_core/lv_indev.c ****             }
 831              		.loc 1 1074 19 view .LVU263
 832 0148 50B9     		cbnz	r0, .L44
 833              	.L54:
1078:lvgl/src/lv_core/lv_indev.c ****         proc->pr_timestamp          = 0;
 834              		.loc 1 1078 9 is_stmt 1 view .LVU264
1078:lvgl/src/lv_core/lv_indev.c ****         proc->pr_timestamp          = 0;
 835              		.loc 1 1078 37 is_stmt 0 view .LVU265
 836 014a 0023     		movs	r3, #0
 837 014c A361     		str	r3, [r4, #24]
1079:lvgl/src/lv_core/lv_indev.c ****         proc->longpr_rep_timestamp  = 0;
 838              		.loc 1 1079 9 is_stmt 1 view .LVU266
1079:lvgl/src/lv_core/lv_indev.c ****         proc->longpr_rep_timestamp  = 0;
 839              		.loc 1 1079 37 is_stmt 0 view .LVU267
 840 014e E362     		str	r3, [r4, #44]
1080:lvgl/src/lv_core/lv_indev.c ****     }
 841              		.loc 1 1080 9 is_stmt 1 view .LVU268
1080:lvgl/src/lv_core/lv_indev.c ****     }
 842              		.loc 1 1080 37 is_stmt 0 view .LVU269
 843 0150 2363     		str	r3, [r4, #48]
 844              	.LVL67:
 845              	.L46:
1080:lvgl/src/lv_core/lv_indev.c ****     }
 846              		.loc 1 1080 37 view .LVU270
 847              	.LBE3:
1085:lvgl/src/lv_core/lv_indev.c ****         indev_drag_throw(proc);
 848              		.loc 1 1085 5 is_stmt 1 view .LVU271
1085:lvgl/src/lv_core/lv_indev.c ****         indev_drag_throw(proc);
 849              		.loc 1 1085 27 is_stmt 0 view .LVU272
 850 0152 E369     		ldr	r3, [r4, #28]
ARM GAS  D:\Temp\cc3iPNN1.s 			page 47


1085:lvgl/src/lv_core/lv_indev.c ****         indev_drag_throw(proc);
 851              		.loc 1 1085 7 view .LVU273
 852 0154 23B1     		cbz	r3, .L44
1085:lvgl/src/lv_core/lv_indev.c ****         indev_drag_throw(proc);
 853              		.loc 1 1085 66 discriminator 1 view .LVU274
 854 0156 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
1085:lvgl/src/lv_core/lv_indev.c ****         indev_drag_throw(proc);
 855              		.loc 1 1085 45 discriminator 1 view .LVU275
 856 015a 13F0020F 		tst	r3, #2
 857 015e 0CD0     		beq	.L58
 858              	.L44:
1089:lvgl/src/lv_core/lv_indev.c **** 
 859              		.loc 1 1089 1 view .LVU276
 860 0160 38BD     		pop	{r3, r4, r5, pc}
 861              	.LVL68:
 862              	.L57:
 863              	.LBB4:
1052:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 864              		.loc 1 1052 17 is_stmt 1 view .LVU277
 865 0162 0022     		movs	r2, #0
 866 0164 0321     		movs	r1, #3
 867 0166 084B     		ldr	r3, .L59
 868 0168 1868     		ldr	r0, [r3]
 869 016a FFF7FEFF 		bl	lv_event_send
 870              	.LVL69:
1053:lvgl/src/lv_core/lv_indev.c ****             }
 871              		.loc 1 1053 17 view .LVU278
1053:lvgl/src/lv_core/lv_indev.c ****             }
 872              		.loc 1 1053 20 is_stmt 0 view .LVU279
 873 016e 2046     		mov	r0, r4
 874 0170 FFF7FEFF 		bl	indev_reset_check
 875              	.LVL70:
1053:lvgl/src/lv_core/lv_indev.c ****             }
 876              		.loc 1 1053 19 view .LVU280
 877 0174 0028     		cmp	r0, #0
 878 0176 AED0     		beq	.L52
 879 0178 F2E7     		b	.L44
 880              	.L58:
1053:lvgl/src/lv_core/lv_indev.c ****             }
 881              		.loc 1 1053 19 view .LVU281
 882              	.LBE4:
1086:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 883              		.loc 1 1086 9 is_stmt 1 view .LVU282
 884 017a 2046     		mov	r0, r4
 885 017c FFF7FEFF 		bl	indev_drag_throw
 886              	.LVL71:
1087:lvgl/src/lv_core/lv_indev.c ****     }
 887              		.loc 1 1087 9 view .LVU283
1087:lvgl/src/lv_core/lv_indev.c ****     }
 888              		.loc 1 1087 12 is_stmt 0 view .LVU284
 889 0180 2046     		mov	r0, r4
 890 0182 FFF7FEFF 		bl	indev_reset_check
 891              	.LVL72:
 892 0186 EBE7     		b	.L44
 893              	.L60:
 894              		.align	2
 895              	.L59:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 48


 896 0188 00000000 		.word	.LANCHOR0
 897 018c 00000000 		.word	.LANCHOR1
 898              		.cfi_endproc
 899              	.LFE487:
 901              		.section	.text.indev_click_focus,"ax",%progbits
 902              		.align	1
 903              		.syntax unified
 904              		.thumb
 905              		.thumb_func
 906              		.fpu fpv4-sp-d16
 908              	indev_click_focus:
 909              	.LVL73:
 910              	.LFB490:
1163:lvgl/src/lv_core/lv_indev.c ****     /*Handle click focus*/
 911              		.loc 1 1163 1 is_stmt 1 view -0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
1163:lvgl/src/lv_core/lv_indev.c ****     /*Handle click focus*/
 915              		.loc 1 1163 1 is_stmt 0 view .LVU286
 916 0000 70B5     		push	{r4, r5, r6, lr}
 917              	.LCFI8:
 918              		.cfi_def_cfa_offset 16
 919              		.cfi_offset 4, -16
 920              		.cfi_offset 5, -12
 921              		.cfi_offset 6, -8
 922              		.cfi_offset 14, -4
 923 0002 0546     		mov	r5, r0
1165:lvgl/src/lv_core/lv_indev.c ****     if(lv_obj_is_protected(indev_obj_act, LV_PROTECT_CLICK_FOCUS) == false &&
 924              		.loc 1 1165 5 is_stmt 1 view .LVU287
1165:lvgl/src/lv_core/lv_indev.c ****     if(lv_obj_is_protected(indev_obj_act, LV_PROTECT_CLICK_FOCUS) == false &&
 925              		.loc 1 1165 31 is_stmt 0 view .LVU288
 926 0004 584C     		ldr	r4, .L77
 927 0006 2068     		ldr	r0, [r4]
 928              	.LVL74:
1165:lvgl/src/lv_core/lv_indev.c ****     if(lv_obj_is_protected(indev_obj_act, LV_PROTECT_CLICK_FOCUS) == false &&
 929              		.loc 1 1165 31 view .LVU289
 930 0008 FFF7FEFF 		bl	lv_obj_get_focused_obj
 931              	.LVL75:
 932 000c 0646     		mov	r6, r0
 933              	.LVL76:
1166:lvgl/src/lv_core/lv_indev.c ****        proc->types.pointer.last_pressed != obj_to_focus) {
 934              		.loc 1 1166 5 is_stmt 1 view .LVU290
1166:lvgl/src/lv_core/lv_indev.c ****        proc->types.pointer.last_pressed != obj_to_focus) {
 935              		.loc 1 1166 8 is_stmt 0 view .LVU291
 936 000e 2021     		movs	r1, #32
 937 0010 2068     		ldr	r0, [r4]
 938              	.LVL77:
1166:lvgl/src/lv_core/lv_indev.c ****        proc->types.pointer.last_pressed != obj_to_focus) {
 939              		.loc 1 1166 8 view .LVU292
 940 0012 FFF7FEFF 		bl	lv_obj_is_protected
 941              	.LVL78:
1166:lvgl/src/lv_core/lv_indev.c ****        proc->types.pointer.last_pressed != obj_to_focus) {
 942              		.loc 1 1166 7 view .LVU293
 943 0016 70BB     		cbnz	r0, .L61
1167:lvgl/src/lv_core/lv_indev.c **** #if LV_USE_GROUP
 944              		.loc 1 1167 27 discriminator 1 view .LVU294
ARM GAS  D:\Temp\cc3iPNN1.s 			page 49


 945 0018 2B6A     		ldr	r3, [r5, #32]
1166:lvgl/src/lv_core/lv_indev.c ****        proc->types.pointer.last_pressed != obj_to_focus) {
 946              		.loc 1 1166 76 discriminator 1 view .LVU295
 947 001a B342     		cmp	r3, r6
 948 001c 2BD0     		beq	.L61
 949              	.LBB5:
1169:lvgl/src/lv_core/lv_indev.c ****         lv_group_t * g_prev = proc->types.pointer.last_pressed ? lv_obj_get_group(proc->types.point
 950              		.loc 1 1169 9 is_stmt 1 view .LVU296
1169:lvgl/src/lv_core/lv_indev.c ****         lv_group_t * g_prev = proc->types.pointer.last_pressed ? lv_obj_get_group(proc->types.point
 951              		.loc 1 1169 30 is_stmt 0 view .LVU297
 952 001e 3046     		mov	r0, r6
 953 0020 FFF7FEFF 		bl	lv_obj_get_group
 954              	.LVL79:
 955 0024 0446     		mov	r4, r0
 956              	.LVL80:
1170:lvgl/src/lv_core/lv_indev.c **** 
 957              		.loc 1 1170 9 is_stmt 1 view .LVU298
1170:lvgl/src/lv_core/lv_indev.c **** 
 958              		.loc 1 1170 50 is_stmt 0 view .LVU299
 959 0026 286A     		ldr	r0, [r5, #32]
 960              	.LVL81:
1170:lvgl/src/lv_core/lv_indev.c **** 
 961              		.loc 1 1170 117 view .LVU300
 962 0028 30B3     		cbz	r0, .L72
1170:lvgl/src/lv_core/lv_indev.c **** 
 963              		.loc 1 1170 66 discriminator 1 view .LVU301
 964 002a FFF7FEFF 		bl	lv_obj_get_group
 965              	.LVL82:
 966              	.L63:
1173:lvgl/src/lv_core/lv_indev.c ****             /*The objects are in a group*/
 967              		.loc 1 1173 9 is_stmt 1 discriminator 4 view .LVU302
1173:lvgl/src/lv_core/lv_indev.c ****             /*The objects are in a group*/
 968              		.loc 1 1173 11 is_stmt 0 discriminator 4 view .LVU303
 969 002e A042     		cmp	r0, r4
 970 0030 24D0     		beq	.L74
1197:lvgl/src/lv_core/lv_indev.c ****                 lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
 971              		.loc 1 1197 13 is_stmt 1 view .LVU304
1197:lvgl/src/lv_core/lv_indev.c ****                 lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
 972              		.loc 1 1197 15 is_stmt 0 view .LVU305
 973 0032 0028     		cmp	r0, #0
 974 0034 56D0     		beq	.L75
 975              	.L68:
1205:lvgl/src/lv_core/lv_indev.c ****                     /*If the prev. object also wasn't in a group defocus it*/
 976              		.loc 1 1205 17 is_stmt 1 view .LVU306
1205:lvgl/src/lv_core/lv_indev.c ****                     /*If the prev. object also wasn't in a group defocus it*/
 977              		.loc 1 1205 39 is_stmt 0 view .LVU307
 978 0036 2B6A     		ldr	r3, [r5, #32]
1205:lvgl/src/lv_core/lv_indev.c ****                     /*If the prev. object also wasn't in a group defocus it*/
 979              		.loc 1 1205 19 view .LVU308
 980 0038 9BB1     		cbz	r3, .L69
1207:lvgl/src/lv_core/lv_indev.c ****                         lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
 981              		.loc 1 1207 21 is_stmt 1 view .LVU309
1207:lvgl/src/lv_core/lv_indev.c ****                         lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
 982              		.loc 1 1207 23 is_stmt 0 view .LVU310
 983 003a 0028     		cmp	r0, #0
 984 003c 6AD0     		beq	.L76
1215:lvgl/src/lv_core/lv_indev.c ****                         if(indev_reset_check(proc)) return;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 50


 985              		.loc 1 1215 25 is_stmt 1 view .LVU311
 986 003e 0022     		movs	r2, #0
 987 0040 1521     		movs	r1, #21
 988 0042 1846     		mov	r0, r3
 989              	.LVL83:
1215:lvgl/src/lv_core/lv_indev.c ****                         if(indev_reset_check(proc)) return;
 990              		.loc 1 1215 25 is_stmt 0 view .LVU312
 991 0044 FFF7FEFF 		bl	lv_signal_send
 992              	.LVL84:
1216:lvgl/src/lv_core/lv_indev.c ****                         lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_LEAVE, NULL);
 993              		.loc 1 1216 25 is_stmt 1 view .LVU313
1216:lvgl/src/lv_core/lv_indev.c ****                         lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_LEAVE, NULL);
 994              		.loc 1 1216 28 is_stmt 0 view .LVU314
 995 0048 2846     		mov	r0, r5
 996 004a FFF7FEFF 		bl	indev_reset_check
 997              	.LVL85:
1216:lvgl/src/lv_core/lv_indev.c ****                         lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_LEAVE, NULL);
 998              		.loc 1 1216 27 view .LVU315
 999 004e 90B9     		cbnz	r0, .L61
1217:lvgl/src/lv_core/lv_indev.c ****                         if(indev_reset_check(proc)) return;
 1000              		.loc 1 1217 25 is_stmt 1 view .LVU316
 1001 0050 0022     		movs	r2, #0
 1002 0052 0F21     		movs	r1, #15
 1003 0054 286A     		ldr	r0, [r5, #32]
 1004 0056 FFF7FEFF 		bl	lv_event_send
 1005              	.LVL86:
1218:lvgl/src/lv_core/lv_indev.c ****                     }
 1006              		.loc 1 1218 25 view .LVU317
1218:lvgl/src/lv_core/lv_indev.c ****                     }
 1007              		.loc 1 1218 28 is_stmt 0 view .LVU318
 1008 005a 2846     		mov	r0, r5
 1009 005c FFF7FEFF 		bl	indev_reset_check
 1010              	.LVL87:
1218:lvgl/src/lv_core/lv_indev.c ****                     }
 1011              		.loc 1 1218 27 view .LVU319
 1012 0060 48B9     		cbnz	r0, .L61
 1013              	.L69:
1224:lvgl/src/lv_core/lv_indev.c ****                 lv_group_focus_obj(obj_to_focus);
 1014              		.loc 1 1224 13 is_stmt 1 view .LVU320
1224:lvgl/src/lv_core/lv_indev.c ****                 lv_group_focus_obj(obj_to_focus);
 1015              		.loc 1 1224 15 is_stmt 0 view .LVU321
 1016 0062 002C     		cmp	r4, #0
 1017 0064 6BD0     		beq	.L71
1225:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1018              		.loc 1 1225 17 is_stmt 1 view .LVU322
 1019 0066 3046     		mov	r0, r6
 1020 0068 FFF7FEFF 		bl	lv_group_focus_obj
 1021              	.LVL88:
1226:lvgl/src/lv_core/lv_indev.c ****             }
 1022              		.loc 1 1226 17 view .LVU323
1226:lvgl/src/lv_core/lv_indev.c ****             }
 1023              		.loc 1 1226 20 is_stmt 0 view .LVU324
 1024 006c 2846     		mov	r0, r5
 1025 006e FFF7FEFF 		bl	indev_reset_check
 1026              	.LVL89:
1226:lvgl/src/lv_core/lv_indev.c ****             }
 1027              		.loc 1 1226 19 view .LVU325
ARM GAS  D:\Temp\cc3iPNN1.s 			page 51


 1028 0072 00B9     		cbnz	r0, .L61
 1029              	.L66:
1248:lvgl/src/lv_core/lv_indev.c ****     }
 1030              		.loc 1 1248 9 is_stmt 1 view .LVU326
1248:lvgl/src/lv_core/lv_indev.c ****     }
 1031              		.loc 1 1248 42 is_stmt 0 view .LVU327
 1032 0074 2E62     		str	r6, [r5, #32]
 1033              	.LVL90:
 1034              	.L61:
1248:lvgl/src/lv_core/lv_indev.c ****     }
 1035              		.loc 1 1248 42 view .LVU328
 1036              	.LBE5:
1251:lvgl/src/lv_core/lv_indev.c **** 
 1037              		.loc 1 1251 1 view .LVU329
 1038 0076 70BD     		pop	{r4, r5, r6, pc}
 1039              	.LVL91:
 1040              	.L72:
 1041              	.LBB6:
1170:lvgl/src/lv_core/lv_indev.c **** 
 1042              		.loc 1 1170 117 view .LVU330
 1043 0078 0020     		movs	r0, #0
 1044 007a D8E7     		b	.L63
 1045              	.LVL92:
 1046              	.L74:
1175:lvgl/src/lv_core/lv_indev.c ****                 lv_group_focus_obj(obj_to_focus);
 1047              		.loc 1 1175 13 is_stmt 1 view .LVU331
1175:lvgl/src/lv_core/lv_indev.c ****                 lv_group_focus_obj(obj_to_focus);
 1048              		.loc 1 1175 15 is_stmt 0 view .LVU332
 1049 007c 44B1     		cbz	r4, .L65
1176:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1050              		.loc 1 1176 17 is_stmt 1 view .LVU333
 1051 007e 3046     		mov	r0, r6
 1052              	.LVL93:
1176:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1053              		.loc 1 1176 17 is_stmt 0 view .LVU334
 1054 0080 FFF7FEFF 		bl	lv_group_focus_obj
 1055              	.LVL94:
1177:lvgl/src/lv_core/lv_indev.c ****             }
 1056              		.loc 1 1177 17 is_stmt 1 view .LVU335
1177:lvgl/src/lv_core/lv_indev.c ****             }
 1057              		.loc 1 1177 20 is_stmt 0 view .LVU336
 1058 0084 2846     		mov	r0, r5
 1059 0086 FFF7FEFF 		bl	indev_reset_check
 1060              	.LVL95:
1177:lvgl/src/lv_core/lv_indev.c ****             }
 1061              		.loc 1 1177 19 view .LVU337
 1062 008a 0028     		cmp	r0, #0
 1063 008c F2D0     		beq	.L66
 1064 008e F2E7     		b	.L61
 1065              	.LVL96:
 1066              	.L65:
1181:lvgl/src/lv_core/lv_indev.c ****                     lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
 1067              		.loc 1 1181 17 is_stmt 1 view .LVU338
1181:lvgl/src/lv_core/lv_indev.c ****                     lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
 1068              		.loc 1 1181 39 is_stmt 0 view .LVU339
 1069 0090 286A     		ldr	r0, [r5, #32]
 1070              	.LVL97:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 52


1181:lvgl/src/lv_core/lv_indev.c ****                     lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
 1071              		.loc 1 1181 19 view .LVU340
 1072 0092 90B1     		cbz	r0, .L67
1182:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(proc)) return;
 1073              		.loc 1 1182 21 is_stmt 1 view .LVU341
 1074 0094 0022     		movs	r2, #0
 1075 0096 1721     		movs	r1, #23
 1076 0098 FFF7FEFF 		bl	lv_signal_send
 1077              	.LVL98:
1183:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
 1078              		.loc 1 1183 21 view .LVU342
1183:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
 1079              		.loc 1 1183 24 is_stmt 0 view .LVU343
 1080 009c 2846     		mov	r0, r5
 1081 009e FFF7FEFF 		bl	indev_reset_check
 1082              	.LVL99:
1183:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
 1083              		.loc 1 1183 23 view .LVU344
 1084 00a2 0028     		cmp	r0, #0
 1085 00a4 E7D1     		bne	.L61
1184:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(proc)) return;
 1086              		.loc 1 1184 21 is_stmt 1 view .LVU345
 1087 00a6 0022     		movs	r2, #0
 1088 00a8 0E21     		movs	r1, #14
 1089 00aa 286A     		ldr	r0, [r5, #32]
 1090 00ac FFF7FEFF 		bl	lv_event_send
 1091              	.LVL100:
1185:lvgl/src/lv_core/lv_indev.c ****                 }
 1092              		.loc 1 1185 21 view .LVU346
1185:lvgl/src/lv_core/lv_indev.c ****                 }
 1093              		.loc 1 1185 24 is_stmt 0 view .LVU347
 1094 00b0 2846     		mov	r0, r5
 1095 00b2 FFF7FEFF 		bl	indev_reset_check
 1096              	.LVL101:
1185:lvgl/src/lv_core/lv_indev.c ****                 }
 1097              		.loc 1 1185 23 view .LVU348
 1098 00b6 0028     		cmp	r0, #0
 1099 00b8 DDD1     		bne	.L61
 1100              	.L67:
1188:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1101              		.loc 1 1188 17 is_stmt 1 view .LVU349
 1102 00ba 0022     		movs	r2, #0
 1103 00bc 1621     		movs	r1, #22
 1104 00be 3046     		mov	r0, r6
 1105 00c0 FFF7FEFF 		bl	lv_signal_send
 1106              	.LVL102:
1189:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(obj_to_focus, LV_EVENT_FOCUSED, NULL);
 1107              		.loc 1 1189 17 view .LVU350
1189:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(obj_to_focus, LV_EVENT_FOCUSED, NULL);
 1108              		.loc 1 1189 20 is_stmt 0 view .LVU351
 1109 00c4 2846     		mov	r0, r5
 1110 00c6 FFF7FEFF 		bl	indev_reset_check
 1111              	.LVL103:
1189:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(obj_to_focus, LV_EVENT_FOCUSED, NULL);
 1112              		.loc 1 1189 19 view .LVU352
 1113 00ca 0028     		cmp	r0, #0
 1114 00cc D3D1     		bne	.L61
ARM GAS  D:\Temp\cc3iPNN1.s 			page 53


1190:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1115              		.loc 1 1190 17 is_stmt 1 view .LVU353
 1116 00ce 0022     		movs	r2, #0
 1117 00d0 0D21     		movs	r1, #13
 1118 00d2 3046     		mov	r0, r6
 1119 00d4 FFF7FEFF 		bl	lv_event_send
 1120              	.LVL104:
1191:lvgl/src/lv_core/lv_indev.c ****             }
 1121              		.loc 1 1191 17 view .LVU354
1191:lvgl/src/lv_core/lv_indev.c ****             }
 1122              		.loc 1 1191 20 is_stmt 0 view .LVU355
 1123 00d8 2846     		mov	r0, r5
 1124 00da FFF7FEFF 		bl	indev_reset_check
 1125              	.LVL105:
1191:lvgl/src/lv_core/lv_indev.c ****             }
 1126              		.loc 1 1191 19 view .LVU356
 1127 00de 0028     		cmp	r0, #0
 1128 00e0 C8D0     		beq	.L66
 1129 00e2 C8E7     		b	.L61
 1130              	.LVL106:
 1131              	.L75:
1197:lvgl/src/lv_core/lv_indev.c ****                 lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
 1132              		.loc 1 1197 53 discriminator 1 view .LVU357
 1133 00e4 2B6A     		ldr	r3, [r5, #32]
1197:lvgl/src/lv_core/lv_indev.c ****                 lv_signal_send(proc->types.pointer.last_pressed, LV_SIGNAL_DEFOCUS, NULL);
 1134              		.loc 1 1197 31 discriminator 1 view .LVU358
 1135 00e6 002B     		cmp	r3, #0
 1136 00e8 A5D0     		beq	.L68
1198:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1137              		.loc 1 1198 17 is_stmt 1 view .LVU359
 1138 00ea 0022     		movs	r2, #0
 1139 00ec 1721     		movs	r1, #23
 1140 00ee 1846     		mov	r0, r3
 1141              	.LVL107:
1198:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1142              		.loc 1 1198 17 is_stmt 0 view .LVU360
 1143 00f0 FFF7FEFF 		bl	lv_signal_send
 1144              	.LVL108:
1199:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
 1145              		.loc 1 1199 17 is_stmt 1 view .LVU361
1199:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
 1146              		.loc 1 1199 20 is_stmt 0 view .LVU362
 1147 00f4 2846     		mov	r0, r5
 1148 00f6 FFF7FEFF 		bl	indev_reset_check
 1149              	.LVL109:
1199:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
 1150              		.loc 1 1199 19 view .LVU363
 1151 00fa 0028     		cmp	r0, #0
 1152 00fc BBD1     		bne	.L61
1200:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1153              		.loc 1 1200 17 is_stmt 1 view .LVU364
 1154 00fe 0022     		movs	r2, #0
 1155 0100 0E21     		movs	r1, #14
 1156 0102 286A     		ldr	r0, [r5, #32]
 1157 0104 FFF7FEFF 		bl	lv_event_send
 1158              	.LVL110:
1201:lvgl/src/lv_core/lv_indev.c ****             }
ARM GAS  D:\Temp\cc3iPNN1.s 			page 54


 1159              		.loc 1 1201 17 view .LVU365
1201:lvgl/src/lv_core/lv_indev.c ****             }
 1160              		.loc 1 1201 20 is_stmt 0 view .LVU366
 1161 0108 2846     		mov	r0, r5
 1162 010a FFF7FEFF 		bl	indev_reset_check
 1163              	.LVL111:
1201:lvgl/src/lv_core/lv_indev.c ****             }
 1164              		.loc 1 1201 19 view .LVU367
 1165 010e 0028     		cmp	r0, #0
 1166 0110 A7D0     		beq	.L69
 1167 0112 B0E7     		b	.L61
 1168              	.LVL112:
 1169              	.L76:
1208:lvgl/src/lv_core/lv_indev.c ****                         if(indev_reset_check(proc)) return;
 1170              		.loc 1 1208 25 is_stmt 1 view .LVU368
 1171 0114 0022     		movs	r2, #0
 1172 0116 1721     		movs	r1, #23
 1173 0118 1846     		mov	r0, r3
 1174              	.LVL113:
1208:lvgl/src/lv_core/lv_indev.c ****                         if(indev_reset_check(proc)) return;
 1175              		.loc 1 1208 25 is_stmt 0 view .LVU369
 1176 011a FFF7FEFF 		bl	lv_signal_send
 1177              	.LVL114:
1209:lvgl/src/lv_core/lv_indev.c ****                         lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
 1178              		.loc 1 1209 25 is_stmt 1 view .LVU370
1209:lvgl/src/lv_core/lv_indev.c ****                         lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
 1179              		.loc 1 1209 28 is_stmt 0 view .LVU371
 1180 011e 2846     		mov	r0, r5
 1181 0120 FFF7FEFF 		bl	indev_reset_check
 1182              	.LVL115:
1209:lvgl/src/lv_core/lv_indev.c ****                         lv_event_send(proc->types.pointer.last_pressed, LV_EVENT_DEFOCUSED, NULL);
 1183              		.loc 1 1209 27 view .LVU372
 1184 0124 0028     		cmp	r0, #0
 1185 0126 A6D1     		bne	.L61
1210:lvgl/src/lv_core/lv_indev.c ****                         if(indev_reset_check(proc)) return;
 1186              		.loc 1 1210 25 is_stmt 1 view .LVU373
 1187 0128 0022     		movs	r2, #0
 1188 012a 0E21     		movs	r1, #14
 1189 012c 286A     		ldr	r0, [r5, #32]
 1190 012e FFF7FEFF 		bl	lv_event_send
 1191              	.LVL116:
1211:lvgl/src/lv_core/lv_indev.c ****                     }
 1192              		.loc 1 1211 25 view .LVU374
1211:lvgl/src/lv_core/lv_indev.c ****                     }
 1193              		.loc 1 1211 28 is_stmt 0 view .LVU375
 1194 0132 2846     		mov	r0, r5
 1195 0134 FFF7FEFF 		bl	indev_reset_check
 1196              	.LVL117:
1211:lvgl/src/lv_core/lv_indev.c ****                     }
 1197              		.loc 1 1211 27 view .LVU376
 1198 0138 0028     		cmp	r0, #0
 1199 013a 92D0     		beq	.L69
 1200 013c 9BE7     		b	.L61
 1201              	.L71:
1229:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1202              		.loc 1 1229 17 is_stmt 1 view .LVU377
 1203 013e 0022     		movs	r2, #0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 55


 1204 0140 1621     		movs	r1, #22
 1205 0142 3046     		mov	r0, r6
 1206 0144 FFF7FEFF 		bl	lv_signal_send
 1207              	.LVL118:
1230:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(obj_to_focus, LV_EVENT_FOCUSED, NULL);
 1208              		.loc 1 1230 17 view .LVU378
1230:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(obj_to_focus, LV_EVENT_FOCUSED, NULL);
 1209              		.loc 1 1230 20 is_stmt 0 view .LVU379
 1210 0148 2846     		mov	r0, r5
 1211 014a FFF7FEFF 		bl	indev_reset_check
 1212              	.LVL119:
1230:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(obj_to_focus, LV_EVENT_FOCUSED, NULL);
 1213              		.loc 1 1230 19 view .LVU380
 1214 014e 0028     		cmp	r0, #0
 1215 0150 91D1     		bne	.L61
1231:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1216              		.loc 1 1231 17 is_stmt 1 view .LVU381
 1217 0152 0022     		movs	r2, #0
 1218 0154 0D21     		movs	r1, #13
 1219 0156 3046     		mov	r0, r6
 1220 0158 FFF7FEFF 		bl	lv_event_send
 1221              	.LVL120:
1232:lvgl/src/lv_core/lv_indev.c ****             }
 1222              		.loc 1 1232 17 view .LVU382
1232:lvgl/src/lv_core/lv_indev.c ****             }
 1223              		.loc 1 1232 20 is_stmt 0 view .LVU383
 1224 015c 2846     		mov	r0, r5
 1225 015e FFF7FEFF 		bl	indev_reset_check
 1226              	.LVL121:
1232:lvgl/src/lv_core/lv_indev.c ****             }
 1227              		.loc 1 1232 19 view .LVU384
 1228 0162 0028     		cmp	r0, #0
 1229 0164 86D0     		beq	.L66
 1230 0166 86E7     		b	.L61
 1231              	.L78:
 1232              		.align	2
 1233              	.L77:
 1234 0168 00000000 		.word	.LANCHOR0
 1235              	.LBE6:
 1236              		.cfi_endproc
 1237              	.LFE490:
 1239              		.section	.text.indev_drag,"ax",%progbits
 1240              		.align	1
 1241              		.syntax unified
 1242              		.thumb
 1243              		.thumb_func
 1244              		.fpu fpv4-sp-d16
 1246              	indev_drag:
 1247              	.LVL122:
 1248              	.LFB491:
1258:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * drag_obj    = get_dragged_obj(proc->types.pointer.act_obj);
 1249              		.loc 1 1258 1 is_stmt 1 view -0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 8
 1252              		@ frame_needed = 0, uses_anonymous_args = 0
1258:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * drag_obj    = get_dragged_obj(proc->types.pointer.act_obj);
 1253              		.loc 1 1258 1 is_stmt 0 view .LVU386
ARM GAS  D:\Temp\cc3iPNN1.s 			page 56


 1254 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1255              	.LCFI9:
 1256              		.cfi_def_cfa_offset 36
 1257              		.cfi_offset 4, -36
 1258              		.cfi_offset 5, -32
 1259              		.cfi_offset 6, -28
 1260              		.cfi_offset 7, -24
 1261              		.cfi_offset 8, -20
 1262              		.cfi_offset 9, -16
 1263              		.cfi_offset 10, -12
 1264              		.cfi_offset 11, -8
 1265              		.cfi_offset 14, -4
 1266 0004 83B0     		sub	sp, sp, #12
 1267              	.LCFI10:
 1268              		.cfi_def_cfa_offset 48
 1269 0006 0446     		mov	r4, r0
1259:lvgl/src/lv_core/lv_indev.c ****     bool drag_just_started = false;
 1270              		.loc 1 1259 5 is_stmt 1 view .LVU387
1259:lvgl/src/lv_core/lv_indev.c ****     bool drag_just_started = false;
 1271              		.loc 1 1259 30 is_stmt 0 view .LVU388
 1272 0008 8069     		ldr	r0, [r0, #24]
 1273              	.LVL123:
1259:lvgl/src/lv_core/lv_indev.c ****     bool drag_just_started = false;
 1274              		.loc 1 1259 30 view .LVU389
 1275 000a FFF7FEFF 		bl	get_dragged_obj
 1276              	.LVL124:
1260:lvgl/src/lv_core/lv_indev.c **** 
 1277              		.loc 1 1260 5 is_stmt 1 view .LVU390
1262:lvgl/src/lv_core/lv_indev.c **** 
 1278              		.loc 1 1262 5 view .LVU391
1262:lvgl/src/lv_core/lv_indev.c **** 
 1279              		.loc 1 1262 7 is_stmt 0 view .LVU392
 1280 000e 20B1     		cbz	r0, .L79
 1281 0010 0546     		mov	r5, r0
1264:lvgl/src/lv_core/lv_indev.c **** 
 1282              		.loc 1 1264 5 is_stmt 1 view .LVU393
1264:lvgl/src/lv_core/lv_indev.c **** 
 1283              		.loc 1 1264 8 is_stmt 0 view .LVU394
 1284 0012 FFF7FEFF 		bl	lv_obj_get_drag
 1285              	.LVL125:
1264:lvgl/src/lv_core/lv_indev.c **** 
 1286              		.loc 1 1264 7 view .LVU395
 1287 0016 8046     		mov	r8, r0
 1288 0018 10B9     		cbnz	r0, .L104
 1289              	.LVL126:
 1290              	.L79:
1396:lvgl/src/lv_core/lv_indev.c **** 
 1291              		.loc 1 1396 1 view .LVU396
 1292 001a 03B0     		add	sp, sp, #12
 1293              	.LCFI11:
 1294              		.cfi_remember_state
 1295              		.cfi_def_cfa_offset 36
 1296              		@ sp needed
 1297 001c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1298              	.LVL127:
 1299              	.L104:
 1300              	.LCFI12:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 57


 1301              		.cfi_restore_state
1266:lvgl/src/lv_core/lv_indev.c **** 
 1302              		.loc 1 1266 5 is_stmt 1 view .LVU397
1266:lvgl/src/lv_core/lv_indev.c **** 
 1303              		.loc 1 1266 34 is_stmt 0 view .LVU398
 1304 0020 2846     		mov	r0, r5
 1305 0022 FFF7FEFF 		bl	lv_obj_get_drag_dir
 1306              	.LVL128:
 1307 0026 0646     		mov	r6, r0
 1308              	.LVL129:
1269:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_sum.x += proc->types.pointer.vect.x;
 1309              		.loc 1 1269 5 is_stmt 1 view .LVU399
1269:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_sum.x += proc->types.pointer.vect.x;
 1310              		.loc 1 1269 43 is_stmt 0 view .LVU400
 1311 0028 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
1269:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_sum.x += proc->types.pointer.vect.x;
 1312              		.loc 1 1269 7 view .LVU401
 1313 002c 13F0010F 		tst	r3, #1
 1314 0030 43D1     		bne	.L98
 1315              	.LBB7:
1270:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_sum.y += proc->types.pointer.vect.y;
 1316              		.loc 1 1270 9 is_stmt 1 view .LVU402
1270:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_sum.y += proc->types.pointer.vect.y;
 1317              		.loc 1 1270 67 is_stmt 0 view .LVU403
 1318 0032 A389     		ldrh	r3, [r4, #12]
1270:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_sum.y += proc->types.pointer.vect.y;
 1319              		.loc 1 1270 40 view .LVU404
 1320 0034 228A     		ldrh	r2, [r4, #16]
 1321 0036 1344     		add	r3, r3, r2
 1322 0038 1BB2     		sxth	r3, r3
 1323 003a 2382     		strh	r3, [r4, #16]	@ movhi
1271:lvgl/src/lv_core/lv_indev.c **** 
 1324              		.loc 1 1271 9 is_stmt 1 view .LVU405
1271:lvgl/src/lv_core/lv_indev.c **** 
 1325              		.loc 1 1271 67 is_stmt 0 view .LVU406
 1326 003c E289     		ldrh	r2, [r4, #14]
1271:lvgl/src/lv_core/lv_indev.c **** 
 1327              		.loc 1 1271 40 view .LVU407
 1328 003e 618A     		ldrh	r1, [r4, #18]
 1329 0040 0A44     		add	r2, r2, r1
 1330 0042 11B2     		sxth	r1, r2
 1331 0044 6182     		strh	r1, [r4, #18]	@ movhi
1274:lvgl/src/lv_core/lv_indev.c ****         bool ver_en = false;
 1332              		.loc 1 1274 9 is_stmt 1 view .LVU408
 1333              	.LVL130:
1275:lvgl/src/lv_core/lv_indev.c ****         if(allowed_dirs == LV_DRAG_DIR_HOR || allowed_dirs == LV_DRAG_DIR_BOTH) {
 1334              		.loc 1 1275 9 view .LVU409
1276:lvgl/src/lv_core/lv_indev.c ****             hor_en = true;
 1335              		.loc 1 1276 9 view .LVU410
1276:lvgl/src/lv_core/lv_indev.c ****             hor_en = true;
 1336              		.loc 1 1276 11 is_stmt 0 view .LVU411
 1337 0046 0128     		cmp	r0, #1
 1338 0048 25D0     		beq	.L99
1276:lvgl/src/lv_core/lv_indev.c ****             hor_en = true;
 1339              		.loc 1 1276 44 discriminator 1 view .LVU412
 1340 004a 0328     		cmp	r0, #3
 1341 004c 25D0     		beq	.L100
ARM GAS  D:\Temp\cc3iPNN1.s 			page 58


1274:lvgl/src/lv_core/lv_indev.c ****         bool ver_en = false;
 1342              		.loc 1 1274 14 view .LVU413
 1343 004e 0020     		movs	r0, #0
 1344              	.LVL131:
 1345              	.L82:
1280:lvgl/src/lv_core/lv_indev.c ****             ver_en = true;
 1346              		.loc 1 1280 9 is_stmt 1 view .LVU414
1280:lvgl/src/lv_core/lv_indev.c ****             ver_en = true;
 1347              		.loc 1 1280 44 is_stmt 0 view .LVU415
 1348 0050 B21E     		subs	r2, r6, #2
 1349 0052 D2B2     		uxtb	r2, r2
1280:lvgl/src/lv_core/lv_indev.c ****             ver_en = true;
 1350              		.loc 1 1280 11 view .LVU416
 1351 0054 012A     		cmp	r2, #1
 1352 0056 22D9     		bls	.L101
1275:lvgl/src/lv_core/lv_indev.c ****         if(allowed_dirs == LV_DRAG_DIR_HOR || allowed_dirs == LV_DRAG_DIR_BOTH) {
 1353              		.loc 1 1275 14 view .LVU417
 1354 0058 0027     		movs	r7, #0
 1355              	.L83:
 1356              	.LVL132:
1284:lvgl/src/lv_core/lv_indev.c ****             if(LV_MATH_ABS(proc->types.pointer.drag_sum.x) > LV_MATH_ABS(proc->types.pointer.drag_s
 1357              		.loc 1 1284 9 is_stmt 1 view .LVU418
1284:lvgl/src/lv_core/lv_indev.c ****             if(LV_MATH_ABS(proc->types.pointer.drag_sum.x) > LV_MATH_ABS(proc->types.pointer.drag_s
 1358              		.loc 1 1284 11 is_stmt 0 view .LVU419
 1359 005a 042E     		cmp	r6, #4
 1360 005c 21D0     		beq	.L105
 1361              	.LVL133:
 1362              	.L84:
1294:lvgl/src/lv_core/lv_indev.c ****            (ver_en && LV_MATH_ABS(proc->types.pointer.drag_sum.y) >= indev_act->driver.drag_limit))
 1363              		.loc 1 1294 9 is_stmt 1 view .LVU420
1294:lvgl/src/lv_core/lv_indev.c ****            (ver_en && LV_MATH_ABS(proc->types.pointer.drag_sum.y) >= indev_act->driver.drag_limit))
 1364              		.loc 1 1294 11 is_stmt 0 view .LVU421
 1365 005e 38B1     		cbz	r0, .L86
 1366              	.L85:
1294:lvgl/src/lv_core/lv_indev.c ****            (ver_en && LV_MATH_ABS(proc->types.pointer.drag_sum.y) >= indev_act->driver.drag_limit))
 1367              		.loc 1 1294 23 discriminator 1 view .LVU422
 1368 0060 002B     		cmp	r3, #0
 1369 0062 B8BF     		it	lt
 1370 0064 5B42     		rsblt	r3, r3, #0
1294:lvgl/src/lv_core/lv_indev.c ****            (ver_en && LV_MATH_ABS(proc->types.pointer.drag_sum.y) >= indev_act->driver.drag_limit))
 1371              		.loc 1 1294 79 discriminator 1 view .LVU423
 1372 0066 9A4A     		ldr	r2, .L111
 1373 0068 1268     		ldr	r2, [r2]
1294:lvgl/src/lv_core/lv_indev.c ****            (ver_en && LV_MATH_ABS(proc->types.pointer.drag_sum.y) >= indev_act->driver.drag_limit))
 1374              		.loc 1 1294 87 discriminator 1 view .LVU424
 1375 006a 127D     		ldrb	r2, [r2, #20]	@ zero_extendqisi2
1294:lvgl/src/lv_core/lv_indev.c ****            (ver_en && LV_MATH_ABS(proc->types.pointer.drag_sum.y) >= indev_act->driver.drag_limit))
 1376              		.loc 1 1294 20 discriminator 1 view .LVU425
 1377 006c 9342     		cmp	r3, r2
 1378 006e 0ADA     		bge	.L87
 1379              	.L86:
1294:lvgl/src/lv_core/lv_indev.c ****            (ver_en && LV_MATH_ABS(proc->types.pointer.drag_sum.y) >= indev_act->driver.drag_limit))
 1380              		.loc 1 1294 100 discriminator 3 view .LVU426
 1381 0070 27B3     		cbz	r7, .L81
1295:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_limit_out = 1;
 1382              		.loc 1 1295 23 view .LVU427
 1383 0072 81EAE172 		eor	r2, r1, r1, asr #31
ARM GAS  D:\Temp\cc3iPNN1.s 			page 59


 1384 0076 A2EBE172 		sub	r2, r2, r1, asr #31
1295:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_limit_out = 1;
 1385              		.loc 1 1295 79 view .LVU428
 1386 007a 954B     		ldr	r3, .L111
 1387 007c 1B68     		ldr	r3, [r3]
1295:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_limit_out = 1;
 1388              		.loc 1 1295 87 view .LVU429
 1389 007e 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
1295:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_limit_out = 1;
 1390              		.loc 1 1295 20 view .LVU430
 1391 0080 9A42     		cmp	r2, r3
 1392 0082 C0F29D80 		blt	.L102
 1393              	.L87:
1296:lvgl/src/lv_core/lv_indev.c ****             drag_just_started                   = true;
 1394              		.loc 1 1296 13 is_stmt 1 view .LVU431
1296:lvgl/src/lv_core/lv_indev.c ****             drag_just_started                   = true;
 1395              		.loc 1 1296 48 is_stmt 0 view .LVU432
 1396 0086 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 1397 008a 43F00103 		orr	r3, r3, #1
 1398 008e 84F82A30 		strb	r3, [r4, #42]
1297:lvgl/src/lv_core/lv_indev.c ****         }
 1399              		.loc 1 1297 13 is_stmt 1 view .LVU433
 1400              	.LVL134:
1297:lvgl/src/lv_core/lv_indev.c ****         }
 1401              		.loc 1 1297 49 is_stmt 0 view .LVU434
 1402 0092 4746     		mov	r7, r8
 1403              	.LVL135:
1297:lvgl/src/lv_core/lv_indev.c ****         }
 1404              		.loc 1 1297 49 view .LVU435
 1405 0094 12E0     		b	.L81
 1406              	.LVL136:
 1407              	.L99:
1277:lvgl/src/lv_core/lv_indev.c ****         }
 1408              		.loc 1 1277 20 view .LVU436
 1409 0096 4046     		mov	r0, r8
 1410              	.LVL137:
1277:lvgl/src/lv_core/lv_indev.c ****         }
 1411              		.loc 1 1277 20 view .LVU437
 1412 0098 DAE7     		b	.L82
 1413              	.LVL138:
 1414              	.L100:
1277:lvgl/src/lv_core/lv_indev.c ****         }
 1415              		.loc 1 1277 20 view .LVU438
 1416 009a 4046     		mov	r0, r8
 1417              	.LVL139:
1277:lvgl/src/lv_core/lv_indev.c ****         }
 1418              		.loc 1 1277 20 view .LVU439
 1419 009c D8E7     		b	.L82
 1420              	.LVL140:
 1421              	.L101:
1281:lvgl/src/lv_core/lv_indev.c ****         }
 1422              		.loc 1 1281 20 view .LVU440
 1423 009e 4746     		mov	r7, r8
 1424 00a0 DBE7     		b	.L83
 1425              	.LVL141:
 1426              	.L105:
1285:lvgl/src/lv_core/lv_indev.c ****                 hor_en = true;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 60


 1427              		.loc 1 1285 13 is_stmt 1 view .LVU441
1285:lvgl/src/lv_core/lv_indev.c ****                 hor_en = true;
 1428              		.loc 1 1285 16 is_stmt 0 view .LVU442
 1429 00a2 83EAE37C 		eor	ip, r3, r3, asr #31
 1430 00a6 ACEBE37C 		sub	ip, ip, r3, asr #31
1285:lvgl/src/lv_core/lv_indev.c ****                 hor_en = true;
 1431              		.loc 1 1285 62 view .LVU443
 1432 00aa 81EAE172 		eor	r2, r1, r1, asr #31
 1433 00ae A2EBE172 		sub	r2, r2, r1, asr #31
1285:lvgl/src/lv_core/lv_indev.c ****                 hor_en = true;
 1434              		.loc 1 1285 15 view .LVU444
 1435 00b2 9445     		cmp	ip, r2
 1436 00b4 D4DC     		bgt	.L85
1289:lvgl/src/lv_core/lv_indev.c ****             }
 1437              		.loc 1 1289 24 view .LVU445
 1438 00b6 4746     		mov	r7, r8
 1439              	.LVL142:
1289:lvgl/src/lv_core/lv_indev.c ****             }
 1440              		.loc 1 1289 24 view .LVU446
 1441 00b8 D1E7     		b	.L84
 1442              	.LVL143:
 1443              	.L98:
1289:lvgl/src/lv_core/lv_indev.c ****             }
 1444              		.loc 1 1289 24 view .LVU447
 1445              	.LBE7:
1260:lvgl/src/lv_core/lv_indev.c **** 
 1446              		.loc 1 1260 10 view .LVU448
 1447 00ba 0027     		movs	r7, #0
 1448              	.LVL144:
 1449              	.L81:
1302:lvgl/src/lv_core/lv_indev.c ****         /*Set new position if the vector is not zero*/
 1450              		.loc 1 1302 5 is_stmt 1 view .LVU449
1302:lvgl/src/lv_core/lv_indev.c ****         /*Set new position if the vector is not zero*/
 1451              		.loc 1 1302 43 is_stmt 0 view .LVU450
 1452 00bc 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
1302:lvgl/src/lv_core/lv_indev.c ****         /*Set new position if the vector is not zero*/
 1453              		.loc 1 1302 7 view .LVU451
 1454 00c0 13F0010F 		tst	r3, #1
 1455 00c4 A9D0     		beq	.L79
1304:lvgl/src/lv_core/lv_indev.c **** 
 1456              		.loc 1 1304 9 is_stmt 1 view .LVU452
1304:lvgl/src/lv_core/lv_indev.c **** 
 1457              		.loc 1 1304 44 is_stmt 0 view .LVU453
 1458 00c6 E368     		ldr	r3, [r4, #12]
1304:lvgl/src/lv_core/lv_indev.c **** 
 1459              		.loc 1 1304 11 view .LVU454
 1460 00c8 002B     		cmp	r3, #0
 1461 00ca A6D0     		beq	.L79
 1462              	.LBB8:
1306:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t prev_y     = drag_obj->coords.y1;
 1463              		.loc 1 1306 13 is_stmt 1 view .LVU455
1306:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t prev_y     = drag_obj->coords.y1;
 1464              		.loc 1 1306 24 is_stmt 0 view .LVU456
 1465 00cc B5F910A0 		ldrsh	r10, [r5, #16]
 1466              	.LVL145:
1307:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t prev_par_w = lv_obj_get_width(lv_obj_get_parent(drag_obj));
 1467              		.loc 1 1307 13 is_stmt 1 view .LVU457
ARM GAS  D:\Temp\cc3iPNN1.s 			page 61


1307:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t prev_par_w = lv_obj_get_width(lv_obj_get_parent(drag_obj));
 1468              		.loc 1 1307 24 is_stmt 0 view .LVU458
 1469 00d0 B5F912B0 		ldrsh	fp, [r5, #18]
 1470              	.LVL146:
1308:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t prev_par_h = lv_obj_get_height(lv_obj_get_parent(drag_obj));
 1471              		.loc 1 1308 13 is_stmt 1 view .LVU459
1308:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t prev_par_h = lv_obj_get_height(lv_obj_get_parent(drag_obj));
 1472              		.loc 1 1308 54 is_stmt 0 view .LVU460
 1473 00d4 2846     		mov	r0, r5
 1474 00d6 FFF7FEFF 		bl	lv_obj_get_parent
 1475              	.LVL147:
1308:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t prev_par_h = lv_obj_get_height(lv_obj_get_parent(drag_obj));
 1476              		.loc 1 1308 37 view .LVU461
 1477 00da FFF7FEFF 		bl	lv_obj_get_width
 1478              	.LVL148:
 1479 00de 0090     		str	r0, [sp]
 1480              	.LVL149:
1309:lvgl/src/lv_core/lv_indev.c **** 
 1481              		.loc 1 1309 13 is_stmt 1 view .LVU462
1309:lvgl/src/lv_core/lv_indev.c **** 
 1482              		.loc 1 1309 55 is_stmt 0 view .LVU463
 1483 00e0 2846     		mov	r0, r5
 1484 00e2 FFF7FEFF 		bl	lv_obj_get_parent
 1485              	.LVL150:
1309:lvgl/src/lv_core/lv_indev.c **** 
 1486              		.loc 1 1309 37 view .LVU464
 1487 00e6 FFF7FEFF 		bl	lv_obj_get_height
 1488              	.LVL151:
 1489 00ea 0190     		str	r0, [sp, #4]
 1490              	.LVL152:
1312:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t act_y = lv_obj_get_y(drag_obj);
 1491              		.loc 1 1312 13 is_stmt 1 view .LVU465
1312:lvgl/src/lv_core/lv_indev.c ****             lv_coord_t act_y = lv_obj_get_y(drag_obj);
 1492              		.loc 1 1312 32 is_stmt 0 view .LVU466
 1493 00ec 2846     		mov	r0, r5
 1494 00ee FFF7FEFF 		bl	lv_obj_get_x
 1495              	.LVL153:
 1496 00f2 8046     		mov	r8, r0
 1497              	.LVL154:
1313:lvgl/src/lv_core/lv_indev.c **** 
 1498              		.loc 1 1313 13 is_stmt 1 view .LVU467
1313:lvgl/src/lv_core/lv_indev.c **** 
 1499              		.loc 1 1313 32 is_stmt 0 view .LVU468
 1500 00f4 2846     		mov	r0, r5
 1501 00f6 FFF7FEFF 		bl	lv_obj_get_y
 1502              	.LVL155:
 1503 00fa 8146     		mov	r9, r0
 1504              	.LVL156:
1315:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
 1505              		.loc 1 1315 13 is_stmt 1 view .LVU469
1315:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
 1506              		.loc 1 1315 15 is_stmt 0 view .LVU470
 1507 00fc 032E     		cmp	r6, #3
 1508 00fe 61D0     		beq	.L106
1322:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
 1509              		.loc 1 1322 18 is_stmt 1 view .LVU471
1322:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
ARM GAS  D:\Temp\cc3iPNN1.s 			page 62


 1510              		.loc 1 1322 20 is_stmt 0 view .LVU472
 1511 0100 012E     		cmp	r6, #1
 1512 0102 71D0     		beq	.L107
1329:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
 1513              		.loc 1 1329 18 is_stmt 1 view .LVU473
1329:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
 1514              		.loc 1 1329 20 is_stmt 0 view .LVU474
 1515 0104 022E     		cmp	r6, #2
 1516 0106 7FD0     		beq	.L108
1336:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
 1517              		.loc 1 1336 18 is_stmt 1 view .LVU475
1336:lvgl/src/lv_core/lv_indev.c ****                 if(drag_just_started) {
 1518              		.loc 1 1336 20 is_stmt 0 view .LVU476
 1519 0108 042E     		cmp	r6, #4
 1520 010a 00F08D80 		beq	.L109
 1521              	.L89:
1352:lvgl/src/lv_core/lv_indev.c ****                allowed_dirs == LV_DRAG_DIR_BOTH ||
 1522              		.loc 1 1352 13 is_stmt 1 view .LVU477
1352:lvgl/src/lv_core/lv_indev.c ****                allowed_dirs == LV_DRAG_DIR_BOTH ||
 1523              		.loc 1 1352 15 is_stmt 0 view .LVU478
 1524 010e 012E     		cmp	r6, #1
 1525 0110 0FD0     		beq	.L93
1352:lvgl/src/lv_core/lv_indev.c ****                allowed_dirs == LV_DRAG_DIR_BOTH ||
 1526              		.loc 1 1352 48 discriminator 1 view .LVU479
 1527 0112 032E     		cmp	r6, #3
 1528 0114 0DD0     		beq	.L93
1353:lvgl/src/lv_core/lv_indev.c ****                (allowed_dirs == LV_DRAG_DIR_ONE &&
 1529              		.loc 1 1353 49 view .LVU480
 1530 0116 042E     		cmp	r6, #4
 1531 0118 0FD1     		bne	.L94
1355:lvgl/src/lv_core/lv_indev.c ****                 act_x += proc->types.pointer.vect.x;
 1532              		.loc 1 1355 17 view .LVU481
 1533 011a B4F91020 		ldrsh	r2, [r4, #16]
 1534 011e 002A     		cmp	r2, #0
 1535 0120 B8BF     		it	lt
 1536 0122 5242     		rsblt	r2, r2, #0
1355:lvgl/src/lv_core/lv_indev.c ****                 act_x += proc->types.pointer.vect.x;
 1537              		.loc 1 1355 63 view .LVU482
 1538 0124 B4F91230 		ldrsh	r3, [r4, #18]
 1539 0128 002B     		cmp	r3, #0
 1540 012a B8BF     		it	lt
 1541 012c 5B42     		rsblt	r3, r3, #0
1354:lvgl/src/lv_core/lv_indev.c ****                 LV_MATH_ABS(proc->types.pointer.drag_sum.x) > LV_MATH_ABS(proc->types.pointer.drag_
 1542              		.loc 1 1354 49 view .LVU483
 1543 012e 9A42     		cmp	r2, r3
 1544 0130 03DD     		ble	.L94
 1545              	.L93:
1356:lvgl/src/lv_core/lv_indev.c ****             }
 1546              		.loc 1 1356 17 is_stmt 1 view .LVU484
1356:lvgl/src/lv_core/lv_indev.c ****             }
 1547              		.loc 1 1356 50 is_stmt 0 view .LVU485
 1548 0132 A389     		ldrh	r3, [r4, #12]
1356:lvgl/src/lv_core/lv_indev.c ****             }
 1549              		.loc 1 1356 23 view .LVU486
 1550 0134 9844     		add	r8, r8, r3
 1551              	.LVL157:
1356:lvgl/src/lv_core/lv_indev.c ****             }
ARM GAS  D:\Temp\cc3iPNN1.s 			page 63


 1552              		.loc 1 1356 23 view .LVU487
 1553 0136 0FFA88F8 		sxth	r8, r8
 1554              	.LVL158:
 1555              	.L94:
1358:lvgl/src/lv_core/lv_indev.c ****                allowed_dirs == LV_DRAG_DIR_BOTH ||
 1556              		.loc 1 1358 13 is_stmt 1 view .LVU488
1358:lvgl/src/lv_core/lv_indev.c ****                allowed_dirs == LV_DRAG_DIR_BOTH ||
 1557              		.loc 1 1358 48 is_stmt 0 view .LVU489
 1558 013a B31E     		subs	r3, r6, #2
 1559 013c DBB2     		uxtb	r3, r3
1358:lvgl/src/lv_core/lv_indev.c ****                allowed_dirs == LV_DRAG_DIR_BOTH ||
 1560              		.loc 1 1358 15 view .LVU490
 1561 013e 012B     		cmp	r3, #1
 1562 0140 0DD9     		bls	.L95
1359:lvgl/src/lv_core/lv_indev.c ****                (allowed_dirs == LV_DRAG_DIR_ONE &&
 1563              		.loc 1 1359 49 view .LVU491
 1564 0142 042E     		cmp	r6, #4
 1565 0144 0FD1     		bne	.L96
1361:lvgl/src/lv_core/lv_indev.c ****                 act_y += proc->types.pointer.vect.y;
 1566              		.loc 1 1361 17 view .LVU492
 1567 0146 B4F91020 		ldrsh	r2, [r4, #16]
 1568 014a 002A     		cmp	r2, #0
 1569 014c B8BF     		it	lt
 1570 014e 5242     		rsblt	r2, r2, #0
1361:lvgl/src/lv_core/lv_indev.c ****                 act_y += proc->types.pointer.vect.y;
 1571              		.loc 1 1361 63 view .LVU493
 1572 0150 B4F91230 		ldrsh	r3, [r4, #18]
 1573 0154 002B     		cmp	r3, #0
 1574 0156 B8BF     		it	lt
 1575 0158 5B42     		rsblt	r3, r3, #0
1360:lvgl/src/lv_core/lv_indev.c ****                 LV_MATH_ABS(proc->types.pointer.drag_sum.x) < LV_MATH_ABS(proc->types.pointer.drag_
 1576              		.loc 1 1360 49 view .LVU494
 1577 015a 9A42     		cmp	r2, r3
 1578 015c 03DA     		bge	.L96
 1579              	.L95:
1362:lvgl/src/lv_core/lv_indev.c ****             }
 1580              		.loc 1 1362 17 is_stmt 1 view .LVU495
1362:lvgl/src/lv_core/lv_indev.c ****             }
 1581              		.loc 1 1362 50 is_stmt 0 view .LVU496
 1582 015e E389     		ldrh	r3, [r4, #14]
1362:lvgl/src/lv_core/lv_indev.c ****             }
 1583              		.loc 1 1362 23 view .LVU497
 1584 0160 9944     		add	r9, r9, r3
 1585              	.LVL159:
1362:lvgl/src/lv_core/lv_indev.c ****             }
 1586              		.loc 1 1362 23 view .LVU498
 1587 0162 0FFA89F9 		sxth	r9, r9
 1588              	.LVL160:
 1589              	.L96:
1365:lvgl/src/lv_core/lv_indev.c ****                 lv_disp_get_inv_buf_size(indev_act->driver.disp); /*Get the number of currently inv
 1590              		.loc 1 1365 13 is_stmt 1 view .LVU499
1366:lvgl/src/lv_core/lv_indev.c **** 
 1591              		.loc 1 1366 51 is_stmt 0 view .LVU500
 1592 0166 5A4B     		ldr	r3, .L111
 1593 0168 1B68     		ldr	r3, [r3]
1366:lvgl/src/lv_core/lv_indev.c **** 
 1594              		.loc 1 1366 17 view .LVU501
ARM GAS  D:\Temp\cc3iPNN1.s 			page 64


 1595 016a D868     		ldr	r0, [r3, #12]
 1596 016c FFF7FEFF 		bl	lv_disp_get_inv_buf_size
 1597              	.LVL161:
 1598 0170 0646     		mov	r6, r0
 1599              	.LVL162:
1368:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_in_prog = 1;
 1600              		.loc 1 1368 13 is_stmt 1 view .LVU502
 1601 0172 4A46     		mov	r2, r9
 1602 0174 4146     		mov	r1, r8
 1603 0176 2846     		mov	r0, r5
 1604 0178 FFF7FEFF 		bl	lv_obj_set_pos
 1605              	.LVL163:
1369:lvgl/src/lv_core/lv_indev.c **** 
 1606              		.loc 1 1369 13 view .LVU503
1369:lvgl/src/lv_core/lv_indev.c **** 
 1607              		.loc 1 1369 46 is_stmt 0 view .LVU504
 1608 017c 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 1609 0180 43F00203 		orr	r3, r3, #2
 1610 0184 84F82A30 		strb	r3, [r4, #42]
1372:lvgl/src/lv_core/lv_indev.c ****                 /*In a special case if the object is moved on a page and
 1611              		.loc 1 1372 13 is_stmt 1 view .LVU505
1372:lvgl/src/lv_core/lv_indev.c ****                 /*In a special case if the object is moved on a page and
 1612              		.loc 1 1372 32 is_stmt 0 view .LVU506
 1613 0188 B5F91030 		ldrsh	r3, [r5, #16]
1372:lvgl/src/lv_core/lv_indev.c ****                 /*In a special case if the object is moved on a page and
 1614              		.loc 1 1372 15 view .LVU507
 1615 018c 5345     		cmp	r3, r10
 1616 018e 78D0     		beq	.L110
 1617              	.LVL164:
 1618              	.L97:
1386:lvgl/src/lv_core/lv_indev.c ****                 drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_BEGIN, indev_act);
 1619              		.loc 1 1386 13 is_stmt 1 view .LVU508
1386:lvgl/src/lv_core/lv_indev.c ****                 drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_BEGIN, indev_act);
 1620              		.loc 1 1386 15 is_stmt 0 view .LVU509
 1621 0190 002F     		cmp	r7, #0
 1622 0192 3FF442AF 		beq	.L79
1387:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1623              		.loc 1 1387 17 is_stmt 1 view .LVU510
1387:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1624              		.loc 1 1387 25 is_stmt 0 view .LVU511
 1625 0196 EB69     		ldr	r3, [r5, #28]
1387:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1626              		.loc 1 1387 17 view .LVU512
 1627 0198 4D4A     		ldr	r2, .L111
 1628 019a 1268     		ldr	r2, [r2]
 1629 019c 1121     		movs	r1, #17
 1630 019e 2846     		mov	r0, r5
 1631 01a0 9847     		blx	r3
 1632              	.LVL165:
1388:lvgl/src/lv_core/lv_indev.c **** 
 1633              		.loc 1 1388 17 is_stmt 1 view .LVU513
1388:lvgl/src/lv_core/lv_indev.c **** 
 1634              		.loc 1 1388 20 is_stmt 0 view .LVU514
 1635 01a2 2046     		mov	r0, r4
 1636 01a4 FFF7FEFF 		bl	indev_reset_check
 1637              	.LVL166:
1388:lvgl/src/lv_core/lv_indev.c **** 
ARM GAS  D:\Temp\cc3iPNN1.s 			page 65


 1638              		.loc 1 1388 19 view .LVU515
 1639 01a8 0028     		cmp	r0, #0
 1640 01aa 7FF436AF 		bne	.L79
1390:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 1641              		.loc 1 1390 17 is_stmt 1 view .LVU516
 1642 01ae 0022     		movs	r2, #0
 1643 01b0 0821     		movs	r1, #8
 1644 01b2 2846     		mov	r0, r5
 1645 01b4 FFF7FEFF 		bl	lv_event_send
 1646              	.LVL167:
1391:lvgl/src/lv_core/lv_indev.c ****             }
 1647              		.loc 1 1391 17 view .LVU517
1391:lvgl/src/lv_core/lv_indev.c ****             }
 1648              		.loc 1 1391 20 is_stmt 0 view .LVU518
 1649 01b8 2046     		mov	r0, r4
 1650 01ba FFF7FEFF 		bl	indev_reset_check
 1651              	.LVL168:
 1652 01be 2CE7     		b	.L79
 1653              	.LVL169:
 1654              	.L102:
1391:lvgl/src/lv_core/lv_indev.c ****             }
 1655              		.loc 1 1391 20 view .LVU519
 1656              	.LBE8:
1260:lvgl/src/lv_core/lv_indev.c **** 
 1657              		.loc 1 1260 10 view .LVU520
 1658 01c0 0027     		movs	r7, #0
 1659              	.LVL170:
1260:lvgl/src/lv_core/lv_indev.c **** 
 1660              		.loc 1 1260 10 view .LVU521
 1661 01c2 7BE7     		b	.L81
 1662              	.LVL171:
 1663              	.L106:
 1664              	.LBB11:
1316:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_dir = LV_DRAG_DIR_BOTH;
 1665              		.loc 1 1316 17 is_stmt 1 view .LVU522
1316:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_dir = LV_DRAG_DIR_BOTH;
 1666              		.loc 1 1316 19 is_stmt 0 view .LVU523
 1667 01c4 002F     		cmp	r7, #0
 1668 01c6 A2D0     		beq	.L89
1317:lvgl/src/lv_core/lv_indev.c ****                     act_x += proc->types.pointer.drag_sum.x;
 1669              		.loc 1 1317 21 is_stmt 1 view .LVU524
1317:lvgl/src/lv_core/lv_indev.c ****                     act_x += proc->types.pointer.drag_sum.x;
 1670              		.loc 1 1317 50 is_stmt 0 view .LVU525
 1671 01c8 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 1672 01cc 0322     		movs	r2, #3
 1673 01ce 62F38403 		bfi	r3, r2, #2, #3
 1674 01d2 84F82A30 		strb	r3, [r4, #42]
1318:lvgl/src/lv_core/lv_indev.c ****                     act_y += proc->types.pointer.drag_sum.y;
 1675              		.loc 1 1318 21 is_stmt 1 view .LVU526
1318:lvgl/src/lv_core/lv_indev.c ****                     act_y += proc->types.pointer.drag_sum.y;
 1676              		.loc 1 1318 58 is_stmt 0 view .LVU527
 1677 01d6 238A     		ldrh	r3, [r4, #16]
1318:lvgl/src/lv_core/lv_indev.c ****                     act_y += proc->types.pointer.drag_sum.y;
 1678              		.loc 1 1318 27 view .LVU528
 1679 01d8 9844     		add	r8, r8, r3
 1680              	.LVL172:
1318:lvgl/src/lv_core/lv_indev.c ****                     act_y += proc->types.pointer.drag_sum.y;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 66


 1681              		.loc 1 1318 27 view .LVU529
 1682 01da 0FFA88F8 		sxth	r8, r8
 1683              	.LVL173:
1319:lvgl/src/lv_core/lv_indev.c ****                 }
 1684              		.loc 1 1319 21 is_stmt 1 view .LVU530
1319:lvgl/src/lv_core/lv_indev.c ****                 }
 1685              		.loc 1 1319 58 is_stmt 0 view .LVU531
 1686 01de 638A     		ldrh	r3, [r4, #18]
1319:lvgl/src/lv_core/lv_indev.c ****                 }
 1687              		.loc 1 1319 27 view .LVU532
 1688 01e0 9944     		add	r9, r9, r3
 1689              	.LVL174:
1319:lvgl/src/lv_core/lv_indev.c ****                 }
 1690              		.loc 1 1319 27 view .LVU533
 1691 01e2 0FFA89F9 		sxth	r9, r9
 1692              	.LVL175:
1319:lvgl/src/lv_core/lv_indev.c ****                 }
 1693              		.loc 1 1319 27 view .LVU534
 1694 01e6 92E7     		b	.L89
 1695              	.L107:
1323:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_dir = LV_DRAG_DIR_HOR;
 1696              		.loc 1 1323 17 is_stmt 1 view .LVU535
1323:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_dir = LV_DRAG_DIR_HOR;
 1697              		.loc 1 1323 19 is_stmt 0 view .LVU536
 1698 01e8 002F     		cmp	r7, #0
 1699 01ea 90D0     		beq	.L89
1324:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_sum.y = 0;
 1700              		.loc 1 1324 21 is_stmt 1 view .LVU537
1324:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_sum.y = 0;
 1701              		.loc 1 1324 50 is_stmt 0 view .LVU538
 1702 01ec 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 1703 01f0 0122     		movs	r2, #1
 1704 01f2 62F38403 		bfi	r3, r2, #2, #3
 1705 01f6 84F82A30 		strb	r3, [r4, #42]
1325:lvgl/src/lv_core/lv_indev.c ****                     act_x += proc->types.pointer.drag_sum.x;
 1706              		.loc 1 1325 21 is_stmt 1 view .LVU539
1325:lvgl/src/lv_core/lv_indev.c ****                     act_x += proc->types.pointer.drag_sum.x;
 1707              		.loc 1 1325 52 is_stmt 0 view .LVU540
 1708 01fa 0023     		movs	r3, #0
 1709 01fc 6382     		strh	r3, [r4, #18]	@ movhi
1326:lvgl/src/lv_core/lv_indev.c ****                 }
 1710              		.loc 1 1326 21 is_stmt 1 view .LVU541
1326:lvgl/src/lv_core/lv_indev.c ****                 }
 1711              		.loc 1 1326 58 is_stmt 0 view .LVU542
 1712 01fe 238A     		ldrh	r3, [r4, #16]
1326:lvgl/src/lv_core/lv_indev.c ****                 }
 1713              		.loc 1 1326 27 view .LVU543
 1714 0200 9844     		add	r8, r8, r3
 1715              	.LVL176:
1326:lvgl/src/lv_core/lv_indev.c ****                 }
 1716              		.loc 1 1326 27 view .LVU544
 1717 0202 0FFA88F8 		sxth	r8, r8
 1718              	.LVL177:
1326:lvgl/src/lv_core/lv_indev.c ****                 }
 1719              		.loc 1 1326 27 view .LVU545
 1720 0206 82E7     		b	.L89
 1721              	.L108:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 67


1330:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_dir = LV_DRAG_DIR_VER;
 1722              		.loc 1 1330 17 is_stmt 1 view .LVU546
1330:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_dir = LV_DRAG_DIR_VER;
 1723              		.loc 1 1330 19 is_stmt 0 view .LVU547
 1724 0208 002F     		cmp	r7, #0
 1725 020a 80D0     		beq	.L89
1331:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_sum.x = 0;
 1726              		.loc 1 1331 21 is_stmt 1 view .LVU548
1331:lvgl/src/lv_core/lv_indev.c ****                     proc->types.pointer.drag_sum.x = 0;
 1727              		.loc 1 1331 50 is_stmt 0 view .LVU549
 1728 020c 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 1729 0210 0222     		movs	r2, #2
 1730 0212 62F38403 		bfi	r3, r2, #2, #3
 1731 0216 84F82A30 		strb	r3, [r4, #42]
1332:lvgl/src/lv_core/lv_indev.c ****                     act_y += proc->types.pointer.drag_sum.y;
 1732              		.loc 1 1332 21 is_stmt 1 view .LVU550
1332:lvgl/src/lv_core/lv_indev.c ****                     act_y += proc->types.pointer.drag_sum.y;
 1733              		.loc 1 1332 52 is_stmt 0 view .LVU551
 1734 021a 0023     		movs	r3, #0
 1735 021c 2382     		strh	r3, [r4, #16]	@ movhi
1333:lvgl/src/lv_core/lv_indev.c ****                 }
 1736              		.loc 1 1333 21 is_stmt 1 view .LVU552
1333:lvgl/src/lv_core/lv_indev.c ****                 }
 1737              		.loc 1 1333 58 is_stmt 0 view .LVU553
 1738 021e 638A     		ldrh	r3, [r4, #18]
1333:lvgl/src/lv_core/lv_indev.c ****                 }
 1739              		.loc 1 1333 27 view .LVU554
 1740 0220 9944     		add	r9, r9, r3
 1741              	.LVL178:
1333:lvgl/src/lv_core/lv_indev.c ****                 }
 1742              		.loc 1 1333 27 view .LVU555
 1743 0222 0FFA89F9 		sxth	r9, r9
 1744              	.LVL179:
1333:lvgl/src/lv_core/lv_indev.c ****                 }
 1745              		.loc 1 1333 27 view .LVU556
 1746 0226 72E7     		b	.L89
 1747              	.L109:
1337:lvgl/src/lv_core/lv_indev.c ****                     if(LV_MATH_ABS(proc->types.pointer.drag_sum.x) > LV_MATH_ABS(proc->types.pointe
 1748              		.loc 1 1337 17 is_stmt 1 view .LVU557
1337:lvgl/src/lv_core/lv_indev.c ****                     if(LV_MATH_ABS(proc->types.pointer.drag_sum.x) > LV_MATH_ABS(proc->types.pointe
 1749              		.loc 1 1337 19 is_stmt 0 view .LVU558
 1750 0228 002F     		cmp	r7, #0
 1751 022a 3FF470AF 		beq	.L89
1338:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_dir = LV_DRAG_DIR_HOR;
 1752              		.loc 1 1338 21 is_stmt 1 view .LVU559
1338:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_dir = LV_DRAG_DIR_HOR;
 1753              		.loc 1 1338 24 is_stmt 0 view .LVU560
 1754 022e B4F91020 		ldrsh	r2, [r4, #16]
 1755 0232 82EAE270 		eor	r0, r2, r2, asr #31
 1756 0236 A0EBE270 		sub	r0, r0, r2, asr #31
1338:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_dir = LV_DRAG_DIR_HOR;
 1757              		.loc 1 1338 70 view .LVU561
 1758 023a B4F91230 		ldrsh	r3, [r4, #18]
 1759 023e 83EAE371 		eor	r1, r3, r3, asr #31
 1760 0242 A1EBE371 		sub	r1, r1, r3, asr #31
1338:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_dir = LV_DRAG_DIR_HOR;
 1761              		.loc 1 1338 23 view .LVU562
ARM GAS  D:\Temp\cc3iPNN1.s 			page 68


 1762 0246 8842     		cmp	r0, r1
 1763 0248 0DDD     		ble	.L92
1339:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_sum.y = 0;
 1764              		.loc 1 1339 25 is_stmt 1 view .LVU563
1339:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_sum.y = 0;
 1765              		.loc 1 1339 54 is_stmt 0 view .LVU564
 1766 024a 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 1767 024e 0121     		movs	r1, #1
 1768 0250 61F38403 		bfi	r3, r1, #2, #3
 1769 0254 84F82A30 		strb	r3, [r4, #42]
1340:lvgl/src/lv_core/lv_indev.c ****                         act_x += proc->types.pointer.drag_sum.x;
 1770              		.loc 1 1340 25 is_stmt 1 view .LVU565
1340:lvgl/src/lv_core/lv_indev.c ****                         act_x += proc->types.pointer.drag_sum.x;
 1771              		.loc 1 1340 56 is_stmt 0 view .LVU566
 1772 0258 0023     		movs	r3, #0
 1773 025a 6382     		strh	r3, [r4, #18]	@ movhi
1341:lvgl/src/lv_core/lv_indev.c ****                     }
 1774              		.loc 1 1341 25 is_stmt 1 view .LVU567
1341:lvgl/src/lv_core/lv_indev.c ****                     }
 1775              		.loc 1 1341 31 is_stmt 0 view .LVU568
 1776 025c 18FA82F8 		uxtah	r8, r8, r2
 1777              	.LVL180:
1341:lvgl/src/lv_core/lv_indev.c ****                     }
 1778              		.loc 1 1341 31 view .LVU569
 1779 0260 0FFA88F8 		sxth	r8, r8
 1780              	.LVL181:
1341:lvgl/src/lv_core/lv_indev.c ****                     }
 1781              		.loc 1 1341 31 view .LVU570
 1782 0264 53E7     		b	.L89
 1783              	.L92:
1344:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_sum.x = 0;
 1784              		.loc 1 1344 25 is_stmt 1 view .LVU571
1344:lvgl/src/lv_core/lv_indev.c ****                         proc->types.pointer.drag_sum.x = 0;
 1785              		.loc 1 1344 54 is_stmt 0 view .LVU572
 1786 0266 94F82A20 		ldrb	r2, [r4, #42]	@ zero_extendqisi2
 1787 026a 0221     		movs	r1, #2
 1788 026c 61F38402 		bfi	r2, r1, #2, #3
 1789 0270 84F82A20 		strb	r2, [r4, #42]
1345:lvgl/src/lv_core/lv_indev.c ****                         act_y += proc->types.pointer.drag_sum.y;
 1790              		.loc 1 1345 25 is_stmt 1 view .LVU573
1345:lvgl/src/lv_core/lv_indev.c ****                         act_y += proc->types.pointer.drag_sum.y;
 1791              		.loc 1 1345 56 is_stmt 0 view .LVU574
 1792 0274 0022     		movs	r2, #0
 1793 0276 2282     		strh	r2, [r4, #16]	@ movhi
1346:lvgl/src/lv_core/lv_indev.c ****                     }
 1794              		.loc 1 1346 25 is_stmt 1 view .LVU575
1346:lvgl/src/lv_core/lv_indev.c ****                     }
 1795              		.loc 1 1346 31 is_stmt 0 view .LVU576
 1796 0278 19FA83F9 		uxtah	r9, r9, r3
 1797              	.LVL182:
1346:lvgl/src/lv_core/lv_indev.c ****                     }
 1798              		.loc 1 1346 31 view .LVU577
 1799 027c 0FFA89F9 		sxth	r9, r9
 1800              	.LVL183:
1346:lvgl/src/lv_core/lv_indev.c ****                     }
 1801              		.loc 1 1346 31 view .LVU578
 1802 0280 45E7     		b	.L89
ARM GAS  D:\Temp\cc3iPNN1.s 			page 69


 1803              	.LVL184:
 1804              	.L110:
1372:lvgl/src/lv_core/lv_indev.c ****                 /*In a special case if the object is moved on a page and
 1805              		.loc 1 1372 65 discriminator 1 view .LVU579
 1806 0282 B5F91230 		ldrsh	r3, [r5, #18]
1372:lvgl/src/lv_core/lv_indev.c ****                 /*In a special case if the object is moved on a page and
 1807              		.loc 1 1372 46 discriminator 1 view .LVU580
 1808 0286 5B45     		cmp	r3, fp
 1809 0288 82D1     		bne	.L97
 1810              	.LBB9:
1376:lvgl/src/lv_core/lv_indev.c ****                 lv_coord_t act_par_h = lv_obj_get_height(lv_obj_get_parent(drag_obj));
 1811              		.loc 1 1376 17 is_stmt 1 view .LVU581
1376:lvgl/src/lv_core/lv_indev.c ****                 lv_coord_t act_par_h = lv_obj_get_height(lv_obj_get_parent(drag_obj));
 1812              		.loc 1 1376 57 is_stmt 0 view .LVU582
 1813 028a 2846     		mov	r0, r5
 1814 028c FFF7FEFF 		bl	lv_obj_get_parent
 1815              	.LVL185:
1376:lvgl/src/lv_core/lv_indev.c ****                 lv_coord_t act_par_h = lv_obj_get_height(lv_obj_get_parent(drag_obj));
 1816              		.loc 1 1376 40 view .LVU583
 1817 0290 FFF7FEFF 		bl	lv_obj_get_width
 1818              	.LVL186:
 1819 0294 8046     		mov	r8, r0
 1820              	.LVL187:
1377:lvgl/src/lv_core/lv_indev.c ****                 if(act_par_w == prev_par_w && act_par_h == prev_par_h) {
 1821              		.loc 1 1377 17 is_stmt 1 view .LVU584
1377:lvgl/src/lv_core/lv_indev.c ****                 if(act_par_w == prev_par_w && act_par_h == prev_par_h) {
 1822              		.loc 1 1377 58 is_stmt 0 view .LVU585
 1823 0296 2846     		mov	r0, r5
 1824 0298 FFF7FEFF 		bl	lv_obj_get_parent
 1825              	.LVL188:
1377:lvgl/src/lv_core/lv_indev.c ****                 if(act_par_w == prev_par_w && act_par_h == prev_par_h) {
 1826              		.loc 1 1377 40 view .LVU586
 1827 029c FFF7FEFF 		bl	lv_obj_get_height
 1828              	.LVL189:
1378:lvgl/src/lv_core/lv_indev.c ****                     uint16_t new_inv_buf_size = lv_disp_get_inv_buf_size(indev_act->driver.disp);
 1829              		.loc 1 1378 17 is_stmt 1 view .LVU587
1378:lvgl/src/lv_core/lv_indev.c ****                     uint16_t new_inv_buf_size = lv_disp_get_inv_buf_size(indev_act->driver.disp);
 1830              		.loc 1 1378 19 is_stmt 0 view .LVU588
 1831 02a0 009B     		ldr	r3, [sp]
 1832 02a2 4345     		cmp	r3, r8
 1833 02a4 7FF474AF 		bne	.L97
1378:lvgl/src/lv_core/lv_indev.c ****                     uint16_t new_inv_buf_size = lv_disp_get_inv_buf_size(indev_act->driver.disp);
 1834              		.loc 1 1378 44 discriminator 1 view .LVU589
 1835 02a8 019B     		ldr	r3, [sp, #4]
 1836 02aa 8342     		cmp	r3, r0
 1837 02ac 7FF470AF 		bne	.L97
 1838              	.LBB10:
1379:lvgl/src/lv_core/lv_indev.c ****                     _lv_disp_pop_from_inv_buf(indev_act->driver.disp, new_inv_buf_size - inv_buf_si
 1839              		.loc 1 1379 21 is_stmt 1 view .LVU590
1379:lvgl/src/lv_core/lv_indev.c ****                     _lv_disp_pop_from_inv_buf(indev_act->driver.disp, new_inv_buf_size - inv_buf_si
 1840              		.loc 1 1379 83 is_stmt 0 view .LVU591
 1841 02b0 DFF81C80 		ldr	r8, .L111
 1842              	.LVL190:
1379:lvgl/src/lv_core/lv_indev.c ****                     _lv_disp_pop_from_inv_buf(indev_act->driver.disp, new_inv_buf_size - inv_buf_si
 1843              		.loc 1 1379 83 view .LVU592
 1844 02b4 D8F80030 		ldr	r3, [r8]
1379:lvgl/src/lv_core/lv_indev.c ****                     _lv_disp_pop_from_inv_buf(indev_act->driver.disp, new_inv_buf_size - inv_buf_si
ARM GAS  D:\Temp\cc3iPNN1.s 			page 70


 1845              		.loc 1 1379 49 view .LVU593
 1846 02b8 D868     		ldr	r0, [r3, #12]
 1847              	.LVL191:
1379:lvgl/src/lv_core/lv_indev.c ****                     _lv_disp_pop_from_inv_buf(indev_act->driver.disp, new_inv_buf_size - inv_buf_si
 1848              		.loc 1 1379 49 view .LVU594
 1849 02ba FFF7FEFF 		bl	lv_disp_get_inv_buf_size
 1850              	.LVL192:
1380:lvgl/src/lv_core/lv_indev.c ****                 }
 1851              		.loc 1 1380 21 is_stmt 1 view .LVU595
1380:lvgl/src/lv_core/lv_indev.c ****                 }
 1852              		.loc 1 1380 56 is_stmt 0 view .LVU596
 1853 02be D8F80030 		ldr	r3, [r8]
1380:lvgl/src/lv_core/lv_indev.c ****                 }
 1854              		.loc 1 1380 21 view .LVU597
 1855 02c2 811B     		subs	r1, r0, r6
 1856 02c4 89B2     		uxth	r1, r1
 1857 02c6 D868     		ldr	r0, [r3, #12]
 1858              	.LVL193:
1380:lvgl/src/lv_core/lv_indev.c ****                 }
 1859              		.loc 1 1380 21 view .LVU598
 1860 02c8 FFF7FEFF 		bl	_lv_disp_pop_from_inv_buf
 1861              	.LVL194:
 1862 02cc 60E7     		b	.L97
 1863              	.L112:
 1864 02ce 00BF     		.align	2
 1865              	.L111:
 1866 02d0 00000000 		.word	.LANCHOR1
 1867              	.LBE10:
 1868              	.LBE9:
 1869              	.LBE11:
 1870              		.cfi_endproc
 1871              	.LFE491:
 1873              		.section	.text.indev_gesture,"ax",%progbits
 1874              		.align	1
 1875              		.syntax unified
 1876              		.thumb
 1877              		.thumb_func
 1878              		.fpu fpv4-sp-d16
 1880              	indev_gesture:
 1881              	.LVL195:
 1882              	.LFB494:
1492:lvgl/src/lv_core/lv_indev.c **** 
 1883              		.loc 1 1492 1 is_stmt 1 view -0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 0
 1886              		@ frame_needed = 0, uses_anonymous_args = 0
1492:lvgl/src/lv_core/lv_indev.c **** 
 1887              		.loc 1 1492 1 is_stmt 0 view .LVU600
 1888 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1889              	.LCFI13:
 1890              		.cfi_def_cfa_offset 24
 1891              		.cfi_offset 3, -24
 1892              		.cfi_offset 4, -20
 1893              		.cfi_offset 5, -16
 1894              		.cfi_offset 6, -12
 1895              		.cfi_offset 7, -8
 1896              		.cfi_offset 14, -4
ARM GAS  D:\Temp\cc3iPNN1.s 			page 71


1494:lvgl/src/lv_core/lv_indev.c **** 
 1897              		.loc 1 1494 5 is_stmt 1 view .LVU601
1494:lvgl/src/lv_core/lv_indev.c **** 
 1898              		.loc 1 1494 8 is_stmt 0 view .LVU602
 1899 0002 90F82A30 		ldrb	r3, [r0, #42]	@ zero_extendqisi2
1494:lvgl/src/lv_core/lv_indev.c **** 
 1900              		.loc 1 1494 7 view .LVU603
 1901 0006 13F0200F 		tst	r3, #32
 1902 000a 52D1     		bne	.L113
 1903 000c 0546     		mov	r5, r0
1496:lvgl/src/lv_core/lv_indev.c **** 
 1904              		.loc 1 1496 5 is_stmt 1 view .LVU604
1496:lvgl/src/lv_core/lv_indev.c **** 
 1905              		.loc 1 1496 16 is_stmt 0 view .LVU605
 1906 000e 8469     		ldr	r4, [r0, #24]
 1907              	.LVL196:
1499:lvgl/src/lv_core/lv_indev.c ****         gesture_obj = lv_obj_get_parent(gesture_obj);
 1908              		.loc 1 1499 5 is_stmt 1 view .LVU606
 1909              	.L115:
1499:lvgl/src/lv_core/lv_indev.c ****         gesture_obj = lv_obj_get_parent(gesture_obj);
 1910              		.loc 1 1499 10 is_stmt 0 view .LVU607
 1911 0010 44B1     		cbz	r4, .L116
1499:lvgl/src/lv_core/lv_indev.c ****         gesture_obj = lv_obj_get_parent(gesture_obj);
 1912              		.loc 1 1499 26 discriminator 1 view .LVU608
 1913 0012 2046     		mov	r0, r4
 1914 0014 FFF7FEFF 		bl	lv_obj_get_gesture_parent
 1915              	.LVL197:
1499:lvgl/src/lv_core/lv_indev.c ****         gesture_obj = lv_obj_get_parent(gesture_obj);
 1916              		.loc 1 1499 23 discriminator 1 view .LVU609
 1917 0018 20B1     		cbz	r0, .L116
1500:lvgl/src/lv_core/lv_indev.c ****     }
 1918              		.loc 1 1500 9 is_stmt 1 view .LVU610
1500:lvgl/src/lv_core/lv_indev.c ****     }
 1919              		.loc 1 1500 23 is_stmt 0 view .LVU611
 1920 001a 2046     		mov	r0, r4
 1921 001c FFF7FEFF 		bl	lv_obj_get_parent
 1922              	.LVL198:
 1923 0020 0446     		mov	r4, r0
 1924              	.LVL199:
1500:lvgl/src/lv_core/lv_indev.c ****     }
 1925              		.loc 1 1500 23 view .LVU612
 1926 0022 F5E7     		b	.L115
 1927              	.LVL200:
 1928              	.L116:
1503:lvgl/src/lv_core/lv_indev.c **** 
 1929              		.loc 1 1503 5 is_stmt 1 view .LVU613
1503:lvgl/src/lv_core/lv_indev.c **** 
 1930              		.loc 1 1503 7 is_stmt 0 view .LVU614
 1931 0024 002C     		cmp	r4, #0
 1932 0026 44D0     		beq	.L113
1505:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.vect.y) < indev_act->driver.gesture_min_velocity)) {
 1933              		.loc 1 1505 5 is_stmt 1 view .LVU615
1505:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.vect.y) < indev_act->driver.gesture_min_velocity)) {
 1934              		.loc 1 1505 9 is_stmt 0 view .LVU616
 1935 0028 B5F90C30 		ldrsh	r3, [r5, #12]
 1936 002c 83EAE370 		eor	r0, r3, r3, asr #31
 1937 0030 A0EBE370 		sub	r0, r0, r3, asr #31
ARM GAS  D:\Temp\cc3iPNN1.s 			page 72


1505:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.vect.y) < indev_act->driver.gesture_min_velocity)) {
 1938              		.loc 1 1505 60 view .LVU617
 1939 0034 2B4A     		ldr	r2, .L126
 1940 0036 1268     		ldr	r2, [r2]
1505:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.vect.y) < indev_act->driver.gesture_min_velocity)) {
 1941              		.loc 1 1505 68 view .LVU618
 1942 0038 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
1505:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.vect.y) < indev_act->driver.gesture_min_velocity)) {
 1943              		.loc 1 1505 7 view .LVU619
 1944 003a 8842     		cmp	r0, r1
 1945 003c 09DA     		bge	.L118
1506:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.gesture_sum.x = 0;
 1946              		.loc 1 1506 9 discriminator 1 view .LVU620
 1947 003e B5F90E00 		ldrsh	r0, [r5, #14]
 1948 0042 0028     		cmp	r0, #0
 1949 0044 B8BF     		it	lt
 1950 0046 4042     		rsblt	r0, r0, #0
1505:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.vect.y) < indev_act->driver.gesture_min_velocity)) {
 1951              		.loc 1 1505 91 discriminator 1 view .LVU621
 1952 0048 8142     		cmp	r1, r0
 1953 004a 02DD     		ble	.L118
1507:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.gesture_sum.y = 0;
 1954              		.loc 1 1507 9 is_stmt 1 view .LVU622
1507:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.gesture_sum.y = 0;
 1955              		.loc 1 1507 43 is_stmt 0 view .LVU623
 1956 004c 0021     		movs	r1, #0
 1957 004e E984     		strh	r1, [r5, #38]	@ movhi
1508:lvgl/src/lv_core/lv_indev.c ****     }
 1958              		.loc 1 1508 9 is_stmt 1 view .LVU624
1508:lvgl/src/lv_core/lv_indev.c ****     }
 1959              		.loc 1 1508 43 is_stmt 0 view .LVU625
 1960 0050 2985     		strh	r1, [r5, #40]	@ movhi
 1961              	.L118:
1512:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.gesture_sum.y += proc->types.pointer.vect.y;
 1962              		.loc 1 1512 5 is_stmt 1 view .LVU626
1512:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.gesture_sum.y += proc->types.pointer.vect.y;
 1963              		.loc 1 1512 39 is_stmt 0 view .LVU627
 1964 0052 E98C     		ldrh	r1, [r5, #38]
 1965 0054 11FA83F3 		uxtah	r3, r1, r3
 1966 0058 1BB2     		sxth	r3, r3
 1967 005a EB84     		strh	r3, [r5, #38]	@ movhi
1513:lvgl/src/lv_core/lv_indev.c **** 
 1968              		.loc 1 1513 5 is_stmt 1 view .LVU628
1513:lvgl/src/lv_core/lv_indev.c **** 
 1969              		.loc 1 1513 66 is_stmt 0 view .LVU629
 1970 005c E989     		ldrh	r1, [r5, #14]
1513:lvgl/src/lv_core/lv_indev.c **** 
 1971              		.loc 1 1513 39 view .LVU630
 1972 005e 288D     		ldrh	r0, [r5, #40]
 1973 0060 0144     		add	r1, r1, r0
 1974 0062 09B2     		sxth	r1, r1
 1975 0064 2985     		strh	r1, [r5, #40]	@ movhi
1515:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.gesture_sum.y) > indev_act->driver.gesture_limit)) {
 1976              		.loc 1 1515 5 is_stmt 1 view .LVU631
1515:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.gesture_sum.y) > indev_act->driver.gesture_limit)) {
 1977              		.loc 1 1515 9 is_stmt 0 view .LVU632
 1978 0066 83EAE376 		eor	r6, r3, r3, asr #31
ARM GAS  D:\Temp\cc3iPNN1.s 			page 73


 1979 006a A6EBE376 		sub	r6, r6, r3, asr #31
1515:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.gesture_sum.y) > indev_act->driver.gesture_limit)) {
 1980              		.loc 1 1515 75 view .LVU633
 1981 006e D07D     		ldrb	r0, [r2, #23]	@ zero_extendqisi2
1515:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.gesture_sum.y) > indev_act->driver.gesture_limit)) {
 1982              		.loc 1 1515 7 view .LVU634
 1983 0070 8642     		cmp	r6, r0
 1984 0072 05DC     		bgt	.L119
1516:lvgl/src/lv_core/lv_indev.c **** 
 1985              		.loc 1 1516 9 discriminator 1 view .LVU635
 1986 0074 81EAE177 		eor	r7, r1, r1, asr #31
 1987 0078 A7EBE177 		sub	r7, r7, r1, asr #31
1515:lvgl/src/lv_core/lv_indev.c ****        (LV_MATH_ABS(proc->types.pointer.gesture_sum.y) > indev_act->driver.gesture_limit)) {
 1988              		.loc 1 1515 91 discriminator 1 view .LVU636
 1989 007c B842     		cmp	r0, r7
 1990 007e 18DA     		bge	.L113
 1991              	.L119:
1518:lvgl/src/lv_core/lv_indev.c **** 
 1992              		.loc 1 1518 9 is_stmt 1 view .LVU637
1518:lvgl/src/lv_core/lv_indev.c **** 
 1993              		.loc 1 1518 42 is_stmt 0 view .LVU638
 1994 0080 95F82A00 		ldrb	r0, [r5, #42]	@ zero_extendqisi2
 1995 0084 40F02000 		orr	r0, r0, #32
 1996 0088 85F82A00 		strb	r0, [r5, #42]
1520:lvgl/src/lv_core/lv_indev.c ****             if(proc->types.pointer.gesture_sum.x > 0)
 1997              		.loc 1 1520 9 is_stmt 1 view .LVU639
1520:lvgl/src/lv_core/lv_indev.c ****             if(proc->types.pointer.gesture_sum.x > 0)
 1998              		.loc 1 1520 61 is_stmt 0 view .LVU640
 1999 008c 81EAE170 		eor	r0, r1, r1, asr #31
 2000 0090 A0EBE170 		sub	r0, r0, r1, asr #31
1520:lvgl/src/lv_core/lv_indev.c ****             if(proc->types.pointer.gesture_sum.x > 0)
 2001              		.loc 1 1520 11 view .LVU641
 2002 0094 8642     		cmp	r6, r0
 2003 0096 11DD     		ble	.L120
1521:lvgl/src/lv_core/lv_indev.c ****                 proc->types.pointer.gesture_dir = LV_GESTURE_DIR_RIGHT;
 2004              		.loc 1 1521 13 is_stmt 1 view .LVU642
1521:lvgl/src/lv_core/lv_indev.c ****                 proc->types.pointer.gesture_dir = LV_GESTURE_DIR_RIGHT;
 2005              		.loc 1 1521 15 is_stmt 0 view .LVU643
 2006 0098 002B     		cmp	r3, #0
 2007 009a 0BDD     		ble	.L121
1522:lvgl/src/lv_core/lv_indev.c ****             else
 2008              		.loc 1 1522 17 is_stmt 1 view .LVU644
1522:lvgl/src/lv_core/lv_indev.c ****             else
 2009              		.loc 1 1522 49 is_stmt 0 view .LVU645
 2010 009c 0323     		movs	r3, #3
 2011 009e 85F82430 		strb	r3, [r5, #36]
 2012              	.L122:
1533:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 2013              		.loc 1 1533 9 is_stmt 1 view .LVU646
1533:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 2014              		.loc 1 1533 20 is_stmt 0 view .LVU647
 2015 00a2 E369     		ldr	r3, [r4, #28]
1533:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 2016              		.loc 1 1533 9 view .LVU648
 2017 00a4 1421     		movs	r1, #20
 2018 00a6 2046     		mov	r0, r4
 2019 00a8 9847     		blx	r3
ARM GAS  D:\Temp\cc3iPNN1.s 			page 74


 2020              	.LVL201:
1534:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(gesture_obj, LV_EVENT_GESTURE, NULL);
 2021              		.loc 1 1534 9 is_stmt 1 view .LVU649
1534:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(gesture_obj, LV_EVENT_GESTURE, NULL);
 2022              		.loc 1 1534 12 is_stmt 0 view .LVU650
 2023 00aa 2846     		mov	r0, r5
 2024 00ac FFF7FEFF 		bl	indev_reset_check
 2025              	.LVL202:
1534:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(gesture_obj, LV_EVENT_GESTURE, NULL);
 2026              		.loc 1 1534 11 view .LVU651
 2027 00b0 70B1     		cbz	r0, .L125
 2028              	.LVL203:
 2029              	.L113:
1538:lvgl/src/lv_core/lv_indev.c **** 
 2030              		.loc 1 1538 1 view .LVU652
 2031 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2032              	.LVL204:
 2033              	.L121:
1524:lvgl/src/lv_core/lv_indev.c ****         }
 2034              		.loc 1 1524 17 is_stmt 1 view .LVU653
1524:lvgl/src/lv_core/lv_indev.c ****         }
 2035              		.loc 1 1524 49 is_stmt 0 view .LVU654
 2036 00b4 0223     		movs	r3, #2
 2037 00b6 85F82430 		strb	r3, [r5, #36]
 2038 00ba F2E7     		b	.L122
 2039              	.L120:
1527:lvgl/src/lv_core/lv_indev.c ****                 proc->types.pointer.gesture_dir = LV_GESTURE_DIR_BOTTOM;
 2040              		.loc 1 1527 13 is_stmt 1 view .LVU655
1527:lvgl/src/lv_core/lv_indev.c ****                 proc->types.pointer.gesture_dir = LV_GESTURE_DIR_BOTTOM;
 2041              		.loc 1 1527 15 is_stmt 0 view .LVU656
 2042 00bc 0029     		cmp	r1, #0
 2043 00be 03DD     		ble	.L123
1528:lvgl/src/lv_core/lv_indev.c ****             else
 2044              		.loc 1 1528 17 is_stmt 1 view .LVU657
1528:lvgl/src/lv_core/lv_indev.c ****             else
 2045              		.loc 1 1528 49 is_stmt 0 view .LVU658
 2046 00c0 0123     		movs	r3, #1
 2047 00c2 85F82430 		strb	r3, [r5, #36]
 2048 00c6 ECE7     		b	.L122
 2049              	.L123:
1530:lvgl/src/lv_core/lv_indev.c ****         }
 2050              		.loc 1 1530 17 is_stmt 1 view .LVU659
1530:lvgl/src/lv_core/lv_indev.c ****         }
 2051              		.loc 1 1530 49 is_stmt 0 view .LVU660
 2052 00c8 0023     		movs	r3, #0
 2053 00ca 85F82430 		strb	r3, [r5, #36]
 2054 00ce E8E7     		b	.L122
 2055              	.L125:
1535:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 2056              		.loc 1 1535 9 is_stmt 1 view .LVU661
 2057 00d0 0022     		movs	r2, #0
 2058 00d2 0B21     		movs	r1, #11
 2059 00d4 2046     		mov	r0, r4
 2060 00d6 FFF7FEFF 		bl	lv_event_send
 2061              	.LVL205:
1536:lvgl/src/lv_core/lv_indev.c ****     }
 2062              		.loc 1 1536 9 view .LVU662
ARM GAS  D:\Temp\cc3iPNN1.s 			page 75


1536:lvgl/src/lv_core/lv_indev.c ****     }
 2063              		.loc 1 1536 12 is_stmt 0 view .LVU663
 2064 00da 2846     		mov	r0, r5
 2065 00dc FFF7FEFF 		bl	indev_reset_check
 2066              	.LVL206:
 2067 00e0 E7E7     		b	.L113
 2068              	.L127:
 2069 00e2 00BF     		.align	2
 2070              	.L126:
 2071 00e4 00000000 		.word	.LANCHOR1
 2072              		.cfi_endproc
 2073              	.LFE494:
 2075              		.section	.text.indev_keypad_proc,"ax",%progbits
 2076              		.align	1
 2077              		.syntax unified
 2078              		.thumb
 2079              		.thumb_func
 2080              		.fpu fpv4-sp-d16
 2082              	indev_keypad_proc:
 2083              	.LVL207:
 2084              	.LFB483:
 430:lvgl/src/lv_core/lv_indev.c **** #if LV_USE_GROUP
 2085              		.loc 1 430 1 is_stmt 1 view -0
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 0
 2088              		@ frame_needed = 0, uses_anonymous_args = 0
 430:lvgl/src/lv_core/lv_indev.c **** #if LV_USE_GROUP
 2089              		.loc 1 430 1 is_stmt 0 view .LVU665
 2090 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2091              	.LCFI14:
 2092              		.cfi_def_cfa_offset 24
 2093              		.cfi_offset 3, -24
 2094              		.cfi_offset 4, -20
 2095              		.cfi_offset 5, -16
 2096              		.cfi_offset 6, -12
 2097              		.cfi_offset 7, -8
 2098              		.cfi_offset 14, -4
 432:lvgl/src/lv_core/lv_indev.c **** 
 2099              		.loc 1 432 5 is_stmt 1 view .LVU666
 432:lvgl/src/lv_core/lv_indev.c **** 
 2100              		.loc 1 432 12 is_stmt 0 view .LVU667
 2101 0002 8B7B     		ldrb	r3, [r1, #14]	@ zero_extendqisi2
 432:lvgl/src/lv_core/lv_indev.c **** 
 2102              		.loc 1 432 7 view .LVU668
 2103 0004 012B     		cmp	r3, #1
 2104 0006 2ED0     		beq	.L147
 2105              	.L129:
 434:lvgl/src/lv_core/lv_indev.c ****         i->proc.wait_until_release      = 0;
 2106              		.loc 1 434 5 is_stmt 1 view .LVU669
 434:lvgl/src/lv_core/lv_indev.c ****         i->proc.wait_until_release      = 0;
 2107              		.loc 1 434 8 is_stmt 0 view .LVU670
 2108 0008 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 434:lvgl/src/lv_core/lv_indev.c ****         i->proc.wait_until_release      = 0;
 2109              		.loc 1 434 7 view .LVU671
 2110 000c 13F0080F 		tst	r3, #8
 2111 0010 0BD0     		beq	.L131
 435:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp            = 0;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 76


 2112              		.loc 1 435 9 is_stmt 1 view .LVU672
 435:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp            = 0;
 2113              		.loc 1 435 41 is_stmt 0 view .LVU673
 2114 0012 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 436:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent            = 0;
 2115              		.loc 1 436 9 is_stmt 1 view .LVU674
 436:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent            = 0;
 2116              		.loc 1 436 41 is_stmt 0 view .LVU675
 2117 0016 0022     		movs	r2, #0
 2118 0018 8264     		str	r2, [r0, #72]
 437:lvgl/src/lv_core/lv_indev.c ****         i->proc.types.keypad.last_state = LV_INDEV_STATE_REL; /*To skip the processing of release*/
 2119              		.loc 1 437 9 is_stmt 1 view .LVU676
 437:lvgl/src/lv_core/lv_indev.c ****         i->proc.types.keypad.last_state = LV_INDEV_STATE_REL; /*To skip the processing of release*/
 2120              		.loc 1 437 41 is_stmt 0 view .LVU677
 2121 001a 03F0F703 		and	r3, r3, #247
 2122 001e 62F30003 		bfi	r3, r2, #0, #1
 2123 0022 80F85030 		strb	r3, [r0, #80]
 438:lvgl/src/lv_core/lv_indev.c ****     }
 2124              		.loc 1 438 9 is_stmt 1 view .LVU678
 438:lvgl/src/lv_core/lv_indev.c ****     }
 2125              		.loc 1 438 41 is_stmt 0 view .LVU679
 2126 0026 80F82020 		strb	r2, [r0, #32]
 2127              	.L131:
 441:lvgl/src/lv_core/lv_indev.c ****     if(g == NULL) return;
 2128              		.loc 1 441 5 is_stmt 1 view .LVU680
 441:lvgl/src/lv_core/lv_indev.c ****     if(g == NULL) return;
 2129              		.loc 1 441 18 is_stmt 0 view .LVU681
 2130 002a 866D     		ldr	r6, [r0, #88]
 2131              	.LVL208:
 442:lvgl/src/lv_core/lv_indev.c **** 
 2132              		.loc 1 442 5 is_stmt 1 view .LVU682
 442:lvgl/src/lv_core/lv_indev.c **** 
 2133              		.loc 1 442 7 is_stmt 0 view .LVU683
 2134 002c D6B1     		cbz	r6, .L128
 2135 002e 0D46     		mov	r5, r1
 2136 0030 0446     		mov	r4, r0
 444:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 2137              		.loc 1 444 5 is_stmt 1 view .LVU684
 444:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 2138              		.loc 1 444 21 is_stmt 0 view .LVU685
 2139 0032 3046     		mov	r0, r6
 2140              	.LVL209:
 444:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 2141              		.loc 1 444 21 view .LVU686
 2142 0034 FFF7FEFF 		bl	lv_group_get_focused
 2143              	.LVL210:
 444:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 2144              		.loc 1 444 19 view .LVU687
 2145 0038 AE4B     		ldr	r3, .L161
 2146 003a 1860     		str	r0, [r3]
 445:lvgl/src/lv_core/lv_indev.c **** 
 2147              		.loc 1 445 5 is_stmt 1 view .LVU688
 445:lvgl/src/lv_core/lv_indev.c **** 
 2148              		.loc 1 445 7 is_stmt 0 view .LVU689
 2149 003c 90B1     		cbz	r0, .L128
 448:lvgl/src/lv_core/lv_indev.c **** 
 2150              		.loc 1 448 5 is_stmt 1 view .LVU690
ARM GAS  D:\Temp\cc3iPNN1.s 			page 77


 448:lvgl/src/lv_core/lv_indev.c **** 
 2151              		.loc 1 448 14 is_stmt 0 view .LVU691
 2152 003e 616A     		ldr	r1, [r4, #36]
 2153              	.LVL211:
 452:lvgl/src/lv_core/lv_indev.c **** 
 2154              		.loc 1 452 5 is_stmt 1 view .LVU692
 452:lvgl/src/lv_core/lv_indev.c **** 
 2155              		.loc 1 452 41 is_stmt 0 view .LVU693
 2156 0040 6B68     		ldr	r3, [r5, #4]
 452:lvgl/src/lv_core/lv_indev.c **** 
 2157              		.loc 1 452 35 view .LVU694
 2158 0042 6362     		str	r3, [r4, #36]
 457:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.keypad.last_state = data->state;
 2159              		.loc 1 457 5 is_stmt 1 view .LVU695
 457:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.keypad.last_state = data->state;
 2160              		.loc 1 457 59 is_stmt 0 view .LVU696
 2161 0044 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 2162              	.LVL212:
 458:lvgl/src/lv_core/lv_indev.c **** 
 2163              		.loc 1 458 5 is_stmt 1 view .LVU697
 458:lvgl/src/lv_core/lv_indev.c **** 
 2164              		.loc 1 458 43 is_stmt 0 view .LVU698
 2165 0048 AB7B     		ldrb	r3, [r5, #14]	@ zero_extendqisi2
 458:lvgl/src/lv_core/lv_indev.c **** 
 2166              		.loc 1 458 37 view .LVU699
 2167 004a 84F82030 		strb	r3, [r4, #32]
 461:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp = lv_tick_get();
 2168              		.loc 1 461 5 is_stmt 1 view .LVU700
 461:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp = lv_tick_get();
 2169              		.loc 1 461 7 is_stmt 0 view .LVU701
 2170 004e 012B     		cmp	r3, #1
 2171 0050 0FD0     		beq	.L148
 2172              	.L132:
 499:lvgl/src/lv_core/lv_indev.c **** 
 2173              		.loc 1 499 10 is_stmt 1 view .LVU702
 499:lvgl/src/lv_core/lv_indev.c **** 
 2174              		.loc 1 499 12 is_stmt 0 view .LVU703
 2175 0052 012B     		cmp	r3, #1
 2176 0054 66D0     		beq	.L149
 2177              	.L138:
 552:lvgl/src/lv_core/lv_indev.c ****         /*The user might clear the key when it was released. Always release the pressed key*/
 2178              		.loc 1 552 10 is_stmt 1 view .LVU704
 552:lvgl/src/lv_core/lv_indev.c ****         /*The user might clear the key when it was released. Always release the pressed key*/
 2179              		.loc 1 552 12 is_stmt 0 view .LVU705
 2180 0056 13B9     		cbnz	r3, .L134
 552:lvgl/src/lv_core/lv_indev.c ****         /*The user might clear the key when it was released. Always release the pressed key*/
 2181              		.loc 1 552 47 discriminator 1 view .LVU706
 2182 0058 012A     		cmp	r2, #1
 2183 005a 00F00A81 		beq	.L150
 2184              	.LVL213:
 2185              	.L134:
 574:lvgl/src/lv_core/lv_indev.c **** #else
 2186              		.loc 1 574 5 is_stmt 1 view .LVU707
 574:lvgl/src/lv_core/lv_indev.c **** #else
 2187              		.loc 1 574 19 is_stmt 0 view .LVU708
 2188 005e A54B     		ldr	r3, .L161
 2189 0060 0022     		movs	r2, #0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 78


 2190 0062 1A60     		str	r2, [r3]
 2191              	.LVL214:
 2192              	.L128:
 579:lvgl/src/lv_core/lv_indev.c **** 
 2193              		.loc 1 579 1 view .LVU709
 2194 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2195              	.LVL215:
 2196              	.L147:
 432:lvgl/src/lv_core/lv_indev.c **** 
 2197              		.loc 1 432 41 discriminator 1 view .LVU710
 2198 0066 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2199 006a 13F0080F 		tst	r3, #8
 2200 006e CBD0     		beq	.L129
 2201 0070 F8E7     		b	.L128
 2202              	.LVL216:
 2203              	.L148:
 461:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp = lv_tick_get();
 2204              		.loc 1 461 41 discriminator 1 view .LVU711
 2205 0072 002A     		cmp	r2, #0
 2206 0074 EDD1     		bne	.L132
 462:lvgl/src/lv_core/lv_indev.c **** 
 2207              		.loc 1 462 9 is_stmt 1 view .LVU712
 462:lvgl/src/lv_core/lv_indev.c **** 
 2208              		.loc 1 462 32 is_stmt 0 view .LVU713
 2209 0076 FFF7FEFF 		bl	lv_tick_get
 2210              	.LVL217:
 462:lvgl/src/lv_core/lv_indev.c **** 
 2211              		.loc 1 462 30 view .LVU714
 2212 007a A064     		str	r0, [r4, #72]
 465:lvgl/src/lv_core/lv_indev.c ****             /*Send the ENTER as a normal KEY*/
 2213              		.loc 1 465 9 is_stmt 1 view .LVU715
 465:lvgl/src/lv_core/lv_indev.c ****             /*Send the ENTER as a normal KEY*/
 2214              		.loc 1 465 16 is_stmt 0 view .LVU716
 2215 007c 6968     		ldr	r1, [r5, #4]
 465:lvgl/src/lv_core/lv_indev.c ****             /*Send the ENTER as a normal KEY*/
 2216              		.loc 1 465 11 view .LVU717
 2217 007e 0A29     		cmp	r1, #10
 2218 0080 09D0     		beq	.L151
 474:lvgl/src/lv_core/lv_indev.c ****             /*Send the ESC as a normal KEY*/
 2219              		.loc 1 474 14 is_stmt 1 view .LVU718
 474:lvgl/src/lv_core/lv_indev.c ****             /*Send the ESC as a normal KEY*/
 2220              		.loc 1 474 16 is_stmt 0 view .LVU719
 2221 0082 1B29     		cmp	r1, #27
 2222 0084 22D0     		beq	.L152
 482:lvgl/src/lv_core/lv_indev.c ****             lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is disabl
 2223              		.loc 1 482 14 is_stmt 1 view .LVU720
 482:lvgl/src/lv_core/lv_indev.c ****             lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is disabl
 2224              		.loc 1 482 16 is_stmt 0 view .LVU721
 2225 0086 0929     		cmp	r1, #9
 2226 0088 30D0     		beq	.L153
 488:lvgl/src/lv_core/lv_indev.c ****             lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is disabl
 2227              		.loc 1 488 14 is_stmt 1 view .LVU722
 488:lvgl/src/lv_core/lv_indev.c ****             lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is disabl
 2228              		.loc 1 488 16 is_stmt 0 view .LVU723
 2229 008a 0B29     		cmp	r1, #11
 2230 008c 3CD0     		beq	.L154
 495:lvgl/src/lv_core/lv_indev.c ****         }
ARM GAS  D:\Temp\cc3iPNN1.s 			page 79


 2231              		.loc 1 495 13 is_stmt 1 view .LVU724
 2232 008e 3046     		mov	r0, r6
 2233 0090 FFF7FEFF 		bl	lv_group_send_data
 2234              	.LVL218:
 2235 0094 E3E7     		b	.L134
 2236              	.L151:
 467:lvgl/src/lv_core/lv_indev.c **** 
 2237              		.loc 1 467 13 view .LVU725
 2238 0096 3046     		mov	r0, r6
 2239 0098 FFF7FEFF 		bl	lv_group_send_data
 2240              	.LVL219:
 469:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2241              		.loc 1 469 13 view .LVU726
 469:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2242              		.loc 1 469 26 is_stmt 0 view .LVU727
 2243 009c 954B     		ldr	r3, .L161
 2244 009e 1868     		ldr	r0, [r3]
 2245 00a0 C369     		ldr	r3, [r0, #28]
 469:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2246              		.loc 1 469 13 view .LVU728
 2247 00a2 0022     		movs	r2, #0
 2248 00a4 0B21     		movs	r1, #11
 2249 00a6 9847     		blx	r3
 2250              	.LVL220:
 470:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_PRESSED, NULL);
 2251              		.loc 1 470 13 is_stmt 1 view .LVU729
 470:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_PRESSED, NULL);
 2252              		.loc 1 470 16 is_stmt 0 view .LVU730
 2253 00a8 1C34     		adds	r4, r4, #28
 2254              	.LVL221:
 470:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_PRESSED, NULL);
 2255              		.loc 1 470 16 view .LVU731
 2256 00aa 2046     		mov	r0, r4
 2257 00ac FFF7FEFF 		bl	indev_reset_check
 2258              	.LVL222:
 470:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_PRESSED, NULL);
 2259              		.loc 1 470 15 view .LVU732
 2260 00b0 0028     		cmp	r0, #0
 2261 00b2 D7D1     		bne	.L128
 471:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2262              		.loc 1 471 13 is_stmt 1 view .LVU733
 2263 00b4 0022     		movs	r2, #0
 2264 00b6 1146     		mov	r1, r2
 2265 00b8 8E4B     		ldr	r3, .L161
 2266 00ba 1868     		ldr	r0, [r3]
 2267 00bc FFF7FEFF 		bl	lv_event_send
 2268              	.LVL223:
 472:lvgl/src/lv_core/lv_indev.c ****         }
 2269              		.loc 1 472 13 view .LVU734
 472:lvgl/src/lv_core/lv_indev.c ****         }
 2270              		.loc 1 472 16 is_stmt 0 view .LVU735
 2271 00c0 2046     		mov	r0, r4
 2272 00c2 FFF7FEFF 		bl	indev_reset_check
 2273              	.LVL224:
 472:lvgl/src/lv_core/lv_indev.c ****         }
 2274              		.loc 1 472 15 view .LVU736
 2275 00c6 0028     		cmp	r0, #0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 80


 2276 00c8 C9D0     		beq	.L134
 2277 00ca CBE7     		b	.L128
 2278              	.LVL225:
 2279              	.L152:
 476:lvgl/src/lv_core/lv_indev.c **** 
 2280              		.loc 1 476 13 is_stmt 1 view .LVU737
 2281 00cc 3046     		mov	r0, r6
 2282 00ce FFF7FEFF 		bl	lv_group_send_data
 2283              	.LVL226:
 478:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2284              		.loc 1 478 13 view .LVU738
 2285 00d2 0022     		movs	r2, #0
 2286 00d4 1421     		movs	r1, #20
 2287 00d6 874B     		ldr	r3, .L161
 2288 00d8 1868     		ldr	r0, [r3]
 2289 00da FFF7FEFF 		bl	lv_event_send
 2290              	.LVL227:
 479:lvgl/src/lv_core/lv_indev.c ****         }
 2291              		.loc 1 479 13 view .LVU739
 479:lvgl/src/lv_core/lv_indev.c ****         }
 2292              		.loc 1 479 16 is_stmt 0 view .LVU740
 2293 00de 04F11C00 		add	r0, r4, #28
 2294 00e2 FFF7FEFF 		bl	indev_reset_check
 2295              	.LVL228:
 479:lvgl/src/lv_core/lv_indev.c ****         }
 2296              		.loc 1 479 15 view .LVU741
 2297 00e6 0028     		cmp	r0, #0
 2298 00e8 B9D0     		beq	.L134
 2299 00ea BBE7     		b	.L128
 2300              	.L153:
 483:lvgl/src/lv_core/lv_indev.c ****             lv_group_focus_next(g);
 2301              		.loc 1 483 13 is_stmt 1 view .LVU742
 2302 00ec 0021     		movs	r1, #0
 2303 00ee 3046     		mov	r0, r6
 2304 00f0 FFF7FEFF 		bl	lv_group_set_editing
 2305              	.LVL229:
 484:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2306              		.loc 1 484 13 view .LVU743
 2307 00f4 3046     		mov	r0, r6
 2308 00f6 FFF7FEFF 		bl	lv_group_focus_next
 2309              	.LVL230:
 485:lvgl/src/lv_core/lv_indev.c ****         }
 2310              		.loc 1 485 13 view .LVU744
 485:lvgl/src/lv_core/lv_indev.c ****         }
 2311              		.loc 1 485 16 is_stmt 0 view .LVU745
 2312 00fa 04F11C00 		add	r0, r4, #28
 2313 00fe FFF7FEFF 		bl	indev_reset_check
 2314              	.LVL231:
 485:lvgl/src/lv_core/lv_indev.c ****         }
 2315              		.loc 1 485 15 view .LVU746
 2316 0102 0028     		cmp	r0, #0
 2317 0104 ABD0     		beq	.L134
 2318 0106 ADE7     		b	.L128
 2319              	.L154:
 489:lvgl/src/lv_core/lv_indev.c ****             lv_group_focus_prev(g);
 2320              		.loc 1 489 13 is_stmt 1 view .LVU747
 2321 0108 0021     		movs	r1, #0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 81


 2322 010a 3046     		mov	r0, r6
 2323 010c FFF7FEFF 		bl	lv_group_set_editing
 2324              	.LVL232:
 490:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2325              		.loc 1 490 13 view .LVU748
 2326 0110 3046     		mov	r0, r6
 2327 0112 FFF7FEFF 		bl	lv_group_focus_prev
 2328              	.LVL233:
 491:lvgl/src/lv_core/lv_indev.c ****         }
 2329              		.loc 1 491 13 view .LVU749
 491:lvgl/src/lv_core/lv_indev.c ****         }
 2330              		.loc 1 491 16 is_stmt 0 view .LVU750
 2331 0116 04F11C00 		add	r0, r4, #28
 2332 011a FFF7FEFF 		bl	indev_reset_check
 2333              	.LVL234:
 491:lvgl/src/lv_core/lv_indev.c ****         }
 2334              		.loc 1 491 15 view .LVU751
 2335 011e 0028     		cmp	r0, #0
 2336 0120 9DD0     		beq	.L134
 2337 0122 9FE7     		b	.L128
 2338              	.LVL235:
 2339              	.L149:
 499:lvgl/src/lv_core/lv_indev.c **** 
 2340              		.loc 1 499 46 discriminator 1 view .LVU752
 2341 0124 012A     		cmp	r2, #1
 2342 0126 96D1     		bne	.L138
 501:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSING, NULL);
 2343              		.loc 1 501 9 is_stmt 1 view .LVU753
 501:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSING, NULL);
 2344              		.loc 1 501 16 is_stmt 0 view .LVU754
 2345 0128 6B68     		ldr	r3, [r5, #4]
 501:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSING, NULL);
 2346              		.loc 1 501 11 view .LVU755
 2347 012a 0A2B     		cmp	r3, #10
 2348 012c 24D0     		beq	.L155
 2349              	.LVL236:
 2350              	.L139:
 509:lvgl/src/lv_core/lv_indev.c ****             i->proc.long_pr_sent = 1;
 2351              		.loc 1 509 9 is_stmt 1 view .LVU756
 509:lvgl/src/lv_core/lv_indev.c ****             i->proc.long_pr_sent = 1;
 2352              		.loc 1 509 33 is_stmt 0 view .LVU757
 2353 012e 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 509:lvgl/src/lv_core/lv_indev.c ****             i->proc.long_pr_sent = 1;
 2354              		.loc 1 509 11 view .LVU758
 2355 0132 13F0010F 		tst	r3, #1
 2356 0136 37D0     		beq	.L156
 2357              	.L140:
 520:lvgl/src/lv_core/lv_indev.c ****                 lv_tick_elaps(i->proc.longpr_rep_timestamp) > i->driver.long_press_rep_time) {
 2358              		.loc 1 520 14 is_stmt 1 view .LVU759
 520:lvgl/src/lv_core/lv_indev.c ****                 lv_tick_elaps(i->proc.longpr_rep_timestamp) > i->driver.long_press_rep_time) {
 2359              		.loc 1 520 38 is_stmt 0 view .LVU760
 2360 0138 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 520:lvgl/src/lv_core/lv_indev.c ****                 lv_tick_elaps(i->proc.longpr_rep_timestamp) > i->driver.long_press_rep_time) {
 2361              		.loc 1 520 16 view .LVU761
 2362 013c 13F0010F 		tst	r3, #1
 2363 0140 8DD0     		beq	.L134
 521:lvgl/src/lv_core/lv_indev.c **** 
ARM GAS  D:\Temp\cc3iPNN1.s 			page 82


 2364              		.loc 1 521 17 discriminator 1 view .LVU762
 2365 0142 E06C     		ldr	r0, [r4, #76]
 2366 0144 FFF7FEFF 		bl	lv_tick_elaps
 2367              	.LVL237:
 521:lvgl/src/lv_core/lv_indev.c **** 
 2368              		.loc 1 521 72 discriminator 1 view .LVU763
 2369 0148 638B     		ldrh	r3, [r4, #26]
 520:lvgl/src/lv_core/lv_indev.c ****                 lv_tick_elaps(i->proc.longpr_rep_timestamp) > i->driver.long_press_rep_time) {
 2370              		.loc 1 520 43 discriminator 1 view .LVU764
 2371 014a 9842     		cmp	r0, r3
 2372 014c 87D9     		bls	.L134
 523:lvgl/src/lv_core/lv_indev.c **** 
 2373              		.loc 1 523 13 is_stmt 1 view .LVU765
 523:lvgl/src/lv_core/lv_indev.c **** 
 2374              		.loc 1 523 44 is_stmt 0 view .LVU766
 2375 014e FFF7FEFF 		bl	lv_tick_get
 2376              	.LVL238:
 523:lvgl/src/lv_core/lv_indev.c **** 
 2377              		.loc 1 523 42 view .LVU767
 2378 0152 E064     		str	r0, [r4, #76]
 526:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, NULL);
 2379              		.loc 1 526 13 is_stmt 1 view .LVU768
 526:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, NULL);
 2380              		.loc 1 526 20 is_stmt 0 view .LVU769
 2381 0154 6968     		ldr	r1, [r5, #4]
 526:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, NULL);
 2382              		.loc 1 526 15 view .LVU770
 2383 0156 0A29     		cmp	r1, #10
 2384 0158 53D0     		beq	.L157
 533:lvgl/src/lv_core/lv_indev.c ****                 lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is di
 2385              		.loc 1 533 18 is_stmt 1 view .LVU771
 533:lvgl/src/lv_core/lv_indev.c ****                 lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is di
 2386              		.loc 1 533 20 is_stmt 0 view .LVU772
 2387 015a 0929     		cmp	r1, #9
 2388 015c 6BD0     		beq	.L158
 539:lvgl/src/lv_core/lv_indev.c ****                 lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is di
 2389              		.loc 1 539 18 is_stmt 1 view .LVU773
 539:lvgl/src/lv_core/lv_indev.c ****                 lv_group_set_editing(g, false); /*Editing is not used by KEYPAD is be sure it is di
 2390              		.loc 1 539 20 is_stmt 0 view .LVU774
 2391 015e 0B29     		cmp	r1, #11
 2392 0160 78D0     		beq	.L159
 546:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2393              		.loc 1 546 17 is_stmt 1 view .LVU775
 2394 0162 3046     		mov	r0, r6
 2395 0164 FFF7FEFF 		bl	lv_group_send_data
 2396              	.LVL239:
 547:lvgl/src/lv_core/lv_indev.c ****             }
 2397              		.loc 1 547 17 view .LVU776
 547:lvgl/src/lv_core/lv_indev.c ****             }
 2398              		.loc 1 547 20 is_stmt 0 view .LVU777
 2399 0168 04F11C00 		add	r0, r4, #28
 2400 016c FFF7FEFF 		bl	indev_reset_check
 2401              	.LVL240:
 547:lvgl/src/lv_core/lv_indev.c ****             }
 2402              		.loc 1 547 19 view .LVU778
 2403 0170 0028     		cmp	r0, #0
 2404 0172 3FF474AF 		beq	.L134
ARM GAS  D:\Temp\cc3iPNN1.s 			page 83


 2405 0176 75E7     		b	.L128
 2406              	.LVL241:
 2407              	.L155:
 502:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2408              		.loc 1 502 13 is_stmt 1 view .LVU779
 502:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2409              		.loc 1 502 26 is_stmt 0 view .LVU780
 2410 0178 C369     		ldr	r3, [r0, #28]
 502:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2411              		.loc 1 502 13 view .LVU781
 2412 017a 0022     		movs	r2, #0
 2413              	.LVL242:
 502:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2414              		.loc 1 502 13 view .LVU782
 2415 017c 0C21     		movs	r1, #12
 2416              	.LVL243:
 502:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2417              		.loc 1 502 13 view .LVU783
 2418 017e 9847     		blx	r3
 2419              	.LVL244:
 503:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_PRESSING, NULL);
 2420              		.loc 1 503 13 is_stmt 1 view .LVU784
 503:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_PRESSING, NULL);
 2421              		.loc 1 503 16 is_stmt 0 view .LVU785
 2422 0180 04F11C07 		add	r7, r4, #28
 2423 0184 3846     		mov	r0, r7
 2424 0186 FFF7FEFF 		bl	indev_reset_check
 2425              	.LVL245:
 503:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(indev_obj_act, LV_EVENT_PRESSING, NULL);
 2426              		.loc 1 503 15 view .LVU786
 2427 018a 0028     		cmp	r0, #0
 2428 018c 7FF46AAF 		bne	.L128
 504:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2429              		.loc 1 504 13 is_stmt 1 view .LVU787
 2430 0190 0022     		movs	r2, #0
 2431 0192 0121     		movs	r1, #1
 2432 0194 574B     		ldr	r3, .L161
 2433 0196 1868     		ldr	r0, [r3]
 2434 0198 FFF7FEFF 		bl	lv_event_send
 2435              	.LVL246:
 505:lvgl/src/lv_core/lv_indev.c ****         }
 2436              		.loc 1 505 13 view .LVU788
 505:lvgl/src/lv_core/lv_indev.c ****         }
 2437              		.loc 1 505 16 is_stmt 0 view .LVU789
 2438 019c 3846     		mov	r0, r7
 2439 019e FFF7FEFF 		bl	indev_reset_check
 2440              	.LVL247:
 505:lvgl/src/lv_core/lv_indev.c ****         }
 2441              		.loc 1 505 15 view .LVU790
 2442 01a2 0028     		cmp	r0, #0
 2443 01a4 C3D0     		beq	.L139
 2444 01a6 5DE7     		b	.L128
 2445              	.L156:
 509:lvgl/src/lv_core/lv_indev.c ****             i->proc.long_pr_sent = 1;
 2446              		.loc 1 509 41 discriminator 1 view .LVU791
 2447 01a8 A06C     		ldr	r0, [r4, #72]
 2448 01aa FFF7FEFF 		bl	lv_tick_elaps
ARM GAS  D:\Temp\cc3iPNN1.s 			page 84


 2449              	.LVL248:
 509:lvgl/src/lv_core/lv_indev.c ****             i->proc.long_pr_sent = 1;
 2450              		.loc 1 509 88 discriminator 1 view .LVU792
 2451 01ae 238B     		ldrh	r3, [r4, #24]
 509:lvgl/src/lv_core/lv_indev.c ****             i->proc.long_pr_sent = 1;
 2452              		.loc 1 509 38 discriminator 1 view .LVU793
 2453 01b0 9842     		cmp	r0, r3
 2454 01b2 C1D9     		bls	.L140
 510:lvgl/src/lv_core/lv_indev.c ****             if(data->key == LV_KEY_ENTER) {
 2455              		.loc 1 510 13 is_stmt 1 view .LVU794
 510:lvgl/src/lv_core/lv_indev.c ****             if(data->key == LV_KEY_ENTER) {
 2456              		.loc 1 510 34 is_stmt 0 view .LVU795
 2457 01b4 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 2458 01b8 43F00103 		orr	r3, r3, #1
 2459 01bc 84F85030 		strb	r3, [r4, #80]
 511:lvgl/src/lv_core/lv_indev.c ****                 i->proc.longpr_rep_timestamp = lv_tick_get();
 2460              		.loc 1 511 13 is_stmt 1 view .LVU796
 511:lvgl/src/lv_core/lv_indev.c ****                 i->proc.longpr_rep_timestamp = lv_tick_get();
 2461              		.loc 1 511 20 is_stmt 0 view .LVU797
 2462 01c0 6B68     		ldr	r3, [r5, #4]
 511:lvgl/src/lv_core/lv_indev.c ****                 i->proc.longpr_rep_timestamp = lv_tick_get();
 2463              		.loc 1 511 15 view .LVU798
 2464 01c2 0A2B     		cmp	r3, #10
 2465 01c4 7FF44BAF 		bne	.L134
 512:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS, NULL);
 2466              		.loc 1 512 17 is_stmt 1 view .LVU799
 512:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS, NULL);
 2467              		.loc 1 512 48 is_stmt 0 view .LVU800
 2468 01c8 FFF7FEFF 		bl	lv_tick_get
 2469              	.LVL249:
 512:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS, NULL);
 2470              		.loc 1 512 46 view .LVU801
 2471 01cc E064     		str	r0, [r4, #76]
 513:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2472              		.loc 1 513 17 is_stmt 1 view .LVU802
 513:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2473              		.loc 1 513 30 is_stmt 0 view .LVU803
 2474 01ce 494B     		ldr	r3, .L161
 2475 01d0 1868     		ldr	r0, [r3]
 2476 01d2 C369     		ldr	r3, [r0, #28]
 513:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2477              		.loc 1 513 17 view .LVU804
 2478 01d4 0022     		movs	r2, #0
 2479 01d6 0F21     		movs	r1, #15
 2480 01d8 9847     		blx	r3
 2481              	.LVL250:
 514:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 2482              		.loc 1 514 17 is_stmt 1 view .LVU805
 514:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 2483              		.loc 1 514 20 is_stmt 0 view .LVU806
 2484 01da 1C34     		adds	r4, r4, #28
 2485              	.LVL251:
 514:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 2486              		.loc 1 514 20 view .LVU807
 2487 01dc 2046     		mov	r0, r4
 2488 01de FFF7FEFF 		bl	indev_reset_check
 2489              	.LVL252:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 85


 514:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 2490              		.loc 1 514 19 view .LVU808
 2491 01e2 0028     		cmp	r0, #0
 2492 01e4 7FF43EAF 		bne	.L128
 515:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2493              		.loc 1 515 17 is_stmt 1 view .LVU809
 2494 01e8 0022     		movs	r2, #0
 2495 01ea 0421     		movs	r1, #4
 2496 01ec 414B     		ldr	r3, .L161
 2497 01ee 1868     		ldr	r0, [r3]
 2498 01f0 FFF7FEFF 		bl	lv_event_send
 2499              	.LVL253:
 516:lvgl/src/lv_core/lv_indev.c ****             }
 2500              		.loc 1 516 17 view .LVU810
 516:lvgl/src/lv_core/lv_indev.c ****             }
 2501              		.loc 1 516 20 is_stmt 0 view .LVU811
 2502 01f4 2046     		mov	r0, r4
 2503 01f6 FFF7FEFF 		bl	indev_reset_check
 2504              	.LVL254:
 516:lvgl/src/lv_core/lv_indev.c ****             }
 2505              		.loc 1 516 19 view .LVU812
 2506 01fa 0028     		cmp	r0, #0
 2507 01fc 3FF42FAF 		beq	.L134
 2508 0200 30E7     		b	.L128
 2509              	.LVL255:
 2510              	.L157:
 527:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2511              		.loc 1 527 17 is_stmt 1 view .LVU813
 527:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2512              		.loc 1 527 30 is_stmt 0 view .LVU814
 2513 0202 3C4B     		ldr	r3, .L161
 2514 0204 1868     		ldr	r0, [r3]
 2515 0206 C369     		ldr	r3, [r0, #28]
 527:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2516              		.loc 1 527 17 view .LVU815
 2517 0208 0022     		movs	r2, #0
 2518 020a 1021     		movs	r1, #16
 2519 020c 9847     		blx	r3
 2520              	.LVL256:
 528:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 2521              		.loc 1 528 17 is_stmt 1 view .LVU816
 528:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 2522              		.loc 1 528 20 is_stmt 0 view .LVU817
 2523 020e 1C34     		adds	r4, r4, #28
 2524              	.LVL257:
 528:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 2525              		.loc 1 528 20 view .LVU818
 2526 0210 2046     		mov	r0, r4
 2527 0212 FFF7FEFF 		bl	indev_reset_check
 2528              	.LVL258:
 528:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 2529              		.loc 1 528 19 view .LVU819
 2530 0216 0028     		cmp	r0, #0
 2531 0218 7FF424AF 		bne	.L128
 529:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2532              		.loc 1 529 17 is_stmt 1 view .LVU820
 2533 021c 0022     		movs	r2, #0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 86


 2534 021e 0521     		movs	r1, #5
 2535 0220 344B     		ldr	r3, .L161
 2536 0222 1868     		ldr	r0, [r3]
 2537 0224 FFF7FEFF 		bl	lv_event_send
 2538              	.LVL259:
 530:lvgl/src/lv_core/lv_indev.c ****             }
 2539              		.loc 1 530 17 view .LVU821
 530:lvgl/src/lv_core/lv_indev.c ****             }
 2540              		.loc 1 530 20 is_stmt 0 view .LVU822
 2541 0228 2046     		mov	r0, r4
 2542 022a FFF7FEFF 		bl	indev_reset_check
 2543              	.LVL260:
 530:lvgl/src/lv_core/lv_indev.c ****             }
 2544              		.loc 1 530 19 view .LVU823
 2545 022e 0028     		cmp	r0, #0
 2546 0230 3FF415AF 		beq	.L134
 2547 0234 16E7     		b	.L128
 2548              	.LVL261:
 2549              	.L158:
 534:lvgl/src/lv_core/lv_indev.c ****                 lv_group_focus_next(g);
 2550              		.loc 1 534 17 is_stmt 1 view .LVU824
 2551 0236 0021     		movs	r1, #0
 2552 0238 3046     		mov	r0, r6
 2553 023a FFF7FEFF 		bl	lv_group_set_editing
 2554              	.LVL262:
 535:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2555              		.loc 1 535 17 view .LVU825
 2556 023e 3046     		mov	r0, r6
 2557 0240 FFF7FEFF 		bl	lv_group_focus_next
 2558              	.LVL263:
 536:lvgl/src/lv_core/lv_indev.c ****             }
 2559              		.loc 1 536 17 view .LVU826
 536:lvgl/src/lv_core/lv_indev.c ****             }
 2560              		.loc 1 536 20 is_stmt 0 view .LVU827
 2561 0244 04F11C00 		add	r0, r4, #28
 2562 0248 FFF7FEFF 		bl	indev_reset_check
 2563              	.LVL264:
 536:lvgl/src/lv_core/lv_indev.c ****             }
 2564              		.loc 1 536 19 view .LVU828
 2565 024c 0028     		cmp	r0, #0
 2566 024e 3FF406AF 		beq	.L134
 2567 0252 07E7     		b	.L128
 2568              	.L159:
 540:lvgl/src/lv_core/lv_indev.c ****                 lv_group_focus_prev(g);
 2569              		.loc 1 540 17 is_stmt 1 view .LVU829
 2570 0254 0021     		movs	r1, #0
 2571 0256 3046     		mov	r0, r6
 2572 0258 FFF7FEFF 		bl	lv_group_set_editing
 2573              	.LVL265:
 541:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2574              		.loc 1 541 17 view .LVU830
 2575 025c 3046     		mov	r0, r6
 2576 025e FFF7FEFF 		bl	lv_group_focus_prev
 2577              	.LVL266:
 542:lvgl/src/lv_core/lv_indev.c ****             }
 2578              		.loc 1 542 17 view .LVU831
 542:lvgl/src/lv_core/lv_indev.c ****             }
ARM GAS  D:\Temp\cc3iPNN1.s 			page 87


 2579              		.loc 1 542 20 is_stmt 0 view .LVU832
 2580 0262 04F11C00 		add	r0, r4, #28
 2581 0266 FFF7FEFF 		bl	indev_reset_check
 2582              	.LVL267:
 542:lvgl/src/lv_core/lv_indev.c ****             }
 2583              		.loc 1 542 19 view .LVU833
 2584 026a 0028     		cmp	r0, #0
 2585 026c 3FF4F7AE 		beq	.L134
 2586 0270 F8E6     		b	.L128
 2587              	.LVL268:
 2588              	.L150:
 554:lvgl/src/lv_core/lv_indev.c ****         if(data->key == LV_KEY_ENTER) {
 2589              		.loc 1 554 9 is_stmt 1 view .LVU834
 554:lvgl/src/lv_core/lv_indev.c ****         if(data->key == LV_KEY_ENTER) {
 2590              		.loc 1 554 19 is_stmt 0 view .LVU835
 2591 0272 6960     		str	r1, [r5, #4]
 555:lvgl/src/lv_core/lv_indev.c **** 
 2592              		.loc 1 555 9 is_stmt 1 view .LVU836
 555:lvgl/src/lv_core/lv_indev.c **** 
 2593              		.loc 1 555 11 is_stmt 0 view .LVU837
 2594 0274 0A29     		cmp	r1, #10
 2595 0276 08D0     		beq	.L160
 2596              	.LVL269:
 2597              	.L144:
 571:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent = 0;
 2598              		.loc 1 571 9 is_stmt 1 view .LVU838
 571:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent = 0;
 2599              		.loc 1 571 30 is_stmt 0 view .LVU839
 2600 0278 0022     		movs	r2, #0
 2601 027a A264     		str	r2, [r4, #72]
 572:lvgl/src/lv_core/lv_indev.c ****     }
 2602              		.loc 1 572 9 is_stmt 1 view .LVU840
 572:lvgl/src/lv_core/lv_indev.c ****     }
 2603              		.loc 1 572 30 is_stmt 0 view .LVU841
 2604 027c 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 2605 0280 62F30003 		bfi	r3, r2, #0, #1
 2606 0284 84F85030 		strb	r3, [r4, #80]
 2607 0288 E9E6     		b	.L134
 2608              	.LVL270:
 2609              	.L160:
 557:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2610              		.loc 1 557 13 is_stmt 1 view .LVU842
 557:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2611              		.loc 1 557 26 is_stmt 0 view .LVU843
 2612 028a C369     		ldr	r3, [r0, #28]
 557:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2613              		.loc 1 557 13 view .LVU844
 2614 028c 0022     		movs	r2, #0
 2615              	.LVL271:
 557:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2616              		.loc 1 557 13 view .LVU845
 2617 028e 0E21     		movs	r1, #14
 2618              	.LVL272:
 557:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2619              		.loc 1 557 13 view .LVU846
 2620 0290 9847     		blx	r3
 2621              	.LVL273:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 88


 558:lvgl/src/lv_core/lv_indev.c **** 
 2622              		.loc 1 558 13 is_stmt 1 view .LVU847
 558:lvgl/src/lv_core/lv_indev.c **** 
 2623              		.loc 1 558 16 is_stmt 0 view .LVU848
 2624 0292 04F11C05 		add	r5, r4, #28
 2625              	.LVL274:
 558:lvgl/src/lv_core/lv_indev.c **** 
 2626              		.loc 1 558 16 view .LVU849
 2627 0296 2846     		mov	r0, r5
 2628 0298 FFF7FEFF 		bl	indev_reset_check
 2629              	.LVL275:
 558:lvgl/src/lv_core/lv_indev.c **** 
 2630              		.loc 1 558 15 view .LVU850
 2631 029c 0028     		cmp	r0, #0
 2632 029e 7FF4E1AE 		bne	.L128
 560:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 2633              		.loc 1 560 13 is_stmt 1 view .LVU851
 560:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 2634              		.loc 1 560 37 is_stmt 0 view .LVU852
 2635 02a2 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 560:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_SHORT_CLICKED, NULL);
 2636              		.loc 1 560 15 view .LVU853
 2637 02a6 13F0010F 		tst	r3, #1
 2638 02aa 0BD1     		bne	.L145
 561:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2639              		.loc 1 561 17 is_stmt 1 view .LVU854
 2640 02ac 0022     		movs	r2, #0
 2641 02ae 0321     		movs	r1, #3
 2642 02b0 104B     		ldr	r3, .L161
 2643 02b2 1868     		ldr	r0, [r3]
 2644 02b4 FFF7FEFF 		bl	lv_event_send
 2645              	.LVL276:
 562:lvgl/src/lv_core/lv_indev.c ****             }
 2646              		.loc 1 562 17 view .LVU855
 562:lvgl/src/lv_core/lv_indev.c ****             }
 2647              		.loc 1 562 20 is_stmt 0 view .LVU856
 2648 02b8 2846     		mov	r0, r5
 2649 02ba FFF7FEFF 		bl	indev_reset_check
 2650              	.LVL277:
 562:lvgl/src/lv_core/lv_indev.c ****             }
 2651              		.loc 1 562 19 view .LVU857
 2652 02be 0028     		cmp	r0, #0
 2653 02c0 7FF4D0AE 		bne	.L128
 2654              	.L145:
 565:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2655              		.loc 1 565 13 is_stmt 1 view .LVU858
 2656 02c4 0022     		movs	r2, #0
 2657 02c6 0621     		movs	r1, #6
 2658 02c8 0A4B     		ldr	r3, .L161
 2659 02ca 1868     		ldr	r0, [r3]
 2660 02cc FFF7FEFF 		bl	lv_event_send
 2661              	.LVL278:
 566:lvgl/src/lv_core/lv_indev.c **** 
 2662              		.loc 1 566 13 view .LVU859
 566:lvgl/src/lv_core/lv_indev.c **** 
 2663              		.loc 1 566 16 is_stmt 0 view .LVU860
 2664 02d0 2846     		mov	r0, r5
ARM GAS  D:\Temp\cc3iPNN1.s 			page 89


 2665 02d2 FFF7FEFF 		bl	indev_reset_check
 2666              	.LVL279:
 566:lvgl/src/lv_core/lv_indev.c **** 
 2667              		.loc 1 566 15 view .LVU861
 2668 02d6 0028     		cmp	r0, #0
 2669 02d8 7FF4C4AE 		bne	.L128
 568:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2670              		.loc 1 568 13 is_stmt 1 view .LVU862
 2671 02dc 0022     		movs	r2, #0
 2672 02de 0721     		movs	r1, #7
 2673 02e0 044B     		ldr	r3, .L161
 2674 02e2 1868     		ldr	r0, [r3]
 2675 02e4 FFF7FEFF 		bl	lv_event_send
 2676              	.LVL280:
 569:lvgl/src/lv_core/lv_indev.c ****         }
 2677              		.loc 1 569 13 view .LVU863
 569:lvgl/src/lv_core/lv_indev.c ****         }
 2678              		.loc 1 569 16 is_stmt 0 view .LVU864
 2679 02e8 2846     		mov	r0, r5
 2680 02ea FFF7FEFF 		bl	indev_reset_check
 2681              	.LVL281:
 569:lvgl/src/lv_core/lv_indev.c ****         }
 2682              		.loc 1 569 15 view .LVU865
 2683 02ee 0028     		cmp	r0, #0
 2684 02f0 C2D0     		beq	.L144
 2685 02f2 B7E6     		b	.L128
 2686              	.L162:
 2687              		.align	2
 2688              	.L161:
 2689 02f4 00000000 		.word	.LANCHOR0
 2690              		.cfi_endproc
 2691              	.LFE483:
 2693              		.section	.text.indev_encoder_proc,"ax",%progbits
 2694              		.align	1
 2695              		.syntax unified
 2696              		.thumb
 2697              		.thumb_func
 2698              		.fpu fpv4-sp-d16
 2700              	indev_encoder_proc:
 2701              	.LVL282:
 2702              	.LFB484:
 587:lvgl/src/lv_core/lv_indev.c **** #if LV_USE_GROUP
 2703              		.loc 1 587 1 is_stmt 1 view -0
 2704              		.cfi_startproc
 2705              		@ args = 0, pretend = 0, frame = 8
 2706              		@ frame_needed = 0, uses_anonymous_args = 0
 590:lvgl/src/lv_core/lv_indev.c **** 
 2707              		.loc 1 590 5 view .LVU867
 590:lvgl/src/lv_core/lv_indev.c **** 
 2708              		.loc 1 590 12 is_stmt 0 view .LVU868
 2709 0000 8B7B     		ldrb	r3, [r1, #14]	@ zero_extendqisi2
 590:lvgl/src/lv_core/lv_indev.c **** 
 2710              		.loc 1 590 7 view .LVU869
 2711 0002 012B     		cmp	r3, #1
 2712 0004 40D0     		beq	.L213
 2713              	.L164:
 587:lvgl/src/lv_core/lv_indev.c **** #if LV_USE_GROUP
ARM GAS  D:\Temp\cc3iPNN1.s 			page 90


 2714              		.loc 1 587 1 view .LVU870
 2715 0006 F0B5     		push	{r4, r5, r6, r7, lr}
 2716              	.LCFI15:
 2717              		.cfi_def_cfa_offset 20
 2718              		.cfi_offset 4, -20
 2719              		.cfi_offset 5, -16
 2720              		.cfi_offset 6, -12
 2721              		.cfi_offset 7, -8
 2722              		.cfi_offset 14, -4
 2723 0008 83B0     		sub	sp, sp, #12
 2724              	.LCFI16:
 2725              		.cfi_def_cfa_offset 32
 592:lvgl/src/lv_core/lv_indev.c ****         i->proc.wait_until_release      = 0;
 2726              		.loc 1 592 5 is_stmt 1 view .LVU871
 592:lvgl/src/lv_core/lv_indev.c ****         i->proc.wait_until_release      = 0;
 2727              		.loc 1 592 8 is_stmt 0 view .LVU872
 2728 000a 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 592:lvgl/src/lv_core/lv_indev.c ****         i->proc.wait_until_release      = 0;
 2729              		.loc 1 592 7 view .LVU873
 2730 000e 13F0080F 		tst	r3, #8
 2731 0012 0BD0     		beq	.L166
 593:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp            = 0;
 2732              		.loc 1 593 9 is_stmt 1 view .LVU874
 593:lvgl/src/lv_core/lv_indev.c ****         i->proc.pr_timestamp            = 0;
 2733              		.loc 1 593 41 is_stmt 0 view .LVU875
 2734 0014 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 594:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent            = 0;
 2735              		.loc 1 594 9 is_stmt 1 view .LVU876
 594:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent            = 0;
 2736              		.loc 1 594 41 is_stmt 0 view .LVU877
 2737 0018 0022     		movs	r2, #0
 2738 001a 8264     		str	r2, [r0, #72]
 595:lvgl/src/lv_core/lv_indev.c ****         i->proc.types.keypad.last_state = LV_INDEV_STATE_REL; /*To skip the processing of release*/
 2739              		.loc 1 595 9 is_stmt 1 view .LVU878
 595:lvgl/src/lv_core/lv_indev.c ****         i->proc.types.keypad.last_state = LV_INDEV_STATE_REL; /*To skip the processing of release*/
 2740              		.loc 1 595 41 is_stmt 0 view .LVU879
 2741 001c 03F0F703 		and	r3, r3, #247
 2742 0020 62F30003 		bfi	r3, r2, #0, #1
 2743 0024 80F85030 		strb	r3, [r0, #80]
 596:lvgl/src/lv_core/lv_indev.c ****     }
 2744              		.loc 1 596 9 is_stmt 1 view .LVU880
 596:lvgl/src/lv_core/lv_indev.c ****     }
 2745              		.loc 1 596 41 is_stmt 0 view .LVU881
 2746 0028 80F82020 		strb	r2, [r0, #32]
 2747              	.L166:
 601:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.keypad.last_state = data->state;
 2748              		.loc 1 601 5 is_stmt 1 view .LVU882
 601:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.keypad.last_state = data->state;
 2749              		.loc 1 601 22 is_stmt 0 view .LVU883
 2750 002c 90F82070 		ldrb	r7, [r0, #32]	@ zero_extendqisi2
 2751              	.LVL283:
 602:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.keypad.last_key   = data->key;
 2752              		.loc 1 602 5 is_stmt 1 view .LVU884
 602:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.keypad.last_key   = data->key;
 2753              		.loc 1 602 43 is_stmt 0 view .LVU885
 2754 0030 8B7B     		ldrb	r3, [r1, #14]	@ zero_extendqisi2
 602:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.keypad.last_key   = data->key;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 91


 2755              		.loc 1 602 37 view .LVU886
 2756 0032 80F82030 		strb	r3, [r0, #32]
 603:lvgl/src/lv_core/lv_indev.c **** 
 2757              		.loc 1 603 5 is_stmt 1 view .LVU887
 603:lvgl/src/lv_core/lv_indev.c **** 
 2758              		.loc 1 603 43 is_stmt 0 view .LVU888
 2759 0036 4B68     		ldr	r3, [r1, #4]
 603:lvgl/src/lv_core/lv_indev.c **** 
 2760              		.loc 1 603 37 view .LVU889
 2761 0038 4362     		str	r3, [r0, #36]
 605:lvgl/src/lv_core/lv_indev.c ****     if(g == NULL) return;
 2762              		.loc 1 605 5 is_stmt 1 view .LVU890
 605:lvgl/src/lv_core/lv_indev.c ****     if(g == NULL) return;
 2763              		.loc 1 605 18 is_stmt 0 view .LVU891
 2764 003a 866D     		ldr	r6, [r0, #88]
 2765              	.LVL284:
 606:lvgl/src/lv_core/lv_indev.c **** 
 2766              		.loc 1 606 5 is_stmt 1 view .LVU892
 606:lvgl/src/lv_core/lv_indev.c **** 
 2767              		.loc 1 606 7 is_stmt 0 view .LVU893
 2768 003c 16B3     		cbz	r6, .L163
 2769 003e 0D46     		mov	r5, r1
 2770 0040 0446     		mov	r4, r0
 608:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 2771              		.loc 1 608 5 is_stmt 1 view .LVU894
 608:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 2772              		.loc 1 608 21 is_stmt 0 view .LVU895
 2773 0042 3046     		mov	r0, r6
 2774              	.LVL285:
 608:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 2775              		.loc 1 608 21 view .LVU896
 2776 0044 FFF7FEFF 		bl	lv_group_get_focused
 2777              	.LVL286:
 608:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 2778              		.loc 1 608 19 view .LVU897
 2779 0048 B24B     		ldr	r3, .L232
 2780 004a 1860     		str	r0, [r3]
 609:lvgl/src/lv_core/lv_indev.c **** 
 2781              		.loc 1 609 5 is_stmt 1 view .LVU898
 609:lvgl/src/lv_core/lv_indev.c **** 
 2782              		.loc 1 609 7 is_stmt 0 view .LVU899
 2783 004c D0B1     		cbz	r0, .L163
 612:lvgl/src/lv_core/lv_indev.c ****         data->enc_diff = 0;
 2784              		.loc 1 612 5 is_stmt 1 view .LVU900
 612:lvgl/src/lv_core/lv_indev.c ****         data->enc_diff = 0;
 2785              		.loc 1 612 12 is_stmt 0 view .LVU901
 2786 004e AB7B     		ldrb	r3, [r5, #14]	@ zero_extendqisi2
 612:lvgl/src/lv_core/lv_indev.c ****         data->enc_diff = 0;
 2787              		.loc 1 612 7 view .LVU902
 2788 0050 0BB1     		cbz	r3, .L167
 613:lvgl/src/lv_core/lv_indev.c ****     }
 2789              		.loc 1 613 9 is_stmt 1 view .LVU903
 613:lvgl/src/lv_core/lv_indev.c ****     }
 2790              		.loc 1 613 24 is_stmt 0 view .LVU904
 2791 0052 0023     		movs	r3, #0
 2792 0054 AB81     		strh	r3, [r5, #12]	@ movhi
 2793              	.L167:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 92


 617:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 2794              		.loc 1 617 5 is_stmt 1 view .LVU905
 617:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 2795              		.loc 1 617 21 is_stmt 0 view .LVU906
 2796 0056 3046     		mov	r0, r6
 2797 0058 FFF7FEFF 		bl	lv_group_get_focused
 2798              	.LVL287:
 617:lvgl/src/lv_core/lv_indev.c ****     if(indev_obj_act == NULL) return;
 2799              		.loc 1 617 19 view .LVU907
 2800 005c AD4B     		ldr	r3, .L232
 2801 005e 1860     		str	r0, [r3]
 618:lvgl/src/lv_core/lv_indev.c **** 
 2802              		.loc 1 618 5 is_stmt 1 view .LVU908
 618:lvgl/src/lv_core/lv_indev.c **** 
 2803              		.loc 1 618 7 is_stmt 0 view .LVU909
 2804 0060 80B1     		cbz	r0, .L163
 621:lvgl/src/lv_core/lv_indev.c **** 
 2805              		.loc 1 621 5 is_stmt 1 view .LVU910
 621:lvgl/src/lv_core/lv_indev.c **** 
 2806              		.loc 1 621 12 is_stmt 0 view .LVU911
 2807 0062 AB7B     		ldrb	r3, [r5, #14]	@ zero_extendqisi2
 621:lvgl/src/lv_core/lv_indev.c **** 
 2808              		.loc 1 621 7 view .LVU912
 2809 0064 012B     		cmp	r3, #1
 2810 0066 15D0     		beq	.L214
 2811              	.L168:
 658:lvgl/src/lv_core/lv_indev.c ****         /* Long press*/
 2812              		.loc 1 658 10 is_stmt 1 view .LVU913
 658:lvgl/src/lv_core/lv_indev.c ****         /* Long press*/
 2813              		.loc 1 658 12 is_stmt 0 view .LVU914
 2814 0068 012B     		cmp	r3, #1
 2815 006a 69D0     		beq	.L215
 2816              	.L177:
 715:lvgl/src/lv_core/lv_indev.c **** 
 2817              		.loc 1 715 10 is_stmt 1 view .LVU915
 715:lvgl/src/lv_core/lv_indev.c **** 
 2818              		.loc 1 715 12 is_stmt 0 view .LVU916
 2819 006c 13B9     		cbnz	r3, .L173
 715:lvgl/src/lv_core/lv_indev.c **** 
 2820              		.loc 1 715 47 discriminator 1 view .LVU917
 2821 006e 012F     		cmp	r7, #1
 2822 0070 00F00081 		beq	.L216
 2823              	.LVL288:
 2824              	.L173:
 764:lvgl/src/lv_core/lv_indev.c **** 
 2825              		.loc 1 764 5 is_stmt 1 view .LVU918
 764:lvgl/src/lv_core/lv_indev.c **** 
 2826              		.loc 1 764 19 is_stmt 0 view .LVU919
 2827 0074 A74B     		ldr	r3, .L232
 2828 0076 0022     		movs	r2, #0
 2829 0078 1A60     		str	r2, [r3]
 767:lvgl/src/lv_core/lv_indev.c ****         /*In edit mode send LEFT/RIGHT keys*/
 2830              		.loc 1 767 5 is_stmt 1 view .LVU920
 767:lvgl/src/lv_core/lv_indev.c ****         /*In edit mode send LEFT/RIGHT keys*/
 2831              		.loc 1 767 12 is_stmt 0 view .LVU921
 2832 007a B5F90C30 		ldrsh	r3, [r5, #12]
 767:lvgl/src/lv_core/lv_indev.c ****         /*In edit mode send LEFT/RIGHT keys*/
ARM GAS  D:\Temp\cc3iPNN1.s 			page 93


 2833              		.loc 1 767 7 view .LVU922
 2834 007e 002B     		cmp	r3, #0
 2835 0080 40F09C81 		bne	.L217
 2836              	.LVL289:
 2837              	.L163:
 794:lvgl/src/lv_core/lv_indev.c **** 
 2838              		.loc 1 794 1 view .LVU923
 2839 0084 03B0     		add	sp, sp, #12
 2840              	.LCFI17:
 2841              		.cfi_def_cfa_offset 20
 2842              		@ sp needed
 2843 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 2844              	.LVL290:
 2845              	.L213:
 2846              	.LCFI18:
 2847              		.cfi_def_cfa_offset 0
 2848              		.cfi_restore 4
 2849              		.cfi_restore 5
 2850              		.cfi_restore 6
 2851              		.cfi_restore 7
 2852              		.cfi_restore 14
 590:lvgl/src/lv_core/lv_indev.c **** 
 2853              		.loc 1 590 41 discriminator 1 view .LVU924
 2854 0088 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2855 008c 13F0080F 		tst	r3, #8
 2856 0090 B9D0     		beq	.L164
 2857 0092 7047     		bx	lr
 2858              	.LVL291:
 2859              	.L214:
 2860              	.LCFI19:
 2861              		.cfi_def_cfa_offset 32
 2862              		.cfi_offset 4, -20
 2863              		.cfi_offset 5, -16
 2864              		.cfi_offset 6, -12
 2865              		.cfi_offset 7, -8
 2866              		.cfi_offset 14, -4
 621:lvgl/src/lv_core/lv_indev.c **** 
 2867              		.loc 1 621 41 discriminator 1 view .LVU925
 2868 0094 002F     		cmp	r7, #0
 2869 0096 E7D1     		bne	.L168
 623:lvgl/src/lv_core/lv_indev.c **** 
 2870              		.loc 1 623 9 is_stmt 1 view .LVU926
 623:lvgl/src/lv_core/lv_indev.c **** 
 2871              		.loc 1 623 32 is_stmt 0 view .LVU927
 2872 0098 FFF7FEFF 		bl	lv_tick_get
 2873              	.LVL292:
 623:lvgl/src/lv_core/lv_indev.c **** 
 2874              		.loc 1 623 30 view .LVU928
 2875 009c A064     		str	r0, [r4, #72]
 625:lvgl/src/lv_core/lv_indev.c ****             bool editable = false;
 2876              		.loc 1 625 9 is_stmt 1 view .LVU929
 625:lvgl/src/lv_core/lv_indev.c ****             bool editable = false;
 2877              		.loc 1 625 16 is_stmt 0 view .LVU930
 2878 009e 6968     		ldr	r1, [r5, #4]
 625:lvgl/src/lv_core/lv_indev.c ****             bool editable = false;
 2879              		.loc 1 625 11 view .LVU931
 2880 00a0 0A29     		cmp	r1, #10
ARM GAS  D:\Temp\cc3iPNN1.s 			page 94


 2881 00a2 09D0     		beq	.L218
 637:lvgl/src/lv_core/lv_indev.c ****             /*emulate encoder left*/
 2882              		.loc 1 637 14 is_stmt 1 view .LVU932
 637:lvgl/src/lv_core/lv_indev.c ****             /*emulate encoder left*/
 2883              		.loc 1 637 16 is_stmt 0 view .LVU933
 2884 00a4 1429     		cmp	r1, #20
 2885 00a6 31D0     		beq	.L219
 641:lvgl/src/lv_core/lv_indev.c ****             /*emulate encoder right*/
 2886              		.loc 1 641 14 is_stmt 1 view .LVU934
 641:lvgl/src/lv_core/lv_indev.c ****             /*emulate encoder right*/
 2887              		.loc 1 641 16 is_stmt 0 view .LVU935
 2888 00a8 1329     		cmp	r1, #19
 2889 00aa 34D0     		beq	.L220
 645:lvgl/src/lv_core/lv_indev.c ****             /*Send the ESC as a normal KEY*/
 2890              		.loc 1 645 14 is_stmt 1 view .LVU936
 645:lvgl/src/lv_core/lv_indev.c ****             /*Send the ESC as a normal KEY*/
 2891              		.loc 1 645 16 is_stmt 0 view .LVU937
 2892 00ac 1B29     		cmp	r1, #27
 2893 00ae 37D0     		beq	.L221
 654:lvgl/src/lv_core/lv_indev.c ****         }
 2894              		.loc 1 654 13 is_stmt 1 view .LVU938
 2895 00b0 3046     		mov	r0, r6
 2896 00b2 FFF7FEFF 		bl	lv_group_send_data
 2897              	.LVL293:
 2898 00b6 DDE7     		b	.L173
 2899              	.L218:
 2900              	.LBB12:
 626:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_GET_EDITABLE, &editable);
 2901              		.loc 1 626 13 view .LVU939
 626:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_GET_EDITABLE, &editable);
 2902              		.loc 1 626 18 is_stmt 0 view .LVU940
 2903 00b8 0023     		movs	r3, #0
 2904 00ba 8DF80730 		strb	r3, [sp, #7]
 627:lvgl/src/lv_core/lv_indev.c **** 
 2905              		.loc 1 627 13 is_stmt 1 view .LVU941
 627:lvgl/src/lv_core/lv_indev.c **** 
 2906              		.loc 1 627 26 is_stmt 0 view .LVU942
 2907 00be 954B     		ldr	r3, .L232
 2908 00c0 1868     		ldr	r0, [r3]
 2909 00c2 C369     		ldr	r3, [r0, #28]
 627:lvgl/src/lv_core/lv_indev.c **** 
 2910              		.loc 1 627 13 view .LVU943
 2911 00c4 0DF10702 		add	r2, sp, #7
 2912 00c8 1921     		movs	r1, #25
 2913 00ca 9847     		blx	r3
 2914              	.LVL294:
 629:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSED, NULL);
 2915              		.loc 1 629 13 is_stmt 1 view .LVU944
 629:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSED, NULL);
 2916              		.loc 1 629 16 is_stmt 0 view .LVU945
 2917 00cc 3046     		mov	r0, r6
 2918 00ce FFF7FEFF 		bl	lv_group_get_editing
 2919              	.LVL295:
 629:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSED, NULL);
 2920              		.loc 1 629 15 view .LVU946
 2921 00d2 18B9     		cbnz	r0, .L170
 629:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSED, NULL);
ARM GAS  D:\Temp\cc3iPNN1.s 			page 95


 2922              		.loc 1 629 60 discriminator 1 view .LVU947
 2923 00d4 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 629:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSED, NULL);
 2924              		.loc 1 629 48 discriminator 1 view .LVU948
 2925 00d8 002B     		cmp	r3, #0
 2926 00da CBD1     		bne	.L173
 2927              	.L170:
 630:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2928              		.loc 1 630 17 is_stmt 1 view .LVU949
 630:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2929              		.loc 1 630 30 is_stmt 0 view .LVU950
 2930 00dc 8D4B     		ldr	r3, .L232
 2931 00de 1868     		ldr	r0, [r3]
 2932 00e0 C369     		ldr	r3, [r0, #28]
 630:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2933              		.loc 1 630 17 view .LVU951
 2934 00e2 0022     		movs	r2, #0
 2935 00e4 0B21     		movs	r1, #11
 2936 00e6 9847     		blx	r3
 2937              	.LVL296:
 631:lvgl/src/lv_core/lv_indev.c **** 
 2938              		.loc 1 631 17 is_stmt 1 view .LVU952
 631:lvgl/src/lv_core/lv_indev.c **** 
 2939              		.loc 1 631 20 is_stmt 0 view .LVU953
 2940 00e8 1C34     		adds	r4, r4, #28
 2941              	.LVL297:
 631:lvgl/src/lv_core/lv_indev.c **** 
 2942              		.loc 1 631 20 view .LVU954
 2943 00ea 2046     		mov	r0, r4
 2944 00ec FFF7FEFF 		bl	indev_reset_check
 2945              	.LVL298:
 631:lvgl/src/lv_core/lv_indev.c **** 
 2946              		.loc 1 631 19 view .LVU955
 2947 00f0 0028     		cmp	r0, #0
 2948 00f2 C7D1     		bne	.L163
 633:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 2949              		.loc 1 633 17 is_stmt 1 view .LVU956
 2950 00f4 0022     		movs	r2, #0
 2951 00f6 1146     		mov	r1, r2
 2952 00f8 864B     		ldr	r3, .L232
 2953 00fa 1868     		ldr	r0, [r3]
 2954 00fc FFF7FEFF 		bl	lv_event_send
 2955              	.LVL299:
 634:lvgl/src/lv_core/lv_indev.c ****             }
 2956              		.loc 1 634 17 view .LVU957
 634:lvgl/src/lv_core/lv_indev.c ****             }
 2957              		.loc 1 634 20 is_stmt 0 view .LVU958
 2958 0100 2046     		mov	r0, r4
 2959 0102 FFF7FEFF 		bl	indev_reset_check
 2960              	.LVL300:
 634:lvgl/src/lv_core/lv_indev.c ****             }
 2961              		.loc 1 634 19 view .LVU959
 2962 0106 0028     		cmp	r0, #0
 2963 0108 B4D0     		beq	.L173
 2964 010a BBE7     		b	.L163
 2965              	.LVL301:
 2966              	.L219:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 96


 634:lvgl/src/lv_core/lv_indev.c ****             }
 2967              		.loc 1 634 19 view .LVU960
 2968              	.LBE12:
 639:lvgl/src/lv_core/lv_indev.c ****         }
 2969              		.loc 1 639 13 is_stmt 1 view .LVU961
 639:lvgl/src/lv_core/lv_indev.c ****         }
 2970              		.loc 1 639 17 is_stmt 0 view .LVU962
 2971 010c B5F90C30 		ldrsh	r3, [r5, #12]
 639:lvgl/src/lv_core/lv_indev.c ****         }
 2972              		.loc 1 639 27 view .LVU963
 2973 0110 013B     		subs	r3, r3, #1
 2974 0112 AB81     		strh	r3, [r5, #12]	@ movhi
 2975 0114 AEE7     		b	.L173
 2976              	.L220:
 643:lvgl/src/lv_core/lv_indev.c ****         }
 2977              		.loc 1 643 13 is_stmt 1 view .LVU964
 643:lvgl/src/lv_core/lv_indev.c ****         }
 2978              		.loc 1 643 17 is_stmt 0 view .LVU965
 2979 0116 B5F90C30 		ldrsh	r3, [r5, #12]
 643:lvgl/src/lv_core/lv_indev.c ****         }
 2980              		.loc 1 643 27 view .LVU966
 2981 011a 0133     		adds	r3, r3, #1
 2982 011c AB81     		strh	r3, [r5, #12]	@ movhi
 2983 011e A9E7     		b	.L173
 2984              	.L221:
 647:lvgl/src/lv_core/lv_indev.c **** 
 2985              		.loc 1 647 13 is_stmt 1 view .LVU967
 2986 0120 3046     		mov	r0, r6
 2987 0122 FFF7FEFF 		bl	lv_group_send_data
 2988              	.LVL302:
 649:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(&i->proc)) return;
 2989              		.loc 1 649 13 view .LVU968
 2990 0126 0022     		movs	r2, #0
 2991 0128 1421     		movs	r1, #20
 2992 012a 7A4B     		ldr	r3, .L232
 2993 012c 1868     		ldr	r0, [r3]
 2994 012e FFF7FEFF 		bl	lv_event_send
 2995              	.LVL303:
 650:lvgl/src/lv_core/lv_indev.c ****         }
 2996              		.loc 1 650 13 view .LVU969
 650:lvgl/src/lv_core/lv_indev.c ****         }
 2997              		.loc 1 650 16 is_stmt 0 view .LVU970
 2998 0132 04F11C00 		add	r0, r4, #28
 2999 0136 FFF7FEFF 		bl	indev_reset_check
 3000              	.LVL304:
 650:lvgl/src/lv_core/lv_indev.c ****         }
 3001              		.loc 1 650 15 view .LVU971
 3002 013a 0028     		cmp	r0, #0
 3003 013c 9AD0     		beq	.L173
 3004 013e A1E7     		b	.L163
 3005              	.L215:
 658:lvgl/src/lv_core/lv_indev.c ****         /* Long press*/
 3006              		.loc 1 658 46 discriminator 1 view .LVU972
 3007 0140 012F     		cmp	r7, #1
 3008 0142 93D1     		bne	.L177
 660:lvgl/src/lv_core/lv_indev.c **** 
 3009              		.loc 1 660 9 is_stmt 1 view .LVU973
ARM GAS  D:\Temp\cc3iPNN1.s 			page 97


 660:lvgl/src/lv_core/lv_indev.c **** 
 3010              		.loc 1 660 33 is_stmt 0 view .LVU974
 3011 0144 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 660:lvgl/src/lv_core/lv_indev.c **** 
 3012              		.loc 1 660 11 view .LVU975
 3013 0148 13F0010F 		tst	r3, #1
 3014 014c 19D0     		beq	.L222
 3015              	.L178:
 688:lvgl/src/lv_core/lv_indev.c **** 
 3016              		.loc 1 688 14 is_stmt 1 view .LVU976
 688:lvgl/src/lv_core/lv_indev.c **** 
 3017              		.loc 1 688 38 is_stmt 0 view .LVU977
 3018 014e 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 688:lvgl/src/lv_core/lv_indev.c **** 
 3019              		.loc 1 688 16 view .LVU978
 3020 0152 13F0010F 		tst	r3, #1
 3021 0156 8DD0     		beq	.L173
 688:lvgl/src/lv_core/lv_indev.c **** 
 3022              		.loc 1 688 46 discriminator 1 view .LVU979
 3023 0158 E06C     		ldr	r0, [r4, #76]
 3024 015a FFF7FEFF 		bl	lv_tick_elaps
 3025              	.LVL305:
 688:lvgl/src/lv_core/lv_indev.c **** 
 3026              		.loc 1 688 101 discriminator 1 view .LVU980
 3027 015e 638B     		ldrh	r3, [r4, #26]
 688:lvgl/src/lv_core/lv_indev.c **** 
 3028              		.loc 1 688 43 discriminator 1 view .LVU981
 3029 0160 9842     		cmp	r0, r3
 3030 0162 87D9     		bls	.L173
 690:lvgl/src/lv_core/lv_indev.c **** 
 3031              		.loc 1 690 13 is_stmt 1 view .LVU982
 690:lvgl/src/lv_core/lv_indev.c **** 
 3032              		.loc 1 690 44 is_stmt 0 view .LVU983
 3033 0164 FFF7FEFF 		bl	lv_tick_get
 3034              	.LVL306:
 690:lvgl/src/lv_core/lv_indev.c **** 
 3035              		.loc 1 690 42 view .LVU984
 3036 0168 E064     		str	r0, [r4, #76]
 692:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, NULL);
 3037              		.loc 1 692 13 is_stmt 1 view .LVU985
 692:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, NULL);
 3038              		.loc 1 692 20 is_stmt 0 view .LVU986
 3039 016a 6968     		ldr	r1, [r5, #4]
 692:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, NULL);
 3040              		.loc 1 692 15 view .LVU987
 3041 016c 0A29     		cmp	r1, #10
 3042 016e 57D0     		beq	.L223
 698:lvgl/src/lv_core/lv_indev.c ****                 /*emulate encoder left*/
 3043              		.loc 1 698 18 is_stmt 1 view .LVU988
 698:lvgl/src/lv_core/lv_indev.c ****                 /*emulate encoder left*/
 3044              		.loc 1 698 20 is_stmt 0 view .LVU989
 3045 0170 1429     		cmp	r1, #20
 3046 0172 6FD0     		beq	.L224
 702:lvgl/src/lv_core/lv_indev.c ****                 /*emulate encoder right*/
 3047              		.loc 1 702 18 is_stmt 1 view .LVU990
 702:lvgl/src/lv_core/lv_indev.c ****                 /*emulate encoder right*/
 3048              		.loc 1 702 20 is_stmt 0 view .LVU991
ARM GAS  D:\Temp\cc3iPNN1.s 			page 98


 3049 0174 1329     		cmp	r1, #19
 3050 0176 72D1     		bne	.L185
 704:lvgl/src/lv_core/lv_indev.c ****             }
 3051              		.loc 1 704 17 is_stmt 1 view .LVU992
 704:lvgl/src/lv_core/lv_indev.c ****             }
 3052              		.loc 1 704 21 is_stmt 0 view .LVU993
 3053 0178 B5F90C30 		ldrsh	r3, [r5, #12]
 704:lvgl/src/lv_core/lv_indev.c ****             }
 3054              		.loc 1 704 31 view .LVU994
 3055 017c 0133     		adds	r3, r3, #1
 3056 017e AB81     		strh	r3, [r5, #12]	@ movhi
 3057 0180 78E7     		b	.L173
 3058              	.L222:
 660:lvgl/src/lv_core/lv_indev.c **** 
 3059              		.loc 1 660 41 discriminator 1 view .LVU995
 3060 0182 A06C     		ldr	r0, [r4, #72]
 3061 0184 FFF7FEFF 		bl	lv_tick_elaps
 3062              	.LVL307:
 660:lvgl/src/lv_core/lv_indev.c **** 
 3063              		.loc 1 660 88 discriminator 1 view .LVU996
 3064 0188 238B     		ldrh	r3, [r4, #24]
 660:lvgl/src/lv_core/lv_indev.c **** 
 3065              		.loc 1 660 38 discriminator 1 view .LVU997
 3066 018a 9842     		cmp	r0, r3
 3067 018c DFD9     		bls	.L178
 662:lvgl/src/lv_core/lv_indev.c ****             i->proc.longpr_rep_timestamp = lv_tick_get();
 3068              		.loc 1 662 13 is_stmt 1 view .LVU998
 662:lvgl/src/lv_core/lv_indev.c ****             i->proc.longpr_rep_timestamp = lv_tick_get();
 3069              		.loc 1 662 34 is_stmt 0 view .LVU999
 3070 018e 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 3071 0192 43F00103 		orr	r3, r3, #1
 3072 0196 84F85030 		strb	r3, [r4, #80]
 663:lvgl/src/lv_core/lv_indev.c **** 
 3073              		.loc 1 663 13 is_stmt 1 view .LVU1000
 663:lvgl/src/lv_core/lv_indev.c **** 
 3074              		.loc 1 663 44 is_stmt 0 view .LVU1001
 3075 019a FFF7FEFF 		bl	lv_tick_get
 3076              	.LVL308:
 663:lvgl/src/lv_core/lv_indev.c **** 
 3077              		.loc 1 663 42 view .LVU1002
 3078 019e E064     		str	r0, [r4, #76]
 665:lvgl/src/lv_core/lv_indev.c ****                 bool editable = false;
 3079              		.loc 1 665 13 is_stmt 1 view .LVU1003
 665:lvgl/src/lv_core/lv_indev.c ****                 bool editable = false;
 3080              		.loc 1 665 20 is_stmt 0 view .LVU1004
 3081 01a0 6B68     		ldr	r3, [r5, #4]
 665:lvgl/src/lv_core/lv_indev.c ****                 bool editable = false;
 3082              		.loc 1 665 15 view .LVU1005
 3083 01a2 0A2B     		cmp	r3, #10
 3084 01a4 06D0     		beq	.L225
 3085              	.LVL309:
 3086              	.L179:
 685:lvgl/src/lv_core/lv_indev.c ****         }
 3087              		.loc 1 685 13 is_stmt 1 view .LVU1006
 685:lvgl/src/lv_core/lv_indev.c ****         }
 3088              		.loc 1 685 34 is_stmt 0 view .LVU1007
 3089 01a6 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
ARM GAS  D:\Temp\cc3iPNN1.s 			page 99


 3090 01aa 43F00103 		orr	r3, r3, #1
 3091 01ae 84F85030 		strb	r3, [r4, #80]
 3092 01b2 5FE7     		b	.L173
 3093              	.LVL310:
 3094              	.L225:
 3095              	.LBB13:
 666:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_GET_EDITABLE, &editable);
 3096              		.loc 1 666 17 is_stmt 1 view .LVU1008
 666:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_GET_EDITABLE, &editable);
 3097              		.loc 1 666 22 is_stmt 0 view .LVU1009
 3098 01b4 0023     		movs	r3, #0
 3099 01b6 8DF80730 		strb	r3, [sp, #7]
 667:lvgl/src/lv_core/lv_indev.c **** 
 3100              		.loc 1 667 17 is_stmt 1 view .LVU1010
 667:lvgl/src/lv_core/lv_indev.c **** 
 3101              		.loc 1 667 30 is_stmt 0 view .LVU1011
 3102 01ba 564B     		ldr	r3, .L232
 3103 01bc 1868     		ldr	r0, [r3]
 3104 01be C369     		ldr	r3, [r0, #28]
 667:lvgl/src/lv_core/lv_indev.c **** 
 3105              		.loc 1 667 17 view .LVU1012
 3106 01c0 0DF10702 		add	r2, sp, #7
 3107 01c4 1921     		movs	r1, #25
 3108 01c6 9847     		blx	r3
 3109              	.LVL311:
 670:lvgl/src/lv_core/lv_indev.c ****                     /*Don't leave edit mode if there is only one object (nowhere to navigate)*/
 3110              		.loc 1 670 17 is_stmt 1 view .LVU1013
 670:lvgl/src/lv_core/lv_indev.c ****                     /*Don't leave edit mode if there is only one object (nowhere to navigate)*/
 3111              		.loc 1 670 20 is_stmt 0 view .LVU1014
 3112 01c8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 670:lvgl/src/lv_core/lv_indev.c ****                     /*Don't leave edit mode if there is only one object (nowhere to navigate)*/
 3113              		.loc 1 670 19 view .LVU1015
 3114 01cc CBB9     		cbnz	r3, .L226
 678:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 3115              		.loc 1 678 21 is_stmt 1 view .LVU1016
 678:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 3116              		.loc 1 678 34 is_stmt 0 view .LVU1017
 3117 01ce 514B     		ldr	r3, .L232
 3118 01d0 1868     		ldr	r0, [r3]
 3119 01d2 C369     		ldr	r3, [r0, #28]
 678:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 3120              		.loc 1 678 21 view .LVU1018
 3121 01d4 0022     		movs	r2, #0
 3122 01d6 0F21     		movs	r1, #15
 3123 01d8 9847     		blx	r3
 3124              	.LVL312:
 679:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 3125              		.loc 1 679 21 is_stmt 1 view .LVU1019
 679:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 3126              		.loc 1 679 24 is_stmt 0 view .LVU1020
 3127 01da 04F11C07 		add	r7, r4, #28
 3128              	.LVL313:
 679:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 3129              		.loc 1 679 24 view .LVU1021
 3130 01de 3846     		mov	r0, r7
 3131 01e0 FFF7FEFF 		bl	indev_reset_check
 3132              	.LVL314:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 100


 679:lvgl/src/lv_core/lv_indev.c ****                     lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 3133              		.loc 1 679 23 view .LVU1022
 3134 01e4 0028     		cmp	r0, #0
 3135 01e6 7FF44DAF 		bne	.L163
 680:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 3136              		.loc 1 680 21 is_stmt 1 view .LVU1023
 3137 01ea 0022     		movs	r2, #0
 3138 01ec 0421     		movs	r1, #4
 3139 01ee 494B     		ldr	r3, .L232
 3140 01f0 1868     		ldr	r0, [r3]
 3141 01f2 FFF7FEFF 		bl	lv_event_send
 3142              	.LVL315:
 681:lvgl/src/lv_core/lv_indev.c ****                 }
 3143              		.loc 1 681 21 view .LVU1024
 681:lvgl/src/lv_core/lv_indev.c ****                 }
 3144              		.loc 1 681 24 is_stmt 0 view .LVU1025
 3145 01f6 3846     		mov	r0, r7
 3146 01f8 FFF7FEFF 		bl	indev_reset_check
 3147              	.LVL316:
 681:lvgl/src/lv_core/lv_indev.c ****                 }
 3148              		.loc 1 681 23 view .LVU1026
 3149 01fc 0028     		cmp	r0, #0
 3150 01fe D2D0     		beq	.L179
 3151 0200 40E7     		b	.L163
 3152              	.LVL317:
 3153              	.L226:
 672:lvgl/src/lv_core/lv_indev.c ****                         lv_group_set_editing(g, lv_group_get_editing(g) ? false : true); /*Toggle e
 3154              		.loc 1 672 21 is_stmt 1 view .LVU1027
 672:lvgl/src/lv_core/lv_indev.c ****                         lv_group_set_editing(g, lv_group_get_editing(g) ? false : true); /*Toggle e
 3155              		.loc 1 672 24 is_stmt 0 view .LVU1028
 3156 0202 3046     		mov	r0, r6
 3157 0204 FFF7FEFF 		bl	_lv_ll_get_len
 3158              	.LVL318:
 672:lvgl/src/lv_core/lv_indev.c ****                         lv_group_set_editing(g, lv_group_get_editing(g) ? false : true); /*Toggle e
 3159              		.loc 1 672 23 view .LVU1029
 3160 0208 0128     		cmp	r0, #1
 3161 020a CCD9     		bls	.L179
 673:lvgl/src/lv_core/lv_indev.c ****                     }
 3162              		.loc 1 673 25 is_stmt 1 view .LVU1030
 673:lvgl/src/lv_core/lv_indev.c ****                     }
 3163              		.loc 1 673 49 is_stmt 0 view .LVU1031
 3164 020c 3046     		mov	r0, r6
 3165 020e FFF7FEFF 		bl	lv_group_get_editing
 3166              	.LVL319:
 673:lvgl/src/lv_core/lv_indev.c ****                     }
 3167              		.loc 1 673 25 view .LVU1032
 3168 0212 80F00101 		eor	r1, r0, #1
 3169 0216 C9B2     		uxtb	r1, r1
 3170 0218 3046     		mov	r0, r6
 3171 021a FFF7FEFF 		bl	lv_group_set_editing
 3172              	.LVL320:
 3173 021e C2E7     		b	.L179
 3174              	.L223:
 673:lvgl/src/lv_core/lv_indev.c ****                     }
 3175              		.loc 1 673 25 view .LVU1033
 3176              	.LBE13:
 693:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 101


 3177              		.loc 1 693 17 is_stmt 1 view .LVU1034
 693:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3178              		.loc 1 693 30 is_stmt 0 view .LVU1035
 3179 0220 3C4B     		ldr	r3, .L232
 3180 0222 1868     		ldr	r0, [r3]
 3181 0224 C369     		ldr	r3, [r0, #28]
 693:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3182              		.loc 1 693 17 view .LVU1036
 3183 0226 0022     		movs	r2, #0
 3184 0228 1021     		movs	r1, #16
 3185 022a 9847     		blx	r3
 3186              	.LVL321:
 694:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 3187              		.loc 1 694 17 is_stmt 1 view .LVU1037
 694:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 3188              		.loc 1 694 20 is_stmt 0 view .LVU1038
 3189 022c 1C34     		adds	r4, r4, #28
 3190              	.LVL322:
 694:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 3191              		.loc 1 694 20 view .LVU1039
 3192 022e 2046     		mov	r0, r4
 3193 0230 FFF7FEFF 		bl	indev_reset_check
 3194              	.LVL323:
 694:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 3195              		.loc 1 694 19 view .LVU1040
 3196 0234 0028     		cmp	r0, #0
 3197 0236 7FF425AF 		bne	.L163
 695:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3198              		.loc 1 695 17 is_stmt 1 view .LVU1041
 3199 023a 0022     		movs	r2, #0
 3200 023c 0521     		movs	r1, #5
 3201 023e 354B     		ldr	r3, .L232
 3202 0240 1868     		ldr	r0, [r3]
 3203 0242 FFF7FEFF 		bl	lv_event_send
 3204              	.LVL324:
 696:lvgl/src/lv_core/lv_indev.c ****             }
 3205              		.loc 1 696 17 view .LVU1042
 696:lvgl/src/lv_core/lv_indev.c ****             }
 3206              		.loc 1 696 20 is_stmt 0 view .LVU1043
 3207 0246 2046     		mov	r0, r4
 3208 0248 FFF7FEFF 		bl	indev_reset_check
 3209              	.LVL325:
 696:lvgl/src/lv_core/lv_indev.c ****             }
 3210              		.loc 1 696 19 view .LVU1044
 3211 024c 0028     		cmp	r0, #0
 3212 024e 3FF411AF 		beq	.L173
 3213 0252 17E7     		b	.L163
 3214              	.LVL326:
 3215              	.L224:
 700:lvgl/src/lv_core/lv_indev.c ****             }
 3216              		.loc 1 700 17 is_stmt 1 view .LVU1045
 700:lvgl/src/lv_core/lv_indev.c ****             }
 3217              		.loc 1 700 21 is_stmt 0 view .LVU1046
 3218 0254 B5F90C30 		ldrsh	r3, [r5, #12]
 700:lvgl/src/lv_core/lv_indev.c ****             }
 3219              		.loc 1 700 31 view .LVU1047
 3220 0258 013B     		subs	r3, r3, #1
ARM GAS  D:\Temp\cc3iPNN1.s 			page 102


 3221 025a AB81     		strh	r3, [r5, #12]	@ movhi
 3222 025c 0AE7     		b	.L173
 3223              	.L185:
 707:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3224              		.loc 1 707 17 is_stmt 1 view .LVU1048
 3225 025e 3046     		mov	r0, r6
 3226 0260 FFF7FEFF 		bl	lv_group_send_data
 3227              	.LVL327:
 708:lvgl/src/lv_core/lv_indev.c ****             }
 3228              		.loc 1 708 17 view .LVU1049
 708:lvgl/src/lv_core/lv_indev.c ****             }
 3229              		.loc 1 708 20 is_stmt 0 view .LVU1050
 3230 0264 04F11C00 		add	r0, r4, #28
 3231 0268 FFF7FEFF 		bl	indev_reset_check
 3232              	.LVL328:
 708:lvgl/src/lv_core/lv_indev.c ****             }
 3233              		.loc 1 708 19 view .LVU1051
 3234 026c 0028     		cmp	r0, #0
 3235 026e 3FF401AF 		beq	.L173
 3236 0272 07E7     		b	.L163
 3237              	.L216:
 717:lvgl/src/lv_core/lv_indev.c ****             bool editable = false;
 3238              		.loc 1 717 9 is_stmt 1 view .LVU1052
 717:lvgl/src/lv_core/lv_indev.c ****             bool editable = false;
 3239              		.loc 1 717 16 is_stmt 0 view .LVU1053
 3240 0274 6B68     		ldr	r3, [r5, #4]
 717:lvgl/src/lv_core/lv_indev.c ****             bool editable = false;
 3241              		.loc 1 717 11 view .LVU1054
 3242 0276 0A2B     		cmp	r3, #10
 3243 0278 08D0     		beq	.L227
 3244              	.LVL329:
 3245              	.L186:
 761:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent = 0;
 3246              		.loc 1 761 9 is_stmt 1 view .LVU1055
 761:lvgl/src/lv_core/lv_indev.c ****         i->proc.long_pr_sent = 0;
 3247              		.loc 1 761 30 is_stmt 0 view .LVU1056
 3248 027a 0022     		movs	r2, #0
 3249 027c A264     		str	r2, [r4, #72]
 762:lvgl/src/lv_core/lv_indev.c ****     }
 3250              		.loc 1 762 9 is_stmt 1 view .LVU1057
 762:lvgl/src/lv_core/lv_indev.c ****     }
 3251              		.loc 1 762 30 is_stmt 0 view .LVU1058
 3252 027e 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 3253 0282 62F30003 		bfi	r3, r2, #0, #1
 3254 0286 84F85030 		strb	r3, [r4, #80]
 3255 028a F3E6     		b	.L173
 3256              	.LVL330:
 3257              	.L227:
 3258              	.LBB14:
 718:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_GET_EDITABLE, &editable);
 3259              		.loc 1 718 13 is_stmt 1 view .LVU1059
 718:lvgl/src/lv_core/lv_indev.c ****             indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_GET_EDITABLE, &editable);
 3260              		.loc 1 718 18 is_stmt 0 view .LVU1060
 3261 028c 0023     		movs	r3, #0
 3262 028e 8DF80730 		strb	r3, [sp, #7]
 719:lvgl/src/lv_core/lv_indev.c **** 
 3263              		.loc 1 719 13 is_stmt 1 view .LVU1061
ARM GAS  D:\Temp\cc3iPNN1.s 			page 103


 719:lvgl/src/lv_core/lv_indev.c **** 
 3264              		.loc 1 719 26 is_stmt 0 view .LVU1062
 3265 0292 C369     		ldr	r3, [r0, #28]
 719:lvgl/src/lv_core/lv_indev.c **** 
 3266              		.loc 1 719 13 view .LVU1063
 3267 0294 0DF10702 		add	r2, sp, #7
 3268 0298 1921     		movs	r1, #25
 3269 029a 9847     		blx	r3
 3270              	.LVL331:
 722:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, NULL);
 3271              		.loc 1 722 13 is_stmt 1 view .LVU1064
 722:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, NULL);
 3272              		.loc 1 722 25 is_stmt 0 view .LVU1065
 3273 029c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 722:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, NULL);
 3274              		.loc 1 722 15 view .LVU1066
 3275 02a0 002B     		cmp	r3, #0
 3276 02a2 39D1     		bne	.L187
 723:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3277              		.loc 1 723 17 is_stmt 1 view .LVU1067
 723:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3278              		.loc 1 723 30 is_stmt 0 view .LVU1068
 3279 02a4 1B4B     		ldr	r3, .L232
 3280 02a6 1868     		ldr	r0, [r3]
 3281 02a8 C369     		ldr	r3, [r0, #28]
 723:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3282              		.loc 1 723 17 view .LVU1069
 3283 02aa 0022     		movs	r2, #0
 3284 02ac 0E21     		movs	r1, #14
 3285 02ae 9847     		blx	r3
 3286              	.LVL332:
 724:lvgl/src/lv_core/lv_indev.c **** 
 3287              		.loc 1 724 17 is_stmt 1 view .LVU1070
 724:lvgl/src/lv_core/lv_indev.c **** 
 3288              		.loc 1 724 20 is_stmt 0 view .LVU1071
 3289 02b0 04F11C07 		add	r7, r4, #28
 3290              	.LVL333:
 724:lvgl/src/lv_core/lv_indev.c **** 
 3291              		.loc 1 724 20 view .LVU1072
 3292 02b4 3846     		mov	r0, r7
 3293 02b6 FFF7FEFF 		bl	indev_reset_check
 3294              	.LVL334:
 724:lvgl/src/lv_core/lv_indev.c **** 
 3295              		.loc 1 724 19 view .LVU1073
 3296 02ba 0028     		cmp	r0, #0
 3297 02bc 7FF4E2AE 		bne	.L163
 726:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3298              		.loc 1 726 17 is_stmt 1 view .LVU1074
 726:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3299              		.loc 1 726 41 is_stmt 0 view .LVU1075
 3300 02c0 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 726:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3301              		.loc 1 726 19 view .LVU1076
 3302 02c4 13F0010F 		tst	r3, #1
 3303 02c8 1DD0     		beq	.L228
 3304              	.L189:
 727:lvgl/src/lv_core/lv_indev.c **** 
ARM GAS  D:\Temp\cc3iPNN1.s 			page 104


 3305              		.loc 1 727 17 is_stmt 1 view .LVU1077
 727:lvgl/src/lv_core/lv_indev.c **** 
 3306              		.loc 1 727 20 is_stmt 0 view .LVU1078
 3307 02ca 3846     		mov	r0, r7
 3308 02cc FFF7FEFF 		bl	indev_reset_check
 3309              	.LVL335:
 727:lvgl/src/lv_core/lv_indev.c **** 
 3310              		.loc 1 727 19 view .LVU1079
 3311 02d0 0028     		cmp	r0, #0
 3312 02d2 7FF4D7AE 		bne	.L163
 729:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3313              		.loc 1 729 17 is_stmt 1 view .LVU1080
 3314 02d6 0022     		movs	r2, #0
 3315 02d8 0621     		movs	r1, #6
 3316 02da 0E4B     		ldr	r3, .L232
 3317 02dc 1868     		ldr	r0, [r3]
 3318 02de FFF7FEFF 		bl	lv_event_send
 3319              	.LVL336:
 730:lvgl/src/lv_core/lv_indev.c **** 
 3320              		.loc 1 730 17 view .LVU1081
 730:lvgl/src/lv_core/lv_indev.c **** 
 3321              		.loc 1 730 20 is_stmt 0 view .LVU1082
 3322 02e2 3846     		mov	r0, r7
 3323 02e4 FFF7FEFF 		bl	indev_reset_check
 3324              	.LVL337:
 730:lvgl/src/lv_core/lv_indev.c **** 
 3325              		.loc 1 730 19 view .LVU1083
 3326 02e8 0028     		cmp	r0, #0
 3327 02ea 7FF4CBAE 		bne	.L163
 732:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3328              		.loc 1 732 17 is_stmt 1 view .LVU1084
 3329 02ee 0022     		movs	r2, #0
 3330 02f0 0721     		movs	r1, #7
 3331 02f2 084B     		ldr	r3, .L232
 3332 02f4 1868     		ldr	r0, [r3]
 3333 02f6 FFF7FEFF 		bl	lv_event_send
 3334              	.LVL338:
 733:lvgl/src/lv_core/lv_indev.c ****             }
 3335              		.loc 1 733 17 view .LVU1085
 733:lvgl/src/lv_core/lv_indev.c ****             }
 3336              		.loc 1 733 20 is_stmt 0 view .LVU1086
 3337 02fa 3846     		mov	r0, r7
 3338 02fc FFF7FEFF 		bl	indev_reset_check
 3339              	.LVL339:
 733:lvgl/src/lv_core/lv_indev.c ****             }
 3340              		.loc 1 733 19 view .LVU1087
 3341 0300 0028     		cmp	r0, #0
 3342 0302 BAD0     		beq	.L186
 3343 0304 BEE6     		b	.L163
 3344              	.L228:
 726:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(&i->proc)) return;
 3345              		.loc 1 726 47 is_stmt 1 discriminator 1 view .LVU1088
 3346 0306 0022     		movs	r2, #0
 3347 0308 0321     		movs	r1, #3
 3348 030a 024B     		ldr	r3, .L232
 3349 030c 1868     		ldr	r0, [r3]
 3350 030e FFF7FEFF 		bl	lv_event_send
ARM GAS  D:\Temp\cc3iPNN1.s 			page 105


 3351              	.LVL340:
 3352 0312 DAE7     		b	.L189
 3353              	.L233:
 3354              		.align	2
 3355              	.L232:
 3356 0314 00000000 		.word	.LANCHOR0
 3357              	.LVL341:
 3358              	.L187:
 736:lvgl/src/lv_core/lv_indev.c ****                 /*Ignore long pressed enter release because it comes from mode switch*/
 3359              		.loc 1 736 18 view .LVU1089
 736:lvgl/src/lv_core/lv_indev.c ****                 /*Ignore long pressed enter release because it comes from mode switch*/
 3360              		.loc 1 736 21 is_stmt 0 view .LVU1090
 3361 0318 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 736:lvgl/src/lv_core/lv_indev.c ****                 /*Ignore long pressed enter release because it comes from mode switch*/
 3362              		.loc 1 736 20 view .LVU1091
 3363 031a 13F0020F 		tst	r3, #2
 3364 031e 42D0     		beq	.L191
 738:lvgl/src/lv_core/lv_indev.c ****                     indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, NULL);
 3365              		.loc 1 738 17 is_stmt 1 view .LVU1092
 738:lvgl/src/lv_core/lv_indev.c ****                     indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, NULL);
 3366              		.loc 1 738 20 is_stmt 0 view .LVU1093
 3367 0320 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 738:lvgl/src/lv_core/lv_indev.c ****                     indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, NULL);
 3368              		.loc 1 738 19 view .LVU1094
 3369 0324 13F0010F 		tst	r3, #1
 3370 0328 36D1     		bne	.L229
 3371              	.L192:
 739:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 3372              		.loc 1 739 21 is_stmt 1 view .LVU1095
 739:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 3373              		.loc 1 739 34 is_stmt 0 view .LVU1096
 3374 032a 454B     		ldr	r3, .L234
 3375 032c 1868     		ldr	r0, [r3]
 3376 032e C369     		ldr	r3, [r0, #28]
 739:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 3377              		.loc 1 739 21 view .LVU1097
 3378 0330 0022     		movs	r2, #0
 3379 0332 0E21     		movs	r1, #14
 3380 0334 9847     		blx	r3
 3381              	.LVL342:
 740:lvgl/src/lv_core/lv_indev.c **** 
 3382              		.loc 1 740 21 is_stmt 1 view .LVU1098
 740:lvgl/src/lv_core/lv_indev.c **** 
 3383              		.loc 1 740 24 is_stmt 0 view .LVU1099
 3384 0336 04F11C07 		add	r7, r4, #28
 3385              	.LVL343:
 740:lvgl/src/lv_core/lv_indev.c **** 
 3386              		.loc 1 740 24 view .LVU1100
 3387 033a 3846     		mov	r0, r7
 3388 033c FFF7FEFF 		bl	indev_reset_check
 3389              	.LVL344:
 740:lvgl/src/lv_core/lv_indev.c **** 
 3390              		.loc 1 740 23 view .LVU1101
 3391 0340 0028     		cmp	r0, #0
 3392 0342 7FF49FAE 		bne	.L163
 742:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 3393              		.loc 1 742 21 is_stmt 1 view .LVU1102
ARM GAS  D:\Temp\cc3iPNN1.s 			page 106


 3394 0346 0022     		movs	r2, #0
 3395 0348 0321     		movs	r1, #3
 3396 034a 3D4B     		ldr	r3, .L234
 3397 034c 1868     		ldr	r0, [r3]
 3398 034e FFF7FEFF 		bl	lv_event_send
 3399              	.LVL345:
 743:lvgl/src/lv_core/lv_indev.c **** 
 3400              		.loc 1 743 21 view .LVU1103
 743:lvgl/src/lv_core/lv_indev.c **** 
 3401              		.loc 1 743 24 is_stmt 0 view .LVU1104
 3402 0352 3846     		mov	r0, r7
 3403 0354 FFF7FEFF 		bl	indev_reset_check
 3404              	.LVL346:
 743:lvgl/src/lv_core/lv_indev.c **** 
 3405              		.loc 1 743 23 view .LVU1105
 3406 0358 0028     		cmp	r0, #0
 3407 035a 7FF493AE 		bne	.L163
 745:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 3408              		.loc 1 745 21 is_stmt 1 view .LVU1106
 3409 035e 0022     		movs	r2, #0
 3410 0360 0621     		movs	r1, #6
 3411 0362 374B     		ldr	r3, .L234
 3412 0364 1868     		ldr	r0, [r3]
 3413 0366 FFF7FEFF 		bl	lv_event_send
 3414              	.LVL347:
 746:lvgl/src/lv_core/lv_indev.c **** 
 3415              		.loc 1 746 21 view .LVU1107
 746:lvgl/src/lv_core/lv_indev.c **** 
 3416              		.loc 1 746 24 is_stmt 0 view .LVU1108
 3417 036a 3846     		mov	r0, r7
 3418 036c FFF7FEFF 		bl	indev_reset_check
 3419              	.LVL348:
 746:lvgl/src/lv_core/lv_indev.c **** 
 3420              		.loc 1 746 23 view .LVU1109
 3421 0370 0028     		cmp	r0, #0
 3422 0372 7FF487AE 		bne	.L163
 748:lvgl/src/lv_core/lv_indev.c ****                     if(indev_reset_check(&i->proc)) return;
 3423              		.loc 1 748 21 is_stmt 1 view .LVU1110
 3424 0376 0022     		movs	r2, #0
 3425 0378 0721     		movs	r1, #7
 3426 037a 314B     		ldr	r3, .L234
 3427 037c 1868     		ldr	r0, [r3]
 3428 037e FFF7FEFF 		bl	lv_event_send
 3429              	.LVL349:
 749:lvgl/src/lv_core/lv_indev.c **** 
 3430              		.loc 1 749 21 view .LVU1111
 749:lvgl/src/lv_core/lv_indev.c **** 
 3431              		.loc 1 749 24 is_stmt 0 view .LVU1112
 3432 0382 3846     		mov	r0, r7
 3433 0384 FFF7FEFF 		bl	indev_reset_check
 3434              	.LVL350:
 749:lvgl/src/lv_core/lv_indev.c **** 
 3435              		.loc 1 749 23 view .LVU1113
 3436 0388 0028     		cmp	r0, #0
 3437 038a 7FF47BAE 		bne	.L163
 751:lvgl/src/lv_core/lv_indev.c ****                 }
 3438              		.loc 1 751 21 is_stmt 1 view .LVU1114
ARM GAS  D:\Temp\cc3iPNN1.s 			page 107


 3439 038e 0A21     		movs	r1, #10
 3440 0390 3046     		mov	r0, r6
 3441 0392 FFF7FEFF 		bl	lv_group_send_data
 3442              	.LVL351:
 3443 0396 70E7     		b	.L186
 3444              	.LVL352:
 3445              	.L229:
 738:lvgl/src/lv_core/lv_indev.c ****                     indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, NULL);
 3446              		.loc 1 738 45 is_stmt 0 discriminator 1 view .LVU1115
 3447 0398 3046     		mov	r0, r6
 3448 039a FFF7FEFF 		bl	_lv_ll_get_len
 3449              	.LVL353:
 738:lvgl/src/lv_core/lv_indev.c ****                     indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_RELEASED, NULL);
 3450              		.loc 1 738 42 discriminator 1 view .LVU1116
 3451 039e 0128     		cmp	r0, #1
 3452 03a0 3FF66BAF 		bhi	.L186
 3453 03a4 C1E7     		b	.L192
 3454              	.L191:
 756:lvgl/src/lv_core/lv_indev.c ****                 lv_group_set_editing(g, true); /*Set edit mode*/
 3455              		.loc 1 756 18 is_stmt 1 discriminator 2 view .LVU1117
 756:lvgl/src/lv_core/lv_indev.c ****                 lv_group_set_editing(g, true); /*Set edit mode*/
 3456              		.loc 1 756 48 is_stmt 0 discriminator 2 view .LVU1118
 3457 03a6 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 756:lvgl/src/lv_core/lv_indev.c ****                 lv_group_set_editing(g, true); /*Set edit mode*/
 3458              		.loc 1 756 45 discriminator 2 view .LVU1119
 3459 03aa 13F0010F 		tst	r3, #1
 3460 03ae 7FF464AF 		bne	.L186
 757:lvgl/src/lv_core/lv_indev.c ****             }
 3461              		.loc 1 757 17 is_stmt 1 view .LVU1120
 3462 03b2 0121     		movs	r1, #1
 3463 03b4 3046     		mov	r0, r6
 3464 03b6 FFF7FEFF 		bl	lv_group_set_editing
 3465              	.LVL354:
 3466 03ba 5EE7     		b	.L186
 3467              	.LVL355:
 3468              	.L217:
 757:lvgl/src/lv_core/lv_indev.c ****             }
 3469              		.loc 1 757 17 is_stmt 0 view .LVU1121
 3470              	.LBE14:
 769:lvgl/src/lv_core/lv_indev.c ****             int32_t s;
 3471              		.loc 1 769 9 is_stmt 1 view .LVU1122
 769:lvgl/src/lv_core/lv_indev.c ****             int32_t s;
 3472              		.loc 1 769 12 is_stmt 0 view .LVU1123
 3473 03bc 3046     		mov	r0, r6
 3474 03be FFF7FEFF 		bl	lv_group_get_editing
 3475              	.LVL356:
 769:lvgl/src/lv_core/lv_indev.c ****             int32_t s;
 3476              		.loc 1 769 11 view .LVU1124
 3477 03c2 F8B1     		cbz	r0, .L193
 3478              	.LBB15:
 770:lvgl/src/lv_core/lv_indev.c ****             if(data->enc_diff < 0) {
 3479              		.loc 1 770 13 is_stmt 1 view .LVU1125
 771:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < -data->enc_diff; s++) lv_group_send_data(g, LV_KEY_LEFT);
 3480              		.loc 1 771 13 view .LVU1126
 771:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < -data->enc_diff; s++) lv_group_send_data(g, LV_KEY_LEFT);
 3481              		.loc 1 771 20 is_stmt 0 view .LVU1127
 3482 03c4 B5F90C30 		ldrsh	r3, [r5, #12]
ARM GAS  D:\Temp\cc3iPNN1.s 			page 108


 771:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < -data->enc_diff; s++) lv_group_send_data(g, LV_KEY_LEFT);
 3483              		.loc 1 771 15 view .LVU1128
 3484 03c8 002B     		cmp	r3, #0
 3485 03ca 19DB     		blt	.L230
 774:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < data->enc_diff; s++) lv_group_send_data(g, LV_KEY_RIGHT);
 3486              		.loc 1 774 18 is_stmt 1 view .LVU1129
 774:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < data->enc_diff; s++) lv_group_send_data(g, LV_KEY_RIGHT);
 3487              		.loc 1 774 20 is_stmt 0 view .LVU1130
 3488 03cc 002B     		cmp	r3, #0
 3489 03ce 7FF759AE 		ble	.L163
 775:lvgl/src/lv_core/lv_indev.c ****             }
 3490              		.loc 1 775 23 view .LVU1131
 3491 03d2 0024     		movs	r4, #0
 3492              	.L197:
 3493              	.LVL357:
 775:lvgl/src/lv_core/lv_indev.c ****             }
 3494              		.loc 1 775 36 discriminator 1 view .LVU1132
 3495 03d4 B5F90C30 		ldrsh	r3, [r5, #12]
 775:lvgl/src/lv_core/lv_indev.c ****             }
 3496              		.loc 1 775 17 discriminator 1 view .LVU1133
 3497 03d8 A342     		cmp	r3, r4
 3498 03da 7FF753AE 		ble	.L163
 775:lvgl/src/lv_core/lv_indev.c ****             }
 3499              		.loc 1 775 53 is_stmt 1 discriminator 3 view .LVU1134
 3500 03de 1321     		movs	r1, #19
 3501 03e0 3046     		mov	r0, r6
 3502 03e2 FFF7FEFF 		bl	lv_group_send_data
 3503              	.LVL358:
 775:lvgl/src/lv_core/lv_indev.c ****             }
 3504              		.loc 1 775 49 is_stmt 0 discriminator 3 view .LVU1135
 3505 03e6 0134     		adds	r4, r4, #1
 3506              	.LVL359:
 775:lvgl/src/lv_core/lv_indev.c ****             }
 3507              		.loc 1 775 49 discriminator 3 view .LVU1136
 3508 03e8 F4E7     		b	.L197
 3509              	.L196:
 772:lvgl/src/lv_core/lv_indev.c ****             }
 3510              		.loc 1 772 54 is_stmt 1 discriminator 3 view .LVU1137
 3511 03ea 1421     		movs	r1, #20
 3512 03ec 3046     		mov	r0, r6
 3513 03ee FFF7FEFF 		bl	lv_group_send_data
 3514              	.LVL360:
 772:lvgl/src/lv_core/lv_indev.c ****             }
 3515              		.loc 1 772 50 is_stmt 0 discriminator 3 view .LVU1138
 3516 03f2 0134     		adds	r4, r4, #1
 3517              	.LVL361:
 3518              	.L194:
 772:lvgl/src/lv_core/lv_indev.c ****             }
 3519              		.loc 1 772 37 discriminator 1 view .LVU1139
 3520 03f4 B5F90C30 		ldrsh	r3, [r5, #12]
 772:lvgl/src/lv_core/lv_indev.c ****             }
 3521              		.loc 1 772 32 discriminator 1 view .LVU1140
 3522 03f8 5B42     		rsbs	r3, r3, #0
 772:lvgl/src/lv_core/lv_indev.c ****             }
 3523              		.loc 1 772 17 discriminator 1 view .LVU1141
 3524 03fa A342     		cmp	r3, r4
 3525 03fc F5DC     		bgt	.L196
ARM GAS  D:\Temp\cc3iPNN1.s 			page 109


 3526 03fe 41E6     		b	.L163
 3527              	.LVL362:
 3528              	.L230:
 772:lvgl/src/lv_core/lv_indev.c ****             }
 3529              		.loc 1 772 23 view .LVU1142
 3530 0400 0024     		movs	r4, #0
 3531 0402 F7E7     		b	.L194
 3532              	.L193:
 772:lvgl/src/lv_core/lv_indev.c ****             }
 3533              		.loc 1 772 23 view .LVU1143
 3534              	.LBE15:
 3535              	.LBB16:
 780:lvgl/src/lv_core/lv_indev.c ****             if(data->enc_diff < 0) {
 3536              		.loc 1 780 13 is_stmt 1 view .LVU1144
 781:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < -data->enc_diff; s++) lv_group_focus_prev(g);
 3537              		.loc 1 781 13 view .LVU1145
 781:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < -data->enc_diff; s++) lv_group_focus_prev(g);
 3538              		.loc 1 781 20 is_stmt 0 view .LVU1146
 3539 0404 B5F90C30 		ldrsh	r3, [r5, #12]
 781:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < -data->enc_diff; s++) lv_group_focus_prev(g);
 3540              		.loc 1 781 15 view .LVU1147
 3541 0408 002B     		cmp	r3, #0
 3542 040a 17DB     		blt	.L231
 784:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < data->enc_diff; s++) lv_group_focus_next(g);
 3543              		.loc 1 784 18 is_stmt 1 view .LVU1148
 784:lvgl/src/lv_core/lv_indev.c ****                 for(s = 0; s < data->enc_diff; s++) lv_group_focus_next(g);
 3544              		.loc 1 784 20 is_stmt 0 view .LVU1149
 3545 040c 002B     		cmp	r3, #0
 3546 040e 7FF739AE 		ble	.L163
 785:lvgl/src/lv_core/lv_indev.c ****             }
 3547              		.loc 1 785 23 view .LVU1150
 3548 0412 0024     		movs	r4, #0
 3549              	.L202:
 3550              	.LVL363:
 785:lvgl/src/lv_core/lv_indev.c ****             }
 3551              		.loc 1 785 36 discriminator 1 view .LVU1151
 3552 0414 B5F90C30 		ldrsh	r3, [r5, #12]
 785:lvgl/src/lv_core/lv_indev.c ****             }
 3553              		.loc 1 785 17 discriminator 1 view .LVU1152
 3554 0418 A342     		cmp	r3, r4
 3555 041a 7FF733AE 		ble	.L163
 785:lvgl/src/lv_core/lv_indev.c ****             }
 3556              		.loc 1 785 53 is_stmt 1 discriminator 3 view .LVU1153
 3557 041e 3046     		mov	r0, r6
 3558 0420 FFF7FEFF 		bl	lv_group_focus_next
 3559              	.LVL364:
 785:lvgl/src/lv_core/lv_indev.c ****             }
 3560              		.loc 1 785 49 is_stmt 0 discriminator 3 view .LVU1154
 3561 0424 0134     		adds	r4, r4, #1
 3562              	.LVL365:
 785:lvgl/src/lv_core/lv_indev.c ****             }
 3563              		.loc 1 785 49 discriminator 3 view .LVU1155
 3564 0426 F5E7     		b	.L202
 3565              	.L201:
 782:lvgl/src/lv_core/lv_indev.c ****             }
 3566              		.loc 1 782 54 is_stmt 1 discriminator 3 view .LVU1156
 3567 0428 3046     		mov	r0, r6
ARM GAS  D:\Temp\cc3iPNN1.s 			page 110


 3568 042a FFF7FEFF 		bl	lv_group_focus_prev
 3569              	.LVL366:
 782:lvgl/src/lv_core/lv_indev.c ****             }
 3570              		.loc 1 782 50 is_stmt 0 discriminator 3 view .LVU1157
 3571 042e 0134     		adds	r4, r4, #1
 3572              	.LVL367:
 3573              	.L199:
 782:lvgl/src/lv_core/lv_indev.c ****             }
 3574              		.loc 1 782 37 discriminator 1 view .LVU1158
 3575 0430 B5F90C30 		ldrsh	r3, [r5, #12]
 782:lvgl/src/lv_core/lv_indev.c ****             }
 3576              		.loc 1 782 32 discriminator 1 view .LVU1159
 3577 0434 5B42     		rsbs	r3, r3, #0
 782:lvgl/src/lv_core/lv_indev.c ****             }
 3578              		.loc 1 782 17 discriminator 1 view .LVU1160
 3579 0436 A342     		cmp	r3, r4
 3580 0438 F6DC     		bgt	.L201
 3581 043a 23E6     		b	.L163
 3582              	.LVL368:
 3583              	.L231:
 782:lvgl/src/lv_core/lv_indev.c ****             }
 3584              		.loc 1 782 23 view .LVU1161
 3585 043c 0024     		movs	r4, #0
 3586 043e F7E7     		b	.L199
 3587              	.L235:
 3588              		.align	2
 3589              	.L234:
 3590 0440 00000000 		.word	.LANCHOR0
 3591              	.LBE16:
 3592              		.cfi_endproc
 3593              	.LFE484:
 3595              		.section	.text.lv_indev_get_act,"ax",%progbits
 3596              		.align	1
 3597              		.global	lv_indev_get_act
 3598              		.syntax unified
 3599              		.thumb
 3600              		.thumb_func
 3601              		.fpu fpv4-sp-d16
 3603              	lv_indev_get_act:
 3604              	.LFB465:
 138:lvgl/src/lv_core/lv_indev.c ****     return indev_act;
 3605              		.loc 1 138 1 is_stmt 1 view -0
 3606              		.cfi_startproc
 3607              		@ args = 0, pretend = 0, frame = 0
 3608              		@ frame_needed = 0, uses_anonymous_args = 0
 3609              		@ link register save eliminated.
 139:lvgl/src/lv_core/lv_indev.c **** }
 3610              		.loc 1 139 5 view .LVU1163
 140:lvgl/src/lv_core/lv_indev.c **** 
 3611              		.loc 1 140 1 is_stmt 0 view .LVU1164
 3612 0000 014B     		ldr	r3, .L237
 3613 0002 1868     		ldr	r0, [r3]
 3614 0004 7047     		bx	lr
 3615              	.L238:
 3616 0006 00BF     		.align	2
 3617              	.L237:
 3618 0008 00000000 		.word	.LANCHOR1
ARM GAS  D:\Temp\cc3iPNN1.s 			page 111


 3619              		.cfi_endproc
 3620              	.LFE465:
 3622              		.section	.text.lv_indev_get_type,"ax",%progbits
 3623              		.align	1
 3624              		.global	lv_indev_get_type
 3625              		.syntax unified
 3626              		.thumb
 3627              		.thumb_func
 3628              		.fpu fpv4-sp-d16
 3630              	lv_indev_get_type:
 3631              	.LVL369:
 3632              	.LFB466:
 148:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL) return LV_INDEV_TYPE_NONE;
 3633              		.loc 1 148 1 is_stmt 1 view -0
 3634              		.cfi_startproc
 3635              		@ args = 0, pretend = 0, frame = 0
 3636              		@ frame_needed = 0, uses_anonymous_args = 0
 3637              		@ link register save eliminated.
 149:lvgl/src/lv_core/lv_indev.c **** 
 3638              		.loc 1 149 5 view .LVU1166
 149:lvgl/src/lv_core/lv_indev.c **** 
 3639              		.loc 1 149 7 is_stmt 0 view .LVU1167
 3640 0000 08B1     		cbz	r0, .L241
 151:lvgl/src/lv_core/lv_indev.c **** }
 3641              		.loc 1 151 5 is_stmt 1 view .LVU1168
 151:lvgl/src/lv_core/lv_indev.c **** }
 3642              		.loc 1 151 25 is_stmt 0 view .LVU1169
 3643 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3644              	.LVL370:
 151:lvgl/src/lv_core/lv_indev.c **** }
 3645              		.loc 1 151 25 view .LVU1170
 3646 0004 7047     		bx	lr
 3647              	.LVL371:
 3648              	.L241:
 149:lvgl/src/lv_core/lv_indev.c **** 
 3649              		.loc 1 149 30 view .LVU1171
 3650 0006 0020     		movs	r0, #0
 3651              	.LVL372:
 152:lvgl/src/lv_core/lv_indev.c **** 
 3652              		.loc 1 152 1 view .LVU1172
 3653 0008 7047     		bx	lr
 3654              		.cfi_endproc
 3655              	.LFE466:
 3657              		.section	.text.lv_indev_reset,"ax",%progbits
 3658              		.align	1
 3659              		.global	lv_indev_reset
 3660              		.syntax unified
 3661              		.thumb
 3662              		.thumb_func
 3663              		.fpu fpv4-sp-d16
 3665              	lv_indev_reset:
 3666              	.LVL373:
 3667              	.LFB467:
 160:lvgl/src/lv_core/lv_indev.c ****     if(indev) {
 3668              		.loc 1 160 1 is_stmt 1 view -0
 3669              		.cfi_startproc
 3670              		@ args = 0, pretend = 0, frame = 0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 112


 3671              		@ frame_needed = 0, uses_anonymous_args = 0
 161:lvgl/src/lv_core/lv_indev.c ****         indev->proc.reset_query = 1;
 3672              		.loc 1 161 5 view .LVU1174
 161:lvgl/src/lv_core/lv_indev.c ****         indev->proc.reset_query = 1;
 3673              		.loc 1 161 7 is_stmt 0 view .LVU1175
 3674 0000 B0B1     		cbz	r0, .L243
 3675 0002 0346     		mov	r3, r0
 162:lvgl/src/lv_core/lv_indev.c ****         if(indev_act == indev) indev_obj_act = NULL;
 3676              		.loc 1 162 9 is_stmt 1 view .LVU1176
 162:lvgl/src/lv_core/lv_indev.c ****         if(indev_act == indev) indev_obj_act = NULL;
 3677              		.loc 1 162 33 is_stmt 0 view .LVU1177
 3678 0004 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 3679 0008 42F00202 		orr	r2, r2, #2
 3680 000c 80F85020 		strb	r2, [r0, #80]
 163:lvgl/src/lv_core/lv_indev.c ****         if(obj == NULL || indev->proc.types.pointer.last_pressed == obj) {
 3681              		.loc 1 163 9 is_stmt 1 view .LVU1178
 163:lvgl/src/lv_core/lv_indev.c ****         if(obj == NULL || indev->proc.types.pointer.last_pressed == obj) {
 3682              		.loc 1 163 22 is_stmt 0 view .LVU1179
 3683 0010 174A     		ldr	r2, .L258
 3684 0012 1268     		ldr	r2, [r2]
 163:lvgl/src/lv_core/lv_indev.c ****         if(obj == NULL || indev->proc.types.pointer.last_pressed == obj) {
 3685              		.loc 1 163 11 view .LVU1180
 3686 0014 8242     		cmp	r2, r0
 3687 0016 04D0     		beq	.L255
 3688              	.LVL374:
 3689              	.L244:
 164:lvgl/src/lv_core/lv_indev.c ****             indev->proc.types.pointer.last_pressed = NULL;
 3690              		.loc 1 164 9 is_stmt 1 view .LVU1181
 164:lvgl/src/lv_core/lv_indev.c ****             indev->proc.types.pointer.last_pressed = NULL;
 3691              		.loc 1 164 11 is_stmt 0 view .LVU1182
 3692 0018 39B1     		cbz	r1, .L245
 164:lvgl/src/lv_core/lv_indev.c ****             indev->proc.types.pointer.last_pressed = NULL;
 3693              		.loc 1 164 52 discriminator 1 view .LVU1183
 3694 001a DA6B     		ldr	r2, [r3, #60]
 164:lvgl/src/lv_core/lv_indev.c ****             indev->proc.types.pointer.last_pressed = NULL;
 3695              		.loc 1 164 24 discriminator 1 view .LVU1184
 3696 001c 8A42     		cmp	r2, r1
 3697 001e 04D0     		beq	.L245
 3698 0020 7047     		bx	lr
 3699              	.LVL375:
 3700              	.L255:
 163:lvgl/src/lv_core/lv_indev.c ****         if(obj == NULL || indev->proc.types.pointer.last_pressed == obj) {
 3701              		.loc 1 163 32 is_stmt 1 discriminator 1 view .LVU1185
 163:lvgl/src/lv_core/lv_indev.c ****         if(obj == NULL || indev->proc.types.pointer.last_pressed == obj) {
 3702              		.loc 1 163 46 is_stmt 0 discriminator 1 view .LVU1186
 3703 0022 144A     		ldr	r2, .L258+4
 3704 0024 0020     		movs	r0, #0
 3705              	.LVL376:
 163:lvgl/src/lv_core/lv_indev.c ****         if(obj == NULL || indev->proc.types.pointer.last_pressed == obj) {
 3706              		.loc 1 163 46 discriminator 1 view .LVU1187
 3707 0026 1060     		str	r0, [r2]
 3708 0028 F6E7     		b	.L244
 3709              	.L245:
 165:lvgl/src/lv_core/lv_indev.c ****         }
 3710              		.loc 1 165 13 is_stmt 1 view .LVU1188
 165:lvgl/src/lv_core/lv_indev.c ****         }
 3711              		.loc 1 165 52 is_stmt 0 view .LVU1189
ARM GAS  D:\Temp\cc3iPNN1.s 			page 113


 3712 002a 0022     		movs	r2, #0
 3713 002c DA63     		str	r2, [r3, #60]
 3714 002e 7047     		bx	lr
 3715              	.LVL377:
 3716              	.L243:
 160:lvgl/src/lv_core/lv_indev.c ****     if(indev) {
 3717              		.loc 1 160 1 view .LVU1190
 3718 0030 10B5     		push	{r4, lr}
 3719              	.LCFI20:
 3720              		.cfi_def_cfa_offset 8
 3721              		.cfi_offset 4, -8
 3722              		.cfi_offset 14, -4
 3723 0032 0C46     		mov	r4, r1
 3724              	.LBB17:
 169:lvgl/src/lv_core/lv_indev.c ****         while(i) {
 3725              		.loc 1 169 9 is_stmt 1 view .LVU1191
 169:lvgl/src/lv_core/lv_indev.c ****         while(i) {
 3726              		.loc 1 169 26 is_stmt 0 view .LVU1192
 3727 0034 0020     		movs	r0, #0
 3728              	.LVL378:
 169:lvgl/src/lv_core/lv_indev.c ****         while(i) {
 3729              		.loc 1 169 26 view .LVU1193
 3730 0036 FFF7FEFF 		bl	lv_indev_get_next
 3731              	.LVL379:
 170:lvgl/src/lv_core/lv_indev.c ****             i->proc.reset_query = 1;
 3732              		.loc 1 170 9 is_stmt 1 view .LVU1194
 170:lvgl/src/lv_core/lv_indev.c ****             i->proc.reset_query = 1;
 3733              		.loc 1 170 14 is_stmt 0 view .LVU1195
 3734 003a 07E0     		b	.L247
 3735              	.L257:
 172:lvgl/src/lv_core/lv_indev.c ****             if(obj == NULL || i->proc.types.pointer.last_pressed == obj) {
 3736              		.loc 1 172 32 is_stmt 1 discriminator 1 view .LVU1196
 172:lvgl/src/lv_core/lv_indev.c ****             if(obj == NULL || i->proc.types.pointer.last_pressed == obj) {
 3737              		.loc 1 172 46 is_stmt 0 discriminator 1 view .LVU1197
 3738 003c 0D4B     		ldr	r3, .L258+4
 3739 003e 0022     		movs	r2, #0
 3740 0040 1A60     		str	r2, [r3]
 3741 0042 0EE0     		b	.L248
 3742              	.L249:
 174:lvgl/src/lv_core/lv_indev.c ****             }
 3743              		.loc 1 174 17 is_stmt 1 view .LVU1198
 174:lvgl/src/lv_core/lv_indev.c ****             }
 3744              		.loc 1 174 52 is_stmt 0 view .LVU1199
 3745 0044 0023     		movs	r3, #0
 3746 0046 C363     		str	r3, [r0, #60]
 3747              	.L250:
 176:lvgl/src/lv_core/lv_indev.c ****         }
 3748              		.loc 1 176 13 is_stmt 1 view .LVU1200
 176:lvgl/src/lv_core/lv_indev.c ****         }
 3749              		.loc 1 176 17 is_stmt 0 view .LVU1201
 3750 0048 FFF7FEFF 		bl	lv_indev_get_next
 3751              	.LVL380:
 3752              	.L247:
 170:lvgl/src/lv_core/lv_indev.c ****             i->proc.reset_query = 1;
 3753              		.loc 1 170 14 view .LVU1202
 3754 004c 78B1     		cbz	r0, .L256
 171:lvgl/src/lv_core/lv_indev.c ****             if(indev_act == i) indev_obj_act = NULL;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 114


 3755              		.loc 1 171 13 is_stmt 1 view .LVU1203
 171:lvgl/src/lv_core/lv_indev.c ****             if(indev_act == i) indev_obj_act = NULL;
 3756              		.loc 1 171 33 is_stmt 0 view .LVU1204
 3757 004e 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3758 0052 43F00203 		orr	r3, r3, #2
 3759 0056 80F85030 		strb	r3, [r0, #80]
 172:lvgl/src/lv_core/lv_indev.c ****             if(obj == NULL || i->proc.types.pointer.last_pressed == obj) {
 3760              		.loc 1 172 13 is_stmt 1 view .LVU1205
 172:lvgl/src/lv_core/lv_indev.c ****             if(obj == NULL || i->proc.types.pointer.last_pressed == obj) {
 3761              		.loc 1 172 26 is_stmt 0 view .LVU1206
 3762 005a 054B     		ldr	r3, .L258
 3763 005c 1B68     		ldr	r3, [r3]
 172:lvgl/src/lv_core/lv_indev.c ****             if(obj == NULL || i->proc.types.pointer.last_pressed == obj) {
 3764              		.loc 1 172 15 view .LVU1207
 3765 005e 8342     		cmp	r3, r0
 3766 0060 ECD0     		beq	.L257
 3767              	.L248:
 173:lvgl/src/lv_core/lv_indev.c ****                 i->proc.types.pointer.last_pressed = NULL;
 3768              		.loc 1 173 13 is_stmt 1 view .LVU1208
 173:lvgl/src/lv_core/lv_indev.c ****                 i->proc.types.pointer.last_pressed = NULL;
 3769              		.loc 1 173 15 is_stmt 0 view .LVU1209
 3770 0062 002C     		cmp	r4, #0
 3771 0064 EED0     		beq	.L249
 173:lvgl/src/lv_core/lv_indev.c ****                 i->proc.types.pointer.last_pressed = NULL;
 3772              		.loc 1 173 52 discriminator 1 view .LVU1210
 3773 0066 C36B     		ldr	r3, [r0, #60]
 173:lvgl/src/lv_core/lv_indev.c ****                 i->proc.types.pointer.last_pressed = NULL;
 3774              		.loc 1 173 28 discriminator 1 view .LVU1211
 3775 0068 A342     		cmp	r3, r4
 3776 006a EDD1     		bne	.L250
 3777 006c EAE7     		b	.L249
 3778              	.L256:
 173:lvgl/src/lv_core/lv_indev.c ****                 i->proc.types.pointer.last_pressed = NULL;
 3779              		.loc 1 173 28 discriminator 1 view .LVU1212
 3780              	.LBE17:
 179:lvgl/src/lv_core/lv_indev.c **** 
 3781              		.loc 1 179 1 view .LVU1213
 3782 006e 10BD     		pop	{r4, pc}
 3783              	.LVL381:
 3784              	.L259:
 179:lvgl/src/lv_core/lv_indev.c **** 
 3785              		.loc 1 179 1 view .LVU1214
 3786              		.align	2
 3787              	.L258:
 3788 0070 00000000 		.word	.LANCHOR1
 3789 0074 00000000 		.word	.LANCHOR0
 3790              		.cfi_endproc
 3791              	.LFE467:
 3793              		.section	.text._lv_indev_init,"ax",%progbits
 3794              		.align	1
 3795              		.global	_lv_indev_init
 3796              		.syntax unified
 3797              		.thumb
 3798              		.thumb_func
 3799              		.fpu fpv4-sp-d16
 3801              	_lv_indev_init:
 3802              	.LFB463:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 115


  67:lvgl/src/lv_core/lv_indev.c ****     lv_indev_reset(NULL, NULL); /*Reset all input devices*/
 3803              		.loc 1 67 1 is_stmt 1 view -0
 3804              		.cfi_startproc
 3805              		@ args = 0, pretend = 0, frame = 0
 3806              		@ frame_needed = 0, uses_anonymous_args = 0
 3807 0000 08B5     		push	{r3, lr}
 3808              	.LCFI21:
 3809              		.cfi_def_cfa_offset 8
 3810              		.cfi_offset 3, -8
 3811              		.cfi_offset 14, -4
  68:lvgl/src/lv_core/lv_indev.c **** }
 3812              		.loc 1 68 5 view .LVU1216
 3813 0002 0021     		movs	r1, #0
 3814 0004 0846     		mov	r0, r1
 3815 0006 FFF7FEFF 		bl	lv_indev_reset
 3816              	.LVL382:
  69:lvgl/src/lv_core/lv_indev.c **** 
 3817              		.loc 1 69 1 is_stmt 0 view .LVU1217
 3818 000a 08BD     		pop	{r3, pc}
 3819              		.cfi_endproc
 3820              	.LFE463:
 3822              		.section	.text.lv_indev_reset_long_press,"ax",%progbits
 3823              		.align	1
 3824              		.global	lv_indev_reset_long_press
 3825              		.syntax unified
 3826              		.thumb
 3827              		.thumb_func
 3828              		.fpu fpv4-sp-d16
 3830              	lv_indev_reset_long_press:
 3831              	.LVL383:
 3832              	.LFB468:
 186:lvgl/src/lv_core/lv_indev.c ****     indev->proc.long_pr_sent         = 0;
 3833              		.loc 1 186 1 is_stmt 1 view -0
 3834              		.cfi_startproc
 3835              		@ args = 0, pretend = 0, frame = 0
 3836              		@ frame_needed = 0, uses_anonymous_args = 0
 186:lvgl/src/lv_core/lv_indev.c ****     indev->proc.long_pr_sent         = 0;
 3837              		.loc 1 186 1 is_stmt 0 view .LVU1219
 3838 0000 10B5     		push	{r4, lr}
 3839              	.LCFI22:
 3840              		.cfi_def_cfa_offset 8
 3841              		.cfi_offset 4, -8
 3842              		.cfi_offset 14, -4
 3843 0002 0446     		mov	r4, r0
 187:lvgl/src/lv_core/lv_indev.c ****     indev->proc.longpr_rep_timestamp = lv_tick_get();
 3844              		.loc 1 187 5 is_stmt 1 view .LVU1220
 187:lvgl/src/lv_core/lv_indev.c ****     indev->proc.longpr_rep_timestamp = lv_tick_get();
 3845              		.loc 1 187 38 is_stmt 0 view .LVU1221
 3846 0004 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3847 0008 6FF30003 		bfc	r3, #0, #1
 3848 000c 80F85030 		strb	r3, [r0, #80]
 188:lvgl/src/lv_core/lv_indev.c ****     indev->proc.pr_timestamp         = lv_tick_get();
 3849              		.loc 1 188 5 is_stmt 1 view .LVU1222
 188:lvgl/src/lv_core/lv_indev.c ****     indev->proc.pr_timestamp         = lv_tick_get();
 3850              		.loc 1 188 40 is_stmt 0 view .LVU1223
 3851 0010 FFF7FEFF 		bl	lv_tick_get
 3852              	.LVL384:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 116


 188:lvgl/src/lv_core/lv_indev.c ****     indev->proc.pr_timestamp         = lv_tick_get();
 3853              		.loc 1 188 38 view .LVU1224
 3854 0014 E064     		str	r0, [r4, #76]
 189:lvgl/src/lv_core/lv_indev.c **** }
 3855              		.loc 1 189 5 is_stmt 1 view .LVU1225
 189:lvgl/src/lv_core/lv_indev.c **** }
 3856              		.loc 1 189 40 is_stmt 0 view .LVU1226
 3857 0016 FFF7FEFF 		bl	lv_tick_get
 3858              	.LVL385:
 189:lvgl/src/lv_core/lv_indev.c **** }
 3859              		.loc 1 189 38 view .LVU1227
 3860 001a A064     		str	r0, [r4, #72]
 190:lvgl/src/lv_core/lv_indev.c **** 
 3861              		.loc 1 190 1 view .LVU1228
 3862 001c 10BD     		pop	{r4, pc}
 190:lvgl/src/lv_core/lv_indev.c **** 
 3863              		.loc 1 190 1 view .LVU1229
 3864              		.cfi_endproc
 3865              	.LFE468:
 3867              		.section	.text.lv_indev_enable,"ax",%progbits
 3868              		.align	1
 3869              		.global	lv_indev_enable
 3870              		.syntax unified
 3871              		.thumb
 3872              		.thumb_func
 3873              		.fpu fpv4-sp-d16
 3875              	lv_indev_enable:
 3876              	.LVL386:
 3877              	.LFB469:
 198:lvgl/src/lv_core/lv_indev.c ****     if(!indev) return;
 3878              		.loc 1 198 1 is_stmt 1 view -0
 3879              		.cfi_startproc
 3880              		@ args = 0, pretend = 0, frame = 0
 3881              		@ frame_needed = 0, uses_anonymous_args = 0
 3882              		@ link register save eliminated.
 199:lvgl/src/lv_core/lv_indev.c **** 
 3883              		.loc 1 199 5 view .LVU1231
 199:lvgl/src/lv_core/lv_indev.c **** 
 3884              		.loc 1 199 7 is_stmt 0 view .LVU1232
 3885 0000 38B1     		cbz	r0, .L264
 201:lvgl/src/lv_core/lv_indev.c **** }
 3886              		.loc 1 201 5 is_stmt 1 view .LVU1233
 201:lvgl/src/lv_core/lv_indev.c **** }
 3887              		.loc 1 201 35 is_stmt 0 view .LVU1234
 3888 0002 81F00101 		eor	r1, r1, #1
 3889              	.LVL387:
 201:lvgl/src/lv_core/lv_indev.c **** }
 3890              		.loc 1 201 26 view .LVU1235
 3891 0006 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 3892 000a 61F38202 		bfi	r2, r1, #2, #1
 3893 000e 80F85020 		strb	r2, [r0, #80]
 3894              	.L264:
 202:lvgl/src/lv_core/lv_indev.c **** 
 3895              		.loc 1 202 1 view .LVU1236
 3896 0012 7047     		bx	lr
 3897              		.cfi_endproc
 3898              	.LFE469:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 117


 3900              		.section	.text.lv_indev_set_cursor,"ax",%progbits
 3901              		.align	1
 3902              		.global	lv_indev_set_cursor
 3903              		.syntax unified
 3904              		.thumb
 3905              		.thumb_func
 3906              		.fpu fpv4-sp-d16
 3908              	lv_indev_set_cursor:
 3909              	.LVL388:
 3910              	.LFB470:
 210:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER) return;
 3911              		.loc 1 210 1 is_stmt 1 view -0
 3912              		.cfi_startproc
 3913              		@ args = 0, pretend = 0, frame = 0
 3914              		@ frame_needed = 0, uses_anonymous_args = 0
 210:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER) return;
 3915              		.loc 1 210 1 is_stmt 0 view .LVU1238
 3916 0000 38B5     		push	{r3, r4, r5, lr}
 3917              	.LCFI23:
 3918              		.cfi_def_cfa_offset 16
 3919              		.cfi_offset 3, -16
 3920              		.cfi_offset 4, -12
 3921              		.cfi_offset 5, -8
 3922              		.cfi_offset 14, -4
 211:lvgl/src/lv_core/lv_indev.c **** 
 3923              		.loc 1 211 5 is_stmt 1 view .LVU1239
 211:lvgl/src/lv_core/lv_indev.c **** 
 3924              		.loc 1 211 21 is_stmt 0 view .LVU1240
 3925 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 211:lvgl/src/lv_core/lv_indev.c **** 
 3926              		.loc 1 211 7 view .LVU1241
 3927 0004 012B     		cmp	r3, #1
 3928 0006 00D0     		beq	.L269
 3929              	.LVL389:
 3930              	.L266:
 217:lvgl/src/lv_core/lv_indev.c **** 
 3931              		.loc 1 217 1 view .LVU1242
 3932 0008 38BD     		pop	{r3, r4, r5, pc}
 3933              	.LVL390:
 3934              	.L269:
 217:lvgl/src/lv_core/lv_indev.c **** 
 3935              		.loc 1 217 1 view .LVU1243
 3936 000a 0D46     		mov	r5, r1
 3937 000c 0446     		mov	r4, r0
 213:lvgl/src/lv_core/lv_indev.c ****     lv_obj_set_parent(indev->cursor, lv_disp_get_layer_sys(indev->driver.disp));
 3938              		.loc 1 213 5 is_stmt 1 view .LVU1244
 213:lvgl/src/lv_core/lv_indev.c ****     lv_obj_set_parent(indev->cursor, lv_disp_get_layer_sys(indev->driver.disp));
 3939              		.loc 1 213 19 is_stmt 0 view .LVU1245
 3940 000e 6165     		str	r1, [r4, #84]
 214:lvgl/src/lv_core/lv_indev.c ****     lv_obj_set_pos(indev->cursor, indev->proc.types.pointer.act_point.x, indev->proc.types.pointer.
 3941              		.loc 1 214 5 is_stmt 1 view .LVU1246
 3942 0010 C068     		ldr	r0, [r0, #12]
 3943              	.LVL391:
 214:lvgl/src/lv_core/lv_indev.c ****     lv_obj_set_pos(indev->cursor, indev->proc.types.pointer.act_point.x, indev->proc.types.pointer.
 3944              		.loc 1 214 5 is_stmt 0 view .LVU1247
 3945 0012 FFF7FEFF 		bl	lv_disp_get_layer_sys
 3946              	.LVL392:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 118


 214:lvgl/src/lv_core/lv_indev.c ****     lv_obj_set_pos(indev->cursor, indev->proc.types.pointer.act_point.x, indev->proc.types.pointer.
 3947              		.loc 1 214 5 view .LVU1248
 3948 0016 0146     		mov	r1, r0
 3949 0018 2846     		mov	r0, r5
 3950 001a FFF7FEFF 		bl	lv_obj_set_parent
 3951              	.LVL393:
 215:lvgl/src/lv_core/lv_indev.c ****     lv_obj_set_click(indev->cursor, false);
 3952              		.loc 1 215 5 is_stmt 1 view .LVU1249
 3953 001e B4F92220 		ldrsh	r2, [r4, #34]
 3954 0022 B4F92010 		ldrsh	r1, [r4, #32]
 3955 0026 606D     		ldr	r0, [r4, #84]
 3956 0028 FFF7FEFF 		bl	lv_obj_set_pos
 3957              	.LVL394:
 216:lvgl/src/lv_core/lv_indev.c **** }
 3958              		.loc 1 216 5 view .LVU1250
 3959 002c 0021     		movs	r1, #0
 3960 002e 606D     		ldr	r0, [r4, #84]
 3961 0030 FFF7FEFF 		bl	lv_obj_set_click
 3962              	.LVL395:
 3963 0034 E8E7     		b	.L266
 3964              		.cfi_endproc
 3965              	.LFE470:
 3967              		.section	.text.lv_indev_set_group,"ax",%progbits
 3968              		.align	1
 3969              		.global	lv_indev_set_group
 3970              		.syntax unified
 3971              		.thumb
 3972              		.thumb_func
 3973              		.fpu fpv4-sp-d16
 3975              	lv_indev_set_group:
 3976              	.LVL396:
 3977              	.LFB471:
 226:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type == LV_INDEV_TYPE_KEYPAD || indev->driver.type == LV_INDEV_TYPE_ENCODER) {
 3978              		.loc 1 226 1 view -0
 3979              		.cfi_startproc
 3980              		@ args = 0, pretend = 0, frame = 0
 3981              		@ frame_needed = 0, uses_anonymous_args = 0
 3982              		@ link register save eliminated.
 227:lvgl/src/lv_core/lv_indev.c ****         indev->group = group;
 3983              		.loc 1 227 5 view .LVU1252
 227:lvgl/src/lv_core/lv_indev.c ****         indev->group = group;
 3984              		.loc 1 227 21 is_stmt 0 view .LVU1253
 3985 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 227:lvgl/src/lv_core/lv_indev.c ****         indev->group = group;
 3986              		.loc 1 227 7 view .LVU1254
 3987 0002 022B     		cmp	r3, #2
 3988 0004 01D0     		beq	.L271
 227:lvgl/src/lv_core/lv_indev.c ****         indev->group = group;
 3989              		.loc 1 227 51 discriminator 1 view .LVU1255
 3990 0006 042B     		cmp	r3, #4
 3991 0008 00D1     		bne	.L270
 3992              	.L271:
 228:lvgl/src/lv_core/lv_indev.c ****     }
 3993              		.loc 1 228 9 is_stmt 1 view .LVU1256
 228:lvgl/src/lv_core/lv_indev.c ****     }
 3994              		.loc 1 228 22 is_stmt 0 view .LVU1257
 3995 000a 8165     		str	r1, [r0, #88]
ARM GAS  D:\Temp\cc3iPNN1.s 			page 119


 3996              	.L270:
 230:lvgl/src/lv_core/lv_indev.c **** #endif
 3997              		.loc 1 230 1 view .LVU1258
 3998 000c 7047     		bx	lr
 3999              		.cfi_endproc
 4000              	.LFE471:
 4002              		.section	.text.lv_indev_set_button_points,"ax",%progbits
 4003              		.align	1
 4004              		.global	lv_indev_set_button_points
 4005              		.syntax unified
 4006              		.thumb
 4007              		.thumb_func
 4008              		.fpu fpv4-sp-d16
 4010              	lv_indev_set_button_points:
 4011              	.LVL397:
 4012              	.LFB472:
 240:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type == LV_INDEV_TYPE_BUTTON) {
 4013              		.loc 1 240 1 is_stmt 1 view -0
 4014              		.cfi_startproc
 4015              		@ args = 0, pretend = 0, frame = 0
 4016              		@ frame_needed = 0, uses_anonymous_args = 0
 4017              		@ link register save eliminated.
 241:lvgl/src/lv_core/lv_indev.c ****         indev->btn_points = points;
 4018              		.loc 1 241 5 view .LVU1260
 241:lvgl/src/lv_core/lv_indev.c ****         indev->btn_points = points;
 4019              		.loc 1 241 21 is_stmt 0 view .LVU1261
 4020 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 241:lvgl/src/lv_core/lv_indev.c ****         indev->btn_points = points;
 4021              		.loc 1 241 7 view .LVU1262
 4022 0002 032B     		cmp	r3, #3
 4023 0004 00D0     		beq	.L275
 4024              	.L273:
 244:lvgl/src/lv_core/lv_indev.c **** 
 4025              		.loc 1 244 1 view .LVU1263
 4026 0006 7047     		bx	lr
 4027              	.L275:
 242:lvgl/src/lv_core/lv_indev.c ****     }
 4028              		.loc 1 242 9 is_stmt 1 view .LVU1264
 242:lvgl/src/lv_core/lv_indev.c ****     }
 4029              		.loc 1 242 27 is_stmt 0 view .LVU1265
 4030 0008 C165     		str	r1, [r0, #92]
 244:lvgl/src/lv_core/lv_indev.c **** 
 4031              		.loc 1 244 1 view .LVU1266
 4032 000a FCE7     		b	.L273
 4033              		.cfi_endproc
 4034              	.LFE472:
 4036              		.section	.text.lv_indev_get_point,"ax",%progbits
 4037              		.align	1
 4038              		.global	lv_indev_get_point
 4039              		.syntax unified
 4040              		.thumb
 4041              		.thumb_func
 4042              		.fpu fpv4-sp-d16
 4044              	lv_indev_get_point:
 4045              	.LVL398:
 4046              	.LFB473:
 252:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL) {
ARM GAS  D:\Temp\cc3iPNN1.s 			page 120


 4047              		.loc 1 252 1 is_stmt 1 view -0
 4048              		.cfi_startproc
 4049              		@ args = 0, pretend = 0, frame = 0
 4050              		@ frame_needed = 0, uses_anonymous_args = 0
 4051              		@ link register save eliminated.
 253:lvgl/src/lv_core/lv_indev.c ****         point->x = 0;
 4052              		.loc 1 253 5 view .LVU1268
 253:lvgl/src/lv_core/lv_indev.c ****         point->x = 0;
 4053              		.loc 1 253 7 is_stmt 0 view .LVU1269
 4054 0000 0346     		mov	r3, r0
 4055 0002 48B1     		cbz	r0, .L280
 258:lvgl/src/lv_core/lv_indev.c ****         point->x = -1;
 4056              		.loc 1 258 5 is_stmt 1 view .LVU1270
 258:lvgl/src/lv_core/lv_indev.c ****         point->x = -1;
 4057              		.loc 1 258 21 is_stmt 0 view .LVU1271
 4058 0004 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 258:lvgl/src/lv_core/lv_indev.c ****         point->x = -1;
 4059              		.loc 1 258 7 view .LVU1272
 4060 0006 012A     		cmp	r2, #1
 4061 0008 0AD0     		beq	.L279
 258:lvgl/src/lv_core/lv_indev.c ****         point->x = -1;
 4062              		.loc 1 258 52 discriminator 1 view .LVU1273
 4063 000a 032A     		cmp	r2, #3
 4064 000c 08D0     		beq	.L279
 259:lvgl/src/lv_core/lv_indev.c ****         point->y = -1;
 4065              		.loc 1 259 9 is_stmt 1 view .LVU1274
 259:lvgl/src/lv_core/lv_indev.c ****         point->y = -1;
 4066              		.loc 1 259 18 is_stmt 0 view .LVU1275
 4067 000e 4FF6FF73 		movw	r3, #65535
 4068 0012 0B80     		strh	r3, [r1]	@ movhi
 260:lvgl/src/lv_core/lv_indev.c ****     }
 4069              		.loc 1 260 9 is_stmt 1 view .LVU1276
 260:lvgl/src/lv_core/lv_indev.c ****     }
 4070              		.loc 1 260 18 is_stmt 0 view .LVU1277
 4071 0014 4B80     		strh	r3, [r1, #2]	@ movhi
 4072 0016 7047     		bx	lr
 4073              	.L280:
 254:lvgl/src/lv_core/lv_indev.c ****         point->y = 0;
 4074              		.loc 1 254 9 is_stmt 1 view .LVU1278
 254:lvgl/src/lv_core/lv_indev.c ****         point->y = 0;
 4075              		.loc 1 254 18 is_stmt 0 view .LVU1279
 4076 0018 0023     		movs	r3, #0
 4077 001a 0B80     		strh	r3, [r1]	@ movhi
 255:lvgl/src/lv_core/lv_indev.c ****         return;
 4078              		.loc 1 255 9 is_stmt 1 view .LVU1280
 255:lvgl/src/lv_core/lv_indev.c ****         return;
 4079              		.loc 1 255 18 is_stmt 0 view .LVU1281
 4080 001c 4B80     		strh	r3, [r1, #2]	@ movhi
 256:lvgl/src/lv_core/lv_indev.c ****     }
 4081              		.loc 1 256 9 is_stmt 1 view .LVU1282
 4082 001e 7047     		bx	lr
 4083              	.L279:
 263:lvgl/src/lv_core/lv_indev.c ****         point->y = indev->proc.types.pointer.act_point.y;
 4084              		.loc 1 263 9 view .LVU1283
 263:lvgl/src/lv_core/lv_indev.c ****         point->y = indev->proc.types.pointer.act_point.y;
 4085              		.loc 1 263 55 is_stmt 0 view .LVU1284
 4086 0020 B3F92020 		ldrsh	r2, [r3, #32]
ARM GAS  D:\Temp\cc3iPNN1.s 			page 121


 263:lvgl/src/lv_core/lv_indev.c ****         point->y = indev->proc.types.pointer.act_point.y;
 4087              		.loc 1 263 18 view .LVU1285
 4088 0024 0A80     		strh	r2, [r1]	@ movhi
 264:lvgl/src/lv_core/lv_indev.c ****     }
 4089              		.loc 1 264 9 is_stmt 1 view .LVU1286
 264:lvgl/src/lv_core/lv_indev.c ****     }
 4090              		.loc 1 264 55 is_stmt 0 view .LVU1287
 4091 0026 B3F92230 		ldrsh	r3, [r3, #34]
 264:lvgl/src/lv_core/lv_indev.c ****     }
 4092              		.loc 1 264 18 view .LVU1288
 4093 002a 4B80     		strh	r3, [r1, #2]	@ movhi
 266:lvgl/src/lv_core/lv_indev.c **** 
 4094              		.loc 1 266 1 view .LVU1289
 4095 002c 7047     		bx	lr
 4096              		.cfi_endproc
 4097              	.LFE473:
 4099              		.section	.text.lv_indev_get_gesture_dir,"ax",%progbits
 4100              		.align	1
 4101              		.global	lv_indev_get_gesture_dir
 4102              		.syntax unified
 4103              		.thumb
 4104              		.thumb_func
 4105              		.fpu fpv4-sp-d16
 4107              	lv_indev_get_gesture_dir:
 4108              	.LVL399:
 4109              	.LFB474:
 274:lvgl/src/lv_core/lv_indev.c ****     return indev->proc.types.pointer.gesture_dir;
 4110              		.loc 1 274 1 is_stmt 1 view -0
 4111              		.cfi_startproc
 4112              		@ args = 0, pretend = 0, frame = 0
 4113              		@ frame_needed = 0, uses_anonymous_args = 0
 4114              		@ link register save eliminated.
 275:lvgl/src/lv_core/lv_indev.c **** }
 4115              		.loc 1 275 5 view .LVU1291
 276:lvgl/src/lv_core/lv_indev.c **** 
 4116              		.loc 1 276 1 is_stmt 0 view .LVU1292
 4117 0000 90F84000 		ldrb	r0, [r0, #64]	@ zero_extendqisi2
 4118              	.LVL400:
 276:lvgl/src/lv_core/lv_indev.c **** 
 4119              		.loc 1 276 1 view .LVU1293
 4120 0004 7047     		bx	lr
 4121              		.cfi_endproc
 4122              	.LFE474:
 4124              		.section	.text.lv_indev_get_key,"ax",%progbits
 4125              		.align	1
 4126              		.global	lv_indev_get_key
 4127              		.syntax unified
 4128              		.thumb
 4129              		.thumb_func
 4130              		.fpu fpv4-sp-d16
 4132              	lv_indev_get_key:
 4133              	.LVL401:
 4134              	.LFB475:
 284:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_KEYPAD)
 4135              		.loc 1 284 1 is_stmt 1 view -0
 4136              		.cfi_startproc
 4137              		@ args = 0, pretend = 0, frame = 0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 122


 4138              		@ frame_needed = 0, uses_anonymous_args = 0
 4139              		@ link register save eliminated.
 285:lvgl/src/lv_core/lv_indev.c ****         return 0;
 4140              		.loc 1 285 5 view .LVU1295
 285:lvgl/src/lv_core/lv_indev.c ****         return 0;
 4141              		.loc 1 285 21 is_stmt 0 view .LVU1296
 4142 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 285:lvgl/src/lv_core/lv_indev.c ****         return 0;
 4143              		.loc 1 285 7 view .LVU1297
 4144 0002 022B     		cmp	r3, #2
 4145 0004 01D0     		beq	.L285
 286:lvgl/src/lv_core/lv_indev.c ****     else
 4146              		.loc 1 286 16 view .LVU1298
 4147 0006 0020     		movs	r0, #0
 4148              	.LVL402:
 289:lvgl/src/lv_core/lv_indev.c **** 
 4149              		.loc 1 289 1 view .LVU1299
 4150 0008 7047     		bx	lr
 4151              	.LVL403:
 4152              	.L285:
 288:lvgl/src/lv_core/lv_indev.c **** }
 4153              		.loc 1 288 9 is_stmt 1 view .LVU1300
 288:lvgl/src/lv_core/lv_indev.c **** }
 4154              		.loc 1 288 40 is_stmt 0 view .LVU1301
 4155 000a 406A     		ldr	r0, [r0, #36]
 4156              	.LVL404:
 288:lvgl/src/lv_core/lv_indev.c **** }
 4157              		.loc 1 288 40 view .LVU1302
 4158 000c 7047     		bx	lr
 4159              		.cfi_endproc
 4160              	.LFE475:
 4162              		.section	.text.lv_indev_is_dragging,"ax",%progbits
 4163              		.align	1
 4164              		.global	lv_indev_is_dragging
 4165              		.syntax unified
 4166              		.thumb
 4167              		.thumb_func
 4168              		.fpu fpv4-sp-d16
 4170              	lv_indev_is_dragging:
 4171              	.LVL405:
 4172              	.LFB476:
 298:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL) return false;
 4173              		.loc 1 298 1 is_stmt 1 view -0
 4174              		.cfi_startproc
 4175              		@ args = 0, pretend = 0, frame = 0
 4176              		@ frame_needed = 0, uses_anonymous_args = 0
 4177              		@ link register save eliminated.
 299:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER && indev->driver.type != LV_INDEV_TYPE_BUTTON) r
 4178              		.loc 1 299 5 view .LVU1304
 299:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER && indev->driver.type != LV_INDEV_TYPE_BUTTON) r
 4179              		.loc 1 299 7 is_stmt 0 view .LVU1305
 4180 0000 0346     		mov	r3, r0
 4181 0002 48B1     		cbz	r0, .L289
 300:lvgl/src/lv_core/lv_indev.c ****     return indev->proc.types.pointer.drag_in_prog == 0 ? false : true;
 4182              		.loc 1 300 5 is_stmt 1 view .LVU1306
 300:lvgl/src/lv_core/lv_indev.c ****     return indev->proc.types.pointer.drag_in_prog == 0 ? false : true;
 4183              		.loc 1 300 21 is_stmt 0 view .LVU1307
ARM GAS  D:\Temp\cc3iPNN1.s 			page 123


 4184 0004 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 300:lvgl/src/lv_core/lv_indev.c ****     return indev->proc.types.pointer.drag_in_prog == 0 ? false : true;
 4185              		.loc 1 300 7 view .LVU1308
 4186 0006 012A     		cmp	r2, #1
 4187 0008 01D0     		beq	.L288
 300:lvgl/src/lv_core/lv_indev.c ****     return indev->proc.types.pointer.drag_in_prog == 0 ? false : true;
 4188              		.loc 1 300 52 discriminator 1 view .LVU1309
 4189 000a 032A     		cmp	r2, #3
 4190 000c 06D1     		bne	.L290
 4191              	.L288:
 301:lvgl/src/lv_core/lv_indev.c **** }
 4192              		.loc 1 301 5 is_stmt 1 view .LVU1310
 301:lvgl/src/lv_core/lv_indev.c **** }
 4193              		.loc 1 301 51 is_stmt 0 view .LVU1311
 4194 000e 93F84600 		ldrb	r0, [r3, #70]	@ zero_extendqisi2
 4195              	.LVL406:
 301:lvgl/src/lv_core/lv_indev.c **** }
 4196              		.loc 1 301 64 view .LVU1312
 4197 0012 C0F34000 		ubfx	r0, r0, #1, #1
 4198 0016 7047     		bx	lr
 4199              	.LVL407:
 4200              	.L289:
 299:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER && indev->driver.type != LV_INDEV_TYPE_BUTTON) r
 4201              		.loc 1 299 30 view .LVU1313
 4202 0018 0020     		movs	r0, #0
 4203              	.LVL408:
 299:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER && indev->driver.type != LV_INDEV_TYPE_BUTTON) r
 4204              		.loc 1 299 30 view .LVU1314
 4205 001a 7047     		bx	lr
 4206              	.LVL409:
 4207              	.L290:
 300:lvgl/src/lv_core/lv_indev.c ****     return indev->proc.types.pointer.drag_in_prog == 0 ? false : true;
 4208              		.loc 1 300 106 view .LVU1315
 4209 001c 0020     		movs	r0, #0
 4210              	.LVL410:
 302:lvgl/src/lv_core/lv_indev.c **** 
 4211              		.loc 1 302 1 view .LVU1316
 4212 001e 7047     		bx	lr
 4213              		.cfi_endproc
 4214              	.LFE476:
 4216              		.section	.text.lv_indev_get_vect,"ax",%progbits
 4217              		.align	1
 4218              		.global	lv_indev_get_vect
 4219              		.syntax unified
 4220              		.thumb
 4221              		.thumb_func
 4222              		.fpu fpv4-sp-d16
 4224              	lv_indev_get_vect:
 4225              	.LVL411:
 4226              	.LFB477:
 311:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL) {
 4227              		.loc 1 311 1 is_stmt 1 view -0
 4228              		.cfi_startproc
 4229              		@ args = 0, pretend = 0, frame = 0
 4230              		@ frame_needed = 0, uses_anonymous_args = 0
 4231              		@ link register save eliminated.
 312:lvgl/src/lv_core/lv_indev.c ****         point->x = 0;
ARM GAS  D:\Temp\cc3iPNN1.s 			page 124


 4232              		.loc 1 312 5 view .LVU1318
 312:lvgl/src/lv_core/lv_indev.c ****         point->x = 0;
 4233              		.loc 1 312 7 is_stmt 0 view .LVU1319
 4234 0000 0346     		mov	r3, r0
 4235 0002 40B1     		cbz	r0, .L295
 318:lvgl/src/lv_core/lv_indev.c ****         point->x = 0;
 4236              		.loc 1 318 5 is_stmt 1 view .LVU1320
 318:lvgl/src/lv_core/lv_indev.c ****         point->x = 0;
 4237              		.loc 1 318 21 is_stmt 0 view .LVU1321
 4238 0004 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 318:lvgl/src/lv_core/lv_indev.c ****         point->x = 0;
 4239              		.loc 1 318 7 view .LVU1322
 4240 0006 012A     		cmp	r2, #1
 4241 0008 09D0     		beq	.L294
 318:lvgl/src/lv_core/lv_indev.c ****         point->x = 0;
 4242              		.loc 1 318 52 discriminator 1 view .LVU1323
 4243 000a 032A     		cmp	r2, #3
 4244 000c 07D0     		beq	.L294
 319:lvgl/src/lv_core/lv_indev.c ****         point->y = 0;
 4245              		.loc 1 319 9 is_stmt 1 view .LVU1324
 319:lvgl/src/lv_core/lv_indev.c ****         point->y = 0;
 4246              		.loc 1 319 18 is_stmt 0 view .LVU1325
 4247 000e 0023     		movs	r3, #0
 4248 0010 0B80     		strh	r3, [r1]	@ movhi
 320:lvgl/src/lv_core/lv_indev.c ****     }
 4249              		.loc 1 320 9 is_stmt 1 view .LVU1326
 320:lvgl/src/lv_core/lv_indev.c ****     }
 4250              		.loc 1 320 18 is_stmt 0 view .LVU1327
 4251 0012 4B80     		strh	r3, [r1, #2]	@ movhi
 4252 0014 7047     		bx	lr
 4253              	.L295:
 313:lvgl/src/lv_core/lv_indev.c ****         point->y = 0;
 4254              		.loc 1 313 9 is_stmt 1 view .LVU1328
 313:lvgl/src/lv_core/lv_indev.c ****         point->y = 0;
 4255              		.loc 1 313 18 is_stmt 0 view .LVU1329
 4256 0016 0023     		movs	r3, #0
 4257 0018 0B80     		strh	r3, [r1]	@ movhi
 314:lvgl/src/lv_core/lv_indev.c ****         return;
 4258              		.loc 1 314 9 is_stmt 1 view .LVU1330
 314:lvgl/src/lv_core/lv_indev.c ****         return;
 4259              		.loc 1 314 18 is_stmt 0 view .LVU1331
 4260 001a 4B80     		strh	r3, [r1, #2]	@ movhi
 315:lvgl/src/lv_core/lv_indev.c ****     }
 4261              		.loc 1 315 9 is_stmt 1 view .LVU1332
 4262 001c 7047     		bx	lr
 4263              	.L294:
 323:lvgl/src/lv_core/lv_indev.c ****         point->y = indev->proc.types.pointer.vect.y;
 4264              		.loc 1 323 9 view .LVU1333
 323:lvgl/src/lv_core/lv_indev.c ****         point->y = indev->proc.types.pointer.vect.y;
 4265              		.loc 1 323 50 is_stmt 0 view .LVU1334
 4266 001e B3F92820 		ldrsh	r2, [r3, #40]
 323:lvgl/src/lv_core/lv_indev.c ****         point->y = indev->proc.types.pointer.vect.y;
 4267              		.loc 1 323 18 view .LVU1335
 4268 0022 0A80     		strh	r2, [r1]	@ movhi
 324:lvgl/src/lv_core/lv_indev.c ****     }
 4269              		.loc 1 324 9 is_stmt 1 view .LVU1336
 324:lvgl/src/lv_core/lv_indev.c ****     }
ARM GAS  D:\Temp\cc3iPNN1.s 			page 125


 4270              		.loc 1 324 50 is_stmt 0 view .LVU1337
 4271 0024 B3F92A30 		ldrsh	r3, [r3, #42]
 324:lvgl/src/lv_core/lv_indev.c ****     }
 4272              		.loc 1 324 18 view .LVU1338
 4273 0028 4B80     		strh	r3, [r1, #2]	@ movhi
 326:lvgl/src/lv_core/lv_indev.c **** 
 4274              		.loc 1 326 1 view .LVU1339
 4275 002a 7047     		bx	lr
 4276              		.cfi_endproc
 4277              	.LFE477:
 4279              		.section	.text.lv_indev_finish_drag,"ax",%progbits
 4280              		.align	1
 4281              		.global	lv_indev_finish_drag
 4282              		.syntax unified
 4283              		.thumb
 4284              		.thumb_func
 4285              		.fpu fpv4-sp-d16
 4287              	lv_indev_finish_drag:
 4288              	.LVL412:
 4289              	.LFB478:
 335:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL) return LV_RES_OK;
 4290              		.loc 1 335 1 is_stmt 1 view -0
 4291              		.cfi_startproc
 4292              		@ args = 0, pretend = 0, frame = 0
 4293              		@ frame_needed = 0, uses_anonymous_args = 0
 336:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER) return LV_RES_OK;
 4294              		.loc 1 336 5 view .LVU1341
 336:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER) return LV_RES_OK;
 4295              		.loc 1 336 7 is_stmt 0 view .LVU1342
 4296 0000 28B3     		cbz	r0, .L298
 337:lvgl/src/lv_core/lv_indev.c ****     if(indev->proc.types.pointer.drag_in_prog == 0) return LV_RES_OK;
 4297              		.loc 1 337 5 is_stmt 1 view .LVU1343
 337:lvgl/src/lv_core/lv_indev.c ****     if(indev->proc.types.pointer.drag_in_prog == 0) return LV_RES_OK;
 4298              		.loc 1 337 21 is_stmt 0 view .LVU1344
 4299 0002 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 337:lvgl/src/lv_core/lv_indev.c ****     if(indev->proc.types.pointer.drag_in_prog == 0) return LV_RES_OK;
 4300              		.loc 1 337 7 view .LVU1345
 4301 0004 012A     		cmp	r2, #1
 4302 0006 24D1     		bne	.L299
 338:lvgl/src/lv_core/lv_indev.c **** 
 4303              		.loc 1 338 5 is_stmt 1 view .LVU1346
 338:lvgl/src/lv_core/lv_indev.c **** 
 4304              		.loc 1 338 47 is_stmt 0 view .LVU1347
 4305 0008 90F84620 		ldrb	r2, [r0, #70]	@ zero_extendqisi2
 338:lvgl/src/lv_core/lv_indev.c **** 
 4306              		.loc 1 338 7 view .LVU1348
 4307 000c 12F0020F 		tst	r2, #2
 4308 0010 01D1     		bne	.L306
 338:lvgl/src/lv_core/lv_indev.c **** 
 4309              		.loc 1 338 60 view .LVU1349
 4310 0012 0120     		movs	r0, #1
 4311              	.LVL413:
 356:lvgl/src/lv_core/lv_indev.c **** 
 4312              		.loc 1 356 1 view .LVU1350
 4313 0014 7047     		bx	lr
 4314              	.LVL414:
 4315              	.L306:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 126


 335:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL) return LV_RES_OK;
 4316              		.loc 1 335 1 view .LVU1351
 4317 0016 10B5     		push	{r4, lr}
 4318              	.LCFI24:
 4319              		.cfi_def_cfa_offset 8
 4320              		.cfi_offset 4, -8
 4321              		.cfi_offset 14, -4
 340:lvgl/src/lv_core/lv_indev.c ****     indev->proc.types.pointer.drag_throw_vect.x = 0;
 4322              		.loc 1 340 5 is_stmt 1 view .LVU1352
 340:lvgl/src/lv_core/lv_indev.c ****     indev->proc.types.pointer.drag_throw_vect.x = 0;
 4323              		.loc 1 340 44 is_stmt 0 view .LVU1353
 4324 0018 90F84620 		ldrb	r2, [r0, #70]	@ zero_extendqisi2
 4325 001c 6FF34102 		bfc	r2, #1, #1
 4326 0020 80F84620 		strb	r2, [r0, #70]
 341:lvgl/src/lv_core/lv_indev.c ****     indev->proc.types.pointer.drag_throw_vect.y = 0;
 4327              		.loc 1 341 5 is_stmt 1 view .LVU1354
 341:lvgl/src/lv_core/lv_indev.c ****     indev->proc.types.pointer.drag_throw_vect.y = 0;
 4328              		.loc 1 341 49 is_stmt 0 view .LVU1355
 4329 0024 0022     		movs	r2, #0
 4330 0026 0286     		strh	r2, [r0, #48]	@ movhi
 342:lvgl/src/lv_core/lv_indev.c **** 
 4331              		.loc 1 342 5 is_stmt 1 view .LVU1356
 342:lvgl/src/lv_core/lv_indev.c **** 
 4332              		.loc 1 342 49 is_stmt 0 view .LVU1357
 4333 0028 4286     		strh	r2, [r0, #50]	@ movhi
 344:lvgl/src/lv_core/lv_indev.c ****     drag_obj = get_dragged_obj(indev->proc.types.pointer.act_obj);
 4334              		.loc 1 344 5 is_stmt 1 view .LVU1358
 345:lvgl/src/lv_core/lv_indev.c ****     if(drag_obj == NULL) return LV_RES_OK;
 4335              		.loc 1 345 5 view .LVU1359
 345:lvgl/src/lv_core/lv_indev.c ****     if(drag_obj == NULL) return LV_RES_OK;
 4336              		.loc 1 345 16 is_stmt 0 view .LVU1360
 4337 002a 406B     		ldr	r0, [r0, #52]
 4338              	.LVL415:
 345:lvgl/src/lv_core/lv_indev.c ****     if(drag_obj == NULL) return LV_RES_OK;
 4339              		.loc 1 345 16 view .LVU1361
 4340 002c FFF7FEFF 		bl	get_dragged_obj
 4341              	.LVL416:
 346:lvgl/src/lv_core/lv_indev.c **** 
 4342              		.loc 1 346 5 is_stmt 1 view .LVU1362
 346:lvgl/src/lv_core/lv_indev.c **** 
 4343              		.loc 1 346 7 is_stmt 0 view .LVU1363
 4344 0030 0446     		mov	r4, r0
 4345 0032 80B1     		cbz	r0, .L301
 348:lvgl/src/lv_core/lv_indev.c ****     res = drag_obj->signal_cb(drag_obj, LV_SIGNAL_DRAG_END, NULL);
 4346              		.loc 1 348 5 is_stmt 1 view .LVU1364
 349:lvgl/src/lv_core/lv_indev.c ****     if(res != LV_RES_OK) return res;
 4347              		.loc 1 349 5 view .LVU1365
 349:lvgl/src/lv_core/lv_indev.c ****     if(res != LV_RES_OK) return res;
 4348              		.loc 1 349 19 is_stmt 0 view .LVU1366
 4349 0034 C369     		ldr	r3, [r0, #28]
 349:lvgl/src/lv_core/lv_indev.c ****     if(res != LV_RES_OK) return res;
 4350              		.loc 1 349 11 view .LVU1367
 4351 0036 0022     		movs	r2, #0
 4352 0038 1321     		movs	r1, #19
 4353 003a 9847     		blx	r3
 4354              	.LVL417:
 350:lvgl/src/lv_core/lv_indev.c **** 
ARM GAS  D:\Temp\cc3iPNN1.s 			page 127


 4355              		.loc 1 350 5 is_stmt 1 view .LVU1368
 350:lvgl/src/lv_core/lv_indev.c **** 
 4356              		.loc 1 350 7 is_stmt 0 view .LVU1369
 4357 003c 0128     		cmp	r0, #1
 4358 003e 00D0     		beq	.L307
 4359              	.LVL418:
 4360              	.L297:
 356:lvgl/src/lv_core/lv_indev.c **** 
 4361              		.loc 1 356 1 view .LVU1370
 4362 0040 10BD     		pop	{r4, pc}
 4363              	.LVL419:
 4364              	.L307:
 352:lvgl/src/lv_core/lv_indev.c ****     if(res != LV_RES_OK) return res;
 4365              		.loc 1 352 5 is_stmt 1 view .LVU1371
 352:lvgl/src/lv_core/lv_indev.c ****     if(res != LV_RES_OK) return res;
 4366              		.loc 1 352 11 is_stmt 0 view .LVU1372
 4367 0042 0022     		movs	r2, #0
 4368 0044 0921     		movs	r1, #9
 4369 0046 2046     		mov	r0, r4
 4370              	.LVL420:
 352:lvgl/src/lv_core/lv_indev.c ****     if(res != LV_RES_OK) return res;
 4371              		.loc 1 352 11 view .LVU1373
 4372 0048 FFF7FEFF 		bl	lv_event_send
 4373              	.LVL421:
 353:lvgl/src/lv_core/lv_indev.c **** 
 4374              		.loc 1 353 5 is_stmt 1 view .LVU1374
 4375 004c F8E7     		b	.L297
 4376              	.LVL422:
 4377              	.L298:
 4378              	.LCFI25:
 4379              		.cfi_def_cfa_offset 0
 4380              		.cfi_restore 4
 4381              		.cfi_restore 14
 336:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER) return LV_RES_OK;
 4382              		.loc 1 336 30 is_stmt 0 view .LVU1375
 4383 004e 0120     		movs	r0, #1
 4384              	.LVL423:
 336:lvgl/src/lv_core/lv_indev.c ****     if(indev->driver.type != LV_INDEV_TYPE_POINTER) return LV_RES_OK;
 4385              		.loc 1 336 30 view .LVU1376
 4386 0050 7047     		bx	lr
 4387              	.LVL424:
 4388              	.L299:
 337:lvgl/src/lv_core/lv_indev.c ****     if(indev->proc.types.pointer.drag_in_prog == 0) return LV_RES_OK;
 4389              		.loc 1 337 60 view .LVU1377
 4390 0052 0120     		movs	r0, #1
 4391              	.LVL425:
 337:lvgl/src/lv_core/lv_indev.c ****     if(indev->proc.types.pointer.drag_in_prog == 0) return LV_RES_OK;
 4392              		.loc 1 337 60 view .LVU1378
 4393 0054 7047     		bx	lr
 4394              	.LVL426:
 4395              	.L301:
 4396              	.LCFI26:
 4397              		.cfi_def_cfa_offset 8
 4398              		.cfi_offset 4, -8
 4399              		.cfi_offset 14, -4
 346:lvgl/src/lv_core/lv_indev.c **** 
 4400              		.loc 1 346 33 view .LVU1379
ARM GAS  D:\Temp\cc3iPNN1.s 			page 128


 4401 0056 0120     		movs	r0, #1
 4402              	.LVL427:
 346:lvgl/src/lv_core/lv_indev.c **** 
 4403              		.loc 1 346 33 view .LVU1380
 4404 0058 F2E7     		b	.L297
 4405              		.cfi_endproc
 4406              	.LFE478:
 4408              		.section	.text.lv_indev_wait_release,"ax",%progbits
 4409              		.align	1
 4410              		.global	lv_indev_wait_release
 4411              		.syntax unified
 4412              		.thumb
 4413              		.thumb_func
 4414              		.fpu fpv4-sp-d16
 4416              	lv_indev_wait_release:
 4417              	.LVL428:
 4418              	.LFB479:
 363:lvgl/src/lv_core/lv_indev.c ****     if(indev == NULL)return;
 4419              		.loc 1 363 1 is_stmt 1 view -0
 4420              		.cfi_startproc
 4421              		@ args = 0, pretend = 0, frame = 0
 4422              		@ frame_needed = 0, uses_anonymous_args = 0
 4423              		@ link register save eliminated.
 364:lvgl/src/lv_core/lv_indev.c ****     indev->proc.wait_until_release = 1;
 4424              		.loc 1 364 5 view .LVU1382
 364:lvgl/src/lv_core/lv_indev.c ****     indev->proc.wait_until_release = 1;
 4425              		.loc 1 364 7 is_stmt 0 view .LVU1383
 4426 0000 28B1     		cbz	r0, .L308
 365:lvgl/src/lv_core/lv_indev.c **** }
 4427              		.loc 1 365 5 is_stmt 1 view .LVU1384
 365:lvgl/src/lv_core/lv_indev.c **** }
 4428              		.loc 1 365 36 is_stmt 0 view .LVU1385
 4429 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 4430 0006 43F00803 		orr	r3, r3, #8
 4431 000a 80F85030 		strb	r3, [r0, #80]
 4432              	.L308:
 366:lvgl/src/lv_core/lv_indev.c **** 
 4433              		.loc 1 366 1 view .LVU1386
 4434 000e 7047     		bx	lr
 4435              		.cfi_endproc
 4436              	.LFE479:
 4438              		.section	.text.lv_indev_get_obj_act,"ax",%progbits
 4439              		.align	1
 4440              		.global	lv_indev_get_obj_act
 4441              		.syntax unified
 4442              		.thumb
 4443              		.thumb_func
 4444              		.fpu fpv4-sp-d16
 4446              	lv_indev_get_obj_act:
 4447              	.LFB480:
 373:lvgl/src/lv_core/lv_indev.c ****     return indev_obj_act;
 4448              		.loc 1 373 1 is_stmt 1 view -0
 4449              		.cfi_startproc
 4450              		@ args = 0, pretend = 0, frame = 0
 4451              		@ frame_needed = 0, uses_anonymous_args = 0
 4452              		@ link register save eliminated.
 374:lvgl/src/lv_core/lv_indev.c **** }
ARM GAS  D:\Temp\cc3iPNN1.s 			page 129


 4453              		.loc 1 374 5 view .LVU1388
 375:lvgl/src/lv_core/lv_indev.c **** 
 4454              		.loc 1 375 1 is_stmt 0 view .LVU1389
 4455 0000 014B     		ldr	r3, .L311
 4456 0002 1868     		ldr	r0, [r3]
 4457 0004 7047     		bx	lr
 4458              	.L312:
 4459 0006 00BF     		.align	2
 4460              	.L311:
 4461 0008 00000000 		.word	.LANCHOR0
 4462              		.cfi_endproc
 4463              	.LFE480:
 4465              		.section	.text.lv_indev_get_read_task,"ax",%progbits
 4466              		.align	1
 4467              		.global	lv_indev_get_read_task
 4468              		.syntax unified
 4469              		.thumb
 4470              		.thumb_func
 4471              		.fpu fpv4-sp-d16
 4473              	lv_indev_get_read_task:
 4474              	.LVL429:
 4475              	.LFB481:
 384:lvgl/src/lv_core/lv_indev.c ****     if(!indev) {
 4476              		.loc 1 384 1 is_stmt 1 view -0
 4477              		.cfi_startproc
 4478              		@ args = 0, pretend = 0, frame = 0
 4479              		@ frame_needed = 0, uses_anonymous_args = 0
 4480              		@ link register save eliminated.
 385:lvgl/src/lv_core/lv_indev.c ****         LV_LOG_WARN("lv_indev_get_read_task: indev was NULL");
 4481              		.loc 1 385 5 view .LVU1391
 385:lvgl/src/lv_core/lv_indev.c ****         LV_LOG_WARN("lv_indev_get_read_task: indev was NULL");
 4482              		.loc 1 385 7 is_stmt 0 view .LVU1392
 4483 0000 08B1     		cbz	r0, .L315
 390:lvgl/src/lv_core/lv_indev.c **** }
 4484              		.loc 1 390 5 is_stmt 1 view .LVU1393
 390:lvgl/src/lv_core/lv_indev.c **** }
 4485              		.loc 1 390 17 is_stmt 0 view .LVU1394
 4486 0002 406B     		ldr	r0, [r0, #52]
 4487              	.LVL430:
 390:lvgl/src/lv_core/lv_indev.c **** }
 4488              		.loc 1 390 17 view .LVU1395
 4489 0004 7047     		bx	lr
 4490              	.LVL431:
 4491              	.L315:
 387:lvgl/src/lv_core/lv_indev.c ****     }
 4492              		.loc 1 387 16 view .LVU1396
 4493 0006 0020     		movs	r0, #0
 4494              	.LVL432:
 391:lvgl/src/lv_core/lv_indev.c **** 
 4495              		.loc 1 391 1 view .LVU1397
 4496 0008 7047     		bx	lr
 4497              		.cfi_endproc
 4498              	.LFE481:
 4500              		.section	.text.lv_indev_search_obj,"ax",%progbits
 4501              		.align	1
 4502              		.global	lv_indev_search_obj
 4503              		.syntax unified
ARM GAS  D:\Temp\cc3iPNN1.s 			page 130


 4504              		.thumb
 4505              		.thumb_func
 4506              		.fpu fpv4-sp-d16
 4508              	lv_indev_search_obj:
 4509              	.LVL433:
 4510              	.LFB489:
1126:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * found_p = NULL;
 4511              		.loc 1 1126 1 is_stmt 1 view -0
 4512              		.cfi_startproc
 4513              		@ args = 0, pretend = 0, frame = 0
 4514              		@ frame_needed = 0, uses_anonymous_args = 0
1126:lvgl/src/lv_core/lv_indev.c ****     lv_obj_t * found_p = NULL;
 4515              		.loc 1 1126 1 is_stmt 0 view .LVU1399
 4516 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4517              	.LCFI27:
 4518              		.cfi_def_cfa_offset 24
 4519              		.cfi_offset 4, -24
 4520              		.cfi_offset 5, -20
 4521              		.cfi_offset 6, -16
 4522              		.cfi_offset 7, -12
 4523              		.cfi_offset 8, -8
 4524              		.cfi_offset 14, -4
 4525 0004 8046     		mov	r8, r0
 4526 0006 0E46     		mov	r6, r1
1127:lvgl/src/lv_core/lv_indev.c **** 
 4527              		.loc 1 1127 5 is_stmt 1 view .LVU1400
 4528              	.LVL434:
1130:lvgl/src/lv_core/lv_indev.c ****         lv_obj_t * i;
 4529              		.loc 1 1130 5 view .LVU1401
1130:lvgl/src/lv_core/lv_indev.c ****         lv_obj_t * i;
 4530              		.loc 1 1130 8 is_stmt 0 view .LVU1402
 4531 0008 FFF7FEFF 		bl	lv_obj_hittest
 4532              	.LVL435:
1130:lvgl/src/lv_core/lv_indev.c ****         lv_obj_t * i;
 4533              		.loc 1 1130 7 view .LVU1403
 4534 000c 68B3     		cbz	r0, .L324
 4535              	.LBB18:
1131:lvgl/src/lv_core/lv_indev.c **** 
 4536              		.loc 1 1131 9 is_stmt 1 view .LVU1404
1133:lvgl/src/lv_core/lv_indev.c ****             found_p = lv_indev_search_obj(i, point);
 4537              		.loc 1 1133 9 view .LVU1405
 4538 000e 08F10407 		add	r7, r8, #4
 4539 0012 3846     		mov	r0, r7
 4540 0014 FFF7FEFF 		bl	_lv_ll_get_head
 4541              	.LVL436:
 4542 0018 0446     		mov	r4, r0
 4543              	.LVL437:
1133:lvgl/src/lv_core/lv_indev.c ****             found_p = lv_indev_search_obj(i, point);
 4544              		.loc 1 1133 9 is_stmt 0 view .LVU1406
 4545              	.LBE18:
1127:lvgl/src/lv_core/lv_indev.c **** 
 4546              		.loc 1 1127 16 view .LVU1407
 4547 001a 0025     		movs	r5, #0
 4548              	.LVL438:
 4549              	.L318:
 4550              	.LBB20:
1133:lvgl/src/lv_core/lv_indev.c ****             found_p = lv_indev_search_obj(i, point);
ARM GAS  D:\Temp\cc3iPNN1.s 			page 131


 4551              		.loc 1 1133 9 discriminator 1 view .LVU1408
 4552 001c 5CB1     		cbz	r4, .L319
1134:lvgl/src/lv_core/lv_indev.c **** 
 4553              		.loc 1 1134 13 is_stmt 1 view .LVU1409
1134:lvgl/src/lv_core/lv_indev.c **** 
 4554              		.loc 1 1134 23 is_stmt 0 view .LVU1410
 4555 001e 3146     		mov	r1, r6
 4556 0020 2046     		mov	r0, r4
1134:lvgl/src/lv_core/lv_indev.c **** 
 4557              		.loc 1 1134 23 view .LVU1411
 4558 0022 FFF7FEFF 		bl	lv_indev_search_obj
 4559              	.LVL439:
1137:lvgl/src/lv_core/lv_indev.c ****                 break;
 4560              		.loc 1 1137 13 is_stmt 1 view .LVU1412
1137:lvgl/src/lv_core/lv_indev.c ****                 break;
 4561              		.loc 1 1137 15 is_stmt 0 view .LVU1413
 4562 0026 0546     		mov	r5, r0
 4563 0028 28B9     		cbnz	r0, .L319
1133:lvgl/src/lv_core/lv_indev.c ****             found_p = lv_indev_search_obj(i, point);
 4564              		.loc 1 1133 9 discriminator 2 view .LVU1414
 4565 002a 2146     		mov	r1, r4
 4566 002c 3846     		mov	r0, r7
 4567              	.LVL440:
1133:lvgl/src/lv_core/lv_indev.c ****             found_p = lv_indev_search_obj(i, point);
 4568              		.loc 1 1133 9 discriminator 2 view .LVU1415
 4569 002e FFF7FEFF 		bl	_lv_ll_get_next
 4570              	.LVL441:
 4571 0032 0446     		mov	r4, r0
 4572              	.LVL442:
1133:lvgl/src/lv_core/lv_indev.c ****             found_p = lv_indev_search_obj(i, point);
 4573              		.loc 1 1133 9 discriminator 2 view .LVU1416
 4574 0034 F2E7     		b	.L318
 4575              	.LVL443:
 4576              	.L319:
1144:lvgl/src/lv_core/lv_indev.c ****             lv_obj_t * hidden_i = obj;
 4577              		.loc 1 1144 9 is_stmt 1 view .LVU1417
1144:lvgl/src/lv_core/lv_indev.c ****             lv_obj_t * hidden_i = obj;
 4578              		.loc 1 1144 11 is_stmt 0 view .LVU1418
 4579 0036 CDB9     		cbnz	r5, .L316
1144:lvgl/src/lv_core/lv_indev.c ****             lv_obj_t * hidden_i = obj;
 4580              		.loc 1 1144 31 discriminator 1 view .LVU1419
 4581 0038 4046     		mov	r0, r8
 4582 003a FFF7FEFF 		bl	lv_obj_get_click
 4583              	.LVL444:
1144:lvgl/src/lv_core/lv_indev.c ****             lv_obj_t * hidden_i = obj;
 4584              		.loc 1 1144 28 discriminator 1 view .LVU1420
 4585 003e A8B1     		cbz	r0, .L316
 4586              	.LBB19:
1145:lvgl/src/lv_core/lv_indev.c ****             while(hidden_i != NULL) {
 4587              		.loc 1 1145 24 view .LVU1421
 4588 0040 4446     		mov	r4, r8
 4589              	.LVL445:
 4590              	.L321:
1146:lvgl/src/lv_core/lv_indev.c ****                 if(lv_obj_get_hidden(hidden_i) == true) break;
 4591              		.loc 1 1146 18 view .LVU1422
 4592 0042 44B1     		cbz	r4, .L322
1147:lvgl/src/lv_core/lv_indev.c ****                 hidden_i = lv_obj_get_parent(hidden_i);
ARM GAS  D:\Temp\cc3iPNN1.s 			page 132


 4593              		.loc 1 1147 17 is_stmt 1 view .LVU1423
1147:lvgl/src/lv_core/lv_indev.c ****                 hidden_i = lv_obj_get_parent(hidden_i);
 4594              		.loc 1 1147 20 is_stmt 0 view .LVU1424
 4595 0044 2046     		mov	r0, r4
 4596 0046 FFF7FEFF 		bl	lv_obj_get_hidden
 4597              	.LVL446:
1147:lvgl/src/lv_core/lv_indev.c ****                 hidden_i = lv_obj_get_parent(hidden_i);
 4598              		.loc 1 1147 19 view .LVU1425
 4599 004a 20B9     		cbnz	r0, .L322
1148:lvgl/src/lv_core/lv_indev.c ****             }
 4600              		.loc 1 1148 17 is_stmt 1 view .LVU1426
1148:lvgl/src/lv_core/lv_indev.c ****             }
 4601              		.loc 1 1148 28 is_stmt 0 view .LVU1427
 4602 004c 2046     		mov	r0, r4
 4603 004e FFF7FEFF 		bl	lv_obj_get_parent
 4604              	.LVL447:
 4605 0052 0446     		mov	r4, r0
 4606              	.LVL448:
1148:lvgl/src/lv_core/lv_indev.c ****             }
 4607              		.loc 1 1148 28 view .LVU1428
 4608 0054 F5E7     		b	.L321
 4609              	.LVL449:
 4610              	.L322:
1151:lvgl/src/lv_core/lv_indev.c ****         }
 4611              		.loc 1 1151 13 is_stmt 1 view .LVU1429
1151:lvgl/src/lv_core/lv_indev.c ****         }
 4612              		.loc 1 1151 15 is_stmt 0 view .LVU1430
 4613 0056 4CB9     		cbnz	r4, .L316
1151:lvgl/src/lv_core/lv_indev.c ****         }
 4614              		.loc 1 1151 37 discriminator 1 view .LVU1431
 4615 0058 0021     		movs	r1, #0
 4616 005a 4046     		mov	r0, r8
 4617 005c FFF7FEFF 		bl	lv_obj_get_state
 4618              	.LVL450:
1151:lvgl/src/lv_core/lv_indev.c ****         }
 4619              		.loc 1 1151 33 discriminator 1 view .LVU1432
 4620 0060 10F0200F 		tst	r0, #32
 4621 0064 02D1     		bne	.L316
1151:lvgl/src/lv_core/lv_indev.c ****         }
 4622              		.loc 1 1151 116 view .LVU1433
 4623 0066 4546     		mov	r5, r8
 4624              	.LVL451:
1151:lvgl/src/lv_core/lv_indev.c ****         }
 4625              		.loc 1 1151 116 view .LVU1434
 4626              	.LBE19:
 4627              	.LBE20:
1155:lvgl/src/lv_core/lv_indev.c **** }
 4628              		.loc 1 1155 5 is_stmt 1 view .LVU1435
1155:lvgl/src/lv_core/lv_indev.c **** }
 4629              		.loc 1 1155 12 is_stmt 0 view .LVU1436
 4630 0068 00E0     		b	.L316
 4631              	.LVL452:
 4632              	.L324:
1127:lvgl/src/lv_core/lv_indev.c **** 
 4633              		.loc 1 1127 16 view .LVU1437
 4634 006a 0025     		movs	r5, #0
 4635              	.LVL453:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 133


 4636              	.L316:
1156:lvgl/src/lv_core/lv_indev.c **** 
 4637              		.loc 1 1156 1 view .LVU1438
 4638 006c 2846     		mov	r0, r5
 4639 006e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
1156:lvgl/src/lv_core/lv_indev.c **** 
 4640              		.loc 1 1156 1 view .LVU1439
 4641              		.cfi_endproc
 4642              	.LFE489:
 4644              		.section	.text.indev_proc_press,"ax",%progbits
 4645              		.align	1
 4646              		.syntax unified
 4647              		.thumb
 4648              		.thumb_func
 4649              		.fpu fpv4-sp-d16
 4651              	indev_proc_press:
 4652              	.LVL454:
 4653              	.LFB486:
 842:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = proc->types.pointer.act_obj;
 4654              		.loc 1 842 1 is_stmt 1 view -0
 4655              		.cfi_startproc
 4656              		@ args = 0, pretend = 0, frame = 0
 4657              		@ frame_needed = 0, uses_anonymous_args = 0
 843:lvgl/src/lv_core/lv_indev.c **** 
 4658              		.loc 1 843 5 view .LVU1441
 843:lvgl/src/lv_core/lv_indev.c **** 
 4659              		.loc 1 843 40 is_stmt 0 view .LVU1442
 4660 0000 8369     		ldr	r3, [r0, #24]
 843:lvgl/src/lv_core/lv_indev.c **** 
 4661              		.loc 1 843 19 view .LVU1443
 4662 0002 844A     		ldr	r2, .L361
 4663 0004 1360     		str	r3, [r2]
 845:lvgl/src/lv_core/lv_indev.c **** 
 4664              		.loc 1 845 5 is_stmt 1 view .LVU1444
 845:lvgl/src/lv_core/lv_indev.c **** 
 4665              		.loc 1 845 33 is_stmt 0 view .LVU1445
 4666 0006 90F83420 		ldrb	r2, [r0, #52]	@ zero_extendqisi2
 845:lvgl/src/lv_core/lv_indev.c **** 
 4667              		.loc 1 845 7 view .LVU1446
 4668 000a 12F0080F 		tst	r2, #8
 4669 000e 40F0A281 		bne	.L348
 842:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = proc->types.pointer.act_obj;
 4670              		.loc 1 842 1 view .LVU1447
 4671 0012 70B5     		push	{r4, r5, r6, lr}
 4672              	.LCFI28:
 4673              		.cfi_def_cfa_offset 16
 4674              		.cfi_offset 4, -16
 4675              		.cfi_offset 5, -12
 4676              		.cfi_offset 6, -8
 4677              		.cfi_offset 14, -4
 4678 0014 0446     		mov	r4, r0
 847:lvgl/src/lv_core/lv_indev.c ****     bool new_obj_searched = false;
 4679              		.loc 1 847 5 is_stmt 1 view .LVU1448
 847:lvgl/src/lv_core/lv_indev.c ****     bool new_obj_searched = false;
 4680              		.loc 1 847 33 is_stmt 0 view .LVU1449
 4681 0016 804A     		ldr	r2, .L361+4
 4682 0018 1268     		ldr	r2, [r2]
ARM GAS  D:\Temp\cc3iPNN1.s 			page 134


 847:lvgl/src/lv_core/lv_indev.c ****     bool new_obj_searched = false;
 4683              		.loc 1 847 17 view .LVU1450
 4684 001a D568     		ldr	r5, [r2, #12]
 4685              	.LVL455:
 848:lvgl/src/lv_core/lv_indev.c **** 
 4686              		.loc 1 848 5 is_stmt 1 view .LVU1451
 851:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_sys(disp), &proc->types.pointer.act_p
 4687              		.loc 1 851 5 view .LVU1452
 851:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_sys(disp), &proc->types.pointer.act_p
 4688              		.loc 1 851 7 is_stmt 0 view .LVU1453
 4689 001c F3B1     		cbz	r3, .L351
 860:lvgl/src/lv_core/lv_indev.c ****             lv_obj_is_protected(indev_obj_act, LV_PROTECT_PRESS_LOST) == false) {
 4690              		.loc 1 860 10 is_stmt 1 view .LVU1454
 860:lvgl/src/lv_core/lv_indev.c ****             lv_obj_is_protected(indev_obj_act, LV_PROTECT_PRESS_LOST) == false) {
 4691              		.loc 1 860 46 is_stmt 0 view .LVU1455
 4692 001e 90F82A20 		ldrb	r2, [r0, #42]	@ zero_extendqisi2
 860:lvgl/src/lv_core/lv_indev.c ****             lv_obj_is_protected(indev_obj_act, LV_PROTECT_PRESS_LOST) == false) {
 4693              		.loc 1 860 12 view .LVU1456
 4694 0022 12F0020F 		tst	r2, #2
 4695 0026 42D0     		beq	.L352
 4696              	.LVL456:
 4697              	.L333:
 881:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_point.x = proc->types.pointer.act_point.x;
 4698              		.loc 1 881 5 is_stmt 1 view .LVU1457
 881:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_point.x = proc->types.pointer.act_point.x;
 4699              		.loc 1 881 44 is_stmt 0 view .LVU1458
 4700 0028 A569     		ldr	r5, [r4, #24]
 4701              	.LVL457:
 881:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_point.x = proc->types.pointer.act_point.x;
 4702              		.loc 1 881 22 view .LVU1459
 4703 002a 7A4B     		ldr	r3, .L361
 4704 002c 1B68     		ldr	r3, [r3]
 881:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_point.x = proc->types.pointer.act_point.x;
 4705              		.loc 1 881 7 view .LVU1460
 4706 002e 9D42     		cmp	r5, r3
 4707 0030 00F0CA80 		beq	.L335
 882:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_point.y = proc->types.pointer.act_point.y;
 4708              		.loc 1 882 9 is_stmt 1 view .LVU1461
 882:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_point.y = proc->types.pointer.act_point.y;
 4709              		.loc 1 882 73 is_stmt 0 view .LVU1462
 4710 0034 B4F90430 		ldrsh	r3, [r4, #4]
 882:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_point.y = proc->types.pointer.act_point.y;
 4711              		.loc 1 882 42 view .LVU1463
 4712 0038 2381     		strh	r3, [r4, #8]	@ movhi
 883:lvgl/src/lv_core/lv_indev.c **** 
 4713              		.loc 1 883 9 is_stmt 1 view .LVU1464
 883:lvgl/src/lv_core/lv_indev.c **** 
 4714              		.loc 1 883 73 is_stmt 0 view .LVU1465
 4715 003a B4F90630 		ldrsh	r3, [r4, #6]
 883:lvgl/src/lv_core/lv_indev.c **** 
 4716              		.loc 1 883 42 view .LVU1466
 4717 003e 6381     		strh	r3, [r4, #10]	@ movhi
 886:lvgl/src/lv_core/lv_indev.c ****             /*Save the obj because in special cases `act_obj` can change in the signal function*/
 4718              		.loc 1 886 9 is_stmt 1 view .LVU1467
 886:lvgl/src/lv_core/lv_indev.c ****             /*Save the obj because in special cases `act_obj` can change in the signal function*/
 4719              		.loc 1 886 11 is_stmt 0 view .LVU1468
 4720 0040 002D     		cmp	r5, #0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 135


 4721 0042 64D0     		beq	.L336
 4722              	.LBB21:
 888:lvgl/src/lv_core/lv_indev.c **** 
 4723              		.loc 1 888 13 is_stmt 1 view .LVU1469
 4724              	.LVL458:
 890:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 4725              		.loc 1 890 13 view .LVU1470
 890:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 4726              		.loc 1 890 21 is_stmt 0 view .LVU1471
 4727 0044 EB69     		ldr	r3, [r5, #28]
 890:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 4728              		.loc 1 890 13 view .LVU1472
 4729 0046 744A     		ldr	r2, .L361+4
 4730 0048 1268     		ldr	r2, [r2]
 4731 004a 0D21     		movs	r1, #13
 4732 004c 2846     		mov	r0, r5
 4733 004e 9847     		blx	r3
 4734              	.LVL459:
 891:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(last_obj, LV_EVENT_PRESS_LOST, NULL);
 4735              		.loc 1 891 13 is_stmt 1 view .LVU1473
 891:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(last_obj, LV_EVENT_PRESS_LOST, NULL);
 4736              		.loc 1 891 16 is_stmt 0 view .LVU1474
 4737 0050 2046     		mov	r0, r4
 4738 0052 FFF7FEFF 		bl	indev_reset_check
 4739              	.LVL460:
 891:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(last_obj, LV_EVENT_PRESS_LOST, NULL);
 4740              		.loc 1 891 15 view .LVU1475
 4741 0056 0028     		cmp	r0, #0
 4742 0058 4FD0     		beq	.L353
 4743              	.LVL461:
 4744              	.L328:
 891:lvgl/src/lv_core/lv_indev.c ****             lv_event_send(last_obj, LV_EVENT_PRESS_LOST, NULL);
 4745              		.loc 1 891 15 view .LVU1476
 4746              	.LBE21:
1004:lvgl/src/lv_core/lv_indev.c **** 
 4747              		.loc 1 1004 1 view .LVU1477
 4748 005a 70BD     		pop	{r4, r5, r6, pc}
 4749              	.LVL462:
 4750              	.L351:
 852:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act == NULL) indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_top(disp),
 4751              		.loc 1 852 9 is_stmt 1 view .LVU1478
 852:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act == NULL) indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_top(disp),
 4752              		.loc 1 852 25 is_stmt 0 view .LVU1479
 4753 005c 2846     		mov	r0, r5
 4754              	.LVL463:
 852:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act == NULL) indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_top(disp),
 4755              		.loc 1 852 25 view .LVU1480
 4756 005e FFF7FEFF 		bl	lv_disp_get_layer_sys
 4757              	.LVL464:
 4758 0062 261D     		adds	r6, r4, #4
 4759 0064 3146     		mov	r1, r6
 4760 0066 FFF7FEFF 		bl	lv_indev_search_obj
 4761              	.LVL465:
 852:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act == NULL) indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_top(disp),
 4762              		.loc 1 852 23 view .LVU1481
 4763 006a 6A4B     		ldr	r3, .L361
 4764 006c 1860     		str	r0, [r3]
ARM GAS  D:\Temp\cc3iPNN1.s 			page 136


 853:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4765              		.loc 1 853 9 is_stmt 1 view .LVU1482
 853:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4766              		.loc 1 853 11 is_stmt 0 view .LVU1483
 4767 006e 60B1     		cbz	r0, .L354
 4768              	.L331:
 855:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4769              		.loc 1 855 9 is_stmt 1 view .LVU1484
 855:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4770              		.loc 1 855 26 is_stmt 0 view .LVU1485
 4771 0070 684B     		ldr	r3, .L361
 4772 0072 1B68     		ldr	r3, [r3]
 855:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4773              		.loc 1 855 11 view .LVU1486
 4774 0074 93B1     		cbz	r3, .L355
 4775              	.L332:
 874:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x = 0;
 4776              		.loc 1 874 47 discriminator 1 view .LVU1487
 4777 0076 E369     		ldr	r3, [r4, #28]
 874:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x = 0;
 4778              		.loc 1 874 25 discriminator 1 view .LVU1488
 4779 0078 002B     		cmp	r3, #0
 4780 007a D5D0     		beq	.L333
 875:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y = 0;
 4781              		.loc 1 875 9 is_stmt 1 view .LVU1489
 875:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y = 0;
 4782              		.loc 1 875 47 is_stmt 0 view .LVU1490
 4783 007c 0023     		movs	r3, #0
 4784 007e A382     		strh	r3, [r4, #20]	@ movhi
 876:lvgl/src/lv_core/lv_indev.c ****         indev_drag_throw(proc);
 4785              		.loc 1 876 9 is_stmt 1 view .LVU1491
 876:lvgl/src/lv_core/lv_indev.c ****         indev_drag_throw(proc);
 4786              		.loc 1 876 47 is_stmt 0 view .LVU1492
 4787 0080 E382     		strh	r3, [r4, #22]	@ movhi
 877:lvgl/src/lv_core/lv_indev.c ****     }
 4788              		.loc 1 877 9 is_stmt 1 view .LVU1493
 4789 0082 2046     		mov	r0, r4
 4790 0084 FFF7FEFF 		bl	indev_drag_throw
 4791              	.LVL466:
 4792 0088 CEE7     		b	.L333
 4793              	.L354:
 853:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4794              		.loc 1 853 35 discriminator 1 view .LVU1494
 853:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4795              		.loc 1 853 51 is_stmt 0 discriminator 1 view .LVU1495
 4796 008a 2846     		mov	r0, r5
 4797 008c FFF7FEFF 		bl	lv_disp_get_layer_top
 4798              	.LVL467:
 4799 0090 3146     		mov	r1, r6
 4800 0092 FFF7FEFF 		bl	lv_indev_search_obj
 4801              	.LVL468:
 853:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4802              		.loc 1 853 49 discriminator 1 view .LVU1496
 4803 0096 5F4B     		ldr	r3, .L361
 4804 0098 1860     		str	r0, [r3]
 4805 009a E9E7     		b	.L331
 4806              	.L355:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 137


 855:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4807              		.loc 1 855 35 is_stmt 1 discriminator 1 view .LVU1497
 855:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4808              		.loc 1 855 51 is_stmt 0 discriminator 1 view .LVU1498
 4809 009c 2846     		mov	r0, r5
 4810 009e FFF7FEFF 		bl	lv_disp_get_scr_act
 4811              	.LVL469:
 4812 00a2 3146     		mov	r1, r6
 4813 00a4 FFF7FEFF 		bl	lv_indev_search_obj
 4814              	.LVL470:
 855:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4815              		.loc 1 855 49 discriminator 1 view .LVU1499
 4816 00a8 5A4B     		ldr	r3, .L361
 4817 00aa 1860     		str	r0, [r3]
 4818 00ac E3E7     		b	.L332
 4819              	.LVL471:
 4820              	.L352:
 861:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_sys(disp), &proc->types.pointer.act_p
 4821              		.loc 1 861 13 discriminator 1 view .LVU1500
 4822 00ae 1021     		movs	r1, #16
 4823 00b0 1846     		mov	r0, r3
 4824              	.LVL472:
 861:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_sys(disp), &proc->types.pointer.act_p
 4825              		.loc 1 861 13 discriminator 1 view .LVU1501
 4826 00b2 FFF7FEFF 		bl	lv_obj_is_protected
 4827              	.LVL473:
 860:lvgl/src/lv_core/lv_indev.c ****             lv_obj_is_protected(indev_obj_act, LV_PROTECT_PRESS_LOST) == false) {
 4828              		.loc 1 860 51 discriminator 1 view .LVU1502
 4829 00b6 0028     		cmp	r0, #0
 4830 00b8 B6D1     		bne	.L333
 862:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act == NULL) indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_top(disp),
 4831              		.loc 1 862 9 is_stmt 1 view .LVU1503
 862:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act == NULL) indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_top(disp),
 4832              		.loc 1 862 25 is_stmt 0 view .LVU1504
 4833 00ba 2846     		mov	r0, r5
 4834 00bc FFF7FEFF 		bl	lv_disp_get_layer_sys
 4835              	.LVL474:
 4836 00c0 261D     		adds	r6, r4, #4
 4837 00c2 3146     		mov	r1, r6
 4838 00c4 FFF7FEFF 		bl	lv_indev_search_obj
 4839              	.LVL475:
 862:lvgl/src/lv_core/lv_indev.c ****         if(indev_obj_act == NULL) indev_obj_act = lv_indev_search_obj(lv_disp_get_layer_top(disp),
 4840              		.loc 1 862 23 view .LVU1505
 4841 00c8 524B     		ldr	r3, .L361
 4842 00ca 1860     		str	r0, [r3]
 863:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4843              		.loc 1 863 9 is_stmt 1 view .LVU1506
 863:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4844              		.loc 1 863 11 is_stmt 0 view .LVU1507
 4845 00cc 60B1     		cbz	r0, .L356
 4846              	.L334:
 865:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4847              		.loc 1 865 9 is_stmt 1 view .LVU1508
 865:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4848              		.loc 1 865 26 is_stmt 0 view .LVU1509
 4849 00ce 514B     		ldr	r3, .L361
 4850 00d0 1B68     		ldr	r3, [r3]
ARM GAS  D:\Temp\cc3iPNN1.s 			page 138


 865:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4851              		.loc 1 865 11 view .LVU1510
 4852 00d2 002B     		cmp	r3, #0
 4853 00d4 CFD1     		bne	.L332
 865:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4854              		.loc 1 865 35 is_stmt 1 discriminator 1 view .LVU1511
 865:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4855              		.loc 1 865 51 is_stmt 0 discriminator 1 view .LVU1512
 4856 00d6 2846     		mov	r0, r5
 4857 00d8 FFF7FEFF 		bl	lv_disp_get_scr_act
 4858              	.LVL476:
 4859 00dc 3146     		mov	r1, r6
 4860 00de FFF7FEFF 		bl	lv_indev_search_obj
 4861              	.LVL477:
 865:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4862              		.loc 1 865 49 discriminator 1 view .LVU1513
 4863 00e2 4C4B     		ldr	r3, .L361
 4864 00e4 1860     		str	r0, [r3]
 4865 00e6 C6E7     		b	.L332
 4866              	.L356:
 863:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4867              		.loc 1 863 35 is_stmt 1 discriminator 1 view .LVU1514
 863:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4868              		.loc 1 863 51 is_stmt 0 discriminator 1 view .LVU1515
 4869 00e8 2846     		mov	r0, r5
 4870 00ea FFF7FEFF 		bl	lv_disp_get_layer_top
 4871              	.LVL478:
 4872 00ee 3146     		mov	r1, r6
 4873 00f0 FFF7FEFF 		bl	lv_indev_search_obj
 4874              	.LVL479:
 863:lvgl/src/lv_core/lv_indev.c ****                                                                           &proc->types.pointer.act_
 4875              		.loc 1 863 49 discriminator 1 view .LVU1516
 4876 00f4 474B     		ldr	r3, .L361
 4877 00f6 1860     		str	r0, [r3]
 4878 00f8 E9E7     		b	.L334
 4879              	.LVL480:
 4880              	.L353:
 4881              	.LBB22:
 892:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 4882              		.loc 1 892 13 is_stmt 1 view .LVU1517
 4883 00fa 0022     		movs	r2, #0
 4884 00fc 0221     		movs	r1, #2
 4885 00fe 2846     		mov	r0, r5
 4886 0100 FFF7FEFF 		bl	lv_event_send
 4887              	.LVL481:
 893:lvgl/src/lv_core/lv_indev.c **** 
 4888              		.loc 1 893 13 view .LVU1518
 893:lvgl/src/lv_core/lv_indev.c **** 
 4889              		.loc 1 893 16 is_stmt 0 view .LVU1519
 4890 0104 2046     		mov	r0, r4
 4891 0106 FFF7FEFF 		bl	indev_reset_check
 4892              	.LVL482:
 893:lvgl/src/lv_core/lv_indev.c **** 
 4893              		.loc 1 893 15 view .LVU1520
 4894 010a 0028     		cmp	r0, #0
 4895 010c A5D1     		bne	.L328
 4896              	.LVL483:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 139


 4897              	.L336:
 893:lvgl/src/lv_core/lv_indev.c **** 
 4898              		.loc 1 893 15 view .LVU1521
 4899              	.LBE22:
 897:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_obj = indev_obj_act;
 4900              		.loc 1 897 9 is_stmt 1 view .LVU1522
 897:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.last_obj = indev_obj_act;
 4901              		.loc 1 897 38 is_stmt 0 view .LVU1523
 4902 010e 414B     		ldr	r3, .L361
 4903 0110 1B68     		ldr	r3, [r3]
 4904 0112 A361     		str	r3, [r4, #24]
 898:lvgl/src/lv_core/lv_indev.c **** 
 4905              		.loc 1 898 9 is_stmt 1 view .LVU1524
 898:lvgl/src/lv_core/lv_indev.c **** 
 4906              		.loc 1 898 38 is_stmt 0 view .LVU1525
 4907 0114 E361     		str	r3, [r4, #28]
 900:lvgl/src/lv_core/lv_indev.c ****             /* Save the time when the obj pressed to count long press time.*/
 4908              		.loc 1 900 9 is_stmt 1 view .LVU1526
 900:lvgl/src/lv_core/lv_indev.c ****             /* Save the time when the obj pressed to count long press time.*/
 4909              		.loc 1 900 11 is_stmt 0 view .LVU1527
 4910 0116 002B     		cmp	r3, #0
 4911 0118 56D0     		beq	.L335
 4912              	.LBB23:
 902:lvgl/src/lv_core/lv_indev.c ****             proc->long_pr_sent                 = 0;
 4913              		.loc 1 902 13 is_stmt 1 view .LVU1528
 902:lvgl/src/lv_core/lv_indev.c ****             proc->long_pr_sent                 = 0;
 4914              		.loc 1 902 50 is_stmt 0 view .LVU1529
 4915 011a FFF7FEFF 		bl	lv_tick_get
 4916              	.LVL484:
 902:lvgl/src/lv_core/lv_indev.c ****             proc->long_pr_sent                 = 0;
 4917              		.loc 1 902 48 view .LVU1530
 4918 011e E062     		str	r0, [r4, #44]
 903:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_limit_out = 0;
 4919              		.loc 1 903 13 is_stmt 1 view .LVU1531
 903:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_limit_out = 0;
 4920              		.loc 1 903 48 is_stmt 0 view .LVU1532
 4921 0120 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 4922 0124 6FF30003 		bfc	r3, #0, #1
 4923 0128 84F83430 		strb	r3, [r4, #52]
 904:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_in_prog   = 0;
 4924              		.loc 1 904 13 is_stmt 1 view .LVU1533
 904:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_in_prog   = 0;
 4925              		.loc 1 904 48 is_stmt 0 view .LVU1534
 4926 012c 94F82A20 		ldrb	r2, [r4, #42]	@ zero_extendqisi2
 905:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_sum.x     = 0;
 4927              		.loc 1 905 13 is_stmt 1 view .LVU1535
 906:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_sum.y     = 0;
 4928              		.loc 1 906 13 view .LVU1536
 906:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_sum.y     = 0;
 4929              		.loc 1 906 48 is_stmt 0 view .LVU1537
 4930 0130 0023     		movs	r3, #0
 4931 0132 2382     		strh	r3, [r4, #16]	@ movhi
 907:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_dir = LV_DRAG_DIR_BOTH;
 4932              		.loc 1 907 13 is_stmt 1 view .LVU1538
 907:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.drag_dir = LV_DRAG_DIR_BOTH;
 4933              		.loc 1 907 48 is_stmt 0 view .LVU1539
 4934 0134 6382     		strh	r3, [r4, #18]	@ movhi
ARM GAS  D:\Temp\cc3iPNN1.s 			page 140


 908:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.gesture_sent   = 0;
 4935              		.loc 1 908 13 is_stmt 1 view .LVU1540
 908:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.gesture_sent   = 0;
 4936              		.loc 1 908 42 is_stmt 0 view .LVU1541
 4937 0136 02F0FC02 		and	r2, r2, #252
 4938 013a 0321     		movs	r1, #3
 4939 013c 61F38402 		bfi	r2, r1, #2, #3
 909:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.gesture_sum.x  = 0;
 4940              		.loc 1 909 13 is_stmt 1 view .LVU1542
 909:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.gesture_sum.x  = 0;
 4941              		.loc 1 909 48 is_stmt 0 view .LVU1543
 4942 0140 63F34512 		bfi	r2, r3, #5, #1
 4943 0144 84F82A20 		strb	r2, [r4, #42]
 910:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.gesture_sum.y  = 0;
 4944              		.loc 1 910 13 is_stmt 1 view .LVU1544
 910:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.gesture_sum.y  = 0;
 4945              		.loc 1 910 48 is_stmt 0 view .LVU1545
 4946 0148 E384     		strh	r3, [r4, #38]	@ movhi
 911:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.x         = 0;
 4947              		.loc 1 911 13 is_stmt 1 view .LVU1546
 911:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.x         = 0;
 4948              		.loc 1 911 48 is_stmt 0 view .LVU1547
 4949 014a 2385     		strh	r3, [r4, #40]	@ movhi
 912:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.y         = 0;
 4950              		.loc 1 912 13 is_stmt 1 view .LVU1548
 912:lvgl/src/lv_core/lv_indev.c ****             proc->types.pointer.vect.y         = 0;
 4951              		.loc 1 912 48 is_stmt 0 view .LVU1549
 4952 014c A381     		strh	r3, [r4, #12]	@ movhi
 913:lvgl/src/lv_core/lv_indev.c **** 
 4953              		.loc 1 913 13 is_stmt 1 view .LVU1550
 913:lvgl/src/lv_core/lv_indev.c **** 
 4954              		.loc 1 913 48 is_stmt 0 view .LVU1551
 4955 014e E381     		strh	r3, [r4, #14]	@ movhi
 916:lvgl/src/lv_core/lv_indev.c ****             lv_obj_t * last_top = NULL;
 4956              		.loc 1 916 13 is_stmt 1 view .LVU1552
 916:lvgl/src/lv_core/lv_indev.c ****             lv_obj_t * last_top = NULL;
 4957              		.loc 1 916 24 is_stmt 0 view .LVU1553
 4958 0150 304A     		ldr	r2, .L361
 4959 0152 1068     		ldr	r0, [r2]
 4960              	.LVL485:
 917:lvgl/src/lv_core/lv_indev.c ****             while(i != NULL) {
 4961              		.loc 1 917 13 is_stmt 1 view .LVU1554
 918:lvgl/src/lv_core/lv_indev.c ****                 if(i->top) last_top = i;
 4962              		.loc 1 918 13 view .LVU1555
 917:lvgl/src/lv_core/lv_indev.c ****             while(i != NULL) {
 4963              		.loc 1 917 24 is_stmt 0 view .LVU1556
 4964 0154 1D46     		mov	r5, r3
 918:lvgl/src/lv_core/lv_indev.c ****                 if(i->top) last_top = i;
 4965              		.loc 1 918 18 view .LVU1557
 4966 0156 01E0     		b	.L337
 4967              	.LVL486:
 4968              	.L338:
 920:lvgl/src/lv_core/lv_indev.c ****             }
 4969              		.loc 1 920 17 is_stmt 1 view .LVU1558
 920:lvgl/src/lv_core/lv_indev.c ****             }
 4970              		.loc 1 920 21 is_stmt 0 view .LVU1559
 4971 0158 FFF7FEFF 		bl	lv_obj_get_parent
ARM GAS  D:\Temp\cc3iPNN1.s 			page 141


 4972              	.LVL487:
 4973              	.L337:
 918:lvgl/src/lv_core/lv_indev.c ****                 if(i->top) last_top = i;
 4974              		.loc 1 918 18 view .LVU1560
 4975 015c 30B1     		cbz	r0, .L357
 919:lvgl/src/lv_core/lv_indev.c ****                 i = lv_obj_get_parent(i);
 4976              		.loc 1 919 17 is_stmt 1 view .LVU1561
 919:lvgl/src/lv_core/lv_indev.c ****                 i = lv_obj_get_parent(i);
 4977              		.loc 1 919 20 is_stmt 0 view .LVU1562
 4978 015e 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 919:lvgl/src/lv_core/lv_indev.c ****                 i = lv_obj_get_parent(i);
 4979              		.loc 1 919 19 view .LVU1563
 4980 0162 13F0200F 		tst	r3, #32
 4981 0166 F7D0     		beq	.L338
 919:lvgl/src/lv_core/lv_indev.c ****                 i = lv_obj_get_parent(i);
 4982              		.loc 1 919 37 view .LVU1564
 4983 0168 0546     		mov	r5, r0
 4984              	.LVL488:
 919:lvgl/src/lv_core/lv_indev.c ****                 i = lv_obj_get_parent(i);
 4985              		.loc 1 919 37 view .LVU1565
 4986 016a F5E7     		b	.L338
 4987              	.LVL489:
 4988              	.L357:
 923:lvgl/src/lv_core/lv_indev.c ****                 /*Move the last_top object to the foreground*/
 4989              		.loc 1 923 13 is_stmt 1 view .LVU1566
 923:lvgl/src/lv_core/lv_indev.c ****                 /*Move the last_top object to the foreground*/
 4990              		.loc 1 923 15 is_stmt 0 view .LVU1567
 4991 016c 15B1     		cbz	r5, .L340
 925:lvgl/src/lv_core/lv_indev.c ****             }
 4992              		.loc 1 925 17 is_stmt 1 view .LVU1568
 4993 016e 2846     		mov	r0, r5
 4994              	.LVL490:
 925:lvgl/src/lv_core/lv_indev.c ****             }
 4995              		.loc 1 925 17 is_stmt 0 view .LVU1569
 4996 0170 FFF7FEFF 		bl	lv_obj_move_foreground
 4997              	.LVL491:
 4998              	.L340:
 929:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 4999              		.loc 1 929 13 is_stmt 1 view .LVU1570
 929:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 5000              		.loc 1 929 26 is_stmt 0 view .LVU1571
 5001 0174 274B     		ldr	r3, .L361
 5002 0176 1868     		ldr	r0, [r3]
 5003 0178 C369     		ldr	r3, [r0, #28]
 929:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 5004              		.loc 1 929 13 view .LVU1572
 5005 017a 274A     		ldr	r2, .L361+4
 5006 017c 1268     		ldr	r2, [r2]
 5007 017e 0B21     		movs	r1, #11
 5008 0180 9847     		blx	r3
 5009              	.LVL492:
 930:lvgl/src/lv_core/lv_indev.c **** 
 5010              		.loc 1 930 13 is_stmt 1 view .LVU1573
 930:lvgl/src/lv_core/lv_indev.c **** 
 5011              		.loc 1 930 16 is_stmt 0 view .LVU1574
 5012 0182 2046     		mov	r0, r4
 5013 0184 FFF7FEFF 		bl	indev_reset_check
ARM GAS  D:\Temp\cc3iPNN1.s 			page 142


 5014              	.LVL493:
 930:lvgl/src/lv_core/lv_indev.c **** 
 5015              		.loc 1 930 15 view .LVU1575
 5016 0188 0028     		cmp	r0, #0
 5017 018a 7FF466AF 		bne	.L328
 932:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 5018              		.loc 1 932 13 is_stmt 1 view .LVU1576
 5019 018e 0022     		movs	r2, #0
 5020 0190 1146     		mov	r1, r2
 5021 0192 204B     		ldr	r3, .L361
 5022 0194 1868     		ldr	r0, [r3]
 5023 0196 FFF7FEFF 		bl	lv_event_send
 5024              	.LVL494:
 933:lvgl/src/lv_core/lv_indev.c **** 
 5025              		.loc 1 933 13 view .LVU1577
 933:lvgl/src/lv_core/lv_indev.c **** 
 5026              		.loc 1 933 16 is_stmt 0 view .LVU1578
 5027 019a 2046     		mov	r0, r4
 5028 019c FFF7FEFF 		bl	indev_reset_check
 5029              	.LVL495:
 933:lvgl/src/lv_core/lv_indev.c **** 
 5030              		.loc 1 933 15 view .LVU1579
 5031 01a0 0028     		cmp	r0, #0
 5032 01a2 7FF45AAF 		bne	.L328
 935:lvgl/src/lv_core/lv_indev.c **** 
 5033              		.loc 1 935 13 is_stmt 1 view .LVU1580
 935:lvgl/src/lv_core/lv_indev.c **** 
 5034              		.loc 1 935 25 is_stmt 0 view .LVU1581
 5035 01a6 1C4B     		ldr	r3, .L361+4
 5036 01a8 1868     		ldr	r0, [r3]
 935:lvgl/src/lv_core/lv_indev.c **** 
 5037              		.loc 1 935 16 view .LVU1582
 5038 01aa 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 935:lvgl/src/lv_core/lv_indev.c **** 
 5039              		.loc 1 935 15 view .LVU1583
 5040 01ae 13F0080F 		tst	r3, #8
 5041 01b2 7FF452AF 		bne	.L328
 938:lvgl/src/lv_core/lv_indev.c ****             if(indev_reset_check(proc)) return;
 5042              		.loc 1 938 13 is_stmt 1 view .LVU1584
 5043 01b6 1C30     		adds	r0, r0, #28
 5044 01b8 FFF7FEFF 		bl	indev_click_focus
 5045              	.LVL496:
 939:lvgl/src/lv_core/lv_indev.c **** 
 5046              		.loc 1 939 13 view .LVU1585
 939:lvgl/src/lv_core/lv_indev.c **** 
 5047              		.loc 1 939 16 is_stmt 0 view .LVU1586
 5048 01bc 2046     		mov	r0, r4
 5049 01be FFF7FEFF 		bl	indev_reset_check
 5050              	.LVL497:
 939:lvgl/src/lv_core/lv_indev.c **** 
 5051              		.loc 1 939 15 view .LVU1587
 5052 01c2 0028     		cmp	r0, #0
 5053 01c4 7FF449AF 		bne	.L328
 5054              	.LVL498:
 5055              	.L335:
 939:lvgl/src/lv_core/lv_indev.c **** 
 5056              		.loc 1 939 15 view .LVU1588
ARM GAS  D:\Temp\cc3iPNN1.s 			page 143


 5057              	.LBE23:
 945:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.vect.y = proc->types.pointer.act_point.y - proc->types.pointer.last_point.y
 5058              		.loc 1 945 5 is_stmt 1 view .LVU1589
 945:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.vect.y = proc->types.pointer.act_point.y - proc->types.pointer.last_point.y
 5059              		.loc 1 945 63 is_stmt 0 view .LVU1590
 5060 01c8 A088     		ldrh	r0, [r4, #4]
 945:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.vect.y = proc->types.pointer.act_point.y - proc->types.pointer.last_point.y
 5061              		.loc 1 945 98 view .LVU1591
 5062 01ca 2389     		ldrh	r3, [r4, #8]
 945:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.vect.y = proc->types.pointer.act_point.y - proc->types.pointer.last_point.y
 5063              		.loc 1 945 66 view .LVU1592
 5064 01cc C01A     		subs	r0, r0, r3
 5065 01ce 00B2     		sxth	r0, r0
 945:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.vect.y = proc->types.pointer.act_point.y - proc->types.pointer.last_point.y
 5066              		.loc 1 945 32 view .LVU1593
 5067 01d0 A081     		strh	r0, [r4, #12]	@ movhi
 946:lvgl/src/lv_core/lv_indev.c **** 
 5068              		.loc 1 946 5 is_stmt 1 view .LVU1594
 946:lvgl/src/lv_core/lv_indev.c **** 
 5069              		.loc 1 946 63 is_stmt 0 view .LVU1595
 5070 01d2 E188     		ldrh	r1, [r4, #6]
 946:lvgl/src/lv_core/lv_indev.c **** 
 5071              		.loc 1 946 98 view .LVU1596
 5072 01d4 6389     		ldrh	r3, [r4, #10]
 946:lvgl/src/lv_core/lv_indev.c **** 
 5073              		.loc 1 946 66 view .LVU1597
 5074 01d6 C91A     		subs	r1, r1, r3
 5075 01d8 09B2     		sxth	r1, r1
 946:lvgl/src/lv_core/lv_indev.c **** 
 5076              		.loc 1 946 32 view .LVU1598
 5077 01da E181     		strh	r1, [r4, #14]	@ movhi
 948:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y = (proc->types.pointer.drag_throw_vect.y * 5) >> 3;
 5078              		.loc 1 948 5 is_stmt 1 view .LVU1599
 948:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y = (proc->types.pointer.drag_throw_vect.y * 5) >> 3;
 5079              		.loc 1 948 81 is_stmt 0 view .LVU1600
 5080 01dc B4F91420 		ldrsh	r2, [r4, #20]
 948:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y = (proc->types.pointer.drag_throw_vect.y * 5) >> 3;
 5081              		.loc 1 948 84 view .LVU1601
 5082 01e0 02EB8202 		add	r2, r2, r2, lsl #2
 948:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y = (proc->types.pointer.drag_throw_vect.y * 5) >> 3;
 5083              		.loc 1 948 43 view .LVU1602
 5084 01e4 D210     		asrs	r2, r2, #3
 5085 01e6 A282     		strh	r2, [r4, #20]	@ movhi
 949:lvgl/src/lv_core/lv_indev.c **** 
 5086              		.loc 1 949 5 is_stmt 1 view .LVU1603
 949:lvgl/src/lv_core/lv_indev.c **** 
 5087              		.loc 1 949 81 is_stmt 0 view .LVU1604
 5088 01e8 B4F91630 		ldrsh	r3, [r4, #22]
 949:lvgl/src/lv_core/lv_indev.c **** 
 5089              		.loc 1 949 84 view .LVU1605
 5090 01ec 03EB8303 		add	r3, r3, r3, lsl #2
 949:lvgl/src/lv_core/lv_indev.c **** 
 5091              		.loc 1 949 43 view .LVU1606
 5092 01f0 DB10     		asrs	r3, r3, #3
 5093 01f2 E382     		strh	r3, [r4, #22]	@ movhi
 951:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x++;
 5094              		.loc 1 951 5 is_stmt 1 view .LVU1607
ARM GAS  D:\Temp\cc3iPNN1.s 			page 144


 951:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x++;
 5095              		.loc 1 951 7 is_stmt 0 view .LVU1608
 5096 01f4 002A     		cmp	r2, #0
 5097 01f6 04DB     		blt	.L358
 953:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x--;
 5098              		.loc 1 953 10 is_stmt 1 view .LVU1609
 953:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.x--;
 5099              		.loc 1 953 12 is_stmt 0 view .LVU1610
 5100 01f8 002A     		cmp	r2, #0
 5101 01fa 04DD     		ble	.L342
 954:lvgl/src/lv_core/lv_indev.c **** 
 5102              		.loc 1 954 9 is_stmt 1 view .LVU1611
 954:lvgl/src/lv_core/lv_indev.c **** 
 5103              		.loc 1 954 46 is_stmt 0 view .LVU1612
 5104 01fc 013A     		subs	r2, r2, #1
 5105 01fe A282     		strh	r2, [r4, #20]	@ movhi
 5106 0200 01E0     		b	.L342
 5107              	.L358:
 952:lvgl/src/lv_core/lv_indev.c ****     else if(proc->types.pointer.drag_throw_vect.x > 0)
 5108              		.loc 1 952 9 is_stmt 1 view .LVU1613
 952:lvgl/src/lv_core/lv_indev.c ****     else if(proc->types.pointer.drag_throw_vect.x > 0)
 5109              		.loc 1 952 46 is_stmt 0 view .LVU1614
 5110 0202 0132     		adds	r2, r2, #1
 5111 0204 A282     		strh	r2, [r4, #20]	@ movhi
 5112              	.L342:
 956:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y++;
 5113              		.loc 1 956 5 is_stmt 1 view .LVU1615
 956:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y++;
 5114              		.loc 1 956 7 is_stmt 0 view .LVU1616
 5115 0206 002B     		cmp	r3, #0
 5116 0208 08DB     		blt	.L359
 958:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y--;
 5117              		.loc 1 958 10 is_stmt 1 view .LVU1617
 958:lvgl/src/lv_core/lv_indev.c ****         proc->types.pointer.drag_throw_vect.y--;
 5118              		.loc 1 958 12 is_stmt 0 view .LVU1618
 5119 020a 002B     		cmp	r3, #0
 5120 020c 08DD     		ble	.L344
 959:lvgl/src/lv_core/lv_indev.c **** 
 5121              		.loc 1 959 9 is_stmt 1 view .LVU1619
 959:lvgl/src/lv_core/lv_indev.c **** 
 5122              		.loc 1 959 46 is_stmt 0 view .LVU1620
 5123 020e 013B     		subs	r3, r3, #1
 5124 0210 E382     		strh	r3, [r4, #22]	@ movhi
 5125 0212 05E0     		b	.L344
 5126              	.L362:
 5127              		.align	2
 5128              	.L361:
 5129 0214 00000000 		.word	.LANCHOR0
 5130 0218 00000000 		.word	.LANCHOR1
 5131              	.L359:
 957:lvgl/src/lv_core/lv_indev.c ****     else if(proc->types.pointer.drag_throw_vect.y > 0)
 5132              		.loc 1 957 9 is_stmt 1 view .LVU1621
 957:lvgl/src/lv_core/lv_indev.c ****     else if(proc->types.pointer.drag_throw_vect.y > 0)
 5133              		.loc 1 957 46 is_stmt 0 view .LVU1622
 5134 021c 0133     		adds	r3, r3, #1
 5135 021e E382     		strh	r3, [r4, #22]	@ movhi
 5136              	.L344:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 145


 961:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y += (proc->types.pointer.vect.y * 4) >> 3;
 5137              		.loc 1 961 5 is_stmt 1 view .LVU1623
 961:lvgl/src/lv_core/lv_indev.c ****     proc->types.pointer.drag_throw_vect.y += (proc->types.pointer.vect.y * 4) >> 3;
 5138              		.loc 1 961 43 is_stmt 0 view .LVU1624
 5139 0220 A38A     		ldrh	r3, [r4, #20]
 5140 0222 03EB6000 		add	r0, r3, r0, asr #1
 5141 0226 A082     		strh	r0, [r4, #20]	@ movhi
 962:lvgl/src/lv_core/lv_indev.c **** 
 5142              		.loc 1 962 5 is_stmt 1 view .LVU1625
 962:lvgl/src/lv_core/lv_indev.c **** 
 5143              		.loc 1 962 43 is_stmt 0 view .LVU1626
 5144 0228 E38A     		ldrh	r3, [r4, #22]
 5145 022a 03EB6101 		add	r1, r3, r1, asr #1
 5146 022e E182     		strh	r1, [r4, #22]	@ movhi
 965:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSING, indev_act);
 5147              		.loc 1 965 5 is_stmt 1 view .LVU1627
 965:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSING, indev_act);
 5148              		.loc 1 965 22 is_stmt 0 view .LVU1628
 5149 0230 494B     		ldr	r3, .L363
 5150 0232 1868     		ldr	r0, [r3]
 965:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_PRESSING, indev_act);
 5151              		.loc 1 965 7 view .LVU1629
 5152 0234 0028     		cmp	r0, #0
 5153 0236 3FF410AF 		beq	.L328
 966:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 5154              		.loc 1 966 9 is_stmt 1 view .LVU1630
 966:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 5155              		.loc 1 966 22 is_stmt 0 view .LVU1631
 5156 023a C369     		ldr	r3, [r0, #28]
 966:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 5157              		.loc 1 966 9 view .LVU1632
 5158 023c 474A     		ldr	r2, .L363+4
 5159 023e 1268     		ldr	r2, [r2]
 5160 0240 0C21     		movs	r1, #12
 5161 0242 9847     		blx	r3
 5162              	.LVL499:
 967:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(indev_obj_act, LV_EVENT_PRESSING, NULL);
 5163              		.loc 1 967 9 is_stmt 1 view .LVU1633
 967:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(indev_obj_act, LV_EVENT_PRESSING, NULL);
 5164              		.loc 1 967 12 is_stmt 0 view .LVU1634
 5165 0244 2046     		mov	r0, r4
 5166 0246 FFF7FEFF 		bl	indev_reset_check
 5167              	.LVL500:
 967:lvgl/src/lv_core/lv_indev.c ****         lv_event_send(indev_obj_act, LV_EVENT_PRESSING, NULL);
 5168              		.loc 1 967 11 view .LVU1635
 5169 024a 0028     		cmp	r0, #0
 5170 024c 7FF405AF 		bne	.L328
 968:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 5171              		.loc 1 968 9 is_stmt 1 view .LVU1636
 5172 0250 0022     		movs	r2, #0
 5173 0252 0121     		movs	r1, #1
 5174 0254 404B     		ldr	r3, .L363
 5175 0256 1868     		ldr	r0, [r3]
 5176 0258 FFF7FEFF 		bl	lv_event_send
 5177              	.LVL501:
 969:lvgl/src/lv_core/lv_indev.c ****         if(indev_act->proc.wait_until_release) return;
 5178              		.loc 1 969 9 view .LVU1637
ARM GAS  D:\Temp\cc3iPNN1.s 			page 146


 969:lvgl/src/lv_core/lv_indev.c ****         if(indev_act->proc.wait_until_release) return;
 5179              		.loc 1 969 12 is_stmt 0 view .LVU1638
 5180 025c 2046     		mov	r0, r4
 5181 025e FFF7FEFF 		bl	indev_reset_check
 5182              	.LVL502:
 969:lvgl/src/lv_core/lv_indev.c ****         if(indev_act->proc.wait_until_release) return;
 5183              		.loc 1 969 11 view .LVU1639
 5184 0262 0028     		cmp	r0, #0
 5185 0264 7FF4F9AE 		bne	.L328
 970:lvgl/src/lv_core/lv_indev.c **** 
 5186              		.loc 1 970 9 is_stmt 1 view .LVU1640
 970:lvgl/src/lv_core/lv_indev.c **** 
 5187              		.loc 1 970 21 is_stmt 0 view .LVU1641
 5188 0268 3C4B     		ldr	r3, .L363+4
 5189 026a 1B68     		ldr	r3, [r3]
 970:lvgl/src/lv_core/lv_indev.c **** 
 5190              		.loc 1 970 12 view .LVU1642
 5191 026c 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 970:lvgl/src/lv_core/lv_indev.c **** 
 5192              		.loc 1 970 11 view .LVU1643
 5193 0270 13F0080F 		tst	r3, #8
 5194 0274 7FF4F1AE 		bne	.L328
 972:lvgl/src/lv_core/lv_indev.c ****         indev_gesture(proc);
 5195              		.loc 1 972 9 is_stmt 1 view .LVU1644
 5196 0278 2046     		mov	r0, r4
 5197 027a FFF7FEFF 		bl	indev_drag
 5198              	.LVL503:
 973:lvgl/src/lv_core/lv_indev.c ****         if(indev_reset_check(proc)) return;
 5199              		.loc 1 973 9 view .LVU1645
 5200 027e 2046     		mov	r0, r4
 5201 0280 FFF7FEFF 		bl	indev_gesture
 5202              	.LVL504:
 974:lvgl/src/lv_core/lv_indev.c **** 
 5203              		.loc 1 974 9 view .LVU1646
 974:lvgl/src/lv_core/lv_indev.c **** 
 5204              		.loc 1 974 12 is_stmt 0 view .LVU1647
 5205 0284 2046     		mov	r0, r4
 5206 0286 FFF7FEFF 		bl	indev_reset_check
 5207              	.LVL505:
 974:lvgl/src/lv_core/lv_indev.c **** 
 5208              		.loc 1 974 11 view .LVU1648
 5209 028a 0028     		cmp	r0, #0
 5210 028c 7FF4E5AE 		bne	.L328
 977:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press if enough time elapsed*/
 5211              		.loc 1 977 9 is_stmt 1 view .LVU1649
 977:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press if enough time elapsed*/
 5212              		.loc 1 977 45 is_stmt 0 view .LVU1650
 5213 0290 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 977:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press if enough time elapsed*/
 5214              		.loc 1 977 11 view .LVU1651
 5215 0294 13F0020F 		tst	r3, #2
 5216 0298 04D1     		bne	.L345
 977:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press if enough time elapsed*/
 5217              		.loc 1 977 72 discriminator 1 view .LVU1652
 5218 029a 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 977:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press if enough time elapsed*/
 5219              		.loc 1 977 50 discriminator 1 view .LVU1653
ARM GAS  D:\Temp\cc3iPNN1.s 			page 147


 5220 029e 13F0010F 		tst	r3, #1
 5221 02a2 2FD0     		beq	.L360
 5222              	.L345:
 993:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press repeat if enough time elapsed*/
 5223              		.loc 1 993 9 is_stmt 1 view .LVU1654
 993:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press repeat if enough time elapsed*/
 5224              		.loc 1 993 45 is_stmt 0 view .LVU1655
 5225 02a4 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 993:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press repeat if enough time elapsed*/
 5226              		.loc 1 993 11 view .LVU1656
 5227 02a8 13F0020F 		tst	r3, #2
 5228 02ac 7FF4D5AE 		bne	.L328
 993:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press repeat if enough time elapsed*/
 5229              		.loc 1 993 72 discriminator 1 view .LVU1657
 5230 02b0 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 993:lvgl/src/lv_core/lv_indev.c ****             /*Send a signal about the long press repeat if enough time elapsed*/
 5231              		.loc 1 993 50 discriminator 1 view .LVU1658
 5232 02b4 13F0010F 		tst	r3, #1
 5233 02b8 3FF4CFAE 		beq	.L328
 995:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, indev_act);
 5234              		.loc 1 995 13 is_stmt 1 view .LVU1659
 995:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, indev_act);
 5235              		.loc 1 995 16 is_stmt 0 view .LVU1660
 5236 02bc 206B     		ldr	r0, [r4, #48]
 5237 02be FFF7FEFF 		bl	lv_tick_elaps
 5238              	.LVL506:
 995:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, indev_act);
 5239              		.loc 1 995 69 view .LVU1661
 5240 02c2 264B     		ldr	r3, .L363+4
 5241 02c4 1A68     		ldr	r2, [r3]
 995:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, indev_act);
 5242              		.loc 1 995 77 view .LVU1662
 5243 02c6 538B     		ldrh	r3, [r2, #26]
 995:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS_REP, indev_act);
 5244              		.loc 1 995 15 view .LVU1663
 5245 02c8 9842     		cmp	r0, r3
 5246 02ca 7FF6C6AE 		bls	.L328
 996:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 5247              		.loc 1 996 17 is_stmt 1 view .LVU1664
 996:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 5248              		.loc 1 996 30 is_stmt 0 view .LVU1665
 5249 02ce 224B     		ldr	r3, .L363
 5250 02d0 1868     		ldr	r0, [r3]
 5251 02d2 C369     		ldr	r3, [r0, #28]
 996:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 5252              		.loc 1 996 17 view .LVU1666
 5253 02d4 1021     		movs	r1, #16
 5254 02d6 9847     		blx	r3
 5255              	.LVL507:
 997:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 5256              		.loc 1 997 17 is_stmt 1 view .LVU1667
 997:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 5257              		.loc 1 997 20 is_stmt 0 view .LVU1668
 5258 02d8 2046     		mov	r0, r4
 5259 02da FFF7FEFF 		bl	indev_reset_check
 5260              	.LVL508:
 997:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
ARM GAS  D:\Temp\cc3iPNN1.s 			page 148


 5261              		.loc 1 997 19 view .LVU1669
 5262 02de 0028     		cmp	r0, #0
 5263 02e0 7FF4BBAE 		bne	.L328
 998:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 5264              		.loc 1 998 17 is_stmt 1 view .LVU1670
 5265 02e4 0022     		movs	r2, #0
 5266 02e6 0521     		movs	r1, #5
 5267 02e8 1B4B     		ldr	r3, .L363
 5268 02ea 1868     		ldr	r0, [r3]
 5269 02ec FFF7FEFF 		bl	lv_event_send
 5270              	.LVL509:
 999:lvgl/src/lv_core/lv_indev.c ****                 proc->longpr_rep_timestamp = lv_tick_get();
 5271              		.loc 1 999 17 view .LVU1671
 999:lvgl/src/lv_core/lv_indev.c ****                 proc->longpr_rep_timestamp = lv_tick_get();
 5272              		.loc 1 999 20 is_stmt 0 view .LVU1672
 5273 02f0 2046     		mov	r0, r4
 5274 02f2 FFF7FEFF 		bl	indev_reset_check
 5275              	.LVL510:
 999:lvgl/src/lv_core/lv_indev.c ****                 proc->longpr_rep_timestamp = lv_tick_get();
 5276              		.loc 1 999 19 view .LVU1673
 5277 02f6 0028     		cmp	r0, #0
 5278 02f8 7FF4AFAE 		bne	.L328
1000:lvgl/src/lv_core/lv_indev.c ****             }
 5279              		.loc 1 1000 17 is_stmt 1 view .LVU1674
1000:lvgl/src/lv_core/lv_indev.c ****             }
 5280              		.loc 1 1000 46 is_stmt 0 view .LVU1675
 5281 02fc FFF7FEFF 		bl	lv_tick_get
 5282              	.LVL511:
1000:lvgl/src/lv_core/lv_indev.c ****             }
 5283              		.loc 1 1000 44 view .LVU1676
 5284 0300 2063     		str	r0, [r4, #48]
 5285 0302 AAE6     		b	.L328
 5286              	.L360:
 979:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS, indev_act);
 5287              		.loc 1 979 13 is_stmt 1 view .LVU1677
 979:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS, indev_act);
 5288              		.loc 1 979 16 is_stmt 0 view .LVU1678
 5289 0304 E06A     		ldr	r0, [r4, #44]
 5290 0306 FFF7FEFF 		bl	lv_tick_elaps
 5291              	.LVL512:
 979:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS, indev_act);
 5292              		.loc 1 979 61 view .LVU1679
 5293 030a 144B     		ldr	r3, .L363+4
 5294 030c 1A68     		ldr	r2, [r3]
 979:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS, indev_act);
 5295              		.loc 1 979 69 view .LVU1680
 5296 030e 138B     		ldrh	r3, [r2, #24]
 979:lvgl/src/lv_core/lv_indev.c ****                 indev_obj_act->signal_cb(indev_obj_act, LV_SIGNAL_LONG_PRESS, indev_act);
 5297              		.loc 1 979 15 view .LVU1681
 5298 0310 9842     		cmp	r0, r3
 5299 0312 C7D9     		bls	.L345
 980:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 5300              		.loc 1 980 17 is_stmt 1 view .LVU1682
 980:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 5301              		.loc 1 980 30 is_stmt 0 view .LVU1683
 5302 0314 104B     		ldr	r3, .L363
 5303 0316 1868     		ldr	r0, [r3]
ARM GAS  D:\Temp\cc3iPNN1.s 			page 149


 5304 0318 C369     		ldr	r3, [r0, #28]
 980:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 5305              		.loc 1 980 17 view .LVU1684
 5306 031a 0F21     		movs	r1, #15
 5307 031c 9847     		blx	r3
 5308              	.LVL513:
 981:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 5309              		.loc 1 981 17 is_stmt 1 view .LVU1685
 981:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 5310              		.loc 1 981 20 is_stmt 0 view .LVU1686
 5311 031e 2046     		mov	r0, r4
 5312 0320 FFF7FEFF 		bl	indev_reset_check
 5313              	.LVL514:
 981:lvgl/src/lv_core/lv_indev.c ****                 lv_event_send(indev_obj_act, LV_EVENT_LONG_PRESSED, NULL);
 5314              		.loc 1 981 19 view .LVU1687
 5315 0324 0028     		cmp	r0, #0
 5316 0326 7FF498AE 		bne	.L328
 982:lvgl/src/lv_core/lv_indev.c ****                 if(indev_reset_check(proc)) return;
 5317              		.loc 1 982 17 is_stmt 1 view .LVU1688
 5318 032a 0022     		movs	r2, #0
 5319 032c 0421     		movs	r1, #4
 5320 032e 0A4B     		ldr	r3, .L363
 5321 0330 1868     		ldr	r0, [r3]
 5322 0332 FFF7FEFF 		bl	lv_event_send
 5323              	.LVL515:
 983:lvgl/src/lv_core/lv_indev.c **** 
 5324              		.loc 1 983 17 view .LVU1689
 983:lvgl/src/lv_core/lv_indev.c **** 
 5325              		.loc 1 983 20 is_stmt 0 view .LVU1690
 5326 0336 2046     		mov	r0, r4
 5327 0338 FFF7FEFF 		bl	indev_reset_check
 5328              	.LVL516:
 983:lvgl/src/lv_core/lv_indev.c **** 
 5329              		.loc 1 983 19 view .LVU1691
 5330 033c 0028     		cmp	r0, #0
 5331 033e 7FF48CAE 		bne	.L328
 986:lvgl/src/lv_core/lv_indev.c **** 
 5332              		.loc 1 986 17 is_stmt 1 view .LVU1692
 986:lvgl/src/lv_core/lv_indev.c **** 
 5333              		.loc 1 986 36 is_stmt 0 view .LVU1693
 5334 0342 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 5335 0346 43F00103 		orr	r3, r3, #1
 5336 034a 84F83430 		strb	r3, [r4, #52]
 989:lvgl/src/lv_core/lv_indev.c ****             }
 5337              		.loc 1 989 17 is_stmt 1 view .LVU1694
 989:lvgl/src/lv_core/lv_indev.c ****             }
 5338              		.loc 1 989 46 is_stmt 0 view .LVU1695
 5339 034e FFF7FEFF 		bl	lv_tick_get
 5340              	.LVL517:
 989:lvgl/src/lv_core/lv_indev.c ****             }
 5341              		.loc 1 989 44 view .LVU1696
 5342 0352 2063     		str	r0, [r4, #48]
 5343 0354 A6E7     		b	.L345
 5344              	.LVL518:
 5345              	.L348:
 5346              	.LCFI29:
 5347              		.cfi_def_cfa_offset 0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 150


 5348              		.cfi_restore 4
 5349              		.cfi_restore 5
 5350              		.cfi_restore 6
 5351              		.cfi_restore 14
 989:lvgl/src/lv_core/lv_indev.c ****             }
 5352              		.loc 1 989 44 view .LVU1697
 5353 0356 7047     		bx	lr
 5354              	.L364:
 5355              		.align	2
 5356              	.L363:
 5357 0358 00000000 		.word	.LANCHOR0
 5358 035c 00000000 		.word	.LANCHOR1
 5359              		.cfi_endproc
 5360              	.LFE486:
 5362              		.section	.text.indev_pointer_proc,"ax",%progbits
 5363              		.align	1
 5364              		.syntax unified
 5365              		.thumb
 5366              		.thumb_func
 5367              		.fpu fpv4-sp-d16
 5369              	indev_pointer_proc:
 5370              	.LVL519:
 5371              	.LFB482:
 403:lvgl/src/lv_core/lv_indev.c ****     /*Move the cursor if set and moved*/
 5372              		.loc 1 403 1 is_stmt 1 view -0
 5373              		.cfi_startproc
 5374              		@ args = 0, pretend = 0, frame = 0
 5375              		@ frame_needed = 0, uses_anonymous_args = 0
 403:lvgl/src/lv_core/lv_indev.c ****     /*Move the cursor if set and moved*/
 5376              		.loc 1 403 1 is_stmt 0 view .LVU1699
 5377 0000 38B5     		push	{r3, r4, r5, lr}
 5378              	.LCFI30:
 5379              		.cfi_def_cfa_offset 16
 5380              		.cfi_offset 3, -16
 5381              		.cfi_offset 4, -12
 5382              		.cfi_offset 5, -8
 5383              		.cfi_offset 14, -4
 5384 0002 0446     		mov	r4, r0
 5385 0004 0D46     		mov	r5, r1
 405:lvgl/src/lv_core/lv_indev.c ****        (i->proc.types.pointer.last_point.x != data->point.x || i->proc.types.pointer.last_point.y !
 5386              		.loc 1 405 5 is_stmt 1 view .LVU1700
 405:lvgl/src/lv_core/lv_indev.c ****        (i->proc.types.pointer.last_point.x != data->point.x || i->proc.types.pointer.last_point.y !
 5387              		.loc 1 405 9 is_stmt 0 view .LVU1701
 5388 0006 406D     		ldr	r0, [r0, #84]
 5389              	.LVL520:
 405:lvgl/src/lv_core/lv_indev.c ****        (i->proc.types.pointer.last_point.x != data->point.x || i->proc.types.pointer.last_point.y !
 5390              		.loc 1 405 7 view .LVU1702
 5391 0008 18B1     		cbz	r0, .L366
 406:lvgl/src/lv_core/lv_indev.c ****         lv_obj_set_pos(i->cursor, data->point.x, data->point.y);
 5392              		.loc 1 406 61 discriminator 1 view .LVU1703
 5393 000a 626A     		ldr	r2, [r4, #36]
 5394 000c 0B68     		ldr	r3, [r1]
 405:lvgl/src/lv_core/lv_indev.c ****        (i->proc.types.pointer.last_point.x != data->point.x || i->proc.types.pointer.last_point.y !
 5395              		.loc 1 405 26 discriminator 1 view .LVU1704
 5396 000e 9A42     		cmp	r2, r3
 5397 0010 13D1     		bne	.L370
 5398              	.LVL521:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 151


 5399              	.L366:
 410:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.act_point.y = data->point.y;
 5400              		.loc 1 410 5 is_stmt 1 view .LVU1705
 410:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.act_point.y = data->point.y;
 5401              		.loc 1 410 52 is_stmt 0 view .LVU1706
 5402 0012 B5F90030 		ldrsh	r3, [r5]
 410:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.act_point.y = data->point.y;
 5403              		.loc 1 410 39 view .LVU1707
 5404 0016 2384     		strh	r3, [r4, #32]	@ movhi
 411:lvgl/src/lv_core/lv_indev.c **** 
 5405              		.loc 1 411 5 is_stmt 1 view .LVU1708
 411:lvgl/src/lv_core/lv_indev.c **** 
 5406              		.loc 1 411 52 is_stmt 0 view .LVU1709
 5407 0018 B5F90230 		ldrsh	r3, [r5, #2]
 411:lvgl/src/lv_core/lv_indev.c **** 
 5408              		.loc 1 411 39 view .LVU1710
 5409 001c 6384     		strh	r3, [r4, #34]	@ movhi
 413:lvgl/src/lv_core/lv_indev.c ****         indev_proc_press(&i->proc);
 5410              		.loc 1 413 5 is_stmt 1 view .LVU1711
 413:lvgl/src/lv_core/lv_indev.c ****         indev_proc_press(&i->proc);
 5411              		.loc 1 413 15 is_stmt 0 view .LVU1712
 5412 001e 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 413:lvgl/src/lv_core/lv_indev.c ****         indev_proc_press(&i->proc);
 5413              		.loc 1 413 7 view .LVU1713
 5414 0020 012B     		cmp	r3, #1
 5415 0022 11D0     		beq	.L371
 417:lvgl/src/lv_core/lv_indev.c ****     }
 5416              		.loc 1 417 9 is_stmt 1 view .LVU1714
 5417 0024 04F11C00 		add	r0, r4, #28
 5418 0028 FFF7FEFF 		bl	indev_proc_release
 5419              	.LVL522:
 5420              	.L368:
 420:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.last_point.y = i->proc.types.pointer.act_point.y;
 5421              		.loc 1 420 5 view .LVU1715
 420:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.last_point.y = i->proc.types.pointer.act_point.y;
 5422              		.loc 1 420 73 is_stmt 0 view .LVU1716
 5423 002c B4F92030 		ldrsh	r3, [r4, #32]
 420:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.last_point.y = i->proc.types.pointer.act_point.y;
 5424              		.loc 1 420 40 view .LVU1717
 5425 0030 A384     		strh	r3, [r4, #36]	@ movhi
 421:lvgl/src/lv_core/lv_indev.c **** }
 5426              		.loc 1 421 5 is_stmt 1 view .LVU1718
 421:lvgl/src/lv_core/lv_indev.c **** }
 5427              		.loc 1 421 73 is_stmt 0 view .LVU1719
 5428 0032 B4F92230 		ldrsh	r3, [r4, #34]
 421:lvgl/src/lv_core/lv_indev.c **** }
 5429              		.loc 1 421 40 view .LVU1720
 5430 0036 E384     		strh	r3, [r4, #38]	@ movhi
 422:lvgl/src/lv_core/lv_indev.c **** 
 5431              		.loc 1 422 1 view .LVU1721
 5432 0038 38BD     		pop	{r3, r4, r5, pc}
 5433              	.LVL523:
 5434              	.L370:
 407:lvgl/src/lv_core/lv_indev.c ****     }
 5435              		.loc 1 407 9 is_stmt 1 view .LVU1722
 5436 003a B1F90220 		ldrsh	r2, [r1, #2]
 5437 003e B1F90010 		ldrsh	r1, [r1]
ARM GAS  D:\Temp\cc3iPNN1.s 			page 152


 5438              	.LVL524:
 407:lvgl/src/lv_core/lv_indev.c ****     }
 5439              		.loc 1 407 9 is_stmt 0 view .LVU1723
 5440 0042 FFF7FEFF 		bl	lv_obj_set_pos
 5441              	.LVL525:
 5442 0046 E4E7     		b	.L366
 5443              	.L371:
 414:lvgl/src/lv_core/lv_indev.c ****     }
 5444              		.loc 1 414 9 is_stmt 1 view .LVU1724
 5445 0048 04F11C00 		add	r0, r4, #28
 5446 004c FFF7FEFF 		bl	indev_proc_press
 5447              	.LVL526:
 5448 0050 ECE7     		b	.L368
 5449              		.cfi_endproc
 5450              	.LFE482:
 5452              		.section	.text.indev_button_proc,"ax",%progbits
 5453              		.align	1
 5454              		.syntax unified
 5455              		.thumb
 5456              		.thumb_func
 5457              		.fpu fpv4-sp-d16
 5459              	indev_button_proc:
 5460              	.LVL527:
 5461              	.LFB485:
 803:lvgl/src/lv_core/lv_indev.c ****     /* Die gracefully if i->btn_points is NULL */
 5462              		.loc 1 803 1 view -0
 5463              		.cfi_startproc
 5464              		@ args = 0, pretend = 0, frame = 0
 5465              		@ frame_needed = 0, uses_anonymous_args = 0
 805:lvgl/src/lv_core/lv_indev.c ****         LV_LOG_WARN("indev_button_proc: btn_points was NULL");
 5466              		.loc 1 805 5 view .LVU1726
 805:lvgl/src/lv_core/lv_indev.c ****         LV_LOG_WARN("indev_button_proc: btn_points was NULL");
 5467              		.loc 1 805 9 is_stmt 0 view .LVU1727
 5468 0000 C36D     		ldr	r3, [r0, #92]
 805:lvgl/src/lv_core/lv_indev.c ****         LV_LOG_WARN("indev_button_proc: btn_points was NULL");
 5469              		.loc 1 805 7 view .LVU1728
 5470 0002 CBB3     		cbz	r3, .L379
 803:lvgl/src/lv_core/lv_indev.c ****     /* Die gracefully if i->btn_points is NULL */
 5471              		.loc 1 803 1 view .LVU1729
 5472 0004 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5473              	.LCFI31:
 5474              		.cfi_def_cfa_offset 24
 5475              		.cfi_offset 4, -24
 5476              		.cfi_offset 5, -20
 5477              		.cfi_offset 6, -16
 5478              		.cfi_offset 7, -12
 5479              		.cfi_offset 8, -8
 5480              		.cfi_offset 14, -4
 5481 0008 0D46     		mov	r5, r1
 5482 000a 0446     		mov	r4, r0
 810:lvgl/src/lv_core/lv_indev.c ****     lv_coord_t y = i->btn_points[data->btn_id].y;
 5483              		.loc 1 810 5 is_stmt 1 view .LVU1730
 810:lvgl/src/lv_core/lv_indev.c ****     lv_coord_t y = i->btn_points[data->btn_id].y;
 5484              		.loc 1 810 38 is_stmt 0 view .LVU1731
 5485 000c 8A68     		ldr	r2, [r1, #8]
 810:lvgl/src/lv_core/lv_indev.c ****     lv_coord_t y = i->btn_points[data->btn_id].y;
 5486              		.loc 1 810 33 view .LVU1732
ARM GAS  D:\Temp\cc3iPNN1.s 			page 153


 5487 000e 03EB8201 		add	r1, r3, r2, lsl #2
 5488              	.LVL528:
 810:lvgl/src/lv_core/lv_indev.c ****     lv_coord_t y = i->btn_points[data->btn_id].y;
 5489              		.loc 1 810 16 view .LVU1733
 5490 0012 33F92270 		ldrsh	r7, [r3, r2, lsl #2]
 5491              	.LVL529:
 811:lvgl/src/lv_core/lv_indev.c **** 
 5492              		.loc 1 811 5 is_stmt 1 view .LVU1734
 811:lvgl/src/lv_core/lv_indev.c **** 
 5493              		.loc 1 811 16 is_stmt 0 view .LVU1735
 5494 0016 B1F90280 		ldrsh	r8, [r1, #2]
 5495              	.LVL530:
 814:lvgl/src/lv_core/lv_indev.c ****         if(i->proc.types.pointer.last_point.x != x ||
 5496              		.loc 1 814 5 is_stmt 1 view .LVU1736
 814:lvgl/src/lv_core/lv_indev.c ****         if(i->proc.types.pointer.last_point.x != x ||
 5497              		.loc 1 814 12 is_stmt 0 view .LVU1737
 5498 001a AB7B     		ldrb	r3, [r5, #14]	@ zero_extendqisi2
 814:lvgl/src/lv_core/lv_indev.c ****         if(i->proc.types.pointer.last_point.x != x ||
 5499              		.loc 1 814 7 view .LVU1738
 5500 001c 012B     		cmp	r3, #1
 5501 001e 1AD0     		beq	.L382
 5502              	.LVL531:
 5503              	.L374:
 821:lvgl/src/lv_core/lv_indev.c **** 
 5504              		.loc 1 821 5 is_stmt 1 view .LVU1739
 821:lvgl/src/lv_core/lv_indev.c **** 
 5505              		.loc 1 821 8 is_stmt 0 view .LVU1740
 5506 0020 04F11C06 		add	r6, r4, #28
 5507 0024 3046     		mov	r0, r6
 5508 0026 FFF7FEFF 		bl	indev_reset_check
 5509              	.LVL532:
 821:lvgl/src/lv_core/lv_indev.c **** 
 5510              		.loc 1 821 7 view .LVU1741
 5511 002a 90B9     		cbnz	r0, .L372
 824:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.act_point.y = y;
 5512              		.loc 1 824 5 is_stmt 1 view .LVU1742
 824:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.act_point.y = y;
 5513              		.loc 1 824 39 is_stmt 0 view .LVU1743
 5514 002c 2784     		strh	r7, [r4, #32]	@ movhi
 825:lvgl/src/lv_core/lv_indev.c **** 
 5515              		.loc 1 825 5 is_stmt 1 view .LVU1744
 825:lvgl/src/lv_core/lv_indev.c **** 
 5516              		.loc 1 825 39 is_stmt 0 view .LVU1745
 5517 002e A4F82280 		strh	r8, [r4, #34]	@ movhi
 827:lvgl/src/lv_core/lv_indev.c ****     else indev_proc_release(&i->proc);
 5518              		.loc 1 827 5 is_stmt 1 view .LVU1746
 827:lvgl/src/lv_core/lv_indev.c ****     else indev_proc_release(&i->proc);
 5519              		.loc 1 827 12 is_stmt 0 view .LVU1747
 5520 0032 AB7B     		ldrb	r3, [r5, #14]	@ zero_extendqisi2
 827:lvgl/src/lv_core/lv_indev.c ****     else indev_proc_release(&i->proc);
 5521              		.loc 1 827 7 view .LVU1748
 5522 0034 012B     		cmp	r3, #1
 5523 0036 1BD0     		beq	.L383
 828:lvgl/src/lv_core/lv_indev.c **** 
 5524              		.loc 1 828 10 is_stmt 1 view .LVU1749
 5525 0038 3046     		mov	r0, r6
 5526 003a FFF7FEFF 		bl	indev_proc_release
ARM GAS  D:\Temp\cc3iPNN1.s 			page 154


 5527              	.LVL533:
 5528              	.L377:
 830:lvgl/src/lv_core/lv_indev.c **** 
 5529              		.loc 1 830 5 view .LVU1750
 830:lvgl/src/lv_core/lv_indev.c **** 
 5530              		.loc 1 830 8 is_stmt 0 view .LVU1751
 5531 003e 3046     		mov	r0, r6
 5532 0040 FFF7FEFF 		bl	indev_reset_check
 5533              	.LVL534:
 830:lvgl/src/lv_core/lv_indev.c **** 
 5534              		.loc 1 830 7 view .LVU1752
 5535 0044 28B9     		cbnz	r0, .L372
 832:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.last_point.y = i->proc.types.pointer.act_point.y;
 5536              		.loc 1 832 5 is_stmt 1 view .LVU1753
 832:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.last_point.y = i->proc.types.pointer.act_point.y;
 5537              		.loc 1 832 73 is_stmt 0 view .LVU1754
 5538 0046 B4F92030 		ldrsh	r3, [r4, #32]
 832:lvgl/src/lv_core/lv_indev.c ****     i->proc.types.pointer.last_point.y = i->proc.types.pointer.act_point.y;
 5539              		.loc 1 832 40 view .LVU1755
 5540 004a A384     		strh	r3, [r4, #36]	@ movhi
 833:lvgl/src/lv_core/lv_indev.c **** }
 5541              		.loc 1 833 5 is_stmt 1 view .LVU1756
 833:lvgl/src/lv_core/lv_indev.c **** }
 5542              		.loc 1 833 73 is_stmt 0 view .LVU1757
 5543 004c B4F92230 		ldrsh	r3, [r4, #34]
 833:lvgl/src/lv_core/lv_indev.c **** }
 5544              		.loc 1 833 40 view .LVU1758
 5545 0050 E384     		strh	r3, [r4, #38]	@ movhi
 5546              	.L372:
 834:lvgl/src/lv_core/lv_indev.c **** 
 5547              		.loc 1 834 1 view .LVU1759
 5548 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5549              	.LVL535:
 5550              	.L382:
 815:lvgl/src/lv_core/lv_indev.c ****            i->proc.types.pointer.last_point.y != y) {
 5551              		.loc 1 815 9 is_stmt 1 view .LVU1760
 815:lvgl/src/lv_core/lv_indev.c ****            i->proc.types.pointer.last_point.y != y) {
 5552              		.loc 1 815 44 is_stmt 0 view .LVU1761
 5553 0056 B0F92430 		ldrsh	r3, [r0, #36]
 815:lvgl/src/lv_core/lv_indev.c ****            i->proc.types.pointer.last_point.y != y) {
 5554              		.loc 1 815 11 view .LVU1762
 5555 005a BB42     		cmp	r3, r7
 5556 005c 03D1     		bne	.L375
 816:lvgl/src/lv_core/lv_indev.c ****             indev_proc_release(&i->proc);
 5557              		.loc 1 816 44 discriminator 1 view .LVU1763
 5558 005e B0F92630 		ldrsh	r3, [r0, #38]
 815:lvgl/src/lv_core/lv_indev.c ****            i->proc.types.pointer.last_point.y != y) {
 5559              		.loc 1 815 52 discriminator 1 view .LVU1764
 5560 0062 4345     		cmp	r3, r8
 5561 0064 DCD0     		beq	.L374
 5562              	.L375:
 817:lvgl/src/lv_core/lv_indev.c ****         }
 5563              		.loc 1 817 13 is_stmt 1 view .LVU1765
 5564 0066 04F11C00 		add	r0, r4, #28
 5565              	.LVL536:
 817:lvgl/src/lv_core/lv_indev.c ****         }
 5566              		.loc 1 817 13 is_stmt 0 view .LVU1766
ARM GAS  D:\Temp\cc3iPNN1.s 			page 155


 5567 006a FFF7FEFF 		bl	indev_proc_release
 5568              	.LVL537:
 5569 006e D7E7     		b	.L374
 5570              	.L383:
 827:lvgl/src/lv_core/lv_indev.c ****     else indev_proc_release(&i->proc);
 5571              		.loc 1 827 42 is_stmt 1 discriminator 1 view .LVU1767
 5572 0070 3046     		mov	r0, r6
 5573 0072 FFF7FEFF 		bl	indev_proc_press
 5574              	.LVL538:
 5575 0076 E2E7     		b	.L377
 5576              	.LVL539:
 5577              	.L379:
 5578              	.LCFI32:
 5579              		.cfi_def_cfa_offset 0
 5580              		.cfi_restore 4
 5581              		.cfi_restore 5
 5582              		.cfi_restore 6
 5583              		.cfi_restore 7
 5584              		.cfi_restore 8
 5585              		.cfi_restore 14
 827:lvgl/src/lv_core/lv_indev.c ****     else indev_proc_release(&i->proc);
 5586              		.loc 1 827 42 is_stmt 0 discriminator 1 view .LVU1768
 5587 0078 7047     		bx	lr
 5588              		.cfi_endproc
 5589              	.LFE485:
 5591              		.section	.text._lv_indev_read_task,"ax",%progbits
 5592              		.align	1
 5593              		.global	_lv_indev_read_task
 5594              		.syntax unified
 5595              		.thumb
 5596              		.thumb_func
 5597              		.fpu fpv4-sp-d16
 5599              	_lv_indev_read_task:
 5600              	.LVL540:
 5601              	.LFB464:
  76:lvgl/src/lv_core/lv_indev.c ****     LV_LOG_TRACE("indev read task started");
 5602              		.loc 1 76 1 is_stmt 1 view -0
 5603              		.cfi_startproc
 5604              		@ args = 0, pretend = 0, frame = 16
 5605              		@ frame_needed = 0, uses_anonymous_args = 0
  77:lvgl/src/lv_core/lv_indev.c **** 
 5606              		.loc 1 77 44 view .LVU1770
  79:lvgl/src/lv_core/lv_indev.c **** 
 5607              		.loc 1 79 5 view .LVU1771
  81:lvgl/src/lv_core/lv_indev.c **** 
 5608              		.loc 1 81 5 view .LVU1772
  81:lvgl/src/lv_core/lv_indev.c **** 
 5609              		.loc 1 81 21 is_stmt 0 view .LVU1773
 5610 0000 C068     		ldr	r0, [r0, #12]
 5611              	.LVL541:
  81:lvgl/src/lv_core/lv_indev.c **** 
 5612              		.loc 1 81 15 view .LVU1774
 5613 0002 2E4B     		ldr	r3, .L404
 5614 0004 1860     		str	r0, [r3]
  84:lvgl/src/lv_core/lv_indev.c **** 
 5615              		.loc 1 84 5 is_stmt 1 view .LVU1775
  84:lvgl/src/lv_core/lv_indev.c **** 
ARM GAS  D:\Temp\cc3iPNN1.s 			page 156


 5616              		.loc 1 84 25 is_stmt 0 view .LVU1776
 5617 0006 C368     		ldr	r3, [r0, #12]
  84:lvgl/src/lv_core/lv_indev.c **** 
 5618              		.loc 1 84 7 view .LVU1777
 5619 0008 002B     		cmp	r3, #0
 5620 000a 55D0     		beq	.L395
  76:lvgl/src/lv_core/lv_indev.c ****     LV_LOG_TRACE("indev read task started");
 5621              		.loc 1 76 1 view .LVU1778
 5622 000c 30B5     		push	{r4, r5, lr}
 5623              	.LCFI33:
 5624              		.cfi_def_cfa_offset 12
 5625              		.cfi_offset 4, -12
 5626              		.cfi_offset 5, -8
 5627              		.cfi_offset 14, -4
 5628 000e 85B0     		sub	sp, sp, #20
 5629              	.LCFI34:
 5630              		.cfi_def_cfa_offset 32
  87:lvgl/src/lv_core/lv_indev.c **** 
 5631              		.loc 1 87 5 is_stmt 1 view .LVU1779
 5632 0010 FFF7FEFF 		bl	indev_proc_reset_query_handler
 5633              	.LVL542:
  89:lvgl/src/lv_core/lv_indev.c ****     bool more_to_read;
 5634              		.loc 1 89 5 view .LVU1780
  89:lvgl/src/lv_core/lv_indev.c ****     bool more_to_read;
 5635              		.loc 1 89 17 is_stmt 0 view .LVU1781
 5636 0014 294B     		ldr	r3, .L404
 5637 0016 1B68     		ldr	r3, [r3]
  89:lvgl/src/lv_core/lv_indev.c ****     bool more_to_read;
 5638              		.loc 1 89 8 view .LVU1782
 5639 0018 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
  89:lvgl/src/lv_core/lv_indev.c ****     bool more_to_read;
 5640              		.loc 1 89 7 view .LVU1783
 5641 001c 13F0040F 		tst	r3, #4
 5642 0020 17D0     		beq	.L392
 5643 0022 47E0     		b	.L384
 5644              	.LVL543:
 5645              	.L399:
 103:lvgl/src/lv_core/lv_indev.c ****         }
 5646              		.loc 1 103 13 is_stmt 1 view .LVU1784
 103:lvgl/src/lv_core/lv_indev.c ****         }
 5647              		.loc 1 103 30 is_stmt 0 view .LVU1785
 5648 0024 DC68     		ldr	r4, [r3, #12]
 103:lvgl/src/lv_core/lv_indev.c ****         }
 5649              		.loc 1 103 58 view .LVU1786
 5650 0026 FFF7FEFF 		bl	lv_tick_get
 5651              	.LVL544:
 103:lvgl/src/lv_core/lv_indev.c ****         }
 5652              		.loc 1 103 56 view .LVU1787
 5653 002a C4F88401 		str	r0, [r4, #388]
 5654 002e 25E0     		b	.L387
 5655              	.L400:
 105:lvgl/src/lv_core/lv_indev.c ****             indev_act->driver.disp->last_activity_time = lv_tick_get();
 5656              		.loc 1 105 72 discriminator 1 view .LVU1788
 5657 0030 BDF90C20 		ldrsh	r2, [sp, #12]
 105:lvgl/src/lv_core/lv_indev.c ****             indev_act->driver.disp->last_activity_time = lv_tick_get();
 5658              		.loc 1 105 65 discriminator 1 view .LVU1789
 5659 0034 12B3     		cbz	r2, .L387
ARM GAS  D:\Temp\cc3iPNN1.s 			page 157


 106:lvgl/src/lv_core/lv_indev.c ****         }
 5660              		.loc 1 106 13 is_stmt 1 view .LVU1790
 106:lvgl/src/lv_core/lv_indev.c ****         }
 5661              		.loc 1 106 30 is_stmt 0 view .LVU1791
 5662 0036 DC68     		ldr	r4, [r3, #12]
 106:lvgl/src/lv_core/lv_indev.c ****         }
 5663              		.loc 1 106 58 view .LVU1792
 5664 0038 FFF7FEFF 		bl	lv_tick_get
 5665              	.LVL545:
 106:lvgl/src/lv_core/lv_indev.c ****         }
 5666              		.loc 1 106 56 view .LVU1793
 5667 003c C4F88401 		str	r0, [r4, #388]
 5668 0040 1CE0     		b	.L387
 5669              	.L401:
 110:lvgl/src/lv_core/lv_indev.c ****         }
 5670              		.loc 1 110 13 is_stmt 1 view .LVU1794
 5671 0042 6946     		mov	r1, sp
 5672 0044 FFF7FEFF 		bl	indev_pointer_proc
 5673              	.LVL546:
 5674              	.L389:
 122:lvgl/src/lv_core/lv_indev.c ****     } while(more_to_read);
 5675              		.loc 1 122 9 view .LVU1795
 5676 0048 1C4B     		ldr	r3, .L404
 5677 004a 1868     		ldr	r0, [r3]
 5678 004c FFF7FEFF 		bl	indev_proc_reset_query_handler
 5679              	.LVL547:
 123:lvgl/src/lv_core/lv_indev.c **** 
 5680              		.loc 1 123 5 is_stmt 0 view .LVU1796
 5681 0050 5DB3     		cbz	r5, .L398
 5682              	.LVL548:
 5683              	.L392:
  90:lvgl/src/lv_core/lv_indev.c ****     do {
 5684              		.loc 1 90 5 is_stmt 1 view .LVU1797
  91:lvgl/src/lv_core/lv_indev.c ****         /*Read the data*/
 5685              		.loc 1 91 5 view .LVU1798
  93:lvgl/src/lv_core/lv_indev.c **** 
 5686              		.loc 1 93 9 view .LVU1799
  93:lvgl/src/lv_core/lv_indev.c **** 
 5687              		.loc 1 93 24 is_stmt 0 view .LVU1800
 5688 0052 1A4C     		ldr	r4, .L404
 5689 0054 6946     		mov	r1, sp
 5690 0056 2068     		ldr	r0, [r4]
 5691 0058 FFF7FEFF 		bl	_lv_indev_read
 5692              	.LVL549:
 5693 005c 0546     		mov	r5, r0
 5694              	.LVL550:
  96:lvgl/src/lv_core/lv_indev.c ****         indev_obj_act = NULL;
 5695              		.loc 1 96 9 is_stmt 1 view .LVU1801
 5696 005e 2068     		ldr	r0, [r4]
 5697 0060 FFF7FEFF 		bl	indev_proc_reset_query_handler
 5698              	.LVL551:
  97:lvgl/src/lv_core/lv_indev.c **** 
 5699              		.loc 1 97 9 view .LVU1802
  97:lvgl/src/lv_core/lv_indev.c **** 
 5700              		.loc 1 97 23 is_stmt 0 view .LVU1803
 5701 0064 164B     		ldr	r3, .L404+4
 5702 0066 0022     		movs	r2, #0
ARM GAS  D:\Temp\cc3iPNN1.s 			page 158


 5703 0068 1A60     		str	r2, [r3]
  99:lvgl/src/lv_core/lv_indev.c **** 
 5704              		.loc 1 99 9 is_stmt 1 view .LVU1804
  99:lvgl/src/lv_core/lv_indev.c **** 
 5705              		.loc 1 99 18 is_stmt 0 view .LVU1805
 5706 006a 2368     		ldr	r3, [r4]
  99:lvgl/src/lv_core/lv_indev.c **** 
 5707              		.loc 1 99 37 view .LVU1806
 5708 006c 9DF80E20 		ldrb	r2, [sp, #14]	@ zero_extendqisi2
  99:lvgl/src/lv_core/lv_indev.c **** 
 5709              		.loc 1 99 31 view .LVU1807
 5710 0070 1A77     		strb	r2, [r3, #28]
 102:lvgl/src/lv_core/lv_indev.c ****             indev_act->driver.disp->last_activity_time = lv_tick_get();
 5711              		.loc 1 102 9 is_stmt 1 view .LVU1808
 102:lvgl/src/lv_core/lv_indev.c ****             indev_act->driver.disp->last_activity_time = lv_tick_get();
 5712              		.loc 1 102 11 is_stmt 0 view .LVU1809
 5713 0072 012A     		cmp	r2, #1
 5714 0074 D6D0     		beq	.L399
 105:lvgl/src/lv_core/lv_indev.c ****             indev_act->driver.disp->last_activity_time = lv_tick_get();
 5715              		.loc 1 105 14 is_stmt 1 view .LVU1810
 105:lvgl/src/lv_core/lv_indev.c ****             indev_act->driver.disp->last_activity_time = lv_tick_get();
 5716              		.loc 1 105 34 is_stmt 0 view .LVU1811
 5717 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 105:lvgl/src/lv_core/lv_indev.c ****             indev_act->driver.disp->last_activity_time = lv_tick_get();
 5718              		.loc 1 105 16 view .LVU1812
 5719 0078 042A     		cmp	r2, #4
 5720 007a D9D0     		beq	.L400
 5721              	.L387:
 109:lvgl/src/lv_core/lv_indev.c ****             indev_pointer_proc(indev_act, &data);
 5722              		.loc 1 109 9 is_stmt 1 view .LVU1813
 109:lvgl/src/lv_core/lv_indev.c ****             indev_pointer_proc(indev_act, &data);
 5723              		.loc 1 109 21 is_stmt 0 view .LVU1814
 5724 007c 0F4B     		ldr	r3, .L404
 5725 007e 1868     		ldr	r0, [r3]
 109:lvgl/src/lv_core/lv_indev.c ****             indev_pointer_proc(indev_act, &data);
 5726              		.loc 1 109 29 view .LVU1815
 5727 0080 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 109:lvgl/src/lv_core/lv_indev.c ****             indev_pointer_proc(indev_act, &data);
 5728              		.loc 1 109 11 view .LVU1816
 5729 0082 012B     		cmp	r3, #1
 5730 0084 DDD0     		beq	.L401
 112:lvgl/src/lv_core/lv_indev.c ****             indev_keypad_proc(indev_act, &data);
 5731              		.loc 1 112 14 is_stmt 1 view .LVU1817
 112:lvgl/src/lv_core/lv_indev.c ****             indev_keypad_proc(indev_act, &data);
 5732              		.loc 1 112 16 is_stmt 0 view .LVU1818
 5733 0086 022B     		cmp	r3, #2
 5734 0088 07D0     		beq	.L402
 115:lvgl/src/lv_core/lv_indev.c ****             indev_encoder_proc(indev_act, &data);
 5735              		.loc 1 115 14 is_stmt 1 view .LVU1819
 115:lvgl/src/lv_core/lv_indev.c ****             indev_encoder_proc(indev_act, &data);
 5736              		.loc 1 115 16 is_stmt 0 view .LVU1820
 5737 008a 042B     		cmp	r3, #4
 5738 008c 09D0     		beq	.L403
 118:lvgl/src/lv_core/lv_indev.c ****             indev_button_proc(indev_act, &data);
 5739              		.loc 1 118 14 is_stmt 1 view .LVU1821
 118:lvgl/src/lv_core/lv_indev.c ****             indev_button_proc(indev_act, &data);
 5740              		.loc 1 118 16 is_stmt 0 view .LVU1822
ARM GAS  D:\Temp\cc3iPNN1.s 			page 159


 5741 008e 032B     		cmp	r3, #3
 5742 0090 DAD1     		bne	.L389
 119:lvgl/src/lv_core/lv_indev.c ****         }
 5743              		.loc 1 119 13 is_stmt 1 view .LVU1823
 5744 0092 6946     		mov	r1, sp
 5745 0094 FFF7FEFF 		bl	indev_button_proc
 5746              	.LVL552:
 5747 0098 D6E7     		b	.L389
 5748              	.L402:
 113:lvgl/src/lv_core/lv_indev.c ****         }
 5749              		.loc 1 113 13 view .LVU1824
 5750 009a 6946     		mov	r1, sp
 5751 009c FFF7FEFF 		bl	indev_keypad_proc
 5752              	.LVL553:
 5753 00a0 D2E7     		b	.L389
 5754              	.L403:
 116:lvgl/src/lv_core/lv_indev.c ****         }
 5755              		.loc 1 116 13 view .LVU1825
 5756 00a2 6946     		mov	r1, sp
 5757 00a4 FFF7FEFF 		bl	indev_encoder_proc
 5758              	.LVL554:
 5759 00a8 CEE7     		b	.L389
 5760              	.L398:
 126:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = NULL;
 5761              		.loc 1 126 5 view .LVU1826
 126:lvgl/src/lv_core/lv_indev.c ****     indev_obj_act = NULL;
 5762              		.loc 1 126 19 is_stmt 0 view .LVU1827
 5763 00aa 0023     		movs	r3, #0
 5764 00ac 034A     		ldr	r2, .L404
 5765 00ae 1360     		str	r3, [r2]
 127:lvgl/src/lv_core/lv_indev.c **** 
 5766              		.loc 1 127 5 is_stmt 1 view .LVU1828
 127:lvgl/src/lv_core/lv_indev.c **** 
 5767              		.loc 1 127 19 is_stmt 0 view .LVU1829
 5768 00b0 034A     		ldr	r2, .L404+4
 5769 00b2 1360     		str	r3, [r2]
 129:lvgl/src/lv_core/lv_indev.c **** }
 5770              		.loc 1 129 45 is_stmt 1 view .LVU1830
 5771              	.LVL555:
 5772              	.L384:
 130:lvgl/src/lv_core/lv_indev.c **** 
 5773              		.loc 1 130 1 is_stmt 0 view .LVU1831
 5774 00b4 05B0     		add	sp, sp, #20
 5775              	.LCFI35:
 5776              		.cfi_def_cfa_offset 12
 5777              		@ sp needed
 5778 00b6 30BD     		pop	{r4, r5, pc}
 5779              	.L395:
 5780              	.LCFI36:
 5781              		.cfi_def_cfa_offset 0
 5782              		.cfi_restore 4
 5783              		.cfi_restore 5
 5784              		.cfi_restore 14
 5785 00b8 7047     		bx	lr
 5786              	.L405:
 5787 00ba 00BF     		.align	2
 5788              	.L404:
ARM GAS  D:\Temp\cc3iPNN1.s 			page 160


 5789 00bc 00000000 		.word	.LANCHOR1
 5790 00c0 00000000 		.word	.LANCHOR0
 5791              		.cfi_endproc
 5792              	.LFE464:
 5794              		.section	.bss.indev_act,"aw",%nobits
 5795              		.align	2
 5796              		.set	.LANCHOR1,. + 0
 5799              	indev_act:
 5800 0000 00000000 		.space	4
 5801              		.section	.bss.indev_obj_act,"aw",%nobits
 5802              		.align	2
 5803              		.set	.LANCHOR0,. + 0
 5806              	indev_obj_act:
 5807 0000 00000000 		.space	4
 5808              		.text
 5809              	.Letext0:
 5810              		.file 2 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 5811              		.file 3 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 5812              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 5813              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 5814              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 5815              		.file 7 "lvgl/lv_conf.h"
 5816              		.file 8 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 5817              		.file 9 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 5818              		.file 10 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 5819              		.file 11 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 5820              		.file 12 "lvgl/src/lv_core/../lv_font/../lv_misc/lv_types.h"
 5821              		.file 13 "lvgl/src/lv_core/../lv_font/../lv_misc/lv_mem.h"
 5822              		.file 14 "lvgl/src/lv_core/../lv_font/../lv_misc/lv_area.h"
 5823              		.file 15 "lvgl/src/lv_core/../lv_font/lv_font.h"
 5824              		.file 16 "lvgl/src/lv_core/../lv_misc/lv_color.h"
 5825              		.file 17 "lvgl/src/lv_core/../lv_misc/lv_anim.h"
 5826              		.file 18 "lvgl/src/lv_core/lv_style.h"
 5827              		.file 19 "lvgl/src/lv_core/../lv_hal/../lv_misc/lv_ll.h"
 5828              		.file 20 "lvgl/src/lv_core/../lv_hal/../lv_misc/lv_task.h"
 5829              		.file 21 "lvgl/src/lv_core/../lv_hal/lv_hal_disp.h"
 5830              		.file 22 "lvgl/src/lv_core/lv_obj.h"
 5831              		.file 23 "lvgl/src/lv_core/../lv_hal/lv_hal_indev.h"
 5832              		.file 24 "lvgl/src/lv_core/../lv_core/lv_group.h"
 5833              		.file 25 "lvgl/src/lv_core/../lv_draw/../lv_misc/lv_bidi.h"
 5834              		.file 26 "lvgl/src/lv_core/../lv_draw/../lv_misc/lv_txt.h"
 5835              		.file 27 "lvgl/src/lv_core/../lv_draw/lv_draw_label.h"
 5836              		.file 28 "lvgl/src/lv_core/../lv_hal/lv_hal_tick.h"
 5837              		.file 29 "lvgl/src/lv_core/lv_disp.h"
ARM GAS  D:\Temp\cc3iPNN1.s 			page 161


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_indev.c
  D:\Temp\cc3iPNN1.s:18     .text.indev_proc_reset_query_handler:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:25     .text.indev_proc_reset_query_handler:0000000000000000 indev_proc_reset_query_handler
  D:\Temp\cc3iPNN1.s:109    .text.indev_proc_reset_query_handler:0000000000000054 $d
  D:\Temp\cc3iPNN1.s:114    .text.indev_reset_check:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:120    .text.indev_reset_check:0000000000000000 indev_reset_check
  D:\Temp\cc3iPNN1.s:148    .text.indev_reset_check:0000000000000018 $d
  D:\Temp\cc3iPNN1.s:153    .text.get_dragged_obj:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:159    .text.get_dragged_obj:0000000000000000 get_dragged_obj
  D:\Temp\cc3iPNN1.s:204    .text.indev_drag_throw:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:210    .text.indev_drag_throw:0000000000000000 indev_drag_throw
  D:\Temp\cc3iPNN1.s:561    .text.indev_drag_throw:00000000000001a4 $d
  D:\Temp\cc3iPNN1.s:568    .text.indev_proc_release:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:574    .text.indev_proc_release:0000000000000000 indev_proc_release
  D:\Temp\cc3iPNN1.s:896    .text.indev_proc_release:0000000000000188 $d
  D:\Temp\cc3iPNN1.s:902    .text.indev_click_focus:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:908    .text.indev_click_focus:0000000000000000 indev_click_focus
  D:\Temp\cc3iPNN1.s:1234   .text.indev_click_focus:0000000000000168 $d
  D:\Temp\cc3iPNN1.s:1240   .text.indev_drag:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:1246   .text.indev_drag:0000000000000000 indev_drag
  D:\Temp\cc3iPNN1.s:1866   .text.indev_drag:00000000000002d0 $d
  D:\Temp\cc3iPNN1.s:1874   .text.indev_gesture:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:1880   .text.indev_gesture:0000000000000000 indev_gesture
  D:\Temp\cc3iPNN1.s:2071   .text.indev_gesture:00000000000000e4 $d
  D:\Temp\cc3iPNN1.s:2076   .text.indev_keypad_proc:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:2082   .text.indev_keypad_proc:0000000000000000 indev_keypad_proc
  D:\Temp\cc3iPNN1.s:2689   .text.indev_keypad_proc:00000000000002f4 $d
  D:\Temp\cc3iPNN1.s:2694   .text.indev_encoder_proc:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:2700   .text.indev_encoder_proc:0000000000000000 indev_encoder_proc
  D:\Temp\cc3iPNN1.s:3356   .text.indev_encoder_proc:0000000000000314 $d
  D:\Temp\cc3iPNN1.s:3361   .text.indev_encoder_proc:0000000000000318 $t
  D:\Temp\cc3iPNN1.s:3590   .text.indev_encoder_proc:0000000000000440 $d
  D:\Temp\cc3iPNN1.s:3596   .text.lv_indev_get_act:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:3603   .text.lv_indev_get_act:0000000000000000 lv_indev_get_act
  D:\Temp\cc3iPNN1.s:3618   .text.lv_indev_get_act:0000000000000008 $d
  D:\Temp\cc3iPNN1.s:3623   .text.lv_indev_get_type:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:3630   .text.lv_indev_get_type:0000000000000000 lv_indev_get_type
  D:\Temp\cc3iPNN1.s:3658   .text.lv_indev_reset:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:3665   .text.lv_indev_reset:0000000000000000 lv_indev_reset
  D:\Temp\cc3iPNN1.s:3788   .text.lv_indev_reset:0000000000000070 $d
  D:\Temp\cc3iPNN1.s:3794   .text._lv_indev_init:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:3801   .text._lv_indev_init:0000000000000000 _lv_indev_init
  D:\Temp\cc3iPNN1.s:3823   .text.lv_indev_reset_long_press:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:3830   .text.lv_indev_reset_long_press:0000000000000000 lv_indev_reset_long_press
  D:\Temp\cc3iPNN1.s:3868   .text.lv_indev_enable:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:3875   .text.lv_indev_enable:0000000000000000 lv_indev_enable
  D:\Temp\cc3iPNN1.s:3901   .text.lv_indev_set_cursor:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:3908   .text.lv_indev_set_cursor:0000000000000000 lv_indev_set_cursor
  D:\Temp\cc3iPNN1.s:3968   .text.lv_indev_set_group:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:3975   .text.lv_indev_set_group:0000000000000000 lv_indev_set_group
  D:\Temp\cc3iPNN1.s:4003   .text.lv_indev_set_button_points:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4010   .text.lv_indev_set_button_points:0000000000000000 lv_indev_set_button_points
  D:\Temp\cc3iPNN1.s:4037   .text.lv_indev_get_point:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4044   .text.lv_indev_get_point:0000000000000000 lv_indev_get_point
  D:\Temp\cc3iPNN1.s:4100   .text.lv_indev_get_gesture_dir:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4107   .text.lv_indev_get_gesture_dir:0000000000000000 lv_indev_get_gesture_dir
ARM GAS  D:\Temp\cc3iPNN1.s 			page 162


  D:\Temp\cc3iPNN1.s:4125   .text.lv_indev_get_key:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4132   .text.lv_indev_get_key:0000000000000000 lv_indev_get_key
  D:\Temp\cc3iPNN1.s:4163   .text.lv_indev_is_dragging:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4170   .text.lv_indev_is_dragging:0000000000000000 lv_indev_is_dragging
  D:\Temp\cc3iPNN1.s:4217   .text.lv_indev_get_vect:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4224   .text.lv_indev_get_vect:0000000000000000 lv_indev_get_vect
  D:\Temp\cc3iPNN1.s:4280   .text.lv_indev_finish_drag:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4287   .text.lv_indev_finish_drag:0000000000000000 lv_indev_finish_drag
  D:\Temp\cc3iPNN1.s:4409   .text.lv_indev_wait_release:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4416   .text.lv_indev_wait_release:0000000000000000 lv_indev_wait_release
  D:\Temp\cc3iPNN1.s:4439   .text.lv_indev_get_obj_act:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4446   .text.lv_indev_get_obj_act:0000000000000000 lv_indev_get_obj_act
  D:\Temp\cc3iPNN1.s:4461   .text.lv_indev_get_obj_act:0000000000000008 $d
  D:\Temp\cc3iPNN1.s:4466   .text.lv_indev_get_read_task:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4473   .text.lv_indev_get_read_task:0000000000000000 lv_indev_get_read_task
  D:\Temp\cc3iPNN1.s:4501   .text.lv_indev_search_obj:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4508   .text.lv_indev_search_obj:0000000000000000 lv_indev_search_obj
  D:\Temp\cc3iPNN1.s:4645   .text.indev_proc_press:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:4651   .text.indev_proc_press:0000000000000000 indev_proc_press
  D:\Temp\cc3iPNN1.s:5129   .text.indev_proc_press:0000000000000214 $d
  D:\Temp\cc3iPNN1.s:5134   .text.indev_proc_press:000000000000021c $t
  D:\Temp\cc3iPNN1.s:5357   .text.indev_proc_press:0000000000000358 $d
  D:\Temp\cc3iPNN1.s:5363   .text.indev_pointer_proc:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:5369   .text.indev_pointer_proc:0000000000000000 indev_pointer_proc
  D:\Temp\cc3iPNN1.s:5453   .text.indev_button_proc:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:5459   .text.indev_button_proc:0000000000000000 indev_button_proc
  D:\Temp\cc3iPNN1.s:5592   .text._lv_indev_read_task:0000000000000000 $t
  D:\Temp\cc3iPNN1.s:5599   .text._lv_indev_read_task:0000000000000000 _lv_indev_read_task
  D:\Temp\cc3iPNN1.s:5789   .text._lv_indev_read_task:00000000000000bc $d
  D:\Temp\cc3iPNN1.s:5795   .bss.indev_act:0000000000000000 $d
  D:\Temp\cc3iPNN1.s:5799   .bss.indev_act:0000000000000000 indev_act
  D:\Temp\cc3iPNN1.s:5802   .bss.indev_obj_act:0000000000000000 $d
  D:\Temp\cc3iPNN1.s:5806   .bss.indev_obj_act:0000000000000000 indev_obj_act

UNDEFINED SYMBOLS
lv_obj_get_drag_parent
lv_obj_get_parent
lv_obj_get_drag_throw
lv_event_send
lv_obj_get_drag_dir
lv_obj_get_coords
lv_obj_get_x
lv_obj_get_y
lv_obj_set_pos
lv_obj_set_x
lv_obj_set_y
lv_obj_is_protected
lv_obj_get_focused_obj
lv_obj_get_group
lv_signal_send
lv_group_focus_obj
lv_obj_get_drag
lv_obj_get_width
lv_obj_get_height
lv_disp_get_inv_buf_size
_lv_disp_pop_from_inv_buf
lv_obj_get_gesture_parent
ARM GAS  D:\Temp\cc3iPNN1.s 			page 163


lv_group_get_focused
lv_tick_get
lv_group_send_data
lv_group_set_editing
lv_group_focus_next
lv_group_focus_prev
lv_tick_elaps
lv_group_get_editing
_lv_ll_get_len
lv_indev_get_next
lv_disp_get_layer_sys
lv_obj_set_parent
lv_obj_set_click
lv_obj_hittest
_lv_ll_get_head
_lv_ll_get_next
lv_obj_get_click
lv_obj_get_hidden
lv_obj_get_state
lv_disp_get_layer_top
lv_disp_get_scr_act
lv_obj_move_foreground
_lv_indev_read
