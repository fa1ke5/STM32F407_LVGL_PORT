ARM GAS  D:\Temp\ccHSkmsm.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_switch.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_switch_get_style,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	lv_switch_get_style:
  26              	.LVL0:
  27              	.LFB483:
  28              		.file 1 "lvgl/src/lv_widgets/lv_switch.c"
   1:lvgl/src/lv_widgets/lv_switch.c **** /**
   2:lvgl/src/lv_widgets/lv_switch.c ****  * @file lv_sw.c
   3:lvgl/src/lv_widgets/lv_switch.c ****  *
   4:lvgl/src/lv_widgets/lv_switch.c ****  */
   5:lvgl/src/lv_widgets/lv_switch.c **** 
   6:lvgl/src/lv_widgets/lv_switch.c **** /*********************
   7:lvgl/src/lv_widgets/lv_switch.c ****  *      INCLUDES
   8:lvgl/src/lv_widgets/lv_switch.c ****  *********************/
   9:lvgl/src/lv_widgets/lv_switch.c **** #include "lv_switch.h"
  10:lvgl/src/lv_widgets/lv_switch.c **** 
  11:lvgl/src/lv_widgets/lv_switch.c **** #if LV_USE_SWITCH != 0
  12:lvgl/src/lv_widgets/lv_switch.c **** 
  13:lvgl/src/lv_widgets/lv_switch.c **** /*Testing of dependencies*/
  14:lvgl/src/lv_widgets/lv_switch.c **** #if LV_USE_SLIDER == 0
  15:lvgl/src/lv_widgets/lv_switch.c ****     #error "lv_sw: lv_slider is required. Enable it in lv_conf.h (LV_USE_SLIDER 1)"
  16:lvgl/src/lv_widgets/lv_switch.c **** #endif
  17:lvgl/src/lv_widgets/lv_switch.c **** 
  18:lvgl/src/lv_widgets/lv_switch.c **** #include "../lv_misc/lv_debug.h"
  19:lvgl/src/lv_widgets/lv_switch.c **** #include "../lv_themes/lv_theme.h"
  20:lvgl/src/lv_widgets/lv_switch.c **** #include "../lv_misc/lv_math.h"
  21:lvgl/src/lv_widgets/lv_switch.c **** #include "../lv_core/lv_indev.h"
  22:lvgl/src/lv_widgets/lv_switch.c **** #include "../lv_core/lv_disp.h"
  23:lvgl/src/lv_widgets/lv_switch.c **** #include "lv_img.h"
  24:lvgl/src/lv_widgets/lv_switch.c **** 
  25:lvgl/src/lv_widgets/lv_switch.c **** /*********************
  26:lvgl/src/lv_widgets/lv_switch.c ****  *      DEFINES
  27:lvgl/src/lv_widgets/lv_switch.c ****  *********************/
  28:lvgl/src/lv_widgets/lv_switch.c **** #define LV_OBJX_NAME "lv_switch"
  29:lvgl/src/lv_widgets/lv_switch.c **** 
  30:lvgl/src/lv_widgets/lv_switch.c **** /**********************
ARM GAS  D:\Temp\ccHSkmsm.s 			page 2


  31:lvgl/src/lv_widgets/lv_switch.c ****  *      TYPEDEFS
  32:lvgl/src/lv_widgets/lv_switch.c ****  **********************/
  33:lvgl/src/lv_widgets/lv_switch.c **** 
  34:lvgl/src/lv_widgets/lv_switch.c **** /**********************
  35:lvgl/src/lv_widgets/lv_switch.c ****  *  STATIC PROTOTYPES
  36:lvgl/src/lv_widgets/lv_switch.c ****  **********************/
  37:lvgl/src/lv_widgets/lv_switch.c **** static lv_res_t lv_switch_signal(lv_obj_t * sw, lv_signal_t sign, void * param);
  38:lvgl/src/lv_widgets/lv_switch.c **** static lv_design_res_t lv_switch_design(lv_obj_t * sw, const lv_area_t * clip_area, lv_design_mode_
  39:lvgl/src/lv_widgets/lv_switch.c **** static lv_style_list_t * lv_switch_get_style(lv_obj_t * sw, uint8_t part);
  40:lvgl/src/lv_widgets/lv_switch.c **** 
  41:lvgl/src/lv_widgets/lv_switch.c **** /**********************
  42:lvgl/src/lv_widgets/lv_switch.c ****  *  STATIC VARIABLES
  43:lvgl/src/lv_widgets/lv_switch.c ****  **********************/
  44:lvgl/src/lv_widgets/lv_switch.c **** static lv_signal_cb_t ancestor_signal;
  45:lvgl/src/lv_widgets/lv_switch.c **** static lv_design_cb_t ancestor_design;
  46:lvgl/src/lv_widgets/lv_switch.c **** 
  47:lvgl/src/lv_widgets/lv_switch.c **** /**********************
  48:lvgl/src/lv_widgets/lv_switch.c ****  *      MACROS
  49:lvgl/src/lv_widgets/lv_switch.c ****  **********************/
  50:lvgl/src/lv_widgets/lv_switch.c **** 
  51:lvgl/src/lv_widgets/lv_switch.c **** /**********************
  52:lvgl/src/lv_widgets/lv_switch.c ****  *   GLOBAL FUNCTIONS
  53:lvgl/src/lv_widgets/lv_switch.c ****  **********************/
  54:lvgl/src/lv_widgets/lv_switch.c **** 
  55:lvgl/src/lv_widgets/lv_switch.c **** /**
  56:lvgl/src/lv_widgets/lv_switch.c ****  * Create a switch objects
  57:lvgl/src/lv_widgets/lv_switch.c ****  * @param par pointer to an object, it will be the parent of the new switch
  58:lvgl/src/lv_widgets/lv_switch.c ****  * @param copy pointer to a switch object, if not NULL then the new object will be copied from it
  59:lvgl/src/lv_widgets/lv_switch.c ****  * @return pointer to the created switch
  60:lvgl/src/lv_widgets/lv_switch.c ****  */
  61:lvgl/src/lv_widgets/lv_switch.c **** lv_obj_t * lv_switch_create(lv_obj_t * par, const lv_obj_t * copy)
  62:lvgl/src/lv_widgets/lv_switch.c **** {
  63:lvgl/src/lv_widgets/lv_switch.c ****     LV_LOG_TRACE("switch create started");
  64:lvgl/src/lv_widgets/lv_switch.c **** 
  65:lvgl/src/lv_widgets/lv_switch.c ****     /*Create the ancestor of switch*/
  66:lvgl/src/lv_widgets/lv_switch.c ****     lv_obj_t * sw = lv_bar_create(par, copy);
  67:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_MEM(sw);
  68:lvgl/src/lv_widgets/lv_switch.c **** 
  69:lvgl/src/lv_widgets/lv_switch.c ****     if(sw == NULL) return NULL;
  70:lvgl/src/lv_widgets/lv_switch.c **** 
  71:lvgl/src/lv_widgets/lv_switch.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(sw);
  72:lvgl/src/lv_widgets/lv_switch.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(sw);
  73:lvgl/src/lv_widgets/lv_switch.c **** 
  74:lvgl/src/lv_widgets/lv_switch.c ****     /*Allocate the switch type specific extended data*/
  75:lvgl/src/lv_widgets/lv_switch.c ****     lv_switch_ext_t * ext = lv_obj_allocate_ext_attr(sw, sizeof(lv_switch_ext_t));
  76:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_MEM(ext);
  77:lvgl/src/lv_widgets/lv_switch.c ****     if(ext == NULL) {
  78:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_del(sw);
  79:lvgl/src/lv_widgets/lv_switch.c ****         return NULL;
  80:lvgl/src/lv_widgets/lv_switch.c ****     }
  81:lvgl/src/lv_widgets/lv_switch.c **** 
  82:lvgl/src/lv_widgets/lv_switch.c ****     lv_style_list_init(&ext->style_knob);
  83:lvgl/src/lv_widgets/lv_switch.c **** 
  84:lvgl/src/lv_widgets/lv_switch.c ****     /*The signal and design functions are not copied so set them here*/
  85:lvgl/src/lv_widgets/lv_switch.c ****     lv_obj_set_signal_cb(sw, lv_switch_signal);
  86:lvgl/src/lv_widgets/lv_switch.c ****     lv_obj_set_design_cb(sw, lv_switch_design);
  87:lvgl/src/lv_widgets/lv_switch.c **** 
ARM GAS  D:\Temp\ccHSkmsm.s 			page 3


  88:lvgl/src/lv_widgets/lv_switch.c ****     /*Init the new switch switch*/
  89:lvgl/src/lv_widgets/lv_switch.c ****     if(copy == NULL) {
  90:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_set_click(sw, true);
  91:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_add_protect(sw, LV_PROTECT_PRESS_LOST);
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_set_size(sw, LV_DPX(60), LV_DPX(35));
  93:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
  94:lvgl/src/lv_widgets/lv_switch.c **** 
  95:lvgl/src/lv_widgets/lv_switch.c ****         lv_theme_apply(sw, LV_THEME_SWITCH);
  96:lvgl/src/lv_widgets/lv_switch.c ****     }
  97:lvgl/src/lv_widgets/lv_switch.c ****     /*Copy an existing switch*/
  98:lvgl/src/lv_widgets/lv_switch.c ****     else {
  99:lvgl/src/lv_widgets/lv_switch.c ****         lv_switch_ext_t * copy_ext = lv_obj_get_ext_attr(copy);
 100:lvgl/src/lv_widgets/lv_switch.c **** 
 101:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_list_copy(&ext->style_knob, &copy_ext->style_knob);
 102:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_refresh_style(sw, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);
 103:lvgl/src/lv_widgets/lv_switch.c ****     }
 104:lvgl/src/lv_widgets/lv_switch.c **** 
 105:lvgl/src/lv_widgets/lv_switch.c ****     /*Refresh the style with new signal function*/
 106:lvgl/src/lv_widgets/lv_switch.c **** 
 107:lvgl/src/lv_widgets/lv_switch.c ****     LV_LOG_INFO("switch created");
 108:lvgl/src/lv_widgets/lv_switch.c **** 
 109:lvgl/src/lv_widgets/lv_switch.c ****     return sw;
 110:lvgl/src/lv_widgets/lv_switch.c **** }
 111:lvgl/src/lv_widgets/lv_switch.c **** 
 112:lvgl/src/lv_widgets/lv_switch.c **** /*=====================
 113:lvgl/src/lv_widgets/lv_switch.c ****  * Setter functions
 114:lvgl/src/lv_widgets/lv_switch.c ****  *====================*/
 115:lvgl/src/lv_widgets/lv_switch.c **** 
 116:lvgl/src/lv_widgets/lv_switch.c **** /**
 117:lvgl/src/lv_widgets/lv_switch.c ****  * Turn ON the switch
 118:lvgl/src/lv_widgets/lv_switch.c ****  * @param sw pointer to a switch object
 119:lvgl/src/lv_widgets/lv_switch.c ****  * @param anim LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediate
 120:lvgl/src/lv_widgets/lv_switch.c ****  */
 121:lvgl/src/lv_widgets/lv_switch.c **** void lv_switch_on(lv_obj_t * sw, lv_anim_enable_t anim)
 122:lvgl/src/lv_widgets/lv_switch.c **** {
 123:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_OBJ(sw, LV_OBJX_NAME);
 124:lvgl/src/lv_widgets/lv_switch.c **** 
 125:lvgl/src/lv_widgets/lv_switch.c **** #if LV_USE_ANIMATION == 0
 126:lvgl/src/lv_widgets/lv_switch.c ****     anim = LV_ANIM_OFF;
 127:lvgl/src/lv_widgets/lv_switch.c **** #endif
 128:lvgl/src/lv_widgets/lv_switch.c ****     if(lv_bar_get_value(sw) == 1)
 129:lvgl/src/lv_widgets/lv_switch.c ****         return;
 130:lvgl/src/lv_widgets/lv_switch.c ****     lv_bar_set_value(sw, 1, anim);
 131:lvgl/src/lv_widgets/lv_switch.c ****     lv_obj_add_state(sw, LV_STATE_CHECKED);
 132:lvgl/src/lv_widgets/lv_switch.c **** }
 133:lvgl/src/lv_widgets/lv_switch.c **** 
 134:lvgl/src/lv_widgets/lv_switch.c **** /**
 135:lvgl/src/lv_widgets/lv_switch.c ****  * Turn OFF the switch
 136:lvgl/src/lv_widgets/lv_switch.c ****  * @param sw pointer to a switch object
 137:lvgl/src/lv_widgets/lv_switch.c ****  * @param anim LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediate
 138:lvgl/src/lv_widgets/lv_switch.c ****  */
 139:lvgl/src/lv_widgets/lv_switch.c **** void lv_switch_off(lv_obj_t * sw, lv_anim_enable_t anim)
 140:lvgl/src/lv_widgets/lv_switch.c **** {
 141:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_OBJ(sw, LV_OBJX_NAME);
 142:lvgl/src/lv_widgets/lv_switch.c **** 
 143:lvgl/src/lv_widgets/lv_switch.c **** #if LV_USE_ANIMATION == 0
 144:lvgl/src/lv_widgets/lv_switch.c ****     anim = LV_ANIM_OFF;
ARM GAS  D:\Temp\ccHSkmsm.s 			page 4


 145:lvgl/src/lv_widgets/lv_switch.c **** #endif
 146:lvgl/src/lv_widgets/lv_switch.c ****     if(lv_bar_get_value(sw) == 0)
 147:lvgl/src/lv_widgets/lv_switch.c ****         return;
 148:lvgl/src/lv_widgets/lv_switch.c ****     lv_bar_set_value(sw, 0, anim);
 149:lvgl/src/lv_widgets/lv_switch.c ****     lv_obj_clear_state(sw, LV_STATE_CHECKED);
 150:lvgl/src/lv_widgets/lv_switch.c **** }
 151:lvgl/src/lv_widgets/lv_switch.c **** 
 152:lvgl/src/lv_widgets/lv_switch.c **** /**
 153:lvgl/src/lv_widgets/lv_switch.c ****  * Toggle the position of the switch
 154:lvgl/src/lv_widgets/lv_switch.c ****  * @param sw pointer to a switch object
 155:lvgl/src/lv_widgets/lv_switch.c ****  * @param anim LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediate
 156:lvgl/src/lv_widgets/lv_switch.c ****  * @return resulting state of the switch.
 157:lvgl/src/lv_widgets/lv_switch.c ****  */
 158:lvgl/src/lv_widgets/lv_switch.c **** bool lv_switch_toggle(lv_obj_t * sw, lv_anim_enable_t anim)
 159:lvgl/src/lv_widgets/lv_switch.c **** {
 160:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_OBJ(sw, LV_OBJX_NAME);
 161:lvgl/src/lv_widgets/lv_switch.c **** 
 162:lvgl/src/lv_widgets/lv_switch.c **** #if LV_USE_ANIMATION == 0
 163:lvgl/src/lv_widgets/lv_switch.c ****     anim = LV_ANIM_OFF;
 164:lvgl/src/lv_widgets/lv_switch.c **** #endif
 165:lvgl/src/lv_widgets/lv_switch.c **** 
 166:lvgl/src/lv_widgets/lv_switch.c ****     bool state = lv_switch_get_state(sw);
 167:lvgl/src/lv_widgets/lv_switch.c ****     if(state)
 168:lvgl/src/lv_widgets/lv_switch.c ****         lv_switch_off(sw, anim);
 169:lvgl/src/lv_widgets/lv_switch.c ****     else
 170:lvgl/src/lv_widgets/lv_switch.c ****         lv_switch_on(sw, anim);
 171:lvgl/src/lv_widgets/lv_switch.c **** 
 172:lvgl/src/lv_widgets/lv_switch.c ****     return !state;
 173:lvgl/src/lv_widgets/lv_switch.c **** }
 174:lvgl/src/lv_widgets/lv_switch.c **** 
 175:lvgl/src/lv_widgets/lv_switch.c **** /*=====================
 176:lvgl/src/lv_widgets/lv_switch.c ****  * Getter functions
 177:lvgl/src/lv_widgets/lv_switch.c ****  *====================*/
 178:lvgl/src/lv_widgets/lv_switch.c **** 
 179:lvgl/src/lv_widgets/lv_switch.c **** /**********************
 180:lvgl/src/lv_widgets/lv_switch.c ****  *   STATIC FUNCTIONS
 181:lvgl/src/lv_widgets/lv_switch.c ****  **********************/
 182:lvgl/src/lv_widgets/lv_switch.c **** 
 183:lvgl/src/lv_widgets/lv_switch.c **** /**
 184:lvgl/src/lv_widgets/lv_switch.c ****  * Handle the drawing related tasks of the sliders
 185:lvgl/src/lv_widgets/lv_switch.c ****  * @param slider pointer to an object
 186:lvgl/src/lv_widgets/lv_switch.c ****  * @param clip_area the object will be drawn only in this area
 187:lvgl/src/lv_widgets/lv_switch.c ****  * @param mode LV_DESIGN_COVER_CHK: only check if the object fully covers the 'mask_p' area
 188:lvgl/src/lv_widgets/lv_switch.c ****  *                                  (return 'true' if yes)
 189:lvgl/src/lv_widgets/lv_switch.c ****  *             LV_DESIGN_DRAW: draw the object (always return 'true')
 190:lvgl/src/lv_widgets/lv_switch.c ****  *             LV_DESIGN_DRAW_POST: drawing after every children are drawn
 191:lvgl/src/lv_widgets/lv_switch.c ****  * @param return an element of `lv_design_res_t`
 192:lvgl/src/lv_widgets/lv_switch.c ****  */
 193:lvgl/src/lv_widgets/lv_switch.c **** static lv_design_res_t lv_switch_design(lv_obj_t * sw, const lv_area_t * clip_area, lv_design_mode_
 194:lvgl/src/lv_widgets/lv_switch.c **** {
 195:lvgl/src/lv_widgets/lv_switch.c ****     /*Return false if the object is not covers the mask_p area*/
 196:lvgl/src/lv_widgets/lv_switch.c ****     if(mode == LV_DESIGN_COVER_CHK) {
 197:lvgl/src/lv_widgets/lv_switch.c ****         return LV_DESIGN_RES_NOT_COVER;
 198:lvgl/src/lv_widgets/lv_switch.c ****     }
 199:lvgl/src/lv_widgets/lv_switch.c ****     /*Draw the object*/
 200:lvgl/src/lv_widgets/lv_switch.c ****     else if(mode == LV_DESIGN_DRAW_MAIN) {
 201:lvgl/src/lv_widgets/lv_switch.c ****         lv_bidi_dir_t base_dir = lv_obj_get_base_dir(sw);
ARM GAS  D:\Temp\ccHSkmsm.s 			page 5


 202:lvgl/src/lv_widgets/lv_switch.c **** 
 203:lvgl/src/lv_widgets/lv_switch.c ****         /*The ancestor design function will draw the background and the indicator.
 204:lvgl/src/lv_widgets/lv_switch.c ****          * It also sets ext->bar.indic_area*/
 205:lvgl/src/lv_widgets/lv_switch.c ****         ancestor_design(sw, clip_area, mode);
 206:lvgl/src/lv_widgets/lv_switch.c **** 
 207:lvgl/src/lv_widgets/lv_switch.c ****         lv_switch_ext_t * ext = lv_obj_get_ext_attr(sw);
 208:lvgl/src/lv_widgets/lv_switch.c **** 
 209:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t objw = lv_obj_get_width(sw);
 210:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t objh = lv_obj_get_height(sw);
 211:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t knob_size = objh;
 212:lvgl/src/lv_widgets/lv_switch.c ****         lv_area_t knob_area;
 213:lvgl/src/lv_widgets/lv_switch.c **** 
 214:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t bg_left = lv_obj_get_style_pad_left(sw,   LV_SWITCH_PART_BG);
 215:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t bg_right = lv_obj_get_style_pad_right(sw,  LV_SWITCH_PART_BG);
 216:lvgl/src/lv_widgets/lv_switch.c **** 
 217:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t max_indic_w = objw - bg_left - bg_right;
 218:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t act_indic_w = lv_area_get_width(&ext->bar.indic_area);
 219:lvgl/src/lv_widgets/lv_switch.c ****         if(base_dir != LV_BIDI_DIR_RTL) {
 220:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x1 = ext->bar.indic_area.x2 - ((act_indic_w * knob_size) / max_indic_w);
 221:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x2 = knob_area.x1 + knob_size;
 222:lvgl/src/lv_widgets/lv_switch.c ****         }
 223:lvgl/src/lv_widgets/lv_switch.c ****         else {
 224:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x2 = ext->bar.indic_area.x1 + ((act_indic_w * knob_size) / max_indic_w);
 225:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x1 = knob_area.x2 - knob_size;
 226:lvgl/src/lv_widgets/lv_switch.c ****         }
 227:lvgl/src/lv_widgets/lv_switch.c **** 
 228:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y1 = sw->coords.y1;
 229:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y2 = sw->coords.y2;
 230:lvgl/src/lv_widgets/lv_switch.c **** 
 231:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_left = lv_obj_get_style_pad_left(sw,   LV_SWITCH_PART_KNOB);
 232:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_right = lv_obj_get_style_pad_right(sw,  LV_SWITCH_PART_KNOB);
 233:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_top = lv_obj_get_style_pad_top(sw,    LV_SWITCH_PART_KNOB);
 234:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_bottom = lv_obj_get_style_pad_bottom(sw, LV_SWITCH_PART_KNOB);
 235:lvgl/src/lv_widgets/lv_switch.c **** 
 236:lvgl/src/lv_widgets/lv_switch.c ****         /*Apply the paddings on the knob area*/
 237:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.x1 -= knob_left;
 238:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.x2 += knob_right;
 239:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y1 -= knob_top;
 240:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y2 += knob_bottom;
 241:lvgl/src/lv_widgets/lv_switch.c **** 
 242:lvgl/src/lv_widgets/lv_switch.c ****         lv_draw_rect_dsc_t knob_rect_dsc;
 243:lvgl/src/lv_widgets/lv_switch.c ****         lv_draw_rect_dsc_init(&knob_rect_dsc);
 244:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_init_draw_rect_dsc(sw, LV_SWITCH_PART_KNOB, &knob_rect_dsc);
 245:lvgl/src/lv_widgets/lv_switch.c **** 
 246:lvgl/src/lv_widgets/lv_switch.c ****         lv_draw_rect(&knob_area, clip_area, &knob_rect_dsc);
 247:lvgl/src/lv_widgets/lv_switch.c **** 
 248:lvgl/src/lv_widgets/lv_switch.c ****     }
 249:lvgl/src/lv_widgets/lv_switch.c ****     /*Post draw when the children are drawn*/
 250:lvgl/src/lv_widgets/lv_switch.c ****     else if(mode == LV_DESIGN_DRAW_POST) {
 251:lvgl/src/lv_widgets/lv_switch.c ****         return ancestor_design(sw, clip_area, mode);
 252:lvgl/src/lv_widgets/lv_switch.c ****     }
 253:lvgl/src/lv_widgets/lv_switch.c **** 
 254:lvgl/src/lv_widgets/lv_switch.c ****     return LV_DESIGN_RES_OK;
 255:lvgl/src/lv_widgets/lv_switch.c **** }
 256:lvgl/src/lv_widgets/lv_switch.c **** 
 257:lvgl/src/lv_widgets/lv_switch.c **** /**
 258:lvgl/src/lv_widgets/lv_switch.c ****  * Signal function of the switch
ARM GAS  D:\Temp\ccHSkmsm.s 			page 6


 259:lvgl/src/lv_widgets/lv_switch.c ****  * @param sw pointer to a switch object
 260:lvgl/src/lv_widgets/lv_switch.c ****  * @param sign a signal type from lv_signal_t enum
 261:lvgl/src/lv_widgets/lv_switch.c ****  * @param param pointer to a signal specific variable
 262:lvgl/src/lv_widgets/lv_switch.c ****  * @return LV_RES_OK: the object is not deleted in the function; LV_RES_INV: the object is deleted
 263:lvgl/src/lv_widgets/lv_switch.c ****  */
 264:lvgl/src/lv_widgets/lv_switch.c **** static lv_res_t lv_switch_signal(lv_obj_t * sw, lv_signal_t sign, void * param)
 265:lvgl/src/lv_widgets/lv_switch.c **** {
 266:lvgl/src/lv_widgets/lv_switch.c ****     lv_res_t res;
 267:lvgl/src/lv_widgets/lv_switch.c **** 
 268:lvgl/src/lv_widgets/lv_switch.c ****     if(sign == LV_SIGNAL_GET_STYLE) {
 269:lvgl/src/lv_widgets/lv_switch.c ****         lv_get_style_info_t * info = param;
 270:lvgl/src/lv_widgets/lv_switch.c ****         info->result = lv_switch_get_style(sw, info->part);
 271:lvgl/src/lv_widgets/lv_switch.c ****         if(info->result != NULL) return LV_RES_OK;
 272:lvgl/src/lv_widgets/lv_switch.c ****         else return ancestor_signal(sw, sign, param);
 273:lvgl/src/lv_widgets/lv_switch.c ****     }
 274:lvgl/src/lv_widgets/lv_switch.c **** 
 275:lvgl/src/lv_widgets/lv_switch.c ****     if(sign == LV_SIGNAL_GET_TYPE) {
 276:lvgl/src/lv_widgets/lv_switch.c ****         res = ancestor_signal(sw, sign, param);
 277:lvgl/src/lv_widgets/lv_switch.c ****         if(res != LV_RES_OK) return res;
 278:lvgl/src/lv_widgets/lv_switch.c ****         return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 279:lvgl/src/lv_widgets/lv_switch.c ****     }
 280:lvgl/src/lv_widgets/lv_switch.c **** 
 281:lvgl/src/lv_widgets/lv_switch.c ****     /* Include the ancient signal function */
 282:lvgl/src/lv_widgets/lv_switch.c ****     res = ancestor_signal(sw, sign, param);
 283:lvgl/src/lv_widgets/lv_switch.c ****     if(res != LV_RES_OK) return res;
 284:lvgl/src/lv_widgets/lv_switch.c **** 
 285:lvgl/src/lv_widgets/lv_switch.c ****     if(sign == LV_SIGNAL_CLEANUP) {
 286:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_clean_style_list(sw, LV_SWITCH_PART_KNOB);
 287:lvgl/src/lv_widgets/lv_switch.c ****     }
 288:lvgl/src/lv_widgets/lv_switch.c ****     else if(sign == LV_SIGNAL_RELEASED) {
 289:lvgl/src/lv_widgets/lv_switch.c ****         if(lv_switch_get_state(sw)) lv_switch_off(sw, LV_ANIM_ON);
 290:lvgl/src/lv_widgets/lv_switch.c ****         else lv_switch_on(sw, LV_ANIM_ON);
 291:lvgl/src/lv_widgets/lv_switch.c **** 
 292:lvgl/src/lv_widgets/lv_switch.c ****         res = lv_event_send(sw, LV_EVENT_VALUE_CHANGED, NULL);
 293:lvgl/src/lv_widgets/lv_switch.c ****         if(res != LV_RES_OK) return res;
 294:lvgl/src/lv_widgets/lv_switch.c **** 
 295:lvgl/src/lv_widgets/lv_switch.c ****     }
 296:lvgl/src/lv_widgets/lv_switch.c ****     else if(sign == LV_SIGNAL_CONTROL) {
 297:lvgl/src/lv_widgets/lv_switch.c **** #if LV_USE_GROUP
 298:lvgl/src/lv_widgets/lv_switch.c ****         char c = *((char *)param);
 299:lvgl/src/lv_widgets/lv_switch.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_UP) lv_switch_on(sw, LV_ANIM_ON);
 300:lvgl/src/lv_widgets/lv_switch.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_DOWN) lv_switch_off(sw, LV_ANIM_ON);
 301:lvgl/src/lv_widgets/lv_switch.c **** 
 302:lvgl/src/lv_widgets/lv_switch.c ****         res   = lv_event_send(sw, LV_EVENT_VALUE_CHANGED, NULL);
 303:lvgl/src/lv_widgets/lv_switch.c ****         if(res != LV_RES_OK) return res;
 304:lvgl/src/lv_widgets/lv_switch.c **** #endif
 305:lvgl/src/lv_widgets/lv_switch.c ****     }
 306:lvgl/src/lv_widgets/lv_switch.c ****     else if(sign == LV_SIGNAL_REFR_EXT_DRAW_PAD) {
 307:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_left = lv_obj_get_style_pad_left(sw,   LV_SWITCH_PART_KNOB);
 308:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_right = lv_obj_get_style_pad_right(sw,  LV_SWITCH_PART_KNOB);
 309:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_top = lv_obj_get_style_pad_top(sw,    LV_SWITCH_PART_KNOB);
 310:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_bottom = lv_obj_get_style_pad_bottom(sw, LV_SWITCH_PART_KNOB);
 311:lvgl/src/lv_widgets/lv_switch.c **** 
 312:lvgl/src/lv_widgets/lv_switch.c ****         /* The smaller size is the knob diameter*/
 313:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t knob_size = LV_MATH_MIN(lv_obj_get_width(sw), lv_obj_get_height(sw)) >> 1;
 314:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 315:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += 2;         /*For rounding error*/
ARM GAS  D:\Temp\ccHSkmsm.s 			page 7


 316:lvgl/src/lv_widgets/lv_switch.c **** 
 317:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += lv_obj_get_draw_rect_ext_pad_size(sw, LV_SWITCH_PART_KNOB);
 318:lvgl/src/lv_widgets/lv_switch.c **** 
 319:lvgl/src/lv_widgets/lv_switch.c ****         /*Indic. size is handled by bar*/
 320:lvgl/src/lv_widgets/lv_switch.c ****         sw->ext_draw_pad = LV_MATH_MAX(sw->ext_draw_pad, knob_size);
 321:lvgl/src/lv_widgets/lv_switch.c ****     }
 322:lvgl/src/lv_widgets/lv_switch.c ****     else if(sign == LV_SIGNAL_GET_EDITABLE) {
 323:lvgl/src/lv_widgets/lv_switch.c **** #if LV_USE_GROUP
 324:lvgl/src/lv_widgets/lv_switch.c ****         bool * editable = (bool *)param;
 325:lvgl/src/lv_widgets/lv_switch.c ****         *editable       = false; /*The ancestor slider is editable the switch is not*/
 326:lvgl/src/lv_widgets/lv_switch.c **** #endif
 327:lvgl/src/lv_widgets/lv_switch.c ****     }
 328:lvgl/src/lv_widgets/lv_switch.c **** 
 329:lvgl/src/lv_widgets/lv_switch.c ****     return res;
 330:lvgl/src/lv_widgets/lv_switch.c **** }
 331:lvgl/src/lv_widgets/lv_switch.c **** 
 332:lvgl/src/lv_widgets/lv_switch.c **** static lv_style_list_t * lv_switch_get_style(lv_obj_t * sw, uint8_t part)
 333:lvgl/src/lv_widgets/lv_switch.c **** {
  29              		.loc 1 333 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 333 1 is_stmt 0 view .LVU1
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 0446     		mov	r4, r0
  42 0004 0D46     		mov	r5, r1
 334:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_OBJ(sw, LV_OBJX_NAME);
  43              		.loc 1 334 5 is_stmt 1 view .LVU2
  44              		.loc 1 334 5 view .LVU3
  45 0006 FFF7FEFF 		bl	lv_debug_check_null
  46              	.LVL1:
  47              		.loc 1 334 5 is_stmt 0 view .LVU4
  48 000a 28B9     		cbnz	r0, .L2
  49              		.loc 1 334 5 is_stmt 1 discriminator 1 view .LVU5
  50              		.loc 1 334 5 discriminator 1 view .LVU6
  51 000c 2246     		mov	r2, r4
  52 000e 0023     		movs	r3, #0
  53 0010 0A48     		ldr	r0, .L9
  54 0012 FFF7FEFF 		bl	lv_debug_log_error
  55              	.LVL2:
  56              	.L3:
  57              		.loc 1 334 5 discriminator 1 view .LVU7
  58              		.loc 1 334 5 discriminator 1 view .LVU8
  59 0016 FEE7     		b	.L3
  60              	.L2:
  61              		.loc 1 334 36 discriminator 2 view .LVU9
 335:lvgl/src/lv_widgets/lv_switch.c **** 
 336:lvgl/src/lv_widgets/lv_switch.c ****     lv_switch_ext_t * ext = lv_obj_get_ext_attr(sw);
  62              		.loc 1 336 5 discriminator 2 view .LVU10
  63              		.loc 1 336 29 is_stmt 0 discriminator 2 view .LVU11
  64 0018 2046     		mov	r0, r4
ARM GAS  D:\Temp\ccHSkmsm.s 			page 8


  65 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
  66              	.LVL3:
 337:lvgl/src/lv_widgets/lv_switch.c ****     lv_style_list_t * style_dsc_p;
  67              		.loc 1 337 5 is_stmt 1 discriminator 2 view .LVU12
 338:lvgl/src/lv_widgets/lv_switch.c **** 
 339:lvgl/src/lv_widgets/lv_switch.c ****     switch(part) {
  68              		.loc 1 339 5 discriminator 2 view .LVU13
  69 001e 012D     		cmp	r5, #1
  70 0020 08D0     		beq	.L4
  71              		.loc 1 339 5 is_stmt 0 view .LVU14
  72 0022 6BB2     		sxtb	r3, r5
  73 0024 1BB1     		cbz	r3, .L5
  74 0026 022D     		cmp	r5, #2
  75 0028 06D0     		beq	.L6
 340:lvgl/src/lv_widgets/lv_switch.c ****         case LV_SWITCH_PART_BG:
 341:lvgl/src/lv_widgets/lv_switch.c ****             style_dsc_p = &sw->style_list;
 342:lvgl/src/lv_widgets/lv_switch.c ****             break;
 343:lvgl/src/lv_widgets/lv_switch.c ****         case LV_SWITCH_PART_INDIC:
 344:lvgl/src/lv_widgets/lv_switch.c ****             style_dsc_p = &ext->bar.style_indic;
 345:lvgl/src/lv_widgets/lv_switch.c ****             break;
 346:lvgl/src/lv_widgets/lv_switch.c ****         case LV_SWITCH_PART_KNOB:
 347:lvgl/src/lv_widgets/lv_switch.c ****             style_dsc_p = &ext->style_knob;
 348:lvgl/src/lv_widgets/lv_switch.c ****             break;
 349:lvgl/src/lv_widgets/lv_switch.c ****         default:
 350:lvgl/src/lv_widgets/lv_switch.c ****             style_dsc_p = NULL;
  76              		.loc 1 350 25 view .LVU15
  77 002a 0020     		movs	r0, #0
  78              	.LVL4:
  79              	.L1:
 351:lvgl/src/lv_widgets/lv_switch.c ****     }
 352:lvgl/src/lv_widgets/lv_switch.c **** 
 353:lvgl/src/lv_widgets/lv_switch.c ****     return style_dsc_p;
 354:lvgl/src/lv_widgets/lv_switch.c **** }
  80              		.loc 1 354 1 view .LVU16
  81 002c 38BD     		pop	{r3, r4, r5, pc}
  82              	.LVL5:
  83              	.L5:
 341:lvgl/src/lv_widgets/lv_switch.c ****             break;
  84              		.loc 1 341 13 is_stmt 1 view .LVU17
 341:lvgl/src/lv_widgets/lv_switch.c ****             break;
  85              		.loc 1 341 25 is_stmt 0 view .LVU18
  86 002e 04F12800 		add	r0, r4, #40
  87              	.LVL6:
 342:lvgl/src/lv_widgets/lv_switch.c ****         case LV_SWITCH_PART_INDIC:
  88              		.loc 1 342 13 is_stmt 1 view .LVU19
  89 0032 FBE7     		b	.L1
  90              	.LVL7:
  91              	.L4:
 344:lvgl/src/lv_widgets/lv_switch.c ****             break;
  92              		.loc 1 344 13 view .LVU20
 344:lvgl/src/lv_widgets/lv_switch.c ****             break;
  93              		.loc 1 344 25 is_stmt 0 view .LVU21
  94 0034 3030     		adds	r0, r0, #48
  95              	.LVL8:
 345:lvgl/src/lv_widgets/lv_switch.c ****         case LV_SWITCH_PART_KNOB:
  96              		.loc 1 345 13 is_stmt 1 view .LVU22
  97 0036 F9E7     		b	.L1
ARM GAS  D:\Temp\ccHSkmsm.s 			page 9


  98              	.LVL9:
  99              	.L6:
 347:lvgl/src/lv_widgets/lv_switch.c ****             break;
 100              		.loc 1 347 13 view .LVU23
 347:lvgl/src/lv_widgets/lv_switch.c ****             break;
 101              		.loc 1 347 25 is_stmt 0 view .LVU24
 102 0038 3830     		adds	r0, r0, #56
 103              	.LVL10:
 348:lvgl/src/lv_widgets/lv_switch.c ****         default:
 104              		.loc 1 348 13 is_stmt 1 view .LVU25
 353:lvgl/src/lv_widgets/lv_switch.c **** }
 105              		.loc 1 353 5 view .LVU26
 353:lvgl/src/lv_widgets/lv_switch.c **** }
 106              		.loc 1 353 12 is_stmt 0 view .LVU27
 107 003a F7E7     		b	.L1
 108              	.L10:
 109              		.align	2
 110              	.L9:
 111 003c 00000000 		.word	.LC0
 112              		.cfi_endproc
 113              	.LFE483:
 115              		.section	.text.lv_switch_design,"ax",%progbits
 116              		.align	1
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv4-sp-d16
 122              	lv_switch_design:
 123              	.LVL11:
 124              	.LFB481:
 194:lvgl/src/lv_widgets/lv_switch.c ****     /*Return false if the object is not covers the mask_p area*/
 125              		.loc 1 194 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 96
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 196:lvgl/src/lv_widgets/lv_switch.c ****         return LV_DESIGN_RES_NOT_COVER;
 129              		.loc 1 196 5 view .LVU29
 196:lvgl/src/lv_widgets/lv_switch.c ****         return LV_DESIGN_RES_NOT_COVER;
 130              		.loc 1 196 7 is_stmt 0 view .LVU30
 131 0000 022A     		cmp	r2, #2
 132 0002 00F09E80 		beq	.L16
 194:lvgl/src/lv_widgets/lv_switch.c ****     /*Return false if the object is not covers the mask_p area*/
 133              		.loc 1 194 1 view .LVU31
 134 0006 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 135              	.LCFI1:
 136              		.cfi_def_cfa_offset 32
 137              		.cfi_offset 4, -32
 138              		.cfi_offset 5, -28
 139              		.cfi_offset 6, -24
 140              		.cfi_offset 7, -20
 141              		.cfi_offset 8, -16
 142              		.cfi_offset 9, -12
 143              		.cfi_offset 10, -8
 144              		.cfi_offset 14, -4
 145 000a 98B0     		sub	sp, sp, #96
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 128
ARM GAS  D:\Temp\ccHSkmsm.s 			page 10


 148 000c 1646     		mov	r6, r2
 149 000e 0D46     		mov	r5, r1
 150 0010 0446     		mov	r4, r0
 200:lvgl/src/lv_widgets/lv_switch.c ****         lv_bidi_dir_t base_dir = lv_obj_get_base_dir(sw);
 151              		.loc 1 200 10 is_stmt 1 view .LVU32
 200:lvgl/src/lv_widgets/lv_switch.c ****         lv_bidi_dir_t base_dir = lv_obj_get_base_dir(sw);
 152              		.loc 1 200 12 is_stmt 0 view .LVU33
 153 0012 32B1     		cbz	r2, .L22
 250:lvgl/src/lv_widgets/lv_switch.c ****         return ancestor_design(sw, clip_area, mode);
 154              		.loc 1 250 10 is_stmt 1 view .LVU34
 250:lvgl/src/lv_widgets/lv_switch.c ****         return ancestor_design(sw, clip_area, mode);
 155              		.loc 1 250 12 is_stmt 0 view .LVU35
 156 0014 012A     		cmp	r2, #1
 157 0016 00F09080 		beq	.L23
 254:lvgl/src/lv_widgets/lv_switch.c **** }
 158              		.loc 1 254 12 view .LVU36
 159 001a 0020     		movs	r0, #0
 160              	.LVL12:
 161              	.L12:
 255:lvgl/src/lv_widgets/lv_switch.c **** 
 162              		.loc 1 255 1 view .LVU37
 163 001c 18B0     		add	sp, sp, #96
 164              	.LCFI3:
 165              		.cfi_remember_state
 166              		.cfi_def_cfa_offset 32
 167              		@ sp needed
 168 001e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 169              	.LVL13:
 170              	.L22:
 171              	.LCFI4:
 172              		.cfi_restore_state
 173              	.LBB33:
 201:lvgl/src/lv_widgets/lv_switch.c **** 
 174              		.loc 1 201 9 is_stmt 1 view .LVU38
 201:lvgl/src/lv_widgets/lv_switch.c **** 
 175              		.loc 1 201 34 is_stmt 0 view .LVU39
 176 0022 FFF7FEFF 		bl	lv_obj_get_base_dir
 177              	.LVL14:
 201:lvgl/src/lv_widgets/lv_switch.c **** 
 178              		.loc 1 201 34 view .LVU40
 179 0026 0746     		mov	r7, r0
 180              	.LVL15:
 205:lvgl/src/lv_widgets/lv_switch.c **** 
 181              		.loc 1 205 9 is_stmt 1 view .LVU41
 182 0028 474B     		ldr	r3, .L24
 183 002a 1B68     		ldr	r3, [r3]
 184 002c 3246     		mov	r2, r6
 185 002e 2946     		mov	r1, r5
 186 0030 2046     		mov	r0, r4
 187 0032 9847     		blx	r3
 188              	.LVL16:
 207:lvgl/src/lv_widgets/lv_switch.c **** 
 189              		.loc 1 207 9 view .LVU42
 207:lvgl/src/lv_widgets/lv_switch.c **** 
 190              		.loc 1 207 33 is_stmt 0 view .LVU43
 191 0034 2046     		mov	r0, r4
 192 0036 FFF7FEFF 		bl	lv_obj_get_ext_attr
ARM GAS  D:\Temp\ccHSkmsm.s 			page 11


 193              	.LVL17:
 194 003a 8146     		mov	r9, r0
 195              	.LVL18:
 209:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t objh = lv_obj_get_height(sw);
 196              		.loc 1 209 9 is_stmt 1 view .LVU44
 209:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t objh = lv_obj_get_height(sw);
 197              		.loc 1 209 27 is_stmt 0 view .LVU45
 198 003c 2046     		mov	r0, r4
 199              	.LVL19:
 209:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t objh = lv_obj_get_height(sw);
 200              		.loc 1 209 27 view .LVU46
 201 003e FFF7FEFF 		bl	lv_obj_get_width
 202              	.LVL20:
 203 0042 8046     		mov	r8, r0
 204              	.LVL21:
 210:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t knob_size = objh;
 205              		.loc 1 210 9 is_stmt 1 view .LVU47
 210:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t knob_size = objh;
 206              		.loc 1 210 27 is_stmt 0 view .LVU48
 207 0044 2046     		mov	r0, r4
 208 0046 FFF7FEFF 		bl	lv_obj_get_height
 209              	.LVL22:
 210 004a 0646     		mov	r6, r0
 211              	.LVL23:
 211:lvgl/src/lv_widgets/lv_switch.c ****         lv_area_t knob_area;
 212              		.loc 1 211 9 is_stmt 1 view .LVU49
 212:lvgl/src/lv_widgets/lv_switch.c **** 
 213              		.loc 1 212 9 view .LVU50
 214:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t bg_right = lv_obj_get_style_pad_right(sw,  LV_SWITCH_PART_BG);
 214              		.loc 1 214 9 view .LVU51
 215              	.LBB34:
 216              	.LBI34:
 217              		.file 2 "lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h"
   1:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   2:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
   3:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * @file lv_obj_style_dec.h
   4:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
   5:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
   6:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   7:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifndef LV_OBJ_STYLE_DEC_H
   8:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define LV_OBJ_STYLE_DEC_H
   9:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  10:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifdef __cplusplus
  11:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** extern "C" {
  12:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #endif
  13:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  14:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /*********************
  15:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      DEFINES
  16:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *********************/
  17:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  18:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
  19:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Macro to declare the most important style set/get API functions.
  20:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  21:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value of a style property from an object in the object's current state
  22:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -----------------------------------------------------------------------------
  23:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Get the value of a style property from an object in the object's current state.
  24:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Transition animation is taken into account.
ARM GAS  D:\Temp\ccHSkmsm.s 			page 12


  25:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not set in the object's styles check the parent(s) if the property can be 
  26:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If still not found return a default value.
  27:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  28:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t w = lv_obj_get_style_border_width(btn1, LV_BTN_PART_MAIN);`
  29:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  30:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a local style property for an object in a given state
  31:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------------------------
  32:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  33:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_set_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, 2);`
  34:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  35:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get a local style property's value of an object in a given state
  36:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ----------------------------------------------------------------
  37:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Return the best matching property in the given state.
  38:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - E.g. if `state` parameter is LV_STATE_PRESSED | LV_STATE_CHECKED` but the property defined on
  39:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    `LV_STATE_PRESSED` and `LV_STATE_DEFAULT` the best matching state is `LV_STATE_PRESSED`
  40:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    (because it has higher precedence) and it will be returned.
  41:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not found even in `LV_STATE_DEFAULT` `-1` is returned.
  42:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  43:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `//Type of result should be lv_style_int_t/lv_opa_t/lv_color_t/const void * according to th
  44:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t result;`
  45:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_get_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, &result);`
  46:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  47:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  48:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value from a style in a given state
  49:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -------------------------------------------
  50:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - The same rules applies to the return value then for "lv_obj_get_style_local_...()" above
  51:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  52:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `int16_t weight = lv_style_get_border_width(&style1, LV_STATE_PRESSED, &result);`
  53:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  54:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  55:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a value in a style in a given state
  56:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------
  57:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  58:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_set_border_width(&style1, LV_STATE_PRESSED, 2);`
  59:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
  60:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  61:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  62:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  63:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  64:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return (value_type) _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);       
  65:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  66:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  67:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  68:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  69:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  70:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);                    
  71:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  72:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  73:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_scalar(prop_name, func_name, value_type, style_type)                  
  74:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  75:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  76:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  77:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  78:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  79:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_nonscalar(prop_name, func_name, value_type, style_type)               
  80:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  81:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
ARM GAS  D:\Temp\ccHSkmsm.s 			page 13


  82:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  83:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  84:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  85:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  86:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  87:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  88:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  89:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  90:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  91:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  92:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  93:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  94:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  95:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  96:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  97:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _LV_OBJ_STYLE_SET_GET_DECLARE(prop_name, func_name, value_type, style_type, scalar)        
  98:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_GET_STYLE_##scalar(prop_name, func_name, value_type, style_type)                          
  99:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_LOCAL_##scalar(prop_name, func_name, value_type, style_type)                    
 100:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_##scalar(prop_name, func_name, value_type, style_type)
 101:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
 102:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(RADIUS, radius, lv_style_int_t, _int, scalar)
 103:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 104:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 105:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_WIDTH, transform_width, lv_style_int_t, _int, scalar)
 106:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_HEIGHT, transform_height, lv_style_int_t, _int, scalar)
 107:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ANGLE, transform_angle, lv_style_int_t, _int, scalar)
 108:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ZOOM, transform_zoom, lv_style_int_t, _int, scalar)
 109:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OPA_SCALE, opa_scale, lv_opa_t, _opa, scalar)
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_TOP, pad_top, lv_style_int_t, _int, scalar)
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 218              		.loc 2 112 1 view .LVU52
 219              	.LBB35:
 220              		.loc 2 112 1 view .LVU53
 221 004c 1222     		movs	r2, #18
 222 004e 0021     		movs	r1, #0
 223 0050 2046     		mov	r0, r4
 224 0052 FFF7FEFF 		bl	_lv_obj_get_style_int
 225              	.LVL24:
 226 0056 8246     		mov	r10, r0
 227              	.LVL25:
 228              		.loc 2 112 1 is_stmt 0 view .LVU54
 229              	.LBE35:
 230              	.LBE34:
 215:lvgl/src/lv_widgets/lv_switch.c **** 
 231              		.loc 1 215 9 is_stmt 1 view .LVU55
 232              	.LBB36:
 233              	.LBI36:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 234              		.loc 2 113 1 view .LVU56
 235              	.LBB37:
 236              		.loc 2 113 1 view .LVU57
 237 0058 1322     		movs	r2, #19
 238 005a 0021     		movs	r1, #0
 239 005c 2046     		mov	r0, r4
 240 005e FFF7FEFF 		bl	_lv_obj_get_style_int
 241              	.LVL26:
ARM GAS  D:\Temp\ccHSkmsm.s 			page 14


 242              		.loc 2 113 1 is_stmt 0 view .LVU58
 243              	.LBE37:
 244              	.LBE36:
 217:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t act_indic_w = lv_area_get_width(&ext->bar.indic_area);
 245              		.loc 1 217 9 is_stmt 1 view .LVU59
 217:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t act_indic_w = lv_area_get_width(&ext->bar.indic_area);
 246              		.loc 1 217 39 is_stmt 0 view .LVU60
 247 0062 A8EB0A08 		sub	r8, r8, r10
 248              	.LVL27:
 217:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t act_indic_w = lv_area_get_width(&ext->bar.indic_area);
 249              		.loc 1 217 39 view .LVU61
 250 0066 1FFA88F8 		uxth	r8, r8
 217:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t act_indic_w = lv_area_get_width(&ext->bar.indic_area);
 251              		.loc 1 217 49 view .LVU62
 252 006a A8EB0008 		sub	r8, r8, r0
 217:lvgl/src/lv_widgets/lv_switch.c ****         lv_coord_t act_indic_w = lv_area_get_width(&ext->bar.indic_area);
 253              		.loc 1 217 20 view .LVU63
 254 006e 0FFA88F8 		sxth	r8, r8
 255              	.LVL28:
 218:lvgl/src/lv_widgets/lv_switch.c ****         if(base_dir != LV_BIDI_DIR_RTL) {
 256              		.loc 1 218 9 is_stmt 1 view .LVU64
 257              	.LBB38:
 258              	.LBI38:
 259              		.file 3 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_area.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @file lv_area.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_AREA_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <string.h>
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdbool.h>
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdint.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "lv_mem.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      DEFINES
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*To avoid overflow don't let the max ranges (reduce with 1000) */
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - 1000))
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      TYPEDEFS
ARM GAS  D:\Temp\ccHSkmsm.s 			page 15


  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Represents a point on the screen.
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x;
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y;
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_point_t;
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Represents an area of the screen. */
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x1;
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y1;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x2;
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y2;
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_area_t;
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Alignments */
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** enum {
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_CENTER = 0,
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_LEFT,
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_MID,
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_RIGHT,
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_LEFT,
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_MID,
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_RIGHT,
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_LEFT_MID,
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_RIGHT_MID,
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** };
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef uint8_t lv_align_t;
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * GLOBAL PROTOTYPES
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Initialize an area
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x1 left coordinate of the area
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y1 top coordinate of the area
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x2 right coordinate of the area
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y2 bottom coordinate of the area
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
ARM GAS  D:\Temp\ccHSkmsm.s 			page 16


  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Copy an area
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param dest pointer to the destination area
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param src pointer to the source area
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     _lv_memcpy_small(dest, src, sizeof(lv_area_t));
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** }
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Get the width of an area
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 260              		.loc 3 107 26 view .LVU65
 261              	.LBB39:
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 262              		.loc 3 109 5 view .LVU66
 263              		.loc 3 109 31 is_stmt 0 view .LVU67
 264 0072 B9F80C20 		ldrh	r2, [r9, #12]
 265              		.loc 3 109 44 view .LVU68
 266 0076 B9F80810 		ldrh	r1, [r9, #8]
 267              		.loc 3 109 36 view .LVU69
 268 007a 531A     		subs	r3, r2, r1
 269 007c 9BB2     		uxth	r3, r3
 270              		.loc 3 109 49 view .LVU70
 271 007e 0133     		adds	r3, r3, #1
 272              		.loc 3 109 12 view .LVU71
 273 0080 1BB2     		sxth	r3, r3
 274              	.LVL29:
 275              		.loc 3 109 12 view .LVU72
 276              	.LBE39:
 277              	.LBE38:
 219:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x1 = ext->bar.indic_area.x2 - ((act_indic_w * knob_size) / max_indic_w);
 278              		.loc 1 219 9 is_stmt 1 view .LVU73
 219:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x1 = ext->bar.indic_area.x2 - ((act_indic_w * knob_size) / max_indic_w);
 279              		.loc 1 219 11 is_stmt 0 view .LVU74
 280 0082 012F     		cmp	r7, #1
 281 0084 4DD0     		beq	.L14
 220:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x2 = knob_area.x1 + knob_size;
 282              		.loc 1 220 13 is_stmt 1 view .LVU75
 220:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x2 = knob_area.x1 + knob_size;
 283              		.loc 1 220 67 is_stmt 0 view .LVU76
 284 0086 06FB03F3 		mul	r3, r6, r3
 285              	.LVL30:
 220:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x2 = knob_area.x1 + knob_size;
 286              		.loc 1 220 80 view .LVU77
 287 008a 93FBF8F3 		sdiv	r3, r3, r8
 220:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x2 = knob_area.x1 + knob_size;
 288              		.loc 1 220 51 view .LVU78
 289 008e D31A     		subs	r3, r2, r3
 290 0090 9BB2     		uxth	r3, r3
 220:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x2 = knob_area.x1 + knob_size;
ARM GAS  D:\Temp\ccHSkmsm.s 			page 17


 291              		.loc 1 220 26 view .LVU79
 292 0092 ADF80430 		strh	r3, [sp, #4]	@ movhi
 221:lvgl/src/lv_widgets/lv_switch.c ****         }
 293              		.loc 1 221 13 is_stmt 1 view .LVU80
 221:lvgl/src/lv_widgets/lv_switch.c ****         }
 294              		.loc 1 221 41 is_stmt 0 view .LVU81
 295 0096 3344     		add	r3, r3, r6
 221:lvgl/src/lv_widgets/lv_switch.c ****         }
 296              		.loc 1 221 26 view .LVU82
 297 0098 ADF80830 		strh	r3, [sp, #8]	@ movhi
 298              	.L15:
 228:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y2 = sw->coords.y2;
 299              		.loc 1 228 9 is_stmt 1 view .LVU83
 228:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y2 = sw->coords.y2;
 300              		.loc 1 228 34 is_stmt 0 view .LVU84
 301 009c B4F91230 		ldrsh	r3, [r4, #18]
 228:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y2 = sw->coords.y2;
 302              		.loc 1 228 22 view .LVU85
 303 00a0 ADF80630 		strh	r3, [sp, #6]	@ movhi
 229:lvgl/src/lv_widgets/lv_switch.c **** 
 304              		.loc 1 229 9 is_stmt 1 view .LVU86
 229:lvgl/src/lv_widgets/lv_switch.c **** 
 305              		.loc 1 229 34 is_stmt 0 view .LVU87
 306 00a4 B4F91630 		ldrsh	r3, [r4, #22]
 229:lvgl/src/lv_widgets/lv_switch.c **** 
 307              		.loc 1 229 22 view .LVU88
 308 00a8 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 231:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_right = lv_obj_get_style_pad_right(sw,  LV_SWITCH_PART_KNOB);
 309              		.loc 1 231 9 is_stmt 1 view .LVU89
 310              	.LVL31:
 311              	.LBB40:
 312              	.LBI40:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 313              		.loc 2 112 1 view .LVU90
 314              	.LBB41:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 315              		.loc 2 112 1 view .LVU91
 316 00ac 1222     		movs	r2, #18
 317              	.LVL32:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 318              		.loc 2 112 1 is_stmt 0 view .LVU92
 319 00ae 0221     		movs	r1, #2
 320              	.LVL33:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 321              		.loc 2 112 1 view .LVU93
 322 00b0 2046     		mov	r0, r4
 323              	.LVL34:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 324              		.loc 2 112 1 view .LVU94
 325 00b2 FFF7FEFF 		bl	_lv_obj_get_style_int
 326              	.LVL35:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 327              		.loc 2 112 1 view .LVU95
 328 00b6 8046     		mov	r8, r0
 329              	.LVL36:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 330              		.loc 2 112 1 view .LVU96
ARM GAS  D:\Temp\ccHSkmsm.s 			page 18


 331              	.LBE41:
 332              	.LBE40:
 232:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_top = lv_obj_get_style_pad_top(sw,    LV_SWITCH_PART_KNOB);
 333              		.loc 1 232 9 is_stmt 1 view .LVU97
 334              	.LBB42:
 335              	.LBI42:
 336              		.loc 2 113 1 view .LVU98
 337              	.LBB43:
 338              		.loc 2 113 1 view .LVU99
 339 00b8 1322     		movs	r2, #19
 340 00ba 0221     		movs	r1, #2
 341 00bc 2046     		mov	r0, r4
 342 00be FFF7FEFF 		bl	_lv_obj_get_style_int
 343              	.LVL37:
 344 00c2 0646     		mov	r6, r0
 345              	.LVL38:
 346              		.loc 2 113 1 is_stmt 0 view .LVU100
 347              	.LBE43:
 348              	.LBE42:
 233:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_bottom = lv_obj_get_style_pad_bottom(sw, LV_SWITCH_PART_KNOB);
 349              		.loc 1 233 9 is_stmt 1 view .LVU101
 350              	.LBB44:
 351              	.LBI44:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 352              		.loc 2 110 1 view .LVU102
 353              	.LBB45:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 354              		.loc 2 110 1 view .LVU103
 355 00c4 1022     		movs	r2, #16
 356 00c6 0221     		movs	r1, #2
 357 00c8 2046     		mov	r0, r4
 358 00ca FFF7FEFF 		bl	_lv_obj_get_style_int
 359              	.LVL39:
 360 00ce 0746     		mov	r7, r0
 361              	.LVL40:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 362              		.loc 2 110 1 is_stmt 0 view .LVU104
 363              	.LBE45:
 364              	.LBE44:
 234:lvgl/src/lv_widgets/lv_switch.c **** 
 365              		.loc 1 234 9 is_stmt 1 view .LVU105
 366              	.LBB46:
 367              	.LBI46:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 368              		.loc 2 111 1 view .LVU106
 369              	.LBB47:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 370              		.loc 2 111 1 view .LVU107
 371 00d0 1122     		movs	r2, #17
 372 00d2 0221     		movs	r1, #2
 373 00d4 2046     		mov	r0, r4
 374 00d6 FFF7FEFF 		bl	_lv_obj_get_style_int
 375              	.LVL41:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 376              		.loc 2 111 1 is_stmt 0 view .LVU108
 377              	.LBE47:
 378              	.LBE46:
ARM GAS  D:\Temp\ccHSkmsm.s 			page 19


 237:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.x2 += knob_right;
 379              		.loc 1 237 9 is_stmt 1 view .LVU109
 237:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.x2 += knob_right;
 380              		.loc 1 237 22 is_stmt 0 view .LVU110
 381 00da BDF80430 		ldrh	r3, [sp, #4]
 382 00de A3EB0803 		sub	r3, r3, r8
 383 00e2 ADF80430 		strh	r3, [sp, #4]	@ movhi
 238:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y1 -= knob_top;
 384              		.loc 1 238 9 is_stmt 1 view .LVU111
 238:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y1 -= knob_top;
 385              		.loc 1 238 22 is_stmt 0 view .LVU112
 386 00e6 BDF80830 		ldrh	r3, [sp, #8]
 387 00ea 1E44     		add	r6, r6, r3
 388              	.LVL42:
 238:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y1 -= knob_top;
 389              		.loc 1 238 22 view .LVU113
 390 00ec ADF80860 		strh	r6, [sp, #8]	@ movhi
 239:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y2 += knob_bottom;
 391              		.loc 1 239 9 is_stmt 1 view .LVU114
 239:lvgl/src/lv_widgets/lv_switch.c ****         knob_area.y2 += knob_bottom;
 392              		.loc 1 239 22 is_stmt 0 view .LVU115
 393 00f0 BDF80630 		ldrh	r3, [sp, #6]
 394 00f4 DB1B     		subs	r3, r3, r7
 395 00f6 ADF80630 		strh	r3, [sp, #6]	@ movhi
 240:lvgl/src/lv_widgets/lv_switch.c **** 
 396              		.loc 1 240 9 is_stmt 1 view .LVU116
 240:lvgl/src/lv_widgets/lv_switch.c **** 
 397              		.loc 1 240 22 is_stmt 0 view .LVU117
 398 00fa BDF80A30 		ldrh	r3, [sp, #10]
 399 00fe 1844     		add	r0, r0, r3
 400              	.LVL43:
 240:lvgl/src/lv_widgets/lv_switch.c **** 
 401              		.loc 1 240 22 view .LVU118
 402 0100 ADF80A00 		strh	r0, [sp, #10]	@ movhi
 242:lvgl/src/lv_widgets/lv_switch.c ****         lv_draw_rect_dsc_init(&knob_rect_dsc);
 403              		.loc 1 242 9 is_stmt 1 view .LVU119
 243:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_init_draw_rect_dsc(sw, LV_SWITCH_PART_KNOB, &knob_rect_dsc);
 404              		.loc 1 243 9 view .LVU120
 405 0104 03A8     		add	r0, sp, #12
 406 0106 FFF7FEFF 		bl	lv_draw_rect_dsc_init
 407              	.LVL44:
 244:lvgl/src/lv_widgets/lv_switch.c **** 
 408              		.loc 1 244 9 view .LVU121
 409 010a 03AA     		add	r2, sp, #12
 410 010c 0221     		movs	r1, #2
 411 010e 2046     		mov	r0, r4
 412 0110 FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 413              	.LVL45:
 246:lvgl/src/lv_widgets/lv_switch.c **** 
 414              		.loc 1 246 9 view .LVU122
 415 0114 03AA     		add	r2, sp, #12
 416 0116 2946     		mov	r1, r5
 417 0118 01A8     		add	r0, sp, #4
 418 011a FFF7FEFF 		bl	lv_draw_rect
 419              	.LVL46:
 420              	.LBE33:
 254:lvgl/src/lv_widgets/lv_switch.c **** }
ARM GAS  D:\Temp\ccHSkmsm.s 			page 20


 421              		.loc 1 254 12 is_stmt 0 view .LVU123
 422 011e 0020     		movs	r0, #0
 423 0120 7CE7     		b	.L12
 424              	.LVL47:
 425              	.L14:
 426              	.LBB48:
 224:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x1 = knob_area.x2 - knob_size;
 427              		.loc 1 224 13 is_stmt 1 view .LVU124
 224:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x1 = knob_area.x2 - knob_size;
 428              		.loc 1 224 67 is_stmt 0 view .LVU125
 429 0122 06FB03F3 		mul	r3, r6, r3
 430              	.LVL48:
 224:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x1 = knob_area.x2 - knob_size;
 431              		.loc 1 224 80 view .LVU126
 432 0126 93FBF8F3 		sdiv	r3, r3, r8
 224:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x1 = knob_area.x2 - knob_size;
 433              		.loc 1 224 51 view .LVU127
 434 012a 0B44     		add	r3, r3, r1
 435 012c 9BB2     		uxth	r3, r3
 224:lvgl/src/lv_widgets/lv_switch.c ****             knob_area.x1 = knob_area.x2 - knob_size;
 436              		.loc 1 224 26 view .LVU128
 437 012e ADF80830 		strh	r3, [sp, #8]	@ movhi
 225:lvgl/src/lv_widgets/lv_switch.c ****         }
 438              		.loc 1 225 13 is_stmt 1 view .LVU129
 225:lvgl/src/lv_widgets/lv_switch.c ****         }
 439              		.loc 1 225 41 is_stmt 0 view .LVU130
 440 0132 9B1B     		subs	r3, r3, r6
 225:lvgl/src/lv_widgets/lv_switch.c ****         }
 441              		.loc 1 225 26 view .LVU131
 442 0134 ADF80430 		strh	r3, [sp, #4]	@ movhi
 443 0138 B0E7     		b	.L15
 444              	.LVL49:
 445              	.L23:
 225:lvgl/src/lv_widgets/lv_switch.c ****         }
 446              		.loc 1 225 26 view .LVU132
 447              	.LBE48:
 251:lvgl/src/lv_widgets/lv_switch.c ****     }
 448              		.loc 1 251 9 is_stmt 1 view .LVU133
 251:lvgl/src/lv_widgets/lv_switch.c ****     }
 449              		.loc 1 251 16 is_stmt 0 view .LVU134
 450 013a 034B     		ldr	r3, .L24
 451 013c 1B68     		ldr	r3, [r3]
 452 013e 9847     		blx	r3
 453              	.LVL50:
 251:lvgl/src/lv_widgets/lv_switch.c ****     }
 454              		.loc 1 251 16 view .LVU135
 455 0140 6CE7     		b	.L12
 456              	.LVL51:
 457              	.L16:
 458              	.LCFI5:
 459              		.cfi_def_cfa_offset 0
 460              		.cfi_restore 4
 461              		.cfi_restore 5
 462              		.cfi_restore 6
 463              		.cfi_restore 7
 464              		.cfi_restore 8
 465              		.cfi_restore 9
ARM GAS  D:\Temp\ccHSkmsm.s 			page 21


 466              		.cfi_restore 10
 467              		.cfi_restore 14
 197:lvgl/src/lv_widgets/lv_switch.c ****     }
 468              		.loc 1 197 16 view .LVU136
 469 0142 0220     		movs	r0, #2
 470              	.LVL52:
 255:lvgl/src/lv_widgets/lv_switch.c **** 
 471              		.loc 1 255 1 view .LVU137
 472 0144 7047     		bx	lr
 473              	.L25:
 474 0146 00BF     		.align	2
 475              	.L24:
 476 0148 00000000 		.word	.LANCHOR0
 477              		.cfi_endproc
 478              	.LFE481:
 480              		.section	.text.lv_switch_create,"ax",%progbits
 481              		.align	1
 482              		.global	lv_switch_create
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 486              		.fpu fpv4-sp-d16
 488              	lv_switch_create:
 489              	.LVL53:
 490              	.LFB477:
  62:lvgl/src/lv_widgets/lv_switch.c ****     LV_LOG_TRACE("switch create started");
 491              		.loc 1 62 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
  62:lvgl/src/lv_widgets/lv_switch.c ****     LV_LOG_TRACE("switch create started");
 495              		.loc 1 62 1 is_stmt 0 view .LVU139
 496 0000 70B5     		push	{r4, r5, r6, lr}
 497              	.LCFI6:
 498              		.cfi_def_cfa_offset 16
 499              		.cfi_offset 4, -16
 500              		.cfi_offset 5, -12
 501              		.cfi_offset 6, -8
 502              		.cfi_offset 14, -4
 503 0002 0E46     		mov	r6, r1
  63:lvgl/src/lv_widgets/lv_switch.c **** 
 504              		.loc 1 63 42 is_stmt 1 view .LVU140
  66:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_MEM(sw);
 505              		.loc 1 66 5 view .LVU141
  66:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_MEM(sw);
 506              		.loc 1 66 21 is_stmt 0 view .LVU142
 507 0004 FFF7FEFF 		bl	lv_bar_create
 508              	.LVL54:
  66:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_MEM(sw);
 509              		.loc 1 66 21 view .LVU143
 510 0008 0446     		mov	r4, r0
 511              	.LVL55:
  67:lvgl/src/lv_widgets/lv_switch.c **** 
 512              		.loc 1 67 5 is_stmt 1 view .LVU144
  67:lvgl/src/lv_widgets/lv_switch.c **** 
 513              		.loc 1 67 5 view .LVU145
 514 000a FFF7FEFF 		bl	lv_debug_check_null
ARM GAS  D:\Temp\ccHSkmsm.s 			page 22


 515              	.LVL56:
  67:lvgl/src/lv_widgets/lv_switch.c **** 
 516              		.loc 1 67 5 is_stmt 0 view .LVU146
 517 000e 58B3     		cbz	r0, .L41
  67:lvgl/src/lv_widgets/lv_switch.c **** 
 518              		.loc 1 67 22 is_stmt 1 discriminator 2 view .LVU147
  69:lvgl/src/lv_widgets/lv_switch.c **** 
 519              		.loc 1 69 5 discriminator 2 view .LVU148
  69:lvgl/src/lv_widgets/lv_switch.c **** 
 520              		.loc 1 69 7 is_stmt 0 discriminator 2 view .LVU149
 521 0010 44B3     		cbz	r4, .L26
  71:lvgl/src/lv_widgets/lv_switch.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(sw);
 522              		.loc 1 71 5 is_stmt 1 view .LVU150
  71:lvgl/src/lv_widgets/lv_switch.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(sw);
 523              		.loc 1 71 24 is_stmt 0 view .LVU151
 524 0012 484B     		ldr	r3, .L49
 525 0014 1B68     		ldr	r3, [r3]
  71:lvgl/src/lv_widgets/lv_switch.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(sw);
 526              		.loc 1 71 7 view .LVU152
 527 0016 6BB3     		cbz	r3, .L42
 528              	.L30:
  72:lvgl/src/lv_widgets/lv_switch.c **** 
 529              		.loc 1 72 5 is_stmt 1 view .LVU153
  72:lvgl/src/lv_widgets/lv_switch.c **** 
 530              		.loc 1 72 24 is_stmt 0 view .LVU154
 531 0018 474B     		ldr	r3, .L49+4
 532 001a 1B68     		ldr	r3, [r3]
  72:lvgl/src/lv_widgets/lv_switch.c **** 
 533              		.loc 1 72 7 view .LVU155
 534 001c 83B3     		cbz	r3, .L43
 535              	.L31:
  75:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_MEM(ext);
 536              		.loc 1 75 5 is_stmt 1 view .LVU156
  75:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_MEM(ext);
 537              		.loc 1 75 29 is_stmt 0 view .LVU157
 538 001e 4021     		movs	r1, #64
 539 0020 2046     		mov	r0, r4
 540 0022 FFF7FEFF 		bl	lv_obj_allocate_ext_attr
 541              	.LVL57:
 542 0026 0546     		mov	r5, r0
 543              	.LVL58:
  76:lvgl/src/lv_widgets/lv_switch.c ****     if(ext == NULL) {
 544              		.loc 1 76 5 is_stmt 1 view .LVU158
  76:lvgl/src/lv_widgets/lv_switch.c ****     if(ext == NULL) {
 545              		.loc 1 76 5 view .LVU159
 546 0028 FFF7FEFF 		bl	lv_debug_check_null
 547              	.LVL59:
  76:lvgl/src/lv_widgets/lv_switch.c ****     if(ext == NULL) {
 548              		.loc 1 76 5 is_stmt 0 view .LVU160
 549 002c 70B3     		cbz	r0, .L44
  76:lvgl/src/lv_widgets/lv_switch.c ****     if(ext == NULL) {
 550              		.loc 1 76 23 is_stmt 1 discriminator 2 view .LVU161
  77:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_del(sw);
 551              		.loc 1 77 5 discriminator 2 view .LVU162
  77:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_del(sw);
 552              		.loc 1 77 7 is_stmt 0 discriminator 2 view .LVU163
 553 002e 9DB3     		cbz	r5, .L45
ARM GAS  D:\Temp\ccHSkmsm.s 			page 23


  82:lvgl/src/lv_widgets/lv_switch.c **** 
 554              		.loc 1 82 5 is_stmt 1 view .LVU164
 555 0030 3835     		adds	r5, r5, #56
 556              	.LVL60:
  82:lvgl/src/lv_widgets/lv_switch.c **** 
 557              		.loc 1 82 5 is_stmt 0 view .LVU165
 558 0032 2846     		mov	r0, r5
 559 0034 FFF7FEFF 		bl	lv_style_list_init
 560              	.LVL61:
  85:lvgl/src/lv_widgets/lv_switch.c ****     lv_obj_set_design_cb(sw, lv_switch_design);
 561              		.loc 1 85 5 is_stmt 1 view .LVU166
 562 0038 4049     		ldr	r1, .L49+8
 563 003a 2046     		mov	r0, r4
 564 003c FFF7FEFF 		bl	lv_obj_set_signal_cb
 565              	.LVL62:
  86:lvgl/src/lv_widgets/lv_switch.c **** 
 566              		.loc 1 86 5 view .LVU167
 567 0040 3F49     		ldr	r1, .L49+12
 568 0042 2046     		mov	r0, r4
 569 0044 FFF7FEFF 		bl	lv_obj_set_design_cb
 570              	.LVL63:
  89:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_set_click(sw, true);
 571              		.loc 1 89 5 view .LVU168
  89:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_set_click(sw, true);
 572              		.loc 1 89 7 is_stmt 0 view .LVU169
 573 0048 5EB3     		cbz	r6, .L46
 574              	.LBB49:
  99:lvgl/src/lv_widgets/lv_switch.c **** 
 575              		.loc 1 99 9 is_stmt 1 view .LVU170
  99:lvgl/src/lv_widgets/lv_switch.c **** 
 576              		.loc 1 99 38 is_stmt 0 view .LVU171
 577 004a 3046     		mov	r0, r6
 578 004c FFF7FEFF 		bl	lv_obj_get_ext_attr
 579              	.LVL64:
 101:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_refresh_style(sw, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);
 580              		.loc 1 101 9 is_stmt 1 view .LVU172
 581 0050 00F13801 		add	r1, r0, #56
 582 0054 2846     		mov	r0, r5
 583              	.LVL65:
 101:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_refresh_style(sw, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);
 584              		.loc 1 101 9 is_stmt 0 view .LVU173
 585 0056 FFF7FEFF 		bl	lv_style_list_copy
 586              	.LVL66:
 102:lvgl/src/lv_widgets/lv_switch.c ****     }
 587              		.loc 1 102 9 is_stmt 1 view .LVU174
 588 005a FF22     		movs	r2, #255
 589 005c 1146     		mov	r1, r2
 590 005e 2046     		mov	r0, r4
 591 0060 FFF7FEFF 		bl	lv_obj_refresh_style
 592              	.LVL67:
 593              	.L26:
 102:lvgl/src/lv_widgets/lv_switch.c ****     }
 594              		.loc 1 102 9 is_stmt 0 view .LVU175
 595              	.LBE49:
 110:lvgl/src/lv_widgets/lv_switch.c **** 
 596              		.loc 1 110 1 view .LVU176
 597 0064 2046     		mov	r0, r4
ARM GAS  D:\Temp\ccHSkmsm.s 			page 24


 598 0066 70BD     		pop	{r4, r5, r6, pc}
 599              	.LVL68:
 600              	.L41:
  67:lvgl/src/lv_widgets/lv_switch.c **** 
 601              		.loc 1 67 5 is_stmt 1 discriminator 1 view .LVU177
  67:lvgl/src/lv_widgets/lv_switch.c **** 
 602              		.loc 1 67 5 discriminator 1 view .LVU178
 603 0068 2246     		mov	r2, r4
 604 006a 0023     		movs	r3, #0
 605 006c 3548     		ldr	r0, .L49+16
 606 006e FFF7FEFF 		bl	lv_debug_log_error
 607              	.LVL69:
 608              	.L28:
  67:lvgl/src/lv_widgets/lv_switch.c **** 
 609              		.loc 1 67 5 discriminator 1 view .LVU179
  67:lvgl/src/lv_widgets/lv_switch.c **** 
 610              		.loc 1 67 5 discriminator 1 view .LVU180
 611 0072 FEE7     		b	.L28
 612              	.L42:
  71:lvgl/src/lv_widgets/lv_switch.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(sw);
 613              		.loc 1 71 33 discriminator 1 view .LVU181
  71:lvgl/src/lv_widgets/lv_switch.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(sw);
 614              		.loc 1 71 51 is_stmt 0 discriminator 1 view .LVU182
 615 0074 2046     		mov	r0, r4
 616 0076 FFF7FEFF 		bl	lv_obj_get_signal_cb
 617              	.LVL70:
  71:lvgl/src/lv_widgets/lv_switch.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(sw);
 618              		.loc 1 71 49 discriminator 1 view .LVU183
 619 007a 2E4B     		ldr	r3, .L49
 620 007c 1860     		str	r0, [r3]
 621 007e CBE7     		b	.L30
 622              	.L43:
  72:lvgl/src/lv_widgets/lv_switch.c **** 
 623              		.loc 1 72 33 is_stmt 1 discriminator 1 view .LVU184
  72:lvgl/src/lv_widgets/lv_switch.c **** 
 624              		.loc 1 72 51 is_stmt 0 discriminator 1 view .LVU185
 625 0080 2046     		mov	r0, r4
 626 0082 FFF7FEFF 		bl	lv_obj_get_design_cb
 627              	.LVL71:
  72:lvgl/src/lv_widgets/lv_switch.c **** 
 628              		.loc 1 72 49 discriminator 1 view .LVU186
 629 0086 2C4B     		ldr	r3, .L49+4
 630 0088 1860     		str	r0, [r3]
 631 008a C8E7     		b	.L31
 632              	.LVL72:
 633              	.L44:
  76:lvgl/src/lv_widgets/lv_switch.c ****     if(ext == NULL) {
 634              		.loc 1 76 5 is_stmt 1 discriminator 1 view .LVU187
  76:lvgl/src/lv_widgets/lv_switch.c ****     if(ext == NULL) {
 635              		.loc 1 76 5 discriminator 1 view .LVU188
 636 008c 2A46     		mov	r2, r5
 637 008e 0023     		movs	r3, #0
 638 0090 2C48     		ldr	r0, .L49+16
 639 0092 FFF7FEFF 		bl	lv_debug_log_error
 640              	.LVL73:
 641              	.L33:
  76:lvgl/src/lv_widgets/lv_switch.c ****     if(ext == NULL) {
ARM GAS  D:\Temp\ccHSkmsm.s 			page 25


 642              		.loc 1 76 5 discriminator 2 view .LVU189
  76:lvgl/src/lv_widgets/lv_switch.c ****     if(ext == NULL) {
 643              		.loc 1 76 5 discriminator 2 view .LVU190
 644 0096 FEE7     		b	.L33
 645              	.L45:
  78:lvgl/src/lv_widgets/lv_switch.c ****         return NULL;
 646              		.loc 1 78 9 view .LVU191
 647 0098 2046     		mov	r0, r4
 648 009a FFF7FEFF 		bl	lv_obj_del
 649              	.LVL74:
  79:lvgl/src/lv_widgets/lv_switch.c ****     }
 650              		.loc 1 79 9 view .LVU192
  79:lvgl/src/lv_widgets/lv_switch.c ****     }
 651              		.loc 1 79 16 is_stmt 0 view .LVU193
 652 009e 0024     		movs	r4, #0
 653              	.LVL75:
  79:lvgl/src/lv_widgets/lv_switch.c ****     }
 654              		.loc 1 79 16 view .LVU194
 655 00a0 E0E7     		b	.L26
 656              	.LVL76:
 657              	.L46:
  90:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_add_protect(sw, LV_PROTECT_PRESS_LOST);
 658              		.loc 1 90 9 is_stmt 1 view .LVU195
 659 00a2 0121     		movs	r1, #1
 660 00a4 2046     		mov	r0, r4
 661 00a6 FFF7FEFF 		bl	lv_obj_set_click
 662              	.LVL77:
  91:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_set_size(sw, LV_DPX(60), LV_DPX(35));
 663              		.loc 1 91 9 view .LVU196
 664 00aa 1021     		movs	r1, #16
 665 00ac 2046     		mov	r0, r4
 666 00ae FFF7FEFF 		bl	lv_obj_add_protect
 667              	.LVL78:
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
 668              		.loc 1 92 9 view .LVU197
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
 669              		.loc 1 92 29 is_stmt 0 view .LVU198
 670 00b2 0020     		movs	r0, #0
 671 00b4 FFF7FEFF 		bl	lv_disp_get_dpi
 672              	.LVL79:
 673 00b8 C0EB0010 		rsb	r0, r0, r0, lsl #4
 674 00bc 8300     		lsls	r3, r0, #2
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
 675              		.loc 1 92 9 view .LVU199
 676 00be EF2B     		cmp	r3, #239
 677 00c0 18DC     		bgt	.L47
 678 00c2 0125     		movs	r5, #1
 679              	.LVL80:
 680              	.L36:
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
 681              		.loc 1 92 41 discriminator 4 view .LVU200
 682 00c4 0020     		movs	r0, #0
 683 00c6 FFF7FEFF 		bl	lv_disp_get_dpi
 684              	.LVL81:
 685 00ca 00EB8000 		add	r0, r0, r0, lsl #2
 686 00ce C0EBC000 		rsb	r0, r0, r0, lsl #3
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
ARM GAS  D:\Temp\ccHSkmsm.s 			page 26


 687              		.loc 1 92 9 discriminator 4 view .LVU201
 688 00d2 EF28     		cmp	r0, #239
 689 00d4 1DDC     		bgt	.L48
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
 690              		.loc 1 92 9 view .LVU202
 691 00d6 0122     		movs	r2, #1
 692              	.L37:
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
 693              		.loc 1 92 9 discriminator 8 view .LVU203
 694 00d8 2946     		mov	r1, r5
 695 00da 2046     		mov	r0, r4
 696 00dc FFF7FEFF 		bl	lv_obj_set_size
 697              	.LVL82:
  93:lvgl/src/lv_widgets/lv_switch.c **** 
 698              		.loc 1 93 9 is_stmt 1 discriminator 8 view .LVU204
 699 00e0 0122     		movs	r2, #1
 700 00e2 0021     		movs	r1, #0
 701 00e4 2046     		mov	r0, r4
 702 00e6 FFF7FEFF 		bl	lv_bar_set_range
 703              	.LVL83:
  95:lvgl/src/lv_widgets/lv_switch.c ****     }
 704              		.loc 1 95 9 discriminator 8 view .LVU205
 705 00ea 2121     		movs	r1, #33
 706 00ec 2046     		mov	r0, r4
 707 00ee FFF7FEFF 		bl	lv_theme_apply
 708              	.LVL84:
 709 00f2 B7E7     		b	.L26
 710              	.LVL85:
 711              	.L47:
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
 712              		.loc 1 92 29 is_stmt 0 discriminator 1 view .LVU206
 713 00f4 0020     		movs	r0, #0
 714 00f6 FFF7FEFF 		bl	lv_disp_get_dpi
 715              	.LVL86:
 716 00fa C0EB0010 		rsb	r0, r0, r0, lsl #4
 717 00fe 8300     		lsls	r3, r0, #2
 718 0100 5033     		adds	r3, r3, #80
 719 0102 114D     		ldr	r5, .L49+20
 720              	.LVL87:
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
 721              		.loc 1 92 29 discriminator 1 view .LVU207
 722 0104 85FB0325 		smull	r2, r5, r5, r3
 723 0108 DB17     		asrs	r3, r3, #31
 724 010a C3EBA515 		rsb	r5, r3, r5, asr #6
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
 725              		.loc 1 92 9 discriminator 1 view .LVU208
 726 010e 2DB2     		sxth	r5, r5
 727 0110 D8E7     		b	.L36
 728              	.L48:
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
 729              		.loc 1 92 41 discriminator 5 view .LVU209
 730 0112 0020     		movs	r0, #0
 731 0114 FFF7FEFF 		bl	lv_disp_get_dpi
 732              	.LVL88:
 733 0118 00EB8000 		add	r0, r0, r0, lsl #2
 734 011c C0EBC000 		rsb	r0, r0, r0, lsl #3
 735 0120 00F15003 		add	r3, r0, #80
ARM GAS  D:\Temp\ccHSkmsm.s 			page 27


 736 0124 0849     		ldr	r1, .L49+20
 737 0126 81FB0321 		smull	r2, r1, r1, r3
 738 012a DA17     		asrs	r2, r3, #31
 739 012c C2EBA112 		rsb	r2, r2, r1, asr #6
  92:lvgl/src/lv_widgets/lv_switch.c ****         lv_bar_set_range(sw, 0, 1);
 740              		.loc 1 92 9 discriminator 5 view .LVU210
 741 0130 12B2     		sxth	r2, r2
 742 0132 D1E7     		b	.L37
 743              	.L50:
 744              		.align	2
 745              	.L49:
 746 0134 00000000 		.word	.LANCHOR1
 747 0138 00000000 		.word	.LANCHOR0
 748 013c 00000000 		.word	lv_switch_signal
 749 0140 00000000 		.word	lv_switch_design
 750 0144 00000000 		.word	.LC1
 751 0148 67666666 		.word	1717986919
 752              		.cfi_endproc
 753              	.LFE477:
 755              		.section	.text.lv_switch_on,"ax",%progbits
 756              		.align	1
 757              		.global	lv_switch_on
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu fpv4-sp-d16
 763              	lv_switch_on:
 764              	.LVL89:
 765              	.LFB478:
 122:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_OBJ(sw, LV_OBJX_NAME);
 766              		.loc 1 122 1 is_stmt 1 view -0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 122:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_OBJ(sw, LV_OBJX_NAME);
 770              		.loc 1 122 1 is_stmt 0 view .LVU212
 771 0000 38B5     		push	{r3, r4, r5, lr}
 772              	.LCFI7:
 773              		.cfi_def_cfa_offset 16
 774              		.cfi_offset 3, -16
 775              		.cfi_offset 4, -12
 776              		.cfi_offset 5, -8
 777              		.cfi_offset 14, -4
 778 0002 0446     		mov	r4, r0
 779 0004 0D46     		mov	r5, r1
 123:lvgl/src/lv_widgets/lv_switch.c **** 
 780              		.loc 1 123 5 is_stmt 1 view .LVU213
 123:lvgl/src/lv_widgets/lv_switch.c **** 
 781              		.loc 1 123 5 view .LVU214
 782 0006 FFF7FEFF 		bl	lv_debug_check_null
 783              	.LVL90:
 123:lvgl/src/lv_widgets/lv_switch.c **** 
 784              		.loc 1 123 5 is_stmt 0 view .LVU215
 785 000a 28B9     		cbnz	r0, .L52
 123:lvgl/src/lv_widgets/lv_switch.c **** 
 786              		.loc 1 123 5 is_stmt 1 discriminator 1 view .LVU216
 123:lvgl/src/lv_widgets/lv_switch.c **** 
ARM GAS  D:\Temp\ccHSkmsm.s 			page 28


 787              		.loc 1 123 5 discriminator 1 view .LVU217
 788 000c 2246     		mov	r2, r4
 789 000e 0023     		movs	r3, #0
 790 0010 0948     		ldr	r0, .L56
 791 0012 FFF7FEFF 		bl	lv_debug_log_error
 792              	.LVL91:
 793              	.L53:
 123:lvgl/src/lv_widgets/lv_switch.c **** 
 794              		.loc 1 123 5 discriminator 1 view .LVU218
 123:lvgl/src/lv_widgets/lv_switch.c **** 
 795              		.loc 1 123 5 discriminator 1 view .LVU219
 796 0016 FEE7     		b	.L53
 797              	.L52:
 123:lvgl/src/lv_widgets/lv_switch.c **** 
 798              		.loc 1 123 36 discriminator 2 view .LVU220
 128:lvgl/src/lv_widgets/lv_switch.c ****         return;
 799              		.loc 1 128 5 discriminator 2 view .LVU221
 128:lvgl/src/lv_widgets/lv_switch.c ****         return;
 800              		.loc 1 128 8 is_stmt 0 discriminator 2 view .LVU222
 801 0018 2046     		mov	r0, r4
 802 001a FFF7FEFF 		bl	lv_bar_get_value
 803              	.LVL92:
 128:lvgl/src/lv_widgets/lv_switch.c ****         return;
 804              		.loc 1 128 7 discriminator 2 view .LVU223
 805 001e 0128     		cmp	r0, #1
 806 0020 08D0     		beq	.L51
 130:lvgl/src/lv_widgets/lv_switch.c ****     lv_obj_add_state(sw, LV_STATE_CHECKED);
 807              		.loc 1 130 5 is_stmt 1 view .LVU224
 808 0022 2A46     		mov	r2, r5
 809 0024 0121     		movs	r1, #1
 810 0026 2046     		mov	r0, r4
 811 0028 FFF7FEFF 		bl	lv_bar_set_value
 812              	.LVL93:
 131:lvgl/src/lv_widgets/lv_switch.c **** }
 813              		.loc 1 131 5 view .LVU225
 814 002c 0121     		movs	r1, #1
 815 002e 2046     		mov	r0, r4
 816 0030 FFF7FEFF 		bl	lv_obj_add_state
 817              	.LVL94:
 818              	.L51:
 132:lvgl/src/lv_widgets/lv_switch.c **** 
 819              		.loc 1 132 1 is_stmt 0 view .LVU226
 820 0034 38BD     		pop	{r3, r4, r5, pc}
 821              	.LVL95:
 822              	.L57:
 132:lvgl/src/lv_widgets/lv_switch.c **** 
 823              		.loc 1 132 1 view .LVU227
 824 0036 00BF     		.align	2
 825              	.L56:
 826 0038 00000000 		.word	.LC0
 827              		.cfi_endproc
 828              	.LFE478:
 830              		.section	.text.lv_switch_off,"ax",%progbits
 831              		.align	1
 832              		.global	lv_switch_off
 833              		.syntax unified
 834              		.thumb
ARM GAS  D:\Temp\ccHSkmsm.s 			page 29


 835              		.thumb_func
 836              		.fpu fpv4-sp-d16
 838              	lv_switch_off:
 839              	.LVL96:
 840              	.LFB479:
 140:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_OBJ(sw, LV_OBJX_NAME);
 841              		.loc 1 140 1 is_stmt 1 view -0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 140:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_OBJ(sw, LV_OBJX_NAME);
 845              		.loc 1 140 1 is_stmt 0 view .LVU229
 846 0000 38B5     		push	{r3, r4, r5, lr}
 847              	.LCFI8:
 848              		.cfi_def_cfa_offset 16
 849              		.cfi_offset 3, -16
 850              		.cfi_offset 4, -12
 851              		.cfi_offset 5, -8
 852              		.cfi_offset 14, -4
 853 0002 0446     		mov	r4, r0
 854 0004 0D46     		mov	r5, r1
 141:lvgl/src/lv_widgets/lv_switch.c **** 
 855              		.loc 1 141 5 is_stmt 1 view .LVU230
 141:lvgl/src/lv_widgets/lv_switch.c **** 
 856              		.loc 1 141 5 view .LVU231
 857 0006 FFF7FEFF 		bl	lv_debug_check_null
 858              	.LVL97:
 141:lvgl/src/lv_widgets/lv_switch.c **** 
 859              		.loc 1 141 5 is_stmt 0 view .LVU232
 860 000a 28B9     		cbnz	r0, .L59
 141:lvgl/src/lv_widgets/lv_switch.c **** 
 861              		.loc 1 141 5 is_stmt 1 discriminator 1 view .LVU233
 141:lvgl/src/lv_widgets/lv_switch.c **** 
 862              		.loc 1 141 5 discriminator 1 view .LVU234
 863 000c 2246     		mov	r2, r4
 864 000e 0023     		movs	r3, #0
 865 0010 0948     		ldr	r0, .L64
 866 0012 FFF7FEFF 		bl	lv_debug_log_error
 867              	.LVL98:
 868              	.L60:
 141:lvgl/src/lv_widgets/lv_switch.c **** 
 869              		.loc 1 141 5 discriminator 1 view .LVU235
 141:lvgl/src/lv_widgets/lv_switch.c **** 
 870              		.loc 1 141 5 discriminator 1 view .LVU236
 871 0016 FEE7     		b	.L60
 872              	.L59:
 141:lvgl/src/lv_widgets/lv_switch.c **** 
 873              		.loc 1 141 36 discriminator 2 view .LVU237
 146:lvgl/src/lv_widgets/lv_switch.c ****         return;
 874              		.loc 1 146 5 discriminator 2 view .LVU238
 146:lvgl/src/lv_widgets/lv_switch.c ****         return;
 875              		.loc 1 146 8 is_stmt 0 discriminator 2 view .LVU239
 876 0018 2046     		mov	r0, r4
 877 001a FFF7FEFF 		bl	lv_bar_get_value
 878              	.LVL99:
 146:lvgl/src/lv_widgets/lv_switch.c ****         return;
 879              		.loc 1 146 7 discriminator 2 view .LVU240
ARM GAS  D:\Temp\ccHSkmsm.s 			page 30


 880 001e 00B9     		cbnz	r0, .L63
 881              	.L58:
 150:lvgl/src/lv_widgets/lv_switch.c **** 
 882              		.loc 1 150 1 view .LVU241
 883 0020 38BD     		pop	{r3, r4, r5, pc}
 884              	.LVL100:
 885              	.L63:
 148:lvgl/src/lv_widgets/lv_switch.c ****     lv_obj_clear_state(sw, LV_STATE_CHECKED);
 886              		.loc 1 148 5 is_stmt 1 view .LVU242
 887 0022 2A46     		mov	r2, r5
 888 0024 0021     		movs	r1, #0
 889 0026 2046     		mov	r0, r4
 890 0028 FFF7FEFF 		bl	lv_bar_set_value
 891              	.LVL101:
 149:lvgl/src/lv_widgets/lv_switch.c **** }
 892              		.loc 1 149 5 view .LVU243
 893 002c 0121     		movs	r1, #1
 894 002e 2046     		mov	r0, r4
 895 0030 FFF7FEFF 		bl	lv_obj_clear_state
 896              	.LVL102:
 897 0034 F4E7     		b	.L58
 898              	.L65:
 899 0036 00BF     		.align	2
 900              	.L64:
 901 0038 00000000 		.word	.LC0
 902              		.cfi_endproc
 903              	.LFE479:
 905              		.section	.text.lv_switch_signal,"ax",%progbits
 906              		.align	1
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu fpv4-sp-d16
 912              	lv_switch_signal:
 913              	.LVL103:
 914              	.LFB482:
 265:lvgl/src/lv_widgets/lv_switch.c ****     lv_res_t res;
 915              		.loc 1 265 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 265:lvgl/src/lv_widgets/lv_switch.c ****     lv_res_t res;
 919              		.loc 1 265 1 is_stmt 0 view .LVU245
 920 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 921              	.LCFI9:
 922              		.cfi_def_cfa_offset 32
 923              		.cfi_offset 4, -32
 924              		.cfi_offset 5, -28
 925              		.cfi_offset 6, -24
 926              		.cfi_offset 7, -20
 927              		.cfi_offset 8, -16
 928              		.cfi_offset 9, -12
 929              		.cfi_offset 10, -8
 930              		.cfi_offset 14, -4
 931 0004 0646     		mov	r6, r0
 932 0006 0C46     		mov	r4, r1
 933 0008 1746     		mov	r7, r2
ARM GAS  D:\Temp\ccHSkmsm.s 			page 31


 266:lvgl/src/lv_widgets/lv_switch.c **** 
 934              		.loc 1 266 5 is_stmt 1 view .LVU246
 268:lvgl/src/lv_widgets/lv_switch.c ****         lv_get_style_info_t * info = param;
 935              		.loc 1 268 5 view .LVU247
 268:lvgl/src/lv_widgets/lv_switch.c ****         lv_get_style_info_t * info = param;
 936              		.loc 1 268 7 is_stmt 0 view .LVU248
 937 000a 0829     		cmp	r1, #8
 938 000c 13D0     		beq	.L84
 275:lvgl/src/lv_widgets/lv_switch.c ****         res = ancestor_signal(sw, sign, param);
 939              		.loc 1 275 5 is_stmt 1 view .LVU249
 275:lvgl/src/lv_widgets/lv_switch.c ****         res = ancestor_signal(sw, sign, param);
 940              		.loc 1 275 7 is_stmt 0 view .LVU250
 941 000e 0729     		cmp	r1, #7
 942 0010 20D0     		beq	.L85
 282:lvgl/src/lv_widgets/lv_switch.c ****     if(res != LV_RES_OK) return res;
 943              		.loc 1 282 5 is_stmt 1 view .LVU251
 282:lvgl/src/lv_widgets/lv_switch.c ****     if(res != LV_RES_OK) return res;
 944              		.loc 1 282 11 is_stmt 0 view .LVU252
 945 0012 564B     		ldr	r3, .L93
 946 0014 1B68     		ldr	r3, [r3]
 947 0016 9847     		blx	r3
 948              	.LVL104:
 282:lvgl/src/lv_widgets/lv_switch.c ****     if(res != LV_RES_OK) return res;
 949              		.loc 1 282 11 view .LVU253
 950 0018 0546     		mov	r5, r0
 951              	.LVL105:
 283:lvgl/src/lv_widgets/lv_switch.c **** 
 952              		.loc 1 283 5 is_stmt 1 view .LVU254
 283:lvgl/src/lv_widgets/lv_switch.c **** 
 953              		.loc 1 283 7 is_stmt 0 view .LVU255
 954 001a 0128     		cmp	r0, #1
 955 001c 20D1     		bne	.L68
 285:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_clean_style_list(sw, LV_SWITCH_PART_KNOB);
 956              		.loc 1 285 5 is_stmt 1 view .LVU256
 285:lvgl/src/lv_widgets/lv_switch.c ****         lv_obj_clean_style_list(sw, LV_SWITCH_PART_KNOB);
 957              		.loc 1 285 7 is_stmt 0 view .LVU257
 958 001e 44B3     		cbz	r4, .L86
 288:lvgl/src/lv_widgets/lv_switch.c ****         if(lv_switch_get_state(sw)) lv_switch_off(sw, LV_ANIM_ON);
 959              		.loc 1 288 10 is_stmt 1 view .LVU258
 288:lvgl/src/lv_widgets/lv_switch.c ****         if(lv_switch_get_state(sw)) lv_switch_off(sw, LV_ANIM_ON);
 960              		.loc 1 288 12 is_stmt 0 view .LVU259
 961 0020 0E2C     		cmp	r4, #14
 962 0022 2BD0     		beq	.L87
 296:lvgl/src/lv_widgets/lv_switch.c **** #if LV_USE_GROUP
 963              		.loc 1 296 10 is_stmt 1 view .LVU260
 296:lvgl/src/lv_widgets/lv_switch.c **** #if LV_USE_GROUP
 964              		.loc 1 296 12 is_stmt 0 view .LVU261
 965 0024 182C     		cmp	r4, #24
 966 0026 3ED0     		beq	.L88
 306:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_left = lv_obj_get_style_pad_left(sw,   LV_SWITCH_PART_KNOB);
 967              		.loc 1 306 10 is_stmt 1 view .LVU262
 306:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_left = lv_obj_get_style_pad_left(sw,   LV_SWITCH_PART_KNOB);
 968              		.loc 1 306 12 is_stmt 0 view .LVU263
 969 0028 062C     		cmp	r4, #6
 970 002a 55D0     		beq	.L89
 322:lvgl/src/lv_widgets/lv_switch.c **** #if LV_USE_GROUP
 971              		.loc 1 322 10 is_stmt 1 view .LVU264
ARM GAS  D:\Temp\ccHSkmsm.s 			page 32


 322:lvgl/src/lv_widgets/lv_switch.c **** #if LV_USE_GROUP
 972              		.loc 1 322 12 is_stmt 0 view .LVU265
 973 002c 192C     		cmp	r4, #25
 974 002e 17D1     		bne	.L68
 975              	.LBB50:
 324:lvgl/src/lv_widgets/lv_switch.c ****         *editable       = false; /*The ancestor slider is editable the switch is not*/
 976              		.loc 1 324 9 is_stmt 1 view .LVU266
 977              	.LVL106:
 325:lvgl/src/lv_widgets/lv_switch.c **** #endif
 978              		.loc 1 325 9 view .LVU267
 325:lvgl/src/lv_widgets/lv_switch.c **** #endif
 979              		.loc 1 325 25 is_stmt 0 view .LVU268
 980 0030 0023     		movs	r3, #0
 981 0032 3B70     		strb	r3, [r7]
 982 0034 14E0     		b	.L68
 983              	.LVL107:
 984              	.L84:
 325:lvgl/src/lv_widgets/lv_switch.c **** #endif
 985              		.loc 1 325 25 view .LVU269
 986              	.LBE50:
 987              	.LBB51:
 269:lvgl/src/lv_widgets/lv_switch.c ****         info->result = lv_switch_get_style(sw, info->part);
 988              		.loc 1 269 9 is_stmt 1 view .LVU270
 270:lvgl/src/lv_widgets/lv_switch.c ****         if(info->result != NULL) return LV_RES_OK;
 989              		.loc 1 270 9 view .LVU271
 270:lvgl/src/lv_widgets/lv_switch.c ****         if(info->result != NULL) return LV_RES_OK;
 990              		.loc 1 270 24 is_stmt 0 view .LVU272
 991 0036 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 992              	.LVL108:
 270:lvgl/src/lv_widgets/lv_switch.c ****         if(info->result != NULL) return LV_RES_OK;
 993              		.loc 1 270 24 view .LVU273
 994 0038 FFF7FEFF 		bl	lv_switch_get_style
 995              	.LVL109:
 270:lvgl/src/lv_widgets/lv_switch.c ****         if(info->result != NULL) return LV_RES_OK;
 996              		.loc 1 270 22 view .LVU274
 997 003c 7860     		str	r0, [r7, #4]
 271:lvgl/src/lv_widgets/lv_switch.c ****         else return ancestor_signal(sw, sign, param);
 998              		.loc 1 271 9 is_stmt 1 view .LVU275
 271:lvgl/src/lv_widgets/lv_switch.c ****         else return ancestor_signal(sw, sign, param);
 999              		.loc 1 271 11 is_stmt 0 view .LVU276
 1000 003e 08B1     		cbz	r0, .L90
 271:lvgl/src/lv_widgets/lv_switch.c ****         else return ancestor_signal(sw, sign, param);
 1001              		.loc 1 271 41 view .LVU277
 1002 0040 0125     		movs	r5, #1
 1003 0042 0DE0     		b	.L68
 1004              	.L90:
 272:lvgl/src/lv_widgets/lv_switch.c ****     }
 1005              		.loc 1 272 14 is_stmt 1 view .LVU278
 272:lvgl/src/lv_widgets/lv_switch.c ****     }
 1006              		.loc 1 272 21 is_stmt 0 view .LVU279
 1007 0044 494B     		ldr	r3, .L93
 1008 0046 1B68     		ldr	r3, [r3]
 1009 0048 3A46     		mov	r2, r7
 1010 004a 2146     		mov	r1, r4
 1011 004c 3046     		mov	r0, r6
 1012 004e 9847     		blx	r3
 1013              	.LVL110:
ARM GAS  D:\Temp\ccHSkmsm.s 			page 33


 1014 0050 0546     		mov	r5, r0
 1015 0052 05E0     		b	.L68
 1016              	.LVL111:
 1017              	.L85:
 272:lvgl/src/lv_widgets/lv_switch.c ****     }
 1018              		.loc 1 272 21 view .LVU280
 1019              	.LBE51:
 276:lvgl/src/lv_widgets/lv_switch.c ****         if(res != LV_RES_OK) return res;
 1020              		.loc 1 276 9 is_stmt 1 view .LVU281
 276:lvgl/src/lv_widgets/lv_switch.c ****         if(res != LV_RES_OK) return res;
 1021              		.loc 1 276 15 is_stmt 0 view .LVU282
 1022 0054 454B     		ldr	r3, .L93
 1023 0056 1B68     		ldr	r3, [r3]
 1024 0058 9847     		blx	r3
 1025              	.LVL112:
 276:lvgl/src/lv_widgets/lv_switch.c ****         if(res != LV_RES_OK) return res;
 1026              		.loc 1 276 15 view .LVU283
 1027 005a 0546     		mov	r5, r0
 1028              	.LVL113:
 277:lvgl/src/lv_widgets/lv_switch.c ****         return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 1029              		.loc 1 277 9 is_stmt 1 view .LVU284
 277:lvgl/src/lv_widgets/lv_switch.c ****         return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 1030              		.loc 1 277 11 is_stmt 0 view .LVU285
 1031 005c 0128     		cmp	r0, #1
 1032 005e 02D0     		beq	.L91
 1033              	.LVL114:
 1034              	.L68:
 330:lvgl/src/lv_widgets/lv_switch.c **** 
 1035              		.loc 1 330 1 view .LVU286
 1036 0060 2846     		mov	r0, r5
 1037 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1038              	.LVL115:
 1039              	.L91:
 278:lvgl/src/lv_widgets/lv_switch.c ****     }
 1040              		.loc 1 278 9 is_stmt 1 view .LVU287
 278:lvgl/src/lv_widgets/lv_switch.c ****     }
 1041              		.loc 1 278 16 is_stmt 0 view .LVU288
 1042 0066 4249     		ldr	r1, .L93+4
 1043 0068 3846     		mov	r0, r7
 1044              	.LVL116:
 278:lvgl/src/lv_widgets/lv_switch.c ****     }
 1045              		.loc 1 278 16 view .LVU289
 1046 006a FFF7FEFF 		bl	lv_obj_handle_get_type_signal
 1047              	.LVL117:
 1048 006e 0546     		mov	r5, r0
 1049 0070 F6E7     		b	.L68
 1050              	.LVL118:
 1051              	.L86:
 286:lvgl/src/lv_widgets/lv_switch.c ****     }
 1052              		.loc 1 286 9 is_stmt 1 view .LVU290
 1053 0072 0221     		movs	r1, #2
 1054 0074 3046     		mov	r0, r6
 1055              	.LVL119:
 286:lvgl/src/lv_widgets/lv_switch.c ****     }
 1056              		.loc 1 286 9 is_stmt 0 view .LVU291
 1057 0076 FFF7FEFF 		bl	lv_obj_clean_style_list
 1058              	.LVL120:
ARM GAS  D:\Temp\ccHSkmsm.s 			page 34


 1059 007a F1E7     		b	.L68
 1060              	.LVL121:
 1061              	.L87:
 289:lvgl/src/lv_widgets/lv_switch.c ****         else lv_switch_on(sw, LV_ANIM_ON);
 1062              		.loc 1 289 9 is_stmt 1 view .LVU292
 1063              	.LBB52:
 1064              	.LBI52:
 1065              		.file 4 "lvgl/src/lv_widgets/lv_switch.h"
   1:lvgl/src/lv_widgets/lv_switch.h **** /**
   2:lvgl/src/lv_widgets/lv_switch.h ****  * @file lv_sw.h
   3:lvgl/src/lv_widgets/lv_switch.h ****  *
   4:lvgl/src/lv_widgets/lv_switch.h ****  */
   5:lvgl/src/lv_widgets/lv_switch.h **** 
   6:lvgl/src/lv_widgets/lv_switch.h **** #ifndef LV_SWITCH_H
   7:lvgl/src/lv_widgets/lv_switch.h **** #define LV_SWITCH_H
   8:lvgl/src/lv_widgets/lv_switch.h **** 
   9:lvgl/src/lv_widgets/lv_switch.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/lv_switch.h **** extern "C" {
  11:lvgl/src/lv_widgets/lv_switch.h **** #endif
  12:lvgl/src/lv_widgets/lv_switch.h **** 
  13:lvgl/src/lv_widgets/lv_switch.h **** /*********************
  14:lvgl/src/lv_widgets/lv_switch.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/lv_switch.h ****  *********************/
  16:lvgl/src/lv_widgets/lv_switch.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/lv_switch.h **** 
  18:lvgl/src/lv_widgets/lv_switch.h **** #if LV_USE_SWITCH != 0
  19:lvgl/src/lv_widgets/lv_switch.h **** 
  20:lvgl/src/lv_widgets/lv_switch.h **** /*Testing of dependencies*/
  21:lvgl/src/lv_widgets/lv_switch.h **** #if LV_USE_SLIDER == 0
  22:lvgl/src/lv_widgets/lv_switch.h **** #error "lv_sw: lv_slider is required. Enable it in lv_conf.h (LV_USE_SLIDER 1)"
  23:lvgl/src/lv_widgets/lv_switch.h **** #endif
  24:lvgl/src/lv_widgets/lv_switch.h **** 
  25:lvgl/src/lv_widgets/lv_switch.h **** #include "../lv_core/lv_obj.h"
  26:lvgl/src/lv_widgets/lv_switch.h **** #include "lv_bar.h"
  27:lvgl/src/lv_widgets/lv_switch.h **** 
  28:lvgl/src/lv_widgets/lv_switch.h **** /*********************
  29:lvgl/src/lv_widgets/lv_switch.h ****  *      DEFINES
  30:lvgl/src/lv_widgets/lv_switch.h ****  *********************/
  31:lvgl/src/lv_widgets/lv_switch.h **** 
  32:lvgl/src/lv_widgets/lv_switch.h **** /**********************
  33:lvgl/src/lv_widgets/lv_switch.h ****  *      TYPEDEFS
  34:lvgl/src/lv_widgets/lv_switch.h ****  **********************/
  35:lvgl/src/lv_widgets/lv_switch.h **** /*Data of switch*/
  36:lvgl/src/lv_widgets/lv_switch.h **** typedef struct {
  37:lvgl/src/lv_widgets/lv_switch.h ****     lv_bar_ext_t bar; /*Ext. of ancestor*/
  38:lvgl/src/lv_widgets/lv_switch.h ****     /*New data for this type */
  39:lvgl/src/lv_widgets/lv_switch.h ****     lv_style_list_t style_knob; /*Style of the knob*/
  40:lvgl/src/lv_widgets/lv_switch.h **** } lv_switch_ext_t;
  41:lvgl/src/lv_widgets/lv_switch.h **** 
  42:lvgl/src/lv_widgets/lv_switch.h **** /**
  43:lvgl/src/lv_widgets/lv_switch.h ****  * Switch parts.
  44:lvgl/src/lv_widgets/lv_switch.h ****  */
  45:lvgl/src/lv_widgets/lv_switch.h **** enum {
  46:lvgl/src/lv_widgets/lv_switch.h ****     LV_SWITCH_PART_BG = LV_BAR_PART_BG,                 /**< Switch background. */
  47:lvgl/src/lv_widgets/lv_switch.h ****     LV_SWITCH_PART_INDIC = LV_BAR_PART_INDIC,           /**< Switch fill area. */
  48:lvgl/src/lv_widgets/lv_switch.h ****     LV_SWITCH_PART_KNOB = _LV_BAR_PART_VIRTUAL_LAST,    /**< Switch knob. */
  49:lvgl/src/lv_widgets/lv_switch.h ****     _LV_SWITCH_PART_VIRTUAL_LAST
ARM GAS  D:\Temp\ccHSkmsm.s 			page 35


  50:lvgl/src/lv_widgets/lv_switch.h **** };
  51:lvgl/src/lv_widgets/lv_switch.h **** 
  52:lvgl/src/lv_widgets/lv_switch.h **** typedef uint8_t lv_switch_part_t;
  53:lvgl/src/lv_widgets/lv_switch.h **** 
  54:lvgl/src/lv_widgets/lv_switch.h **** /**********************
  55:lvgl/src/lv_widgets/lv_switch.h ****  * GLOBAL PROTOTYPES
  56:lvgl/src/lv_widgets/lv_switch.h ****  **********************/
  57:lvgl/src/lv_widgets/lv_switch.h **** 
  58:lvgl/src/lv_widgets/lv_switch.h **** /**
  59:lvgl/src/lv_widgets/lv_switch.h ****  * Create a switch objects
  60:lvgl/src/lv_widgets/lv_switch.h ****  * @param par pointer to an object, it will be the parent of the new switch
  61:lvgl/src/lv_widgets/lv_switch.h ****  * @param copy pointer to a switch object, if not NULL then the new object will be copied from it
  62:lvgl/src/lv_widgets/lv_switch.h ****  * @return pointer to the created switch
  63:lvgl/src/lv_widgets/lv_switch.h ****  */
  64:lvgl/src/lv_widgets/lv_switch.h **** lv_obj_t * lv_switch_create(lv_obj_t * par, const lv_obj_t * copy);
  65:lvgl/src/lv_widgets/lv_switch.h **** 
  66:lvgl/src/lv_widgets/lv_switch.h **** /*=====================
  67:lvgl/src/lv_widgets/lv_switch.h ****  * Setter functions
  68:lvgl/src/lv_widgets/lv_switch.h ****  *====================*/
  69:lvgl/src/lv_widgets/lv_switch.h **** 
  70:lvgl/src/lv_widgets/lv_switch.h **** /**
  71:lvgl/src/lv_widgets/lv_switch.h ****  * Turn ON the switch
  72:lvgl/src/lv_widgets/lv_switch.h ****  * @param sw pointer to a switch object
  73:lvgl/src/lv_widgets/lv_switch.h ****  * @param anim LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediate
  74:lvgl/src/lv_widgets/lv_switch.h ****  */
  75:lvgl/src/lv_widgets/lv_switch.h **** void lv_switch_on(lv_obj_t * sw, lv_anim_enable_t anim);
  76:lvgl/src/lv_widgets/lv_switch.h **** 
  77:lvgl/src/lv_widgets/lv_switch.h **** /**
  78:lvgl/src/lv_widgets/lv_switch.h ****  * Turn OFF the switch
  79:lvgl/src/lv_widgets/lv_switch.h ****  * @param sw pointer to a switch object
  80:lvgl/src/lv_widgets/lv_switch.h ****  * @param anim LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediate
  81:lvgl/src/lv_widgets/lv_switch.h ****  */
  82:lvgl/src/lv_widgets/lv_switch.h **** void lv_switch_off(lv_obj_t * sw, lv_anim_enable_t anim);
  83:lvgl/src/lv_widgets/lv_switch.h **** 
  84:lvgl/src/lv_widgets/lv_switch.h **** /**
  85:lvgl/src/lv_widgets/lv_switch.h ****  * Toggle the position of the switch
  86:lvgl/src/lv_widgets/lv_switch.h ****  * @param sw pointer to a switch object
  87:lvgl/src/lv_widgets/lv_switch.h ****  * @param anim LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediate
  88:lvgl/src/lv_widgets/lv_switch.h ****  * @return resulting state of the switch.
  89:lvgl/src/lv_widgets/lv_switch.h ****  */
  90:lvgl/src/lv_widgets/lv_switch.h **** bool lv_switch_toggle(lv_obj_t * sw, lv_anim_enable_t anim);
  91:lvgl/src/lv_widgets/lv_switch.h **** 
  92:lvgl/src/lv_widgets/lv_switch.h **** /**
  93:lvgl/src/lv_widgets/lv_switch.h ****  * Set the animation time of the switch
  94:lvgl/src/lv_widgets/lv_switch.h ****  * @param sw pointer to a switch object
  95:lvgl/src/lv_widgets/lv_switch.h ****  * @param anim_time animation time
  96:lvgl/src/lv_widgets/lv_switch.h ****  * @return style pointer to a style
  97:lvgl/src/lv_widgets/lv_switch.h ****  */
  98:lvgl/src/lv_widgets/lv_switch.h **** static inline void lv_switch_set_anim_time(lv_obj_t * sw, uint16_t anim_time)
  99:lvgl/src/lv_widgets/lv_switch.h **** {
 100:lvgl/src/lv_widgets/lv_switch.h ****     lv_bar_set_anim_time(sw, anim_time);
 101:lvgl/src/lv_widgets/lv_switch.h **** }
 102:lvgl/src/lv_widgets/lv_switch.h **** 
 103:lvgl/src/lv_widgets/lv_switch.h **** /*=====================
 104:lvgl/src/lv_widgets/lv_switch.h ****  * Getter functions
 105:lvgl/src/lv_widgets/lv_switch.h ****  *====================*/
 106:lvgl/src/lv_widgets/lv_switch.h **** 
ARM GAS  D:\Temp\ccHSkmsm.s 			page 36


 107:lvgl/src/lv_widgets/lv_switch.h **** /**
 108:lvgl/src/lv_widgets/lv_switch.h ****  * Get the state of a switch
 109:lvgl/src/lv_widgets/lv_switch.h ****  * @param sw pointer to a switch object
 110:lvgl/src/lv_widgets/lv_switch.h ****  * @return false: OFF; true: ON
 111:lvgl/src/lv_widgets/lv_switch.h ****  */
 112:lvgl/src/lv_widgets/lv_switch.h **** static inline bool lv_switch_get_state(const lv_obj_t * sw)
 1066              		.loc 4 112 20 view .LVU293
 1067              	.LBB53:
 113:lvgl/src/lv_widgets/lv_switch.h **** {
 114:lvgl/src/lv_widgets/lv_switch.h ****     return lv_bar_get_value(sw) == 1 ? true : false;
 1068              		.loc 4 114 5 view .LVU294
 1069              		.loc 4 114 12 is_stmt 0 view .LVU295
 1070 007c 3046     		mov	r0, r6
 1071              	.LVL122:
 1072              		.loc 4 114 12 view .LVU296
 1073 007e FFF7FEFF 		bl	lv_bar_get_value
 1074              	.LVL123:
 1075              		.loc 4 114 12 view .LVU297
 1076              	.LBE53:
 1077              	.LBE52:
 289:lvgl/src/lv_widgets/lv_switch.c ****         else lv_switch_on(sw, LV_ANIM_ON);
 1078              		.loc 1 289 11 view .LVU298
 1079 0082 0128     		cmp	r0, #1
 1080 0084 0AD0     		beq	.L92
 290:lvgl/src/lv_widgets/lv_switch.c **** 
 1081              		.loc 1 290 14 is_stmt 1 view .LVU299
 1082 0086 0121     		movs	r1, #1
 1083 0088 3046     		mov	r0, r6
 1084 008a FFF7FEFF 		bl	lv_switch_on
 1085              	.LVL124:
 1086              	.L73:
 292:lvgl/src/lv_widgets/lv_switch.c ****         if(res != LV_RES_OK) return res;
 1087              		.loc 1 292 9 view .LVU300
 292:lvgl/src/lv_widgets/lv_switch.c ****         if(res != LV_RES_OK) return res;
 1088              		.loc 1 292 15 is_stmt 0 view .LVU301
 1089 008e 0022     		movs	r2, #0
 1090 0090 1021     		movs	r1, #16
 1091 0092 3046     		mov	r0, r6
 1092 0094 FFF7FEFF 		bl	lv_event_send
 1093              	.LVL125:
 1094 0098 0546     		mov	r5, r0
 1095              	.LVL126:
 293:lvgl/src/lv_widgets/lv_switch.c **** 
 1096              		.loc 1 293 9 is_stmt 1 view .LVU302
 1097 009a E1E7     		b	.L68
 1098              	.LVL127:
 1099              	.L92:
 289:lvgl/src/lv_widgets/lv_switch.c ****         else lv_switch_on(sw, LV_ANIM_ON);
 1100              		.loc 1 289 37 discriminator 1 view .LVU303
 1101 009c 0121     		movs	r1, #1
 1102 009e 3046     		mov	r0, r6
 1103 00a0 FFF7FEFF 		bl	lv_switch_off
 1104              	.LVL128:
 1105 00a4 F3E7     		b	.L73
 1106              	.LVL129:
 1107              	.L88:
 1108              	.LBB54:
ARM GAS  D:\Temp\ccHSkmsm.s 			page 37


 298:lvgl/src/lv_widgets/lv_switch.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_UP) lv_switch_on(sw, LV_ANIM_ON);
 1109              		.loc 1 298 9 view .LVU304
 298:lvgl/src/lv_widgets/lv_switch.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_UP) lv_switch_on(sw, LV_ANIM_ON);
 1110              		.loc 1 298 14 is_stmt 0 view .LVU305
 1111 00a6 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1112              	.LVL130:
 299:lvgl/src/lv_widgets/lv_switch.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_DOWN) lv_switch_off(sw, LV_ANIM_ON);
 1113              		.loc 1 299 9 is_stmt 1 view .LVU306
 299:lvgl/src/lv_widgets/lv_switch.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_DOWN) lv_switch_off(sw, LV_ANIM_ON);
 1114              		.loc 1 299 11 is_stmt 0 view .LVU307
 1115 00a8 132B     		cmp	r3, #19
 1116 00aa 0AD0     		beq	.L75
 299:lvgl/src/lv_widgets/lv_switch.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_DOWN) lv_switch_off(sw, LV_ANIM_ON);
 1117              		.loc 1 299 30 discriminator 2 view .LVU308
 1118 00ac 112B     		cmp	r3, #17
 1119 00ae 08D0     		beq	.L75
 300:lvgl/src/lv_widgets/lv_switch.c **** 
 1120              		.loc 1 300 14 is_stmt 1 view .LVU309
 300:lvgl/src/lv_widgets/lv_switch.c **** 
 1121              		.loc 1 300 16 is_stmt 0 view .LVU310
 1122 00b0 142B     		cmp	r3, #20
 1123 00b2 01D0     		beq	.L78
 300:lvgl/src/lv_widgets/lv_switch.c **** 
 1124              		.loc 1 300 34 discriminator 2 view .LVU311
 1125 00b4 122B     		cmp	r3, #18
 1126 00b6 08D1     		bne	.L77
 1127              	.L78:
 300:lvgl/src/lv_widgets/lv_switch.c **** 
 1128              		.loc 1 300 55 is_stmt 1 discriminator 3 view .LVU312
 1129 00b8 0121     		movs	r1, #1
 1130 00ba 3046     		mov	r0, r6
 1131              	.LVL131:
 300:lvgl/src/lv_widgets/lv_switch.c **** 
 1132              		.loc 1 300 55 is_stmt 0 discriminator 3 view .LVU313
 1133 00bc FFF7FEFF 		bl	lv_switch_off
 1134              	.LVL132:
 300:lvgl/src/lv_widgets/lv_switch.c **** 
 1135              		.loc 1 300 55 discriminator 3 view .LVU314
 1136 00c0 03E0     		b	.L77
 1137              	.LVL133:
 1138              	.L75:
 299:lvgl/src/lv_widgets/lv_switch.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_DOWN) lv_switch_off(sw, LV_ANIM_ON);
 1139              		.loc 1 299 49 is_stmt 1 discriminator 3 view .LVU315
 1140 00c2 0121     		movs	r1, #1
 1141 00c4 3046     		mov	r0, r6
 1142              	.LVL134:
 299:lvgl/src/lv_widgets/lv_switch.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_DOWN) lv_switch_off(sw, LV_ANIM_ON);
 1143              		.loc 1 299 49 is_stmt 0 discriminator 3 view .LVU316
 1144 00c6 FFF7FEFF 		bl	lv_switch_on
 1145              	.LVL135:
 1146              	.L77:
 302:lvgl/src/lv_widgets/lv_switch.c ****         if(res != LV_RES_OK) return res;
 1147              		.loc 1 302 9 is_stmt 1 view .LVU317
 302:lvgl/src/lv_widgets/lv_switch.c ****         if(res != LV_RES_OK) return res;
 1148              		.loc 1 302 17 is_stmt 0 view .LVU318
 1149 00ca 0022     		movs	r2, #0
 1150 00cc 1021     		movs	r1, #16
ARM GAS  D:\Temp\ccHSkmsm.s 			page 38


 1151 00ce 3046     		mov	r0, r6
 1152 00d0 FFF7FEFF 		bl	lv_event_send
 1153              	.LVL136:
 1154 00d4 0546     		mov	r5, r0
 1155              	.LVL137:
 303:lvgl/src/lv_widgets/lv_switch.c **** #endif
 1156              		.loc 1 303 9 is_stmt 1 view .LVU319
 1157 00d6 C3E7     		b	.L68
 1158              	.LVL138:
 1159              	.L89:
 303:lvgl/src/lv_widgets/lv_switch.c **** #endif
 1160              		.loc 1 303 9 is_stmt 0 view .LVU320
 1161              	.LBE54:
 1162              	.LBB55:
 307:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_right = lv_obj_get_style_pad_right(sw,  LV_SWITCH_PART_KNOB);
 1163              		.loc 1 307 9 is_stmt 1 view .LVU321
 1164              	.LBB56:
 1165              	.LBI56:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 1166              		.loc 2 112 1 view .LVU322
 1167              	.LBB57:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 1168              		.loc 2 112 1 view .LVU323
 1169 00d8 1222     		movs	r2, #18
 1170 00da 0221     		movs	r1, #2
 1171 00dc 3046     		mov	r0, r6
 1172              	.LVL139:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 1173              		.loc 2 112 1 is_stmt 0 view .LVU324
 1174 00de FFF7FEFF 		bl	_lv_obj_get_style_int
 1175              	.LVL140:
 1176 00e2 8046     		mov	r8, r0
 1177              	.LVL141:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 1178              		.loc 2 112 1 view .LVU325
 1179              	.LBE57:
 1180              	.LBE56:
 308:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_top = lv_obj_get_style_pad_top(sw,    LV_SWITCH_PART_KNOB);
 1181              		.loc 1 308 9 is_stmt 1 view .LVU326
 1182              	.LBB58:
 1183              	.LBI58:
 1184              		.loc 2 113 1 view .LVU327
 1185              	.LBB59:
 1186              		.loc 2 113 1 view .LVU328
 1187 00e4 1322     		movs	r2, #19
 1188 00e6 0221     		movs	r1, #2
 1189 00e8 3046     		mov	r0, r6
 1190 00ea FFF7FEFF 		bl	_lv_obj_get_style_int
 1191              	.LVL142:
 1192 00ee 0746     		mov	r7, r0
 1193              	.LVL143:
 1194              		.loc 2 113 1 is_stmt 0 view .LVU329
 1195              	.LBE59:
 1196              	.LBE58:
 309:lvgl/src/lv_widgets/lv_switch.c ****         lv_style_int_t knob_bottom = lv_obj_get_style_pad_bottom(sw, LV_SWITCH_PART_KNOB);
 1197              		.loc 1 309 9 is_stmt 1 view .LVU330
 1198              	.LBB60:
ARM GAS  D:\Temp\ccHSkmsm.s 			page 39


 1199              	.LBI60:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 1200              		.loc 2 110 1 view .LVU331
 1201              	.LBB61:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 1202              		.loc 2 110 1 view .LVU332
 1203 00f0 1022     		movs	r2, #16
 1204 00f2 0221     		movs	r1, #2
 1205 00f4 3046     		mov	r0, r6
 1206 00f6 FFF7FEFF 		bl	_lv_obj_get_style_int
 1207              	.LVL144:
 1208 00fa 8146     		mov	r9, r0
 1209              	.LVL145:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 1210              		.loc 2 110 1 is_stmt 0 view .LVU333
 1211              	.LBE61:
 1212              	.LBE60:
 310:lvgl/src/lv_widgets/lv_switch.c **** 
 1213              		.loc 1 310 9 is_stmt 1 view .LVU334
 1214              	.LBB62:
 1215              	.LBI62:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 1216              		.loc 2 111 1 view .LVU335
 1217              	.LBB63:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 1218              		.loc 2 111 1 view .LVU336
 1219 00fc 1122     		movs	r2, #17
 1220 00fe 0221     		movs	r1, #2
 1221 0100 3046     		mov	r0, r6
 1222 0102 FFF7FEFF 		bl	_lv_obj_get_style_int
 1223              	.LVL146:
 1224 0106 0446     		mov	r4, r0
 1225              	.LVL147:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 1226              		.loc 2 111 1 is_stmt 0 view .LVU337
 1227              	.LBE63:
 1228              	.LBE62:
 313:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 1229              		.loc 1 313 9 is_stmt 1 view .LVU338
 313:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 1230              		.loc 1 313 32 is_stmt 0 view .LVU339
 1231 0108 3046     		mov	r0, r6
 1232 010a FFF7FEFF 		bl	lv_obj_get_width
 1233              	.LVL148:
 1234 010e 8246     		mov	r10, r0
 1235 0110 3046     		mov	r0, r6
 1236 0112 FFF7FEFF 		bl	lv_obj_get_height
 1237              	.LVL149:
 313:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 1238              		.loc 1 313 20 view .LVU340
 1239 0116 8245     		cmp	r10, r0
 1240 0118 22DA     		bge	.L80
 313:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 1241              		.loc 1 313 32 discriminator 1 view .LVU341
 1242 011a 3046     		mov	r0, r6
 1243 011c FFF7FEFF 		bl	lv_obj_get_width
 1244              	.LVL150:
ARM GAS  D:\Temp\ccHSkmsm.s 			page 40


 313:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 1245              		.loc 1 313 20 discriminator 1 view .LVU342
 1246 0120 40F34F00 		sbfx	r0, r0, #1, #16
 1247              	.L81:
 1248              	.LVL151:
 314:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += 2;         /*For rounding error*/
 1249              		.loc 1 314 9 is_stmt 1 discriminator 4 view .LVU343
 314:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += 2;         /*For rounding error*/
 1250              		.loc 1 314 22 is_stmt 0 discriminator 4 view .LVU344
 1251 0124 4C45     		cmp	r4, r9
 1252 0126 B8BF     		it	lt
 1253 0128 4C46     		movlt	r4, r9
 1254              	.LVL152:
 314:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += 2;         /*For rounding error*/
 1255              		.loc 1 314 22 discriminator 4 view .LVU345
 1256 012a 24B2     		sxth	r4, r4
 1257 012c 4745     		cmp	r7, r8
 1258 012e B8BF     		it	lt
 1259 0130 4746     		movlt	r7, r8
 1260              	.LVL153:
 314:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += 2;         /*For rounding error*/
 1261              		.loc 1 314 22 discriminator 4 view .LVU346
 1262 0132 3FB2     		sxth	r7, r7
 1263 0134 BC42     		cmp	r4, r7
 1264 0136 B8BF     		it	lt
 1265 0138 3C46     		movlt	r4, r7
 314:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += 2;         /*For rounding error*/
 1266              		.loc 1 314 19 discriminator 4 view .LVU347
 1267 013a 10FA84F4 		uxtah	r4, r0, r4
 1268 013e A4B2     		uxth	r4, r4
 1269              	.LVL154:
 315:lvgl/src/lv_widgets/lv_switch.c **** 
 1270              		.loc 1 315 9 is_stmt 1 discriminator 4 view .LVU348
 315:lvgl/src/lv_widgets/lv_switch.c **** 
 1271              		.loc 1 315 19 is_stmt 0 discriminator 4 view .LVU349
 1272 0140 0234     		adds	r4, r4, #2
 1273              	.LVL155:
 315:lvgl/src/lv_widgets/lv_switch.c **** 
 1274              		.loc 1 315 19 discriminator 4 view .LVU350
 1275 0142 A4B2     		uxth	r4, r4
 1276              	.LVL156:
 317:lvgl/src/lv_widgets/lv_switch.c **** 
 1277              		.loc 1 317 9 is_stmt 1 discriminator 4 view .LVU351
 317:lvgl/src/lv_widgets/lv_switch.c **** 
 1278              		.loc 1 317 22 is_stmt 0 discriminator 4 view .LVU352
 1279 0144 0221     		movs	r1, #2
 1280 0146 3046     		mov	r0, r6
 1281 0148 FFF7FEFF 		bl	lv_obj_get_draw_rect_ext_pad_size
 1282              	.LVL157:
 317:lvgl/src/lv_widgets/lv_switch.c **** 
 1283              		.loc 1 317 19 discriminator 4 view .LVU353
 1284 014c 14FA80F0 		uxtah	r0, r4, r0
 1285 0150 00B2     		sxth	r0, r0
 1286              	.LVL158:
 320:lvgl/src/lv_widgets/lv_switch.c ****     }
 1287              		.loc 1 320 9 is_stmt 1 discriminator 4 view .LVU354
 320:lvgl/src/lv_widgets/lv_switch.c ****     }
ARM GAS  D:\Temp\ccHSkmsm.s 			page 41


 1288              		.loc 1 320 28 is_stmt 0 discriminator 4 view .LVU355
 1289 0152 B6F93240 		ldrsh	r4, [r6, #50]
 1290 0156 A042     		cmp	r0, r4
 1291 0158 B8BF     		it	lt
 1292 015a 2046     		movlt	r0, r4
 1293              	.LVL159:
 320:lvgl/src/lv_widgets/lv_switch.c ****     }
 1294              		.loc 1 320 26 discriminator 4 view .LVU356
 1295 015c 7086     		strh	r0, [r6, #50]	@ movhi
 1296              	.LBE55:
 1297 015e 7FE7     		b	.L68
 1298              	.LVL160:
 1299              	.L80:
 1300              	.LBB64:
 313:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 1301              		.loc 1 313 32 discriminator 2 view .LVU357
 1302 0160 3046     		mov	r0, r6
 1303 0162 FFF7FEFF 		bl	lv_obj_get_height
 1304              	.LVL161:
 313:lvgl/src/lv_widgets/lv_switch.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 1305              		.loc 1 313 20 discriminator 2 view .LVU358
 1306 0166 40F34F00 		sbfx	r0, r0, #1, #16
 1307 016a DBE7     		b	.L81
 1308              	.L94:
 1309              		.align	2
 1310              	.L93:
 1311 016c 00000000 		.word	.LANCHOR1
 1312 0170 00000000 		.word	.LC2
 1313              	.LBE64:
 1314              		.cfi_endproc
 1315              	.LFE482:
 1317              		.section	.text.lv_switch_toggle,"ax",%progbits
 1318              		.align	1
 1319              		.global	lv_switch_toggle
 1320              		.syntax unified
 1321              		.thumb
 1322              		.thumb_func
 1323              		.fpu fpv4-sp-d16
 1325              	lv_switch_toggle:
 1326              	.LVL162:
 1327              	.LFB480:
 159:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_OBJ(sw, LV_OBJX_NAME);
 1328              		.loc 1 159 1 is_stmt 1 view -0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 0
 1331              		@ frame_needed = 0, uses_anonymous_args = 0
 159:lvgl/src/lv_widgets/lv_switch.c ****     LV_ASSERT_OBJ(sw, LV_OBJX_NAME);
 1332              		.loc 1 159 1 is_stmt 0 view .LVU360
 1333 0000 70B5     		push	{r4, r5, r6, lr}
 1334              	.LCFI10:
 1335              		.cfi_def_cfa_offset 16
 1336              		.cfi_offset 4, -16
 1337              		.cfi_offset 5, -12
 1338              		.cfi_offset 6, -8
 1339              		.cfi_offset 14, -4
 1340 0002 0446     		mov	r4, r0
 1341 0004 0E46     		mov	r6, r1
ARM GAS  D:\Temp\ccHSkmsm.s 			page 42


 160:lvgl/src/lv_widgets/lv_switch.c **** 
 1342              		.loc 1 160 5 is_stmt 1 view .LVU361
 160:lvgl/src/lv_widgets/lv_switch.c **** 
 1343              		.loc 1 160 5 view .LVU362
 1344 0006 FFF7FEFF 		bl	lv_debug_check_null
 1345              	.LVL163:
 160:lvgl/src/lv_widgets/lv_switch.c **** 
 1346              		.loc 1 160 5 is_stmt 0 view .LVU363
 1347 000a 28B9     		cbnz	r0, .L96
 160:lvgl/src/lv_widgets/lv_switch.c **** 
 1348              		.loc 1 160 5 is_stmt 1 discriminator 1 view .LVU364
 160:lvgl/src/lv_widgets/lv_switch.c **** 
 1349              		.loc 1 160 5 discriminator 1 view .LVU365
 1350 000c 2246     		mov	r2, r4
 1351 000e 0023     		movs	r3, #0
 1352 0010 0B48     		ldr	r0, .L102
 1353 0012 FFF7FEFF 		bl	lv_debug_log_error
 1354              	.LVL164:
 1355              	.L97:
 160:lvgl/src/lv_widgets/lv_switch.c **** 
 1356              		.loc 1 160 5 discriminator 1 view .LVU366
 160:lvgl/src/lv_widgets/lv_switch.c **** 
 1357              		.loc 1 160 5 discriminator 1 view .LVU367
 1358 0016 FEE7     		b	.L97
 1359              	.L96:
 160:lvgl/src/lv_widgets/lv_switch.c **** 
 1360              		.loc 1 160 36 view .LVU368
 166:lvgl/src/lv_widgets/lv_switch.c ****     if(state)
 1361              		.loc 1 166 5 view .LVU369
 1362              	.LVL165:
 1363              	.LBB65:
 1364              	.LBI65:
 112:lvgl/src/lv_widgets/lv_switch.h **** {
 1365              		.loc 4 112 20 view .LVU370
 1366              	.LBB66:
 1367              		.loc 4 114 5 view .LVU371
 1368              		.loc 4 114 12 is_stmt 0 view .LVU372
 1369 0018 2046     		mov	r0, r4
 1370 001a FFF7FEFF 		bl	lv_bar_get_value
 1371              	.LVL166:
 1372 001e 0546     		mov	r5, r0
 1373              	.LVL167:
 1374              		.loc 4 114 12 view .LVU373
 1375              	.LBE66:
 1376              	.LBE65:
 167:lvgl/src/lv_widgets/lv_switch.c ****         lv_switch_off(sw, anim);
 1377              		.loc 1 167 5 is_stmt 1 view .LVU374
 167:lvgl/src/lv_widgets/lv_switch.c ****         lv_switch_off(sw, anim);
 1378              		.loc 1 167 7 is_stmt 0 view .LVU375
 1379 0020 0128     		cmp	r0, #1
 1380 0022 08D0     		beq	.L101
 170:lvgl/src/lv_widgets/lv_switch.c **** 
 1381              		.loc 1 170 9 is_stmt 1 view .LVU376
 1382 0024 3146     		mov	r1, r6
 1383 0026 2046     		mov	r0, r4
 1384              	.LVL168:
 170:lvgl/src/lv_widgets/lv_switch.c **** 
ARM GAS  D:\Temp\ccHSkmsm.s 			page 43


 1385              		.loc 1 170 9 is_stmt 0 view .LVU377
 1386 0028 FFF7FEFF 		bl	lv_switch_on
 1387              	.LVL169:
 1388              	.L99:
 172:lvgl/src/lv_widgets/lv_switch.c **** }
 1389              		.loc 1 172 5 is_stmt 1 view .LVU378
 173:lvgl/src/lv_widgets/lv_switch.c **** 
 1390              		.loc 1 173 1 is_stmt 0 view .LVU379
 1391 002c 15F1FF30 		adds	r0, r5, #-1
 1392 0030 18BF     		it	ne
 1393 0032 0120     		movne	r0, #1
 1394 0034 70BD     		pop	{r4, r5, r6, pc}
 1395              	.LVL170:
 1396              	.L101:
 168:lvgl/src/lv_widgets/lv_switch.c ****     else
 1397              		.loc 1 168 9 is_stmt 1 view .LVU380
 1398 0036 3146     		mov	r1, r6
 1399 0038 2046     		mov	r0, r4
 1400              	.LVL171:
 168:lvgl/src/lv_widgets/lv_switch.c ****     else
 1401              		.loc 1 168 9 is_stmt 0 view .LVU381
 1402 003a FFF7FEFF 		bl	lv_switch_off
 1403              	.LVL172:
 1404 003e F5E7     		b	.L99
 1405              	.L103:
 1406              		.align	2
 1407              	.L102:
 1408 0040 00000000 		.word	.LC0
 1409              		.cfi_endproc
 1410              	.LFE480:
 1412              		.section	.bss.ancestor_design,"aw",%nobits
 1413              		.align	2
 1414              		.set	.LANCHOR0,. + 0
 1417              	ancestor_design:
 1418 0000 00000000 		.space	4
 1419              		.section	.bss.ancestor_signal,"aw",%nobits
 1420              		.align	2
 1421              		.set	.LANCHOR1,. + 0
 1424              	ancestor_signal:
 1425 0000 00000000 		.space	4
 1426              		.section	.rodata.lv_switch_create.str1.4,"aMS",%progbits,1
 1427              		.align	2
 1428              	.LC1:
 1429 0000 4F757420 		.ascii	"Out of memory\000"
 1429      6F66206D 
 1429      656D6F72 
 1429      7900
 1430              		.section	.rodata.lv_switch_get_style.str1.4,"aMS",%progbits,1
 1431              		.align	2
 1432              	.LC0:
 1433 0000 4E554C4C 		.ascii	"NULL pointer\000"
 1433      20706F69 
 1433      6E746572 
 1433      00
 1434              		.section	.rodata.lv_switch_signal.str1.4,"aMS",%progbits,1
 1435              		.align	2
 1436              	.LC2:
ARM GAS  D:\Temp\ccHSkmsm.s 			page 44


 1437 0000 6C765F73 		.ascii	"lv_switch\000"
 1437      77697463 
 1437      6800
 1438              		.text
 1439              	.Letext0:
 1440              		.file 5 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 1441              		.file 6 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 1442              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 1443              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1444              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1445              		.file 10 "lvgl/lv_conf.h"
 1446              		.file 11 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 1447              		.file 12 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 1448              		.file 13 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 1449              		.file 14 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 1450              		.file 15 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_types.h"
 1451              		.file 16 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_mem.h"
 1452              		.file 17 "lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h"
 1453              		.file 18 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h"
 1454              		.file 19 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h"
 1455              		.file 20 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_blend.h"
 1456              		.file 21 "lvgl/src/lv_widgets/../lv_core/lv_style.h"
 1457              		.file 22 "lvgl/src/lv_widgets/../lv_core/../lv_hal/../lv_misc/lv_ll.h"
 1458              		.file 23 "lvgl/src/lv_widgets/../lv_core/lv_obj.h"
 1459              		.file 24 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_indev.h"
 1460              		.file 25 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_rect.h"
 1461              		.file 26 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_bidi.h"
 1462              		.file 27 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_txt.h"
 1463              		.file 28 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_label.h"
 1464              		.file 29 "lvgl/src/lv_widgets/../lv_core/../lv_core/lv_group.h"
 1465              		.file 30 "lvgl/src/lv_widgets/lv_bar.h"
 1466              		.file 31 "lvgl/src/lv_widgets/../lv_themes/lv_theme.h"
 1467              		.file 32 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_debug.h"
 1468              		.file 33 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_disp.h"
ARM GAS  D:\Temp\ccHSkmsm.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_switch.c
  D:\Temp\ccHSkmsm.s:18     .text.lv_switch_get_style:0000000000000000 $t
  D:\Temp\ccHSkmsm.s:25     .text.lv_switch_get_style:0000000000000000 lv_switch_get_style
  D:\Temp\ccHSkmsm.s:111    .text.lv_switch_get_style:000000000000003c $d
  D:\Temp\ccHSkmsm.s:116    .text.lv_switch_design:0000000000000000 $t
  D:\Temp\ccHSkmsm.s:122    .text.lv_switch_design:0000000000000000 lv_switch_design
  D:\Temp\ccHSkmsm.s:476    .text.lv_switch_design:0000000000000148 $d
  D:\Temp\ccHSkmsm.s:481    .text.lv_switch_create:0000000000000000 $t
  D:\Temp\ccHSkmsm.s:488    .text.lv_switch_create:0000000000000000 lv_switch_create
  D:\Temp\ccHSkmsm.s:746    .text.lv_switch_create:0000000000000134 $d
  D:\Temp\ccHSkmsm.s:912    .text.lv_switch_signal:0000000000000000 lv_switch_signal
  D:\Temp\ccHSkmsm.s:756    .text.lv_switch_on:0000000000000000 $t
  D:\Temp\ccHSkmsm.s:763    .text.lv_switch_on:0000000000000000 lv_switch_on
  D:\Temp\ccHSkmsm.s:826    .text.lv_switch_on:0000000000000038 $d
  D:\Temp\ccHSkmsm.s:831    .text.lv_switch_off:0000000000000000 $t
  D:\Temp\ccHSkmsm.s:838    .text.lv_switch_off:0000000000000000 lv_switch_off
  D:\Temp\ccHSkmsm.s:901    .text.lv_switch_off:0000000000000038 $d
  D:\Temp\ccHSkmsm.s:906    .text.lv_switch_signal:0000000000000000 $t
  D:\Temp\ccHSkmsm.s:1311   .text.lv_switch_signal:000000000000016c $d
  D:\Temp\ccHSkmsm.s:1318   .text.lv_switch_toggle:0000000000000000 $t
  D:\Temp\ccHSkmsm.s:1325   .text.lv_switch_toggle:0000000000000000 lv_switch_toggle
  D:\Temp\ccHSkmsm.s:1408   .text.lv_switch_toggle:0000000000000040 $d
  D:\Temp\ccHSkmsm.s:1413   .bss.ancestor_design:0000000000000000 $d
  D:\Temp\ccHSkmsm.s:1417   .bss.ancestor_design:0000000000000000 ancestor_design
  D:\Temp\ccHSkmsm.s:1420   .bss.ancestor_signal:0000000000000000 $d
  D:\Temp\ccHSkmsm.s:1424   .bss.ancestor_signal:0000000000000000 ancestor_signal
  D:\Temp\ccHSkmsm.s:1427   .rodata.lv_switch_create.str1.4:0000000000000000 $d
  D:\Temp\ccHSkmsm.s:1431   .rodata.lv_switch_get_style.str1.4:0000000000000000 $d
  D:\Temp\ccHSkmsm.s:1435   .rodata.lv_switch_signal.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
lv_debug_check_null
lv_debug_log_error
lv_obj_get_ext_attr
lv_obj_get_base_dir
lv_obj_get_width
lv_obj_get_height
_lv_obj_get_style_int
lv_draw_rect_dsc_init
lv_obj_init_draw_rect_dsc
lv_draw_rect
lv_bar_create
lv_obj_allocate_ext_attr
lv_style_list_init
lv_obj_set_signal_cb
lv_obj_set_design_cb
lv_style_list_copy
lv_obj_refresh_style
lv_obj_get_signal_cb
lv_obj_get_design_cb
lv_obj_del
lv_obj_set_click
lv_obj_add_protect
lv_disp_get_dpi
lv_obj_set_size
lv_bar_set_range
ARM GAS  D:\Temp\ccHSkmsm.s 			page 46


lv_theme_apply
lv_bar_get_value
lv_bar_set_value
lv_obj_add_state
lv_obj_clear_state
lv_obj_handle_get_type_signal
lv_obj_clean_style_list
lv_event_send
lv_obj_get_draw_rect_ext_pad_size
