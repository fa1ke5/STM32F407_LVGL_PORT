ARM GAS  D:\Temp\cc5ZVeii.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_txt.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_txt_utf8_size,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	lv_txt_utf8_size:
  26              	.LVL0:
  27              	.LFB175:
  28              		.file 1 "lvgl/src/lv_misc/lv_txt.c"
   1:lvgl/src/lv_misc/lv_txt.c **** /**
   2:lvgl/src/lv_misc/lv_txt.c ****  * @file lv_text.c
   3:lvgl/src/lv_misc/lv_txt.c ****  *
   4:lvgl/src/lv_misc/lv_txt.c ****  */
   5:lvgl/src/lv_misc/lv_txt.c **** 
   6:lvgl/src/lv_misc/lv_txt.c **** /*********************
   7:lvgl/src/lv_misc/lv_txt.c ****  *      INCLUDES
   8:lvgl/src/lv_misc/lv_txt.c ****  *********************/
   9:lvgl/src/lv_misc/lv_txt.c **** #include <stdarg.h>
  10:lvgl/src/lv_misc/lv_txt.c **** #include "lv_txt.h"
  11:lvgl/src/lv_misc/lv_txt.c **** #include "lv_txt_ap.h"
  12:lvgl/src/lv_misc/lv_txt.c **** #include "lv_math.h"
  13:lvgl/src/lv_misc/lv_txt.c **** #include "lv_log.h"
  14:lvgl/src/lv_misc/lv_txt.c **** #include "lv_debug.h"
  15:lvgl/src/lv_misc/lv_txt.c **** 
  16:lvgl/src/lv_misc/lv_txt.c **** /*********************
  17:lvgl/src/lv_misc/lv_txt.c ****  *      DEFINES
  18:lvgl/src/lv_misc/lv_txt.c ****  *********************/
  19:lvgl/src/lv_misc/lv_txt.c **** #define NO_BREAK_FOUND UINT32_MAX
  20:lvgl/src/lv_misc/lv_txt.c **** 
  21:lvgl/src/lv_misc/lv_txt.c **** /**********************
  22:lvgl/src/lv_misc/lv_txt.c ****  *      TYPEDEFS
  23:lvgl/src/lv_misc/lv_txt.c ****  **********************/
  24:lvgl/src/lv_misc/lv_txt.c **** 
  25:lvgl/src/lv_misc/lv_txt.c **** /**********************
  26:lvgl/src/lv_misc/lv_txt.c ****  *  STATIC PROTOTYPES
  27:lvgl/src/lv_misc/lv_txt.c ****  **********************/
  28:lvgl/src/lv_misc/lv_txt.c **** static inline bool is_break_char(uint32_t letter);
  29:lvgl/src/lv_misc/lv_txt.c **** 
  30:lvgl/src/lv_misc/lv_txt.c **** #if LV_TXT_ENC == LV_TXT_ENC_UTF8
ARM GAS  D:\Temp\cc5ZVeii.s 			page 2


  31:lvgl/src/lv_misc/lv_txt.c ****     static uint8_t lv_txt_utf8_size(const char * str);
  32:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_unicode_to_utf8(uint32_t letter_uni);
  33:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_utf8_conv_wc(uint32_t c);
  34:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_utf8_next(const char * txt, uint32_t * i);
  35:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_utf8_prev(const char * txt, uint32_t * i_start);
  36:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_utf8_get_byte_id(const char * txt, uint32_t utf8_id);
  37:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_utf8_get_char_id(const char * txt, uint32_t byte_id);
  38:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_utf8_get_length(const char * txt);
  39:lvgl/src/lv_misc/lv_txt.c **** #elif LV_TXT_ENC == LV_TXT_ENC_ASCII
  40:lvgl/src/lv_misc/lv_txt.c ****     static uint8_t lv_txt_iso8859_1_size(const char * str);
  41:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_unicode_to_iso8859_1(uint32_t letter_uni);
  42:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_conv_wc(uint32_t c);
  43:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_next(const char * txt, uint32_t * i);
  44:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_prev(const char * txt, uint32_t * i_start);
  45:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_get_byte_id(const char * txt, uint32_t utf8_id);
  46:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_get_char_id(const char * txt, uint32_t byte_id);
  47:lvgl/src/lv_misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_get_length(const char * txt);
  48:lvgl/src/lv_misc/lv_txt.c **** #endif
  49:lvgl/src/lv_misc/lv_txt.c **** /**********************
  50:lvgl/src/lv_misc/lv_txt.c ****  *  STATIC VARIABLES
  51:lvgl/src/lv_misc/lv_txt.c ****  **********************/
  52:lvgl/src/lv_misc/lv_txt.c **** 
  53:lvgl/src/lv_misc/lv_txt.c **** /**********************
  54:lvgl/src/lv_misc/lv_txt.c ****  *  GLOBAL VARIABLES
  55:lvgl/src/lv_misc/lv_txt.c ****  **********************/
  56:lvgl/src/lv_misc/lv_txt.c **** #if LV_TXT_ENC == LV_TXT_ENC_UTF8
  57:lvgl/src/lv_misc/lv_txt.c ****     uint8_t (*_lv_txt_encoded_size)(const char *)                   = lv_txt_utf8_size;
  58:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_unicode_to_encoded)(uint32_t)                = lv_txt_unicode_to_utf8;
  59:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_conv_wc)(uint32_t)                   = lv_txt_utf8_conv_wc;
  60:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_next)(const char *, uint32_t *)      = lv_txt_utf8_next;
  61:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_prev)(const char *, uint32_t *)      = lv_txt_utf8_prev;
  62:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_get_byte_id)(const char *, uint32_t) = lv_txt_utf8_get_byte_id;
  63:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_get_char_id)(const char *, uint32_t) = lv_txt_utf8_get_char_id;
  64:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_get_encoded_length)(const char *)            = lv_txt_utf8_get_length;
  65:lvgl/src/lv_misc/lv_txt.c **** #elif LV_TXT_ENC == LV_TXT_ENC_ASCII
  66:lvgl/src/lv_misc/lv_txt.c ****     uint8_t (*_lv_txt_encoded_size)(const char *)                   = lv_txt_iso8859_1_size;
  67:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_unicode_to_encoded)(uint32_t)                = lv_txt_unicode_to_iso8859_1;
  68:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_conv_wc)(uint32_t)                   = lv_txt_iso8859_1_conv_wc;
  69:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_next)(const char *, uint32_t *)      = lv_txt_iso8859_1_next;
  70:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_prev)(const char *, uint32_t *)      = lv_txt_iso8859_1_prev;
  71:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_get_byte_id)(const char *, uint32_t) = lv_txt_iso8859_1_get_byte_id;
  72:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_get_char_id)(const char *, uint32_t)     = lv_txt_iso8859_1_get_char
  73:lvgl/src/lv_misc/lv_txt.c ****     uint32_t (*_lv_txt_get_encoded_length)(const char *)            = lv_txt_iso8859_1_get_length;
  74:lvgl/src/lv_misc/lv_txt.c **** 
  75:lvgl/src/lv_misc/lv_txt.c **** #endif
  76:lvgl/src/lv_misc/lv_txt.c **** 
  77:lvgl/src/lv_misc/lv_txt.c **** /**********************
  78:lvgl/src/lv_misc/lv_txt.c ****  *      MACROS
  79:lvgl/src/lv_misc/lv_txt.c ****  **********************/
  80:lvgl/src/lv_misc/lv_txt.c **** 
  81:lvgl/src/lv_misc/lv_txt.c **** /**********************
  82:lvgl/src/lv_misc/lv_txt.c ****  *   GLOBAL FUNCTIONS
  83:lvgl/src/lv_misc/lv_txt.c ****  **********************/
  84:lvgl/src/lv_misc/lv_txt.c **** 
  85:lvgl/src/lv_misc/lv_txt.c **** /**
  86:lvgl/src/lv_misc/lv_txt.c ****  * Get size of a text
  87:lvgl/src/lv_misc/lv_txt.c ****  * @param size_res pointer to a 'point_t' variable to store the result
ARM GAS  D:\Temp\cc5ZVeii.s 			page 3


  88:lvgl/src/lv_misc/lv_txt.c ****  * @param text pointer to a text
  89:lvgl/src/lv_misc/lv_txt.c ****  * @param font pointer to font of the text
  90:lvgl/src/lv_misc/lv_txt.c ****  * @param letter_space letter space of the text
  91:lvgl/src/lv_misc/lv_txt.c ****  * @param txt.line_space line space of the text
  92:lvgl/src/lv_misc/lv_txt.c ****  * @param flags settings for the text from 'txt_flag_t' enum
  93:lvgl/src/lv_misc/lv_txt.c ****  * @param max_width max with of the text (break the lines to fit this size) Set CORD_MAX to avoid
  94:lvgl/src/lv_misc/lv_txt.c ****  * line breaks
  95:lvgl/src/lv_misc/lv_txt.c ****  */
  96:lvgl/src/lv_misc/lv_txt.c **** void _lv_txt_get_size(lv_point_t * size_res, const char * text, const lv_font_t * font, lv_coord_t 
  97:lvgl/src/lv_misc/lv_txt.c ****                       lv_coord_t line_space, lv_coord_t max_width, lv_txt_flag_t flag)
  98:lvgl/src/lv_misc/lv_txt.c **** {
  99:lvgl/src/lv_misc/lv_txt.c ****     size_res->x = 0;
 100:lvgl/src/lv_misc/lv_txt.c ****     size_res->y = 0;
 101:lvgl/src/lv_misc/lv_txt.c **** 
 102:lvgl/src/lv_misc/lv_txt.c ****     if(text == NULL) return;
 103:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return;
 104:lvgl/src/lv_misc/lv_txt.c **** 
 105:lvgl/src/lv_misc/lv_txt.c ****     if(flag & LV_TXT_FLAG_EXPAND) max_width = LV_COORD_MAX;
 106:lvgl/src/lv_misc/lv_txt.c **** 
 107:lvgl/src/lv_misc/lv_txt.c ****     uint32_t line_start     = 0;
 108:lvgl/src/lv_misc/lv_txt.c ****     uint32_t new_line_start = 0;
 109:lvgl/src/lv_misc/lv_txt.c ****     uint16_t letter_height = lv_font_get_line_height(font);
 110:lvgl/src/lv_misc/lv_txt.c **** 
 111:lvgl/src/lv_misc/lv_txt.c ****     /*Calc. the height and longest line*/
 112:lvgl/src/lv_misc/lv_txt.c ****     while(text[line_start] != '\0') {
 113:lvgl/src/lv_misc/lv_txt.c ****         new_line_start += _lv_txt_get_next_line(&text[line_start], font, letter_space, max_width, f
 114:lvgl/src/lv_misc/lv_txt.c **** 
 115:lvgl/src/lv_misc/lv_txt.c ****         if((unsigned long)size_res->y + (unsigned long)letter_height + (unsigned long)line_space > 
 116:lvgl/src/lv_misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 117:lvgl/src/lv_misc/lv_txt.c ****             return;
 118:lvgl/src/lv_misc/lv_txt.c ****         }
 119:lvgl/src/lv_misc/lv_txt.c ****         else {
 120:lvgl/src/lv_misc/lv_txt.c ****             size_res->y += letter_height;
 121:lvgl/src/lv_misc/lv_txt.c ****             size_res->y += line_space;
 122:lvgl/src/lv_misc/lv_txt.c ****         }
 123:lvgl/src/lv_misc/lv_txt.c **** 
 124:lvgl/src/lv_misc/lv_txt.c ****         /*Calculate the longest line*/
 125:lvgl/src/lv_misc/lv_txt.c ****         lv_coord_t act_line_length = _lv_txt_get_width(&text[line_start], new_line_start - line_sta
 126:lvgl/src/lv_misc/lv_txt.c ****                                                        flag);
 127:lvgl/src/lv_misc/lv_txt.c **** 
 128:lvgl/src/lv_misc/lv_txt.c ****         size_res->x = LV_MATH_MAX(act_line_length, size_res->x);
 129:lvgl/src/lv_misc/lv_txt.c ****         line_start  = new_line_start;
 130:lvgl/src/lv_misc/lv_txt.c ****     }
 131:lvgl/src/lv_misc/lv_txt.c **** 
 132:lvgl/src/lv_misc/lv_txt.c ****     /*Make the text one line taller if the last character is '\n' or '\r'*/
 133:lvgl/src/lv_misc/lv_txt.c ****     if((line_start != 0) && (text[line_start - 1] == '\n' || text[line_start - 1] == '\r')) {
 134:lvgl/src/lv_misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 135:lvgl/src/lv_misc/lv_txt.c ****     }
 136:lvgl/src/lv_misc/lv_txt.c **** 
 137:lvgl/src/lv_misc/lv_txt.c ****     /*Correction with the last line space or set the height manually if the text is empty*/
 138:lvgl/src/lv_misc/lv_txt.c ****     if(size_res->y == 0)
 139:lvgl/src/lv_misc/lv_txt.c ****         size_res->y = letter_height;
 140:lvgl/src/lv_misc/lv_txt.c ****     else
 141:lvgl/src/lv_misc/lv_txt.c ****         size_res->y -= line_space;
 142:lvgl/src/lv_misc/lv_txt.c **** }
 143:lvgl/src/lv_misc/lv_txt.c **** 
 144:lvgl/src/lv_misc/lv_txt.c **** /**
ARM GAS  D:\Temp\cc5ZVeii.s 			page 4


 145:lvgl/src/lv_misc/lv_txt.c ****  * Get the next word of text. A word is delimited by break characters.
 146:lvgl/src/lv_misc/lv_txt.c ****  *
 147:lvgl/src/lv_misc/lv_txt.c ****  * If the word cannot fit in the max_width space, obey LV_TXT_LINE_BREAK_LONG_* rules.
 148:lvgl/src/lv_misc/lv_txt.c ****  *
 149:lvgl/src/lv_misc/lv_txt.c ****  * If the next word cannot fit anything, return 0.
 150:lvgl/src/lv_misc/lv_txt.c ****  *
 151:lvgl/src/lv_misc/lv_txt.c ****  * If the first character is a break character, returns the next index.
 152:lvgl/src/lv_misc/lv_txt.c ****  *
 153:lvgl/src/lv_misc/lv_txt.c ****  * Example calls from lv_txt_get_next_line() assuming sufficient max_width and
 154:lvgl/src/lv_misc/lv_txt.c ****  * txt = "Test text\n"
 155:lvgl/src/lv_misc/lv_txt.c ****  *        0123456789
 156:lvgl/src/lv_misc/lv_txt.c ****  *
 157:lvgl/src/lv_misc/lv_txt.c ****  * Calls would be as follows:
 158:lvgl/src/lv_misc/lv_txt.c ****  *     1. Return i=4, pointing at breakchar ' ', for the string "Test"
 159:lvgl/src/lv_misc/lv_txt.c ****  *     2. Return i=5, since i=4 was a breakchar.
 160:lvgl/src/lv_misc/lv_txt.c ****  *     3. Return i=9, pointing at breakchar '\n'
 161:lvgl/src/lv_misc/lv_txt.c ****  *     4. Parenting lv_txt_get_next_line() would detect subsequent '\0'
 162:lvgl/src/lv_misc/lv_txt.c ****  *
 163:lvgl/src/lv_misc/lv_txt.c ****  * TODO: Returned word_w_ptr may overestimate the returned word's width when
 164:lvgl/src/lv_misc/lv_txt.c ****  * max_width is reached. In current usage, this has no impact.
 165:lvgl/src/lv_misc/lv_txt.c ****  *
 166:lvgl/src/lv_misc/lv_txt.c ****  * @param txt a '\0' terminated string
 167:lvgl/src/lv_misc/lv_txt.c ****  * @param font pointer to a font
 168:lvgl/src/lv_misc/lv_txt.c ****  * @param letter_space letter space
 169:lvgl/src/lv_misc/lv_txt.c ****  * @param max_width max with of the text (break the lines to fit this size) Set CORD_MAX to avoid l
 170:lvgl/src/lv_misc/lv_txt.c ****  * @param flags settings for the text from 'txt_flag_type' enum
 171:lvgl/src/lv_misc/lv_txt.c ****  * @param[out] word_w_ptr width (in pixels) of the parsed word. May be NULL.
 172:lvgl/src/lv_misc/lv_txt.c ****  * @param force Force return the fraction of the word that can fit in the provided space.
 173:lvgl/src/lv_misc/lv_txt.c ****  * @return the index of the first char of the next word (in byte index not letter index. With UTF-8
 174:lvgl/src/lv_misc/lv_txt.c ****  */
 175:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_get_next_word(const char * txt, const lv_font_t * font,
 176:lvgl/src/lv_misc/lv_txt.c ****                                      lv_coord_t letter_space, lv_coord_t max_width,
 177:lvgl/src/lv_misc/lv_txt.c ****                                      lv_txt_flag_t flag, uint32_t * word_w_ptr, lv_txt_cmd_state_t 
 178:lvgl/src/lv_misc/lv_txt.c **** {
 179:lvgl/src/lv_misc/lv_txt.c ****     if(txt == NULL || txt[0] == '\0') return 0;
 180:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 181:lvgl/src/lv_misc/lv_txt.c **** 
 182:lvgl/src/lv_misc/lv_txt.c ****     if(flag & LV_TXT_FLAG_EXPAND) max_width = LV_COORD_MAX;
 183:lvgl/src/lv_misc/lv_txt.c **** 
 184:lvgl/src/lv_misc/lv_txt.c ****     uint32_t i = 0, i_next = 0, i_next_next = 0;  /* Iterating index into txt */
 185:lvgl/src/lv_misc/lv_txt.c ****     uint32_t letter = 0;      /* Letter at i */
 186:lvgl/src/lv_misc/lv_txt.c ****     uint32_t letter_next = 0; /* Letter at i_next */
 187:lvgl/src/lv_misc/lv_txt.c ****     lv_coord_t letter_w;
 188:lvgl/src/lv_misc/lv_txt.c ****     lv_coord_t cur_w = 0;  /* Pixel Width of transversed string */
 189:lvgl/src/lv_misc/lv_txt.c ****     uint32_t word_len = 0;   /* Number of characters in the transversed word */
 190:lvgl/src/lv_misc/lv_txt.c ****     uint32_t break_index = NO_BREAK_FOUND; /* only used for "long" words */
 191:lvgl/src/lv_misc/lv_txt.c ****     uint32_t break_letter_count = 0; /* Number of characters up to the long word break point */
 192:lvgl/src/lv_misc/lv_txt.c **** 
 193:lvgl/src/lv_misc/lv_txt.c ****     letter = _lv_txt_encoded_next(txt, &i_next);
 194:lvgl/src/lv_misc/lv_txt.c ****     i_next_next = i_next;
 195:lvgl/src/lv_misc/lv_txt.c **** 
 196:lvgl/src/lv_misc/lv_txt.c ****     /* Obtain the full word, regardless if it fits or not in max_width */
 197:lvgl/src/lv_misc/lv_txt.c ****     while(txt[i] != '\0') {
 198:lvgl/src/lv_misc/lv_txt.c ****         letter_next = _lv_txt_encoded_next(txt, &i_next_next);
 199:lvgl/src/lv_misc/lv_txt.c ****         word_len++;
 200:lvgl/src/lv_misc/lv_txt.c **** 
 201:lvgl/src/lv_misc/lv_txt.c ****         /*Handle the recolor command*/
ARM GAS  D:\Temp\cc5ZVeii.s 			page 5


 202:lvgl/src/lv_misc/lv_txt.c ****         if((flag & LV_TXT_FLAG_RECOLOR) != 0) {
 203:lvgl/src/lv_misc/lv_txt.c ****             if(_lv_txt_is_cmd(cmd_state, letter) != false) {
 204:lvgl/src/lv_misc/lv_txt.c ****                 i = i_next;
 205:lvgl/src/lv_misc/lv_txt.c ****                 i_next = i_next_next;
 206:lvgl/src/lv_misc/lv_txt.c ****                 letter = letter_next;
 207:lvgl/src/lv_misc/lv_txt.c ****                 continue;   /*Skip the letter is it is part of a command*/
 208:lvgl/src/lv_misc/lv_txt.c ****             }
 209:lvgl/src/lv_misc/lv_txt.c ****         }
 210:lvgl/src/lv_misc/lv_txt.c **** 
 211:lvgl/src/lv_misc/lv_txt.c ****         letter_w = lv_font_get_glyph_width(font, letter, letter_next);
 212:lvgl/src/lv_misc/lv_txt.c ****         cur_w += letter_w;
 213:lvgl/src/lv_misc/lv_txt.c **** 
 214:lvgl/src/lv_misc/lv_txt.c ****         if(letter_w > 0) {
 215:lvgl/src/lv_misc/lv_txt.c ****             cur_w += letter_space;
 216:lvgl/src/lv_misc/lv_txt.c ****         }
 217:lvgl/src/lv_misc/lv_txt.c **** 
 218:lvgl/src/lv_misc/lv_txt.c ****         /* Test if this character fits within max_width */
 219:lvgl/src/lv_misc/lv_txt.c ****         if(break_index == NO_BREAK_FOUND && (cur_w - letter_space) > max_width) {
 220:lvgl/src/lv_misc/lv_txt.c ****             break_index = i;
 221:lvgl/src/lv_misc/lv_txt.c ****             break_letter_count = word_len - 1;
 222:lvgl/src/lv_misc/lv_txt.c ****             /* break_index is now pointing at the character that doesn't fit */
 223:lvgl/src/lv_misc/lv_txt.c ****         }
 224:lvgl/src/lv_misc/lv_txt.c **** 
 225:lvgl/src/lv_misc/lv_txt.c ****         /*Check for new line chars and breakchars*/
 226:lvgl/src/lv_misc/lv_txt.c ****         if(letter == '\n' || letter == '\r' || is_break_char(letter)) {
 227:lvgl/src/lv_misc/lv_txt.c ****             /* Update the output width on the first character if it fits.
 228:lvgl/src/lv_misc/lv_txt.c ****              * Must do this here in case first letter is a break character. */
 229:lvgl/src/lv_misc/lv_txt.c ****             if(i == 0 && break_index == NO_BREAK_FOUND && word_w_ptr != NULL) *word_w_ptr = cur_w;
 230:lvgl/src/lv_misc/lv_txt.c ****             word_len--;
 231:lvgl/src/lv_misc/lv_txt.c ****             break;
 232:lvgl/src/lv_misc/lv_txt.c ****         }
 233:lvgl/src/lv_misc/lv_txt.c **** 
 234:lvgl/src/lv_misc/lv_txt.c ****         /* Update the output width */
 235:lvgl/src/lv_misc/lv_txt.c ****         if(word_w_ptr != NULL && break_index == NO_BREAK_FOUND) *word_w_ptr = cur_w;
 236:lvgl/src/lv_misc/lv_txt.c **** 
 237:lvgl/src/lv_misc/lv_txt.c ****         i = i_next;
 238:lvgl/src/lv_misc/lv_txt.c ****         i_next = i_next_next;
 239:lvgl/src/lv_misc/lv_txt.c ****         letter = letter_next;
 240:lvgl/src/lv_misc/lv_txt.c ****     }
 241:lvgl/src/lv_misc/lv_txt.c **** 
 242:lvgl/src/lv_misc/lv_txt.c ****     /* Entire Word fits in the provided space */
 243:lvgl/src/lv_misc/lv_txt.c ****     if(break_index == NO_BREAK_FOUND) {
 244:lvgl/src/lv_misc/lv_txt.c ****         if(word_len == 0 || (letter == '\r' && letter_next == '\n')) i = i_next;
 245:lvgl/src/lv_misc/lv_txt.c ****         return i;
 246:lvgl/src/lv_misc/lv_txt.c ****     }
 247:lvgl/src/lv_misc/lv_txt.c **** 
 248:lvgl/src/lv_misc/lv_txt.c **** #if LV_TXT_LINE_BREAK_LONG_LEN > 0
 249:lvgl/src/lv_misc/lv_txt.c ****     /* Word doesn't fit in provided space, but isn't "long" */
 250:lvgl/src/lv_misc/lv_txt.c ****     if(word_len < LV_TXT_LINE_BREAK_LONG_LEN) {
 251:lvgl/src/lv_misc/lv_txt.c ****         if(force) return break_index;
 252:lvgl/src/lv_misc/lv_txt.c ****         if(word_w_ptr != NULL) *word_w_ptr = 0; /* Return no word */
 253:lvgl/src/lv_misc/lv_txt.c ****         return 0;
 254:lvgl/src/lv_misc/lv_txt.c ****     }
 255:lvgl/src/lv_misc/lv_txt.c **** 
 256:lvgl/src/lv_misc/lv_txt.c ****     /* Word is "long," but insufficient amounts can fit in provided space */
 257:lvgl/src/lv_misc/lv_txt.c ****     if(break_letter_count < LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN) {
 258:lvgl/src/lv_misc/lv_txt.c ****         if(force) return break_index;
ARM GAS  D:\Temp\cc5ZVeii.s 			page 6


 259:lvgl/src/lv_misc/lv_txt.c ****         if(word_w_ptr != NULL) *word_w_ptr = 0;
 260:lvgl/src/lv_misc/lv_txt.c ****         return 0;
 261:lvgl/src/lv_misc/lv_txt.c ****     }
 262:lvgl/src/lv_misc/lv_txt.c **** 
 263:lvgl/src/lv_misc/lv_txt.c ****     /* Word is a "long", but letters may need to be better distributed */
 264:lvgl/src/lv_misc/lv_txt.c ****     {
 265:lvgl/src/lv_misc/lv_txt.c ****         i = break_index;
 266:lvgl/src/lv_misc/lv_txt.c ****         int32_t n_move = LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN - (word_len - break_letter_count);
 267:lvgl/src/lv_misc/lv_txt.c ****         /* Move pointer "i" backwards */
 268:lvgl/src/lv_misc/lv_txt.c ****         for(; n_move > 0; n_move--) {
 269:lvgl/src/lv_misc/lv_txt.c ****             _lv_txt_encoded_prev(txt, &i);
 270:lvgl/src/lv_misc/lv_txt.c ****             // TODO: it would be appropriate to update the returned word width here
 271:lvgl/src/lv_misc/lv_txt.c ****             // However, in current usage, this doesn't impact anything.
 272:lvgl/src/lv_misc/lv_txt.c ****         }
 273:lvgl/src/lv_misc/lv_txt.c ****     }
 274:lvgl/src/lv_misc/lv_txt.c ****     return i;
 275:lvgl/src/lv_misc/lv_txt.c **** #else
 276:lvgl/src/lv_misc/lv_txt.c ****     if(force) return break_index;
 277:lvgl/src/lv_misc/lv_txt.c ****     if(word_w_ptr != NULL) *word_w_ptr = 0; /* Return no word */
 278:lvgl/src/lv_misc/lv_txt.c ****     (void) break_letter_count;
 279:lvgl/src/lv_misc/lv_txt.c ****     return 0;
 280:lvgl/src/lv_misc/lv_txt.c **** #endif
 281:lvgl/src/lv_misc/lv_txt.c **** }
 282:lvgl/src/lv_misc/lv_txt.c **** 
 283:lvgl/src/lv_misc/lv_txt.c **** /**
 284:lvgl/src/lv_misc/lv_txt.c ****  * Get the next line of text. Check line length and break chars too.
 285:lvgl/src/lv_misc/lv_txt.c ****  *
 286:lvgl/src/lv_misc/lv_txt.c ****  * A line of txt includes the \n character.
 287:lvgl/src/lv_misc/lv_txt.c ****  *
 288:lvgl/src/lv_misc/lv_txt.c ****  * @param txt a '\0' terminated string
 289:lvgl/src/lv_misc/lv_txt.c ****  * @param font pointer to a font
 290:lvgl/src/lv_misc/lv_txt.c ****  * @param letter_space letter space
 291:lvgl/src/lv_misc/lv_txt.c ****  * @param max_width max with of the text (break the lines to fit this size) Set CORD_MAX to avoid l
 292:lvgl/src/lv_misc/lv_txt.c ****  * @param flags settings for the text from 'txt_flag_type' enum
 293:lvgl/src/lv_misc/lv_txt.c ****  * @return the index of the first char of the new line (in byte index not letter index. With UTF-8 
 294:lvgl/src/lv_misc/lv_txt.c ****  */
 295:lvgl/src/lv_misc/lv_txt.c **** uint32_t _lv_txt_get_next_line(const char * txt, const lv_font_t * font,
 296:lvgl/src/lv_misc/lv_txt.c ****                                lv_coord_t letter_space, lv_coord_t max_width, lv_txt_flag_t flag)
 297:lvgl/src/lv_misc/lv_txt.c **** {
 298:lvgl/src/lv_misc/lv_txt.c ****     if(txt == NULL) return 0;
 299:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 300:lvgl/src/lv_misc/lv_txt.c **** 
 301:lvgl/src/lv_misc/lv_txt.c ****     /* If max_width doesn't mater simply find the new line character
 302:lvgl/src/lv_misc/lv_txt.c ****      * without thinking about word wrapping*/
 303:lvgl/src/lv_misc/lv_txt.c ****     if((flag & LV_TXT_FLAG_EXPAND) || (flag & LV_TXT_FLAG_FIT)) {
 304:lvgl/src/lv_misc/lv_txt.c ****         uint32_t i;
 305:lvgl/src/lv_misc/lv_txt.c ****         for(i = 0; txt[i] != '\n' && txt[i] != '\r' && txt[i] != '\0'; i++) {
 306:lvgl/src/lv_misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 307:lvgl/src/lv_misc/lv_txt.c ****         }
 308:lvgl/src/lv_misc/lv_txt.c ****         if(txt[i] != '\0') i++;    /*To go beyond `\n`*/
 309:lvgl/src/lv_misc/lv_txt.c ****         return i;
 310:lvgl/src/lv_misc/lv_txt.c ****     }
 311:lvgl/src/lv_misc/lv_txt.c **** 
 312:lvgl/src/lv_misc/lv_txt.c ****     if(flag & LV_TXT_FLAG_EXPAND) max_width = LV_COORD_MAX;
 313:lvgl/src/lv_misc/lv_txt.c ****     lv_txt_cmd_state_t cmd_state = LV_TXT_CMD_STATE_WAIT;
 314:lvgl/src/lv_misc/lv_txt.c ****     uint32_t i = 0;                                        /* Iterating index into txt */
 315:lvgl/src/lv_misc/lv_txt.c **** 
ARM GAS  D:\Temp\cc5ZVeii.s 			page 7


 316:lvgl/src/lv_misc/lv_txt.c ****     while(txt[i] != '\0' && max_width > 0) {
 317:lvgl/src/lv_misc/lv_txt.c ****         uint32_t word_w = 0;
 318:lvgl/src/lv_misc/lv_txt.c ****         uint32_t advance = lv_txt_get_next_word(&txt[i], font, letter_space, max_width, flag, &word
 319:lvgl/src/lv_misc/lv_txt.c ****         max_width -= word_w;
 320:lvgl/src/lv_misc/lv_txt.c **** 
 321:lvgl/src/lv_misc/lv_txt.c ****         if(advance == 0) {
 322:lvgl/src/lv_misc/lv_txt.c ****             if(i == 0) _lv_txt_encoded_next(txt, &i); // prevent inf loops
 323:lvgl/src/lv_misc/lv_txt.c ****             break;
 324:lvgl/src/lv_misc/lv_txt.c ****         }
 325:lvgl/src/lv_misc/lv_txt.c **** 
 326:lvgl/src/lv_misc/lv_txt.c ****         i += advance;
 327:lvgl/src/lv_misc/lv_txt.c **** 
 328:lvgl/src/lv_misc/lv_txt.c ****         if(txt[0] == '\n' || txt[0] == '\r') break;
 329:lvgl/src/lv_misc/lv_txt.c **** 
 330:lvgl/src/lv_misc/lv_txt.c ****         if(txt[i] == '\n' || txt[i] == '\r') {
 331:lvgl/src/lv_misc/lv_txt.c ****             i++;  /* Include the following newline in the current line */
 332:lvgl/src/lv_misc/lv_txt.c ****             break;
 333:lvgl/src/lv_misc/lv_txt.c ****         }
 334:lvgl/src/lv_misc/lv_txt.c **** 
 335:lvgl/src/lv_misc/lv_txt.c ****     }
 336:lvgl/src/lv_misc/lv_txt.c **** 
 337:lvgl/src/lv_misc/lv_txt.c ****     /* Always step at least one to avoid infinite loops */
 338:lvgl/src/lv_misc/lv_txt.c ****     if(i == 0) {
 339:lvgl/src/lv_misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i);
 340:lvgl/src/lv_misc/lv_txt.c ****     }
 341:lvgl/src/lv_misc/lv_txt.c **** 
 342:lvgl/src/lv_misc/lv_txt.c ****     return i;
 343:lvgl/src/lv_misc/lv_txt.c **** }
 344:lvgl/src/lv_misc/lv_txt.c **** 
 345:lvgl/src/lv_misc/lv_txt.c **** /**
 346:lvgl/src/lv_misc/lv_txt.c ****  * Give the length of a text with a given font
 347:lvgl/src/lv_misc/lv_txt.c ****  * @param txt a '\0' terminate string
 348:lvgl/src/lv_misc/lv_txt.c ****  * @param length length of 'txt' in byte count and not characters (Á is 1 character but 2 bytes in
 349:lvgl/src/lv_misc/lv_txt.c ****  * UTF-8)
 350:lvgl/src/lv_misc/lv_txt.c ****  * @param font pointer to a font
 351:lvgl/src/lv_misc/lv_txt.c ****  * @param letter_space letter space
 352:lvgl/src/lv_misc/lv_txt.c ****  * @param flags settings for the text from 'txt_flag_t' enum
 353:lvgl/src/lv_misc/lv_txt.c ****  * @return length of a char_num long text
 354:lvgl/src/lv_misc/lv_txt.c ****  */
 355:lvgl/src/lv_misc/lv_txt.c **** lv_coord_t _lv_txt_get_width(const char * txt, uint32_t length, const lv_font_t * font, lv_coord_t 
 356:lvgl/src/lv_misc/lv_txt.c ****                              lv_txt_flag_t flag)
 357:lvgl/src/lv_misc/lv_txt.c **** {
 358:lvgl/src/lv_misc/lv_txt.c ****     if(txt == NULL) return 0;
 359:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 360:lvgl/src/lv_misc/lv_txt.c **** 
 361:lvgl/src/lv_misc/lv_txt.c ****     uint32_t i                   = 0;
 362:lvgl/src/lv_misc/lv_txt.c ****     lv_coord_t width             = 0;
 363:lvgl/src/lv_misc/lv_txt.c ****     lv_txt_cmd_state_t cmd_state = LV_TXT_CMD_STATE_WAIT;
 364:lvgl/src/lv_misc/lv_txt.c **** 
 365:lvgl/src/lv_misc/lv_txt.c ****     if(length != 0) {
 366:lvgl/src/lv_misc/lv_txt.c ****         while(i < length) {
 367:lvgl/src/lv_misc/lv_txt.c ****             uint32_t letter      = _lv_txt_encoded_next(txt, &i);
 368:lvgl/src/lv_misc/lv_txt.c ****             uint32_t letter_next = _lv_txt_encoded_next(&txt[i], NULL);
 369:lvgl/src/lv_misc/lv_txt.c ****             if((flag & LV_TXT_FLAG_RECOLOR) != 0) {
 370:lvgl/src/lv_misc/lv_txt.c ****                 if(_lv_txt_is_cmd(&cmd_state, letter) != false) {
 371:lvgl/src/lv_misc/lv_txt.c ****                     continue;
 372:lvgl/src/lv_misc/lv_txt.c ****                 }
ARM GAS  D:\Temp\cc5ZVeii.s 			page 8


 373:lvgl/src/lv_misc/lv_txt.c ****             }
 374:lvgl/src/lv_misc/lv_txt.c **** 
 375:lvgl/src/lv_misc/lv_txt.c ****             lv_coord_t char_width = lv_font_get_glyph_width(font, letter, letter_next);
 376:lvgl/src/lv_misc/lv_txt.c ****             if(char_width > 0) {
 377:lvgl/src/lv_misc/lv_txt.c ****                 width += char_width;
 378:lvgl/src/lv_misc/lv_txt.c ****                 width += letter_space;
 379:lvgl/src/lv_misc/lv_txt.c ****             }
 380:lvgl/src/lv_misc/lv_txt.c ****         }
 381:lvgl/src/lv_misc/lv_txt.c **** 
 382:lvgl/src/lv_misc/lv_txt.c ****         if(width > 0) {
 383:lvgl/src/lv_misc/lv_txt.c ****             width -= letter_space; /*Trim the last letter space. Important if the text is center
 384:lvgl/src/lv_misc/lv_txt.c ****                                       aligned */
 385:lvgl/src/lv_misc/lv_txt.c ****         }
 386:lvgl/src/lv_misc/lv_txt.c ****     }
 387:lvgl/src/lv_misc/lv_txt.c **** 
 388:lvgl/src/lv_misc/lv_txt.c ****     return width;
 389:lvgl/src/lv_misc/lv_txt.c **** }
 390:lvgl/src/lv_misc/lv_txt.c **** 
 391:lvgl/src/lv_misc/lv_txt.c **** /**
 392:lvgl/src/lv_misc/lv_txt.c ****  * Check next character in a string and decide if the character is part of the command or not
 393:lvgl/src/lv_misc/lv_txt.c ****  * @param state pointer to a txt_cmd_state_t variable which stores the current state of command
 394:lvgl/src/lv_misc/lv_txt.c ****  * processing (Inited to TXT_CMD_STATE_WAIT )
 395:lvgl/src/lv_misc/lv_txt.c ****  * @param c the current character
 396:lvgl/src/lv_misc/lv_txt.c ****  * @return true: the character is part of a command and should not be written,
 397:lvgl/src/lv_misc/lv_txt.c ****  *         false: the character should be written
 398:lvgl/src/lv_misc/lv_txt.c ****  */
 399:lvgl/src/lv_misc/lv_txt.c **** bool _lv_txt_is_cmd(lv_txt_cmd_state_t * state, uint32_t c)
 400:lvgl/src/lv_misc/lv_txt.c **** {
 401:lvgl/src/lv_misc/lv_txt.c ****     bool ret = false;
 402:lvgl/src/lv_misc/lv_txt.c **** 
 403:lvgl/src/lv_misc/lv_txt.c ****     if(c == (uint32_t)LV_TXT_COLOR_CMD[0]) {
 404:lvgl/src/lv_misc/lv_txt.c ****         if(*state == LV_TXT_CMD_STATE_WAIT) { /*Start char*/
 405:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_PAR;
 406:lvgl/src/lv_misc/lv_txt.c ****             ret    = true;
 407:lvgl/src/lv_misc/lv_txt.c ****         }
 408:lvgl/src/lv_misc/lv_txt.c ****         /*Other start char in parameter is escaped cmd. char */
 409:lvgl/src/lv_misc/lv_txt.c ****         else if(*state == LV_TXT_CMD_STATE_PAR) {
 410:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_WAIT;
 411:lvgl/src/lv_misc/lv_txt.c ****         }
 412:lvgl/src/lv_misc/lv_txt.c ****         /*Command end */
 413:lvgl/src/lv_misc/lv_txt.c ****         else if(*state == LV_TXT_CMD_STATE_IN) {
 414:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_WAIT;
 415:lvgl/src/lv_misc/lv_txt.c ****             ret    = true;
 416:lvgl/src/lv_misc/lv_txt.c ****         }
 417:lvgl/src/lv_misc/lv_txt.c ****     }
 418:lvgl/src/lv_misc/lv_txt.c **** 
 419:lvgl/src/lv_misc/lv_txt.c ****     /*Skip the color parameter and wait the space after it*/
 420:lvgl/src/lv_misc/lv_txt.c ****     if(*state == LV_TXT_CMD_STATE_PAR) {
 421:lvgl/src/lv_misc/lv_txt.c ****         if(c == ' ') {
 422:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_IN; /*After the parameter the text is in the command*/
 423:lvgl/src/lv_misc/lv_txt.c ****         }
 424:lvgl/src/lv_misc/lv_txt.c ****         ret = true;
 425:lvgl/src/lv_misc/lv_txt.c ****     }
 426:lvgl/src/lv_misc/lv_txt.c **** 
 427:lvgl/src/lv_misc/lv_txt.c ****     return ret;
 428:lvgl/src/lv_misc/lv_txt.c **** }
 429:lvgl/src/lv_misc/lv_txt.c **** 
ARM GAS  D:\Temp\cc5ZVeii.s 			page 9


 430:lvgl/src/lv_misc/lv_txt.c **** /**
 431:lvgl/src/lv_misc/lv_txt.c ****  * Insert a string into an other
 432:lvgl/src/lv_misc/lv_txt.c ****  * @param txt_buf the original text (must be big enough for the result text)
 433:lvgl/src/lv_misc/lv_txt.c ****  * @param pos position to insert. Expressed in character index and not byte index (Different in
 434:lvgl/src/lv_misc/lv_txt.c ****  * UTF-8) 0: before the original text, 1: after the first char etc.
 435:lvgl/src/lv_misc/lv_txt.c ****  * @param ins_txt text to insert
 436:lvgl/src/lv_misc/lv_txt.c ****  */
 437:lvgl/src/lv_misc/lv_txt.c **** void _lv_txt_ins(char * txt_buf, uint32_t pos, const char * ins_txt)
 438:lvgl/src/lv_misc/lv_txt.c **** {
 439:lvgl/src/lv_misc/lv_txt.c ****     size_t old_len = strlen(txt_buf);
 440:lvgl/src/lv_misc/lv_txt.c ****     size_t ins_len = strlen(ins_txt);
 441:lvgl/src/lv_misc/lv_txt.c ****     if(ins_len == 0) return;
 442:lvgl/src/lv_misc/lv_txt.c **** 
 443:lvgl/src/lv_misc/lv_txt.c ****     size_t new_len = ins_len + old_len;
 444:lvgl/src/lv_misc/lv_txt.c ****     pos              = _lv_txt_encoded_get_byte_id(txt_buf, pos); /*Convert to byte index instead o
 445:lvgl/src/lv_misc/lv_txt.c **** 
 446:lvgl/src/lv_misc/lv_txt.c ****     /*Copy the second part into the end to make place to text to insert*/
 447:lvgl/src/lv_misc/lv_txt.c ****     size_t i;
 448:lvgl/src/lv_misc/lv_txt.c ****     for(i = new_len; i >= pos + ins_len; i--) {
 449:lvgl/src/lv_misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 450:lvgl/src/lv_misc/lv_txt.c ****     }
 451:lvgl/src/lv_misc/lv_txt.c **** 
 452:lvgl/src/lv_misc/lv_txt.c ****     /* Copy the text into the new space*/
 453:lvgl/src/lv_misc/lv_txt.c ****     _lv_memcpy_small(txt_buf + pos, ins_txt, ins_len);
 454:lvgl/src/lv_misc/lv_txt.c **** }
 455:lvgl/src/lv_misc/lv_txt.c **** 
 456:lvgl/src/lv_misc/lv_txt.c **** /**
 457:lvgl/src/lv_misc/lv_txt.c ****  * Delete a part of a string
 458:lvgl/src/lv_misc/lv_txt.c ****  * @param txt string to modify
 459:lvgl/src/lv_misc/lv_txt.c ****  * @param pos position where to start the deleting (0: before the first char, 1: after the first
 460:lvgl/src/lv_misc/lv_txt.c ****  * char etc.)
 461:lvgl/src/lv_misc/lv_txt.c ****  * @param len number of characters to delete
 462:lvgl/src/lv_misc/lv_txt.c ****  */
 463:lvgl/src/lv_misc/lv_txt.c **** void _lv_txt_cut(char * txt, uint32_t pos, uint32_t len)
 464:lvgl/src/lv_misc/lv_txt.c **** {
 465:lvgl/src/lv_misc/lv_txt.c **** 
 466:lvgl/src/lv_misc/lv_txt.c ****     size_t old_len = strlen(txt);
 467:lvgl/src/lv_misc/lv_txt.c **** 
 468:lvgl/src/lv_misc/lv_txt.c ****     pos = _lv_txt_encoded_get_byte_id(txt, pos); /*Convert to byte index instead of letter index*/
 469:lvgl/src/lv_misc/lv_txt.c ****     len = _lv_txt_encoded_get_byte_id(&txt[pos], len);
 470:lvgl/src/lv_misc/lv_txt.c **** 
 471:lvgl/src/lv_misc/lv_txt.c ****     /*Copy the second part into the end to make place to text to insert*/
 472:lvgl/src/lv_misc/lv_txt.c ****     uint32_t i;
 473:lvgl/src/lv_misc/lv_txt.c ****     for(i = pos; i <= old_len - len; i++) {
 474:lvgl/src/lv_misc/lv_txt.c ****         txt[i] = txt[i + len];
 475:lvgl/src/lv_misc/lv_txt.c ****     }
 476:lvgl/src/lv_misc/lv_txt.c **** }
 477:lvgl/src/lv_misc/lv_txt.c **** 
 478:lvgl/src/lv_misc/lv_txt.c **** /**
 479:lvgl/src/lv_misc/lv_txt.c ****  * return a new formatted text. Memory will be allocated to store the text.
 480:lvgl/src/lv_misc/lv_txt.c ****  * @param fmt `printf`-like format
 481:lvgl/src/lv_misc/lv_txt.c ****  * @return pointer to the allocated text string.
 482:lvgl/src/lv_misc/lv_txt.c ****  */
 483:lvgl/src/lv_misc/lv_txt.c **** char * _lv_txt_set_text_vfmt(const char * fmt, va_list ap)
 484:lvgl/src/lv_misc/lv_txt.c **** {
 485:lvgl/src/lv_misc/lv_txt.c ****     /*Allocate space for the new text by using trick from C99 standard section 7.19.6.12 */
 486:lvgl/src/lv_misc/lv_txt.c ****     va_list ap_copy;
ARM GAS  D:\Temp\cc5ZVeii.s 			page 10


 487:lvgl/src/lv_misc/lv_txt.c ****     va_copy(ap_copy, ap);
 488:lvgl/src/lv_misc/lv_txt.c ****     uint32_t len = lv_vsnprintf(NULL, 0, fmt, ap_copy);
 489:lvgl/src/lv_misc/lv_txt.c ****     va_end(ap_copy);
 490:lvgl/src/lv_misc/lv_txt.c **** 
 491:lvgl/src/lv_misc/lv_txt.c ****     char * text = 0;
 492:lvgl/src/lv_misc/lv_txt.c **** #if LV_USE_ARABIC_PERSIAN_CHARS
 493:lvgl/src/lv_misc/lv_txt.c ****     /*Put together the text according to the format string*/
 494:lvgl/src/lv_misc/lv_txt.c ****     char * raw_txt = _lv_mem_buf_get(len + 1);
 495:lvgl/src/lv_misc/lv_txt.c ****     LV_ASSERT_MEM(raw_txt);
 496:lvgl/src/lv_misc/lv_txt.c ****     if(raw_txt == NULL) {
 497:lvgl/src/lv_misc/lv_txt.c ****         return NULL;
 498:lvgl/src/lv_misc/lv_txt.c ****     }
 499:lvgl/src/lv_misc/lv_txt.c **** 
 500:lvgl/src/lv_misc/lv_txt.c ****     lv_vsnprintf(raw_txt, len + 1, fmt, ap);
 501:lvgl/src/lv_misc/lv_txt.c **** 
 502:lvgl/src/lv_misc/lv_txt.c ****     /*Get the size of the Arabic text and process it*/
 503:lvgl/src/lv_misc/lv_txt.c ****     size_t len_ap = _lv_txt_ap_calc_bytes_cnt(raw_txt);
 504:lvgl/src/lv_misc/lv_txt.c ****     text = lv_mem_alloc(len_ap + 1);
 505:lvgl/src/lv_misc/lv_txt.c ****     LV_ASSERT_MEM(text);
 506:lvgl/src/lv_misc/lv_txt.c ****     if(text == NULL) {
 507:lvgl/src/lv_misc/lv_txt.c ****         return NULL;
 508:lvgl/src/lv_misc/lv_txt.c ****     }
 509:lvgl/src/lv_misc/lv_txt.c ****     _lv_txt_ap_proc(raw_txt, text);
 510:lvgl/src/lv_misc/lv_txt.c **** 
 511:lvgl/src/lv_misc/lv_txt.c ****     _lv_mem_buf_release(raw_txt);
 512:lvgl/src/lv_misc/lv_txt.c **** #else
 513:lvgl/src/lv_misc/lv_txt.c ****     text = lv_mem_alloc(len + 1);
 514:lvgl/src/lv_misc/lv_txt.c ****     LV_ASSERT_MEM(text);
 515:lvgl/src/lv_misc/lv_txt.c ****     if(text == NULL) {
 516:lvgl/src/lv_misc/lv_txt.c ****         return NULL;
 517:lvgl/src/lv_misc/lv_txt.c ****     }
 518:lvgl/src/lv_misc/lv_txt.c ****     text[len] = 0; /* Ensure NULL termination */
 519:lvgl/src/lv_misc/lv_txt.c **** 
 520:lvgl/src/lv_misc/lv_txt.c ****     lv_vsnprintf(text, len + 1, fmt, ap);
 521:lvgl/src/lv_misc/lv_txt.c **** #endif
 522:lvgl/src/lv_misc/lv_txt.c **** 
 523:lvgl/src/lv_misc/lv_txt.c ****     return text;
 524:lvgl/src/lv_misc/lv_txt.c **** }
 525:lvgl/src/lv_misc/lv_txt.c **** 
 526:lvgl/src/lv_misc/lv_txt.c **** #if LV_TXT_ENC == LV_TXT_ENC_UTF8
 527:lvgl/src/lv_misc/lv_txt.c **** /*******************************
 528:lvgl/src/lv_misc/lv_txt.c ****  *   UTF-8 ENCODER/DECODER
 529:lvgl/src/lv_misc/lv_txt.c ****  ******************************/
 530:lvgl/src/lv_misc/lv_txt.c **** 
 531:lvgl/src/lv_misc/lv_txt.c **** /**
 532:lvgl/src/lv_misc/lv_txt.c ****  * Give the size of an UTF-8 coded character
 533:lvgl/src/lv_misc/lv_txt.c ****  * @param str pointer to a character in a string
 534:lvgl/src/lv_misc/lv_txt.c ****  * @return length of the UTF-8 character (1,2,3 or 4). O on invalid code
 535:lvgl/src/lv_misc/lv_txt.c ****  */
 536:lvgl/src/lv_misc/lv_txt.c **** static uint8_t lv_txt_utf8_size(const char * str)
 537:lvgl/src/lv_misc/lv_txt.c **** {
  29              		.loc 1 537 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 538:lvgl/src/lv_misc/lv_txt.c ****     if((str[0] & 0x80) == 0)
ARM GAS  D:\Temp\cc5ZVeii.s 			page 11


  34              		.loc 1 538 5 view .LVU1
  35              		.loc 1 538 12 is_stmt 0 view .LVU2
  36 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  37              		.loc 1 538 7 view .LVU3
  38 0002 13F0800F 		tst	r3, #128
  39 0006 0DD0     		beq	.L3
 539:lvgl/src/lv_misc/lv_txt.c ****         return 1;
 540:lvgl/src/lv_misc/lv_txt.c ****     else if((str[0] & 0xE0) == 0xC0)
  40              		.loc 1 540 10 is_stmt 1 view .LVU4
  41              		.loc 1 540 12 is_stmt 0 view .LVU5
  42 0008 03F0E002 		and	r2, r3, #224
  43 000c C02A     		cmp	r2, #192
  44 000e 0BD0     		beq	.L4
 541:lvgl/src/lv_misc/lv_txt.c ****         return 2;
 542:lvgl/src/lv_misc/lv_txt.c ****     else if((str[0] & 0xF0) == 0xE0)
  45              		.loc 1 542 10 is_stmt 1 view .LVU6
  46              		.loc 1 542 12 is_stmt 0 view .LVU7
  47 0010 03F0F002 		and	r2, r3, #240
  48 0014 E02A     		cmp	r2, #224
  49 0016 09D0     		beq	.L5
 543:lvgl/src/lv_misc/lv_txt.c ****         return 3;
 544:lvgl/src/lv_misc/lv_txt.c ****     else if((str[0] & 0xF8) == 0xF0)
  50              		.loc 1 544 10 is_stmt 1 view .LVU8
  51              		.loc 1 544 12 is_stmt 0 view .LVU9
  52 0018 03F0F803 		and	r3, r3, #248
  53 001c F02B     		cmp	r3, #240
  54 001e 07D0     		beq	.L6
 545:lvgl/src/lv_misc/lv_txt.c ****         return 4;
 546:lvgl/src/lv_misc/lv_txt.c ****     return 0; /*If the char was invalid tell it's 1 byte long*/
  55              		.loc 1 546 12 view .LVU10
  56 0020 0020     		movs	r0, #0
  57              	.LVL1:
  58              		.loc 1 546 12 view .LVU11
  59 0022 7047     		bx	lr
  60              	.LVL2:
  61              	.L3:
 539:lvgl/src/lv_misc/lv_txt.c ****     else if((str[0] & 0xE0) == 0xC0)
  62              		.loc 1 539 16 view .LVU12
  63 0024 0120     		movs	r0, #1
  64              	.LVL3:
 539:lvgl/src/lv_misc/lv_txt.c ****     else if((str[0] & 0xE0) == 0xC0)
  65              		.loc 1 539 16 view .LVU13
  66 0026 7047     		bx	lr
  67              	.LVL4:
  68              	.L4:
 541:lvgl/src/lv_misc/lv_txt.c ****     else if((str[0] & 0xF0) == 0xE0)
  69              		.loc 1 541 16 view .LVU14
  70 0028 0220     		movs	r0, #2
  71              	.LVL5:
 541:lvgl/src/lv_misc/lv_txt.c ****     else if((str[0] & 0xF0) == 0xE0)
  72              		.loc 1 541 16 view .LVU15
  73 002a 7047     		bx	lr
  74              	.LVL6:
  75              	.L5:
 543:lvgl/src/lv_misc/lv_txt.c ****     else if((str[0] & 0xF8) == 0xF0)
  76              		.loc 1 543 16 view .LVU16
  77 002c 0320     		movs	r0, #3
ARM GAS  D:\Temp\cc5ZVeii.s 			page 12


  78              	.LVL7:
 543:lvgl/src/lv_misc/lv_txt.c ****     else if((str[0] & 0xF8) == 0xF0)
  79              		.loc 1 543 16 view .LVU17
  80 002e 7047     		bx	lr
  81              	.LVL8:
  82              	.L6:
 545:lvgl/src/lv_misc/lv_txt.c ****     return 0; /*If the char was invalid tell it's 1 byte long*/
  83              		.loc 1 545 16 view .LVU18
  84 0030 0420     		movs	r0, #4
  85              	.LVL9:
 547:lvgl/src/lv_misc/lv_txt.c **** }
  86              		.loc 1 547 1 view .LVU19
  87 0032 7047     		bx	lr
  88              		.cfi_endproc
  89              	.LFE175:
  91              		.section	.text.lv_txt_unicode_to_utf8,"ax",%progbits
  92              		.align	1
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	lv_txt_unicode_to_utf8:
  99              	.LVL10:
 100              	.LFB176:
 548:lvgl/src/lv_misc/lv_txt.c **** 
 549:lvgl/src/lv_misc/lv_txt.c **** /**
 550:lvgl/src/lv_misc/lv_txt.c ****  * Convert an Unicode letter to UTF-8.
 551:lvgl/src/lv_misc/lv_txt.c ****  * @param letter_uni an Unicode letter
 552:lvgl/src/lv_misc/lv_txt.c ****  * @return UTF-8 coded character in Little Endian to be compatible with C chars (e.g. 'Á', 'Ű')
 553:lvgl/src/lv_misc/lv_txt.c ****  */
 554:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_unicode_to_utf8(uint32_t letter_uni)
 555:lvgl/src/lv_misc/lv_txt.c **** {
 101              		.loc 1 555 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 8
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 556:lvgl/src/lv_misc/lv_txt.c ****     if(letter_uni < 128) return letter_uni;
 106              		.loc 1 556 5 view .LVU21
 107              		.loc 1 556 7 is_stmt 0 view .LVU22
 108 0000 7F28     		cmp	r0, #127
 109 0002 4CD9     		bls	.L14
 555:lvgl/src/lv_misc/lv_txt.c ****     if(letter_uni < 128) return letter_uni;
 110              		.loc 1 555 1 view .LVU23
 111 0004 82B0     		sub	sp, sp, #8
 112              	.LCFI0:
 113              		.cfi_def_cfa_offset 8
 557:lvgl/src/lv_misc/lv_txt.c ****     uint8_t bytes[4];
 114              		.loc 1 557 5 is_stmt 1 view .LVU24
 558:lvgl/src/lv_misc/lv_txt.c **** 
 559:lvgl/src/lv_misc/lv_txt.c ****     if(letter_uni < 0x0800) {
 115              		.loc 1 559 5 view .LVU25
 116              		.loc 1 559 7 is_stmt 0 view .LVU26
 117 0006 B0F5006F 		cmp	r0, #2048
 118 000a 13D2     		bcs	.L9
 560:lvgl/src/lv_misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 6) & 0x1F) | 0xC0;
 119              		.loc 1 560 9 is_stmt 1 view .LVU27
ARM GAS  D:\Temp\cc5ZVeii.s 			page 13


 120              		.loc 1 560 39 is_stmt 0 view .LVU28
 121 000c C0F38413 		ubfx	r3, r0, #6, #5
 122              		.loc 1 560 47 view .LVU29
 123 0010 43F0C003 		orr	r3, r3, #192
 124              		.loc 1 560 18 view .LVU30
 125 0014 8DF80430 		strb	r3, [sp, #4]
 561:lvgl/src/lv_misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 0) & 0x3F) | 0x80;
 126              		.loc 1 561 9 is_stmt 1 view .LVU31
 127              		.loc 1 561 39 is_stmt 0 view .LVU32
 128 0018 00F03F00 		and	r0, r0, #63
 129              	.LVL11:
 130              		.loc 1 561 47 view .LVU33
 131 001c 40F08000 		orr	r0, r0, #128
 132              		.loc 1 561 18 view .LVU34
 133 0020 8DF80500 		strb	r0, [sp, #5]
 562:lvgl/src/lv_misc/lv_txt.c ****         bytes[2] = 0;
 134              		.loc 1 562 9 is_stmt 1 view .LVU35
 135              		.loc 1 562 18 is_stmt 0 view .LVU36
 136 0024 0023     		movs	r3, #0
 137 0026 8DF80630 		strb	r3, [sp, #6]
 563:lvgl/src/lv_misc/lv_txt.c ****         bytes[3] = 0;
 138              		.loc 1 563 9 is_stmt 1 view .LVU37
 139              		.loc 1 563 18 is_stmt 0 view .LVU38
 140 002a 8DF80730 		strb	r3, [sp, #7]
 141              	.L10:
 564:lvgl/src/lv_misc/lv_txt.c ****     }
 565:lvgl/src/lv_misc/lv_txt.c ****     else if(letter_uni < 0x010000) {
 566:lvgl/src/lv_misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 12) & 0x0F) | 0xE0;
 567:lvgl/src/lv_misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 6) & 0x3F) | 0x80;
 568:lvgl/src/lv_misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 0) & 0x3F) | 0x80;
 569:lvgl/src/lv_misc/lv_txt.c ****         bytes[3] = 0;
 570:lvgl/src/lv_misc/lv_txt.c ****     }
 571:lvgl/src/lv_misc/lv_txt.c ****     else if(letter_uni < 0x110000) {
 572:lvgl/src/lv_misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 18) & 0x07) | 0xF0;
 573:lvgl/src/lv_misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 12) & 0x3F) | 0x80;
 574:lvgl/src/lv_misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 6) & 0x3F) | 0x80;
 575:lvgl/src/lv_misc/lv_txt.c ****         bytes[3] = ((letter_uni >> 0) & 0x3F) | 0x80;
 576:lvgl/src/lv_misc/lv_txt.c ****     }
 577:lvgl/src/lv_misc/lv_txt.c **** 
 578:lvgl/src/lv_misc/lv_txt.c ****     uint32_t * res_p = (uint32_t *)bytes;
 142              		.loc 1 578 5 is_stmt 1 view .LVU39
 143              	.LVL12:
 579:lvgl/src/lv_misc/lv_txt.c ****     return *res_p;
 144              		.loc 1 579 5 view .LVU40
 145              		.loc 1 579 12 is_stmt 0 view .LVU41
 146 002e 0198     		ldr	r0, [sp, #4]
 580:lvgl/src/lv_misc/lv_txt.c **** }
 147              		.loc 1 580 1 view .LVU42
 148 0030 02B0     		add	sp, sp, #8
 149              	.LCFI1:
 150              		.cfi_remember_state
 151              		.cfi_def_cfa_offset 0
 152              	.LVL13:
 153              		.loc 1 580 1 view .LVU43
 154              		@ sp needed
 155 0032 7047     		bx	lr
 156              	.LVL14:
ARM GAS  D:\Temp\cc5ZVeii.s 			page 14


 157              	.L9:
 158              	.LCFI2:
 159              		.cfi_restore_state
 565:lvgl/src/lv_misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 12) & 0x0F) | 0xE0;
 160              		.loc 1 565 10 is_stmt 1 view .LVU44
 565:lvgl/src/lv_misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 12) & 0x0F) | 0xE0;
 161              		.loc 1 565 12 is_stmt 0 view .LVU45
 162 0034 B0F5803F 		cmp	r0, #65536
 163 0038 15D2     		bcs	.L11
 566:lvgl/src/lv_misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 6) & 0x3F) | 0x80;
 164              		.loc 1 566 9 is_stmt 1 view .LVU46
 566:lvgl/src/lv_misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 6) & 0x3F) | 0x80;
 165              		.loc 1 566 40 is_stmt 0 view .LVU47
 166 003a C0F30333 		ubfx	r3, r0, #12, #4
 566:lvgl/src/lv_misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 6) & 0x3F) | 0x80;
 167              		.loc 1 566 48 view .LVU48
 168 003e 43F0E003 		orr	r3, r3, #224
 566:lvgl/src/lv_misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 6) & 0x3F) | 0x80;
 169              		.loc 1 566 18 view .LVU49
 170 0042 8DF80430 		strb	r3, [sp, #4]
 567:lvgl/src/lv_misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 0) & 0x3F) | 0x80;
 171              		.loc 1 567 9 is_stmt 1 view .LVU50
 567:lvgl/src/lv_misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 0) & 0x3F) | 0x80;
 172              		.loc 1 567 39 is_stmt 0 view .LVU51
 173 0046 C0F38513 		ubfx	r3, r0, #6, #6
 567:lvgl/src/lv_misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 0) & 0x3F) | 0x80;
 174              		.loc 1 567 47 view .LVU52
 175 004a 43F08003 		orr	r3, r3, #128
 567:lvgl/src/lv_misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 0) & 0x3F) | 0x80;
 176              		.loc 1 567 18 view .LVU53
 177 004e 8DF80530 		strb	r3, [sp, #5]
 568:lvgl/src/lv_misc/lv_txt.c ****         bytes[3] = 0;
 178              		.loc 1 568 9 is_stmt 1 view .LVU54
 568:lvgl/src/lv_misc/lv_txt.c ****         bytes[3] = 0;
 179              		.loc 1 568 39 is_stmt 0 view .LVU55
 180 0052 00F03F00 		and	r0, r0, #63
 181              	.LVL15:
 568:lvgl/src/lv_misc/lv_txt.c ****         bytes[3] = 0;
 182              		.loc 1 568 47 view .LVU56
 183 0056 40F08000 		orr	r0, r0, #128
 568:lvgl/src/lv_misc/lv_txt.c ****         bytes[3] = 0;
 184              		.loc 1 568 18 view .LVU57
 185 005a 8DF80600 		strb	r0, [sp, #6]
 569:lvgl/src/lv_misc/lv_txt.c ****     }
 186              		.loc 1 569 9 is_stmt 1 view .LVU58
 569:lvgl/src/lv_misc/lv_txt.c ****     }
 187              		.loc 1 569 18 is_stmt 0 view .LVU59
 188 005e 0023     		movs	r3, #0
 189 0060 8DF80730 		strb	r3, [sp, #7]
 190 0064 E3E7     		b	.L10
 191              	.LVL16:
 192              	.L11:
 571:lvgl/src/lv_misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 18) & 0x07) | 0xF0;
 193              		.loc 1 571 10 is_stmt 1 view .LVU60
 571:lvgl/src/lv_misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 18) & 0x07) | 0xF0;
 194              		.loc 1 571 12 is_stmt 0 view .LVU61
 195 0066 B0F5881F 		cmp	r0, #1114112
ARM GAS  D:\Temp\cc5ZVeii.s 			page 15


 196 006a E0D2     		bcs	.L10
 572:lvgl/src/lv_misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 12) & 0x3F) | 0x80;
 197              		.loc 1 572 9 is_stmt 1 view .LVU62
 572:lvgl/src/lv_misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 12) & 0x3F) | 0x80;
 198              		.loc 1 572 40 is_stmt 0 view .LVU63
 199 006c C0F38243 		ubfx	r3, r0, #18, #3
 572:lvgl/src/lv_misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 12) & 0x3F) | 0x80;
 200              		.loc 1 572 48 view .LVU64
 201 0070 43F0F003 		orr	r3, r3, #240
 572:lvgl/src/lv_misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 12) & 0x3F) | 0x80;
 202              		.loc 1 572 18 view .LVU65
 203 0074 8DF80430 		strb	r3, [sp, #4]
 573:lvgl/src/lv_misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 6) & 0x3F) | 0x80;
 204              		.loc 1 573 9 is_stmt 1 view .LVU66
 573:lvgl/src/lv_misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 6) & 0x3F) | 0x80;
 205              		.loc 1 573 40 is_stmt 0 view .LVU67
 206 0078 C0F30533 		ubfx	r3, r0, #12, #6
 573:lvgl/src/lv_misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 6) & 0x3F) | 0x80;
 207              		.loc 1 573 48 view .LVU68
 208 007c 43F08003 		orr	r3, r3, #128
 573:lvgl/src/lv_misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 6) & 0x3F) | 0x80;
 209              		.loc 1 573 18 view .LVU69
 210 0080 8DF80530 		strb	r3, [sp, #5]
 574:lvgl/src/lv_misc/lv_txt.c ****         bytes[3] = ((letter_uni >> 0) & 0x3F) | 0x80;
 211              		.loc 1 574 9 is_stmt 1 view .LVU70
 574:lvgl/src/lv_misc/lv_txt.c ****         bytes[3] = ((letter_uni >> 0) & 0x3F) | 0x80;
 212              		.loc 1 574 39 is_stmt 0 view .LVU71
 213 0084 C0F38513 		ubfx	r3, r0, #6, #6
 574:lvgl/src/lv_misc/lv_txt.c ****         bytes[3] = ((letter_uni >> 0) & 0x3F) | 0x80;
 214              		.loc 1 574 47 view .LVU72
 215 0088 43F08003 		orr	r3, r3, #128
 574:lvgl/src/lv_misc/lv_txt.c ****         bytes[3] = ((letter_uni >> 0) & 0x3F) | 0x80;
 216              		.loc 1 574 18 view .LVU73
 217 008c 8DF80630 		strb	r3, [sp, #6]
 575:lvgl/src/lv_misc/lv_txt.c ****     }
 218              		.loc 1 575 9 is_stmt 1 view .LVU74
 575:lvgl/src/lv_misc/lv_txt.c ****     }
 219              		.loc 1 575 39 is_stmt 0 view .LVU75
 220 0090 00F03F00 		and	r0, r0, #63
 221              	.LVL17:
 575:lvgl/src/lv_misc/lv_txt.c ****     }
 222              		.loc 1 575 47 view .LVU76
 223 0094 40F08000 		orr	r0, r0, #128
 575:lvgl/src/lv_misc/lv_txt.c ****     }
 224              		.loc 1 575 18 view .LVU77
 225 0098 8DF80700 		strb	r0, [sp, #7]
 226 009c C7E7     		b	.L10
 227              	.LVL18:
 228              	.L14:
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 0
 231              		.loc 1 580 1 view .LVU78
 232 009e 7047     		bx	lr
 233              		.cfi_endproc
 234              	.LFE176:
 236              		.section	.text.lv_txt_utf8_conv_wc,"ax",%progbits
 237              		.align	1
ARM GAS  D:\Temp\cc5ZVeii.s 			page 16


 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv4-sp-d16
 243              	lv_txt_utf8_conv_wc:
 244              	.LVL19:
 245              	.LFB177:
 581:lvgl/src/lv_misc/lv_txt.c **** 
 582:lvgl/src/lv_misc/lv_txt.c **** /**
 583:lvgl/src/lv_misc/lv_txt.c ****  * Convert a wide character, e.g. 'Á' little endian to be UTF-8 compatible
 584:lvgl/src/lv_misc/lv_txt.c ****  * @param c a wide character or a Little endian number
 585:lvgl/src/lv_misc/lv_txt.c ****  * @return `c` in big endian
 586:lvgl/src/lv_misc/lv_txt.c ****  */
 587:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_utf8_conv_wc(uint32_t c)
 588:lvgl/src/lv_misc/lv_txt.c **** {
 246              		.loc 1 588 1 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 16
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251              		.loc 1 588 1 is_stmt 0 view .LVU80
 252 0000 84B0     		sub	sp, sp, #16
 253              	.LCFI4:
 254              		.cfi_def_cfa_offset 16
 255 0002 0190     		str	r0, [sp, #4]
 589:lvgl/src/lv_misc/lv_txt.c **** #if LV_BIG_ENDIAN_SYSTEM == 0
 590:lvgl/src/lv_misc/lv_txt.c ****     /*Swap the bytes (UTF-8 is big endian, but the MCUs are little endian)*/
 591:lvgl/src/lv_misc/lv_txt.c ****     if((c & 0x80) != 0) {
 256              		.loc 1 591 5 is_stmt 1 view .LVU81
 257              		.loc 1 591 7 is_stmt 0 view .LVU82
 258 0004 10F0800F 		tst	r0, #128
 259 0008 02D1     		bne	.L24
 260              	.LVL20:
 261              	.L19:
 592:lvgl/src/lv_misc/lv_txt.c ****         uint32_t swapped;
 593:lvgl/src/lv_misc/lv_txt.c ****         uint8_t c8[4];
 594:lvgl/src/lv_misc/lv_txt.c ****         _lv_memcpy_small(c8, &c, 4);
 595:lvgl/src/lv_misc/lv_txt.c ****         swapped = (c8[0] << 24) + (c8[1] << 16) + (c8[2] << 8) + (c8[3]);
 596:lvgl/src/lv_misc/lv_txt.c ****         uint8_t i;
 597:lvgl/src/lv_misc/lv_txt.c ****         for(i = 0; i < 4; i++) {
 598:lvgl/src/lv_misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 599:lvgl/src/lv_misc/lv_txt.c ****                 swapped = (swapped >> 8); /*Ignore leading zeros (they were in the end originally)*
 600:lvgl/src/lv_misc/lv_txt.c ****         }
 601:lvgl/src/lv_misc/lv_txt.c ****         c = swapped;
 602:lvgl/src/lv_misc/lv_txt.c ****     }
 603:lvgl/src/lv_misc/lv_txt.c **** #endif
 604:lvgl/src/lv_misc/lv_txt.c ****     return c;
 262              		.loc 1 604 5 is_stmt 1 view .LVU83
 605:lvgl/src/lv_misc/lv_txt.c **** }
 263              		.loc 1 605 1 is_stmt 0 view .LVU84
 264 000a 0198     		ldr	r0, [sp, #4]
 265 000c 04B0     		add	sp, sp, #16
 266              	.LCFI5:
 267              		.cfi_remember_state
 268              		.cfi_def_cfa_offset 0
 269              		@ sp needed
 270 000e 7047     		bx	lr
ARM GAS  D:\Temp\cc5ZVeii.s 			page 17


 271              	.LVL21:
 272              	.L24:
 273              	.LCFI6:
 274              		.cfi_restore_state
 275              	.LBB12:
 276              	.LBB13:
 277              	.LBB14:
 278              		.file 2 "lvgl/src/lv_misc/lv_mem.h"
   1:lvgl/src/lv_misc/lv_mem.h **** /**
   2:lvgl/src/lv_misc/lv_mem.h ****  * @file lv_mem.h
   3:lvgl/src/lv_misc/lv_mem.h ****  *
   4:lvgl/src/lv_misc/lv_mem.h ****  */
   5:lvgl/src/lv_misc/lv_mem.h **** 
   6:lvgl/src/lv_misc/lv_mem.h **** #ifndef LV_MEM_H
   7:lvgl/src/lv_misc/lv_mem.h **** #define LV_MEM_H
   8:lvgl/src/lv_misc/lv_mem.h **** 
   9:lvgl/src/lv_misc/lv_mem.h **** #ifdef __cplusplus
  10:lvgl/src/lv_misc/lv_mem.h **** extern "C" {
  11:lvgl/src/lv_misc/lv_mem.h **** #endif
  12:lvgl/src/lv_misc/lv_mem.h **** 
  13:lvgl/src/lv_misc/lv_mem.h **** /*********************
  14:lvgl/src/lv_misc/lv_mem.h ****  *      INCLUDES
  15:lvgl/src/lv_misc/lv_mem.h ****  *********************/
  16:lvgl/src/lv_misc/lv_mem.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_misc/lv_mem.h **** 
  18:lvgl/src/lv_misc/lv_mem.h **** #include <stdint.h>
  19:lvgl/src/lv_misc/lv_mem.h **** #include <stddef.h>
  20:lvgl/src/lv_misc/lv_mem.h **** #include "lv_log.h"
  21:lvgl/src/lv_misc/lv_mem.h **** #include "lv_types.h"
  22:lvgl/src/lv_misc/lv_mem.h **** 
  23:lvgl/src/lv_misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
  24:lvgl/src/lv_misc/lv_mem.h **** #include <string.h>
  25:lvgl/src/lv_misc/lv_mem.h **** #endif
  26:lvgl/src/lv_misc/lv_mem.h **** 
  27:lvgl/src/lv_misc/lv_mem.h **** /*********************
  28:lvgl/src/lv_misc/lv_mem.h ****  *      DEFINES
  29:lvgl/src/lv_misc/lv_mem.h ****  *********************/
  30:lvgl/src/lv_misc/lv_mem.h **** 
  31:lvgl/src/lv_misc/lv_mem.h **** #ifndef LV_MEM_BUF_MAX_NUM
  32:lvgl/src/lv_misc/lv_mem.h **** #define LV_MEM_BUF_MAX_NUM    16
  33:lvgl/src/lv_misc/lv_mem.h **** #endif
  34:lvgl/src/lv_misc/lv_mem.h **** 
  35:lvgl/src/lv_misc/lv_mem.h **** /**********************
  36:lvgl/src/lv_misc/lv_mem.h ****  *      TYPEDEFS
  37:lvgl/src/lv_misc/lv_mem.h ****  **********************/
  38:lvgl/src/lv_misc/lv_mem.h **** 
  39:lvgl/src/lv_misc/lv_mem.h **** /**
  40:lvgl/src/lv_misc/lv_mem.h ****  * Heap information structure.
  41:lvgl/src/lv_misc/lv_mem.h ****  */
  42:lvgl/src/lv_misc/lv_mem.h **** typedef struct {
  43:lvgl/src/lv_misc/lv_mem.h ****     uint32_t total_size; /**< Total heap size */
  44:lvgl/src/lv_misc/lv_mem.h ****     uint32_t free_cnt;
  45:lvgl/src/lv_misc/lv_mem.h ****     uint32_t free_size; /**< Size of available memory */
  46:lvgl/src/lv_misc/lv_mem.h ****     uint32_t free_biggest_size;
  47:lvgl/src/lv_misc/lv_mem.h ****     uint32_t used_cnt;
  48:lvgl/src/lv_misc/lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used */
  49:lvgl/src/lv_misc/lv_mem.h ****     uint8_t used_pct; /**< Percentage used */
ARM GAS  D:\Temp\cc5ZVeii.s 			page 18


  50:lvgl/src/lv_misc/lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation */
  51:lvgl/src/lv_misc/lv_mem.h **** } lv_mem_monitor_t;
  52:lvgl/src/lv_misc/lv_mem.h **** 
  53:lvgl/src/lv_misc/lv_mem.h **** typedef struct {
  54:lvgl/src/lv_misc/lv_mem.h ****     void * p;
  55:lvgl/src/lv_misc/lv_mem.h ****     uint16_t size;
  56:lvgl/src/lv_misc/lv_mem.h ****     uint8_t used    : 1;
  57:lvgl/src/lv_misc/lv_mem.h **** } lv_mem_buf_t;
  58:lvgl/src/lv_misc/lv_mem.h **** 
  59:lvgl/src/lv_misc/lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  60:lvgl/src/lv_misc/lv_mem.h **** extern lv_mem_buf_arr_t _lv_mem_buf;
  61:lvgl/src/lv_misc/lv_mem.h **** 
  62:lvgl/src/lv_misc/lv_mem.h **** /**********************
  63:lvgl/src/lv_misc/lv_mem.h ****  * GLOBAL PROTOTYPES
  64:lvgl/src/lv_misc/lv_mem.h ****  **********************/
  65:lvgl/src/lv_misc/lv_mem.h **** 
  66:lvgl/src/lv_misc/lv_mem.h **** /**
  67:lvgl/src/lv_misc/lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  68:lvgl/src/lv_misc/lv_mem.h ****  */
  69:lvgl/src/lv_misc/lv_mem.h **** void _lv_mem_init(void);
  70:lvgl/src/lv_misc/lv_mem.h **** 
  71:lvgl/src/lv_misc/lv_mem.h **** /**
  72:lvgl/src/lv_misc/lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
  73:lvgl/src/lv_misc/lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  74:lvgl/src/lv_misc/lv_mem.h ****  */
  75:lvgl/src/lv_misc/lv_mem.h **** void _lv_mem_deinit(void);
  76:lvgl/src/lv_misc/lv_mem.h **** 
  77:lvgl/src/lv_misc/lv_mem.h **** /**
  78:lvgl/src/lv_misc/lv_mem.h ****  * Allocate a memory dynamically
  79:lvgl/src/lv_misc/lv_mem.h ****  * @param size size of the memory to allocate in bytes
  80:lvgl/src/lv_misc/lv_mem.h ****  * @return pointer to the allocated memory
  81:lvgl/src/lv_misc/lv_mem.h ****  */
  82:lvgl/src/lv_misc/lv_mem.h **** void * lv_mem_alloc(size_t size);
  83:lvgl/src/lv_misc/lv_mem.h **** 
  84:lvgl/src/lv_misc/lv_mem.h **** /**
  85:lvgl/src/lv_misc/lv_mem.h ****  * Free an allocated data
  86:lvgl/src/lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory
  87:lvgl/src/lv_misc/lv_mem.h ****  */
  88:lvgl/src/lv_misc/lv_mem.h **** void lv_mem_free(const void * data);
  89:lvgl/src/lv_misc/lv_mem.h **** 
  90:lvgl/src/lv_misc/lv_mem.h **** /**
  91:lvgl/src/lv_misc/lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  92:lvgl/src/lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory.
  93:lvgl/src/lv_misc/lv_mem.h ****  * Its content will be copied to the new memory block and freed
  94:lvgl/src/lv_misc/lv_mem.h ****  * @param new_size the desired new size in byte
  95:lvgl/src/lv_misc/lv_mem.h ****  * @return pointer to the new memory
  96:lvgl/src/lv_misc/lv_mem.h ****  */
  97:lvgl/src/lv_misc/lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  98:lvgl/src/lv_misc/lv_mem.h **** 
  99:lvgl/src/lv_misc/lv_mem.h **** /**
 100:lvgl/src/lv_misc/lv_mem.h ****  * Join the adjacent free memory blocks
 101:lvgl/src/lv_misc/lv_mem.h ****  */
 102:lvgl/src/lv_misc/lv_mem.h **** void lv_mem_defrag(void);
 103:lvgl/src/lv_misc/lv_mem.h **** 
 104:lvgl/src/lv_misc/lv_mem.h **** /**
 105:lvgl/src/lv_misc/lv_mem.h ****  *
 106:lvgl/src/lv_misc/lv_mem.h ****  * @return
ARM GAS  D:\Temp\cc5ZVeii.s 			page 19


 107:lvgl/src/lv_misc/lv_mem.h ****  */
 108:lvgl/src/lv_misc/lv_mem.h **** lv_res_t lv_mem_test(void);
 109:lvgl/src/lv_misc/lv_mem.h **** 
 110:lvgl/src/lv_misc/lv_mem.h **** /**
 111:lvgl/src/lv_misc/lv_mem.h ****  * Give information about the work memory of dynamic allocation
 112:lvgl/src/lv_misc/lv_mem.h ****  * @param mon_p pointer to a dm_mon_p variable,
 113:lvgl/src/lv_misc/lv_mem.h ****  *              the result of the analysis will be stored here
 114:lvgl/src/lv_misc/lv_mem.h ****  */
 115:lvgl/src/lv_misc/lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 116:lvgl/src/lv_misc/lv_mem.h **** 
 117:lvgl/src/lv_misc/lv_mem.h **** /**
 118:lvgl/src/lv_misc/lv_mem.h ****  * Give the size of an allocated memory
 119:lvgl/src/lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory
 120:lvgl/src/lv_misc/lv_mem.h ****  * @return the size of data memory in bytes
 121:lvgl/src/lv_misc/lv_mem.h ****  */
 122:lvgl/src/lv_misc/lv_mem.h **** uint32_t _lv_mem_get_size(const void * data);
 123:lvgl/src/lv_misc/lv_mem.h **** 
 124:lvgl/src/lv_misc/lv_mem.h **** /**
 125:lvgl/src/lv_misc/lv_mem.h ****  * Get a temporal buffer with the given size.
 126:lvgl/src/lv_misc/lv_mem.h ****  * @param size the required size
 127:lvgl/src/lv_misc/lv_mem.h ****  */
 128:lvgl/src/lv_misc/lv_mem.h **** void * _lv_mem_buf_get(uint32_t size);
 129:lvgl/src/lv_misc/lv_mem.h **** 
 130:lvgl/src/lv_misc/lv_mem.h **** /**
 131:lvgl/src/lv_misc/lv_mem.h ****  * Release a memory buffer
 132:lvgl/src/lv_misc/lv_mem.h ****  * @param p buffer to release
 133:lvgl/src/lv_misc/lv_mem.h ****  */
 134:lvgl/src/lv_misc/lv_mem.h **** void _lv_mem_buf_release(void * p);
 135:lvgl/src/lv_misc/lv_mem.h **** 
 136:lvgl/src/lv_misc/lv_mem.h **** /**
 137:lvgl/src/lv_misc/lv_mem.h ****  * Free all memory buffers
 138:lvgl/src/lv_misc/lv_mem.h ****  */
 139:lvgl/src/lv_misc/lv_mem.h **** void _lv_mem_buf_free_all(void);
 140:lvgl/src/lv_misc/lv_mem.h **** 
 141:lvgl/src/lv_misc/lv_mem.h **** //! @cond Doxygen_Suppress
 142:lvgl/src/lv_misc/lv_mem.h **** 
 143:lvgl/src/lv_misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 144:lvgl/src/lv_misc/lv_mem.h **** 
 145:lvgl/src/lv_misc/lv_mem.h **** /**
 146:lvgl/src/lv_misc/lv_mem.h ****  * Wrapper for the standard memcpy
 147:lvgl/src/lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 148:lvgl/src/lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 149:lvgl/src/lv_misc/lv_mem.h ****  * @param len number of byte to copy
 150:lvgl/src/lv_misc/lv_mem.h ****  */
 151:lvgl/src/lv_misc/lv_mem.h **** static inline void * _lv_memcpy(void * dst, const void * src, size_t len)
 152:lvgl/src/lv_misc/lv_mem.h **** {
 153:lvgl/src/lv_misc/lv_mem.h ****     return memcpy(dst, src, len);
 154:lvgl/src/lv_misc/lv_mem.h **** }
 155:lvgl/src/lv_misc/lv_mem.h **** 
 156:lvgl/src/lv_misc/lv_mem.h **** /**
 157:lvgl/src/lv_misc/lv_mem.h ****  * Wrapper for the standard memcpy
 158:lvgl/src/lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 159:lvgl/src/lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 160:lvgl/src/lv_misc/lv_mem.h ****  * @param len number of byte to copy
 161:lvgl/src/lv_misc/lv_mem.h ****  */
 162:lvgl/src/lv_misc/lv_mem.h **** static inline void * _lv_memcpy_small(void * dst, const void * src, size_t len)
 163:lvgl/src/lv_misc/lv_mem.h **** {
ARM GAS  D:\Temp\cc5ZVeii.s 			page 20


 164:lvgl/src/lv_misc/lv_mem.h ****     return memcpy(dst, src, len);
 165:lvgl/src/lv_misc/lv_mem.h **** }
 166:lvgl/src/lv_misc/lv_mem.h **** 
 167:lvgl/src/lv_misc/lv_mem.h **** /**
 168:lvgl/src/lv_misc/lv_mem.h ****  * Wrapper for the standard memset
 169:lvgl/src/lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 170:lvgl/src/lv_misc/lv_mem.h ****  * @param v value to set [0..255]
 171:lvgl/src/lv_misc/lv_mem.h ****  * @param len number of byte to set
 172:lvgl/src/lv_misc/lv_mem.h ****  */
 173:lvgl/src/lv_misc/lv_mem.h **** static inline void _lv_memset(void * dst, uint8_t v, size_t len)
 174:lvgl/src/lv_misc/lv_mem.h **** {
 175:lvgl/src/lv_misc/lv_mem.h ****     memset(dst, v, len);
 176:lvgl/src/lv_misc/lv_mem.h **** }
 177:lvgl/src/lv_misc/lv_mem.h **** 
 178:lvgl/src/lv_misc/lv_mem.h **** /**
 179:lvgl/src/lv_misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 180:lvgl/src/lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 181:lvgl/src/lv_misc/lv_mem.h ****  * @param len number of byte to set
 182:lvgl/src/lv_misc/lv_mem.h ****  */
 183:lvgl/src/lv_misc/lv_mem.h **** static inline void _lv_memset_00(void * dst, size_t len)
 184:lvgl/src/lv_misc/lv_mem.h **** {
 185:lvgl/src/lv_misc/lv_mem.h ****     memset(dst, 0x00, len);
 186:lvgl/src/lv_misc/lv_mem.h **** }
 187:lvgl/src/lv_misc/lv_mem.h **** 
 188:lvgl/src/lv_misc/lv_mem.h **** /**
 189:lvgl/src/lv_misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 190:lvgl/src/lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 191:lvgl/src/lv_misc/lv_mem.h ****  * @param len number of byte to set
 192:lvgl/src/lv_misc/lv_mem.h ****  */
 193:lvgl/src/lv_misc/lv_mem.h **** static inline void _lv_memset_ff(void * dst, size_t len)
 194:lvgl/src/lv_misc/lv_mem.h **** {
 195:lvgl/src/lv_misc/lv_mem.h ****     memset(dst, 0xFF, len);
 196:lvgl/src/lv_misc/lv_mem.h **** }
 197:lvgl/src/lv_misc/lv_mem.h **** 
 198:lvgl/src/lv_misc/lv_mem.h **** #else
 199:lvgl/src/lv_misc/lv_mem.h **** /**
 200:lvgl/src/lv_misc/lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 201:lvgl/src/lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 202:lvgl/src/lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 203:lvgl/src/lv_misc/lv_mem.h ****  * @param len number of byte to copy
 204:lvgl/src/lv_misc/lv_mem.h ****  */
 205:lvgl/src/lv_misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * _lv_memcpy(void * dst, const void * src, size_t len);
 206:lvgl/src/lv_misc/lv_mem.h **** 
 207:lvgl/src/lv_misc/lv_mem.h **** /**
 208:lvgl/src/lv_misc/lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 209:lvgl/src/lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 210:lvgl/src/lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 211:lvgl/src/lv_misc/lv_mem.h ****  * @param len number of byte to copy
 212:lvgl/src/lv_misc/lv_mem.h ****  */
 213:lvgl/src/lv_misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * _lv_memcpy_small(void * dst, const void * src, size_t le
 214:lvgl/src/lv_misc/lv_mem.h **** {
 215:lvgl/src/lv_misc/lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 216:lvgl/src/lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 279              		.loc 2 216 21 view .LVU85
 280 0010 01A9     		add	r1, sp, #4
 215:lvgl/src/lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 281              		.loc 2 215 15 view .LVU86
ARM GAS  D:\Temp\cc5ZVeii.s 			page 21


 282 0012 03AA     		add	r2, sp, #12
 283              	.LBE14:
 284              	.LBE13:
 285              	.LBE12:
 286 0014 0423     		movs	r3, #4
 287              	.LVL22:
 288              	.L18:
 289              	.LBB17:
 290              	.LBB16:
 291              	.LBB15:
 217:lvgl/src/lv_misc/lv_mem.h **** 
 218:lvgl/src/lv_misc/lv_mem.h ****     while(len) {
 292              		.loc 2 218 10 view .LVU87
 293 0016 2BB1     		cbz	r3, .L26
 219:lvgl/src/lv_misc/lv_mem.h ****         *d8 = *s8;
 294              		.loc 2 219 9 is_stmt 1 view .LVU88
 295              		.loc 2 219 15 is_stmt 0 view .LVU89
 296 0018 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 297              	.LVL23:
 298              		.loc 2 219 13 view .LVU90
 299 001c 02F8010B 		strb	r0, [r2], #1
 300              	.LVL24:
 220:lvgl/src/lv_misc/lv_mem.h ****         d8++;
 301              		.loc 2 220 9 is_stmt 1 view .LVU91
 221:lvgl/src/lv_misc/lv_mem.h ****         s8++;
 302              		.loc 2 221 9 view .LVU92
 222:lvgl/src/lv_misc/lv_mem.h ****         len--;
 303              		.loc 2 222 9 view .LVU93
 304              		.loc 2 222 12 is_stmt 0 view .LVU94
 305 0020 013B     		subs	r3, r3, #1
 306              	.LVL25:
 307              		.loc 2 222 12 view .LVU95
 308 0022 F8E7     		b	.L18
 309              	.L26:
 223:lvgl/src/lv_misc/lv_mem.h ****     }
 224:lvgl/src/lv_misc/lv_mem.h **** 
 225:lvgl/src/lv_misc/lv_mem.h ****     return dst;
 310              		.loc 2 225 5 is_stmt 1 view .LVU96
 311              	.LVL26:
 312              		.loc 2 225 5 is_stmt 0 view .LVU97
 313              	.LBE15:
 314              	.LBE16:
 595:lvgl/src/lv_misc/lv_txt.c ****         uint8_t i;
 315              		.loc 1 595 9 is_stmt 1 view .LVU98
 595:lvgl/src/lv_misc/lv_txt.c ****         uint8_t i;
 316              		.loc 1 595 22 is_stmt 0 view .LVU99
 317 0024 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 595:lvgl/src/lv_misc/lv_txt.c ****         uint8_t i;
 318              		.loc 1 595 38 view .LVU100
 319 0028 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
 595:lvgl/src/lv_misc/lv_txt.c ****         uint8_t i;
 320              		.loc 1 595 42 view .LVU101
 321 002c 1204     		lsls	r2, r2, #16
 595:lvgl/src/lv_misc/lv_txt.c ****         uint8_t i;
 322              		.loc 1 595 33 view .LVU102
 323 002e 02EB0362 		add	r2, r2, r3, lsl #24
 595:lvgl/src/lv_misc/lv_txt.c ****         uint8_t i;
ARM GAS  D:\Temp\cc5ZVeii.s 			page 22


 324              		.loc 1 595 54 view .LVU103
 325 0032 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
 595:lvgl/src/lv_misc/lv_txt.c ****         uint8_t i;
 326              		.loc 1 595 49 view .LVU104
 327 0036 02EB0322 		add	r2, r2, r3, lsl #8
 595:lvgl/src/lv_misc/lv_txt.c ****         uint8_t i;
 328              		.loc 1 595 69 view .LVU105
 329 003a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 595:lvgl/src/lv_misc/lv_txt.c ****         uint8_t i;
 330              		.loc 1 595 64 view .LVU106
 331 003e 1A44     		add	r2, r2, r3
 332              	.LVL27:
 596:lvgl/src/lv_misc/lv_txt.c ****         for(i = 0; i < 4; i++) {
 333              		.loc 1 596 9 is_stmt 1 view .LVU107
 597:lvgl/src/lv_misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 334              		.loc 1 597 9 view .LVU108
 597:lvgl/src/lv_misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 335              		.loc 1 597 15 is_stmt 0 view .LVU109
 336 0040 0023     		movs	r3, #0
 597:lvgl/src/lv_misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 337              		.loc 1 597 9 view .LVU110
 338 0042 01E0     		b	.L21
 339              	.LVL28:
 340              	.L22:
 597:lvgl/src/lv_misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 341              		.loc 1 597 28 discriminator 2 view .LVU111
 342 0044 0133     		adds	r3, r3, #1
 343              	.LVL29:
 597:lvgl/src/lv_misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 344              		.loc 1 597 28 discriminator 2 view .LVU112
 345 0046 DBB2     		uxtb	r3, r3
 346              	.LVL30:
 347              	.L21:
 597:lvgl/src/lv_misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 348              		.loc 1 597 9 discriminator 1 view .LVU113
 349 0048 032B     		cmp	r3, #3
 350 004a 04D8     		bhi	.L27
 598:lvgl/src/lv_misc/lv_txt.c ****                 swapped = (swapped >> 8); /*Ignore leading zeros (they were in the end originally)*
 351              		.loc 1 598 13 is_stmt 1 view .LVU114
 598:lvgl/src/lv_misc/lv_txt.c ****                 swapped = (swapped >> 8); /*Ignore leading zeros (they were in the end originally)*
 352              		.loc 1 598 15 is_stmt 0 view .LVU115
 353 004c 12F0FF0F 		tst	r2, #255
 354 0050 F8D1     		bne	.L22
 599:lvgl/src/lv_misc/lv_txt.c ****         }
 355              		.loc 1 599 17 is_stmt 1 view .LVU116
 599:lvgl/src/lv_misc/lv_txt.c ****         }
 356              		.loc 1 599 25 is_stmt 0 view .LVU117
 357 0052 120A     		lsrs	r2, r2, #8
 358              	.LVL31:
 599:lvgl/src/lv_misc/lv_txt.c ****         }
 359              		.loc 1 599 25 view .LVU118
 360 0054 F6E7     		b	.L22
 361              	.L27:
 601:lvgl/src/lv_misc/lv_txt.c ****     }
 362              		.loc 1 601 9 is_stmt 1 view .LVU119
 601:lvgl/src/lv_misc/lv_txt.c ****     }
 363              		.loc 1 601 11 is_stmt 0 view .LVU120
ARM GAS  D:\Temp\cc5ZVeii.s 			page 23


 364 0056 0192     		str	r2, [sp, #4]
 365 0058 D7E7     		b	.L19
 366              	.LBE17:
 367              		.cfi_endproc
 368              	.LFE177:
 370              		.section	.text.lv_txt_utf8_next,"ax",%progbits
 371              		.align	1
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	lv_txt_utf8_next:
 378              	.LVL32:
 379              	.LFB178:
 606:lvgl/src/lv_misc/lv_txt.c **** 
 607:lvgl/src/lv_misc/lv_txt.c **** /**
 608:lvgl/src/lv_misc/lv_txt.c ****  * Decode an UTF-8 character from a string.
 609:lvgl/src/lv_misc/lv_txt.c ****  * @param txt pointer to '\0' terminated string
 610:lvgl/src/lv_misc/lv_txt.c ****  * @param i start byte index in 'txt' where to start.
 611:lvgl/src/lv_misc/lv_txt.c ****  *          After call it will point to the next UTF-8 char in 'txt'.
 612:lvgl/src/lv_misc/lv_txt.c ****  *          NULL to use txt[0] as index
 613:lvgl/src/lv_misc/lv_txt.c ****  * @return the decoded Unicode character or 0 on invalid UTF-8 code
 614:lvgl/src/lv_misc/lv_txt.c ****  */
 615:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_utf8_next(const char * txt, uint32_t * i)
 616:lvgl/src/lv_misc/lv_txt.c **** {
 380              		.loc 1 616 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 8
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385              		.loc 1 616 1 is_stmt 0 view .LVU122
 386 0000 30B4     		push	{r4, r5}
 387              	.LCFI7:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 4, -8
 390              		.cfi_offset 5, -4
 391 0002 82B0     		sub	sp, sp, #8
 392              	.LCFI8:
 393              		.cfi_def_cfa_offset 16
 617:lvgl/src/lv_misc/lv_txt.c ****     /* Unicode to UTF-8
 618:lvgl/src/lv_misc/lv_txt.c ****      * 00000000 00000000 00000000 0xxxxxxx -> 0xxxxxxx
 619:lvgl/src/lv_misc/lv_txt.c ****      * 00000000 00000000 00000yyy yyxxxxxx -> 110yyyyy 10xxxxxx
 620:lvgl/src/lv_misc/lv_txt.c ****      * 00000000 00000000 zzzzyyyy yyxxxxxx -> 1110zzzz 10yyyyyy 10xxxxxx
 621:lvgl/src/lv_misc/lv_txt.c ****      * 00000000 000wwwzz zzzzyyyy yyxxxxxx -> 11110www 10zzzzzz 10yyyyyy 10xxxxxx
 622:lvgl/src/lv_misc/lv_txt.c ****      * */
 623:lvgl/src/lv_misc/lv_txt.c **** 
 624:lvgl/src/lv_misc/lv_txt.c ****     uint32_t result = 0;
 394              		.loc 1 624 5 is_stmt 1 view .LVU123
 395              	.LVL33:
 625:lvgl/src/lv_misc/lv_txt.c **** 
 626:lvgl/src/lv_misc/lv_txt.c ****     /*Dummy 'i' pointer is required*/
 627:lvgl/src/lv_misc/lv_txt.c ****     uint32_t i_tmp = 0;
 396              		.loc 1 627 5 view .LVU124
 397              		.loc 1 627 14 is_stmt 0 view .LVU125
 398 0004 0023     		movs	r3, #0
 399 0006 0193     		str	r3, [sp, #4]
 628:lvgl/src/lv_misc/lv_txt.c ****     if(i == NULL) i = &i_tmp;
ARM GAS  D:\Temp\cc5ZVeii.s 			page 24


 400              		.loc 1 628 5 is_stmt 1 view .LVU126
 401              		.loc 1 628 7 is_stmt 0 view .LVU127
 402 0008 0C46     		mov	r4, r1
 403 000a 51B1     		cbz	r1, .L43
 404              	.L29:
 405              	.LVL34:
 629:lvgl/src/lv_misc/lv_txt.c **** 
 630:lvgl/src/lv_misc/lv_txt.c ****     /*Normal ASCII*/
 631:lvgl/src/lv_misc/lv_txt.c ****     if((txt[*i] & 0x80) == 0) {
 406              		.loc 1 631 5 is_stmt 1 view .LVU128
 407              		.loc 1 631 13 is_stmt 0 view .LVU129
 408 000c 2268     		ldr	r2, [r4]
 409              		.loc 1 631 12 view .LVU130
 410 000e 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 411              		.loc 1 631 7 view .LVU131
 412 0010 13F0800F 		tst	r3, #128
 413 0014 07D1     		bne	.L30
 632:lvgl/src/lv_misc/lv_txt.c ****         result = txt[*i];
 414              		.loc 1 632 9 is_stmt 1 view .LVU132
 415              		.loc 1 632 16 is_stmt 0 view .LVU133
 416 0016 1846     		mov	r0, r3
 417              	.LVL35:
 633:lvgl/src/lv_misc/lv_txt.c ****         (*i)++;
 418              		.loc 1 633 9 is_stmt 1 view .LVU134
 419              		.loc 1 633 13 is_stmt 0 view .LVU135
 420 0018 0132     		adds	r2, r2, #1
 421 001a 2260     		str	r2, [r4]
 422              	.LVL36:
 423              	.L28:
 634:lvgl/src/lv_misc/lv_txt.c ****     }
 635:lvgl/src/lv_misc/lv_txt.c ****     /*Real UTF-8 decode*/
 636:lvgl/src/lv_misc/lv_txt.c ****     else {
 637:lvgl/src/lv_misc/lv_txt.c ****         /*2 bytes UTF-8 code*/
 638:lvgl/src/lv_misc/lv_txt.c ****         if((txt[*i] & 0xE0) == 0xC0) {
 639:lvgl/src/lv_misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x1F) << 6;
 640:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 641:lvgl/src/lv_misc/lv_txt.c ****             if((txt[*i] & 0xC0) != 0x80) return 0; /*Invalid UTF-8 code*/
 642:lvgl/src/lv_misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 643:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 644:lvgl/src/lv_misc/lv_txt.c ****         }
 645:lvgl/src/lv_misc/lv_txt.c ****         /*3 bytes UTF-8 code*/
 646:lvgl/src/lv_misc/lv_txt.c ****         else if((txt[*i] & 0xF0) == 0xE0) {
 647:lvgl/src/lv_misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x0F) << 12;
 648:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 649:lvgl/src/lv_misc/lv_txt.c **** 
 650:lvgl/src/lv_misc/lv_txt.c ****             if((txt[*i] & 0xC0) != 0x80) return 0; /*Invalid UTF-8 code*/
 651:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 652:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 653:lvgl/src/lv_misc/lv_txt.c **** 
 654:lvgl/src/lv_misc/lv_txt.c ****             if((txt[*i] & 0xC0) != 0x80) return 0; /*Invalid UTF-8 code*/
 655:lvgl/src/lv_misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 656:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 657:lvgl/src/lv_misc/lv_txt.c ****         }
 658:lvgl/src/lv_misc/lv_txt.c ****         /*4 bytes UTF-8 code*/
 659:lvgl/src/lv_misc/lv_txt.c ****         else if((txt[*i] & 0xF8) == 0xF0) {
 660:lvgl/src/lv_misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x07) << 18;
 661:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
ARM GAS  D:\Temp\cc5ZVeii.s 			page 25


 662:lvgl/src/lv_misc/lv_txt.c **** 
 663:lvgl/src/lv_misc/lv_txt.c ****             if((txt[*i] & 0xC0) != 0x80) return 0; /*Invalid UTF-8 code*/
 664:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 12;
 665:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 666:lvgl/src/lv_misc/lv_txt.c **** 
 667:lvgl/src/lv_misc/lv_txt.c ****             if((txt[*i] & 0xC0) != 0x80) return 0; /*Invalid UTF-8 code*/
 668:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 669:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 670:lvgl/src/lv_misc/lv_txt.c **** 
 671:lvgl/src/lv_misc/lv_txt.c ****             if((txt[*i] & 0xC0) != 0x80) return 0; /*Invalid UTF-8 code*/
 672:lvgl/src/lv_misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 673:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 674:lvgl/src/lv_misc/lv_txt.c ****         }
 675:lvgl/src/lv_misc/lv_txt.c ****         else {
 676:lvgl/src/lv_misc/lv_txt.c ****             (*i)++; /*Not UTF-8 char. Go the next.*/
 677:lvgl/src/lv_misc/lv_txt.c ****         }
 678:lvgl/src/lv_misc/lv_txt.c ****     }
 679:lvgl/src/lv_misc/lv_txt.c ****     return result;
 680:lvgl/src/lv_misc/lv_txt.c **** }
 424              		.loc 1 680 1 view .LVU136
 425 001c 02B0     		add	sp, sp, #8
 426              	.LCFI9:
 427              		.cfi_remember_state
 428              		.cfi_def_cfa_offset 8
 429              		@ sp needed
 430 001e 30BC     		pop	{r4, r5}
 431              	.LCFI10:
 432              		.cfi_restore 5
 433              		.cfi_restore 4
 434              		.cfi_def_cfa_offset 0
 435              	.LVL37:
 436              		.loc 1 680 1 view .LVU137
 437 0020 7047     		bx	lr
 438              	.LVL38:
 439              	.L43:
 440              	.LCFI11:
 441              		.cfi_restore_state
 628:lvgl/src/lv_misc/lv_txt.c **** 
 442              		.loc 1 628 21 view .LVU138
 443 0022 01AC     		add	r4, sp, #4
 444 0024 F2E7     		b	.L29
 445              	.LVL39:
 446              	.L30:
 638:lvgl/src/lv_misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x1F) << 6;
 447              		.loc 1 638 9 is_stmt 1 view .LVU139
 638:lvgl/src/lv_misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x1F) << 6;
 448              		.loc 1 638 11 is_stmt 0 view .LVU140
 449 0026 03F0E001 		and	r1, r3, #224
 450 002a C029     		cmp	r1, #192
 451 002c 0BD0     		beq	.L44
 646:lvgl/src/lv_misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x0F) << 12;
 452              		.loc 1 646 14 is_stmt 1 view .LVU141
 646:lvgl/src/lv_misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x0F) << 12;
 453              		.loc 1 646 16 is_stmt 0 view .LVU142
 454 002e 03F0F001 		and	r1, r3, #240
 455 0032 E029     		cmp	r1, #224
 456 0034 17D0     		beq	.L45
ARM GAS  D:\Temp\cc5ZVeii.s 			page 26


 659:lvgl/src/lv_misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x07) << 18;
 457              		.loc 1 659 14 is_stmt 1 view .LVU143
 659:lvgl/src/lv_misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x07) << 18;
 458              		.loc 1 659 16 is_stmt 0 view .LVU144
 459 0036 03F0F801 		and	r1, r3, #248
 460 003a F029     		cmp	r1, #240
 461 003c 2DD0     		beq	.L46
 676:lvgl/src/lv_misc/lv_txt.c ****         }
 462              		.loc 1 676 13 is_stmt 1 view .LVU145
 676:lvgl/src/lv_misc/lv_txt.c ****         }
 463              		.loc 1 676 17 is_stmt 0 view .LVU146
 464 003e 0132     		adds	r2, r2, #1
 465 0040 2260     		str	r2, [r4]
 624:lvgl/src/lv_misc/lv_txt.c **** 
 466              		.loc 1 624 14 view .LVU147
 467 0042 0020     		movs	r0, #0
 468              	.LVL40:
 624:lvgl/src/lv_misc/lv_txt.c **** 
 469              		.loc 1 624 14 view .LVU148
 470 0044 EAE7     		b	.L28
 471              	.LVL41:
 472              	.L44:
 639:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 473              		.loc 1 639 13 is_stmt 1 view .LVU149
 639:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 474              		.loc 1 639 49 is_stmt 0 view .LVU150
 475 0046 9B01     		lsls	r3, r3, #6
 639:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 476              		.loc 1 639 20 view .LVU151
 477 0048 03F4F863 		and	r3, r3, #1984
 478              	.LVL42:
 640:lvgl/src/lv_misc/lv_txt.c ****             if((txt[*i] & 0xC0) != 0x80) return 0; /*Invalid UTF-8 code*/
 479              		.loc 1 640 13 is_stmt 1 view .LVU152
 640:lvgl/src/lv_misc/lv_txt.c ****             if((txt[*i] & 0xC0) != 0x80) return 0; /*Invalid UTF-8 code*/
 480              		.loc 1 640 17 is_stmt 0 view .LVU153
 481 004c 0132     		adds	r2, r2, #1
 482 004e 2260     		str	r2, [r4]
 641:lvgl/src/lv_misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 483              		.loc 1 641 13 is_stmt 1 view .LVU154
 641:lvgl/src/lv_misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 484              		.loc 1 641 20 is_stmt 0 view .LVU155
 485 0050 805C     		ldrb	r0, [r0, r2]	@ zero_extendqisi2
 486              	.LVL43:
 641:lvgl/src/lv_misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 487              		.loc 1 641 15 view .LVU156
 488 0052 00F0C001 		and	r1, r0, #192
 489 0056 8029     		cmp	r1, #128
 490 0058 45D1     		bne	.L36
 642:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 491              		.loc 1 642 13 is_stmt 1 view .LVU157
 642:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 492              		.loc 1 642 32 is_stmt 0 view .LVU158
 493 005a 00F03F00 		and	r0, r0, #63
 642:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 494              		.loc 1 642 20 view .LVU159
 495 005e 1844     		add	r0, r0, r3
 496              	.LVL44:
ARM GAS  D:\Temp\cc5ZVeii.s 			page 27


 643:lvgl/src/lv_misc/lv_txt.c ****         }
 497              		.loc 1 643 13 is_stmt 1 view .LVU160
 643:lvgl/src/lv_misc/lv_txt.c ****         }
 498              		.loc 1 643 17 is_stmt 0 view .LVU161
 499 0060 0132     		adds	r2, r2, #1
 500 0062 2260     		str	r2, [r4]
 501 0064 DAE7     		b	.L28
 502              	.LVL45:
 503              	.L45:
 647:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 504              		.loc 1 647 13 is_stmt 1 view .LVU162
 647:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 505              		.loc 1 647 49 is_stmt 0 view .LVU163
 506 0066 1B03     		lsls	r3, r3, #12
 647:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 507              		.loc 1 647 20 view .LVU164
 508 0068 9BB2     		uxth	r3, r3
 509              	.LVL46:
 648:lvgl/src/lv_misc/lv_txt.c **** 
 510              		.loc 1 648 13 is_stmt 1 view .LVU165
 648:lvgl/src/lv_misc/lv_txt.c **** 
 511              		.loc 1 648 17 is_stmt 0 view .LVU166
 512 006a 0132     		adds	r2, r2, #1
 513 006c 2260     		str	r2, [r4]
 650:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 514              		.loc 1 650 13 is_stmt 1 view .LVU167
 650:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 515              		.loc 1 650 20 is_stmt 0 view .LVU168
 516 006e 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 650:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 517              		.loc 1 650 15 view .LVU169
 518 0070 01F0C005 		and	r5, r1, #192
 519 0074 802D     		cmp	r5, #128
 520 0076 38D1     		bne	.L37
 651:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 521              		.loc 1 651 13 is_stmt 1 view .LVU170
 651:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 522              		.loc 1 651 50 is_stmt 0 view .LVU171
 523 0078 8901     		lsls	r1, r1, #6
 524 007a 01F47C61 		and	r1, r1, #4032
 651:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 525              		.loc 1 651 20 view .LVU172
 526 007e 0B44     		add	r3, r3, r1
 527              	.LVL47:
 652:lvgl/src/lv_misc/lv_txt.c **** 
 528              		.loc 1 652 13 is_stmt 1 view .LVU173
 652:lvgl/src/lv_misc/lv_txt.c **** 
 529              		.loc 1 652 17 is_stmt 0 view .LVU174
 530 0080 511C     		adds	r1, r2, #1
 531 0082 2160     		str	r1, [r4]
 654:lvgl/src/lv_misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 532              		.loc 1 654 13 is_stmt 1 view .LVU175
 654:lvgl/src/lv_misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 533              		.loc 1 654 20 is_stmt 0 view .LVU176
 534 0084 425C     		ldrb	r2, [r0, r1]	@ zero_extendqisi2
 654:lvgl/src/lv_misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 535              		.loc 1 654 15 view .LVU177
ARM GAS  D:\Temp\cc5ZVeii.s 			page 28


 536 0086 02F0C000 		and	r0, r2, #192
 537              	.LVL48:
 654:lvgl/src/lv_misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 538              		.loc 1 654 15 view .LVU178
 539 008a 8028     		cmp	r0, #128
 540 008c 2FD1     		bne	.L38
 655:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 541              		.loc 1 655 13 is_stmt 1 view .LVU179
 655:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 542              		.loc 1 655 32 is_stmt 0 view .LVU180
 543 008e 02F03F00 		and	r0, r2, #63
 655:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 544              		.loc 1 655 20 view .LVU181
 545 0092 1844     		add	r0, r0, r3
 546              	.LVL49:
 656:lvgl/src/lv_misc/lv_txt.c ****         }
 547              		.loc 1 656 13 is_stmt 1 view .LVU182
 656:lvgl/src/lv_misc/lv_txt.c ****         }
 548              		.loc 1 656 17 is_stmt 0 view .LVU183
 549 0094 0131     		adds	r1, r1, #1
 550 0096 2160     		str	r1, [r4]
 551 0098 C0E7     		b	.L28
 552              	.LVL50:
 553              	.L46:
 660:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 554              		.loc 1 660 13 is_stmt 1 view .LVU184
 660:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 555              		.loc 1 660 49 is_stmt 0 view .LVU185
 556 009a 9B04     		lsls	r3, r3, #18
 660:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 557              		.loc 1 660 20 view .LVU186
 558 009c 03F4E013 		and	r3, r3, #1835008
 559              	.LVL51:
 661:lvgl/src/lv_misc/lv_txt.c **** 
 560              		.loc 1 661 13 is_stmt 1 view .LVU187
 661:lvgl/src/lv_misc/lv_txt.c **** 
 561              		.loc 1 661 17 is_stmt 0 view .LVU188
 562 00a0 0132     		adds	r2, r2, #1
 563 00a2 2260     		str	r2, [r4]
 663:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 12;
 564              		.loc 1 663 13 is_stmt 1 view .LVU189
 663:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 12;
 565              		.loc 1 663 20 is_stmt 0 view .LVU190
 566 00a4 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 663:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 12;
 567              		.loc 1 663 15 view .LVU191
 568 00a6 01F0C005 		and	r5, r1, #192
 569 00aa 802D     		cmp	r5, #128
 570 00ac 21D1     		bne	.L39
 664:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 571              		.loc 1 664 13 is_stmt 1 view .LVU192
 664:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 572              		.loc 1 664 50 is_stmt 0 view .LVU193
 573 00ae 0903     		lsls	r1, r1, #12
 574 00b0 01F47C31 		and	r1, r1, #258048
 664:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 575              		.loc 1 664 20 view .LVU194
ARM GAS  D:\Temp\cc5ZVeii.s 			page 29


 576 00b4 0B43     		orrs	r3, r3, r1
 577              	.LVL52:
 665:lvgl/src/lv_misc/lv_txt.c **** 
 578              		.loc 1 665 13 is_stmt 1 view .LVU195
 665:lvgl/src/lv_misc/lv_txt.c **** 
 579              		.loc 1 665 17 is_stmt 0 view .LVU196
 580 00b6 0132     		adds	r2, r2, #1
 581 00b8 2260     		str	r2, [r4]
 667:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 582              		.loc 1 667 13 is_stmt 1 view .LVU197
 667:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 583              		.loc 1 667 20 is_stmt 0 view .LVU198
 584 00ba 815C     		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 667:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 585              		.loc 1 667 15 view .LVU199
 586 00bc 01F0C005 		and	r5, r1, #192
 587 00c0 802D     		cmp	r5, #128
 588 00c2 18D1     		bne	.L40
 668:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 589              		.loc 1 668 13 is_stmt 1 view .LVU200
 668:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 590              		.loc 1 668 50 is_stmt 0 view .LVU201
 591 00c4 8901     		lsls	r1, r1, #6
 592 00c6 01F47C61 		and	r1, r1, #4032
 668:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 593              		.loc 1 668 20 view .LVU202
 594 00ca 1944     		add	r1, r1, r3
 595              	.LVL53:
 669:lvgl/src/lv_misc/lv_txt.c **** 
 596              		.loc 1 669 13 is_stmt 1 view .LVU203
 669:lvgl/src/lv_misc/lv_txt.c **** 
 597              		.loc 1 669 17 is_stmt 0 view .LVU204
 598 00cc 0132     		adds	r2, r2, #1
 599 00ce 2260     		str	r2, [r4]
 671:lvgl/src/lv_misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 600              		.loc 1 671 13 is_stmt 1 view .LVU205
 671:lvgl/src/lv_misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 601              		.loc 1 671 20 is_stmt 0 view .LVU206
 602 00d0 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 671:lvgl/src/lv_misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 603              		.loc 1 671 15 view .LVU207
 604 00d2 03F0C000 		and	r0, r3, #192
 605              	.LVL54:
 671:lvgl/src/lv_misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 606              		.loc 1 671 15 view .LVU208
 607 00d6 8028     		cmp	r0, #128
 608 00d8 0FD1     		bne	.L41
 672:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 609              		.loc 1 672 13 is_stmt 1 view .LVU209
 672:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 610              		.loc 1 672 31 is_stmt 0 view .LVU210
 611 00da 03F03F03 		and	r3, r3, #63
 672:lvgl/src/lv_misc/lv_txt.c ****             (*i)++;
 612              		.loc 1 672 20 view .LVU211
 613 00de 5818     		adds	r0, r3, r1
 614              	.LVL55:
 673:lvgl/src/lv_misc/lv_txt.c ****         }
ARM GAS  D:\Temp\cc5ZVeii.s 			page 30


 615              		.loc 1 673 13 is_stmt 1 view .LVU212
 673:lvgl/src/lv_misc/lv_txt.c ****         }
 616              		.loc 1 673 17 is_stmt 0 view .LVU213
 617 00e0 0132     		adds	r2, r2, #1
 618 00e2 2260     		str	r2, [r4]
 619 00e4 9AE7     		b	.L28
 620              	.LVL56:
 621              	.L36:
 641:lvgl/src/lv_misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 622              		.loc 1 641 49 view .LVU214
 623 00e6 0020     		movs	r0, #0
 624 00e8 98E7     		b	.L28
 625              	.LVL57:
 626              	.L37:
 650:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 627              		.loc 1 650 49 view .LVU215
 628 00ea 0020     		movs	r0, #0
 629              	.LVL58:
 650:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 630              		.loc 1 650 49 view .LVU216
 631 00ec 96E7     		b	.L28
 632              	.L38:
 654:lvgl/src/lv_misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 633              		.loc 1 654 49 view .LVU217
 634 00ee 0020     		movs	r0, #0
 635 00f0 94E7     		b	.L28
 636              	.LVL59:
 637              	.L39:
 663:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 12;
 638              		.loc 1 663 49 view .LVU218
 639 00f2 0020     		movs	r0, #0
 640              	.LVL60:
 663:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 12;
 641              		.loc 1 663 49 view .LVU219
 642 00f4 92E7     		b	.L28
 643              	.LVL61:
 644              	.L40:
 667:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 645              		.loc 1 667 49 view .LVU220
 646 00f6 0020     		movs	r0, #0
 647              	.LVL62:
 667:lvgl/src/lv_misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 648              		.loc 1 667 49 view .LVU221
 649 00f8 90E7     		b	.L28
 650              	.LVL63:
 651              	.L41:
 671:lvgl/src/lv_misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 652              		.loc 1 671 49 view .LVU222
 653 00fa 0020     		movs	r0, #0
 654 00fc 8EE7     		b	.L28
 655              		.cfi_endproc
 656              	.LFE178:
 658              		.section	.text.lv_txt_utf8_prev,"ax",%progbits
 659              		.align	1
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
ARM GAS  D:\Temp\cc5ZVeii.s 			page 31


 663              		.fpu fpv4-sp-d16
 665              	lv_txt_utf8_prev:
 666              	.LVL64:
 667              	.LFB179:
 681:lvgl/src/lv_misc/lv_txt.c **** 
 682:lvgl/src/lv_misc/lv_txt.c **** /**
 683:lvgl/src/lv_misc/lv_txt.c ****  * Get previous UTF-8 character form a string.
 684:lvgl/src/lv_misc/lv_txt.c ****  * @param txt pointer to '\0' terminated string
 685:lvgl/src/lv_misc/lv_txt.c ****  * @param i start byte index in 'txt' where to start. After the call it will point to the previous
 686:lvgl/src/lv_misc/lv_txt.c ****  * UTF-8 char in 'txt'.
 687:lvgl/src/lv_misc/lv_txt.c ****  * @return the decoded Unicode character or 0 on invalid UTF-8 code
 688:lvgl/src/lv_misc/lv_txt.c ****  */
 689:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_utf8_prev(const char * txt, uint32_t * i)
 690:lvgl/src/lv_misc/lv_txt.c **** {
 668              		.loc 1 690 1 is_stmt 1 view -0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 8
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              		.loc 1 690 1 is_stmt 0 view .LVU224
 673 0000 70B5     		push	{r4, r5, r6, lr}
 674              	.LCFI12:
 675              		.cfi_def_cfa_offset 16
 676              		.cfi_offset 4, -16
 677              		.cfi_offset 5, -12
 678              		.cfi_offset 6, -8
 679              		.cfi_offset 14, -4
 680 0002 82B0     		sub	sp, sp, #8
 681              	.LCFI13:
 682              		.cfi_def_cfa_offset 24
 683 0004 0646     		mov	r6, r0
 684 0006 0D46     		mov	r5, r1
 691:lvgl/src/lv_misc/lv_txt.c ****     uint8_t c_size;
 685              		.loc 1 691 5 is_stmt 1 view .LVU225
 692:lvgl/src/lv_misc/lv_txt.c ****     uint8_t cnt = 0;
 686              		.loc 1 692 5 view .LVU226
 687              	.LVL65:
 693:lvgl/src/lv_misc/lv_txt.c **** 
 694:lvgl/src/lv_misc/lv_txt.c ****     /*Try to find a !0 long UTF-8 char by stepping one character back*/
 695:lvgl/src/lv_misc/lv_txt.c ****     (*i)--;
 688              		.loc 1 695 5 view .LVU227
 689              		.loc 1 695 6 is_stmt 0 view .LVU228
 690 0008 0B68     		ldr	r3, [r1]
 691              		.loc 1 695 9 view .LVU229
 692 000a 013B     		subs	r3, r3, #1
 693 000c 0B60     		str	r3, [r1]
 692:lvgl/src/lv_misc/lv_txt.c ****     uint8_t cnt = 0;
 694              		.loc 1 692 13 view .LVU230
 695 000e 0024     		movs	r4, #0
 696 0010 02E0     		b	.L50
 697              	.LVL66:
 698              	.L49:
 696:lvgl/src/lv_misc/lv_txt.c ****     do {
 697:lvgl/src/lv_misc/lv_txt.c ****         if(cnt >= 4) return 0; /*No UTF-8 char found before the initial*/
 698:lvgl/src/lv_misc/lv_txt.c **** 
 699:lvgl/src/lv_misc/lv_txt.c ****         c_size = _lv_txt_encoded_size(&txt[*i]);
 700:lvgl/src/lv_misc/lv_txt.c ****         if(c_size == 0) {
 701:lvgl/src/lv_misc/lv_txt.c ****             if(*i != 0)
ARM GAS  D:\Temp\cc5ZVeii.s 			page 32


 702:lvgl/src/lv_misc/lv_txt.c ****                 (*i)--;
 703:lvgl/src/lv_misc/lv_txt.c ****             else
 704:lvgl/src/lv_misc/lv_txt.c ****                 return 0;
 705:lvgl/src/lv_misc/lv_txt.c ****         }
 706:lvgl/src/lv_misc/lv_txt.c ****         cnt++;
 699              		.loc 1 706 9 is_stmt 1 view .LVU231
 700              		.loc 1 706 12 is_stmt 0 view .LVU232
 701 0012 0134     		adds	r4, r4, #1
 702              	.LVL67:
 703              		.loc 1 706 12 view .LVU233
 704 0014 E4B2     		uxtb	r4, r4
 705              	.LVL68:
 707:lvgl/src/lv_misc/lv_txt.c ****     } while(c_size == 0);
 706              		.loc 1 707 5 view .LVU234
 707 0016 73B9     		cbnz	r3, .L53
 708              	.LVL69:
 709              	.L50:
 696:lvgl/src/lv_misc/lv_txt.c ****     do {
 710              		.loc 1 696 5 is_stmt 1 view .LVU235
 697:lvgl/src/lv_misc/lv_txt.c **** 
 711              		.loc 1 697 9 view .LVU236
 697:lvgl/src/lv_misc/lv_txt.c **** 
 712              		.loc 1 697 11 is_stmt 0 view .LVU237
 713 0018 032C     		cmp	r4, #3
 714 001a 14D8     		bhi	.L51
 699:lvgl/src/lv_misc/lv_txt.c ****         if(c_size == 0) {
 715              		.loc 1 699 9 is_stmt 1 view .LVU238
 699:lvgl/src/lv_misc/lv_txt.c ****         if(c_size == 0) {
 716              		.loc 1 699 44 is_stmt 0 view .LVU239
 717 001c 2868     		ldr	r0, [r5]
 699:lvgl/src/lv_misc/lv_txt.c ****         if(c_size == 0) {
 718              		.loc 1 699 18 view .LVU240
 719 001e 0B4B     		ldr	r3, .L54
 720 0020 1B68     		ldr	r3, [r3]
 721 0022 3044     		add	r0, r0, r6
 722 0024 9847     		blx	r3
 723              	.LVL70:
 700:lvgl/src/lv_misc/lv_txt.c ****             if(*i != 0)
 724              		.loc 1 700 9 is_stmt 1 view .LVU241
 700:lvgl/src/lv_misc/lv_txt.c ****             if(*i != 0)
 725              		.loc 1 700 11 is_stmt 0 view .LVU242
 726 0026 0346     		mov	r3, r0
 727 0028 0028     		cmp	r0, #0
 728 002a F2D1     		bne	.L49
 701:lvgl/src/lv_misc/lv_txt.c ****                 (*i)--;
 729              		.loc 1 701 13 is_stmt 1 view .LVU243
 701:lvgl/src/lv_misc/lv_txt.c ****                 (*i)--;
 730              		.loc 1 701 16 is_stmt 0 view .LVU244
 731 002c 2868     		ldr	r0, [r5]
 732              	.LVL71:
 701:lvgl/src/lv_misc/lv_txt.c ****                 (*i)--;
 733              		.loc 1 701 15 view .LVU245
 734 002e 58B1     		cbz	r0, .L47
 702:lvgl/src/lv_misc/lv_txt.c ****             else
 735              		.loc 1 702 17 is_stmt 1 view .LVU246
 702:lvgl/src/lv_misc/lv_txt.c ****             else
 736              		.loc 1 702 21 is_stmt 0 view .LVU247
ARM GAS  D:\Temp\cc5ZVeii.s 			page 33


 737 0030 0138     		subs	r0, r0, #1
 738 0032 2860     		str	r0, [r5]
 739 0034 EDE7     		b	.L49
 740              	.L53:
 708:lvgl/src/lv_misc/lv_txt.c **** 
 709:lvgl/src/lv_misc/lv_txt.c ****     uint32_t i_tmp  = *i;
 741              		.loc 1 709 5 is_stmt 1 view .LVU248
 742              		.loc 1 709 23 is_stmt 0 view .LVU249
 743 0036 2B68     		ldr	r3, [r5]
 744              		.loc 1 709 14 view .LVU250
 745 0038 0193     		str	r3, [sp, #4]
 710:lvgl/src/lv_misc/lv_txt.c ****     uint32_t letter = _lv_txt_encoded_next(txt, &i_tmp); /*Character found, get it*/
 746              		.loc 1 710 5 is_stmt 1 view .LVU251
 747              		.loc 1 710 23 is_stmt 0 view .LVU252
 748 003a 054B     		ldr	r3, .L54+4
 749 003c 1B68     		ldr	r3, [r3]
 750 003e 01A9     		add	r1, sp, #4
 751 0040 3046     		mov	r0, r6
 752 0042 9847     		blx	r3
 753              	.LVL72:
 711:lvgl/src/lv_misc/lv_txt.c **** 
 712:lvgl/src/lv_misc/lv_txt.c ****     return letter;
 754              		.loc 1 712 5 is_stmt 1 view .LVU253
 755              		.loc 1 712 12 is_stmt 0 view .LVU254
 756 0044 00E0     		b	.L47
 757              	.LVL73:
 758              	.L51:
 697:lvgl/src/lv_misc/lv_txt.c **** 
 759              		.loc 1 697 29 view .LVU255
 760 0046 0020     		movs	r0, #0
 761              	.L47:
 713:lvgl/src/lv_misc/lv_txt.c **** }
 762              		.loc 1 713 1 view .LVU256
 763 0048 02B0     		add	sp, sp, #8
 764              	.LCFI14:
 765              		.cfi_def_cfa_offset 16
 766              		@ sp needed
 767 004a 70BD     		pop	{r4, r5, r6, pc}
 768              	.LVL74:
 769              	.L55:
 770              		.loc 1 713 1 view .LVU257
 771              		.align	2
 772              	.L54:
 773 004c 00000000 		.word	.LANCHOR0
 774 0050 00000000 		.word	.LANCHOR1
 775              		.cfi_endproc
 776              	.LFE179:
 778              		.section	.text.lv_txt_utf8_get_byte_id,"ax",%progbits
 779              		.align	1
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 783              		.fpu fpv4-sp-d16
 785              	lv_txt_utf8_get_byte_id:
 786              	.LVL75:
 787              	.LFB180:
 714:lvgl/src/lv_misc/lv_txt.c **** 
ARM GAS  D:\Temp\cc5ZVeii.s 			page 34


 715:lvgl/src/lv_misc/lv_txt.c **** /**
 716:lvgl/src/lv_misc/lv_txt.c ****  * Convert a character index (in an UTF-8 text) to byte index.
 717:lvgl/src/lv_misc/lv_txt.c ****  * E.g. in "AÁRT" index of 'R' is 2th char but start at byte 3 because 'Á' is 2 bytes long
 718:lvgl/src/lv_misc/lv_txt.c ****  * @param txt a '\0' terminated UTF-8 string
 719:lvgl/src/lv_misc/lv_txt.c ****  * @param utf8_id character index
 720:lvgl/src/lv_misc/lv_txt.c ****  * @return byte index of the 'utf8_id'th letter
 721:lvgl/src/lv_misc/lv_txt.c ****  */
 722:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_utf8_get_byte_id(const char * txt, uint32_t utf8_id)
 723:lvgl/src/lv_misc/lv_txt.c **** {
 788              		.loc 1 723 1 is_stmt 1 view -0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              		.loc 1 723 1 is_stmt 0 view .LVU259
 793 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 794              	.LCFI15:
 795              		.cfi_def_cfa_offset 24
 796              		.cfi_offset 3, -24
 797              		.cfi_offset 4, -20
 798              		.cfi_offset 5, -16
 799              		.cfi_offset 6, -12
 800              		.cfi_offset 7, -8
 801              		.cfi_offset 14, -4
 802 0002 0746     		mov	r7, r0
 803 0004 0E46     		mov	r6, r1
 724:lvgl/src/lv_misc/lv_txt.c ****     uint32_t i;
 804              		.loc 1 724 5 is_stmt 1 view .LVU260
 725:lvgl/src/lv_misc/lv_txt.c ****     uint32_t byte_cnt = 0;
 805              		.loc 1 725 5 view .LVU261
 806              	.LVL76:
 726:lvgl/src/lv_misc/lv_txt.c ****     for(i = 0; i < utf8_id; i++) {
 807              		.loc 1 726 5 view .LVU262
 725:lvgl/src/lv_misc/lv_txt.c ****     uint32_t byte_cnt = 0;
 808              		.loc 1 725 14 is_stmt 0 view .LVU263
 809 0006 0024     		movs	r4, #0
 810              		.loc 1 726 11 view .LVU264
 811 0008 2546     		mov	r5, r4
 812              		.loc 1 726 5 view .LVU265
 813 000a 01E0     		b	.L57
 814              	.LVL77:
 815              	.L58:
 816              	.LBB18:
 727:lvgl/src/lv_misc/lv_txt.c ****         uint8_t c_size = _lv_txt_encoded_size(&txt[byte_cnt]);
 728:lvgl/src/lv_misc/lv_txt.c ****         byte_cnt += c_size > 0 ? c_size : 1;
 817              		.loc 1 728 18 discriminator 4 view .LVU266
 818 000c 0444     		add	r4, r4, r0
 819              	.LVL78:
 820              		.loc 1 728 18 discriminator 4 view .LVU267
 821              	.LBE18:
 726:lvgl/src/lv_misc/lv_txt.c ****     for(i = 0; i < utf8_id; i++) {
 822              		.loc 1 726 30 discriminator 4 view .LVU268
 823 000e 0135     		adds	r5, r5, #1
 824              	.LVL79:
 825              	.L57:
 726:lvgl/src/lv_misc/lv_txt.c ****     for(i = 0; i < utf8_id; i++) {
 826              		.loc 1 726 5 discriminator 2 view .LVU269
 827 0010 B542     		cmp	r5, r6
ARM GAS  D:\Temp\cc5ZVeii.s 			page 35


 828 0012 07D2     		bcs	.L62
 829              	.LBB19:
 727:lvgl/src/lv_misc/lv_txt.c ****         uint8_t c_size = _lv_txt_encoded_size(&txt[byte_cnt]);
 830              		.loc 1 727 9 is_stmt 1 view .LVU270
 727:lvgl/src/lv_misc/lv_txt.c ****         uint8_t c_size = _lv_txt_encoded_size(&txt[byte_cnt]);
 831              		.loc 1 727 26 is_stmt 0 view .LVU271
 832 0014 044B     		ldr	r3, .L63
 833 0016 1B68     		ldr	r3, [r3]
 834 0018 3819     		adds	r0, r7, r4
 835 001a 9847     		blx	r3
 836              	.LVL80:
 837              		.loc 1 728 9 is_stmt 1 view .LVU272
 838              		.loc 1 728 41 is_stmt 0 view .LVU273
 839 001c 0028     		cmp	r0, #0
 840 001e F5D1     		bne	.L58
 841 0020 0120     		movs	r0, #1
 842              	.LVL81:
 843              		.loc 1 728 41 view .LVU274
 844 0022 F3E7     		b	.L58
 845              	.L62:
 846              		.loc 1 728 41 view .LVU275
 847              	.LBE19:
 729:lvgl/src/lv_misc/lv_txt.c ****     }
 730:lvgl/src/lv_misc/lv_txt.c **** 
 731:lvgl/src/lv_misc/lv_txt.c ****     return byte_cnt;
 848              		.loc 1 731 5 is_stmt 1 view .LVU276
 732:lvgl/src/lv_misc/lv_txt.c **** }
 849              		.loc 1 732 1 is_stmt 0 view .LVU277
 850 0024 2046     		mov	r0, r4
 851 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 852              	.LVL82:
 853              	.L64:
 854              		.loc 1 732 1 view .LVU278
 855              		.align	2
 856              	.L63:
 857 0028 00000000 		.word	.LANCHOR0
 858              		.cfi_endproc
 859              	.LFE180:
 861              		.section	.text.lv_txt_utf8_get_char_id,"ax",%progbits
 862              		.align	1
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 866              		.fpu fpv4-sp-d16
 868              	lv_txt_utf8_get_char_id:
 869              	.LVL83:
 870              	.LFB181:
 733:lvgl/src/lv_misc/lv_txt.c **** 
 734:lvgl/src/lv_misc/lv_txt.c **** /**
 735:lvgl/src/lv_misc/lv_txt.c ****  * Convert a byte index (in an UTF-8 text) to character index.
 736:lvgl/src/lv_misc/lv_txt.c ****  * E.g. in "AÁRT" index of 'R' is 2th char but start at byte 3 because 'Á' is 2 bytes long
 737:lvgl/src/lv_misc/lv_txt.c ****  * @param txt a '\0' terminated UTF-8 string
 738:lvgl/src/lv_misc/lv_txt.c ****  * @param byte_id byte index
 739:lvgl/src/lv_misc/lv_txt.c ****  * @return character index of the letter at 'byte_id'th position
 740:lvgl/src/lv_misc/lv_txt.c ****  */
 741:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_utf8_get_char_id(const char * txt, uint32_t byte_id)
 742:lvgl/src/lv_misc/lv_txt.c **** {
ARM GAS  D:\Temp\cc5ZVeii.s 			page 36


 871              		.loc 1 742 1 is_stmt 1 view -0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 8
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		.loc 1 742 1 is_stmt 0 view .LVU280
 876 0000 70B5     		push	{r4, r5, r6, lr}
 877              	.LCFI16:
 878              		.cfi_def_cfa_offset 16
 879              		.cfi_offset 4, -16
 880              		.cfi_offset 5, -12
 881              		.cfi_offset 6, -8
 882              		.cfi_offset 14, -4
 883 0002 82B0     		sub	sp, sp, #8
 884              	.LCFI17:
 885              		.cfi_def_cfa_offset 24
 886 0004 0646     		mov	r6, r0
 887 0006 0D46     		mov	r5, r1
 743:lvgl/src/lv_misc/lv_txt.c ****     uint32_t i        = 0;
 888              		.loc 1 743 5 is_stmt 1 view .LVU281
 889              		.loc 1 743 14 is_stmt 0 view .LVU282
 890 0008 0024     		movs	r4, #0
 891 000a 0194     		str	r4, [sp, #4]
 744:lvgl/src/lv_misc/lv_txt.c ****     uint32_t char_cnt = 0;
 892              		.loc 1 744 5 is_stmt 1 view .LVU283
 893              	.LVL84:
 745:lvgl/src/lv_misc/lv_txt.c **** 
 746:lvgl/src/lv_misc/lv_txt.c ****     while(i < byte_id) {
 894              		.loc 1 746 5 view .LVU284
 895              	.L66:
 896              		.loc 1 746 13 is_stmt 0 view .LVU285
 897 000c 019B     		ldr	r3, [sp, #4]
 898              		.loc 1 746 10 view .LVU286
 899 000e AB42     		cmp	r3, r5
 900 0010 06D2     		bcs	.L69
 747:lvgl/src/lv_misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i); /*'i' points to the next letter so use the prev. value*/
 901              		.loc 1 747 9 is_stmt 1 view .LVU287
 902 0012 054B     		ldr	r3, .L70
 903 0014 1B68     		ldr	r3, [r3]
 904 0016 01A9     		add	r1, sp, #4
 905 0018 3046     		mov	r0, r6
 906 001a 9847     		blx	r3
 907              	.LVL85:
 748:lvgl/src/lv_misc/lv_txt.c ****         char_cnt++;
 908              		.loc 1 748 9 view .LVU288
 909              		.loc 1 748 17 is_stmt 0 view .LVU289
 910 001c 0134     		adds	r4, r4, #1
 911              	.LVL86:
 912              		.loc 1 748 17 view .LVU290
 913 001e F5E7     		b	.L66
 914              	.L69:
 749:lvgl/src/lv_misc/lv_txt.c ****     }
 750:lvgl/src/lv_misc/lv_txt.c **** 
 751:lvgl/src/lv_misc/lv_txt.c ****     return char_cnt;
 915              		.loc 1 751 5 is_stmt 1 view .LVU291
 752:lvgl/src/lv_misc/lv_txt.c **** }
 916              		.loc 1 752 1 is_stmt 0 view .LVU292
 917 0020 2046     		mov	r0, r4
ARM GAS  D:\Temp\cc5ZVeii.s 			page 37


 918 0022 02B0     		add	sp, sp, #8
 919              	.LCFI18:
 920              		.cfi_def_cfa_offset 16
 921              		@ sp needed
 922 0024 70BD     		pop	{r4, r5, r6, pc}
 923              	.LVL87:
 924              	.L71:
 925              		.loc 1 752 1 view .LVU293
 926 0026 00BF     		.align	2
 927              	.L70:
 928 0028 00000000 		.word	.LANCHOR1
 929              		.cfi_endproc
 930              	.LFE181:
 932              		.section	.text.lv_txt_utf8_get_length,"ax",%progbits
 933              		.align	1
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	lv_txt_utf8_get_length:
 940              	.LVL88:
 941              	.LFB182:
 753:lvgl/src/lv_misc/lv_txt.c **** 
 754:lvgl/src/lv_misc/lv_txt.c **** /**
 755:lvgl/src/lv_misc/lv_txt.c ****  * Get the number of characters (and NOT bytes) in a string. Decode it with UTF-8 if enabled.
 756:lvgl/src/lv_misc/lv_txt.c ****  * E.g.: "ÁBC" is 3 characters (but 4 bytes)
 757:lvgl/src/lv_misc/lv_txt.c ****  * @param txt a '\0' terminated char string
 758:lvgl/src/lv_misc/lv_txt.c ****  * @return number of characters
 759:lvgl/src/lv_misc/lv_txt.c ****  */
 760:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_utf8_get_length(const char * txt)
 761:lvgl/src/lv_misc/lv_txt.c **** {
 942              		.loc 1 761 1 is_stmt 1 view -0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 8
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		.loc 1 761 1 is_stmt 0 view .LVU295
 947 0000 30B5     		push	{r4, r5, lr}
 948              	.LCFI19:
 949              		.cfi_def_cfa_offset 12
 950              		.cfi_offset 4, -12
 951              		.cfi_offset 5, -8
 952              		.cfi_offset 14, -4
 953 0002 83B0     		sub	sp, sp, #12
 954              	.LCFI20:
 955              		.cfi_def_cfa_offset 24
 956 0004 0546     		mov	r5, r0
 762:lvgl/src/lv_misc/lv_txt.c ****     uint32_t len = 0;
 957              		.loc 1 762 5 is_stmt 1 view .LVU296
 958              	.LVL89:
 763:lvgl/src/lv_misc/lv_txt.c ****     uint32_t i   = 0;
 959              		.loc 1 763 5 view .LVU297
 960              		.loc 1 763 14 is_stmt 0 view .LVU298
 961 0006 0024     		movs	r4, #0
 962 0008 0194     		str	r4, [sp, #4]
 764:lvgl/src/lv_misc/lv_txt.c **** 
 765:lvgl/src/lv_misc/lv_txt.c ****     while(txt[i] != '\0') {
 963              		.loc 1 765 5 is_stmt 1 view .LVU299
ARM GAS  D:\Temp\cc5ZVeii.s 			page 38


 964              	.LVL90:
 965              	.L73:
 966              		.loc 1 765 14 is_stmt 0 view .LVU300
 967 000a 019B     		ldr	r3, [sp, #4]
 968 000c EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 969              		.loc 1 765 10 view .LVU301
 970 000e 33B1     		cbz	r3, .L76
 766:lvgl/src/lv_misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i);
 971              		.loc 1 766 9 is_stmt 1 view .LVU302
 972 0010 044B     		ldr	r3, .L77
 973 0012 1B68     		ldr	r3, [r3]
 974 0014 01A9     		add	r1, sp, #4
 975 0016 2846     		mov	r0, r5
 976 0018 9847     		blx	r3
 977              	.LVL91:
 767:lvgl/src/lv_misc/lv_txt.c ****         len++;
 978              		.loc 1 767 9 view .LVU303
 979              		.loc 1 767 12 is_stmt 0 view .LVU304
 980 001a 0134     		adds	r4, r4, #1
 981              	.LVL92:
 982              		.loc 1 767 12 view .LVU305
 983 001c F5E7     		b	.L73
 984              	.L76:
 768:lvgl/src/lv_misc/lv_txt.c ****     }
 769:lvgl/src/lv_misc/lv_txt.c **** 
 770:lvgl/src/lv_misc/lv_txt.c ****     return len;
 985              		.loc 1 770 5 is_stmt 1 view .LVU306
 771:lvgl/src/lv_misc/lv_txt.c **** }
 986              		.loc 1 771 1 is_stmt 0 view .LVU307
 987 001e 2046     		mov	r0, r4
 988 0020 03B0     		add	sp, sp, #12
 989              	.LCFI21:
 990              		.cfi_def_cfa_offset 12
 991              		@ sp needed
 992 0022 30BD     		pop	{r4, r5, pc}
 993              	.LVL93:
 994              	.L78:
 995              		.loc 1 771 1 view .LVU308
 996              		.align	2
 997              	.L77:
 998 0024 00000000 		.word	.LANCHOR1
 999              		.cfi_endproc
 1000              	.LFE182:
 1002              		.section	.text._lv_txt_is_cmd,"ax",%progbits
 1003              		.align	1
 1004              		.global	_lv_txt_is_cmd
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1008              		.fpu fpv4-sp-d16
 1010              	_lv_txt_is_cmd:
 1011              	.LVL94:
 1012              	.LFB171:
 400:lvgl/src/lv_misc/lv_txt.c ****     bool ret = false;
 1013              		.loc 1 400 1 is_stmt 1 view -0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 0
ARM GAS  D:\Temp\cc5ZVeii.s 			page 39


 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 1017              		@ link register save eliminated.
 400:lvgl/src/lv_misc/lv_txt.c ****     bool ret = false;
 1018              		.loc 1 400 1 is_stmt 0 view .LVU310
 1019 0000 0246     		mov	r2, r0
 401:lvgl/src/lv_misc/lv_txt.c **** 
 1020              		.loc 1 401 5 is_stmt 1 view .LVU311
 1021              	.LVL95:
 403:lvgl/src/lv_misc/lv_txt.c ****         if(*state == LV_TXT_CMD_STATE_WAIT) { /*Start char*/
 1022              		.loc 1 403 5 view .LVU312
 403:lvgl/src/lv_misc/lv_txt.c ****         if(*state == LV_TXT_CMD_STATE_WAIT) { /*Start char*/
 1023              		.loc 1 403 7 is_stmt 0 view .LVU313
 1024 0002 2329     		cmp	r1, #35
 1025 0004 04D0     		beq	.L87
 401:lvgl/src/lv_misc/lv_txt.c **** 
 1026              		.loc 1 401 10 view .LVU314
 1027 0006 0020     		movs	r0, #0
 1028              	.LVL96:
 1029              	.L80:
 420:lvgl/src/lv_misc/lv_txt.c ****         if(c == ' ') {
 1030              		.loc 1 420 5 is_stmt 1 view .LVU315
 420:lvgl/src/lv_misc/lv_txt.c ****         if(c == ' ') {
 1031              		.loc 1 420 8 is_stmt 0 view .LVU316
 1032 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 420:lvgl/src/lv_misc/lv_txt.c ****         if(c == ' ') {
 1033              		.loc 1 420 7 view .LVU317
 1034 000a 012B     		cmp	r3, #1
 1035 000c 14D0     		beq	.L88
 1036              	.LVL97:
 1037              	.L83:
 427:lvgl/src/lv_misc/lv_txt.c **** }
 1038              		.loc 1 427 5 is_stmt 1 view .LVU318
 428:lvgl/src/lv_misc/lv_txt.c **** 
 1039              		.loc 1 428 1 is_stmt 0 view .LVU319
 1040 000e 7047     		bx	lr
 1041              	.LVL98:
 1042              	.L87:
 404:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_PAR;
 1043              		.loc 1 404 9 is_stmt 1 view .LVU320
 404:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_PAR;
 1044              		.loc 1 404 12 is_stmt 0 view .LVU321
 1045 0010 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 404:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_PAR;
 1046              		.loc 1 404 11 view .LVU322
 1047 0012 1BB9     		cbnz	r3, .L81
 405:lvgl/src/lv_misc/lv_txt.c ****             ret    = true;
 1048              		.loc 1 405 13 is_stmt 1 view .LVU323
 405:lvgl/src/lv_misc/lv_txt.c ****             ret    = true;
 1049              		.loc 1 405 20 is_stmt 0 view .LVU324
 1050 0014 0123     		movs	r3, #1
 1051 0016 0370     		strb	r3, [r0]
 406:lvgl/src/lv_misc/lv_txt.c ****         }
 1052              		.loc 1 406 13 is_stmt 1 view .LVU325
 1053              	.LVL99:
 406:lvgl/src/lv_misc/lv_txt.c ****         }
 1054              		.loc 1 406 20 is_stmt 0 view .LVU326
 1055 0018 1846     		mov	r0, r3
ARM GAS  D:\Temp\cc5ZVeii.s 			page 40


 1056              	.LVL100:
 406:lvgl/src/lv_misc/lv_txt.c ****         }
 1057              		.loc 1 406 20 view .LVU327
 1058 001a F5E7     		b	.L80
 1059              	.LVL101:
 1060              	.L81:
 409:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_WAIT;
 1061              		.loc 1 409 14 is_stmt 1 view .LVU328
 409:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_WAIT;
 1062              		.loc 1 409 16 is_stmt 0 view .LVU329
 1063 001c 012B     		cmp	r3, #1
 1064 001e 03D0     		beq	.L89
 413:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_WAIT;
 1065              		.loc 1 413 14 is_stmt 1 view .LVU330
 413:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_WAIT;
 1066              		.loc 1 413 16 is_stmt 0 view .LVU331
 1067 0020 022B     		cmp	r3, #2
 1068 0022 05D0     		beq	.L90
 401:lvgl/src/lv_misc/lv_txt.c **** 
 1069              		.loc 1 401 10 view .LVU332
 1070 0024 0020     		movs	r0, #0
 1071              	.LVL102:
 401:lvgl/src/lv_misc/lv_txt.c **** 
 1072              		.loc 1 401 10 view .LVU333
 1073 0026 EFE7     		b	.L80
 1074              	.LVL103:
 1075              	.L89:
 410:lvgl/src/lv_misc/lv_txt.c ****         }
 1076              		.loc 1 410 13 is_stmt 1 view .LVU334
 410:lvgl/src/lv_misc/lv_txt.c ****         }
 1077              		.loc 1 410 20 is_stmt 0 view .LVU335
 1078 0028 0023     		movs	r3, #0
 1079 002a 0370     		strb	r3, [r0]
 401:lvgl/src/lv_misc/lv_txt.c **** 
 1080              		.loc 1 401 10 view .LVU336
 1081 002c 1846     		mov	r0, r3
 1082              	.LVL104:
 401:lvgl/src/lv_misc/lv_txt.c **** 
 1083              		.loc 1 401 10 view .LVU337
 1084 002e EBE7     		b	.L80
 1085              	.LVL105:
 1086              	.L90:
 414:lvgl/src/lv_misc/lv_txt.c ****             ret    = true;
 1087              		.loc 1 414 13 is_stmt 1 view .LVU338
 414:lvgl/src/lv_misc/lv_txt.c ****             ret    = true;
 1088              		.loc 1 414 20 is_stmt 0 view .LVU339
 1089 0030 0023     		movs	r3, #0
 1090 0032 0370     		strb	r3, [r0]
 415:lvgl/src/lv_misc/lv_txt.c ****         }
 1091              		.loc 1 415 13 is_stmt 1 view .LVU340
 1092              	.LVL106:
 415:lvgl/src/lv_misc/lv_txt.c ****         }
 1093              		.loc 1 415 20 is_stmt 0 view .LVU341
 1094 0034 0120     		movs	r0, #1
 1095              	.LVL107:
 415:lvgl/src/lv_misc/lv_txt.c ****         }
 1096              		.loc 1 415 20 view .LVU342
ARM GAS  D:\Temp\cc5ZVeii.s 			page 41


 1097 0036 E7E7     		b	.L80
 1098              	.LVL108:
 1099              	.L88:
 421:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_IN; /*After the parameter the text is in the command*/
 1100              		.loc 1 421 9 is_stmt 1 view .LVU343
 421:lvgl/src/lv_misc/lv_txt.c ****             *state = LV_TXT_CMD_STATE_IN; /*After the parameter the text is in the command*/
 1101              		.loc 1 421 11 is_stmt 0 view .LVU344
 1102 0038 2029     		cmp	r1, #32
 1103 003a 01D0     		beq	.L91
 424:lvgl/src/lv_misc/lv_txt.c ****     }
 1104              		.loc 1 424 13 view .LVU345
 1105 003c 0120     		movs	r0, #1
 1106              	.LVL109:
 424:lvgl/src/lv_misc/lv_txt.c ****     }
 1107              		.loc 1 424 13 view .LVU346
 1108 003e E6E7     		b	.L83
 1109              	.LVL110:
 1110              	.L91:
 422:lvgl/src/lv_misc/lv_txt.c ****         }
 1111              		.loc 1 422 13 is_stmt 1 view .LVU347
 422:lvgl/src/lv_misc/lv_txt.c ****         }
 1112              		.loc 1 422 20 is_stmt 0 view .LVU348
 1113 0040 0223     		movs	r3, #2
 1114 0042 1370     		strb	r3, [r2]
 424:lvgl/src/lv_misc/lv_txt.c ****     }
 1115              		.loc 1 424 13 view .LVU349
 1116 0044 0120     		movs	r0, #1
 1117              	.LVL111:
 424:lvgl/src/lv_misc/lv_txt.c ****     }
 1118              		.loc 1 424 13 view .LVU350
 1119 0046 7047     		bx	lr
 1120              		.cfi_endproc
 1121              	.LFE171:
 1123              		.section	.text.lv_txt_get_next_word,"ax",%progbits
 1124              		.align	1
 1125              		.syntax unified
 1126              		.thumb
 1127              		.thumb_func
 1128              		.fpu fpv4-sp-d16
 1130              	lv_txt_get_next_word:
 1131              	.LVL112:
 1132              	.LFB168:
 178:lvgl/src/lv_misc/lv_txt.c ****     if(txt == NULL || txt[0] == '\0') return 0;
 1133              		.loc 1 178 1 is_stmt 1 view -0
 1134              		.cfi_startproc
 1135              		@ args = 16, pretend = 0, frame = 32
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 178:lvgl/src/lv_misc/lv_txt.c ****     if(txt == NULL || txt[0] == '\0') return 0;
 1137              		.loc 1 178 1 is_stmt 0 view .LVU352
 1138 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1139              	.LCFI22:
 1140              		.cfi_def_cfa_offset 36
 1141              		.cfi_offset 4, -36
 1142              		.cfi_offset 5, -32
 1143              		.cfi_offset 6, -28
 1144              		.cfi_offset 7, -24
 1145              		.cfi_offset 8, -20
ARM GAS  D:\Temp\cc5ZVeii.s 			page 42


 1146              		.cfi_offset 9, -16
 1147              		.cfi_offset 10, -12
 1148              		.cfi_offset 11, -8
 1149              		.cfi_offset 14, -4
 1150 0004 89B0     		sub	sp, sp, #36
 1151              	.LCFI23:
 1152              		.cfi_def_cfa_offset 72
 1153 0006 0291     		str	r1, [sp, #8]
 1154 0008 0392     		str	r2, [sp, #12]
 1155 000a 0493     		str	r3, [sp, #16]
 1156 000c 9DF848B0 		ldrb	fp, [sp, #72]	@ zero_extendqisi2
 1157 0010 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 1158              	.LVL113:
 178:lvgl/src/lv_misc/lv_txt.c ****     if(txt == NULL || txt[0] == '\0') return 0;
 1159              		.loc 1 178 1 view .LVU353
 1160 0014 0593     		str	r3, [sp, #20]
 179:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1161              		.loc 1 179 5 is_stmt 1 view .LVU354
 179:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1162              		.loc 1 179 7 is_stmt 0 view .LVU355
 1163 0016 0028     		cmp	r0, #0
 1164 0018 00F08F80 		beq	.L111
 1165 001c 0746     		mov	r7, r0
 179:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1166              		.loc 1 179 26 discriminator 2 view .LVU356
 1167 001e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 179:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1168              		.loc 1 179 20 discriminator 2 view .LVU357
 1169 0020 002B     		cmp	r3, #0
 1170 0022 00F08D80 		beq	.L112
 180:lvgl/src/lv_misc/lv_txt.c **** 
 1171              		.loc 1 180 5 is_stmt 1 view .LVU358
 180:lvgl/src/lv_misc/lv_txt.c **** 
 1172              		.loc 1 180 7 is_stmt 0 view .LVU359
 1173 0026 0029     		cmp	r1, #0
 1174 0028 00F09080 		beq	.L113
 182:lvgl/src/lv_misc/lv_txt.c **** 
 1175              		.loc 1 182 5 is_stmt 1 view .LVU360
 182:lvgl/src/lv_misc/lv_txt.c **** 
 1176              		.loc 1 182 7 is_stmt 0 view .LVU361
 1177 002c 1BF0020F 		tst	fp, #2
 1178 0030 02D0     		beq	.L94
 182:lvgl/src/lv_misc/lv_txt.c **** 
 1179              		.loc 1 182 45 view .LVU362
 1180 0032 47F61843 		movw	r3, #31768
 1181 0036 0493     		str	r3, [sp, #16]
 1182              	.L94:
 1183              	.LVL114:
 184:lvgl/src/lv_misc/lv_txt.c ****     uint32_t letter = 0;      /* Letter at i */
 1184              		.loc 1 184 5 is_stmt 1 view .LVU363
 184:lvgl/src/lv_misc/lv_txt.c ****     uint32_t letter = 0;      /* Letter at i */
 1185              		.loc 1 184 21 is_stmt 0 view .LVU364
 1186 0038 0026     		movs	r6, #0
 1187 003a 0796     		str	r6, [sp, #28]
 184:lvgl/src/lv_misc/lv_txt.c ****     uint32_t letter = 0;      /* Letter at i */
 1188              		.loc 1 184 33 view .LVU365
 1189 003c 0696     		str	r6, [sp, #24]
ARM GAS  D:\Temp\cc5ZVeii.s 			page 43


 185:lvgl/src/lv_misc/lv_txt.c ****     uint32_t letter_next = 0; /* Letter at i_next */
 1190              		.loc 1 185 5 is_stmt 1 view .LVU366
 1191              	.LVL115:
 186:lvgl/src/lv_misc/lv_txt.c ****     lv_coord_t letter_w;
 1192              		.loc 1 186 5 view .LVU367
 187:lvgl/src/lv_misc/lv_txt.c ****     lv_coord_t cur_w = 0;  /* Pixel Width of transversed string */
 1193              		.loc 1 187 5 view .LVU368
 188:lvgl/src/lv_misc/lv_txt.c ****     uint32_t word_len = 0;   /* Number of characters in the transversed word */
 1194              		.loc 1 188 5 view .LVU369
 189:lvgl/src/lv_misc/lv_txt.c ****     uint32_t break_index = NO_BREAK_FOUND; /* only used for "long" words */
 1195              		.loc 1 189 5 view .LVU370
 190:lvgl/src/lv_misc/lv_txt.c ****     uint32_t break_letter_count = 0; /* Number of characters up to the long word break point */
 1196              		.loc 1 190 5 view .LVU371
 191:lvgl/src/lv_misc/lv_txt.c **** 
 1197              		.loc 1 191 5 view .LVU372
 193:lvgl/src/lv_misc/lv_txt.c ****     i_next_next = i_next;
 1198              		.loc 1 193 5 view .LVU373
 193:lvgl/src/lv_misc/lv_txt.c ****     i_next_next = i_next;
 1199              		.loc 1 193 14 is_stmt 0 view .LVU374
 1200 003e 464B     		ldr	r3, .L127
 1201 0040 1B68     		ldr	r3, [r3]
 1202 0042 07A9     		add	r1, sp, #28
 1203              	.LVL116:
 193:lvgl/src/lv_misc/lv_txt.c ****     i_next_next = i_next;
 1204              		.loc 1 193 14 view .LVU375
 1205 0044 3846     		mov	r0, r7
 1206              	.LVL117:
 193:lvgl/src/lv_misc/lv_txt.c ****     i_next_next = i_next;
 1207              		.loc 1 193 14 view .LVU376
 1208 0046 9847     		blx	r3
 1209              	.LVL118:
 193:lvgl/src/lv_misc/lv_txt.c ****     i_next_next = i_next;
 1210              		.loc 1 193 14 view .LVU377
 1211 0048 0446     		mov	r4, r0
 1212              	.LVL119:
 194:lvgl/src/lv_misc/lv_txt.c **** 
 1213              		.loc 1 194 5 is_stmt 1 view .LVU378
 194:lvgl/src/lv_misc/lv_txt.c **** 
 1214              		.loc 1 194 17 is_stmt 0 view .LVU379
 1215 004a 079B     		ldr	r3, [sp, #28]
 1216 004c 0693     		str	r3, [sp, #24]
 197:lvgl/src/lv_misc/lv_txt.c ****         letter_next = _lv_txt_encoded_next(txt, &i_next_next);
 1217              		.loc 1 197 5 is_stmt 1 view .LVU380
 190:lvgl/src/lv_misc/lv_txt.c ****     uint32_t break_letter_count = 0; /* Number of characters up to the long word break point */
 1218              		.loc 1 190 14 is_stmt 0 view .LVU381
 1219 004e 4FF0FF3A 		mov	r10, #-1
 189:lvgl/src/lv_misc/lv_txt.c ****     uint32_t break_index = NO_BREAK_FOUND; /* only used for "long" words */
 1220              		.loc 1 189 14 view .LVU382
 1221 0052 B046     		mov	r8, r6
 188:lvgl/src/lv_misc/lv_txt.c ****     uint32_t word_len = 0;   /* Number of characters in the transversed word */
 1222              		.loc 1 188 16 view .LVU383
 1223 0054 3546     		mov	r5, r6
 186:lvgl/src/lv_misc/lv_txt.c ****     lv_coord_t letter_w;
 1224              		.loc 1 186 14 view .LVU384
 1225 0056 0196     		str	r6, [sp, #4]
 197:lvgl/src/lv_misc/lv_txt.c ****         letter_next = _lv_txt_encoded_next(txt, &i_next_next);
 1226              		.loc 1 197 10 view .LVU385
ARM GAS  D:\Temp\cc5ZVeii.s 			page 44


 1227 0058 30E0     		b	.L95
 1228              	.LVL120:
 1229              	.L96:
 211:lvgl/src/lv_misc/lv_txt.c ****         cur_w += letter_w;
 1230              		.loc 1 211 9 is_stmt 1 view .LVU386
 211:lvgl/src/lv_misc/lv_txt.c ****         cur_w += letter_w;
 1231              		.loc 1 211 20 is_stmt 0 view .LVU387
 1232 005a 019A     		ldr	r2, [sp, #4]
 1233 005c 2146     		mov	r1, r4
 1234 005e 0298     		ldr	r0, [sp, #8]
 1235 0060 FFF7FEFF 		bl	lv_font_get_glyph_width
 1236              	.LVL121:
 211:lvgl/src/lv_misc/lv_txt.c ****         cur_w += letter_w;
 1237              		.loc 1 211 18 view .LVU388
 1238 0064 03B2     		sxth	r3, r0
 1239              	.LVL122:
 212:lvgl/src/lv_misc/lv_txt.c **** 
 1240              		.loc 1 212 9 is_stmt 1 view .LVU389
 212:lvgl/src/lv_misc/lv_txt.c **** 
 1241              		.loc 1 212 15 is_stmt 0 view .LVU390
 1242 0066 2844     		add	r0, r0, r5
 1243 0068 80B2     		uxth	r0, r0
 1244 006a 05B2     		sxth	r5, r0
 1245              	.LVL123:
 214:lvgl/src/lv_misc/lv_txt.c ****             cur_w += letter_space;
 1246              		.loc 1 214 9 is_stmt 1 view .LVU391
 214:lvgl/src/lv_misc/lv_txt.c ****             cur_w += letter_space;
 1247              		.loc 1 214 11 is_stmt 0 view .LVU392
 1248 006c 002B     		cmp	r3, #0
 1249 006e 02DD     		ble	.L98
 215:lvgl/src/lv_misc/lv_txt.c ****         }
 1250              		.loc 1 215 13 is_stmt 1 view .LVU393
 215:lvgl/src/lv_misc/lv_txt.c ****         }
 1251              		.loc 1 215 19 is_stmt 0 view .LVU394
 1252 0070 039B     		ldr	r3, [sp, #12]
 1253              	.LVL124:
 215:lvgl/src/lv_misc/lv_txt.c ****         }
 1254              		.loc 1 215 19 view .LVU395
 1255 0072 C518     		adds	r5, r0, r3
 1256              	.LVL125:
 215:lvgl/src/lv_misc/lv_txt.c ****         }
 1257              		.loc 1 215 19 view .LVU396
 1258 0074 2DB2     		sxth	r5, r5
 1259              	.LVL126:
 1260              	.L98:
 219:lvgl/src/lv_misc/lv_txt.c ****             break_index = i;
 1261              		.loc 1 219 9 is_stmt 1 view .LVU397
 219:lvgl/src/lv_misc/lv_txt.c ****             break_index = i;
 1262              		.loc 1 219 11 is_stmt 0 view .LVU398
 1263 0076 BAF1FF3F 		cmp	r10, #-1
 1264 007a 0CD0     		beq	.L121
 1265              	.LVL127:
 1266              	.L99:
 226:lvgl/src/lv_misc/lv_txt.c ****             /* Update the output width on the first character if it fits.
 1267              		.loc 1 226 9 is_stmt 1 view .LVU399
 226:lvgl/src/lv_misc/lv_txt.c ****             /* Update the output width on the first character if it fits.
 1268              		.loc 1 226 11 is_stmt 0 view .LVU400
ARM GAS  D:\Temp\cc5ZVeii.s 			page 45


 1269 007c 0A2C     		cmp	r4, #10
 1270 007e 36D0     		beq	.L100
 226:lvgl/src/lv_misc/lv_txt.c ****             /* Update the output width on the first character if it fits.
 1271              		.loc 1 226 27 discriminator 1 view .LVU401
 1272 0080 0D2C     		cmp	r4, #13
 1273 0082 34D0     		beq	.L100
 1274              	.LBB20:
 1275              	.LBB21:
 772:lvgl/src/lv_misc/lv_txt.c **** 
 773:lvgl/src/lv_misc/lv_txt.c **** #elif LV_TXT_ENC == LV_TXT_ENC_ASCII
 774:lvgl/src/lv_misc/lv_txt.c **** /*******************************
 775:lvgl/src/lv_misc/lv_txt.c ****  *  ASCII ENCODER/DECOER
 776:lvgl/src/lv_misc/lv_txt.c ****  ******************************/
 777:lvgl/src/lv_misc/lv_txt.c **** 
 778:lvgl/src/lv_misc/lv_txt.c **** /**
 779:lvgl/src/lv_misc/lv_txt.c ****  * Give the size of an ISO8859-1 coded character
 780:lvgl/src/lv_misc/lv_txt.c ****  * @param str pointer to a character in a string
 781:lvgl/src/lv_misc/lv_txt.c ****  * @return length of the UTF-8 character (1,2,3 or 4). O on invalid code
 782:lvgl/src/lv_misc/lv_txt.c ****  */
 783:lvgl/src/lv_misc/lv_txt.c **** static uint8_t lv_txt_iso8859_1_size(const char * str)
 784:lvgl/src/lv_misc/lv_txt.c **** {
 785:lvgl/src/lv_misc/lv_txt.c ****     (void)str; /*Unused*/
 786:lvgl/src/lv_misc/lv_txt.c ****     return 1;
 787:lvgl/src/lv_misc/lv_txt.c **** }
 788:lvgl/src/lv_misc/lv_txt.c **** 
 789:lvgl/src/lv_misc/lv_txt.c **** /**
 790:lvgl/src/lv_misc/lv_txt.c ****  * Convert an Unicode letter to ISO8859-1.
 791:lvgl/src/lv_misc/lv_txt.c ****  * @param letter_uni an Unicode letter
 792:lvgl/src/lv_misc/lv_txt.c ****  * @return ISO8859-1 coded character in Little Endian to be compatible with C chars (e.g. 'Á', 'Ű
 793:lvgl/src/lv_misc/lv_txt.c ****  */
 794:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_unicode_to_iso8859_1(uint32_t letter_uni)
 795:lvgl/src/lv_misc/lv_txt.c **** {
 796:lvgl/src/lv_misc/lv_txt.c ****     if(letter_uni < 256)
 797:lvgl/src/lv_misc/lv_txt.c ****         return letter_uni;
 798:lvgl/src/lv_misc/lv_txt.c ****     else
 799:lvgl/src/lv_misc/lv_txt.c ****         return ' ';
 800:lvgl/src/lv_misc/lv_txt.c **** }
 801:lvgl/src/lv_misc/lv_txt.c **** 
 802:lvgl/src/lv_misc/lv_txt.c **** /**
 803:lvgl/src/lv_misc/lv_txt.c ****  * Convert wide characters to ASCII, however wide characters in ASCII range (e.g. 'A') are ASCII co
 804:lvgl/src/lv_misc/lv_txt.c ****  * So this function does nothing just returns with `c`.
 805:lvgl/src/lv_misc/lv_txt.c ****  * @param c a character, e.g. 'A'
 806:lvgl/src/lv_misc/lv_txt.c ****  * @return same as `c`
 807:lvgl/src/lv_misc/lv_txt.c ****  */
 808:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_iso8859_1_conv_wc(uint32_t c)
 809:lvgl/src/lv_misc/lv_txt.c **** {
 810:lvgl/src/lv_misc/lv_txt.c ****     return c;
 811:lvgl/src/lv_misc/lv_txt.c **** }
 812:lvgl/src/lv_misc/lv_txt.c **** 
 813:lvgl/src/lv_misc/lv_txt.c **** /**
 814:lvgl/src/lv_misc/lv_txt.c ****  * Decode an ISO8859-1 character from a string.
 815:lvgl/src/lv_misc/lv_txt.c ****  * @param txt pointer to '\0' terminated string
 816:lvgl/src/lv_misc/lv_txt.c ****  * @param i start byte index in 'txt' where to start.
 817:lvgl/src/lv_misc/lv_txt.c ****  *          After call it will point to the next UTF-8 char in 'txt'.
 818:lvgl/src/lv_misc/lv_txt.c ****  *          NULL to use txt[0] as index
 819:lvgl/src/lv_misc/lv_txt.c ****  * @return the decoded Unicode character or 0 on invalid UTF-8 code
 820:lvgl/src/lv_misc/lv_txt.c ****  */
ARM GAS  D:\Temp\cc5ZVeii.s 			page 46


 821:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_iso8859_1_next(const char * txt, uint32_t * i)
 822:lvgl/src/lv_misc/lv_txt.c **** {
 823:lvgl/src/lv_misc/lv_txt.c ****     if(i == NULL) return txt[1]; /*Get the next char */
 824:lvgl/src/lv_misc/lv_txt.c **** 
 825:lvgl/src/lv_misc/lv_txt.c ****     uint8_t letter = txt[*i];
 826:lvgl/src/lv_misc/lv_txt.c ****     (*i)++;
 827:lvgl/src/lv_misc/lv_txt.c ****     return letter;
 828:lvgl/src/lv_misc/lv_txt.c **** }
 829:lvgl/src/lv_misc/lv_txt.c **** 
 830:lvgl/src/lv_misc/lv_txt.c **** /**
 831:lvgl/src/lv_misc/lv_txt.c ****  * Get previous ISO8859-1 character form a string.
 832:lvgl/src/lv_misc/lv_txt.c ****  * @param txt pointer to '\0' terminated string
 833:lvgl/src/lv_misc/lv_txt.c ****  * @param i start byte index in 'txt' where to start. After the call it will point to the previous 
 834:lvgl/src/lv_misc/lv_txt.c ****  * @return the decoded Unicode character or 0 on invalid UTF-8 code
 835:lvgl/src/lv_misc/lv_txt.c ****  */
 836:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_iso8859_1_prev(const char * txt, uint32_t * i)
 837:lvgl/src/lv_misc/lv_txt.c **** {
 838:lvgl/src/lv_misc/lv_txt.c ****     if(i == NULL) return *(txt - 1); /*Get the prev. char */
 839:lvgl/src/lv_misc/lv_txt.c **** 
 840:lvgl/src/lv_misc/lv_txt.c ****     (*i)--;
 841:lvgl/src/lv_misc/lv_txt.c ****     uint8_t letter = txt[*i];
 842:lvgl/src/lv_misc/lv_txt.c **** 
 843:lvgl/src/lv_misc/lv_txt.c ****     return letter;
 844:lvgl/src/lv_misc/lv_txt.c **** }
 845:lvgl/src/lv_misc/lv_txt.c **** 
 846:lvgl/src/lv_misc/lv_txt.c **** /**
 847:lvgl/src/lv_misc/lv_txt.c ****  * Convert a character index (in an ISO8859-1 text) to byte index.
 848:lvgl/src/lv_misc/lv_txt.c ****  * E.g. in "AÁRT" index of 'R' is 2th char but start at byte 3 because 'Á' is 2 bytes long
 849:lvgl/src/lv_misc/lv_txt.c ****  * @param txt a '\0' terminated UTF-8 string
 850:lvgl/src/lv_misc/lv_txt.c ****  * @param utf8_id character index
 851:lvgl/src/lv_misc/lv_txt.c ****  * @return byte index of the 'utf8_id'th letter
 852:lvgl/src/lv_misc/lv_txt.c ****  */
 853:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_iso8859_1_get_byte_id(const char * txt, uint32_t utf8_id)
 854:lvgl/src/lv_misc/lv_txt.c **** {
 855:lvgl/src/lv_misc/lv_txt.c ****     (void)txt;      /*Unused*/
 856:lvgl/src/lv_misc/lv_txt.c ****     return utf8_id; /*In Non encoded no difference*/
 857:lvgl/src/lv_misc/lv_txt.c **** }
 858:lvgl/src/lv_misc/lv_txt.c **** 
 859:lvgl/src/lv_misc/lv_txt.c **** /**
 860:lvgl/src/lv_misc/lv_txt.c ****  * Convert a byte index (in an ISO8859-1 text) to character index.
 861:lvgl/src/lv_misc/lv_txt.c ****  * E.g. in "AÁRT" index of 'R' is 2th char but start at byte 3 because 'Á' is 2 bytes long
 862:lvgl/src/lv_misc/lv_txt.c ****  * @param txt a '\0' terminated UTF-8 string
 863:lvgl/src/lv_misc/lv_txt.c ****  * @param byte_id byte index
 864:lvgl/src/lv_misc/lv_txt.c ****  * @return character index of the letter at 'byte_id'th position
 865:lvgl/src/lv_misc/lv_txt.c ****  */
 866:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_iso8859_1_get_char_id(const char * txt, uint32_t byte_id)
 867:lvgl/src/lv_misc/lv_txt.c **** {
 868:lvgl/src/lv_misc/lv_txt.c ****     (void)txt;      /*Unused*/
 869:lvgl/src/lv_misc/lv_txt.c ****     return byte_id; /*In Non encoded no difference*/
 870:lvgl/src/lv_misc/lv_txt.c **** }
 871:lvgl/src/lv_misc/lv_txt.c **** 
 872:lvgl/src/lv_misc/lv_txt.c **** /**
 873:lvgl/src/lv_misc/lv_txt.c ****  * Get the number of characters (and NOT bytes) in a string. Decode it with UTF-8 if enabled.
 874:lvgl/src/lv_misc/lv_txt.c ****  * E.g.: "ÁBC" is 3 characters (but 4 bytes)
 875:lvgl/src/lv_misc/lv_txt.c ****  * @param txt a '\0' terminated char string
 876:lvgl/src/lv_misc/lv_txt.c ****  * @return number of characters
 877:lvgl/src/lv_misc/lv_txt.c ****  */
ARM GAS  D:\Temp\cc5ZVeii.s 			page 47


 878:lvgl/src/lv_misc/lv_txt.c **** static uint32_t lv_txt_iso8859_1_get_length(const char * txt)
 879:lvgl/src/lv_misc/lv_txt.c **** {
 880:lvgl/src/lv_misc/lv_txt.c ****     return strlen(txt);
 881:lvgl/src/lv_misc/lv_txt.c **** }
 882:lvgl/src/lv_misc/lv_txt.c **** #else
 883:lvgl/src/lv_misc/lv_txt.c **** 
 884:lvgl/src/lv_misc/lv_txt.c **** #error "Invalid character encoding. See `LV_TXT_ENC` in `lv_conf.h`"
 885:lvgl/src/lv_misc/lv_txt.c **** 
 886:lvgl/src/lv_misc/lv_txt.c **** #endif
 887:lvgl/src/lv_misc/lv_txt.c **** 
 888:lvgl/src/lv_misc/lv_txt.c **** /**********************
 889:lvgl/src/lv_misc/lv_txt.c ****  *   STATIC FUNCTIONS
 890:lvgl/src/lv_misc/lv_txt.c ****  **********************/
 891:lvgl/src/lv_misc/lv_txt.c **** 
 892:lvgl/src/lv_misc/lv_txt.c **** /**
 893:lvgl/src/lv_misc/lv_txt.c ****  * Test if char is break char or not (a text can broken here or not)
 894:lvgl/src/lv_misc/lv_txt.c ****  * @param letter a letter
 895:lvgl/src/lv_misc/lv_txt.c ****  * @return false: 'letter' is not break char
 896:lvgl/src/lv_misc/lv_txt.c ****  */
 897:lvgl/src/lv_misc/lv_txt.c **** static inline bool is_break_char(uint32_t letter)
 898:lvgl/src/lv_misc/lv_txt.c **** {
 899:lvgl/src/lv_misc/lv_txt.c ****     uint8_t i;
 900:lvgl/src/lv_misc/lv_txt.c ****     bool ret = false;
 901:lvgl/src/lv_misc/lv_txt.c **** 
 902:lvgl/src/lv_misc/lv_txt.c ****     /*Compare the letter to TXT_BREAK_CHARS*/
 903:lvgl/src/lv_misc/lv_txt.c ****     for(i = 0; LV_TXT_BREAK_CHARS[i] != '\0'; i++) {
 1276              		.loc 1 903 11 view .LVU402
 1277 0084 0023     		movs	r3, #0
 1278              	.L101:
 1279              	.LVL128:
 1280              		.loc 1 903 34 view .LVU403
 1281 0086 354A     		ldr	r2, .L127+4
 1282 0088 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1283              		.loc 1 903 5 view .LVU404
 1284 008a 5AB1     		cbz	r2, .L122
 904:lvgl/src/lv_misc/lv_txt.c ****         if(letter == (uint32_t)LV_TXT_BREAK_CHARS[i]) {
 1285              		.loc 1 904 9 is_stmt 1 view .LVU405
 1286              		.loc 1 904 11 is_stmt 0 view .LVU406
 1287 008c 9442     		cmp	r4, r2
 1288 008e 2CD0     		beq	.L116
 903:lvgl/src/lv_misc/lv_txt.c ****         if(letter == (uint32_t)LV_TXT_BREAK_CHARS[i]) {
 1289              		.loc 1 903 48 view .LVU407
 1290 0090 0133     		adds	r3, r3, #1
 1291              	.LVL129:
 903:lvgl/src/lv_misc/lv_txt.c ****         if(letter == (uint32_t)LV_TXT_BREAK_CHARS[i]) {
 1292              		.loc 1 903 48 view .LVU408
 1293 0092 DBB2     		uxtb	r3, r3
 1294              	.LVL130:
 903:lvgl/src/lv_misc/lv_txt.c ****         if(letter == (uint32_t)LV_TXT_BREAK_CHARS[i]) {
 1295              		.loc 1 903 48 view .LVU409
 1296 0094 F7E7     		b	.L101
 1297              	.LVL131:
 1298              	.L121:
 903:lvgl/src/lv_misc/lv_txt.c ****         if(letter == (uint32_t)LV_TXT_BREAK_CHARS[i]) {
 1299              		.loc 1 903 48 view .LVU410
 1300              	.LBE21:
 1301              	.LBE20:
ARM GAS  D:\Temp\cc5ZVeii.s 			page 48


 219:lvgl/src/lv_misc/lv_txt.c ****             break_index = i;
 1302              		.loc 1 219 52 discriminator 1 view .LVU411
 1303 0096 039B     		ldr	r3, [sp, #12]
 1304 0098 EB1A     		subs	r3, r5, r3
 219:lvgl/src/lv_misc/lv_txt.c ****             break_index = i;
 1305              		.loc 1 219 42 discriminator 1 view .LVU412
 1306 009a 049A     		ldr	r2, [sp, #16]
 1307 009c 9342     		cmp	r3, r2
 1308 009e EDDD     		ble	.L99
 220:lvgl/src/lv_misc/lv_txt.c ****             break_letter_count = word_len - 1;
 1309              		.loc 1 220 25 view .LVU413
 1310 00a0 B246     		mov	r10, r6
 1311              	.LVL132:
 220:lvgl/src/lv_misc/lv_txt.c ****             break_letter_count = word_len - 1;
 1312              		.loc 1 220 25 view .LVU414
 1313 00a2 EBE7     		b	.L99
 1314              	.LVL133:
 1315              	.L122:
 1316              	.LBB25:
 1317              	.LBB22:
 900:lvgl/src/lv_misc/lv_txt.c **** 
 1318              		.loc 1 900 10 view .LVU415
 1319 00a4 0023     		movs	r3, #0
 1320              	.LVL134:
 1321              	.L102:
 905:lvgl/src/lv_misc/lv_txt.c ****             ret = true; /*If match then it is break char*/
 906:lvgl/src/lv_misc/lv_txt.c ****             break;
 907:lvgl/src/lv_misc/lv_txt.c ****         }
 908:lvgl/src/lv_misc/lv_txt.c ****     }
 909:lvgl/src/lv_misc/lv_txt.c **** 
 910:lvgl/src/lv_misc/lv_txt.c ****     return ret;
 1322              		.loc 1 910 5 is_stmt 1 view .LVU416
 1323              		.loc 1 910 5 is_stmt 0 view .LVU417
 1324              	.LBE22:
 1325              	.LBE25:
 226:lvgl/src/lv_misc/lv_txt.c ****             /* Update the output width on the first character if it fits.
 1326              		.loc 1 226 45 view .LVU418
 1327 00a6 13BB     		cbnz	r3, .L100
 235:lvgl/src/lv_misc/lv_txt.c **** 
 1328              		.loc 1 235 9 is_stmt 1 view .LVU419
 235:lvgl/src/lv_misc/lv_txt.c **** 
 1329              		.loc 1 235 11 is_stmt 0 view .LVU420
 1330 00a8 139B     		ldr	r3, [sp, #76]
 1331 00aa 13B1     		cbz	r3, .L106
 235:lvgl/src/lv_misc/lv_txt.c **** 
 1332              		.loc 1 235 31 discriminator 1 view .LVU421
 1333 00ac BAF1FF3F 		cmp	r10, #-1
 1334 00b0 32D0     		beq	.L123
 1335              	.L106:
 237:lvgl/src/lv_misc/lv_txt.c ****         i_next = i_next_next;
 1336              		.loc 1 237 9 is_stmt 1 view .LVU422
 237:lvgl/src/lv_misc/lv_txt.c ****         i_next = i_next_next;
 1337              		.loc 1 237 11 is_stmt 0 view .LVU423
 1338 00b2 079E     		ldr	r6, [sp, #28]
 1339              	.LVL135:
 238:lvgl/src/lv_misc/lv_txt.c ****         letter = letter_next;
 1340              		.loc 1 238 9 is_stmt 1 view .LVU424
ARM GAS  D:\Temp\cc5ZVeii.s 			page 49


 238:lvgl/src/lv_misc/lv_txt.c ****         letter = letter_next;
 1341              		.loc 1 238 16 is_stmt 0 view .LVU425
 1342 00b4 069B     		ldr	r3, [sp, #24]
 1343 00b6 0793     		str	r3, [sp, #28]
 239:lvgl/src/lv_misc/lv_txt.c ****     }
 1344              		.loc 1 239 9 is_stmt 1 view .LVU426
 1345              	.LVL136:
 1346              	.L97:
 1347              	.LBB26:
 1348              	.LBB23:
 900:lvgl/src/lv_misc/lv_txt.c **** 
 1349              		.loc 1 900 10 is_stmt 0 view .LVU427
 1350 00b8 C846     		mov	r8, r9
 1351 00ba 019C     		ldr	r4, [sp, #4]
 1352              	.LVL137:
 1353              	.L95:
 900:lvgl/src/lv_misc/lv_txt.c **** 
 1354              		.loc 1 900 10 view .LVU428
 1355              	.LBE23:
 1356              	.LBE26:
 197:lvgl/src/lv_misc/lv_txt.c ****         letter_next = _lv_txt_encoded_next(txt, &i_next_next);
 1357              		.loc 1 197 14 view .LVU429
 1358 00bc BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 197:lvgl/src/lv_misc/lv_txt.c ****         letter_next = _lv_txt_encoded_next(txt, &i_next_next);
 1359              		.loc 1 197 10 view .LVU430
 1360 00be D3B1     		cbz	r3, .L105
 198:lvgl/src/lv_misc/lv_txt.c ****         word_len++;
 1361              		.loc 1 198 9 is_stmt 1 view .LVU431
 198:lvgl/src/lv_misc/lv_txt.c ****         word_len++;
 1362              		.loc 1 198 23 is_stmt 0 view .LVU432
 1363 00c0 254B     		ldr	r3, .L127
 1364 00c2 1B68     		ldr	r3, [r3]
 1365 00c4 06A9     		add	r1, sp, #24
 1366 00c6 3846     		mov	r0, r7
 1367 00c8 9847     		blx	r3
 1368              	.LVL138:
 1369 00ca 0190     		str	r0, [sp, #4]
 1370              	.LVL139:
 199:lvgl/src/lv_misc/lv_txt.c **** 
 1371              		.loc 1 199 9 is_stmt 1 view .LVU433
 199:lvgl/src/lv_misc/lv_txt.c **** 
 1372              		.loc 1 199 17 is_stmt 0 view .LVU434
 1373 00cc 08F10109 		add	r9, r8, #1
 1374              	.LVL140:
 202:lvgl/src/lv_misc/lv_txt.c ****             if(_lv_txt_is_cmd(cmd_state, letter) != false) {
 1375              		.loc 1 202 9 is_stmt 1 view .LVU435
 202:lvgl/src/lv_misc/lv_txt.c ****             if(_lv_txt_is_cmd(cmd_state, letter) != false) {
 1376              		.loc 1 202 11 is_stmt 0 view .LVU436
 1377 00d0 1BF0010F 		tst	fp, #1
 1378 00d4 C1D0     		beq	.L96
 203:lvgl/src/lv_misc/lv_txt.c ****                 i = i_next;
 1379              		.loc 1 203 13 is_stmt 1 view .LVU437
 203:lvgl/src/lv_misc/lv_txt.c ****                 i = i_next;
 1380              		.loc 1 203 16 is_stmt 0 view .LVU438
 1381 00d6 2146     		mov	r1, r4
 1382 00d8 1498     		ldr	r0, [sp, #80]
 1383              	.LVL141:
ARM GAS  D:\Temp\cc5ZVeii.s 			page 50


 203:lvgl/src/lv_misc/lv_txt.c ****                 i = i_next;
 1384              		.loc 1 203 16 view .LVU439
 1385 00da FFF7FEFF 		bl	_lv_txt_is_cmd
 1386              	.LVL142:
 203:lvgl/src/lv_misc/lv_txt.c ****                 i = i_next;
 1387              		.loc 1 203 15 view .LVU440
 1388 00de 0028     		cmp	r0, #0
 1389 00e0 BBD0     		beq	.L96
 204:lvgl/src/lv_misc/lv_txt.c ****                 i_next = i_next_next;
 1390              		.loc 1 204 17 is_stmt 1 view .LVU441
 204:lvgl/src/lv_misc/lv_txt.c ****                 i_next = i_next_next;
 1391              		.loc 1 204 19 is_stmt 0 view .LVU442
 1392 00e2 079E     		ldr	r6, [sp, #28]
 1393              	.LVL143:
 205:lvgl/src/lv_misc/lv_txt.c ****                 letter = letter_next;
 1394              		.loc 1 205 17 is_stmt 1 view .LVU443
 205:lvgl/src/lv_misc/lv_txt.c ****                 letter = letter_next;
 1395              		.loc 1 205 24 is_stmt 0 view .LVU444
 1396 00e4 069B     		ldr	r3, [sp, #24]
 1397 00e6 0793     		str	r3, [sp, #28]
 206:lvgl/src/lv_misc/lv_txt.c ****                 continue;   /*Skip the letter is it is part of a command*/
 1398              		.loc 1 206 17 is_stmt 1 view .LVU445
 1399              	.LVL144:
 207:lvgl/src/lv_misc/lv_txt.c ****             }
 1400              		.loc 1 207 17 view .LVU446
 1401 00e8 E6E7     		b	.L97
 1402              	.LVL145:
 1403              	.L116:
 1404              	.LBB27:
 1405              	.LBB24:
 905:lvgl/src/lv_misc/lv_txt.c ****             break;
 1406              		.loc 1 905 17 is_stmt 0 view .LVU447
 1407 00ea 0123     		movs	r3, #1
 1408              	.LVL146:
 905:lvgl/src/lv_misc/lv_txt.c ****             break;
 1409              		.loc 1 905 17 view .LVU448
 1410 00ec DBE7     		b	.L102
 1411              	.L100:
 905:lvgl/src/lv_misc/lv_txt.c ****             break;
 1412              		.loc 1 905 17 view .LVU449
 1413              	.LBE24:
 1414              	.LBE27:
 229:lvgl/src/lv_misc/lv_txt.c ****             word_len--;
 1415              		.loc 1 229 13 is_stmt 1 view .LVU450
 229:lvgl/src/lv_misc/lv_txt.c ****             word_len--;
 1416              		.loc 1 229 15 is_stmt 0 view .LVU451
 1417 00ee 16B9     		cbnz	r6, .L105
 229:lvgl/src/lv_misc/lv_txt.c ****             word_len--;
 1418              		.loc 1 229 23 discriminator 1 view .LVU452
 1419 00f0 BAF1FF3F 		cmp	r10, #-1
 1420 00f4 0BD0     		beq	.L124
 1421              	.LVL147:
 1422              	.L105:
 243:lvgl/src/lv_misc/lv_txt.c ****         if(word_len == 0 || (letter == '\r' && letter_next == '\n')) i = i_next;
 1423              		.loc 1 243 5 is_stmt 1 view .LVU453
 243:lvgl/src/lv_misc/lv_txt.c ****         if(word_len == 0 || (letter == '\r' && letter_next == '\n')) i = i_next;
 1424              		.loc 1 243 7 is_stmt 0 view .LVU454
ARM GAS  D:\Temp\cc5ZVeii.s 			page 51


 1425 00f6 BAF1FF3F 		cmp	r10, #-1
 1426 00fa 0FD0     		beq	.L125
 276:lvgl/src/lv_misc/lv_txt.c ****     if(word_w_ptr != NULL) *word_w_ptr = 0; /* Return no word */
 1427              		.loc 1 276 5 is_stmt 1 view .LVU455
 276:lvgl/src/lv_misc/lv_txt.c ****     if(word_w_ptr != NULL) *word_w_ptr = 0; /* Return no word */
 1428              		.loc 1 276 7 is_stmt 0 view .LVU456
 1429 00fc 059B     		ldr	r3, [sp, #20]
 1430 00fe 0BBB     		cbnz	r3, .L92
 277:lvgl/src/lv_misc/lv_txt.c ****     (void) break_letter_count;
 1431              		.loc 1 277 5 is_stmt 1 view .LVU457
 277:lvgl/src/lv_misc/lv_txt.c ****     (void) break_letter_count;
 1432              		.loc 1 277 7 is_stmt 0 view .LVU458
 1433 0100 139B     		ldr	r3, [sp, #76]
 1434 0102 33B3     		cbz	r3, .L119
 277:lvgl/src/lv_misc/lv_txt.c ****     (void) break_letter_count;
 1435              		.loc 1 277 28 is_stmt 1 discriminator 1 view .LVU459
 277:lvgl/src/lv_misc/lv_txt.c ****     (void) break_letter_count;
 1436              		.loc 1 277 40 is_stmt 0 discriminator 1 view .LVU460
 1437 0104 0023     		movs	r3, #0
 1438 0106 139A     		ldr	r2, [sp, #76]
 1439 0108 1360     		str	r3, [r2]
 279:lvgl/src/lv_misc/lv_txt.c **** #endif
 1440              		.loc 1 279 12 discriminator 1 view .LVU461
 1441 010a 9A46     		mov	r10, r3
 1442              	.LVL148:
 279:lvgl/src/lv_misc/lv_txt.c **** #endif
 1443              		.loc 1 279 12 discriminator 1 view .LVU462
 1444 010c 1AE0     		b	.L92
 1445              	.LVL149:
 1446              	.L124:
 229:lvgl/src/lv_misc/lv_txt.c ****             word_len--;
 1447              		.loc 1 229 56 discriminator 2 view .LVU463
 1448 010e 139B     		ldr	r3, [sp, #76]
 1449 0110 002B     		cmp	r3, #0
 1450 0112 F0D0     		beq	.L105
 229:lvgl/src/lv_misc/lv_txt.c ****             word_len--;
 1451              		.loc 1 229 79 is_stmt 1 discriminator 3 view .LVU464
 229:lvgl/src/lv_misc/lv_txt.c ****             word_len--;
 1452              		.loc 1 229 91 is_stmt 0 discriminator 3 view .LVU465
 1453 0114 1D60     		str	r5, [r3]
 1454 0116 EEE7     		b	.L105
 1455              	.L123:
 235:lvgl/src/lv_misc/lv_txt.c **** 
 1456              		.loc 1 235 65 is_stmt 1 discriminator 2 view .LVU466
 235:lvgl/src/lv_misc/lv_txt.c **** 
 1457              		.loc 1 235 77 is_stmt 0 discriminator 2 view .LVU467
 1458 0118 1D60     		str	r5, [r3]
 1459 011a CAE7     		b	.L106
 1460              	.LVL150:
 1461              	.L125:
 244:lvgl/src/lv_misc/lv_txt.c ****         return i;
 1462              		.loc 1 244 9 is_stmt 1 view .LVU468
 244:lvgl/src/lv_misc/lv_txt.c ****         return i;
 1463              		.loc 1 244 11 is_stmt 0 view .LVU469
 1464 011c B8F1000F 		cmp	r8, #0
 1465 0120 08D0     		beq	.L109
 244:lvgl/src/lv_misc/lv_txt.c ****         return i;
ARM GAS  D:\Temp\cc5ZVeii.s 			page 52


 1466              		.loc 1 244 26 discriminator 2 view .LVU470
 1467 0122 0D2C     		cmp	r4, #13
 1468 0124 01D0     		beq	.L126
 1469 0126 B246     		mov	r10, r6
 1470              	.LVL151:
 244:lvgl/src/lv_misc/lv_txt.c ****         return i;
 1471              		.loc 1 244 26 discriminator 2 view .LVU471
 1472 0128 0CE0     		b	.L92
 1473              	.LVL152:
 1474              	.L126:
 244:lvgl/src/lv_misc/lv_txt.c ****         return i;
 1475              		.loc 1 244 45 discriminator 3 view .LVU472
 1476 012a 019B     		ldr	r3, [sp, #4]
 1477 012c 0A2B     		cmp	r3, #10
 1478 012e 01D0     		beq	.L109
 1479 0130 B246     		mov	r10, r6
 1480              	.LVL153:
 245:lvgl/src/lv_misc/lv_txt.c ****     }
 1481              		.loc 1 245 9 is_stmt 1 view .LVU473
 245:lvgl/src/lv_misc/lv_txt.c ****     }
 1482              		.loc 1 245 16 is_stmt 0 view .LVU474
 1483 0132 07E0     		b	.L92
 1484              	.LVL154:
 1485              	.L109:
 244:lvgl/src/lv_misc/lv_txt.c ****         return i;
 1486              		.loc 1 244 70 is_stmt 1 discriminator 4 view .LVU475
 244:lvgl/src/lv_misc/lv_txt.c ****         return i;
 1487              		.loc 1 244 72 is_stmt 0 discriminator 4 view .LVU476
 1488 0134 DDF81CA0 		ldr	r10, [sp, #28]
 1489              	.LVL155:
 244:lvgl/src/lv_misc/lv_txt.c ****         return i;
 1490              		.loc 1 244 72 discriminator 4 view .LVU477
 1491 0138 04E0     		b	.L92
 1492              	.LVL156:
 1493              	.L111:
 179:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1494              		.loc 1 179 46 view .LVU478
 1495 013a 4FF0000A 		mov	r10, #0
 1496 013e 01E0     		b	.L92
 1497              	.L112:
 179:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1498              		.loc 1 179 46 view .LVU479
 1499 0140 4FF0000A 		mov	r10, #0
 1500              	.LVL157:
 1501              	.L92:
 281:lvgl/src/lv_misc/lv_txt.c **** 
 1502              		.loc 1 281 1 view .LVU480
 1503 0144 5046     		mov	r0, r10
 1504 0146 09B0     		add	sp, sp, #36
 1505              	.LCFI24:
 1506              		.cfi_remember_state
 1507              		.cfi_def_cfa_offset 36
 1508              		@ sp needed
 1509 0148 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1510              	.LVL158:
 1511              	.L113:
 1512              	.LCFI25:
ARM GAS  D:\Temp\cc5ZVeii.s 			page 53


 1513              		.cfi_restore_state
 180:lvgl/src/lv_misc/lv_txt.c **** 
 1514              		.loc 1 180 29 view .LVU481
 1515 014c 4FF0000A 		mov	r10, #0
 1516 0150 F8E7     		b	.L92
 1517              	.LVL159:
 1518              	.L119:
 279:lvgl/src/lv_misc/lv_txt.c **** #endif
 1519              		.loc 1 279 12 view .LVU482
 1520 0152 4FF0000A 		mov	r10, #0
 1521              	.LVL160:
 279:lvgl/src/lv_misc/lv_txt.c **** #endif
 1522              		.loc 1 279 12 view .LVU483
 1523 0156 F5E7     		b	.L92
 1524              	.L128:
 1525              		.align	2
 1526              	.L127:
 1527 0158 00000000 		.word	.LANCHOR1
 1528 015c 00000000 		.word	.LC0
 1529              		.cfi_endproc
 1530              	.LFE168:
 1532              		.section	.text._lv_txt_get_next_line,"ax",%progbits
 1533              		.align	1
 1534              		.global	_lv_txt_get_next_line
 1535              		.syntax unified
 1536              		.thumb
 1537              		.thumb_func
 1538              		.fpu fpv4-sp-d16
 1540              	_lv_txt_get_next_line:
 1541              	.LVL161:
 1542              	.LFB169:
 297:lvgl/src/lv_misc/lv_txt.c ****     if(txt == NULL) return 0;
 1543              		.loc 1 297 1 is_stmt 1 view -0
 1544              		.cfi_startproc
 1545              		@ args = 4, pretend = 0, frame = 16
 1546              		@ frame_needed = 0, uses_anonymous_args = 0
 297:lvgl/src/lv_misc/lv_txt.c ****     if(txt == NULL) return 0;
 1547              		.loc 1 297 1 is_stmt 0 view .LVU485
 1548 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1549              	.LCFI26:
 1550              		.cfi_def_cfa_offset 24
 1551              		.cfi_offset 4, -24
 1552              		.cfi_offset 5, -20
 1553              		.cfi_offset 6, -16
 1554              		.cfi_offset 7, -12
 1555              		.cfi_offset 8, -8
 1556              		.cfi_offset 14, -4
 1557 0004 88B0     		sub	sp, sp, #32
 1558              	.LCFI27:
 1559              		.cfi_def_cfa_offset 56
 1560 0006 9DF83860 		ldrb	r6, [sp, #56]	@ zero_extendqisi2
 298:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1561              		.loc 1 298 5 is_stmt 1 view .LVU486
 298:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1562              		.loc 1 298 7 is_stmt 0 view .LVU487
 1563 000a 0028     		cmp	r0, #0
 1564 000c 5ED0     		beq	.L145
ARM GAS  D:\Temp\cc5ZVeii.s 			page 54


 1565 000e 0F46     		mov	r7, r1
 1566 0010 9046     		mov	r8, r2
 1567 0012 1D46     		mov	r5, r3
 1568 0014 0446     		mov	r4, r0
 299:lvgl/src/lv_misc/lv_txt.c **** 
 1569              		.loc 1 299 5 is_stmt 1 view .LVU488
 299:lvgl/src/lv_misc/lv_txt.c **** 
 1570              		.loc 1 299 7 is_stmt 0 view .LVU489
 1571 0016 0029     		cmp	r1, #0
 1572 0018 5AD0     		beq	.L146
 303:lvgl/src/lv_misc/lv_txt.c ****         uint32_t i;
 1573              		.loc 1 303 5 is_stmt 1 view .LVU490
 303:lvgl/src/lv_misc/lv_txt.c ****         uint32_t i;
 1574              		.loc 1 303 7 is_stmt 0 view .LVU491
 1575 001a 16F0120F 		tst	r6, #18
 1576 001e 4AD1     		bne	.L151
 312:lvgl/src/lv_misc/lv_txt.c ****     lv_txt_cmd_state_t cmd_state = LV_TXT_CMD_STATE_WAIT;
 1577              		.loc 1 312 5 is_stmt 1 view .LVU492
 312:lvgl/src/lv_misc/lv_txt.c ****     lv_txt_cmd_state_t cmd_state = LV_TXT_CMD_STATE_WAIT;
 1578              		.loc 1 312 7 is_stmt 0 view .LVU493
 1579 0020 16F0020F 		tst	r6, #2
 1580 0024 01D0     		beq	.L136
 312:lvgl/src/lv_misc/lv_txt.c ****     lv_txt_cmd_state_t cmd_state = LV_TXT_CMD_STATE_WAIT;
 1581              		.loc 1 312 45 view .LVU494
 1582 0026 47F61845 		movw	r5, #31768
 1583              	.L136:
 1584              	.LVL162:
 313:lvgl/src/lv_misc/lv_txt.c ****     uint32_t i = 0;                                        /* Iterating index into txt */
 1585              		.loc 1 313 5 is_stmt 1 view .LVU495
 313:lvgl/src/lv_misc/lv_txt.c ****     uint32_t i = 0;                                        /* Iterating index into txt */
 1586              		.loc 1 313 24 is_stmt 0 view .LVU496
 1587 002a 0023     		movs	r3, #0
 1588 002c 8DF81F30 		strb	r3, [sp, #31]
 314:lvgl/src/lv_misc/lv_txt.c **** 
 1589              		.loc 1 314 5 is_stmt 1 view .LVU497
 314:lvgl/src/lv_misc/lv_txt.c **** 
 1590              		.loc 1 314 14 is_stmt 0 view .LVU498
 1591 0030 0693     		str	r3, [sp, #24]
 316:lvgl/src/lv_misc/lv_txt.c ****         uint32_t word_w = 0;
 1592              		.loc 1 316 5 is_stmt 1 view .LVU499
 1593              	.LVL163:
 1594              	.L137:
 316:lvgl/src/lv_misc/lv_txt.c ****         uint32_t word_w = 0;
 1595              		.loc 1 316 14 is_stmt 0 view .LVU500
 1596 0032 069B     		ldr	r3, [sp, #24]
 1597 0034 E018     		adds	r0, r4, r3
 1598 0036 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 316:lvgl/src/lv_misc/lv_txt.c ****         uint32_t word_w = 0;
 1599              		.loc 1 316 10 view .LVU501
 1600 0038 32B3     		cbz	r2, .L142
 316:lvgl/src/lv_misc/lv_txt.c ****         uint32_t word_w = 0;
 1601              		.loc 1 316 26 discriminator 1 view .LVU502
 1602 003a 002D     		cmp	r5, #0
 1603 003c 24DD     		ble	.L142
 1604              	.LBB28:
 317:lvgl/src/lv_misc/lv_txt.c ****         uint32_t advance = lv_txt_get_next_word(&txt[i], font, letter_space, max_width, flag, &word
 1605              		.loc 1 317 9 is_stmt 1 view .LVU503
ARM GAS  D:\Temp\cc5ZVeii.s 			page 55


 317:lvgl/src/lv_misc/lv_txt.c ****         uint32_t advance = lv_txt_get_next_word(&txt[i], font, letter_space, max_width, flag, &word
 1606              		.loc 1 317 18 is_stmt 0 view .LVU504
 1607 003e 0022     		movs	r2, #0
 1608 0040 0592     		str	r2, [sp, #20]
 318:lvgl/src/lv_misc/lv_txt.c ****         max_width -= word_w;
 1609              		.loc 1 318 9 is_stmt 1 view .LVU505
 318:lvgl/src/lv_misc/lv_txt.c ****         max_width -= word_w;
 1610              		.loc 1 318 28 is_stmt 0 view .LVU506
 1611 0042 B3FA83F3 		clz	r3, r3
 1612 0046 5B09     		lsrs	r3, r3, #5
 1613 0048 0393     		str	r3, [sp, #12]
 1614 004a 0DF11F03 		add	r3, sp, #31
 1615 004e 0293     		str	r3, [sp, #8]
 1616 0050 05AB     		add	r3, sp, #20
 1617 0052 0193     		str	r3, [sp, #4]
 1618 0054 0096     		str	r6, [sp]
 1619 0056 2B46     		mov	r3, r5
 1620 0058 4246     		mov	r2, r8
 1621 005a 3946     		mov	r1, r7
 1622 005c FFF7FEFF 		bl	lv_txt_get_next_word
 1623              	.LVL164:
 319:lvgl/src/lv_misc/lv_txt.c **** 
 1624              		.loc 1 319 9 is_stmt 1 view .LVU507
 319:lvgl/src/lv_misc/lv_txt.c **** 
 1625              		.loc 1 319 19 is_stmt 0 view .LVU508
 1626 0060 059B     		ldr	r3, [sp, #20]
 1627 0062 ED1A     		subs	r5, r5, r3
 1628              	.LVL165:
 319:lvgl/src/lv_misc/lv_txt.c **** 
 1629              		.loc 1 319 19 view .LVU509
 1630 0064 2DB2     		sxth	r5, r5
 1631              	.LVL166:
 321:lvgl/src/lv_misc/lv_txt.c ****             if(i == 0) _lv_txt_encoded_next(txt, &i); // prevent inf loops
 1632              		.loc 1 321 9 is_stmt 1 view .LVU510
 321:lvgl/src/lv_misc/lv_txt.c ****             if(i == 0) _lv_txt_encoded_next(txt, &i); // prevent inf loops
 1633              		.loc 1 321 11 is_stmt 0 view .LVU511
 1634 0066 0346     		mov	r3, r0
 1635 0068 38B3     		cbz	r0, .L152
 326:lvgl/src/lv_misc/lv_txt.c **** 
 1636              		.loc 1 326 9 is_stmt 1 view .LVU512
 326:lvgl/src/lv_misc/lv_txt.c **** 
 1637              		.loc 1 326 11 is_stmt 0 view .LVU513
 1638 006a 0698     		ldr	r0, [sp, #24]
 1639              	.LVL167:
 326:lvgl/src/lv_misc/lv_txt.c **** 
 1640              		.loc 1 326 11 view .LVU514
 1641 006c 1844     		add	r0, r0, r3
 1642 006e 0690     		str	r0, [sp, #24]
 328:lvgl/src/lv_misc/lv_txt.c **** 
 1643              		.loc 1 328 9 is_stmt 1 view .LVU515
 328:lvgl/src/lv_misc/lv_txt.c **** 
 1644              		.loc 1 328 15 is_stmt 0 view .LVU516
 1645 0070 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1646              	.LVL168:
 328:lvgl/src/lv_misc/lv_txt.c **** 
 1647              		.loc 1 328 11 view .LVU517
 1648 0072 0A2B     		cmp	r3, #10
ARM GAS  D:\Temp\cc5ZVeii.s 			page 56


 1649 0074 08D0     		beq	.L142
 328:lvgl/src/lv_misc/lv_txt.c **** 
 1650              		.loc 1 328 27 discriminator 1 view .LVU518
 1651 0076 0D2B     		cmp	r3, #13
 1652 0078 06D0     		beq	.L142
 330:lvgl/src/lv_misc/lv_txt.c ****             i++;  /* Include the following newline in the current line */
 1653              		.loc 1 330 9 is_stmt 1 view .LVU519
 330:lvgl/src/lv_misc/lv_txt.c ****             i++;  /* Include the following newline in the current line */
 1654              		.loc 1 330 15 is_stmt 0 view .LVU520
 1655 007a 235C     		ldrb	r3, [r4, r0]	@ zero_extendqisi2
 330:lvgl/src/lv_misc/lv_txt.c ****             i++;  /* Include the following newline in the current line */
 1656              		.loc 1 330 11 view .LVU521
 1657 007c 0A2B     		cmp	r3, #10
 1658 007e 01D0     		beq	.L140
 330:lvgl/src/lv_misc/lv_txt.c ****             i++;  /* Include the following newline in the current line */
 1659              		.loc 1 330 27 discriminator 1 view .LVU522
 1660 0080 0D2B     		cmp	r3, #13
 1661 0082 D6D1     		bne	.L137
 1662              	.L140:
 331:lvgl/src/lv_misc/lv_txt.c ****             break;
 1663              		.loc 1 331 13 is_stmt 1 view .LVU523
 331:lvgl/src/lv_misc/lv_txt.c ****             break;
 1664              		.loc 1 331 14 is_stmt 0 view .LVU524
 1665 0084 0130     		adds	r0, r0, #1
 1666 0086 0690     		str	r0, [sp, #24]
 332:lvgl/src/lv_misc/lv_txt.c ****         }
 1667              		.loc 1 332 13 is_stmt 1 view .LVU525
 1668              	.L142:
 332:lvgl/src/lv_misc/lv_txt.c ****         }
 1669              		.loc 1 332 13 is_stmt 0 view .LVU526
 1670              	.LBE28:
 338:lvgl/src/lv_misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i);
 1671              		.loc 1 338 5 is_stmt 1 view .LVU527
 338:lvgl/src/lv_misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i);
 1672              		.loc 1 338 10 is_stmt 0 view .LVU528
 1673 0088 069B     		ldr	r3, [sp, #24]
 338:lvgl/src/lv_misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i);
 1674              		.loc 1 338 7 view .LVU529
 1675 008a 23B9     		cbnz	r3, .L144
 339:lvgl/src/lv_misc/lv_txt.c ****     }
 1676              		.loc 1 339 9 is_stmt 1 view .LVU530
 1677 008c 114B     		ldr	r3, .L153
 1678 008e 1B68     		ldr	r3, [r3]
 1679 0090 06A9     		add	r1, sp, #24
 1680 0092 2046     		mov	r0, r4
 1681 0094 9847     		blx	r3
 1682              	.LVL169:
 1683              	.L144:
 342:lvgl/src/lv_misc/lv_txt.c **** }
 1684              		.loc 1 342 5 view .LVU531
 342:lvgl/src/lv_misc/lv_txt.c **** }
 1685              		.loc 1 342 12 is_stmt 0 view .LVU532
 1686 0096 0698     		ldr	r0, [sp, #24]
 1687              	.LVL170:
 1688              	.L129:
 343:lvgl/src/lv_misc/lv_txt.c **** 
 1689              		.loc 1 343 1 view .LVU533
ARM GAS  D:\Temp\cc5ZVeii.s 			page 57


 1690 0098 08B0     		add	sp, sp, #32
 1691              	.LCFI28:
 1692              		.cfi_remember_state
 1693              		.cfi_def_cfa_offset 24
 1694              		@ sp needed
 1695 009a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1696              	.LVL171:
 1697              	.L134:
 1698              	.LCFI29:
 1699              		.cfi_restore_state
 1700              	.LBB29:
 307:lvgl/src/lv_misc/lv_txt.c ****         if(txt[i] != '\0') i++;    /*To go beyond `\n`*/
 1701              		.loc 1 307 9 is_stmt 1 discriminator 5 view .LVU534
 305:lvgl/src/lv_misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1702              		.loc 1 305 73 is_stmt 0 discriminator 5 view .LVU535
 1703 009e 0130     		adds	r0, r0, #1
 1704              	.LVL172:
 1705              	.L131:
 305:lvgl/src/lv_misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1706              		.loc 1 305 23 discriminator 1 view .LVU536
 1707 00a0 235C     		ldrb	r3, [r4, r0]	@ zero_extendqisi2
 305:lvgl/src/lv_misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1708              		.loc 1 305 9 discriminator 1 view .LVU537
 1709 00a2 0A2B     		cmp	r3, #10
 1710 00a4 03D0     		beq	.L133
 305:lvgl/src/lv_misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1711              		.loc 1 305 35 discriminator 3 view .LVU538
 1712 00a6 0D2B     		cmp	r3, #13
 1713 00a8 01D0     		beq	.L133
 305:lvgl/src/lv_misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1714              		.loc 1 305 53 discriminator 4 view .LVU539
 1715 00aa 002B     		cmp	r3, #0
 1716 00ac F7D1     		bne	.L134
 1717              	.L133:
 308:lvgl/src/lv_misc/lv_txt.c ****         return i;
 1718              		.loc 1 308 9 is_stmt 1 view .LVU540
 308:lvgl/src/lv_misc/lv_txt.c ****         return i;
 1719              		.loc 1 308 11 is_stmt 0 view .LVU541
 1720 00ae 002B     		cmp	r3, #0
 1721 00b0 F2D0     		beq	.L129
 308:lvgl/src/lv_misc/lv_txt.c ****         return i;
 1722              		.loc 1 308 28 is_stmt 1 discriminator 1 view .LVU542
 308:lvgl/src/lv_misc/lv_txt.c ****         return i;
 1723              		.loc 1 308 29 is_stmt 0 discriminator 1 view .LVU543
 1724 00b2 0130     		adds	r0, r0, #1
 1725              	.LVL173:
 309:lvgl/src/lv_misc/lv_txt.c ****     }
 1726              		.loc 1 309 9 is_stmt 1 discriminator 1 view .LVU544
 309:lvgl/src/lv_misc/lv_txt.c ****     }
 1727              		.loc 1 309 16 is_stmt 0 discriminator 1 view .LVU545
 1728 00b4 F0E7     		b	.L129
 1729              	.LVL174:
 1730              	.L151:
 305:lvgl/src/lv_misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1731              		.loc 1 305 15 view .LVU546
 1732 00b6 0020     		movs	r0, #0
 1733              	.LVL175:
ARM GAS  D:\Temp\cc5ZVeii.s 			page 58


 305:lvgl/src/lv_misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1734              		.loc 1 305 15 view .LVU547
 1735 00b8 F2E7     		b	.L131
 1736              	.LVL176:
 1737              	.L152:
 305:lvgl/src/lv_misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1738              		.loc 1 305 15 view .LVU548
 1739              	.LBE29:
 1740              	.LBB30:
 322:lvgl/src/lv_misc/lv_txt.c ****             break;
 1741              		.loc 1 322 13 is_stmt 1 view .LVU549
 322:lvgl/src/lv_misc/lv_txt.c ****             break;
 1742              		.loc 1 322 18 is_stmt 0 view .LVU550
 1743 00ba 069B     		ldr	r3, [sp, #24]
 322:lvgl/src/lv_misc/lv_txt.c ****             break;
 1744              		.loc 1 322 15 view .LVU551
 1745 00bc 002B     		cmp	r3, #0
 1746 00be E3D1     		bne	.L142
 322:lvgl/src/lv_misc/lv_txt.c ****             break;
 1747              		.loc 1 322 24 is_stmt 1 discriminator 1 view .LVU552
 1748 00c0 044B     		ldr	r3, .L153
 1749 00c2 1B68     		ldr	r3, [r3]
 1750 00c4 06A9     		add	r1, sp, #24
 1751 00c6 2046     		mov	r0, r4
 1752              	.LVL177:
 322:lvgl/src/lv_misc/lv_txt.c ****             break;
 1753              		.loc 1 322 24 is_stmt 0 discriminator 1 view .LVU553
 1754 00c8 9847     		blx	r3
 1755              	.LVL178:
 1756 00ca DDE7     		b	.L142
 1757              	.LVL179:
 1758              	.L145:
 322:lvgl/src/lv_misc/lv_txt.c ****             break;
 1759              		.loc 1 322 24 discriminator 1 view .LVU554
 1760              	.LBE30:
 298:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1761              		.loc 1 298 28 view .LVU555
 1762 00cc 0020     		movs	r0, #0
 1763              	.LVL180:
 298:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1764              		.loc 1 298 28 view .LVU556
 1765 00ce E3E7     		b	.L129
 1766              	.LVL181:
 1767              	.L146:
 299:lvgl/src/lv_misc/lv_txt.c **** 
 1768              		.loc 1 299 29 view .LVU557
 1769 00d0 0020     		movs	r0, #0
 1770              	.LVL182:
 299:lvgl/src/lv_misc/lv_txt.c **** 
 1771              		.loc 1 299 29 view .LVU558
 1772 00d2 E1E7     		b	.L129
 1773              	.L154:
 1774              		.align	2
 1775              	.L153:
 1776 00d4 00000000 		.word	.LANCHOR1
 1777              		.cfi_endproc
 1778              	.LFE169:
ARM GAS  D:\Temp\cc5ZVeii.s 			page 59


 1780              		.section	.text._lv_txt_get_width,"ax",%progbits
 1781              		.align	1
 1782              		.global	_lv_txt_get_width
 1783              		.syntax unified
 1784              		.thumb
 1785              		.thumb_func
 1786              		.fpu fpv4-sp-d16
 1788              	_lv_txt_get_width:
 1789              	.LVL183:
 1790              	.LFB170:
 357:lvgl/src/lv_misc/lv_txt.c ****     if(txt == NULL) return 0;
 1791              		.loc 1 357 1 is_stmt 1 view -0
 1792              		.cfi_startproc
 1793              		@ args = 4, pretend = 0, frame = 16
 1794              		@ frame_needed = 0, uses_anonymous_args = 0
 357:lvgl/src/lv_misc/lv_txt.c ****     if(txt == NULL) return 0;
 1795              		.loc 1 357 1 is_stmt 0 view .LVU560
 1796 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1797              	.LCFI30:
 1798              		.cfi_def_cfa_offset 36
 1799              		.cfi_offset 4, -36
 1800              		.cfi_offset 5, -32
 1801              		.cfi_offset 6, -28
 1802              		.cfi_offset 7, -24
 1803              		.cfi_offset 8, -20
 1804              		.cfi_offset 9, -16
 1805              		.cfi_offset 10, -12
 1806              		.cfi_offset 11, -8
 1807              		.cfi_offset 14, -4
 1808 0004 85B0     		sub	sp, sp, #20
 1809              	.LCFI31:
 1810              		.cfi_def_cfa_offset 56
 1811 0006 9DF83870 		ldrb	r7, [sp, #56]	@ zero_extendqisi2
 358:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1812              		.loc 1 358 5 is_stmt 1 view .LVU561
 358:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1813              		.loc 1 358 7 is_stmt 0 view .LVU562
 1814 000a 0028     		cmp	r0, #0
 1815 000c 41D0     		beq	.L161
 1816 000e 0446     		mov	r4, r0
 359:lvgl/src/lv_misc/lv_txt.c **** 
 1817              		.loc 1 359 5 is_stmt 1 view .LVU563
 359:lvgl/src/lv_misc/lv_txt.c **** 
 1818              		.loc 1 359 7 is_stmt 0 view .LVU564
 1819 0010 002A     		cmp	r2, #0
 1820 0012 41D0     		beq	.L162
 361:lvgl/src/lv_misc/lv_txt.c ****     lv_coord_t width             = 0;
 1821              		.loc 1 361 5 is_stmt 1 view .LVU565
 361:lvgl/src/lv_misc/lv_txt.c ****     lv_coord_t width             = 0;
 1822              		.loc 1 361 14 is_stmt 0 view .LVU566
 1823 0014 0020     		movs	r0, #0
 1824              	.LVL184:
 361:lvgl/src/lv_misc/lv_txt.c ****     lv_coord_t width             = 0;
 1825              		.loc 1 361 14 view .LVU567
 1826 0016 0390     		str	r0, [sp, #12]
 362:lvgl/src/lv_misc/lv_txt.c ****     lv_txt_cmd_state_t cmd_state = LV_TXT_CMD_STATE_WAIT;
 1827              		.loc 1 362 5 is_stmt 1 view .LVU568
ARM GAS  D:\Temp\cc5ZVeii.s 			page 60


 1828              	.LVL185:
 363:lvgl/src/lv_misc/lv_txt.c **** 
 1829              		.loc 1 363 5 view .LVU569
 363:lvgl/src/lv_misc/lv_txt.c **** 
 1830              		.loc 1 363 24 is_stmt 0 view .LVU570
 1831 0018 8DF80B00 		strb	r0, [sp, #11]
 365:lvgl/src/lv_misc/lv_txt.c ****         while(i < length) {
 1832              		.loc 1 365 5 is_stmt 1 view .LVU571
 365:lvgl/src/lv_misc/lv_txt.c ****         while(i < length) {
 1833              		.loc 1 365 7 is_stmt 0 view .LVU572
 1834 001c 59BB     		cbnz	r1, .L163
 362:lvgl/src/lv_misc/lv_txt.c ****     lv_txt_cmd_state_t cmd_state = LV_TXT_CMD_STATE_WAIT;
 1835              		.loc 1 362 16 view .LVU573
 1836 001e 8246     		mov	r10, r0
 1837              	.LVL186:
 1838              	.L156:
 389:lvgl/src/lv_misc/lv_txt.c **** 
 1839              		.loc 1 389 1 view .LVU574
 1840 0020 5046     		mov	r0, r10
 1841 0022 05B0     		add	sp, sp, #20
 1842              	.LCFI32:
 1843              		.cfi_remember_state
 1844              		.cfi_def_cfa_offset 36
 1845              		@ sp needed
 1846 0024 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1847              	.LVL187:
 1848              	.L158:
 1849              	.LCFI33:
 1850              		.cfi_restore_state
 1851              	.LBB31:
 375:lvgl/src/lv_misc/lv_txt.c ****             if(char_width > 0) {
 1852              		.loc 1 375 13 is_stmt 1 view .LVU575
 375:lvgl/src/lv_misc/lv_txt.c ****             if(char_width > 0) {
 1853              		.loc 1 375 37 is_stmt 0 view .LVU576
 1854 0028 4A46     		mov	r2, r9
 1855 002a 5946     		mov	r1, fp
 1856 002c 0198     		ldr	r0, [sp, #4]
 1857 002e FFF7FEFF 		bl	lv_font_get_glyph_width
 1858              	.LVL188:
 375:lvgl/src/lv_misc/lv_txt.c ****             if(char_width > 0) {
 1859              		.loc 1 375 24 view .LVU577
 1860 0032 03B2     		sxth	r3, r0
 1861              	.LVL189:
 376:lvgl/src/lv_misc/lv_txt.c ****                 width += char_width;
 1862              		.loc 1 376 13 is_stmt 1 view .LVU578
 376:lvgl/src/lv_misc/lv_txt.c ****                 width += char_width;
 1863              		.loc 1 376 15 is_stmt 0 view .LVU579
 1864 0034 002B     		cmp	r3, #0
 1865 0036 04DD     		ble	.L157
 377:lvgl/src/lv_misc/lv_txt.c ****                 width += letter_space;
 1866              		.loc 1 377 17 is_stmt 1 view .LVU580
 377:lvgl/src/lv_misc/lv_txt.c ****                 width += letter_space;
 1867              		.loc 1 377 23 is_stmt 0 view .LVU581
 1868 0038 5044     		add	r0, r0, r10
 1869              	.LVL190:
 378:lvgl/src/lv_misc/lv_txt.c ****             }
 1870              		.loc 1 378 17 is_stmt 1 view .LVU582
ARM GAS  D:\Temp\cc5ZVeii.s 			page 61


 378:lvgl/src/lv_misc/lv_txt.c ****             }
 1871              		.loc 1 378 23 is_stmt 0 view .LVU583
 1872 003a 18FA80F0 		uxtah	r0, r8, r0
 1873              	.LVL191:
 378:lvgl/src/lv_misc/lv_txt.c ****             }
 1874              		.loc 1 378 23 view .LVU584
 1875 003e 0FFA80FA 		sxth	r10, r0
 1876              	.LVL192:
 1877              	.L157:
 378:lvgl/src/lv_misc/lv_txt.c ****             }
 1878              		.loc 1 378 23 view .LVU585
 1879              	.LBE31:
 366:lvgl/src/lv_misc/lv_txt.c ****             uint32_t letter      = _lv_txt_encoded_next(txt, &i);
 1880              		.loc 1 366 17 view .LVU586
 1881 0042 039B     		ldr	r3, [sp, #12]
 366:lvgl/src/lv_misc/lv_txt.c ****             uint32_t letter      = _lv_txt_encoded_next(txt, &i);
 1882              		.loc 1 366 14 view .LVU587
 1883 0044 AB42     		cmp	r3, r5
 1884 0046 1CD2     		bcs	.L165
 1885              	.LBB32:
 367:lvgl/src/lv_misc/lv_txt.c ****             uint32_t letter_next = _lv_txt_encoded_next(&txt[i], NULL);
 1886              		.loc 1 367 13 is_stmt 1 view .LVU588
 367:lvgl/src/lv_misc/lv_txt.c ****             uint32_t letter_next = _lv_txt_encoded_next(&txt[i], NULL);
 1887              		.loc 1 367 36 is_stmt 0 view .LVU589
 1888 0048 154E     		ldr	r6, .L166
 1889 004a 3368     		ldr	r3, [r6]
 1890 004c 03A9     		add	r1, sp, #12
 1891 004e 2046     		mov	r0, r4
 1892 0050 9847     		blx	r3
 1893              	.LVL193:
 1894 0052 8346     		mov	fp, r0
 1895              	.LVL194:
 368:lvgl/src/lv_misc/lv_txt.c ****             if((flag & LV_TXT_FLAG_RECOLOR) != 0) {
 1896              		.loc 1 368 13 is_stmt 1 view .LVU590
 368:lvgl/src/lv_misc/lv_txt.c ****             if((flag & LV_TXT_FLAG_RECOLOR) != 0) {
 1897              		.loc 1 368 36 is_stmt 0 view .LVU591
 1898 0054 3368     		ldr	r3, [r6]
 1899 0056 0021     		movs	r1, #0
 1900 0058 0398     		ldr	r0, [sp, #12]
 1901              	.LVL195:
 368:lvgl/src/lv_misc/lv_txt.c ****             if((flag & LV_TXT_FLAG_RECOLOR) != 0) {
 1902              		.loc 1 368 36 view .LVU592
 1903 005a 2044     		add	r0, r0, r4
 1904 005c 9847     		blx	r3
 1905              	.LVL196:
 1906 005e 8146     		mov	r9, r0
 1907              	.LVL197:
 369:lvgl/src/lv_misc/lv_txt.c ****                 if(_lv_txt_is_cmd(&cmd_state, letter) != false) {
 1908              		.loc 1 369 13 is_stmt 1 view .LVU593
 369:lvgl/src/lv_misc/lv_txt.c ****                 if(_lv_txt_is_cmd(&cmd_state, letter) != false) {
 1909              		.loc 1 369 15 is_stmt 0 view .LVU594
 1910 0060 17F0010F 		tst	r7, #1
 1911 0064 E0D0     		beq	.L158
 370:lvgl/src/lv_misc/lv_txt.c ****                     continue;
 1912              		.loc 1 370 17 is_stmt 1 view .LVU595
 370:lvgl/src/lv_misc/lv_txt.c ****                     continue;
 1913              		.loc 1 370 20 is_stmt 0 view .LVU596
ARM GAS  D:\Temp\cc5ZVeii.s 			page 62


 1914 0066 5946     		mov	r1, fp
 1915 0068 0DF10B00 		add	r0, sp, #11
 1916              	.LVL198:
 370:lvgl/src/lv_misc/lv_txt.c ****                     continue;
 1917              		.loc 1 370 20 view .LVU597
 1918 006c FFF7FEFF 		bl	_lv_txt_is_cmd
 1919              	.LVL199:
 370:lvgl/src/lv_misc/lv_txt.c ****                     continue;
 1920              		.loc 1 370 19 view .LVU598
 1921 0070 0028     		cmp	r0, #0
 1922 0072 D9D0     		beq	.L158
 1923 0074 E5E7     		b	.L157
 1924              	.LVL200:
 1925              	.L163:
 370:lvgl/src/lv_misc/lv_txt.c ****                     continue;
 1926              		.loc 1 370 19 view .LVU599
 1927 0076 9846     		mov	r8, r3
 1928 0078 0192     		str	r2, [sp, #4]
 1929 007a 0D46     		mov	r5, r1
 1930              	.LBE32:
 362:lvgl/src/lv_misc/lv_txt.c ****     lv_txt_cmd_state_t cmd_state = LV_TXT_CMD_STATE_WAIT;
 1931              		.loc 1 362 16 view .LVU600
 1932 007c 4FF0000A 		mov	r10, #0
 1933 0080 DFE7     		b	.L157
 1934              	.LVL201:
 1935              	.L165:
 382:lvgl/src/lv_misc/lv_txt.c ****             width -= letter_space; /*Trim the last letter space. Important if the text is center
 1936              		.loc 1 382 9 is_stmt 1 view .LVU601
 382:lvgl/src/lv_misc/lv_txt.c ****             width -= letter_space; /*Trim the last letter space. Important if the text is center
 1937              		.loc 1 382 11 is_stmt 0 view .LVU602
 1938 0082 BAF1000F 		cmp	r10, #0
 1939 0086 CBDD     		ble	.L156
 383:lvgl/src/lv_misc/lv_txt.c ****                                       aligned */
 1940              		.loc 1 383 13 is_stmt 1 view .LVU603
 383:lvgl/src/lv_misc/lv_txt.c ****                                       aligned */
 1941              		.loc 1 383 19 is_stmt 0 view .LVU604
 1942 0088 AAEB0800 		sub	r0, r10, r8
 1943 008c 0FFA80FA 		sxth	r10, r0
 1944              	.LVL202:
 383:lvgl/src/lv_misc/lv_txt.c ****                                       aligned */
 1945              		.loc 1 383 19 view .LVU605
 1946 0090 C6E7     		b	.L156
 1947              	.LVL203:
 1948              	.L161:
 358:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return 0;
 1949              		.loc 1 358 28 view .LVU606
 1950 0092 4FF0000A 		mov	r10, #0
 1951 0096 C3E7     		b	.L156
 1952              	.L162:
 359:lvgl/src/lv_misc/lv_txt.c **** 
 1953              		.loc 1 359 29 view .LVU607
 1954 0098 4FF0000A 		mov	r10, #0
 1955 009c C0E7     		b	.L156
 1956              	.L167:
 1957 009e 00BF     		.align	2
 1958              	.L166:
 1959 00a0 00000000 		.word	.LANCHOR1
ARM GAS  D:\Temp\cc5ZVeii.s 			page 63


 1960              		.cfi_endproc
 1961              	.LFE170:
 1963              		.section	.text._lv_txt_get_size,"ax",%progbits
 1964              		.align	1
 1965              		.global	_lv_txt_get_size
 1966              		.syntax unified
 1967              		.thumb
 1968              		.thumb_func
 1969              		.fpu fpv4-sp-d16
 1971              	_lv_txt_get_size:
 1972              	.LVL204:
 1973              	.LFB167:
  98:lvgl/src/lv_misc/lv_txt.c ****     size_res->x = 0;
 1974              		.loc 1 98 1 is_stmt 1 view -0
 1975              		.cfi_startproc
 1976              		@ args = 12, pretend = 0, frame = 16
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
  98:lvgl/src/lv_misc/lv_txt.c ****     size_res->x = 0;
 1978              		.loc 1 98 1 is_stmt 0 view .LVU609
 1979 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1980              	.LCFI34:
 1981              		.cfi_def_cfa_offset 36
 1982              		.cfi_offset 4, -36
 1983              		.cfi_offset 5, -32
 1984              		.cfi_offset 6, -28
 1985              		.cfi_offset 7, -24
 1986              		.cfi_offset 8, -20
 1987              		.cfi_offset 9, -16
 1988              		.cfi_offset 10, -12
 1989              		.cfi_offset 11, -8
 1990              		.cfi_offset 14, -4
 1991 0004 87B0     		sub	sp, sp, #28
 1992              	.LCFI35:
 1993              		.cfi_def_cfa_offset 64
 1994 0006 BDF940A0 		ldrsh	r10, [sp, #64]
 1995 000a BDF94440 		ldrsh	r4, [sp, #68]
 1996 000e 0494     		str	r4, [sp, #16]
 1997 0010 9DF84890 		ldrb	r9, [sp, #72]	@ zero_extendqisi2
  99:lvgl/src/lv_misc/lv_txt.c ****     size_res->y = 0;
 1998              		.loc 1 99 5 is_stmt 1 view .LVU610
  99:lvgl/src/lv_misc/lv_txt.c ****     size_res->y = 0;
 1999              		.loc 1 99 17 is_stmt 0 view .LVU611
 2000 0014 0024     		movs	r4, #0
 2001 0016 0480     		strh	r4, [r0]	@ movhi
 100:lvgl/src/lv_misc/lv_txt.c **** 
 2002              		.loc 1 100 5 is_stmt 1 view .LVU612
 100:lvgl/src/lv_misc/lv_txt.c **** 
 2003              		.loc 1 100 17 is_stmt 0 view .LVU613
 2004 0018 4480     		strh	r4, [r0, #2]	@ movhi
 102:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return;
 2005              		.loc 1 102 5 is_stmt 1 view .LVU614
 102:lvgl/src/lv_misc/lv_txt.c ****     if(font == NULL) return;
 2006              		.loc 1 102 7 is_stmt 0 view .LVU615
 2007 001a 0029     		cmp	r1, #0
 2008 001c 4AD0     		beq	.L168
 2009 001e 0F46     		mov	r7, r1
 103:lvgl/src/lv_misc/lv_txt.c **** 
ARM GAS  D:\Temp\cc5ZVeii.s 			page 64


 2010              		.loc 1 103 5 is_stmt 1 view .LVU616
 103:lvgl/src/lv_misc/lv_txt.c **** 
 2011              		.loc 1 103 7 is_stmt 0 view .LVU617
 2012 0020 002A     		cmp	r2, #0
 2013 0022 47D0     		beq	.L168
 105:lvgl/src/lv_misc/lv_txt.c **** 
 2014              		.loc 1 105 5 is_stmt 1 view .LVU618
 105:lvgl/src/lv_misc/lv_txt.c **** 
 2015              		.loc 1 105 7 is_stmt 0 view .LVU619
 2016 0024 19F0020F 		tst	r9, #2
 2017 0028 02D0     		beq	.L170
 105:lvgl/src/lv_misc/lv_txt.c **** 
 2018              		.loc 1 105 45 view .LVU620
 2019 002a 47F61841 		movw	r1, #31768
 2020              	.LVL205:
 105:lvgl/src/lv_misc/lv_txt.c **** 
 2021              		.loc 1 105 45 view .LVU621
 2022 002e 0491     		str	r1, [sp, #16]
 2023              	.L170:
 2024 0030 0393     		str	r3, [sp, #12]
 2025 0032 9046     		mov	r8, r2
 2026 0034 0446     		mov	r4, r0
 2027              	.LVL206:
 107:lvgl/src/lv_misc/lv_txt.c ****     uint32_t new_line_start = 0;
 2028              		.loc 1 107 5 is_stmt 1 view .LVU622
 108:lvgl/src/lv_misc/lv_txt.c ****     uint16_t letter_height = lv_font_get_line_height(font);
 2029              		.loc 1 108 5 view .LVU623
 109:lvgl/src/lv_misc/lv_txt.c **** 
 2030              		.loc 1 109 5 view .LVU624
 2031              	.LBB33:
 2032              	.LBI33:
 2033              		.file 3 "lvgl/src/lv_misc/../lv_font/lv_font.h"
   1:lvgl/src/lv_misc/../lv_font/lv_font.h **** /**
   2:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @file lv_font.h
   3:lvgl/src/lv_misc/../lv_font/lv_font.h ****  *
   4:lvgl/src/lv_misc/../lv_font/lv_font.h ****  */
   5:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
   6:lvgl/src/lv_misc/../lv_font/lv_font.h **** #ifndef LV_FONT_H
   7:lvgl/src/lv_misc/../lv_font/lv_font.h **** #define LV_FONT_H
   8:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
   9:lvgl/src/lv_misc/../lv_font/lv_font.h **** #ifdef __cplusplus
  10:lvgl/src/lv_misc/../lv_font/lv_font.h **** extern "C" {
  11:lvgl/src/lv_misc/../lv_font/lv_font.h **** #endif
  12:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  13:lvgl/src/lv_misc/../lv_font/lv_font.h **** /*********************
  14:lvgl/src/lv_misc/../lv_font/lv_font.h ****  *      INCLUDES
  15:lvgl/src/lv_misc/../lv_font/lv_font.h ****  *********************/
  16:lvgl/src/lv_misc/../lv_font/lv_font.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_misc/../lv_font/lv_font.h **** #include <stdint.h>
  18:lvgl/src/lv_misc/../lv_font/lv_font.h **** #include <stddef.h>
  19:lvgl/src/lv_misc/../lv_font/lv_font.h **** #include <stdbool.h>
  20:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  21:lvgl/src/lv_misc/../lv_font/lv_font.h **** #include "lv_symbol_def.h"
  22:lvgl/src/lv_misc/../lv_font/lv_font.h **** #include "../lv_misc/lv_area.h"
  23:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  24:lvgl/src/lv_misc/../lv_font/lv_font.h **** /*********************
  25:lvgl/src/lv_misc/../lv_font/lv_font.h ****  *      DEFINES
ARM GAS  D:\Temp\cc5ZVeii.s 			page 65


  26:lvgl/src/lv_misc/../lv_font/lv_font.h ****  *********************/
  27:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  28:lvgl/src/lv_misc/../lv_font/lv_font.h **** /**********************
  29:lvgl/src/lv_misc/../lv_font/lv_font.h ****  *      TYPEDEFS
  30:lvgl/src/lv_misc/../lv_font/lv_font.h ****  **********************/
  31:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  32:lvgl/src/lv_misc/../lv_font/lv_font.h **** /*------------------
  33:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * General types
  34:lvgl/src/lv_misc/../lv_font/lv_font.h ****  *-----------------*/
  35:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  36:lvgl/src/lv_misc/../lv_font/lv_font.h **** /** Describes the properties of a glyph. */
  37:lvgl/src/lv_misc/../lv_font/lv_font.h **** typedef struct {
  38:lvgl/src/lv_misc/../lv_font/lv_font.h ****     uint16_t adv_w; /**< The glyph needs this space. Draw the next glyph after this width. 8 bit in
  39:lvgl/src/lv_misc/../lv_font/lv_font.h ****     uint16_t box_w;  /**< Width of the glyph's bounding box*/
  40:lvgl/src/lv_misc/../lv_font/lv_font.h ****     uint16_t box_h;  /**< Height of the glyph's bounding box*/
  41:lvgl/src/lv_misc/../lv_font/lv_font.h ****     int16_t ofs_x;   /**< x offset of the bounding box*/
  42:lvgl/src/lv_misc/../lv_font/lv_font.h ****     int16_t ofs_y;  /**< y offset of the bounding box*/
  43:lvgl/src/lv_misc/../lv_font/lv_font.h ****     uint8_t bpp;   /**< Bit-per-pixel: 1, 2, 4, 8*/
  44:lvgl/src/lv_misc/../lv_font/lv_font.h **** } lv_font_glyph_dsc_t;
  45:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  46:lvgl/src/lv_misc/../lv_font/lv_font.h **** /** The bitmaps might be upscaled by 3 to achieve subpixel rendering. */
  47:lvgl/src/lv_misc/../lv_font/lv_font.h **** enum {
  48:lvgl/src/lv_misc/../lv_font/lv_font.h ****     LV_FONT_SUBPX_NONE,
  49:lvgl/src/lv_misc/../lv_font/lv_font.h ****     LV_FONT_SUBPX_HOR,
  50:lvgl/src/lv_misc/../lv_font/lv_font.h ****     LV_FONT_SUBPX_VER,
  51:lvgl/src/lv_misc/../lv_font/lv_font.h ****     LV_FONT_SUBPX_BOTH,
  52:lvgl/src/lv_misc/../lv_font/lv_font.h **** };
  53:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  54:lvgl/src/lv_misc/../lv_font/lv_font.h **** typedef uint8_t lv_font_subpx_t;
  55:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  56:lvgl/src/lv_misc/../lv_font/lv_font.h **** /** Describe the properties of a font*/
  57:lvgl/src/lv_misc/../lv_font/lv_font.h **** typedef struct _lv_font_struct {
  58:lvgl/src/lv_misc/../lv_font/lv_font.h ****     /** Get a glyph's descriptor from a font*/
  59:lvgl/src/lv_misc/../lv_font/lv_font.h ****     bool (*get_glyph_dsc)(const struct _lv_font_struct *, lv_font_glyph_dsc_t *, uint32_t letter, u
  60:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  61:lvgl/src/lv_misc/../lv_font/lv_font.h ****     /** Get a glyph's bitmap from a font*/
  62:lvgl/src/lv_misc/../lv_font/lv_font.h ****     const uint8_t * (*get_glyph_bitmap)(const struct _lv_font_struct *, uint32_t);
  63:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  64:lvgl/src/lv_misc/../lv_font/lv_font.h ****     /*Pointer to the font in a font pack (must have the same line height)*/
  65:lvgl/src/lv_misc/../lv_font/lv_font.h ****     lv_coord_t line_height;         /**< The real line height where any text fits*/
  66:lvgl/src/lv_misc/../lv_font/lv_font.h ****     lv_coord_t base_line;           /**< Base line measured from the top of the line_height*/
  67:lvgl/src/lv_misc/../lv_font/lv_font.h ****     uint8_t subpx  : 2;             /**< An element of `lv_font_subpx_t`*/
  68:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  69:lvgl/src/lv_misc/../lv_font/lv_font.h ****     int8_t underline_position;      /**< Distance between the top of the underline and base line (<
  70:lvgl/src/lv_misc/../lv_font/lv_font.h ****     int8_t underline_thickness;     /**< Thickness of the underline*/
  71:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  72:lvgl/src/lv_misc/../lv_font/lv_font.h ****     void * dsc;                     /**< Store implementation specific or run_time data or caching 
  73:lvgl/src/lv_misc/../lv_font/lv_font.h **** #if LV_USE_USER_DATA
  74:lvgl/src/lv_misc/../lv_font/lv_font.h ****     lv_font_user_data_t user_data;  /**< Custom user data for font. */
  75:lvgl/src/lv_misc/../lv_font/lv_font.h **** #endif
  76:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  77:lvgl/src/lv_misc/../lv_font/lv_font.h **** } lv_font_t;
  78:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  79:lvgl/src/lv_misc/../lv_font/lv_font.h **** /**********************
  80:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * GLOBAL PROTOTYPES
  81:lvgl/src/lv_misc/../lv_font/lv_font.h ****  **********************/
  82:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
ARM GAS  D:\Temp\cc5ZVeii.s 			page 66


  83:lvgl/src/lv_misc/../lv_font/lv_font.h **** /**
  84:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * Return with the bitmap of a font.
  85:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @param font_p pointer to a font
  86:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @param letter an UNICODE character code
  87:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @return pointer to the bitmap of the letter
  88:lvgl/src/lv_misc/../lv_font/lv_font.h ****  */
  89:lvgl/src/lv_misc/../lv_font/lv_font.h **** const uint8_t * lv_font_get_glyph_bitmap(const lv_font_t * font_p, uint32_t letter);
  90:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
  91:lvgl/src/lv_misc/../lv_font/lv_font.h **** /**
  92:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * Get the descriptor of a glyph
  93:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @param font_p pointer to font
  94:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @param dsc_out store the result descriptor here
  95:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @param letter an UNICODE letter code
  96:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @return true: descriptor is successfully loaded into `dsc_out`.
  97:lvgl/src/lv_misc/../lv_font/lv_font.h ****  *         false: the letter was not found, no data is loaded to `dsc_out`
  98:lvgl/src/lv_misc/../lv_font/lv_font.h ****  */
  99:lvgl/src/lv_misc/../lv_font/lv_font.h **** bool lv_font_get_glyph_dsc(const lv_font_t * font_p, lv_font_glyph_dsc_t * dsc_out, uint32_t letter
 100:lvgl/src/lv_misc/../lv_font/lv_font.h ****                            uint32_t letter_next);
 101:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
 102:lvgl/src/lv_misc/../lv_font/lv_font.h **** /**
 103:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * Get the width of a glyph with kerning
 104:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @param font pointer to a font
 105:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @param letter an UNICODE letter
 106:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @param letter_next the next letter after `letter`. Used for kerning
 107:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @return the width of the glyph
 108:lvgl/src/lv_misc/../lv_font/lv_font.h ****  */
 109:lvgl/src/lv_misc/../lv_font/lv_font.h **** uint16_t lv_font_get_glyph_width(const lv_font_t * font, uint32_t letter, uint32_t letter_next);
 110:lvgl/src/lv_misc/../lv_font/lv_font.h **** 
 111:lvgl/src/lv_misc/../lv_font/lv_font.h **** /**
 112:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * Get the line height of a font. All characters fit into this height
 113:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @param font_p pointer to a font
 114:lvgl/src/lv_misc/../lv_font/lv_font.h ****  * @return the height of a font
 115:lvgl/src/lv_misc/../lv_font/lv_font.h ****  */
 116:lvgl/src/lv_misc/../lv_font/lv_font.h **** static inline lv_coord_t lv_font_get_line_height(const lv_font_t * font_p)
 2034              		.loc 3 116 26 view .LVU625
 2035              	.LBB34:
 117:lvgl/src/lv_misc/../lv_font/lv_font.h **** {
 118:lvgl/src/lv_misc/../lv_font/lv_font.h ****     return font_p->line_height;
 2036              		.loc 3 118 5 view .LVU626
 2037              		.loc 3 118 18 is_stmt 0 view .LVU627
 2038 0036 B2F90830 		ldrsh	r3, [r2, #8]
 2039              	.LVL207:
 2040              		.loc 3 118 18 view .LVU628
 2041 003a 0593     		str	r3, [sp, #20]
 2042              	.LVL208:
 2043              		.loc 3 118 18 view .LVU629
 2044              	.LBE34:
 2045              	.LBE33:
 109:lvgl/src/lv_misc/lv_txt.c **** 
 2046              		.loc 1 109 14 view .LVU630
 2047 003c 1FFA83FB 		uxth	fp, r3
 2048              	.LVL209:
 112:lvgl/src/lv_misc/lv_txt.c ****         new_line_start += _lv_txt_get_next_line(&text[line_start], font, letter_space, max_width, f
 2049              		.loc 1 112 5 is_stmt 1 view .LVU631
 107:lvgl/src/lv_misc/lv_txt.c ****     uint32_t new_line_start = 0;
 2050              		.loc 1 107 14 is_stmt 0 view .LVU632
 2051 0040 0025     		movs	r5, #0
ARM GAS  D:\Temp\cc5ZVeii.s 			page 67


 2052              	.LVL210:
 2053              	.L171:
 112:lvgl/src/lv_misc/lv_txt.c ****         new_line_start += _lv_txt_get_next_line(&text[line_start], font, letter_space, max_width, f
 2054              		.loc 1 112 15 view .LVU633
 2055 0042 7E19     		adds	r6, r7, r5
 2056 0044 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 112:lvgl/src/lv_misc/lv_txt.c ****         new_line_start += _lv_txt_get_next_line(&text[line_start], font, letter_space, max_width, f
 2057              		.loc 1 112 10 view .LVU634
 2058 0046 1BB3     		cbz	r3, .L178
 2059              	.LBB35:
 113:lvgl/src/lv_misc/lv_txt.c **** 
 2060              		.loc 1 113 9 is_stmt 1 view .LVU635
 113:lvgl/src/lv_misc/lv_txt.c **** 
 2061              		.loc 1 113 27 is_stmt 0 view .LVU636
 2062 0048 CDF80090 		str	r9, [sp]
 2063 004c 049B     		ldr	r3, [sp, #16]
 2064 004e 039A     		ldr	r2, [sp, #12]
 2065 0050 4146     		mov	r1, r8
 2066 0052 3046     		mov	r0, r6
 2067 0054 FFF7FEFF 		bl	_lv_txt_get_next_line
 2068              	.LVL211:
 113:lvgl/src/lv_misc/lv_txt.c **** 
 2069              		.loc 1 113 24 view .LVU637
 2070 0058 0544     		add	r5, r5, r0
 2071              	.LVL212:
 115:lvgl/src/lv_misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 2072              		.loc 1 115 9 is_stmt 1 view .LVU638
 115:lvgl/src/lv_misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 2073              		.loc 1 115 35 is_stmt 0 view .LVU639
 2074 005a B4F90230 		ldrsh	r3, [r4, #2]
 115:lvgl/src/lv_misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 2075              		.loc 1 115 39 view .LVU640
 2076 005e 03EB0B02 		add	r2, r3, fp
 115:lvgl/src/lv_misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 2077              		.loc 1 115 70 view .LVU641
 2078 0062 5244     		add	r2, r2, r10
 115:lvgl/src/lv_misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 2079              		.loc 1 115 11 view .LVU642
 2080 0064 B2F5004F 		cmp	r2, #32768
 2081 0068 24D2     		bcs	.L168
 120:lvgl/src/lv_misc/lv_txt.c ****             size_res->y += line_space;
 2082              		.loc 1 120 13 is_stmt 1 view .LVU643
 120:lvgl/src/lv_misc/lv_txt.c ****             size_res->y += line_space;
 2083              		.loc 1 120 25 is_stmt 0 view .LVU644
 2084 006a 5B44     		add	r3, r3, fp
 121:lvgl/src/lv_misc/lv_txt.c ****         }
 2085              		.loc 1 121 13 is_stmt 1 view .LVU645
 121:lvgl/src/lv_misc/lv_txt.c ****         }
 2086              		.loc 1 121 25 is_stmt 0 view .LVU646
 2087 006c 1AFA83F3 		uxtah	r3, r10, r3
 2088 0070 6380     		strh	r3, [r4, #2]	@ movhi
 125:lvgl/src/lv_misc/lv_txt.c ****                                                        flag);
 2089              		.loc 1 125 9 is_stmt 1 view .LVU647
 125:lvgl/src/lv_misc/lv_txt.c ****                                                        flag);
 2090              		.loc 1 125 38 is_stmt 0 view .LVU648
 2091 0072 CDF80090 		str	r9, [sp]
 2092 0076 039B     		ldr	r3, [sp, #12]
ARM GAS  D:\Temp\cc5ZVeii.s 			page 68


 2093 0078 4246     		mov	r2, r8
 2094 007a 0146     		mov	r1, r0
 2095 007c 3046     		mov	r0, r6
 2096 007e FFF7FEFF 		bl	_lv_txt_get_width
 2097              	.LVL213:
 128:lvgl/src/lv_misc/lv_txt.c ****         line_start  = new_line_start;
 2098              		.loc 1 128 9 is_stmt 1 view .LVU649
 128:lvgl/src/lv_misc/lv_txt.c ****         line_start  = new_line_start;
 2099              		.loc 1 128 23 is_stmt 0 view .LVU650
 2100 0082 B4F90030 		ldrsh	r3, [r4]
 2101 0086 9842     		cmp	r0, r3
 2102 0088 B8BF     		it	lt
 2103 008a 1846     		movlt	r0, r3
 2104              	.LVL214:
 128:lvgl/src/lv_misc/lv_txt.c ****         line_start  = new_line_start;
 2105              		.loc 1 128 21 view .LVU651
 2106 008c 2080     		strh	r0, [r4]	@ movhi
 129:lvgl/src/lv_misc/lv_txt.c ****     }
 2107              		.loc 1 129 9 is_stmt 1 view .LVU652
 2108              	.LVL215:
 129:lvgl/src/lv_misc/lv_txt.c ****     }
 2109              		.loc 1 129 9 is_stmt 0 view .LVU653
 2110 008e D8E7     		b	.L171
 2111              	.L178:
 129:lvgl/src/lv_misc/lv_txt.c ****     }
 2112              		.loc 1 129 9 view .LVU654
 2113              	.LBE35:
 133:lvgl/src/lv_misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 2114              		.loc 1 133 5 is_stmt 1 view .LVU655
 133:lvgl/src/lv_misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 2115              		.loc 1 133 7 is_stmt 0 view .LVU656
 2116 0090 5DB1     		cbz	r5, .L173
 133:lvgl/src/lv_misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 2117              		.loc 1 133 34 discriminator 1 view .LVU657
 2118 0092 16F8013C 		ldrb	r3, [r6, #-1]	@ zero_extendqisi2
 133:lvgl/src/lv_misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 2119              		.loc 1 133 26 discriminator 1 view .LVU658
 2120 0096 0A2B     		cmp	r3, #10
 2121 0098 01D0     		beq	.L174
 133:lvgl/src/lv_misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 2122              		.loc 1 133 59 discriminator 2 view .LVU659
 2123 009a 0D2B     		cmp	r3, #13
 2124 009c 05D1     		bne	.L173
 2125              	.L174:
 134:lvgl/src/lv_misc/lv_txt.c ****     }
 2126              		.loc 1 134 9 is_stmt 1 view .LVU660
 134:lvgl/src/lv_misc/lv_txt.c ****     }
 2127              		.loc 1 134 38 is_stmt 0 view .LVU661
 2128 009e 0BEB0A03 		add	r3, fp, r10
 134:lvgl/src/lv_misc/lv_txt.c ****     }
 2129              		.loc 1 134 21 view .LVU662
 2130 00a2 6288     		ldrh	r2, [r4, #2]
 2131 00a4 12FA83F3 		uxtah	r3, r2, r3
 2132 00a8 6380     		strh	r3, [r4, #2]	@ movhi
 2133              	.L173:
 138:lvgl/src/lv_misc/lv_txt.c ****         size_res->y = letter_height;
 2134              		.loc 1 138 5 is_stmt 1 view .LVU663
ARM GAS  D:\Temp\cc5ZVeii.s 			page 69


 138:lvgl/src/lv_misc/lv_txt.c ****         size_res->y = letter_height;
 2135              		.loc 1 138 16 is_stmt 0 view .LVU664
 2136 00aa B4F90230 		ldrsh	r3, [r4, #2]
 138:lvgl/src/lv_misc/lv_txt.c ****         size_res->y = letter_height;
 2137              		.loc 1 138 7 view .LVU665
 2138 00ae 23B9     		cbnz	r3, .L175
 139:lvgl/src/lv_misc/lv_txt.c ****     else
 2139              		.loc 1 139 9 is_stmt 1 view .LVU666
 139:lvgl/src/lv_misc/lv_txt.c ****     else
 2140              		.loc 1 139 21 is_stmt 0 view .LVU667
 2141 00b0 059B     		ldr	r3, [sp, #20]
 2142 00b2 6380     		strh	r3, [r4, #2]	@ movhi
 2143              	.LVL216:
 2144              	.L168:
 142:lvgl/src/lv_misc/lv_txt.c **** 
 2145              		.loc 1 142 1 view .LVU668
 2146 00b4 07B0     		add	sp, sp, #28
 2147              	.LCFI36:
 2148              		.cfi_remember_state
 2149              		.cfi_def_cfa_offset 36
 2150              		@ sp needed
 2151 00b6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2152              	.LVL217:
 2153              	.L175:
 2154              	.LCFI37:
 2155              		.cfi_restore_state
 141:lvgl/src/lv_misc/lv_txt.c **** }
 2156              		.loc 1 141 9 is_stmt 1 view .LVU669
 141:lvgl/src/lv_misc/lv_txt.c **** }
 2157              		.loc 1 141 21 is_stmt 0 view .LVU670
 2158 00ba A3EB0A0A 		sub	r10, r3, r10
 2159 00be A4F802A0 		strh	r10, [r4, #2]	@ movhi
 2160 00c2 F7E7     		b	.L168
 2161              		.cfi_endproc
 2162              	.LFE167:
 2164              		.section	.text._lv_txt_ins,"ax",%progbits
 2165              		.align	1
 2166              		.global	_lv_txt_ins
 2167              		.syntax unified
 2168              		.thumb
 2169              		.thumb_func
 2170              		.fpu fpv4-sp-d16
 2172              	_lv_txt_ins:
 2173              	.LVL218:
 2174              	.LFB172:
 438:lvgl/src/lv_misc/lv_txt.c ****     size_t old_len = strlen(txt_buf);
 2175              		.loc 1 438 1 is_stmt 1 view -0
 2176              		.cfi_startproc
 2177              		@ args = 0, pretend = 0, frame = 0
 2178              		@ frame_needed = 0, uses_anonymous_args = 0
 438:lvgl/src/lv_misc/lv_txt.c ****     size_t old_len = strlen(txt_buf);
 2179              		.loc 1 438 1 is_stmt 0 view .LVU672
 2180 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2181              	.LCFI38:
 2182              		.cfi_def_cfa_offset 24
 2183              		.cfi_offset 4, -24
 2184              		.cfi_offset 5, -20
ARM GAS  D:\Temp\cc5ZVeii.s 			page 70


 2185              		.cfi_offset 6, -16
 2186              		.cfi_offset 7, -12
 2187              		.cfi_offset 8, -8
 2188              		.cfi_offset 14, -4
 2189 0004 0646     		mov	r6, r0
 2190 0006 8846     		mov	r8, r1
 2191 0008 1746     		mov	r7, r2
 439:lvgl/src/lv_misc/lv_txt.c ****     size_t ins_len = strlen(ins_txt);
 2192              		.loc 1 439 5 is_stmt 1 view .LVU673
 439:lvgl/src/lv_misc/lv_txt.c ****     size_t ins_len = strlen(ins_txt);
 2193              		.loc 1 439 22 is_stmt 0 view .LVU674
 2194 000a FFF7FEFF 		bl	strlen
 2195              	.LVL219:
 439:lvgl/src/lv_misc/lv_txt.c ****     size_t ins_len = strlen(ins_txt);
 2196              		.loc 1 439 22 view .LVU675
 2197 000e 0546     		mov	r5, r0
 2198              	.LVL220:
 440:lvgl/src/lv_misc/lv_txt.c ****     if(ins_len == 0) return;
 2199              		.loc 1 440 5 is_stmt 1 view .LVU676
 440:lvgl/src/lv_misc/lv_txt.c ****     if(ins_len == 0) return;
 2200              		.loc 1 440 22 is_stmt 0 view .LVU677
 2201 0010 3846     		mov	r0, r7
 2202              	.LVL221:
 440:lvgl/src/lv_misc/lv_txt.c ****     if(ins_len == 0) return;
 2203              		.loc 1 440 22 view .LVU678
 2204 0012 FFF7FEFF 		bl	strlen
 2205              	.LVL222:
 441:lvgl/src/lv_misc/lv_txt.c **** 
 2206              		.loc 1 441 5 is_stmt 1 view .LVU679
 441:lvgl/src/lv_misc/lv_txt.c **** 
 2207              		.loc 1 441 7 is_stmt 0 view .LVU680
 2208 0016 B8B1     		cbz	r0, .L179
 2209 0018 0446     		mov	r4, r0
 443:lvgl/src/lv_misc/lv_txt.c ****     pos              = _lv_txt_encoded_get_byte_id(txt_buf, pos); /*Convert to byte index instead o
 2210              		.loc 1 443 5 is_stmt 1 view .LVU681
 443:lvgl/src/lv_misc/lv_txt.c ****     pos              = _lv_txt_encoded_get_byte_id(txt_buf, pos); /*Convert to byte index instead o
 2211              		.loc 1 443 12 is_stmt 0 view .LVU682
 2212 001a 0544     		add	r5, r5, r0
 2213              	.LVL223:
 444:lvgl/src/lv_misc/lv_txt.c **** 
 2214              		.loc 1 444 5 is_stmt 1 view .LVU683
 444:lvgl/src/lv_misc/lv_txt.c **** 
 2215              		.loc 1 444 24 is_stmt 0 view .LVU684
 2216 001c 0B4B     		ldr	r3, .L187
 2217 001e 1B68     		ldr	r3, [r3]
 2218 0020 4146     		mov	r1, r8
 2219 0022 3046     		mov	r0, r6
 2220              	.LVL224:
 444:lvgl/src/lv_misc/lv_txt.c **** 
 2221              		.loc 1 444 24 view .LVU685
 2222 0024 9847     		blx	r3
 2223              	.LVL225:
 447:lvgl/src/lv_misc/lv_txt.c ****     for(i = new_len; i >= pos + ins_len; i--) {
 2224              		.loc 1 447 5 is_stmt 1 view .LVU686
 448:lvgl/src/lv_misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 2225              		.loc 1 448 5 view .LVU687
 2226              	.L181:
ARM GAS  D:\Temp\cc5ZVeii.s 			page 71


 448:lvgl/src/lv_misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 2227              		.loc 1 448 31 is_stmt 0 discriminator 1 view .LVU688
 2228 0026 2318     		adds	r3, r4, r0
 448:lvgl/src/lv_misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 2229              		.loc 1 448 5 discriminator 1 view .LVU689
 2230 0028 AB42     		cmp	r3, r5
 2231 002a 04D8     		bhi	.L186
 449:lvgl/src/lv_misc/lv_txt.c ****     }
 2232              		.loc 1 449 9 is_stmt 1 discriminator 3 view .LVU690
 449:lvgl/src/lv_misc/lv_txt.c ****     }
 2233              		.loc 1 449 32 is_stmt 0 discriminator 3 view .LVU691
 2234 002c 2B1B     		subs	r3, r5, r4
 449:lvgl/src/lv_misc/lv_txt.c ****     }
 2235              		.loc 1 449 29 discriminator 3 view .LVU692
 2236 002e F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 449:lvgl/src/lv_misc/lv_txt.c ****     }
 2237              		.loc 1 449 20 discriminator 3 view .LVU693
 2238 0030 7355     		strb	r3, [r6, r5]
 448:lvgl/src/lv_misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 2239              		.loc 1 448 43 discriminator 3 view .LVU694
 2240 0032 013D     		subs	r5, r5, #1
 2241              	.LVL226:
 448:lvgl/src/lv_misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 2242              		.loc 1 448 43 discriminator 3 view .LVU695
 2243 0034 F7E7     		b	.L181
 2244              	.L186:
 453:lvgl/src/lv_misc/lv_txt.c **** }
 2245              		.loc 1 453 5 is_stmt 1 view .LVU696
 453:lvgl/src/lv_misc/lv_txt.c **** }
 2246              		.loc 1 453 30 is_stmt 0 view .LVU697
 2247 0036 0644     		add	r6, r6, r0
 2248              	.LVL227:
 2249              	.LBB36:
 2250              	.LBI36:
 213:lvgl/src/lv_misc/lv_mem.h **** {
 2251              		.loc 2 213 44 is_stmt 1 view .LVU698
 2252              	.LBB37:
 215:lvgl/src/lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2253              		.loc 2 215 5 view .LVU699
 216:lvgl/src/lv_misc/lv_mem.h **** 
 2254              		.loc 2 216 5 view .LVU700
 218:lvgl/src/lv_misc/lv_mem.h ****         *d8 = *s8;
 2255              		.loc 2 218 5 view .LVU701
 2256 0038 04E0     		b	.L183
 2257              	.LVL228:
 2258              	.L184:
 219:lvgl/src/lv_misc/lv_mem.h ****         d8++;
 2259              		.loc 2 219 9 view .LVU702
 219:lvgl/src/lv_misc/lv_mem.h ****         d8++;
 2260              		.loc 2 219 15 is_stmt 0 view .LVU703
 2261 003a 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 2262              	.LVL229:
 219:lvgl/src/lv_misc/lv_mem.h ****         d8++;
 2263              		.loc 2 219 13 view .LVU704
 2264 003e 06F8013B 		strb	r3, [r6], #1
 2265              	.LVL230:
 220:lvgl/src/lv_misc/lv_mem.h ****         s8++;
ARM GAS  D:\Temp\cc5ZVeii.s 			page 72


 2266              		.loc 2 220 9 is_stmt 1 view .LVU705
 221:lvgl/src/lv_misc/lv_mem.h ****         len--;
 2267              		.loc 2 221 9 view .LVU706
 222:lvgl/src/lv_misc/lv_mem.h ****     }
 2268              		.loc 2 222 9 view .LVU707
 222:lvgl/src/lv_misc/lv_mem.h ****     }
 2269              		.loc 2 222 12 is_stmt 0 view .LVU708
 2270 0042 013C     		subs	r4, r4, #1
 2271              	.LVL231:
 2272              	.L183:
 218:lvgl/src/lv_misc/lv_mem.h ****         *d8 = *s8;
 2273              		.loc 2 218 10 view .LVU709
 2274 0044 002C     		cmp	r4, #0
 2275 0046 F8D1     		bne	.L184
 2276              	.LVL232:
 2277              	.L179:
 218:lvgl/src/lv_misc/lv_mem.h ****         *d8 = *s8;
 2278              		.loc 2 218 10 view .LVU710
 2279              	.LBE37:
 2280              	.LBE36:
 454:lvgl/src/lv_misc/lv_txt.c **** 
 2281              		.loc 1 454 1 view .LVU711
 2282 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2283              	.L188:
 2284              		.align	2
 2285              	.L187:
 2286 004c 00000000 		.word	.LANCHOR2
 2287              		.cfi_endproc
 2288              	.LFE172:
 2290              		.section	.text._lv_txt_cut,"ax",%progbits
 2291              		.align	1
 2292              		.global	_lv_txt_cut
 2293              		.syntax unified
 2294              		.thumb
 2295              		.thumb_func
 2296              		.fpu fpv4-sp-d16
 2298              	_lv_txt_cut:
 2299              	.LVL233:
 2300              	.LFB173:
 464:lvgl/src/lv_misc/lv_txt.c **** 
 2301              		.loc 1 464 1 is_stmt 1 view -0
 2302              		.cfi_startproc
 2303              		@ args = 0, pretend = 0, frame = 0
 2304              		@ frame_needed = 0, uses_anonymous_args = 0
 464:lvgl/src/lv_misc/lv_txt.c **** 
 2305              		.loc 1 464 1 is_stmt 0 view .LVU713
 2306 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2307              	.LCFI39:
 2308              		.cfi_def_cfa_offset 24
 2309              		.cfi_offset 4, -24
 2310              		.cfi_offset 5, -20
 2311              		.cfi_offset 6, -16
 2312              		.cfi_offset 7, -12
 2313              		.cfi_offset 8, -8
 2314              		.cfi_offset 14, -4
 2315 0004 0546     		mov	r5, r0
 2316 0006 0C46     		mov	r4, r1
ARM GAS  D:\Temp\cc5ZVeii.s 			page 73


 2317 0008 9046     		mov	r8, r2
 466:lvgl/src/lv_misc/lv_txt.c **** 
 2318              		.loc 1 466 5 is_stmt 1 view .LVU714
 466:lvgl/src/lv_misc/lv_txt.c **** 
 2319              		.loc 1 466 22 is_stmt 0 view .LVU715
 2320 000a FFF7FEFF 		bl	strlen
 2321              	.LVL234:
 466:lvgl/src/lv_misc/lv_txt.c **** 
 2322              		.loc 1 466 22 view .LVU716
 2323 000e 0646     		mov	r6, r0
 2324              	.LVL235:
 468:lvgl/src/lv_misc/lv_txt.c ****     len = _lv_txt_encoded_get_byte_id(&txt[pos], len);
 2325              		.loc 1 468 5 is_stmt 1 view .LVU717
 468:lvgl/src/lv_misc/lv_txt.c ****     len = _lv_txt_encoded_get_byte_id(&txt[pos], len);
 2326              		.loc 1 468 11 is_stmt 0 view .LVU718
 2327 0010 094F     		ldr	r7, .L194
 2328 0012 3B68     		ldr	r3, [r7]
 2329 0014 2146     		mov	r1, r4
 2330 0016 2846     		mov	r0, r5
 2331              	.LVL236:
 468:lvgl/src/lv_misc/lv_txt.c ****     len = _lv_txt_encoded_get_byte_id(&txt[pos], len);
 2332              		.loc 1 468 11 view .LVU719
 2333 0018 9847     		blx	r3
 2334              	.LVL237:
 2335 001a 0446     		mov	r4, r0
 2336              	.LVL238:
 469:lvgl/src/lv_misc/lv_txt.c **** 
 2337              		.loc 1 469 5 is_stmt 1 view .LVU720
 469:lvgl/src/lv_misc/lv_txt.c **** 
 2338              		.loc 1 469 11 is_stmt 0 view .LVU721
 2339 001c 3B68     		ldr	r3, [r7]
 2340 001e 4146     		mov	r1, r8
 2341 0020 2818     		adds	r0, r5, r0
 2342              	.LVL239:
 469:lvgl/src/lv_misc/lv_txt.c **** 
 2343              		.loc 1 469 11 view .LVU722
 2344 0022 9847     		blx	r3
 2345              	.LVL240:
 472:lvgl/src/lv_misc/lv_txt.c ****     for(i = pos; i <= old_len - len; i++) {
 2346              		.loc 1 472 5 is_stmt 1 view .LVU723
 473:lvgl/src/lv_misc/lv_txt.c ****         txt[i] = txt[i + len];
 2347              		.loc 1 473 5 view .LVU724
 2348              	.L190:
 473:lvgl/src/lv_misc/lv_txt.c ****         txt[i] = txt[i + len];
 2349              		.loc 1 473 31 is_stmt 0 discriminator 1 view .LVU725
 2350 0024 331A     		subs	r3, r6, r0
 473:lvgl/src/lv_misc/lv_txt.c ****         txt[i] = txt[i + len];
 2351              		.loc 1 473 5 discriminator 1 view .LVU726
 2352 0026 A342     		cmp	r3, r4
 2353 0028 04D3     		bcc	.L193
 474:lvgl/src/lv_misc/lv_txt.c ****     }
 2354              		.loc 1 474 9 is_stmt 1 discriminator 3 view .LVU727
 474:lvgl/src/lv_misc/lv_txt.c ****     }
 2355              		.loc 1 474 24 is_stmt 0 discriminator 3 view .LVU728
 2356 002a 2318     		adds	r3, r4, r0
 474:lvgl/src/lv_misc/lv_txt.c ****     }
 2357              		.loc 1 474 21 discriminator 3 view .LVU729
ARM GAS  D:\Temp\cc5ZVeii.s 			page 74


 2358 002c EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 474:lvgl/src/lv_misc/lv_txt.c ****     }
 2359              		.loc 1 474 16 discriminator 3 view .LVU730
 2360 002e 2B55     		strb	r3, [r5, r4]
 473:lvgl/src/lv_misc/lv_txt.c ****         txt[i] = txt[i + len];
 2361              		.loc 1 473 39 discriminator 3 view .LVU731
 2362 0030 0134     		adds	r4, r4, #1
 2363              	.LVL241:
 473:lvgl/src/lv_misc/lv_txt.c ****         txt[i] = txt[i + len];
 2364              		.loc 1 473 39 discriminator 3 view .LVU732
 2365 0032 F7E7     		b	.L190
 2366              	.L193:
 476:lvgl/src/lv_misc/lv_txt.c **** 
 2367              		.loc 1 476 1 view .LVU733
 2368 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2369              	.LVL242:
 2370              	.L195:
 476:lvgl/src/lv_misc/lv_txt.c **** 
 2371              		.loc 1 476 1 view .LVU734
 2372              		.align	2
 2373              	.L194:
 2374 0038 00000000 		.word	.LANCHOR2
 2375              		.cfi_endproc
 2376              	.LFE173:
 2378              		.section	.text._lv_txt_set_text_vfmt,"ax",%progbits
 2379              		.align	1
 2380              		.global	_lv_txt_set_text_vfmt
 2381              		.syntax unified
 2382              		.thumb
 2383              		.thumb_func
 2384              		.fpu fpv4-sp-d16
 2386              	_lv_txt_set_text_vfmt:
 2387              	.LVL243:
 2388              	.LFB174:
 484:lvgl/src/lv_misc/lv_txt.c ****     /*Allocate space for the new text by using trick from C99 standard section 7.19.6.12 */
 2389              		.loc 1 484 1 is_stmt 1 view -0
 2390              		.cfi_startproc
 2391              		@ args = 0, pretend = 0, frame = 8
 2392              		@ frame_needed = 0, uses_anonymous_args = 0
 484:lvgl/src/lv_misc/lv_txt.c ****     /*Allocate space for the new text by using trick from C99 standard section 7.19.6.12 */
 2393              		.loc 1 484 1 is_stmt 0 view .LVU736
 2394 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2395              	.LCFI40:
 2396              		.cfi_def_cfa_offset 24
 2397              		.cfi_offset 4, -24
 2398              		.cfi_offset 5, -20
 2399              		.cfi_offset 6, -16
 2400              		.cfi_offset 7, -12
 2401              		.cfi_offset 8, -8
 2402              		.cfi_offset 14, -4
 2403 0004 82B0     		sub	sp, sp, #8
 2404              	.LCFI41:
 2405              		.cfi_def_cfa_offset 32
 2406 0006 0746     		mov	r7, r0
 2407 0008 0D46     		mov	r5, r1
 486:lvgl/src/lv_misc/lv_txt.c ****     va_copy(ap_copy, ap);
 2408              		.loc 1 486 5 is_stmt 1 view .LVU737
ARM GAS  D:\Temp\cc5ZVeii.s 			page 75


 487:lvgl/src/lv_misc/lv_txt.c ****     uint32_t len = lv_vsnprintf(NULL, 0, fmt, ap_copy);
 2409              		.loc 1 487 5 view .LVU738
 2410 000a 0191     		str	r1, [sp, #4]
 488:lvgl/src/lv_misc/lv_txt.c ****     va_end(ap_copy);
 2411              		.loc 1 488 5 view .LVU739
 488:lvgl/src/lv_misc/lv_txt.c ****     va_end(ap_copy);
 2412              		.loc 1 488 20 is_stmt 0 view .LVU740
 2413 000c 0B46     		mov	r3, r1
 2414 000e 0246     		mov	r2, r0
 2415 0010 0021     		movs	r1, #0
 2416              	.LVL244:
 488:lvgl/src/lv_misc/lv_txt.c ****     va_end(ap_copy);
 2417              		.loc 1 488 20 view .LVU741
 2418 0012 0846     		mov	r0, r1
 2419              	.LVL245:
 488:lvgl/src/lv_misc/lv_txt.c ****     va_end(ap_copy);
 2420              		.loc 1 488 20 view .LVU742
 2421 0014 FFF7FEFF 		bl	lv_vsnprintf
 2422              	.LVL246:
 488:lvgl/src/lv_misc/lv_txt.c ****     va_end(ap_copy);
 2423              		.loc 1 488 20 view .LVU743
 2424 0018 8046     		mov	r8, r0
 2425              	.LVL247:
 489:lvgl/src/lv_misc/lv_txt.c **** 
 2426              		.loc 1 489 5 is_stmt 1 view .LVU744
 491:lvgl/src/lv_misc/lv_txt.c **** #if LV_USE_ARABIC_PERSIAN_CHARS
 2427              		.loc 1 491 5 view .LVU745
 513:lvgl/src/lv_misc/lv_txt.c ****     LV_ASSERT_MEM(text);
 2428              		.loc 1 513 5 view .LVU746
 513:lvgl/src/lv_misc/lv_txt.c ****     LV_ASSERT_MEM(text);
 2429              		.loc 1 513 29 is_stmt 0 view .LVU747
 2430 001a 461C     		adds	r6, r0, #1
 513:lvgl/src/lv_misc/lv_txt.c ****     LV_ASSERT_MEM(text);
 2431              		.loc 1 513 12 view .LVU748
 2432 001c 3046     		mov	r0, r6
 2433              	.LVL248:
 513:lvgl/src/lv_misc/lv_txt.c ****     LV_ASSERT_MEM(text);
 2434              		.loc 1 513 12 view .LVU749
 2435 001e FFF7FEFF 		bl	lv_mem_alloc
 2436              	.LVL249:
 2437 0022 0446     		mov	r4, r0
 2438              	.LVL250:
 514:lvgl/src/lv_misc/lv_txt.c ****     if(text == NULL) {
 2439              		.loc 1 514 5 is_stmt 1 view .LVU750
 514:lvgl/src/lv_misc/lv_txt.c ****     if(text == NULL) {
 2440              		.loc 1 514 5 view .LVU751
 2441 0024 FFF7FEFF 		bl	lv_debug_check_null
 2442              	.LVL251:
 514:lvgl/src/lv_misc/lv_txt.c ****     if(text == NULL) {
 2443              		.loc 1 514 5 is_stmt 0 view .LVU752
 2444 0028 68B1     		cbz	r0, .L201
 514:lvgl/src/lv_misc/lv_txt.c ****     if(text == NULL) {
 2445              		.loc 1 514 24 is_stmt 1 discriminator 2 view .LVU753
 515:lvgl/src/lv_misc/lv_txt.c ****         return NULL;
 2446              		.loc 1 515 5 discriminator 2 view .LVU754
 515:lvgl/src/lv_misc/lv_txt.c ****         return NULL;
 2447              		.loc 1 515 7 is_stmt 0 discriminator 2 view .LVU755
ARM GAS  D:\Temp\cc5ZVeii.s 			page 76


 2448 002a 44B1     		cbz	r4, .L196
 518:lvgl/src/lv_misc/lv_txt.c **** 
 2449              		.loc 1 518 5 is_stmt 1 view .LVU756
 518:lvgl/src/lv_misc/lv_txt.c **** 
 2450              		.loc 1 518 15 is_stmt 0 view .LVU757
 2451 002c 0023     		movs	r3, #0
 2452 002e 04F80830 		strb	r3, [r4, r8]
 520:lvgl/src/lv_misc/lv_txt.c **** #endif
 2453              		.loc 1 520 5 is_stmt 1 view .LVU758
 2454              	.LVL252:
 520:lvgl/src/lv_misc/lv_txt.c **** #endif
 2455              		.loc 1 520 5 is_stmt 0 view .LVU759
 2456 0032 2B46     		mov	r3, r5
 2457 0034 3A46     		mov	r2, r7
 2458 0036 3146     		mov	r1, r6
 2459 0038 2046     		mov	r0, r4
 2460 003a FFF7FEFF 		bl	lv_vsnprintf
 2461              	.LVL253:
 523:lvgl/src/lv_misc/lv_txt.c **** }
 2462              		.loc 1 523 5 is_stmt 1 view .LVU760
 2463              	.L196:
 524:lvgl/src/lv_misc/lv_txt.c **** 
 2464              		.loc 1 524 1 is_stmt 0 view .LVU761
 2465 003e 2046     		mov	r0, r4
 2466 0040 02B0     		add	sp, sp, #8
 2467              	.LCFI42:
 2468              		.cfi_remember_state
 2469              		.cfi_def_cfa_offset 24
 2470              		@ sp needed
 2471 0042 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2472              	.LVL254:
 2473              	.L201:
 2474              	.LCFI43:
 2475              		.cfi_restore_state
 514:lvgl/src/lv_misc/lv_txt.c ****     if(text == NULL) {
 2476              		.loc 1 514 5 is_stmt 1 discriminator 1 view .LVU762
 514:lvgl/src/lv_misc/lv_txt.c ****     if(text == NULL) {
 2477              		.loc 1 514 5 discriminator 1 view .LVU763
 2478 0046 2246     		mov	r2, r4
 2479 0048 0023     		movs	r3, #0
 2480 004a 0248     		ldr	r0, .L202
 2481 004c FFF7FEFF 		bl	lv_debug_log_error
 2482              	.LVL255:
 2483              	.L198:
 514:lvgl/src/lv_misc/lv_txt.c ****     if(text == NULL) {
 2484              		.loc 1 514 5 discriminator 1 view .LVU764
 514:lvgl/src/lv_misc/lv_txt.c ****     if(text == NULL) {
 2485              		.loc 1 514 5 discriminator 1 view .LVU765
 2486 0050 FEE7     		b	.L198
 2487              	.L203:
 2488 0052 00BF     		.align	2
 2489              	.L202:
 2490 0054 00000000 		.word	.LC1
 2491              		.cfi_endproc
 2492              	.LFE174:
 2494              		.global	_lv_txt_get_encoded_length
 2495              		.global	_lv_txt_encoded_get_char_id
ARM GAS  D:\Temp\cc5ZVeii.s 			page 77


 2496              		.global	_lv_txt_encoded_get_byte_id
 2497              		.global	_lv_txt_encoded_prev
 2498              		.global	_lv_txt_encoded_next
 2499              		.global	_lv_txt_encoded_conv_wc
 2500              		.global	_lv_txt_unicode_to_encoded
 2501              		.global	_lv_txt_encoded_size
 2502              		.section	.data._lv_txt_encoded_conv_wc,"aw"
 2503              		.align	2
 2506              	_lv_txt_encoded_conv_wc:
 2507 0000 00000000 		.word	lv_txt_utf8_conv_wc
 2508              		.section	.data._lv_txt_encoded_get_byte_id,"aw"
 2509              		.align	2
 2510              		.set	.LANCHOR2,. + 0
 2513              	_lv_txt_encoded_get_byte_id:
 2514 0000 00000000 		.word	lv_txt_utf8_get_byte_id
 2515              		.section	.data._lv_txt_encoded_get_char_id,"aw"
 2516              		.align	2
 2519              	_lv_txt_encoded_get_char_id:
 2520 0000 00000000 		.word	lv_txt_utf8_get_char_id
 2521              		.section	.data._lv_txt_encoded_next,"aw"
 2522              		.align	2
 2523              		.set	.LANCHOR1,. + 0
 2526              	_lv_txt_encoded_next:
 2527 0000 00000000 		.word	lv_txt_utf8_next
 2528              		.section	.data._lv_txt_encoded_prev,"aw"
 2529              		.align	2
 2532              	_lv_txt_encoded_prev:
 2533 0000 00000000 		.word	lv_txt_utf8_prev
 2534              		.section	.data._lv_txt_encoded_size,"aw"
 2535              		.align	2
 2536              		.set	.LANCHOR0,. + 0
 2539              	_lv_txt_encoded_size:
 2540 0000 00000000 		.word	lv_txt_utf8_size
 2541              		.section	.data._lv_txt_get_encoded_length,"aw"
 2542              		.align	2
 2545              	_lv_txt_get_encoded_length:
 2546 0000 00000000 		.word	lv_txt_utf8_get_length
 2547              		.section	.data._lv_txt_unicode_to_encoded,"aw"
 2548              		.align	2
 2551              	_lv_txt_unicode_to_encoded:
 2552 0000 00000000 		.word	lv_txt_unicode_to_utf8
 2553              		.section	.rodata._lv_txt_set_text_vfmt.str1.4,"aMS",%progbits,1
 2554              		.align	2
 2555              	.LC1:
 2556 0000 4F757420 		.ascii	"Out of memory\000"
 2556      6F66206D 
 2556      656D6F72 
 2556      7900
 2557              		.section	.rodata.lv_txt_get_next_word.str1.4,"aMS",%progbits,1
 2558              		.align	2
 2559              	.LC0:
 2560 0000 202C2E3B 		.ascii	" ,.;:-_\000"
 2560      3A2D5F00 
 2561              		.text
 2562              	.Letext0:
 2563              		.file 4 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-none
 2564              		.file 5 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
ARM GAS  D:\Temp\cc5ZVeii.s 			page 78


 2565              		.file 6 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 2566              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
 2567              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2568              		.file 9 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-none
 2569              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2570              		.file 11 "lvgl/lv_conf.h"
 2571              		.file 12 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2572              		.file 13 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2573              		.file 14 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2574              		.file 15 "lvgl/src/lv_misc/lv_area.h"
 2575              		.file 16 "lvgl/src/lv_misc/lv_txt.h"
 2576              		.file 17 "lvgl/src/lv_misc/../lv_draw/../lv_core/../lv_misc/lv_anim.h"
 2577              		.file 18 "lvgl/src/lv_misc/../lv_draw/lv_draw_label.h"
 2578              		.file 19 "lvgl/src/lv_misc/lv_printf.h"
 2579              		.file 20 "lvgl/src/lv_misc/../lv_draw/../lv_core/../lv_misc/lv_debug.h"
 2580              		.file 21 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2581              		.file 22 "<built-in>"
ARM GAS  D:\Temp\cc5ZVeii.s 			page 79


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_txt.c
  D:\Temp\cc5ZVeii.s:18     .text.lv_txt_utf8_size:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:25     .text.lv_txt_utf8_size:0000000000000000 lv_txt_utf8_size
  D:\Temp\cc5ZVeii.s:92     .text.lv_txt_unicode_to_utf8:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:98     .text.lv_txt_unicode_to_utf8:0000000000000000 lv_txt_unicode_to_utf8
  D:\Temp\cc5ZVeii.s:237    .text.lv_txt_utf8_conv_wc:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:243    .text.lv_txt_utf8_conv_wc:0000000000000000 lv_txt_utf8_conv_wc
  D:\Temp\cc5ZVeii.s:371    .text.lv_txt_utf8_next:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:377    .text.lv_txt_utf8_next:0000000000000000 lv_txt_utf8_next
  D:\Temp\cc5ZVeii.s:659    .text.lv_txt_utf8_prev:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:665    .text.lv_txt_utf8_prev:0000000000000000 lv_txt_utf8_prev
  D:\Temp\cc5ZVeii.s:773    .text.lv_txt_utf8_prev:000000000000004c $d
  D:\Temp\cc5ZVeii.s:779    .text.lv_txt_utf8_get_byte_id:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:785    .text.lv_txt_utf8_get_byte_id:0000000000000000 lv_txt_utf8_get_byte_id
  D:\Temp\cc5ZVeii.s:857    .text.lv_txt_utf8_get_byte_id:0000000000000028 $d
  D:\Temp\cc5ZVeii.s:862    .text.lv_txt_utf8_get_char_id:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:868    .text.lv_txt_utf8_get_char_id:0000000000000000 lv_txt_utf8_get_char_id
  D:\Temp\cc5ZVeii.s:928    .text.lv_txt_utf8_get_char_id:0000000000000028 $d
  D:\Temp\cc5ZVeii.s:933    .text.lv_txt_utf8_get_length:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:939    .text.lv_txt_utf8_get_length:0000000000000000 lv_txt_utf8_get_length
  D:\Temp\cc5ZVeii.s:998    .text.lv_txt_utf8_get_length:0000000000000024 $d
  D:\Temp\cc5ZVeii.s:1003   .text._lv_txt_is_cmd:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:1010   .text._lv_txt_is_cmd:0000000000000000 _lv_txt_is_cmd
  D:\Temp\cc5ZVeii.s:1124   .text.lv_txt_get_next_word:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:1130   .text.lv_txt_get_next_word:0000000000000000 lv_txt_get_next_word
  D:\Temp\cc5ZVeii.s:1527   .text.lv_txt_get_next_word:0000000000000158 $d
  D:\Temp\cc5ZVeii.s:1533   .text._lv_txt_get_next_line:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:1540   .text._lv_txt_get_next_line:0000000000000000 _lv_txt_get_next_line
  D:\Temp\cc5ZVeii.s:1776   .text._lv_txt_get_next_line:00000000000000d4 $d
  D:\Temp\cc5ZVeii.s:1781   .text._lv_txt_get_width:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:1788   .text._lv_txt_get_width:0000000000000000 _lv_txt_get_width
  D:\Temp\cc5ZVeii.s:1959   .text._lv_txt_get_width:00000000000000a0 $d
  D:\Temp\cc5ZVeii.s:1964   .text._lv_txt_get_size:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:1971   .text._lv_txt_get_size:0000000000000000 _lv_txt_get_size
  D:\Temp\cc5ZVeii.s:2165   .text._lv_txt_ins:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:2172   .text._lv_txt_ins:0000000000000000 _lv_txt_ins
  D:\Temp\cc5ZVeii.s:2286   .text._lv_txt_ins:000000000000004c $d
  D:\Temp\cc5ZVeii.s:2291   .text._lv_txt_cut:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:2298   .text._lv_txt_cut:0000000000000000 _lv_txt_cut
  D:\Temp\cc5ZVeii.s:2374   .text._lv_txt_cut:0000000000000038 $d
  D:\Temp\cc5ZVeii.s:2379   .text._lv_txt_set_text_vfmt:0000000000000000 $t
  D:\Temp\cc5ZVeii.s:2386   .text._lv_txt_set_text_vfmt:0000000000000000 _lv_txt_set_text_vfmt
  D:\Temp\cc5ZVeii.s:2490   .text._lv_txt_set_text_vfmt:0000000000000054 $d
  D:\Temp\cc5ZVeii.s:2545   .data._lv_txt_get_encoded_length:0000000000000000 _lv_txt_get_encoded_length
  D:\Temp\cc5ZVeii.s:2519   .data._lv_txt_encoded_get_char_id:0000000000000000 _lv_txt_encoded_get_char_id
  D:\Temp\cc5ZVeii.s:2513   .data._lv_txt_encoded_get_byte_id:0000000000000000 _lv_txt_encoded_get_byte_id
  D:\Temp\cc5ZVeii.s:2532   .data._lv_txt_encoded_prev:0000000000000000 _lv_txt_encoded_prev
  D:\Temp\cc5ZVeii.s:2526   .data._lv_txt_encoded_next:0000000000000000 _lv_txt_encoded_next
  D:\Temp\cc5ZVeii.s:2506   .data._lv_txt_encoded_conv_wc:0000000000000000 _lv_txt_encoded_conv_wc
  D:\Temp\cc5ZVeii.s:2551   .data._lv_txt_unicode_to_encoded:0000000000000000 _lv_txt_unicode_to_encoded
  D:\Temp\cc5ZVeii.s:2539   .data._lv_txt_encoded_size:0000000000000000 _lv_txt_encoded_size
  D:\Temp\cc5ZVeii.s:2503   .data._lv_txt_encoded_conv_wc:0000000000000000 $d
  D:\Temp\cc5ZVeii.s:2509   .data._lv_txt_encoded_get_byte_id:0000000000000000 $d
  D:\Temp\cc5ZVeii.s:2516   .data._lv_txt_encoded_get_char_id:0000000000000000 $d
  D:\Temp\cc5ZVeii.s:2522   .data._lv_txt_encoded_next:0000000000000000 $d
  D:\Temp\cc5ZVeii.s:2529   .data._lv_txt_encoded_prev:0000000000000000 $d
ARM GAS  D:\Temp\cc5ZVeii.s 			page 80


  D:\Temp\cc5ZVeii.s:2535   .data._lv_txt_encoded_size:0000000000000000 $d
  D:\Temp\cc5ZVeii.s:2542   .data._lv_txt_get_encoded_length:0000000000000000 $d
  D:\Temp\cc5ZVeii.s:2548   .data._lv_txt_unicode_to_encoded:0000000000000000 $d
  D:\Temp\cc5ZVeii.s:2554   .rodata._lv_txt_set_text_vfmt.str1.4:0000000000000000 $d
  D:\Temp\cc5ZVeii.s:2558   .rodata.lv_txt_get_next_word.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
lv_font_get_glyph_width
strlen
lv_vsnprintf
lv_mem_alloc
lv_debug_check_null
lv_debug_log_error
