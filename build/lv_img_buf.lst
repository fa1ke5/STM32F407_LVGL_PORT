ARM GAS  D:\Temp\ccBYw3dY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_img_buf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_img_buf_get_px_color,"ax",%progbits
  18              		.align	1
  19              		.global	lv_img_buf_get_px_color
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	lv_img_buf_get_px_color:
  27              	.LVL0:
  28              	.LFB167:
  29              		.file 1 "lvgl/src/lv_draw/lv_img_buf.c"
   1:lvgl/src/lv_draw/lv_img_buf.c **** /**
   2:lvgl/src/lv_draw/lv_img_buf.c ****  * @file lv_img_buf.c
   3:lvgl/src/lv_draw/lv_img_buf.c ****  *
   4:lvgl/src/lv_draw/lv_img_buf.c ****  */
   5:lvgl/src/lv_draw/lv_img_buf.c **** 
   6:lvgl/src/lv_draw/lv_img_buf.c **** /*********************
   7:lvgl/src/lv_draw/lv_img_buf.c ****  *      INCLUDES
   8:lvgl/src/lv_draw/lv_img_buf.c ****  *********************/
   9:lvgl/src/lv_draw/lv_img_buf.c **** #include <stddef.h>
  10:lvgl/src/lv_draw/lv_img_buf.c **** #include <string.h>
  11:lvgl/src/lv_draw/lv_img_buf.c **** #include "lv_img_buf.h"
  12:lvgl/src/lv_draw/lv_img_buf.c **** #include "lv_draw_img.h"
  13:lvgl/src/lv_draw/lv_img_buf.c **** #include "../lv_misc/lv_math.h"
  14:lvgl/src/lv_draw/lv_img_buf.c **** #include "../lv_misc/lv_log.h"
  15:lvgl/src/lv_draw/lv_img_buf.c **** #include "../lv_misc/lv_mem.h"
  16:lvgl/src/lv_draw/lv_img_buf.c **** 
  17:lvgl/src/lv_draw/lv_img_buf.c **** /*********************
  18:lvgl/src/lv_draw/lv_img_buf.c ****  *      DEFINES
  19:lvgl/src/lv_draw/lv_img_buf.c ****  *********************/
  20:lvgl/src/lv_draw/lv_img_buf.c **** 
  21:lvgl/src/lv_draw/lv_img_buf.c **** /**********************
  22:lvgl/src/lv_draw/lv_img_buf.c ****  *      TYPEDEFS
  23:lvgl/src/lv_draw/lv_img_buf.c ****  **********************/
  24:lvgl/src/lv_draw/lv_img_buf.c **** 
  25:lvgl/src/lv_draw/lv_img_buf.c **** /**********************
  26:lvgl/src/lv_draw/lv_img_buf.c ****  *  STATIC PROTOTYPES
  27:lvgl/src/lv_draw/lv_img_buf.c ****  **********************/
  28:lvgl/src/lv_draw/lv_img_buf.c **** 
  29:lvgl/src/lv_draw/lv_img_buf.c **** /**********************
ARM GAS  D:\Temp\ccBYw3dY.s 			page 2


  30:lvgl/src/lv_draw/lv_img_buf.c ****  *  STATIC VARIABLES
  31:lvgl/src/lv_draw/lv_img_buf.c ****  **********************/
  32:lvgl/src/lv_draw/lv_img_buf.c **** 
  33:lvgl/src/lv_draw/lv_img_buf.c **** /**********************
  34:lvgl/src/lv_draw/lv_img_buf.c ****  *      MACROS
  35:lvgl/src/lv_draw/lv_img_buf.c ****  **********************/
  36:lvgl/src/lv_draw/lv_img_buf.c **** 
  37:lvgl/src/lv_draw/lv_img_buf.c **** /**********************
  38:lvgl/src/lv_draw/lv_img_buf.c ****  *   GLOBAL FUNCTIONS
  39:lvgl/src/lv_draw/lv_img_buf.c ****  **********************/
  40:lvgl/src/lv_draw/lv_img_buf.c **** 
  41:lvgl/src/lv_draw/lv_img_buf.c **** /**
  42:lvgl/src/lv_draw/lv_img_buf.c ****  * Get the color of an image's pixel
  43:lvgl/src/lv_draw/lv_img_buf.c ****  * @param dsc an image descriptor
  44:lvgl/src/lv_draw/lv_img_buf.c ****  * @param x x coordinate of the point to get
  45:lvgl/src/lv_draw/lv_img_buf.c ****  * @param y x coordinate of the point to get
  46:lvgl/src/lv_draw/lv_img_buf.c ****  * @param color the color of the image. In case of `LV_IMG_CF_ALPHA_1/2/4/8` this color is used.
  47:lvgl/src/lv_draw/lv_img_buf.c ****  * Not used in other cases.
  48:lvgl/src/lv_draw/lv_img_buf.c ****  * @param safe true: check out of bounds
  49:lvgl/src/lv_draw/lv_img_buf.c ****  * @return color of the point
  50:lvgl/src/lv_draw/lv_img_buf.c ****  */
  51:lvgl/src/lv_draw/lv_img_buf.c **** lv_color_t lv_img_buf_get_px_color(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_color_t color
  52:lvgl/src/lv_draw/lv_img_buf.c **** {
  30              		.loc 1 52 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 52 1 is_stmt 0 view .LVU1
  35 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 4, -24
  39              		.cfi_offset 5, -20
  40              		.cfi_offset 6, -16
  41              		.cfi_offset 7, -12
  42              		.cfi_offset 8, -8
  43              		.cfi_offset 14, -4
  44 0004 82B0     		sub	sp, sp, #8
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 32
  53:lvgl/src/lv_draw/lv_img_buf.c ****     lv_color_t p_color = LV_COLOR_BLACK;
  47              		.loc 1 53 5 is_stmt 1 view .LVU2
  48              		.loc 1 53 16 is_stmt 0 view .LVU3
  49 0006 9DF80440 		ldrb	r4, [sp, #4]	@ zero_extendqisi2
  50 000a 6FF30404 		bfc	r4, #0, #5
  51 000e 8DF80440 		strb	r4, [sp, #4]
  52 0012 BDF80440 		ldrh	r4, [sp, #4]
  53 0016 6FF34A14 		bfc	r4, #5, #6
  54 001a ADF80440 		strh	r4, [sp, #4]	@ movhi
  55 001e C4F30724 		ubfx	r4, r4, #8, #8
  56 0022 6FF3C704 		bfc	r4, #3, #5
  57 0026 8DF80540 		strb	r4, [sp, #5]
  54:lvgl/src/lv_draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
  58              		.loc 1 54 5 is_stmt 1 view .LVU4
  59              		.loc 1 54 15 is_stmt 0 view .LVU5
  60 002a 8568     		ldr	r5, [r0, #8]
  61              	.LVL1:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 3


  55:lvgl/src/lv_draw/lv_img_buf.c **** 
  56:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR || dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYE
  62              		.loc 1 56 5 is_stmt 1 view .LVU6
  63              		.loc 1 56 23 is_stmt 0 view .LVU7
  64 002c 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
  65 002e 04F01F04 		and	r4, r4, #31
  66              		.loc 1 56 7 view .LVU8
  67 0032 042C     		cmp	r4, #4
  68 0034 13D0     		beq	.L2
  69              		.loc 1 56 47 discriminator 1 view .LVU9
  70 0036 062C     		cmp	r4, #6
  71 0038 11D0     		beq	.L2
  72              		.loc 1 56 102 discriminator 2 view .LVU10
  73 003a 052C     		cmp	r4, #5
  74 003c 0FD0     		beq	.L2
  57:lvgl/src/lv_draw/lv_img_buf.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
  58:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
  59:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
  60:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
  61:lvgl/src/lv_draw/lv_img_buf.c **** #if LV_COLOR_SIZE == 32
  62:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.ch.alpha = 0xFF; /*Only the color should be get so use a default alpha value*/
  63:lvgl/src/lv_draw/lv_img_buf.c **** #endif
  64:lvgl/src/lv_draw/lv_img_buf.c ****     }
  65:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_1BIT) {
  75              		.loc 1 65 10 is_stmt 1 view .LVU11
  76              		.loc 1 65 12 is_stmt 0 view .LVU12
  77 003e 072C     		cmp	r4, #7
  78 0040 2AD0     		beq	.L12
  66:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8 += 4 * 2;
  67:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
  68:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
  69:lvgl/src/lv_draw/lv_img_buf.c **** 
  70:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
  71:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
  72:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 8, 16, 24 ...*/
  73:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px  = ((dsc->header.w + 7) >> 3) * y + x;
  74:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
  75:lvgl/src/lv_draw/lv_img_buf.c ****     }
  76:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_2BIT) {
  79              		.loc 1 76 10 is_stmt 1 view .LVU13
  80              		.loc 1 76 12 is_stmt 0 view .LVU14
  81 0042 082C     		cmp	r4, #8
  82 0044 44D0     		beq	.L13
  77:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8 += 4 * 4;
  78:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
  79:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
  80:lvgl/src/lv_draw/lv_img_buf.c **** 
  81:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
  82:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 3 means rounding up to 4 because the lines are byte aligned
  83:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 4, 8, 12 ...*/
  84:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px  = ((dsc->header.w + 3) >> 2) * y + x;
  85:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
  86:lvgl/src/lv_draw/lv_img_buf.c ****     }
  87:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_4BIT) {
  83              		.loc 1 87 10 is_stmt 1 view .LVU15
  84              		.loc 1 87 12 is_stmt 0 view .LVU16
  85 0046 092C     		cmp	r4, #9
ARM GAS  D:\Temp\ccBYw3dY.s 			page 4


  86 0048 5AD0     		beq	.L14
  88:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8 += 4 * 16;
  89:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
  90:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
  91:lvgl/src/lv_draw/lv_img_buf.c **** 
  92:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
  93:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 1 means rounding up to 2 because the lines are byte aligned
  94:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 2, 4, 6 ...*/
  95:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px  = ((dsc->header.w + 1) >> 1) * y + x;
  96:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
  97:lvgl/src/lv_draw/lv_img_buf.c ****     }
  98:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
  87              		.loc 1 98 10 is_stmt 1 view .LVU17
  88              		.loc 1 98 12 is_stmt 0 view .LVU18
  89 004a 0A2C     		cmp	r4, #10
  90 004c 71D0     		beq	.L15
  99:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8 += 4 * 256;
 100:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px  = dsc->header.w * y + x;
 101:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 102:lvgl/src/lv_draw/lv_img_buf.c ****     }
 103:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT || dsc->header.cf == LV_IMG_CF_ALPHA_2BIT ||
  91              		.loc 1 103 10 is_stmt 1 view .LVU19
 104:lvgl/src/lv_draw/lv_img_buf.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
  92              		.loc 1 104 52 is_stmt 0 view .LVU20
  93 004e A4F10B02 		sub	r2, r4, #11
  94              	.LVL2:
  95              		.loc 1 104 52 view .LVU21
  96 0052 D2B2     		uxtb	r2, r2
 103:lvgl/src/lv_draw/lv_img_buf.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
  97              		.loc 1 103 12 view .LVU22
  98 0054 032A     		cmp	r2, #3
  99 0056 36D8     		bhi	.L6
 105:lvgl/src/lv_draw/lv_img_buf.c ****         p_color = color;
 100              		.loc 1 105 9 is_stmt 1 view .LVU23
 101              		.loc 1 105 17 is_stmt 0 view .LVU24
 102 0058 ADF80430 		strh	r3, [sp, #4]	@ movhi
 103 005c 33E0     		b	.L6
 104              	.LVL3:
 105              	.L2:
 106              		.loc 1 105 17 view .LVU25
 107 005e 9046     		mov	r8, r2
 108 0060 0F46     		mov	r7, r1
 109 0062 0646     		mov	r6, r0
 110              	.LBB30:
  58:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 111              		.loc 1 58 9 is_stmt 1 view .LVU26
  58:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 112              		.loc 1 58 60 is_stmt 0 view .LVU27
 113 0064 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 114              	.LVL4:
  58:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 115              		.loc 1 58 27 view .LVU28
 116 0066 00F01F00 		and	r0, r0, #31
 117 006a FFF7FEFF 		bl	lv_img_cf_get_px_size
 118              	.LVL5:
  58:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 119              		.loc 1 58 17 view .LVU29
ARM GAS  D:\Temp\ccBYw3dY.s 			page 5


 120 006e C0F3C704 		ubfx	r4, r0, #3, #8
 121              	.LVL6:
  59:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 122              		.loc 1 59 9 is_stmt 1 view .LVU30
  59:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 123              		.loc 1 59 38 is_stmt 0 view .LVU31
 124 0072 3368     		ldr	r3, [r6]
 125 0074 C3F38A23 		ubfx	r3, r3, #10, #11
  59:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 126              		.loc 1 59 41 view .LVU32
 127 0078 03FB08F2 		mul	r2, r3, r8
  59:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 128              		.loc 1 59 59 view .LVU33
 129 007c 04FB07F0 		mul	r0, r4, r7
  59:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 130              		.loc 1 59 55 view .LVU34
 131 0080 04FB0200 		mla	r0, r4, r2, r0
 132              	.LVL7:
  60:lvgl/src/lv_draw/lv_img_buf.c **** #if LV_COLOR_SIZE == 32
 133              		.loc 1 60 9 is_stmt 1 view .LVU35
  60:lvgl/src/lv_draw/lv_img_buf.c **** #if LV_COLOR_SIZE == 32
 134              		.loc 1 60 36 is_stmt 0 view .LVU36
 135 0084 2844     		add	r0, r0, r5
 136              	.LVL8:
 137              	.LBB31:
 138              	.LBI31:
 139              		.file 2 "lvgl/src/lv_draw/../lv_misc/lv_mem.h"
   1:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
   2:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @file lv_mem.h
   3:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *
   4:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
   5:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
   6:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #ifndef LV_MEM_H
   7:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #define LV_MEM_H
   8:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
   9:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #ifdef __cplusplus
  10:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** extern "C" {
  11:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #endif
  12:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  13:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /*********************
  14:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *      INCLUDES
  15:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *********************/
  16:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  18:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include <stdint.h>
  19:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include <stddef.h>
  20:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include "lv_log.h"
  21:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include "lv_types.h"
  22:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  23:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
  24:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include <string.h>
  25:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #endif
  26:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  27:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /*********************
  28:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *      DEFINES
  29:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *********************/
  30:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
ARM GAS  D:\Temp\ccBYw3dY.s 			page 6


  31:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #ifndef LV_MEM_BUF_MAX_NUM
  32:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #define LV_MEM_BUF_MAX_NUM    16
  33:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #endif
  34:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  35:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**********************
  36:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *      TYPEDEFS
  37:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  **********************/
  38:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  39:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  40:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Heap information structure.
  41:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
  42:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** typedef struct {
  43:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t total_size; /**< Total heap size */
  44:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t free_cnt;
  45:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t free_size; /**< Size of available memory */
  46:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t free_biggest_size;
  47:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t used_cnt;
  48:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used */
  49:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint8_t used_pct; /**< Percentage used */
  50:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation */
  51:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** } lv_mem_monitor_t;
  52:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  53:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** typedef struct {
  54:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     void * p;
  55:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint16_t size;
  56:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint8_t used    : 1;
  57:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** } lv_mem_buf_t;
  58:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  59:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  60:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** extern lv_mem_buf_arr_t _lv_mem_buf;
  61:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  62:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**********************
  63:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * GLOBAL PROTOTYPES
  64:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  **********************/
  65:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  66:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  67:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  68:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
  69:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void _lv_mem_init(void);
  70:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  71:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  72:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
  73:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  74:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
  75:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void _lv_mem_deinit(void);
  76:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  77:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  78:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Allocate a memory dynamically
  79:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param size size of the memory to allocate in bytes
  80:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @return pointer to the allocated memory
  81:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
  82:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void * lv_mem_alloc(size_t size);
  83:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  84:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  85:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Free an allocated data
  86:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory
  87:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
ARM GAS  D:\Temp\ccBYw3dY.s 			page 7


  88:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void lv_mem_free(const void * data);
  89:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  90:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  91:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  92:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory.
  93:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Its content will be copied to the new memory block and freed
  94:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param new_size the desired new size in byte
  95:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @return pointer to the new memory
  96:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
  97:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  98:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  99:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 100:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Join the adjacent free memory blocks
 101:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 102:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void lv_mem_defrag(void);
 103:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 104:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 105:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *
 106:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @return
 107:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 108:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** lv_res_t lv_mem_test(void);
 109:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 110:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 111:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Give information about the work memory of dynamic allocation
 112:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param mon_p pointer to a dm_mon_p variable,
 113:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *              the result of the analysis will be stored here
 114:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 115:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 116:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 117:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 118:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Give the size of an allocated memory
 119:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory
 120:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @return the size of data memory in bytes
 121:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 122:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** uint32_t _lv_mem_get_size(const void * data);
 123:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 124:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 125:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Get a temporal buffer with the given size.
 126:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param size the required size
 127:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 128:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void * _lv_mem_buf_get(uint32_t size);
 129:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 130:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 131:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Release a memory buffer
 132:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param p buffer to release
 133:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 134:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void _lv_mem_buf_release(void * p);
 135:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 136:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 137:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Free all memory buffers
 138:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 139:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void _lv_mem_buf_free_all(void);
 140:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 141:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** //! @cond Doxygen_Suppress
 142:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 143:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 144:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
ARM GAS  D:\Temp\ccBYw3dY.s 			page 8


 145:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 146:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Wrapper for the standard memcpy
 147:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 148:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 149:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 150:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 151:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** static inline void * _lv_memcpy(void * dst, const void * src, size_t len)
 152:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 153:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     return memcpy(dst, src, len);
 154:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** }
 155:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 156:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 157:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Wrapper for the standard memcpy
 158:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 159:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 160:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 161:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 162:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** static inline void * _lv_memcpy_small(void * dst, const void * src, size_t len)
 163:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 164:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     return memcpy(dst, src, len);
 165:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** }
 166:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 167:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 168:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Wrapper for the standard memset
 169:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 170:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param v value to set [0..255]
 171:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to set
 172:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 173:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** static inline void _lv_memset(void * dst, uint8_t v, size_t len)
 174:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 175:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     memset(dst, v, len);
 176:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** }
 177:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 178:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 179:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 180:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 181:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to set
 182:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 183:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** static inline void _lv_memset_00(void * dst, size_t len)
 184:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 185:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     memset(dst, 0x00, len);
 186:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** }
 187:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 188:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 189:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 190:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 191:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to set
 192:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 193:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** static inline void _lv_memset_ff(void * dst, size_t len)
 194:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 195:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     memset(dst, 0xFF, len);
 196:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** }
 197:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 198:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #else
 199:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 200:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 201:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
ARM GAS  D:\Temp\ccBYw3dY.s 			page 9


 202:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 203:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 204:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 205:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * _lv_memcpy(void * dst, const void * src, size_t len);
 206:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 207:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 208:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 209:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 210:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 211:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 212:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 213:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * _lv_memcpy_small(void * dst, const void * src, size_t le
 140              		.loc 2 213 44 is_stmt 1 view .LVU37
 141              	.LBB32:
 214:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 142              		.loc 2 215 5 view .LVU38
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 143              		.loc 2 216 5 view .LVU39
 217:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     while(len) {
 144              		.loc 2 218 5 view .LVU40
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 145              		.loc 2 215 15 is_stmt 0 view .LVU41
 146 0086 01AA     		add	r2, sp, #4
 147              	.LVL9:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 148              		.loc 2 215 15 view .LVU42
 149              	.LBE32:
 150              	.LBE31:
  60:lvgl/src/lv_draw/lv_img_buf.c **** #if LV_COLOR_SIZE == 32
 151              		.loc 1 60 36 view .LVU43
 152 0088 0223     		movs	r3, #2
 153              	.LVL10:
 154              	.L4:
 155              	.LBB34:
 156              	.LBB33:
 157              		.loc 2 218 10 view .LVU44
 158 008a E3B1     		cbz	r3, .L6
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 159              		.loc 2 219 9 is_stmt 1 view .LVU45
 160              		.loc 2 219 15 is_stmt 0 view .LVU46
 161 008c 10F8011B 		ldrb	r1, [r0], #1	@ zero_extendqisi2
 162              	.LVL11:
 163              		.loc 2 219 13 view .LVU47
 164 0090 02F8011B 		strb	r1, [r2], #1
 165              	.LVL12:
 220:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 166              		.loc 2 220 9 is_stmt 1 view .LVU48
 221:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         s8++;
 167              		.loc 2 221 9 view .LVU49
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         len--;
 168              		.loc 2 222 9 view .LVU50
 169              		.loc 2 222 12 is_stmt 0 view .LVU51
 170 0094 013B     		subs	r3, r3, #1
 171              	.LVL13:
 172              		.loc 2 222 12 view .LVU52
ARM GAS  D:\Temp\ccBYw3dY.s 			page 10


 173 0096 F8E7     		b	.L4
 174              	.LVL14:
 175              	.L12:
 176              		.loc 2 222 12 view .LVU53
 177              	.LBE33:
 178              	.LBE34:
 179              	.LBE30:
 180              	.LBB35:
  66:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 181              		.loc 1 66 9 is_stmt 1 view .LVU54
  67:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
 182              		.loc 1 67 9 view .LVU55
  67:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
 183              		.loc 1 67 17 is_stmt 0 view .LVU56
 184 0098 01F00704 		and	r4, r1, #7
 185              	.LVL15:
  68:lvgl/src/lv_draw/lv_img_buf.c **** 
 186              		.loc 1 68 9 is_stmt 1 view .LVU57
  73:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 187              		.loc 1 73 9 view .LVU58
  73:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 188              		.loc 1 73 37 is_stmt 0 view .LVU59
 189 009c 0368     		ldr	r3, [r0]
 190              	.LVL16:
  73:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 191              		.loc 1 73 37 view .LVU60
 192 009e C3F38A28 		ubfx	r8, r3, #10, #11
  73:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 193              		.loc 1 73 40 view .LVU61
 194 00a2 08F10708 		add	r8, r8, #7
  73:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 195              		.loc 1 73 45 view .LVU62
 196 00a6 4FEAE808 		asr	r8, r8, #3
  73:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 197              		.loc 1 73 51 view .LVU63
 198 00aa 08FB02F8 		mul	r8, r8, r2
  73:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 199              		.loc 1 73 55 view .LVU64
 200 00ae 08EBE100 		add	r0, r8, r1, asr #3
 201              	.LVL17:
  74:lvgl/src/lv_draw/lv_img_buf.c ****     }
 202              		.loc 1 74 9 is_stmt 1 view .LVU65
  74:lvgl/src/lv_draw/lv_img_buf.c ****     }
 203              		.loc 1 74 31 is_stmt 0 view .LVU66
 204 00b2 2844     		add	r0, r0, r5
 205              	.LVL18:
  74:lvgl/src/lv_draw/lv_img_buf.c ****     }
 206              		.loc 1 74 31 view .LVU67
 207 00b4 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
  74:lvgl/src/lv_draw/lv_img_buf.c ****     }
 208              		.loc 1 74 47 view .LVU68
 209 00b6 C4F10702 		rsb	r2, r4, #7
 210              	.LVL19:
  74:lvgl/src/lv_draw/lv_img_buf.c ****     }
 211              		.loc 1 74 41 view .LVU69
 212 00ba 0121     		movs	r1, #1
 213              	.LVL20:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 11


  74:lvgl/src/lv_draw/lv_img_buf.c ****     }
 214              		.loc 1 74 41 view .LVU70
 215 00bc 9140     		lsls	r1, r1, r2
  74:lvgl/src/lv_draw/lv_img_buf.c ****     }
 216              		.loc 1 74 36 view .LVU71
 217 00be 0B40     		ands	r3, r3, r1
  74:lvgl/src/lv_draw/lv_img_buf.c ****     }
 218              		.loc 1 74 56 view .LVU72
 219 00c0 1341     		asrs	r3, r3, r2
  74:lvgl/src/lv_draw/lv_img_buf.c ****     }
 220              		.loc 1 74 22 view .LVU73
 221 00c2 ADF80430 		strh	r3, [sp, #4]	@ movhi
 222              	.LVL21:
 223              	.L6:
  74:lvgl/src/lv_draw/lv_img_buf.c ****     }
 224              		.loc 1 74 22 view .LVU74
 225              	.LBE35:
 106:lvgl/src/lv_draw/lv_img_buf.c ****     }
 107:lvgl/src/lv_draw/lv_img_buf.c ****     return p_color;
 226              		.loc 1 107 5 is_stmt 1 view .LVU75
 108:lvgl/src/lv_draw/lv_img_buf.c **** }
 227              		.loc 1 108 1 is_stmt 0 view .LVU76
 228 00c6 BDF80400 		ldrh	r0, [sp, #4]
 229 00ca 02B0     		add	sp, sp, #8
 230              	.LCFI2:
 231              		.cfi_remember_state
 232              		.cfi_def_cfa_offset 24
 233              		@ sp needed
 234 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 235              	.LVL22:
 236              	.L13:
 237              	.LCFI3:
 238              		.cfi_restore_state
 239              	.LBB36:
  77:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 240              		.loc 1 77 9 is_stmt 1 view .LVU77
  78:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 241              		.loc 1 78 9 view .LVU78
  78:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 242              		.loc 1 78 17 is_stmt 0 view .LVU79
 243 00d0 01F00303 		and	r3, r1, #3
 244              	.LVL23:
  78:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 245              		.loc 1 78 17 view .LVU80
 246 00d4 5C00     		lsls	r4, r3, #1
 247              	.LVL24:
  79:lvgl/src/lv_draw/lv_img_buf.c **** 
 248              		.loc 1 79 9 is_stmt 1 view .LVU81
  84:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 249              		.loc 1 84 9 view .LVU82
  84:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 250              		.loc 1 84 37 is_stmt 0 view .LVU83
 251 00d6 0368     		ldr	r3, [r0]
 252 00d8 C3F38A23 		ubfx	r3, r3, #10, #11
  84:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 253              		.loc 1 84 40 view .LVU84
 254 00dc 0333     		adds	r3, r3, #3
ARM GAS  D:\Temp\ccBYw3dY.s 			page 12


  84:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 255              		.loc 1 84 45 view .LVU85
 256 00de 9B10     		asrs	r3, r3, #2
  84:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 257              		.loc 1 84 51 view .LVU86
 258 00e0 03FB02F3 		mul	r3, r3, r2
  84:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 259              		.loc 1 84 55 view .LVU87
 260 00e4 03EBA103 		add	r3, r3, r1, asr #2
 261              	.LVL25:
  85:lvgl/src/lv_draw/lv_img_buf.c ****     }
 262              		.loc 1 85 9 is_stmt 1 view .LVU88
  85:lvgl/src/lv_draw/lv_img_buf.c ****     }
 263              		.loc 1 85 31 is_stmt 0 view .LVU89
 264 00e8 E818     		adds	r0, r5, r3
 265              	.LVL26:
  85:lvgl/src/lv_draw/lv_img_buf.c ****     }
 266              		.loc 1 85 31 view .LVU90
 267 00ea 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 268              	.LVL27:
  85:lvgl/src/lv_draw/lv_img_buf.c ****     }
 269              		.loc 1 85 47 view .LVU91
 270 00ec C4F10603 		rsb	r3, r4, #6
 271              	.LVL28:
  85:lvgl/src/lv_draw/lv_img_buf.c ****     }
 272              		.loc 1 85 41 view .LVU92
 273 00f0 0321     		movs	r1, #3
 274              	.LVL29:
  85:lvgl/src/lv_draw/lv_img_buf.c ****     }
 275              		.loc 1 85 41 view .LVU93
 276 00f2 9940     		lsls	r1, r1, r3
  85:lvgl/src/lv_draw/lv_img_buf.c ****     }
 277              		.loc 1 85 36 view .LVU94
 278 00f4 0A40     		ands	r2, r2, r1
  85:lvgl/src/lv_draw/lv_img_buf.c ****     }
 279              		.loc 1 85 56 view .LVU95
 280 00f6 42FA03F3 		asr	r3, r2, r3
  85:lvgl/src/lv_draw/lv_img_buf.c ****     }
 281              		.loc 1 85 22 view .LVU96
 282 00fa ADF80430 		strh	r3, [sp, #4]	@ movhi
 283              	.LBE36:
 284 00fe E2E7     		b	.L6
 285              	.LVL30:
 286              	.L14:
 287              	.LBB37:
  88:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 288              		.loc 1 88 9 is_stmt 1 view .LVU97
  89:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 289              		.loc 1 89 9 view .LVU98
  89:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 290              		.loc 1 89 17 is_stmt 0 view .LVU99
 291 0100 01F00103 		and	r3, r1, #1
 292              	.LVL31:
  89:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 293              		.loc 1 89 17 view .LVU100
 294 0104 9C00     		lsls	r4, r3, #2
 295              	.LVL32:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 13


  90:lvgl/src/lv_draw/lv_img_buf.c **** 
 296              		.loc 1 90 9 is_stmt 1 view .LVU101
  95:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 297              		.loc 1 95 9 view .LVU102
  95:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 298              		.loc 1 95 37 is_stmt 0 view .LVU103
 299 0106 0368     		ldr	r3, [r0]
 300 0108 C3F38A23 		ubfx	r3, r3, #10, #11
  95:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 301              		.loc 1 95 40 view .LVU104
 302 010c 0133     		adds	r3, r3, #1
  95:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 303              		.loc 1 95 45 view .LVU105
 304 010e 5B10     		asrs	r3, r3, #1
  95:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 305              		.loc 1 95 51 view .LVU106
 306 0110 03FB02F3 		mul	r3, r3, r2
  95:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 307              		.loc 1 95 55 view .LVU107
 308 0114 03EB6103 		add	r3, r3, r1, asr #1
 309              	.LVL33:
  96:lvgl/src/lv_draw/lv_img_buf.c ****     }
 310              		.loc 1 96 9 is_stmt 1 view .LVU108
  96:lvgl/src/lv_draw/lv_img_buf.c ****     }
 311              		.loc 1 96 31 is_stmt 0 view .LVU109
 312 0118 E818     		adds	r0, r5, r3
 313              	.LVL34:
  96:lvgl/src/lv_draw/lv_img_buf.c ****     }
 314              		.loc 1 96 31 view .LVU110
 315 011a 90F84020 		ldrb	r2, [r0, #64]	@ zero_extendqisi2
 316              	.LVL35:
  96:lvgl/src/lv_draw/lv_img_buf.c ****     }
 317              		.loc 1 96 49 view .LVU111
 318 011e C4F10403 		rsb	r3, r4, #4
 319              	.LVL36:
  96:lvgl/src/lv_draw/lv_img_buf.c ****     }
 320              		.loc 1 96 43 view .LVU112
 321 0122 0F21     		movs	r1, #15
 322              	.LVL37:
  96:lvgl/src/lv_draw/lv_img_buf.c ****     }
 323              		.loc 1 96 43 view .LVU113
 324 0124 9940     		lsls	r1, r1, r3
  96:lvgl/src/lv_draw/lv_img_buf.c ****     }
 325              		.loc 1 96 36 view .LVU114
 326 0126 0A40     		ands	r2, r2, r1
  96:lvgl/src/lv_draw/lv_img_buf.c ****     }
 327              		.loc 1 96 58 view .LVU115
 328 0128 42FA03F3 		asr	r3, r2, r3
  96:lvgl/src/lv_draw/lv_img_buf.c ****     }
 329              		.loc 1 96 22 view .LVU116
 330 012c ADF80430 		strh	r3, [sp, #4]	@ movhi
 331              	.LBE37:
 332 0130 C9E7     		b	.L6
 333              	.LVL38:
 334              	.L15:
 335              	.LBB38:
  99:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px  = dsc->header.w * y + x;
ARM GAS  D:\Temp\ccBYw3dY.s 			page 14


 336              		.loc 1 99 9 is_stmt 1 view .LVU117
 100:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 337              		.loc 1 100 9 view .LVU118
 100:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 338              		.loc 1 100 35 is_stmt 0 view .LVU119
 339 0132 0068     		ldr	r0, [r0]
 340              	.LVL39:
 100:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 341              		.loc 1 100 35 view .LVU120
 342 0134 C0F38A20 		ubfx	r0, r0, #10, #11
 100:lvgl/src/lv_draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 343              		.loc 1 100 42 view .LVU121
 344 0138 00FB0210 		mla	r0, r0, r2, r1
 345              	.LVL40:
 101:lvgl/src/lv_draw/lv_img_buf.c ****     }
 346              		.loc 1 101 9 is_stmt 1 view .LVU122
 101:lvgl/src/lv_draw/lv_img_buf.c ****     }
 347              		.loc 1 101 30 is_stmt 0 view .LVU123
 348 013c 2844     		add	r0, r0, r5
 349              	.LVL41:
 101:lvgl/src/lv_draw/lv_img_buf.c ****     }
 350              		.loc 1 101 30 view .LVU124
 351 013e 90F80034 		ldrb	r3, [r0, #1024]	@ zero_extendqisi2
 352              	.LVL42:
 101:lvgl/src/lv_draw/lv_img_buf.c ****     }
 353              		.loc 1 101 22 view .LVU125
 354 0142 ADF80430 		strh	r3, [sp, #4]	@ movhi
 355              	.LVL43:
 101:lvgl/src/lv_draw/lv_img_buf.c ****     }
 356              		.loc 1 101 22 view .LVU126
 357              	.LBE38:
 358 0146 BEE7     		b	.L6
 359              		.cfi_endproc
 360              	.LFE167:
 362              		.section	.text.lv_img_buf_get_px_alpha,"ax",%progbits
 363              		.align	1
 364              		.global	lv_img_buf_get_px_alpha
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	lv_img_buf_get_px_alpha:
 371              	.LVL44:
 372              	.LFB168:
 109:lvgl/src/lv_draw/lv_img_buf.c **** 
 110:lvgl/src/lv_draw/lv_img_buf.c **** /**
 111:lvgl/src/lv_draw/lv_img_buf.c ****  * Get the alpha value of an image's pixel
 112:lvgl/src/lv_draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 113:lvgl/src/lv_draw/lv_img_buf.c ****  * @param x x coordinate of the point to set
 114:lvgl/src/lv_draw/lv_img_buf.c ****  * @param y x coordinate of the point to set
 115:lvgl/src/lv_draw/lv_img_buf.c ****  * @param safe true: check out of bounds
 116:lvgl/src/lv_draw/lv_img_buf.c ****  * @return alpha value of the point
 117:lvgl/src/lv_draw/lv_img_buf.c ****  */
 118:lvgl/src/lv_draw/lv_img_buf.c **** lv_opa_t lv_img_buf_get_px_alpha(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y)
 119:lvgl/src/lv_draw/lv_img_buf.c **** {
 373              		.loc 1 119 1 is_stmt 1 view -0
 374              		.cfi_startproc
ARM GAS  D:\Temp\ccBYw3dY.s 			page 15


 375              		@ args = 0, pretend = 0, frame = 16
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378              		.loc 1 119 1 is_stmt 0 view .LVU128
 379 0000 F0B4     		push	{r4, r5, r6, r7}
 380              	.LCFI4:
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 4, -16
 383              		.cfi_offset 5, -12
 384              		.cfi_offset 6, -8
 385              		.cfi_offset 7, -4
 386 0002 84B0     		sub	sp, sp, #16
 387              	.LCFI5:
 388              		.cfi_def_cfa_offset 32
 389 0004 0446     		mov	r4, r0
 390 0006 0D46     		mov	r5, r1
 391 0008 1646     		mov	r6, r2
 120:lvgl/src/lv_draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
 392              		.loc 1 120 5 is_stmt 1 view .LVU129
 393              		.loc 1 120 15 is_stmt 0 view .LVU130
 394 000a 8768     		ldr	r7, [r0, #8]
 395              	.LVL45:
 121:lvgl/src/lv_draw/lv_img_buf.c **** 
 122:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 396              		.loc 1 122 5 is_stmt 1 view .LVU131
 397              		.loc 1 122 23 is_stmt 0 view .LVU132
 398 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 399 000e 03F01F03 		and	r3, r3, #31
 400              		.loc 1 122 7 view .LVU133
 401 0012 052B     		cmp	r3, #5
 402 0014 0BD0     		beq	.L26
 123:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y * LV_IMG_PX_SIZE_ALPHA_BYTE + x * LV_IMG_PX_SIZE_ALPHA_BYTE
 124:lvgl/src/lv_draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 125:lvgl/src/lv_draw/lv_img_buf.c ****     }
 126:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT) {
 403              		.loc 1 126 10 is_stmt 1 view .LVU134
 404              		.loc 1 126 12 is_stmt 0 view .LVU135
 405 0016 0B2B     		cmp	r3, #11
 406 0018 13D0     		beq	.L27
 127:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 128:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
 129:lvgl/src/lv_draw/lv_img_buf.c **** 
 130:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
 131:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
 132:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 8 ,16, 24 ...*/
 133:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px    = ((dsc->header.w + 7) >> 3) * y + x;
 134:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 135:lvgl/src/lv_draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 136:lvgl/src/lv_draw/lv_img_buf.c ****     }
 137:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_2BIT) {
 407              		.loc 1 137 10 is_stmt 1 view .LVU136
 408              		.loc 1 137 12 is_stmt 0 view .LVU137
 409 001a 0C2B     		cmp	r3, #12
 410 001c 2AD0     		beq	.L28
 138:lvgl/src/lv_draw/lv_img_buf.c ****         const uint8_t opa_table[4] = {0, 85, 170, 255}; /*Opacity mapping with bpp = 2*/
 139:lvgl/src/lv_draw/lv_img_buf.c **** 
 140:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
ARM GAS  D:\Temp\ccBYw3dY.s 			page 16


 141:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 142:lvgl/src/lv_draw/lv_img_buf.c **** 
 143:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
 144:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 4 means rounding up to 8 because the lines are byte aligned
 145:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 4 ,8, 12 ...*/
 146:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px    = ((dsc->header.w + 3) >> 2) * y + x;
 147:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 148:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 149:lvgl/src/lv_draw/lv_img_buf.c ****     }
 150:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_4BIT) {
 411              		.loc 1 150 10 is_stmt 1 view .LVU138
 412              		.loc 1 150 12 is_stmt 0 view .LVU139
 413 001e 0D2B     		cmp	r3, #13
 414 0020 44D0     		beq	.L29
 151:lvgl/src/lv_draw/lv_img_buf.c ****         const uint8_t opa_table[16] = {0,  17, 34,  51, /*Opacity mapping with bpp = 4*/
 152:lvgl/src/lv_draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 153:lvgl/src/lv_draw/lv_img_buf.c ****                                       };
 154:lvgl/src/lv_draw/lv_img_buf.c **** 
 155:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 156:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 157:lvgl/src/lv_draw/lv_img_buf.c **** 
 158:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
 159:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 1 means rounding up to 8 because the lines are byte aligned
 160:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 2 ,4, 6 ...*/
 161:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px    = ((dsc->header.w + 1) >> 1) * y + x;
 162:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 163:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 164:lvgl/src/lv_draw/lv_img_buf.c ****     }
 165:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 415              		.loc 1 165 10 is_stmt 1 view .LVU140
 416              		.loc 1 165 12 is_stmt 0 view .LVU141
 417 0022 0E2B     		cmp	r3, #14
 418 0024 60D0     		beq	.L30
 166:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y + x;
 167:lvgl/src/lv_draw/lv_img_buf.c ****         return buf_u8[px];
 168:lvgl/src/lv_draw/lv_img_buf.c ****     }
 169:lvgl/src/lv_draw/lv_img_buf.c **** 
 170:lvgl/src/lv_draw/lv_img_buf.c ****     return LV_OPA_COVER;
 419              		.loc 1 170 12 view .LVU142
 420 0026 FF20     		movs	r0, #255
 421              	.LVL46:
 422              	.L18:
 171:lvgl/src/lv_draw/lv_img_buf.c **** }
 423              		.loc 1 171 1 discriminator 1 view .LVU143
 424 0028 04B0     		add	sp, sp, #16
 425              	.LCFI6:
 426              		.cfi_remember_state
 427              		.cfi_def_cfa_offset 16
 428              		@ sp needed
 429 002a F0BC     		pop	{r4, r5, r6, r7}
 430              	.LCFI7:
 431              		.cfi_restore 7
 432              		.cfi_restore 6
 433              		.cfi_restore 5
 434              		.cfi_restore 4
 435              		.cfi_def_cfa_offset 0
 436              	.LVL47:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 17


 437              		.loc 1 171 1 discriminator 1 view .LVU144
 438 002c 7047     		bx	lr
 439              	.LVL48:
 440              	.L26:
 441              	.LCFI8:
 442              		.cfi_restore_state
 443              	.LBB39:
 123:lvgl/src/lv_draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 444              		.loc 1 123 9 is_stmt 1 view .LVU145
 123:lvgl/src/lv_draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 445              		.loc 1 123 34 is_stmt 0 view .LVU146
 446 002e 0268     		ldr	r2, [r0]
 447              	.LVL49:
 123:lvgl/src/lv_draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 448              		.loc 1 123 34 view .LVU147
 449 0030 C2F38A22 		ubfx	r2, r2, #10, #11
 123:lvgl/src/lv_draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 450              		.loc 1 123 69 view .LVU148
 451 0034 02FB0612 		mla	r2, r2, r6, r1
 452 0038 02EB4202 		add	r2, r2, r2, lsl #1
 453              	.LVL50:
 124:lvgl/src/lv_draw/lv_img_buf.c ****     }
 454              		.loc 1 124 9 is_stmt 1 view .LVU149
 124:lvgl/src/lv_draw/lv_img_buf.c ****     }
 455              		.loc 1 124 22 is_stmt 0 view .LVU150
 456 003c 3A44     		add	r2, r2, r7
 457              	.LVL51:
 124:lvgl/src/lv_draw/lv_img_buf.c ****     }
 458              		.loc 1 124 22 view .LVU151
 459 003e 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 460              	.LVL52:
 124:lvgl/src/lv_draw/lv_img_buf.c ****     }
 461              		.loc 1 124 22 view .LVU152
 462 0040 F2E7     		b	.L18
 463              	.LVL53:
 464              	.L27:
 124:lvgl/src/lv_draw/lv_img_buf.c ****     }
 465              		.loc 1 124 22 view .LVU153
 466              	.LBE39:
 467              	.LBB40:
 127:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
 468              		.loc 1 127 9 is_stmt 1 view .LVU154
 127:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
 469              		.loc 1 127 17 is_stmt 0 view .LVU155
 470 0042 01F00701 		and	r1, r1, #7
 471              	.LVL54:
 128:lvgl/src/lv_draw/lv_img_buf.c **** 
 472              		.loc 1 128 9 is_stmt 1 view .LVU156
 133:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 473              		.loc 1 133 9 view .LVU157
 133:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 474              		.loc 1 133 39 is_stmt 0 view .LVU158
 475 0046 0268     		ldr	r2, [r0]
 476              	.LVL55:
 133:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 477              		.loc 1 133 39 view .LVU159
 478 0048 C2F38A22 		ubfx	r2, r2, #10, #11
ARM GAS  D:\Temp\ccBYw3dY.s 			page 18


 133:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 479              		.loc 1 133 42 view .LVU160
 480 004c 0732     		adds	r2, r2, #7
 133:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 481              		.loc 1 133 47 view .LVU161
 482 004e D210     		asrs	r2, r2, #3
 133:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 483              		.loc 1 133 53 view .LVU162
 484 0050 02FB06F2 		mul	r2, r2, r6
 133:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 485              		.loc 1 133 57 view .LVU163
 486 0054 02EBE502 		add	r2, r2, r5, asr #3
 487              	.LVL56:
 134:lvgl/src/lv_draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 488              		.loc 1 134 9 is_stmt 1 view .LVU164
 134:lvgl/src/lv_draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 489              		.loc 1 134 33 is_stmt 0 view .LVU165
 490 0058 BB5C     		ldrb	r3, [r7, r2]	@ zero_extendqisi2
 134:lvgl/src/lv_draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 491              		.loc 1 134 49 view .LVU166
 492 005a C1F10702 		rsb	r2, r1, #7
 493              	.LVL57:
 134:lvgl/src/lv_draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 494              		.loc 1 134 43 view .LVU167
 495 005e 0121     		movs	r1, #1
 496              	.LVL58:
 134:lvgl/src/lv_draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 497              		.loc 1 134 43 view .LVU168
 498 0060 9140     		lsls	r1, r1, r2
 134:lvgl/src/lv_draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 499              		.loc 1 134 38 view .LVU169
 500 0062 0B40     		ands	r3, r3, r1
 134:lvgl/src/lv_draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 501              		.loc 1 134 58 view .LVU170
 502 0064 1341     		asrs	r3, r3, r2
 503              	.LVL59:
 135:lvgl/src/lv_draw/lv_img_buf.c ****     }
 504              		.loc 1 135 9 is_stmt 1 view .LVU171
 135:lvgl/src/lv_draw/lv_img_buf.c ****     }
 505              		.loc 1 135 39 is_stmt 0 view .LVU172
 506 0066 13F0FF0F 		tst	r3, #255
 507 006a 01D0     		beq	.L23
 508 006c 0020     		movs	r0, #0
 509              	.LVL60:
 135:lvgl/src/lv_draw/lv_img_buf.c ****     }
 510              		.loc 1 135 39 view .LVU173
 511 006e DBE7     		b	.L18
 512              	.LVL61:
 513              	.L23:
 135:lvgl/src/lv_draw/lv_img_buf.c ****     }
 514              		.loc 1 135 39 view .LVU174
 515 0070 FF20     		movs	r0, #255
 516              	.LVL62:
 135:lvgl/src/lv_draw/lv_img_buf.c ****     }
 517              		.loc 1 135 39 view .LVU175
 518 0072 D9E7     		b	.L18
 519              	.LVL63:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 19


 520              	.L28:
 135:lvgl/src/lv_draw/lv_img_buf.c ****     }
 521              		.loc 1 135 39 view .LVU176
 522              	.LBE40:
 523              	.LBB41:
 138:lvgl/src/lv_draw/lv_img_buf.c **** 
 524              		.loc 1 138 9 is_stmt 1 view .LVU177
 138:lvgl/src/lv_draw/lv_img_buf.c **** 
 525              		.loc 1 138 23 is_stmt 0 view .LVU178
 526 0074 204B     		ldr	r3, .L31
 527 0076 1B68     		ldr	r3, [r3]
 528 0078 0093     		str	r3, [sp]
 140:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 529              		.loc 1 140 9 is_stmt 1 view .LVU179
 140:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 530              		.loc 1 140 17 is_stmt 0 view .LVU180
 531 007a 01F00302 		and	r2, r1, #3
 532              	.LVL64:
 140:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 533              		.loc 1 140 17 view .LVU181
 534 007e 5100     		lsls	r1, r2, #1
 535              	.LVL65:
 141:lvgl/src/lv_draw/lv_img_buf.c **** 
 536              		.loc 1 141 9 is_stmt 1 view .LVU182
 146:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 537              		.loc 1 146 9 view .LVU183
 146:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 538              		.loc 1 146 39 is_stmt 0 view .LVU184
 539 0080 0268     		ldr	r2, [r0]
 540 0082 C2F38A22 		ubfx	r2, r2, #10, #11
 146:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 541              		.loc 1 146 42 view .LVU185
 542 0086 0332     		adds	r2, r2, #3
 146:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 543              		.loc 1 146 47 view .LVU186
 544 0088 9210     		asrs	r2, r2, #2
 146:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 545              		.loc 1 146 53 view .LVU187
 546 008a 02FB06F2 		mul	r2, r2, r6
 146:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 547              		.loc 1 146 57 view .LVU188
 548 008e 02EBA502 		add	r2, r2, r5, asr #2
 549              	.LVL66:
 147:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 550              		.loc 1 147 9 is_stmt 1 view .LVU189
 147:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 551              		.loc 1 147 33 is_stmt 0 view .LVU190
 552 0092 BB5C     		ldrb	r3, [r7, r2]	@ zero_extendqisi2
 147:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 553              		.loc 1 147 49 view .LVU191
 554 0094 C1F10602 		rsb	r2, r1, #6
 555              	.LVL67:
 147:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 556              		.loc 1 147 43 view .LVU192
 557 0098 0321     		movs	r1, #3
 558              	.LVL68:
 147:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
ARM GAS  D:\Temp\ccBYw3dY.s 			page 20


 559              		.loc 1 147 43 view .LVU193
 560 009a 9140     		lsls	r1, r1, r2
 147:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 561              		.loc 1 147 38 view .LVU194
 562 009c 0B40     		ands	r3, r3, r1
 147:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 563              		.loc 1 147 58 view .LVU195
 564 009e 1341     		asrs	r3, r3, r2
 565              	.LVL69:
 148:lvgl/src/lv_draw/lv_img_buf.c ****     }
 566              		.loc 1 148 9 is_stmt 1 view .LVU196
 148:lvgl/src/lv_draw/lv_img_buf.c ****     }
 567              		.loc 1 148 25 is_stmt 0 view .LVU197
 568 00a0 04AA     		add	r2, sp, #16
 569 00a2 52FA83F3 		uxtab	r3, r2, r3
 570              	.LVL70:
 148:lvgl/src/lv_draw/lv_img_buf.c ****     }
 571              		.loc 1 148 25 view .LVU198
 572 00a6 13F8100C 		ldrb	r0, [r3, #-16]	@ zero_extendqisi2
 573              	.LVL71:
 148:lvgl/src/lv_draw/lv_img_buf.c ****     }
 574              		.loc 1 148 25 view .LVU199
 575 00aa BDE7     		b	.L18
 576              	.LVL72:
 577              	.L29:
 148:lvgl/src/lv_draw/lv_img_buf.c ****     }
 578              		.loc 1 148 25 view .LVU200
 579              	.LBE41:
 580              	.LBB42:
 151:lvgl/src/lv_draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 581              		.loc 1 151 9 is_stmt 1 view .LVU201
 151:lvgl/src/lv_draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 582              		.loc 1 151 23 is_stmt 0 view .LVU202
 583 00ac 134B     		ldr	r3, .L31+4
 584 00ae 0FCB     		ldm	r3, {r0, r1, r2, r3}
 585              	.LVL73:
 151:lvgl/src/lv_draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 586              		.loc 1 151 23 view .LVU203
 587 00b0 0DF1100C 		add	ip, sp, #16
 588 00b4 0CE90F00 		stmdb	ip, {r0, r1, r2, r3}
 155:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 589              		.loc 1 155 9 is_stmt 1 view .LVU204
 155:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 590              		.loc 1 155 17 is_stmt 0 view .LVU205
 591 00b8 05F00102 		and	r2, r5, #1
 592 00bc 9100     		lsls	r1, r2, #2
 593              	.LVL74:
 156:lvgl/src/lv_draw/lv_img_buf.c **** 
 594              		.loc 1 156 9 is_stmt 1 view .LVU206
 161:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 595              		.loc 1 161 9 view .LVU207
 161:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 596              		.loc 1 161 39 is_stmt 0 view .LVU208
 597 00be 2268     		ldr	r2, [r4]
 598 00c0 C2F38A22 		ubfx	r2, r2, #10, #11
 161:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 599              		.loc 1 161 42 view .LVU209
ARM GAS  D:\Temp\ccBYw3dY.s 			page 21


 600 00c4 0132     		adds	r2, r2, #1
 161:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 601              		.loc 1 161 47 view .LVU210
 602 00c6 5210     		asrs	r2, r2, #1
 161:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 603              		.loc 1 161 53 view .LVU211
 604 00c8 02FB06F2 		mul	r2, r2, r6
 161:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 605              		.loc 1 161 57 view .LVU212
 606 00cc 02EB6502 		add	r2, r2, r5, asr #1
 607              	.LVL75:
 162:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 608              		.loc 1 162 9 is_stmt 1 view .LVU213
 162:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 609              		.loc 1 162 33 is_stmt 0 view .LVU214
 610 00d0 BB5C     		ldrb	r3, [r7, r2]	@ zero_extendqisi2
 162:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 611              		.loc 1 162 51 view .LVU215
 612 00d2 C1F10402 		rsb	r2, r1, #4
 613              	.LVL76:
 162:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 614              		.loc 1 162 45 view .LVU216
 615 00d6 0F21     		movs	r1, #15
 616              	.LVL77:
 162:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 617              		.loc 1 162 45 view .LVU217
 618 00d8 9140     		lsls	r1, r1, r2
 162:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 619              		.loc 1 162 38 view .LVU218
 620 00da 0B40     		ands	r3, r3, r1
 162:lvgl/src/lv_draw/lv_img_buf.c ****         return opa_table[px_opa];
 621              		.loc 1 162 60 view .LVU219
 622 00dc 1341     		asrs	r3, r3, r2
 623              	.LVL78:
 163:lvgl/src/lv_draw/lv_img_buf.c ****     }
 624              		.loc 1 163 9 is_stmt 1 view .LVU220
 163:lvgl/src/lv_draw/lv_img_buf.c ****     }
 625              		.loc 1 163 25 is_stmt 0 view .LVU221
 626 00de 5CFA83F3 		uxtab	r3, ip, r3
 627              	.LVL79:
 163:lvgl/src/lv_draw/lv_img_buf.c ****     }
 628              		.loc 1 163 25 view .LVU222
 629 00e2 13F8100C 		ldrb	r0, [r3, #-16]	@ zero_extendqisi2
 630 00e6 9FE7     		b	.L18
 631              	.LVL80:
 632              	.L30:
 163:lvgl/src/lv_draw/lv_img_buf.c ****     }
 633              		.loc 1 163 25 view .LVU223
 634              	.LBE42:
 635              	.LBB43:
 166:lvgl/src/lv_draw/lv_img_buf.c ****         return buf_u8[px];
 636              		.loc 1 166 9 is_stmt 1 view .LVU224
 166:lvgl/src/lv_draw/lv_img_buf.c ****         return buf_u8[px];
 637              		.loc 1 166 34 is_stmt 0 view .LVU225
 638 00e8 0268     		ldr	r2, [r0]
 639              	.LVL81:
 166:lvgl/src/lv_draw/lv_img_buf.c ****         return buf_u8[px];
ARM GAS  D:\Temp\ccBYw3dY.s 			page 22


 640              		.loc 1 166 34 view .LVU226
 641 00ea C2F38A22 		ubfx	r2, r2, #10, #11
 166:lvgl/src/lv_draw/lv_img_buf.c ****         return buf_u8[px];
 642              		.loc 1 166 41 view .LVU227
 643 00ee 02FB0612 		mla	r2, r2, r6, r1
 644              	.LVL82:
 167:lvgl/src/lv_draw/lv_img_buf.c ****     }
 645              		.loc 1 167 9 is_stmt 1 view .LVU228
 167:lvgl/src/lv_draw/lv_img_buf.c ****     }
 646              		.loc 1 167 22 is_stmt 0 view .LVU229
 647 00f2 B85C     		ldrb	r0, [r7, r2]	@ zero_extendqisi2
 648              	.LVL83:
 167:lvgl/src/lv_draw/lv_img_buf.c ****     }
 649              		.loc 1 167 22 view .LVU230
 650 00f4 98E7     		b	.L18
 651              	.L32:
 652 00f6 00BF     		.align	2
 653              	.L31:
 654 00f8 00000000 		.word	.LANCHOR0
 655 00fc 04000000 		.word	.LANCHOR0+4
 656              	.LBE43:
 657              		.cfi_endproc
 658              	.LFE168:
 660              		.section	.text.lv_img_buf_set_px_alpha,"ax",%progbits
 661              		.align	1
 662              		.global	lv_img_buf_set_px_alpha
 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 666              		.fpu fpv4-sp-d16
 668              	lv_img_buf_set_px_alpha:
 669              	.LVL84:
 670              	.LFB169:
 172:lvgl/src/lv_draw/lv_img_buf.c **** 
 173:lvgl/src/lv_draw/lv_img_buf.c **** /**
 174:lvgl/src/lv_draw/lv_img_buf.c ****  * Set the alpha value of a pixel of an image. The color won't be affected
 175:lvgl/src/lv_draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 176:lvgl/src/lv_draw/lv_img_buf.c ****  * @param x x coordinate of the point to set
 177:lvgl/src/lv_draw/lv_img_buf.c ****  * @param y x coordinate of the point to set
 178:lvgl/src/lv_draw/lv_img_buf.c ****  * @param opa the desired opacity
 179:lvgl/src/lv_draw/lv_img_buf.c ****  * @param safe true: check out of bounds
 180:lvgl/src/lv_draw/lv_img_buf.c ****  */
 181:lvgl/src/lv_draw/lv_img_buf.c **** void lv_img_buf_set_px_alpha(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_opa_t opa)
 182:lvgl/src/lv_draw/lv_img_buf.c **** {
 671              		.loc 1 182 1 is_stmt 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675              		.loc 1 182 1 is_stmt 0 view .LVU232
 676 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 677              	.LCFI9:
 678              		.cfi_def_cfa_offset 24
 679              		.cfi_offset 4, -24
 680              		.cfi_offset 5, -20
 681              		.cfi_offset 6, -16
 682              		.cfi_offset 7, -12
 683              		.cfi_offset 8, -8
ARM GAS  D:\Temp\ccBYw3dY.s 			page 23


 684              		.cfi_offset 14, -4
 183:lvgl/src/lv_draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
 685              		.loc 1 183 5 is_stmt 1 view .LVU233
 686              		.loc 1 183 15 is_stmt 0 view .LVU234
 687 0004 8568     		ldr	r5, [r0, #8]
 688              	.LVL85:
 184:lvgl/src/lv_draw/lv_img_buf.c **** 
 185:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 689              		.loc 1 185 5 is_stmt 1 view .LVU235
 690              		.loc 1 185 23 is_stmt 0 view .LVU236
 691 0006 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 692 0008 04F01F04 		and	r4, r4, #31
 693              		.loc 1 185 7 view .LVU237
 694 000c 052C     		cmp	r4, #5
 695 000e 0ED0     		beq	.L40
 186:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_size          = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
 187:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 188:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 189:lvgl/src/lv_draw/lv_img_buf.c ****     }
 190:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT) {
 696              		.loc 1 190 10 is_stmt 1 view .LVU238
 697              		.loc 1 190 12 is_stmt 0 view .LVU239
 698 0010 0B2C     		cmp	r4, #11
 699 0012 25D0     		beq	.L41
 191:lvgl/src/lv_draw/lv_img_buf.c ****         opa         = opa >> 7; /*opa -> [0,1]*/
 192:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 193:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
 194:lvgl/src/lv_draw/lv_img_buf.c **** 
 195:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
 196:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
 197:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 8 ,16, 24 ...*/
 198:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 7) >> 3) * y + x;
 199:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 200:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 201:lvgl/src/lv_draw/lv_img_buf.c ****     }
 202:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_2BIT) {
 700              		.loc 1 202 10 is_stmt 1 view .LVU240
 701              		.loc 1 202 12 is_stmt 0 view .LVU241
 702 0014 0C2C     		cmp	r4, #12
 703 0016 3CD0     		beq	.L42
 203:lvgl/src/lv_draw/lv_img_buf.c ****         opa         = opa >> 6; /*opa -> [0,3]*/
 204:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 205:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 206:lvgl/src/lv_draw/lv_img_buf.c **** 
 207:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
 208:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 4 means rounding up to 8 because the lines are byte aligned
 209:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 4 ,8, 12 ...*/
 210:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 3) >> 2) * y + x;
 211:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 212:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 213:lvgl/src/lv_draw/lv_img_buf.c ****     }
 214:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_4BIT) {
 704              		.loc 1 214 10 is_stmt 1 view .LVU242
 705              		.loc 1 214 12 is_stmt 0 view .LVU243
 706 0018 0D2C     		cmp	r4, #13
 707 001a 53D0     		beq	.L43
 215:lvgl/src/lv_draw/lv_img_buf.c ****         opa         = opa >> 4; /*opa -> [0,15]*/
ARM GAS  D:\Temp\ccBYw3dY.s 			page 24


 216:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 217:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 218:lvgl/src/lv_draw/lv_img_buf.c **** 
 219:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
 220:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 1 means rounding up to 8 because the lines are byte aligned
 221:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 2 ,4, 6 ...*/
 222:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 1) >> 1) * y + x;
 223:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 224:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 225:lvgl/src/lv_draw/lv_img_buf.c ****     }
 226:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 708              		.loc 1 226 10 is_stmt 1 view .LVU244
 709              		.loc 1 226 12 is_stmt 0 view .LVU245
 710 001c 0E2C     		cmp	r4, #14
 711 001e 36D1     		bne	.L33
 712              	.LBB44:
 227:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y + x;
 713              		.loc 1 227 9 is_stmt 1 view .LVU246
 714              		.loc 1 227 34 is_stmt 0 view .LVU247
 715 0020 0068     		ldr	r0, [r0]
 716              	.LVL86:
 717              		.loc 1 227 34 view .LVU248
 718 0022 C0F38A20 		ubfx	r0, r0, #10, #11
 719              		.loc 1 227 41 view .LVU249
 720 0026 00FB0211 		mla	r1, r0, r2, r1
 721              	.LVL87:
 228:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = opa;
 722              		.loc 1 228 9 is_stmt 1 view .LVU250
 723              		.loc 1 228 21 is_stmt 0 view .LVU251
 724 002a 6B54     		strb	r3, [r5, r1]
 725              	.LBE44:
 229:lvgl/src/lv_draw/lv_img_buf.c ****     }
 230:lvgl/src/lv_draw/lv_img_buf.c **** }
 726              		.loc 1 230 1 view .LVU252
 727 002c 2FE0     		b	.L33
 728              	.LVL88:
 729              	.L40:
 730              		.loc 1 230 1 view .LVU253
 731 002e 1C46     		mov	r4, r3
 732 0030 1746     		mov	r7, r2
 733 0032 0E46     		mov	r6, r1
 734 0034 8046     		mov	r8, r0
 735              	.LBB45:
 186:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 736              		.loc 1 186 9 is_stmt 1 view .LVU254
 186:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 737              		.loc 1 186 69 is_stmt 0 view .LVU255
 738 0036 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 739              	.LVL89:
 186:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 740              		.loc 1 186 36 view .LVU256
 741 0038 00F01F00 		and	r0, r0, #31
 742 003c FFF7FEFF 		bl	lv_img_cf_get_px_size
 743              	.LVL90:
 186:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 744              		.loc 1 186 17 view .LVU257
 745 0040 C0F3C700 		ubfx	r0, r0, #3, #8
ARM GAS  D:\Temp\ccBYw3dY.s 			page 25


 746              	.LVL91:
 187:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 747              		.loc 1 187 9 is_stmt 1 view .LVU258
 187:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 748              		.loc 1 187 47 is_stmt 0 view .LVU259
 749 0044 D8F80020 		ldr	r2, [r8]
 750 0048 C2F38A22 		ubfx	r2, r2, #10, #11
 187:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 751              		.loc 1 187 50 view .LVU260
 752 004c 02FB07F2 		mul	r2, r2, r7
 187:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 753              		.loc 1 187 68 view .LVU261
 754 0050 00FB06F1 		mul	r1, r0, r6
 187:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 755              		.loc 1 187 64 view .LVU262
 756 0054 00FB0211 		mla	r1, r0, r2, r1
 757              	.LVL92:
 188:lvgl/src/lv_draw/lv_img_buf.c ****     }
 758              		.loc 1 188 9 is_stmt 1 view .LVU263
 188:lvgl/src/lv_draw/lv_img_buf.c ****     }
 759              		.loc 1 188 19 is_stmt 0 view .LVU264
 760 0058 0844     		add	r0, r0, r1
 761              	.LVL93:
 188:lvgl/src/lv_draw/lv_img_buf.c ****     }
 762              		.loc 1 188 15 view .LVU265
 763 005a 0138     		subs	r0, r0, #1
 188:lvgl/src/lv_draw/lv_img_buf.c ****     }
 764              		.loc 1 188 34 view .LVU266
 765 005c 2C54     		strb	r4, [r5, r0]
 766              	.LBE45:
 767 005e 16E0     		b	.L33
 768              	.LVL94:
 769              	.L41:
 770              	.LBB46:
 191:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 771              		.loc 1 191 9 is_stmt 1 view .LVU267
 191:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 772              		.loc 1 191 21 is_stmt 0 view .LVU268
 773 0060 DB09     		lsrs	r3, r3, #7
 774              	.LVL95:
 192:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
 775              		.loc 1 192 9 is_stmt 1 view .LVU269
 192:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
 776              		.loc 1 192 17 is_stmt 0 view .LVU270
 777 0062 01F00704 		and	r4, r1, #7
 778              	.LVL96:
 193:lvgl/src/lv_draw/lv_img_buf.c **** 
 779              		.loc 1 193 9 is_stmt 1 view .LVU271
 198:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 780              		.loc 1 198 9 view .LVU272
 198:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 781              		.loc 1 198 36 is_stmt 0 view .LVU273
 782 0066 0068     		ldr	r0, [r0]
 783              	.LVL97:
 198:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 784              		.loc 1 198 36 view .LVU274
 785 0068 C0F38A20 		ubfx	r0, r0, #10, #11
ARM GAS  D:\Temp\ccBYw3dY.s 			page 26


 198:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 786              		.loc 1 198 39 view .LVU275
 787 006c 0730     		adds	r0, r0, #7
 198:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 788              		.loc 1 198 44 view .LVU276
 789 006e C010     		asrs	r0, r0, #3
 198:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 790              		.loc 1 198 50 view .LVU277
 791 0070 00FB02F2 		mul	r2, r0, r2
 792              	.LVL98:
 198:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 793              		.loc 1 198 54 view .LVU278
 794 0074 02EBE101 		add	r1, r2, r1, asr #3
 795              	.LVL99:
 199:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 796              		.loc 1 199 9 is_stmt 1 view .LVU279
 199:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 797              		.loc 1 199 29 is_stmt 0 view .LVU280
 798 0078 6A56     		ldrsb	r2, [r5, r1]
 199:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 799              		.loc 1 199 46 view .LVU281
 800 007a C4F10700 		rsb	r0, r4, #7
 199:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 801              		.loc 1 199 40 view .LVU282
 802 007e 0124     		movs	r4, #1
 803              	.LVL100:
 199:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 804              		.loc 1 199 40 view .LVU283
 805 0080 8440     		lsls	r4, r4, r0
 199:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 806              		.loc 1 199 34 view .LVU284
 807 0082 22EA0402 		bic	r2, r2, r4
 808 0086 52B2     		sxtb	r2, r2
 200:lvgl/src/lv_draw/lv_img_buf.c ****     }
 809              		.loc 1 200 9 is_stmt 1 view .LVU285
 200:lvgl/src/lv_draw/lv_img_buf.c ****     }
 810              		.loc 1 200 49 is_stmt 0 view .LVU286
 811 0088 8340     		lsls	r3, r3, r0
 812              	.LVL101:
 200:lvgl/src/lv_draw/lv_img_buf.c ****     }
 813              		.loc 1 200 34 view .LVU287
 814 008a 1343     		orrs	r3, r3, r2
 200:lvgl/src/lv_draw/lv_img_buf.c ****     }
 815              		.loc 1 200 21 view .LVU288
 816 008c 6B54     		strb	r3, [r5, r1]
 817              	.LVL102:
 818              	.L33:
 200:lvgl/src/lv_draw/lv_img_buf.c ****     }
 819              		.loc 1 200 21 view .LVU289
 820              	.LBE46:
 821              		.loc 1 230 1 view .LVU290
 822 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 823              	.LVL103:
 824              	.L42:
 825              	.LBB47:
 203:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 826              		.loc 1 203 9 is_stmt 1 view .LVU291
ARM GAS  D:\Temp\ccBYw3dY.s 			page 27


 203:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 827              		.loc 1 203 21 is_stmt 0 view .LVU292
 828 0092 9B09     		lsrs	r3, r3, #6
 829              	.LVL104:
 204:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 830              		.loc 1 204 9 is_stmt 1 view .LVU293
 204:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 831              		.loc 1 204 17 is_stmt 0 view .LVU294
 832 0094 01F00304 		and	r4, r1, #3
 833 0098 6400     		lsls	r4, r4, #1
 834              	.LVL105:
 205:lvgl/src/lv_draw/lv_img_buf.c **** 
 835              		.loc 1 205 9 is_stmt 1 view .LVU295
 210:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 836              		.loc 1 210 9 view .LVU296
 210:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 837              		.loc 1 210 36 is_stmt 0 view .LVU297
 838 009a 0068     		ldr	r0, [r0]
 839              	.LVL106:
 210:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 840              		.loc 1 210 36 view .LVU298
 841 009c C0F38A20 		ubfx	r0, r0, #10, #11
 210:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 842              		.loc 1 210 39 view .LVU299
 843 00a0 0330     		adds	r0, r0, #3
 210:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 844              		.loc 1 210 44 view .LVU300
 845 00a2 8010     		asrs	r0, r0, #2
 210:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 846              		.loc 1 210 50 view .LVU301
 847 00a4 00FB02F2 		mul	r2, r0, r2
 848              	.LVL107:
 210:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 849              		.loc 1 210 54 view .LVU302
 850 00a8 02EBA101 		add	r1, r2, r1, asr #2
 851              	.LVL108:
 211:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 852              		.loc 1 211 9 is_stmt 1 view .LVU303
 211:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 853              		.loc 1 211 29 is_stmt 0 view .LVU304
 854 00ac 6A56     		ldrsb	r2, [r5, r1]
 211:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 855              		.loc 1 211 46 view .LVU305
 856 00ae C4F10600 		rsb	r0, r4, #6
 211:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 857              		.loc 1 211 40 view .LVU306
 858 00b2 0324     		movs	r4, #3
 859              	.LVL109:
 211:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 860              		.loc 1 211 40 view .LVU307
 861 00b4 8440     		lsls	r4, r4, r0
 211:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 862              		.loc 1 211 34 view .LVU308
 863 00b6 22EA0402 		bic	r2, r2, r4
 864 00ba 52B2     		sxtb	r2, r2
 212:lvgl/src/lv_draw/lv_img_buf.c ****     }
 865              		.loc 1 212 9 is_stmt 1 view .LVU309
ARM GAS  D:\Temp\ccBYw3dY.s 			page 28


 212:lvgl/src/lv_draw/lv_img_buf.c ****     }
 866              		.loc 1 212 49 is_stmt 0 view .LVU310
 867 00bc 8340     		lsls	r3, r3, r0
 868              	.LVL110:
 212:lvgl/src/lv_draw/lv_img_buf.c ****     }
 869              		.loc 1 212 34 view .LVU311
 870 00be 1343     		orrs	r3, r3, r2
 212:lvgl/src/lv_draw/lv_img_buf.c ****     }
 871              		.loc 1 212 21 view .LVU312
 872 00c0 6B54     		strb	r3, [r5, r1]
 873              	.LBE47:
 874 00c2 E4E7     		b	.L33
 875              	.LVL111:
 876              	.L43:
 877              	.LBB48:
 215:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 878              		.loc 1 215 9 is_stmt 1 view .LVU313
 215:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 879              		.loc 1 215 21 is_stmt 0 view .LVU314
 880 00c4 1B09     		lsrs	r3, r3, #4
 881              	.LVL112:
 216:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 882              		.loc 1 216 9 is_stmt 1 view .LVU315
 216:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 883              		.loc 1 216 17 is_stmt 0 view .LVU316
 884 00c6 01F00104 		and	r4, r1, #1
 885 00ca A400     		lsls	r4, r4, #2
 886              	.LVL113:
 217:lvgl/src/lv_draw/lv_img_buf.c **** 
 887              		.loc 1 217 9 is_stmt 1 view .LVU317
 222:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 888              		.loc 1 222 9 view .LVU318
 222:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 889              		.loc 1 222 36 is_stmt 0 view .LVU319
 890 00cc 0068     		ldr	r0, [r0]
 891              	.LVL114:
 222:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 892              		.loc 1 222 36 view .LVU320
 893 00ce C0F38A20 		ubfx	r0, r0, #10, #11
 222:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 894              		.loc 1 222 39 view .LVU321
 895 00d2 0130     		adds	r0, r0, #1
 222:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 896              		.loc 1 222 44 view .LVU322
 897 00d4 4010     		asrs	r0, r0, #1
 222:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 898              		.loc 1 222 50 view .LVU323
 899 00d6 00FB02F2 		mul	r2, r0, r2
 900              	.LVL115:
 222:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 901              		.loc 1 222 54 view .LVU324
 902 00da 02EB6101 		add	r1, r2, r1, asr #1
 903              	.LVL116:
 223:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 904              		.loc 1 223 9 is_stmt 1 view .LVU325
 223:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 905              		.loc 1 223 29 is_stmt 0 view .LVU326
ARM GAS  D:\Temp\ccBYw3dY.s 			page 29


 906 00de 6A56     		ldrsb	r2, [r5, r1]
 223:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 907              		.loc 1 223 48 view .LVU327
 908 00e0 C4F10400 		rsb	r0, r4, #4
 223:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 909              		.loc 1 223 42 view .LVU328
 910 00e4 0F24     		movs	r4, #15
 911              	.LVL117:
 223:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 912              		.loc 1 223 42 view .LVU329
 913 00e6 8440     		lsls	r4, r4, r0
 223:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 914              		.loc 1 223 34 view .LVU330
 915 00e8 22EA0402 		bic	r2, r2, r4
 916 00ec 52B2     		sxtb	r2, r2
 224:lvgl/src/lv_draw/lv_img_buf.c ****     }
 917              		.loc 1 224 9 is_stmt 1 view .LVU331
 224:lvgl/src/lv_draw/lv_img_buf.c ****     }
 918              		.loc 1 224 49 is_stmt 0 view .LVU332
 919 00ee 8340     		lsls	r3, r3, r0
 920              	.LVL118:
 224:lvgl/src/lv_draw/lv_img_buf.c ****     }
 921              		.loc 1 224 34 view .LVU333
 922 00f0 1343     		orrs	r3, r3, r2
 224:lvgl/src/lv_draw/lv_img_buf.c ****     }
 923              		.loc 1 224 21 view .LVU334
 924 00f2 6B54     		strb	r3, [r5, r1]
 925              	.LBE48:
 926 00f4 CBE7     		b	.L33
 927              		.cfi_endproc
 928              	.LFE169:
 930              		.section	.text.lv_img_buf_set_px_color,"ax",%progbits
 931              		.align	1
 932              		.global	lv_img_buf_set_px_color
 933              		.syntax unified
 934              		.thumb
 935              		.thumb_func
 936              		.fpu fpv4-sp-d16
 938              	lv_img_buf_set_px_color:
 939              	.LVL119:
 940              	.LFB170:
 231:lvgl/src/lv_draw/lv_img_buf.c **** 
 232:lvgl/src/lv_draw/lv_img_buf.c **** /**
 233:lvgl/src/lv_draw/lv_img_buf.c ****  * Set the color of a pixel of an image. The alpha channel won't be affected.
 234:lvgl/src/lv_draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 235:lvgl/src/lv_draw/lv_img_buf.c ****  * @param x x coordinate of the point to set
 236:lvgl/src/lv_draw/lv_img_buf.c ****  * @param y x coordinate of the point to set
 237:lvgl/src/lv_draw/lv_img_buf.c ****  * @param c color of the point
 238:lvgl/src/lv_draw/lv_img_buf.c ****  * @param safe true: check out of bounds
 239:lvgl/src/lv_draw/lv_img_buf.c ****  */
 240:lvgl/src/lv_draw/lv_img_buf.c **** void lv_img_buf_set_px_color(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_color_t c)
 241:lvgl/src/lv_draw/lv_img_buf.c **** {
 941              		.loc 1 241 1 is_stmt 1 view -0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 8
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945              		.loc 1 241 1 is_stmt 0 view .LVU336
ARM GAS  D:\Temp\ccBYw3dY.s 			page 30


 946 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 947              	.LCFI10:
 948              		.cfi_def_cfa_offset 20
 949              		.cfi_offset 4, -20
 950              		.cfi_offset 5, -16
 951              		.cfi_offset 6, -12
 952              		.cfi_offset 7, -8
 953              		.cfi_offset 14, -4
 954 0002 83B0     		sub	sp, sp, #12
 955              	.LCFI11:
 956              		.cfi_def_cfa_offset 32
 957 0004 0746     		mov	r7, r0
 958 0006 0D46     		mov	r5, r1
 959 0008 1646     		mov	r6, r2
 960 000a ADF80430 		strh	r3, [sp, #4]	@ movhi
 242:lvgl/src/lv_draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
 961              		.loc 1 242 5 is_stmt 1 view .LVU337
 962              		.loc 1 242 15 is_stmt 0 view .LVU338
 963 000e 8468     		ldr	r4, [r0, #8]
 964              	.LVL120:
 243:lvgl/src/lv_draw/lv_img_buf.c **** 
 244:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR || dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYE
 965              		.loc 1 244 5 is_stmt 1 view .LVU339
 966              		.loc 1 244 23 is_stmt 0 view .LVU340
 967 0010 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 968 0012 03F01F03 		and	r3, r3, #31
 969              		.loc 1 244 7 view .LVU341
 970 0016 042B     		cmp	r3, #4
 971 0018 17D0     		beq	.L45
 972              		.loc 1 244 47 discriminator 1 view .LVU342
 973 001a 062B     		cmp	r3, #6
 974 001c 15D0     		beq	.L45
 245:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
 246:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 247:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size);
 248:lvgl/src/lv_draw/lv_img_buf.c ****     }
 249:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 975              		.loc 1 249 10 is_stmt 1 view .LVU343
 976              		.loc 1 249 12 is_stmt 0 view .LVU344
 977 001e 052B     		cmp	r3, #5
 978 0020 2DD0     		beq	.L57
 250:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
 251:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 252:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 253:lvgl/src/lv_draw/lv_img_buf.c ****     }
 254:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_1BIT) {
 979              		.loc 1 254 10 is_stmt 1 view .LVU345
 980              		.loc 1 254 12 is_stmt 0 view .LVU346
 981 0022 072B     		cmp	r3, #7
 982 0024 47D0     		beq	.L58
 255:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 2; /*Skip the palette*/
 256:lvgl/src/lv_draw/lv_img_buf.c **** 
 257:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 258:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
 259:lvgl/src/lv_draw/lv_img_buf.c **** 
 260:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
 261:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
ARM GAS  D:\Temp\ccBYw3dY.s 			page 31


 262:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 8 ,16, 24 ...*/
 263:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 7) >> 3) * y + x;
 264:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 265:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 266:lvgl/src/lv_draw/lv_img_buf.c ****     }
 267:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_2BIT) {
 983              		.loc 1 267 10 is_stmt 1 view .LVU347
 984              		.loc 1 267 12 is_stmt 0 view .LVU348
 985 0026 082B     		cmp	r3, #8
 986 0028 64D0     		beq	.L59
 268:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 4; /*Skip the palette*/
 269:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 270:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 271:lvgl/src/lv_draw/lv_img_buf.c **** 
 272:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
 273:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 3 means rounding up to 4 because the lines are byte aligned
 274:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 4, 8 ,12 ...*/
 275:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 3) >> 2) * y + x;
 276:lvgl/src/lv_draw/lv_img_buf.c **** 
 277:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] & ~(3 << (6 - bit));
 278:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 279:lvgl/src/lv_draw/lv_img_buf.c ****     }
 280:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_4BIT) {
 987              		.loc 1 280 10 is_stmt 1 view .LVU349
 988              		.loc 1 280 12 is_stmt 0 view .LVU350
 989 002a 092B     		cmp	r3, #9
 990 002c 00F08280 		beq	.L60
 281:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 16; /*Skip the palette*/
 282:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 283:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 284:lvgl/src/lv_draw/lv_img_buf.c **** 
 285:lvgl/src/lv_draw/lv_img_buf.c ****         /* Get the current pixel.
 286:lvgl/src/lv_draw/lv_img_buf.c ****          * dsc->header.w + 1 means rounding up to 2 because the lines are byte aligned
 287:lvgl/src/lv_draw/lv_img_buf.c ****          * so the possible real width are 2 ,4, 6 ...*/
 288:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 1) >> 1) * y + x;
 289:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 290:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 291:lvgl/src/lv_draw/lv_img_buf.c ****     }
 292:lvgl/src/lv_draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 991              		.loc 1 292 10 is_stmt 1 view .LVU351
 992              		.loc 1 292 12 is_stmt 0 view .LVU352
 993 0030 0A2B     		cmp	r3, #10
 994 0032 5DD1     		bne	.L44
 995              	.LBB49:
 293:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 256; /*Skip the palette*/
 996              		.loc 1 293 9 is_stmt 1 view .LVU353
 997              	.LVL121:
 294:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y + x;
 998              		.loc 1 294 9 view .LVU354
 999              		.loc 1 294 34 is_stmt 0 view .LVU355
 1000 0034 0368     		ldr	r3, [r0]
 1001 0036 C3F38A23 		ubfx	r3, r3, #10, #11
 1002              		.loc 1 294 41 view .LVU356
 1003 003a 03FB0213 		mla	r3, r3, r2, r1
 1004              	.LVL122:
 295:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = c.full;
 1005              		.loc 1 295 9 is_stmt 1 view .LVU357
ARM GAS  D:\Temp\ccBYw3dY.s 			page 32


 1006              		.loc 1 295 24 is_stmt 0 view .LVU358
 1007 003e BDF80420 		ldrh	r2, [sp, #4]
 1008              	.LVL123:
 1009              		.loc 1 295 15 view .LVU359
 1010 0042 03F58063 		add	r3, r3, #1024
 1011              	.LVL124:
 1012              		.loc 1 295 21 view .LVU360
 1013 0046 E254     		strb	r2, [r4, r3]
 1014              	.LBE49:
 296:lvgl/src/lv_draw/lv_img_buf.c ****     }
 297:lvgl/src/lv_draw/lv_img_buf.c **** }
 1015              		.loc 1 297 1 view .LVU361
 1016 0048 52E0     		b	.L44
 1017              	.LVL125:
 1018              	.L45:
 1019              	.LBB50:
 245:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1020              		.loc 1 245 9 is_stmt 1 view .LVU362
 245:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1021              		.loc 1 245 60 is_stmt 0 view .LVU363
 1022 004a 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 1023              	.LVL126:
 245:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1024              		.loc 1 245 27 view .LVU364
 1025 004c 00F01F00 		and	r0, r0, #31
 1026 0050 FFF7FEFF 		bl	lv_img_cf_get_px_size
 1027              	.LVL127:
 245:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1028              		.loc 1 245 17 view .LVU365
 1029 0054 C0F3C700 		ubfx	r0, r0, #3, #8
 1030              	.LVL128:
 246:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size);
 1031              		.loc 1 246 9 is_stmt 1 view .LVU366
 246:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size);
 1032              		.loc 1 246 38 is_stmt 0 view .LVU367
 1033 0058 3B68     		ldr	r3, [r7]
 1034 005a C3F38A23 		ubfx	r3, r3, #10, #11
 246:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size);
 1035              		.loc 1 246 41 view .LVU368
 1036 005e 03FB06F3 		mul	r3, r3, r6
 246:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size);
 1037              		.loc 1 246 59 view .LVU369
 1038 0062 00FB05F5 		mul	r5, r0, r5
 246:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size);
 1039              		.loc 1 246 55 view .LVU370
 1040 0066 00FB0353 		mla	r3, r0, r3, r5
 1041              	.LVL129:
 247:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1042              		.loc 1 247 9 is_stmt 1 view .LVU371
 247:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1043              		.loc 1 247 26 is_stmt 0 view .LVU372
 1044 006a 2344     		add	r3, r3, r4
 1045              	.LVL130:
 1046              	.LBB51:
 1047              	.LBI51:
 213:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 1048              		.loc 2 213 44 is_stmt 1 view .LVU373
ARM GAS  D:\Temp\ccBYw3dY.s 			page 33


 1049              	.LBB52:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 1050              		.loc 2 215 5 view .LVU374
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 1051              		.loc 2 216 5 view .LVU375
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1052              		.loc 2 218 5 view .LVU376
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 1053              		.loc 2 216 21 is_stmt 0 view .LVU377
 1054 006c 01AA     		add	r2, sp, #4
 1055              	.LVL131:
 1056              	.L47:
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1057              		.loc 2 218 10 view .LVU378
 1058 006e 0028     		cmp	r0, #0
 1059 0070 3ED0     		beq	.L44
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 1060              		.loc 2 219 9 is_stmt 1 view .LVU379
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 1061              		.loc 2 219 15 is_stmt 0 view .LVU380
 1062 0072 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 1063              	.LVL132:
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 1064              		.loc 2 219 13 view .LVU381
 1065 0076 03F8011B 		strb	r1, [r3], #1
 1066              	.LVL133:
 220:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         s8++;
 1067              		.loc 2 220 9 is_stmt 1 view .LVU382
 221:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         len--;
 1068              		.loc 2 221 9 view .LVU383
 1069              		.loc 2 222 9 view .LVU384
 1070              		.loc 2 222 12 is_stmt 0 view .LVU385
 1071 007a 0138     		subs	r0, r0, #1
 1072              	.LVL134:
 1073              		.loc 2 222 12 view .LVU386
 1074 007c F7E7     		b	.L47
 1075              	.LVL135:
 1076              	.L57:
 1077              		.loc 2 222 12 view .LVU387
 1078              	.LBE52:
 1079              	.LBE51:
 1080              	.LBE50:
 1081              	.LBB53:
 250:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1082              		.loc 1 250 9 is_stmt 1 view .LVU388
 250:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1083              		.loc 1 250 60 is_stmt 0 view .LVU389
 1084 007e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1085              	.LVL136:
 250:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1086              		.loc 1 250 27 view .LVU390
 1087 0080 00F01F00 		and	r0, r0, #31
 1088 0084 FFF7FEFF 		bl	lv_img_cf_get_px_size
 1089              	.LVL137:
 250:lvgl/src/lv_draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1090              		.loc 1 250 17 view .LVU391
 1091 0088 C0F3C700 		ubfx	r0, r0, #3, #8
ARM GAS  D:\Temp\ccBYw3dY.s 			page 34


 1092              	.LVL138:
 251:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1093              		.loc 1 251 9 is_stmt 1 view .LVU392
 251:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1094              		.loc 1 251 38 is_stmt 0 view .LVU393
 1095 008c 3B68     		ldr	r3, [r7]
 1096 008e C3F38A23 		ubfx	r3, r3, #10, #11
 251:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1097              		.loc 1 251 41 view .LVU394
 1098 0092 03FB06F3 		mul	r3, r3, r6
 251:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1099              		.loc 1 251 59 view .LVU395
 1100 0096 00FB05F5 		mul	r5, r0, r5
 251:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1101              		.loc 1 251 55 view .LVU396
 1102 009a 00FB0353 		mla	r3, r0, r3, r5
 1103              	.LVL139:
 252:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1104              		.loc 1 252 9 is_stmt 1 view .LVU397
 252:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1105              		.loc 1 252 26 is_stmt 0 view .LVU398
 1106 009e 2344     		add	r3, r3, r4
 1107              	.LVL140:
 252:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1108              		.loc 1 252 51 view .LVU399
 1109 00a0 0138     		subs	r0, r0, #1
 1110              	.LVL141:
 1111              	.LBB54:
 1112              	.LBI54:
 213:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 1113              		.loc 2 213 44 is_stmt 1 view .LVU400
 1114              	.LBB55:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 1115              		.loc 2 215 5 view .LVU401
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 1116              		.loc 2 216 5 view .LVU402
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1117              		.loc 2 218 5 view .LVU403
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 1118              		.loc 2 216 21 is_stmt 0 view .LVU404
 1119 00a2 01AA     		add	r2, sp, #4
 1120              	.LVL142:
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 1121              		.loc 2 216 21 view .LVU405
 1122 00a4 04E0     		b	.L51
 1123              	.LVL143:
 1124              	.L52:
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 1125              		.loc 2 219 9 is_stmt 1 view .LVU406
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 1126              		.loc 2 219 15 is_stmt 0 view .LVU407
 1127 00a6 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 1128              	.LVL144:
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 1129              		.loc 2 219 13 view .LVU408
 1130 00aa 03F8011B 		strb	r1, [r3], #1
 1131              	.LVL145:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 35


 220:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         s8++;
 1132              		.loc 2 220 9 is_stmt 1 view .LVU409
 221:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         len--;
 1133              		.loc 2 221 9 view .LVU410
 1134              		.loc 2 222 9 view .LVU411
 1135              		.loc 2 222 12 is_stmt 0 view .LVU412
 1136 00ae 0138     		subs	r0, r0, #1
 1137              	.LVL146:
 1138              	.L51:
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1139              		.loc 2 218 10 view .LVU413
 1140 00b0 0028     		cmp	r0, #0
 1141 00b2 F8D1     		bne	.L52
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1142              		.loc 2 218 10 view .LVU414
 1143 00b4 1CE0     		b	.L44
 1144              	.LVL147:
 1145              	.L58:
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1146              		.loc 2 218 10 view .LVU415
 1147              	.LBE55:
 1148              	.LBE54:
 1149              	.LBE53:
 1150              	.LBB56:
 255:lvgl/src/lv_draw/lv_img_buf.c **** 
 1151              		.loc 1 255 9 is_stmt 1 view .LVU416
 255:lvgl/src/lv_draw/lv_img_buf.c **** 
 1152              		.loc 1 255 16 is_stmt 0 view .LVU417
 1153 00b6 04F10803 		add	r3, r4, #8
 1154              	.LVL148:
 257:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
 1155              		.loc 1 257 9 is_stmt 1 view .LVU418
 257:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 3;
 1156              		.loc 1 257 17 is_stmt 0 view .LVU419
 1157 00ba 01F00701 		and	r1, r1, #7
 1158              	.LVL149:
 258:lvgl/src/lv_draw/lv_img_buf.c **** 
 1159              		.loc 1 258 9 is_stmt 1 view .LVU420
 263:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1160              		.loc 1 263 9 view .LVU421
 263:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1161              		.loc 1 263 36 is_stmt 0 view .LVU422
 1162 00be 0268     		ldr	r2, [r0]
 1163              	.LVL150:
 263:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1164              		.loc 1 263 36 view .LVU423
 1165 00c0 C2F38A22 		ubfx	r2, r2, #10, #11
 263:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1166              		.loc 1 263 39 view .LVU424
 1167 00c4 0732     		adds	r2, r2, #7
 263:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1168              		.loc 1 263 44 view .LVU425
 1169 00c6 D210     		asrs	r2, r2, #3
 263:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1170              		.loc 1 263 50 view .LVU426
 1171 00c8 02FB06F6 		mul	r6, r2, r6
 263:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
ARM GAS  D:\Temp\ccBYw3dY.s 			page 36


 1172              		.loc 1 263 54 view .LVU427
 1173 00cc 06EBE505 		add	r5, r6, r5, asr #3
 1174              	.LVL151:
 264:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1175              		.loc 1 264 9 is_stmt 1 view .LVU428
 264:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1176              		.loc 1 264 29 is_stmt 0 view .LVU429
 1177 00d0 5A57     		ldrsb	r2, [r3, r5]
 264:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1178              		.loc 1 264 46 view .LVU430
 1179 00d2 C1F10700 		rsb	r0, r1, #7
 1180              	.LVL152:
 264:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1181              		.loc 1 264 40 view .LVU431
 1182 00d6 0121     		movs	r1, #1
 1183              	.LVL153:
 264:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1184              		.loc 1 264 40 view .LVU432
 1185 00d8 8140     		lsls	r1, r1, r0
 264:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1186              		.loc 1 264 34 view .LVU433
 1187 00da 22EA0102 		bic	r2, r2, r1
 1188 00de 52B2     		sxtb	r2, r2
 264:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1189              		.loc 1 264 21 view .LVU434
 1190 00e0 5A55     		strb	r2, [r3, r5]
 265:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1191              		.loc 1 265 9 is_stmt 1 view .LVU435
 265:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1192              		.loc 1 265 39 is_stmt 0 view .LVU436
 1193 00e2 BDF80410 		ldrh	r1, [sp, #4]
 265:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1194              		.loc 1 265 45 view .LVU437
 1195 00e6 01F00101 		and	r1, r1, #1
 265:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1196              		.loc 1 265 52 view .LVU438
 1197 00ea 8140     		lsls	r1, r1, r0
 265:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1198              		.loc 1 265 34 view .LVU439
 1199 00ec 0A43     		orrs	r2, r2, r1
 265:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1200              		.loc 1 265 21 view .LVU440
 1201 00ee 5A55     		strb	r2, [r3, r5]
 1202              	.LVL154:
 1203              	.L44:
 265:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1204              		.loc 1 265 21 view .LVU441
 1205              	.LBE56:
 1206              		.loc 1 297 1 view .LVU442
 1207 00f0 03B0     		add	sp, sp, #12
 1208              	.LCFI12:
 1209              		.cfi_remember_state
 1210              		.cfi_def_cfa_offset 20
 1211              		@ sp needed
 1212 00f2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1213              	.LVL155:
 1214              	.L59:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 37


 1215              	.LCFI13:
 1216              		.cfi_restore_state
 1217              	.LBB57:
 268:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 1218              		.loc 1 268 9 is_stmt 1 view .LVU443
 268:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 1219              		.loc 1 268 16 is_stmt 0 view .LVU444
 1220 00f4 04F11003 		add	r3, r4, #16
 1221              	.LVL156:
 269:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 1222              		.loc 1 269 9 is_stmt 1 view .LVU445
 269:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 1223              		.loc 1 269 17 is_stmt 0 view .LVU446
 1224 00f8 01F00301 		and	r1, r1, #3
 1225              	.LVL157:
 269:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 2;
 1226              		.loc 1 269 17 view .LVU447
 1227 00fc 4900     		lsls	r1, r1, #1
 1228              	.LVL158:
 270:lvgl/src/lv_draw/lv_img_buf.c **** 
 1229              		.loc 1 270 9 is_stmt 1 view .LVU448
 275:lvgl/src/lv_draw/lv_img_buf.c **** 
 1230              		.loc 1 275 9 view .LVU449
 275:lvgl/src/lv_draw/lv_img_buf.c **** 
 1231              		.loc 1 275 36 is_stmt 0 view .LVU450
 1232 00fe 0268     		ldr	r2, [r0]
 1233              	.LVL159:
 275:lvgl/src/lv_draw/lv_img_buf.c **** 
 1234              		.loc 1 275 36 view .LVU451
 1235 0100 C2F38A22 		ubfx	r2, r2, #10, #11
 275:lvgl/src/lv_draw/lv_img_buf.c **** 
 1236              		.loc 1 275 39 view .LVU452
 1237 0104 0332     		adds	r2, r2, #3
 275:lvgl/src/lv_draw/lv_img_buf.c **** 
 1238              		.loc 1 275 44 view .LVU453
 1239 0106 9210     		asrs	r2, r2, #2
 275:lvgl/src/lv_draw/lv_img_buf.c **** 
 1240              		.loc 1 275 50 view .LVU454
 1241 0108 02FB06F6 		mul	r6, r2, r6
 275:lvgl/src/lv_draw/lv_img_buf.c **** 
 1242              		.loc 1 275 54 view .LVU455
 1243 010c 06EBA505 		add	r5, r6, r5, asr #2
 1244              	.LVL160:
 277:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1245              		.loc 1 277 9 is_stmt 1 view .LVU456
 277:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1246              		.loc 1 277 28 is_stmt 0 view .LVU457
 1247 0110 5A57     		ldrsb	r2, [r3, r5]
 277:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1248              		.loc 1 277 45 view .LVU458
 1249 0112 C1F10601 		rsb	r1, r1, #6
 1250              	.LVL161:
 277:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1251              		.loc 1 277 39 view .LVU459
 1252 0116 0320     		movs	r0, #3
 1253              	.LVL162:
 277:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
ARM GAS  D:\Temp\ccBYw3dY.s 			page 38


 1254              		.loc 1 277 39 view .LVU460
 1255 0118 8840     		lsls	r0, r0, r1
 277:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1256              		.loc 1 277 33 view .LVU461
 1257 011a 22EA0002 		bic	r2, r2, r0
 1258 011e 52B2     		sxtb	r2, r2
 277:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1259              		.loc 1 277 20 view .LVU462
 1260 0120 5A55     		strb	r2, [r3, r5]
 278:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1261              		.loc 1 278 9 is_stmt 1 view .LVU463
 278:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1262              		.loc 1 278 38 is_stmt 0 view .LVU464
 1263 0122 BDF80400 		ldrh	r0, [sp, #4]
 278:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1264              		.loc 1 278 44 view .LVU465
 1265 0126 00F00300 		and	r0, r0, #3
 278:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1266              		.loc 1 278 51 view .LVU466
 1267 012a 00FA01F1 		lsl	r1, r0, r1
 278:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1268              		.loc 1 278 33 view .LVU467
 1269 012e 0A43     		orrs	r2, r2, r1
 278:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1270              		.loc 1 278 20 view .LVU468
 1271 0130 5A55     		strb	r2, [r3, r5]
 1272              	.LBE57:
 1273 0132 DDE7     		b	.L44
 1274              	.LVL163:
 1275              	.L60:
 1276              	.LBB58:
 281:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 1277              		.loc 1 281 9 is_stmt 1 view .LVU469
 281:lvgl/src/lv_draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 1278              		.loc 1 281 16 is_stmt 0 view .LVU470
 1279 0134 04F14003 		add	r3, r4, #64
 1280              	.LVL164:
 282:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 1281              		.loc 1 282 9 is_stmt 1 view .LVU471
 282:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 1282              		.loc 1 282 17 is_stmt 0 view .LVU472
 1283 0138 01F00101 		and	r1, r1, #1
 1284              	.LVL165:
 282:lvgl/src/lv_draw/lv_img_buf.c ****         x           = x >> 1;
 1285              		.loc 1 282 17 view .LVU473
 1286 013c 8900     		lsls	r1, r1, #2
 1287              	.LVL166:
 283:lvgl/src/lv_draw/lv_img_buf.c **** 
 1288              		.loc 1 283 9 is_stmt 1 view .LVU474
 288:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1289              		.loc 1 288 9 view .LVU475
 288:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1290              		.loc 1 288 36 is_stmt 0 view .LVU476
 1291 013e 0268     		ldr	r2, [r0]
 1292              	.LVL167:
 288:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1293              		.loc 1 288 36 view .LVU477
ARM GAS  D:\Temp\ccBYw3dY.s 			page 39


 1294 0140 C2F38A22 		ubfx	r2, r2, #10, #11
 288:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1295              		.loc 1 288 39 view .LVU478
 1296 0144 0132     		adds	r2, r2, #1
 288:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1297              		.loc 1 288 44 view .LVU479
 1298 0146 5210     		asrs	r2, r2, #1
 288:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1299              		.loc 1 288 50 view .LVU480
 1300 0148 02FB06F6 		mul	r6, r2, r6
 288:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1301              		.loc 1 288 54 view .LVU481
 1302 014c 06EB6505 		add	r5, r6, r5, asr #1
 1303              	.LVL168:
 289:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1304              		.loc 1 289 9 is_stmt 1 view .LVU482
 289:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1305              		.loc 1 289 29 is_stmt 0 view .LVU483
 1306 0150 5A57     		ldrsb	r2, [r3, r5]
 289:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1307              		.loc 1 289 48 view .LVU484
 1308 0152 C1F10401 		rsb	r1, r1, #4
 1309              	.LVL169:
 289:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1310              		.loc 1 289 42 view .LVU485
 1311 0156 0F20     		movs	r0, #15
 1312              	.LVL170:
 289:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1313              		.loc 1 289 42 view .LVU486
 1314 0158 8840     		lsls	r0, r0, r1
 289:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1315              		.loc 1 289 34 view .LVU487
 1316 015a 22EA0002 		bic	r2, r2, r0
 1317 015e 52B2     		sxtb	r2, r2
 289:lvgl/src/lv_draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1318              		.loc 1 289 21 view .LVU488
 1319 0160 5A55     		strb	r2, [r3, r5]
 290:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1320              		.loc 1 290 9 is_stmt 1 view .LVU489
 290:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1321              		.loc 1 290 39 is_stmt 0 view .LVU490
 1322 0162 BDF80400 		ldrh	r0, [sp, #4]
 290:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1323              		.loc 1 290 45 view .LVU491
 1324 0166 00F00F00 		and	r0, r0, #15
 290:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1325              		.loc 1 290 52 view .LVU492
 1326 016a 00FA01F1 		lsl	r1, r0, r1
 290:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1327              		.loc 1 290 34 view .LVU493
 1328 016e 0A43     		orrs	r2, r2, r1
 290:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1329              		.loc 1 290 21 view .LVU494
 1330 0170 5A55     		strb	r2, [r3, r5]
 1331              	.LBE58:
 1332 0172 BDE7     		b	.L44
 1333              		.cfi_endproc
ARM GAS  D:\Temp\ccBYw3dY.s 			page 40


 1334              	.LFE170:
 1336              		.section	.text.lv_img_buf_set_palette,"ax",%progbits
 1337              		.align	1
 1338              		.global	lv_img_buf_set_palette
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu fpv4-sp-d16
 1344              	lv_img_buf_set_palette:
 1345              	.LVL171:
 1346              	.LFB171:
 298:lvgl/src/lv_draw/lv_img_buf.c **** 
 299:lvgl/src/lv_draw/lv_img_buf.c **** /**
 300:lvgl/src/lv_draw/lv_img_buf.c ****  * Set the palette color of an indexed image. Valid only for `LV_IMG_CF_INDEXED1/2/4/8`
 301:lvgl/src/lv_draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 302:lvgl/src/lv_draw/lv_img_buf.c ****  * @param id the palette color to set:
 303:lvgl/src/lv_draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED1`: 0..1
 304:lvgl/src/lv_draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED2`: 0..3
 305:lvgl/src/lv_draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED4`: 0..15
 306:lvgl/src/lv_draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED8`: 0..255
 307:lvgl/src/lv_draw/lv_img_buf.c ****  * @param c the color to set
 308:lvgl/src/lv_draw/lv_img_buf.c ****  */
 309:lvgl/src/lv_draw/lv_img_buf.c **** void lv_img_buf_set_palette(lv_img_dsc_t * dsc, uint8_t id, lv_color_t c)
 310:lvgl/src/lv_draw/lv_img_buf.c **** {
 1347              		.loc 1 310 1 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 8
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              		@ link register save eliminated.
 311:lvgl/src/lv_draw/lv_img_buf.c ****     if((dsc->header.cf == LV_IMG_CF_ALPHA_1BIT && id > 1) || (dsc->header.cf == LV_IMG_CF_ALPHA_2BI
 1352              		.loc 1 311 5 view .LVU496
 1353              		.loc 1 311 24 is_stmt 0 view .LVU497
 1354 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1355 0002 03F01F03 		and	r3, r3, #31
 1356              		.loc 1 311 7 view .LVU498
 1357 0006 0B2B     		cmp	r3, #11
 1358 0008 38D0     		beq	.L74
 1359              	.L62:
 1360              		.loc 1 311 59 discriminator 3 view .LVU499
 1361 000a 0C2B     		cmp	r3, #12
 1362 000c 39D0     		beq	.L75
 1363              	.L64:
 1364              		.loc 1 311 113 discriminator 6 view .LVU500
 1365 000e 0D2B     		cmp	r3, #13
 1366 0010 3AD0     		beq	.L76
 1367              	.L65:
 312:lvgl/src/lv_draw/lv_img_buf.c ****        (dsc->header.cf == LV_IMG_CF_ALPHA_4BIT && id > 15) || (dsc->header.cf == LV_IMG_CF_ALPHA_8B
 1368              		.loc 1 312 60 discriminator 1 view .LVU501
 1369 0012 0E2B     		cmp	r3, #14
 1370 0014 34D0     		beq	.L71
 310:lvgl/src/lv_draw/lv_img_buf.c ****     if((dsc->header.cf == LV_IMG_CF_ALPHA_1BIT && id > 1) || (dsc->header.cf == LV_IMG_CF_ALPHA_2BI
 1371              		.loc 1 310 1 view .LVU502
 1372 0016 30B4     		push	{r4, r5}
 1373              	.LCFI14:
 1374              		.cfi_def_cfa_offset 8
 1375              		.cfi_offset 4, -8
 1376              		.cfi_offset 5, -4
ARM GAS  D:\Temp\ccBYw3dY.s 			page 41


 1377 0018 82B0     		sub	sp, sp, #8
 1378              	.LCFI15:
 1379              		.cfi_def_cfa_offset 16
 313:lvgl/src/lv_draw/lv_img_buf.c ****         LV_LOG_WARN("lv_img_buf_set_px_alpha: invalid 'id'");
 314:lvgl/src/lv_draw/lv_img_buf.c ****         return;
 315:lvgl/src/lv_draw/lv_img_buf.c ****     }
 316:lvgl/src/lv_draw/lv_img_buf.c **** 
 317:lvgl/src/lv_draw/lv_img_buf.c ****     lv_color32_t c32;
 1380              		.loc 1 317 5 is_stmt 1 view .LVU503
 318:lvgl/src/lv_draw/lv_img_buf.c ****     c32.full      = lv_color_to32(c);
 1381              		.loc 1 318 5 view .LVU504
 1382              	.LBB59:
 1383              	.LBI59:
 1384              		.file 3 "lvgl/src/lv_draw/../lv_misc/lv_color.h"
   1:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
   2:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *
   4:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
   5:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
   6:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
   9:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/lv_draw/../lv_misc/lv_color.h **** extern "C" {
  11:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  12:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  13:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*********************
  14:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *********************/
  16:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  19:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*Error checking*/
  20:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  21:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  22:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  23:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  24:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  25:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  26:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  27:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  28:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  29:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  30:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  31:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  32:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #include <stdint.h>
  33:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  34:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*********************
  35:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *      DEFINES
  36:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *********************/
  37:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_WHITE   LV_COLOR_MAKE(0xFF, 0xFF, 0xFF)
  38:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SILVER  LV_COLOR_MAKE(0xC0, 0xC0, 0xC0)
  39:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_GRAY    LV_COLOR_MAKE(0x80, 0x80, 0x80)
  40:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_BLACK   LV_COLOR_MAKE(0x00, 0x00, 0x00)
  41:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_RED     LV_COLOR_MAKE(0xFF, 0x00, 0x00)
  42:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MAROON  LV_COLOR_MAKE(0x80, 0x00, 0x00)
  43:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_YELLOW  LV_COLOR_MAKE(0xFF, 0xFF, 0x00)
ARM GAS  D:\Temp\ccBYw3dY.s 			page 42


  44:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_OLIVE   LV_COLOR_MAKE(0x80, 0x80, 0x00)
  45:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_LIME    LV_COLOR_MAKE(0x00, 0xFF, 0x00)
  46:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_GREEN   LV_COLOR_MAKE(0x00, 0x80, 0x00)
  47:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_CYAN    LV_COLOR_MAKE(0x00, 0xFF, 0xFF)
  48:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_AQUA    LV_COLOR_CYAN
  49:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_TEAL    LV_COLOR_MAKE(0x00, 0x80, 0x80)
  50:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_BLUE    LV_COLOR_MAKE(0x00, 0x00, 0xFF)
  51:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_NAVY    LV_COLOR_MAKE(0x00, 0x00, 0x80)
  52:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MAGENTA LV_COLOR_MAKE(0xFF, 0x00, 0xFF)
  53:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_PURPLE  LV_COLOR_MAKE(0x80, 0x00, 0x80)
  54:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_ORANGE  LV_COLOR_MAKE(0xFF, 0xA5, 0x00)
  55:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  56:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
  57:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Opacity percentages.
  58:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
  59:lvgl/src/lv_draw/../lv_misc/lv_color.h **** enum {
  60:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  61:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_0      = 0,
  62:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_10     = 25,
  63:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_20     = 51,
  64:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_30     = 76,
  65:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_40     = 102,
  66:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_50     = 127,
  67:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_60     = 153,
  68:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_70     = 178,
  69:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_80     = 204,
  70:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_90     = 229,
  71:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_100    = 255,
  72:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_COVER  = 255,
  73:lvgl/src/lv_draw/../lv_misc/lv_color.h **** };
  74:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  75:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  76:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  77:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  78:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  79:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 8
  80:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  81:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 8
  82:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  83:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 16
  84:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  85:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 32
  86:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
  87:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  88:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  89:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  90:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /* Adjust color mix functions rounding.
  91:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  92:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Should be in range of 0..254
  93:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  94:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 64: round up from x.75
  95:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 128: round up from half
  96:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 192: round up from x.25
  97:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 254: round up */
  98:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  99:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
 100:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
ARM GAS  D:\Temp\ccBYw3dY.s 			page 43


 101:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 102:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
 103:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 104:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 105:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 106:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*---------------------------------------
 107:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Macros for all existing color depths
 108:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * to set/get values of the color channels
 109:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *------------------------------------------*/
 110:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 111:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 112:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 113:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 114:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 115:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 116:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 117:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 118:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 119:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 120:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 121:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 122:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 123:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 124:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 125:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 126:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 127:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 128:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 129:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 130:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 134:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 136:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 139:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 143:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 145:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 148:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 149:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 150:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 151:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 152:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 153:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 154:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 155:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 156:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 157:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
ARM GAS  D:\Temp\ccBYw3dY.s 			page 44


 158:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*---------------------------------------
 159:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Macros for the current color depth
 160:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * to set/get values of the color channels
 161:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *------------------------------------------*/
 162:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 163:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R1(c,v)
 164:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G1(c,v)
 165:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B1(c,v)
 166:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A1(c,v)
 167:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 168:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R1(c)
 169:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G1(c)
 170:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B1(c)
 171:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A1(c)
 172:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 173:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 174:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R8(c,v)
 175:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G8(c,v)
 176:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B8(c,v)
 177:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A8(c,v)
 178:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 179:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R8(c)
 180:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G8(c)
 181:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B8(c)
 182:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A8(c)
 183:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 184:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 185:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R16(c,v)
 186:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G16(c,v)
 187:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B16(c,v)
 188:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A16(c,v)
 189:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 190:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R16(c)
 191:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G16(c)
 192:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B16(c)
 193:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A16(c)
 194:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 195:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 196:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R32(c,v)
 197:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G32(c,v)
 198:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B32(c,v)
 199:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A32(c,v)
 200:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 201:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R32(c)
 202:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G32(c)
 203:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B32(c)
 204:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A32(c)
 205:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 206:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 207:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**********************
 208:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *      TYPEDEFS
 209:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  **********************/
 210:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 211:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 212:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list */
 213:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     union {
 214:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t blue : 1;
ARM GAS  D:\Temp\ccBYw3dY.s 			page 45


 215:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t green : 1;
 216:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t red : 1;
 217:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 218:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color1_t;
 219:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 220:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 221:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     struct {
 222:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t blue : 2;
 223:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t green : 3;
 224:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t red : 3;
 225:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 226:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t full;
 227:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color8_t;
 228:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 229:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 230:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     struct {
 231:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 232:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t blue : 5;
 233:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t green : 6;
 234:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t red : 5;
 235:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 236:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t green_h : 3;
 237:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t red : 5;
 238:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t blue : 5;
 239:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t green_l : 3;
 240:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 241:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 242:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint16_t full;
 243:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color16_t;
 244:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 245:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 246:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     struct {
 247:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t blue;
 248:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t green;
 249:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t red;
 250:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t alpha;
 251:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 252:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint32_t full;
 253:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color32_t;
 254:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 255:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 256:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint8_t lv_color_int_t;
 257:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color1_t lv_color_t;
 258:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {0x00}
 259:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 260:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint8_t lv_color_int_t;
 261:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color8_t lv_color_t;
 262:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00}}
 263:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 264:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint16_t lv_color_int_t;
 265:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color16_t lv_color_t;
 266:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # if LV_COLOR_16_SWAP == 0
 267:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #  define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00}}
 268:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # else
 269:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #  define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00, 0x00}}
 270:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # endif
 271:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
ARM GAS  D:\Temp\ccBYw3dY.s 			page 46


 272:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint32_t lv_color_int_t;
 273:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color32_t lv_color_t;
 274:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00, 0x00}}
 275:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 276:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
 277:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 278:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 279:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef struct {
 280:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint16_t h;
 281:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t s;
 282:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t v;
 283:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color_hsv_t;
 284:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 285:lvgl/src/lv_draw/../lv_misc/lv_color.h **** //! @cond Doxygen_Suppress
 286:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 287:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint8_t lv_opa_t;
 288:lvgl/src/lv_draw/../lv_misc/lv_color.h **** //! @endcond
 289:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 290:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**********************
 291:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * GLOBAL PROTOTYPES
 292:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  **********************/
 293:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 294:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*In color conversations:
 295:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 296:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 297:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *         8 bit Red has 3 bits
 298:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        ----------------------
 299:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 300:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *
 301:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 302:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 303:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        16 bit Red has 5 bits
 304:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        ----------------------
 305:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 306:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
 307:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 308:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 309:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 310:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
 311:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 312:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 313:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 1;
 314:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 315:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else {
 316:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 317:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 318:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 319:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 320:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 1;
 321:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 322:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else {
 323:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 324:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 325:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 326:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 327:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 1;
 328:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
ARM GAS  D:\Temp\ccBYw3dY.s 			page 47


 329:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else {
 330:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 331:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 332:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 333:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 334:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 335:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 336:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 337:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 338:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if(color.full == 0)
 339:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 340:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else
 341:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFF;
 342:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 343:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
 344:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 345:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color8_t ret;
 346:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /* 5 - 3  = 2*/
 347:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /* 6 - 3  = 3*/
 348:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /* 5 - 2  = 3*/
 349:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 350:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 351:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color8_t ret;
 352:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /* 8 - 3  = 5*/
 353:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /* 8 - 3  = 5*/
 354:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /* 8 - 2  = 6*/
 355:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 356:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 357:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 358:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 359:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 360:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 361:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 362:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if(color.full == 0)
 363:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 364:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else
 365:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFFFF;
 366:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 367:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color16_t ret;
 368:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 369:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 370:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 371:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 372:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 373:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
 374:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 375:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color16_t ret;
 376:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /* 8 - 5  = 3*/
 377:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /* 8 - 6  = 2*/
 378:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /* 8 - 5  = 3*/
 379:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 380:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 381:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 382:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 383:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 1385              		.loc 3 383 24 view .LVU505
 1386              	.LBB60:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 48


 384:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 385:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 386:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if(color.full == 0)
 387:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFF000000;
 388:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else
 389:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFFFFFFFF;
 390:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 391:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color32_t ret;
 392:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 393:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 394:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 395:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 396:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 397:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 398:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /**
 399:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * The floating point math for conversion is:
 400:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 401:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * The faster integer math for conversion is:
 402:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 403:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 404:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *
 405:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 406:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *
 407:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 408:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 409:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       0           8      7        7       255
 410:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       1          16     14        7       255
 411:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       2          32     28        7       255
 412:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       3          65     25        3       255
 413:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       4         131     19        1       255
 414:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       5         263      7        0       255
 415:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *
 416:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 417:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 418:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       0           4      3        3       255
 419:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       1           8      6        3       255
 420:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       2          16     12        3       255
 421:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       3          32     24        3       255
 422:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       4          64     48        3       255
 423:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       5         129     33        1       255
 424:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       6         259      3        0       255
 425:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      */
 426:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 427:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color32_t ret;
 1387              		.loc 3 427 5 view .LVU506
 428:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 1388              		.loc 3 428 5 view .LVU507
 1389 001a C2F3C423 		ubfx	r3, r2, #11, #5
 1390 001e 03EB4314 		add	r4, r3, r3, lsl #5
 1391 0022 C3EBC403 		rsb	r3, r3, r4, lsl #3
 1392 0026 0733     		adds	r3, r3, #7
 1393 0028 C3F34713 		ubfx	r3, r3, #5, #8
 1394 002c 0024     		movs	r4, #0
 1395              	.LVL172:
 1396              		.loc 3 428 5 is_stmt 0 view .LVU508
 1397 002e 63F31744 		bfi	r4, r3, #16, #8
 1398              	.LVL173:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 49


 429:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 1399              		.loc 3 429 5 is_stmt 1 view .LVU509
 1400 0032 C2F34513 		ubfx	r3, r2, #5, #6
 1401 0036 03EBC315 		add	r5, r3, r3, lsl #7
 1402 003a 03EB4503 		add	r3, r3, r5, lsl #1
 1403 003e 0333     		adds	r3, r3, #3
 1404 0040 C3F38713 		ubfx	r3, r3, #6, #8
 1405 0044 63F30F24 		bfi	r4, r3, #8, #8
 430:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 1406              		.loc 3 430 5 view .LVU510
 1407 0048 02F01F02 		and	r2, r2, #31
 1408              	.LVL174:
 1409              		.loc 3 430 5 is_stmt 0 view .LVU511
 1410 004c 02EB4213 		add	r3, r2, r2, lsl #5
 1411 0050 C2EBC302 		rsb	r2, r2, r3, lsl #3
 1412 0054 0732     		adds	r2, r2, #7
 1413 0056 C2F34712 		ubfx	r2, r2, #5, #8
 1414 005a 62F30704 		bfi	r4, r2, #0, #8
 431:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 1415              		.loc 3 431 5 is_stmt 1 view .LVU512
 1416 005e 44F07F44 		orr	r4, r4, #-16777216
 1417              	.LVL175:
 432:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 1418              		.loc 3 432 5 view .LVU513
 1419              		.loc 3 432 5 is_stmt 0 view .LVU514
 1420              	.LBE60:
 1421              	.LBE59:
 1422              		.loc 1 318 19 view .LVU515
 1423 0062 0194     		str	r4, [sp, #4]
 319:lvgl/src/lv_draw/lv_img_buf.c ****     uint8_t * buf = (uint8_t *)dsc->data;
 1424              		.loc 1 319 5 is_stmt 1 view .LVU516
 1425              		.loc 1 319 15 is_stmt 0 view .LVU517
 1426 0064 8368     		ldr	r3, [r0, #8]
 1427              	.LVL176:
 320:lvgl/src/lv_draw/lv_img_buf.c ****     _lv_memcpy_small(&buf[id * sizeof(c32)], &c32, sizeof(c32));
 1428              		.loc 1 320 5 is_stmt 1 view .LVU518
 1429              		.loc 1 320 22 is_stmt 0 view .LVU519
 1430 0066 03EB8101 		add	r1, r3, r1, lsl #2
 1431              	.LVL177:
 1432              	.LBB61:
 1433              	.LBI61:
 213:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 1434              		.loc 2 213 44 is_stmt 1 view .LVU520
 1435              	.LBB62:
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 1436              		.loc 2 216 21 is_stmt 0 view .LVU521
 1437 006a 01AA     		add	r2, sp, #4
 1438              	.LVL178:
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 1439              		.loc 2 216 21 view .LVU522
 1440              	.LBE62:
 1441              	.LBE61:
 1442              		.loc 1 320 22 view .LVU523
 1443 006c 0423     		movs	r3, #4
 1444              	.LVL179:
 1445              	.L68:
 1446              	.LBB64:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 50


 1447              	.LBB63:
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 1448              		.loc 2 218 10 view .LVU524
 1449 006e 73B1     		cbz	r3, .L77
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 1450              		.loc 2 219 9 is_stmt 1 view .LVU525
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 1451              		.loc 2 219 15 is_stmt 0 view .LVU526
 1452 0070 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1453              	.LVL180:
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 1454              		.loc 2 219 13 view .LVU527
 1455 0074 01F8010B 		strb	r0, [r1], #1
 1456              	.LVL181:
 220:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         s8++;
 1457              		.loc 2 220 9 is_stmt 1 view .LVU528
 221:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         len--;
 1458              		.loc 2 221 9 view .LVU529
 1459              		.loc 2 222 9 view .LVU530
 1460              		.loc 2 222 12 is_stmt 0 view .LVU531
 1461 0078 013B     		subs	r3, r3, #1
 1462              	.LVL182:
 1463              		.loc 2 222 12 view .LVU532
 1464 007a F8E7     		b	.L68
 1465              	.LVL183:
 1466              	.L74:
 1467              	.LCFI16:
 1468              		.cfi_def_cfa_offset 0
 1469              		.cfi_restore 4
 1470              		.cfi_restore 5
 1471              		.loc 2 222 12 view .LVU533
 1472              	.LBE63:
 1473              	.LBE64:
 311:lvgl/src/lv_draw/lv_img_buf.c ****        (dsc->header.cf == LV_IMG_CF_ALPHA_4BIT && id > 15) || (dsc->header.cf == LV_IMG_CF_ALPHA_8B
 1474              		.loc 1 311 48 discriminator 1 view .LVU534
 1475 007c 0129     		cmp	r1, #1
 1476 007e C4D9     		bls	.L62
 1477              	.L71:
 1478 0080 7047     		bx	lr
 1479              	.L75:
 311:lvgl/src/lv_draw/lv_img_buf.c ****        (dsc->header.cf == LV_IMG_CF_ALPHA_4BIT && id > 15) || (dsc->header.cf == LV_IMG_CF_ALPHA_8B
 1480              		.loc 1 311 102 discriminator 4 view .LVU535
 1481 0082 0329     		cmp	r1, #3
 1482 0084 C3D9     		bls	.L64
 1483 0086 FBE7     		b	.L71
 1484              	.L76:
 312:lvgl/src/lv_draw/lv_img_buf.c ****         LV_LOG_WARN("lv_img_buf_set_px_alpha: invalid 'id'");
 1485              		.loc 1 312 48 view .LVU536
 1486 0088 0F29     		cmp	r1, #15
 1487 008a C2D9     		bls	.L65
 1488 008c F8E7     		b	.L71
 1489              	.LVL184:
 1490              	.L77:
 1491              	.LCFI17:
 1492              		.cfi_def_cfa_offset 16
 1493              		.cfi_offset 4, -8
 1494              		.cfi_offset 5, -4
ARM GAS  D:\Temp\ccBYw3dY.s 			page 51


 321:lvgl/src/lv_draw/lv_img_buf.c **** }
 1495              		.loc 1 321 1 view .LVU537
 1496 008e 02B0     		add	sp, sp, #8
 1497              	.LCFI18:
 1498              		.cfi_def_cfa_offset 8
 1499              		@ sp needed
 1500 0090 30BC     		pop	{r4, r5}
 1501              	.LCFI19:
 1502              		.cfi_restore 5
 1503              		.cfi_restore 4
 1504              		.cfi_def_cfa_offset 0
 1505              	.LVL185:
 1506              		.loc 1 321 1 view .LVU538
 1507 0092 7047     		bx	lr
 1508              		.cfi_endproc
 1509              	.LFE171:
 1511              		.section	.text.lv_img_buf_free,"ax",%progbits
 1512              		.align	1
 1513              		.global	lv_img_buf_free
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1517              		.fpu fpv4-sp-d16
 1519              	lv_img_buf_free:
 1520              	.LVL186:
 1521              	.LFB173:
 322:lvgl/src/lv_draw/lv_img_buf.c **** 
 323:lvgl/src/lv_draw/lv_img_buf.c **** /**
 324:lvgl/src/lv_draw/lv_img_buf.c ****  * Allocate an image buffer in RAM
 325:lvgl/src/lv_draw/lv_img_buf.c ****  * @param w width of image
 326:lvgl/src/lv_draw/lv_img_buf.c ****  * @param h height of image
 327:lvgl/src/lv_draw/lv_img_buf.c ****  * @param cf a color format (`LV_IMG_CF_...`)
 328:lvgl/src/lv_draw/lv_img_buf.c ****  * @return an allocated image, or NULL on failure
 329:lvgl/src/lv_draw/lv_img_buf.c ****  */
 330:lvgl/src/lv_draw/lv_img_buf.c **** lv_img_dsc_t * lv_img_buf_alloc(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)
 331:lvgl/src/lv_draw/lv_img_buf.c **** {
 332:lvgl/src/lv_draw/lv_img_buf.c ****     /* Allocate image descriptor */
 333:lvgl/src/lv_draw/lv_img_buf.c ****     lv_img_dsc_t * dsc = lv_mem_alloc(sizeof(lv_img_dsc_t));
 334:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc == NULL)
 335:lvgl/src/lv_draw/lv_img_buf.c ****         return NULL;
 336:lvgl/src/lv_draw/lv_img_buf.c **** 
 337:lvgl/src/lv_draw/lv_img_buf.c ****     _lv_memset_00(dsc, sizeof(lv_img_dsc_t));
 338:lvgl/src/lv_draw/lv_img_buf.c **** 
 339:lvgl/src/lv_draw/lv_img_buf.c ****     /* Get image data size */
 340:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->data_size = lv_img_buf_get_img_size(w, h, cf);
 341:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 342:lvgl/src/lv_draw/lv_img_buf.c ****         lv_mem_free(dsc);
 343:lvgl/src/lv_draw/lv_img_buf.c ****         return NULL;
 344:lvgl/src/lv_draw/lv_img_buf.c ****     }
 345:lvgl/src/lv_draw/lv_img_buf.c **** 
 346:lvgl/src/lv_draw/lv_img_buf.c ****     /* Allocate raw buffer */
 347:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->data = lv_mem_alloc(dsc->data_size);
 348:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 349:lvgl/src/lv_draw/lv_img_buf.c ****         lv_mem_free(dsc);
 350:lvgl/src/lv_draw/lv_img_buf.c ****         return NULL;
 351:lvgl/src/lv_draw/lv_img_buf.c ****     }
 352:lvgl/src/lv_draw/lv_img_buf.c ****     _lv_memset_00((uint8_t *)dsc->data, dsc->data_size);
ARM GAS  D:\Temp\ccBYw3dY.s 			page 52


 353:lvgl/src/lv_draw/lv_img_buf.c **** 
 354:lvgl/src/lv_draw/lv_img_buf.c ****     /* Fill in header */
 355:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->header.always_zero = 0;
 356:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->header.w = w;
 357:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->header.h = h;
 358:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->header.cf = cf;
 359:lvgl/src/lv_draw/lv_img_buf.c ****     return dsc;
 360:lvgl/src/lv_draw/lv_img_buf.c **** }
 361:lvgl/src/lv_draw/lv_img_buf.c **** 
 362:lvgl/src/lv_draw/lv_img_buf.c **** /**
 363:lvgl/src/lv_draw/lv_img_buf.c ****  * Free an allocated image buffer
 364:lvgl/src/lv_draw/lv_img_buf.c ****  * @param dsc image buffer to free
 365:lvgl/src/lv_draw/lv_img_buf.c ****  */
 366:lvgl/src/lv_draw/lv_img_buf.c **** void lv_img_buf_free(lv_img_dsc_t * dsc)
 367:lvgl/src/lv_draw/lv_img_buf.c **** {
 1522              		.loc 1 367 1 is_stmt 1 view -0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 368:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc != NULL) {
 1526              		.loc 1 368 5 view .LVU540
 1527              		.loc 1 368 7 is_stmt 0 view .LVU541
 1528 0000 48B1     		cbz	r0, .L82
 367:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc != NULL) {
 1529              		.loc 1 367 1 view .LVU542
 1530 0002 10B5     		push	{r4, lr}
 1531              	.LCFI20:
 1532              		.cfi_def_cfa_offset 8
 1533              		.cfi_offset 4, -8
 1534              		.cfi_offset 14, -4
 1535 0004 0446     		mov	r4, r0
 369:lvgl/src/lv_draw/lv_img_buf.c ****         if(dsc->data != NULL)
 1536              		.loc 1 369 9 is_stmt 1 view .LVU543
 1537              		.loc 1 369 15 is_stmt 0 view .LVU544
 1538 0006 8068     		ldr	r0, [r0, #8]
 1539              	.LVL187:
 1540              		.loc 1 369 11 view .LVU545
 1541 0008 08B1     		cbz	r0, .L80
 370:lvgl/src/lv_draw/lv_img_buf.c ****             lv_mem_free(dsc->data);
 1542              		.loc 1 370 13 is_stmt 1 view .LVU546
 1543 000a FFF7FEFF 		bl	lv_mem_free
 1544              	.LVL188:
 1545              	.L80:
 371:lvgl/src/lv_draw/lv_img_buf.c **** 
 372:lvgl/src/lv_draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1546              		.loc 1 372 9 view .LVU547
 1547 000e 2046     		mov	r0, r4
 1548 0010 FFF7FEFF 		bl	lv_mem_free
 1549              	.LVL189:
 373:lvgl/src/lv_draw/lv_img_buf.c ****     }
 374:lvgl/src/lv_draw/lv_img_buf.c **** }
 1550              		.loc 1 374 1 is_stmt 0 view .LVU548
 1551 0014 10BD     		pop	{r4, pc}
 1552              	.LVL190:
 1553              	.L82:
 1554              	.LCFI21:
 1555              		.cfi_def_cfa_offset 0
ARM GAS  D:\Temp\ccBYw3dY.s 			page 53


 1556              		.cfi_restore 4
 1557              		.cfi_restore 14
 1558              		.loc 1 374 1 view .LVU549
 1559 0016 7047     		bx	lr
 1560              		.cfi_endproc
 1561              	.LFE173:
 1563              		.section	.text.lv_img_buf_get_img_size,"ax",%progbits
 1564              		.align	1
 1565              		.global	lv_img_buf_get_img_size
 1566              		.syntax unified
 1567              		.thumb
 1568              		.thumb_func
 1569              		.fpu fpv4-sp-d16
 1571              	lv_img_buf_get_img_size:
 1572              	.LVL191:
 1573              	.LFB174:
 375:lvgl/src/lv_draw/lv_img_buf.c **** 
 376:lvgl/src/lv_draw/lv_img_buf.c **** /**
 377:lvgl/src/lv_draw/lv_img_buf.c ****  * Get the memory consumption of a raw bitmap, given color format and dimensions.
 378:lvgl/src/lv_draw/lv_img_buf.c ****  * @param w width
 379:lvgl/src/lv_draw/lv_img_buf.c ****  * @param h height
 380:lvgl/src/lv_draw/lv_img_buf.c ****  * @param cf color format
 381:lvgl/src/lv_draw/lv_img_buf.c ****  * @return size in bytes
 382:lvgl/src/lv_draw/lv_img_buf.c ****  */
 383:lvgl/src/lv_draw/lv_img_buf.c **** uint32_t lv_img_buf_get_img_size(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)
 384:lvgl/src/lv_draw/lv_img_buf.c **** {
 1574              		.loc 1 384 1 is_stmt 1 view -0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578              		@ link register save eliminated.
 385:lvgl/src/lv_draw/lv_img_buf.c ****     switch(cf) {
 1579              		.loc 1 385 5 view .LVU551
 1580 0000 043A     		subs	r2, r2, #4
 1581              	.LVL192:
 1582              		.loc 1 385 5 is_stmt 0 view .LVU552
 1583 0002 0A2A     		cmp	r2, #10
 1584 0004 52D8     		bhi	.L103
 1585 0006 DFE802F0 		tbb	[pc, r2]
 1586              	.L88:
 1587 000a 06       		.byte	(.L98-.L88)/2
 1588 000b 0A       		.byte	(.L97-.L88)/2
 1589 000c 0F       		.byte	(.L96-.L88)/2
 1590 000d 2E       		.byte	(.L95-.L88)/2
 1591 000e 39       		.byte	(.L94-.L88)/2
 1592 000f 44       		.byte	(.L93-.L88)/2
 1593 0010 4C       		.byte	(.L92-.L88)/2
 1594 0011 13       		.byte	(.L91-.L88)/2
 1595 0012 1C       		.byte	(.L90-.L88)/2
 1596 0013 25       		.byte	(.L89-.L88)/2
 1597 0014 2B       		.byte	(.L87-.L88)/2
 1598 0015 00       		.p2align 1
 1599              	.L98:
 386:lvgl/src/lv_draw/lv_img_buf.c ****         case LV_IMG_CF_TRUE_COLOR:
 387:lvgl/src/lv_draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_TRUE_COLOR(w, h);
 1600              		.loc 1 387 13 is_stmt 1 view .LVU553
 1601              		.loc 1 387 20 is_stmt 0 view .LVU554
ARM GAS  D:\Temp\ccBYw3dY.s 			page 54


 1602 0016 01FB00F1 		mul	r1, r1, r0
 1603              	.LVL193:
 1604              		.loc 1 387 20 view .LVU555
 1605 001a 4800     		lsls	r0, r1, #1
 1606              	.LVL194:
 1607              		.loc 1 387 20 view .LVU556
 1608 001c 7047     		bx	lr
 1609              	.LVL195:
 1610              	.L97:
 388:lvgl/src/lv_draw/lv_img_buf.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 389:lvgl/src/lv_draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_TRUE_COLOR_ALPHA(w, h);
 1611              		.loc 1 389 13 is_stmt 1 view .LVU557
 1612              		.loc 1 389 20 is_stmt 0 view .LVU558
 1613 001e 01FB00F1 		mul	r1, r1, r0
 1614              	.LVL196:
 1615              		.loc 1 389 20 view .LVU559
 1616 0022 01EB4100 		add	r0, r1, r1, lsl #1
 1617              	.LVL197:
 1618              		.loc 1 389 20 view .LVU560
 1619 0026 7047     		bx	lr
 1620              	.LVL198:
 1621              	.L96:
 390:lvgl/src/lv_draw/lv_img_buf.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 391:lvgl/src/lv_draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED(w, h);
 1622              		.loc 1 391 13 is_stmt 1 view .LVU561
 1623              		.loc 1 391 20 is_stmt 0 view .LVU562
 1624 0028 01FB00F1 		mul	r1, r1, r0
 1625              	.LVL199:
 1626              		.loc 1 391 20 view .LVU563
 1627 002c 4800     		lsls	r0, r1, #1
 1628              	.LVL200:
 1629              		.loc 1 391 20 view .LVU564
 1630 002e 7047     		bx	lr
 1631              	.LVL201:
 1632              	.L91:
 392:lvgl/src/lv_draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_1BIT:
 393:lvgl/src/lv_draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_1BIT(w, h);
 1633              		.loc 1 393 13 is_stmt 1 view .LVU565
 1634              		.loc 1 393 20 is_stmt 0 view .LVU566
 1635 0030 0346     		mov	r3, r0
 1636 0032 0028     		cmp	r0, #0
 1637 0034 03DB     		blt	.L104
 1638              	.L99:
 1639 0036 D810     		asrs	r0, r3, #3
 1640              	.LVL202:
 1641              		.loc 1 393 20 view .LVU567
 1642 0038 00FB0110 		mla	r0, r0, r1, r1
 1643 003c 7047     		bx	lr
 1644              	.LVL203:
 1645              	.L104:
 1646              		.loc 1 393 20 view .LVU568
 1647 003e C31D     		adds	r3, r0, #7
 1648 0040 F9E7     		b	.L99
 1649              	.L90:
 394:lvgl/src/lv_draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_2BIT:
 395:lvgl/src/lv_draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_2BIT(w, h);
 1650              		.loc 1 395 13 is_stmt 1 view .LVU569
ARM GAS  D:\Temp\ccBYw3dY.s 			page 55


 1651              		.loc 1 395 20 is_stmt 0 view .LVU570
 1652 0042 0346     		mov	r3, r0
 1653 0044 0028     		cmp	r0, #0
 1654 0046 03DB     		blt	.L105
 1655              	.L100:
 1656 0048 9810     		asrs	r0, r3, #2
 1657              	.LVL204:
 1658              		.loc 1 395 20 view .LVU571
 1659 004a 00FB0110 		mla	r0, r0, r1, r1
 1660 004e 7047     		bx	lr
 1661              	.LVL205:
 1662              	.L105:
 1663              		.loc 1 395 20 view .LVU572
 1664 0050 C31C     		adds	r3, r0, #3
 1665 0052 F9E7     		b	.L100
 1666              	.L89:
 396:lvgl/src/lv_draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_4BIT:
 397:lvgl/src/lv_draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_4BIT(w, h);
 1667              		.loc 1 397 13 is_stmt 1 view .LVU573
 1668              		.loc 1 397 20 is_stmt 0 view .LVU574
 1669 0054 00EBD070 		add	r0, r0, r0, lsr #31
 1670              	.LVL206:
 1671              		.loc 1 397 20 view .LVU575
 1672 0058 4010     		asrs	r0, r0, #1
 1673 005a 00FB0110 		mla	r0, r0, r1, r1
 1674 005e 7047     		bx	lr
 1675              	.LVL207:
 1676              	.L87:
 398:lvgl/src/lv_draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_8BIT:
 399:lvgl/src/lv_draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_8BIT(w, h);
 1677              		.loc 1 399 13 is_stmt 1 view .LVU576
 1678              		.loc 1 399 20 is_stmt 0 view .LVU577
 1679 0060 01FB00F0 		mul	r0, r1, r0
 1680              	.LVL208:
 1681              		.loc 1 399 20 view .LVU578
 1682 0064 7047     		bx	lr
 1683              	.LVL209:
 1684              	.L95:
 400:lvgl/src/lv_draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_1BIT:
 401:lvgl/src/lv_draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_1BIT(w, h);
 1685              		.loc 1 401 13 is_stmt 1 view .LVU579
 1686              		.loc 1 401 20 is_stmt 0 view .LVU580
 1687 0066 0346     		mov	r3, r0
 1688 0068 0028     		cmp	r0, #0
 1689 006a 05DB     		blt	.L106
 1690              	.L101:
 1691 006c DB10     		asrs	r3, r3, #3
 1692 006e 03FB0111 		mla	r1, r3, r1, r1
 1693              	.LVL210:
 1694              		.loc 1 401 20 view .LVU581
 1695 0072 01F10800 		add	r0, r1, #8
 1696              	.LVL211:
 1697              		.loc 1 401 20 view .LVU582
 1698 0076 7047     		bx	lr
 1699              	.LVL212:
 1700              	.L106:
 1701              		.loc 1 401 20 view .LVU583
ARM GAS  D:\Temp\ccBYw3dY.s 			page 56


 1702 0078 C31D     		adds	r3, r0, #7
 1703 007a F7E7     		b	.L101
 1704              	.L94:
 402:lvgl/src/lv_draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_2BIT:
 403:lvgl/src/lv_draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_2BIT(w, h);
 1705              		.loc 1 403 13 is_stmt 1 view .LVU584
 1706              		.loc 1 403 20 is_stmt 0 view .LVU585
 1707 007c 0346     		mov	r3, r0
 1708 007e 0028     		cmp	r0, #0
 1709 0080 05DB     		blt	.L107
 1710              	.L102:
 1711 0082 9B10     		asrs	r3, r3, #2
 1712 0084 03FB0111 		mla	r1, r3, r1, r1
 1713              	.LVL213:
 1714              		.loc 1 403 20 view .LVU586
 1715 0088 01F11000 		add	r0, r1, #16
 1716              	.LVL214:
 1717              		.loc 1 403 20 view .LVU587
 1718 008c 7047     		bx	lr
 1719              	.LVL215:
 1720              	.L107:
 1721              		.loc 1 403 20 view .LVU588
 1722 008e C31C     		adds	r3, r0, #3
 1723 0090 F7E7     		b	.L102
 1724              	.L93:
 404:lvgl/src/lv_draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_4BIT:
 405:lvgl/src/lv_draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_4BIT(w, h);
 1725              		.loc 1 405 13 is_stmt 1 view .LVU589
 1726              		.loc 1 405 20 is_stmt 0 view .LVU590
 1727 0092 00EBD070 		add	r0, r0, r0, lsr #31
 1728              	.LVL216:
 1729              		.loc 1 405 20 view .LVU591
 1730 0096 4010     		asrs	r0, r0, #1
 1731 0098 00FB0111 		mla	r1, r0, r1, r1
 1732              	.LVL217:
 1733              		.loc 1 405 20 view .LVU592
 1734 009c 01F14000 		add	r0, r1, #64
 1735 00a0 7047     		bx	lr
 1736              	.LVL218:
 1737              	.L92:
 406:lvgl/src/lv_draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_8BIT:
 407:lvgl/src/lv_draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_8BIT(w, h);
 1738              		.loc 1 407 13 is_stmt 1 view .LVU593
 1739              		.loc 1 407 20 is_stmt 0 view .LVU594
 1740 00a2 01FB00F1 		mul	r1, r1, r0
 1741              	.LVL219:
 1742              		.loc 1 407 20 view .LVU595
 1743 00a6 01F58060 		add	r0, r1, #1024
 1744              	.LVL220:
 1745              		.loc 1 407 20 view .LVU596
 1746 00aa 7047     		bx	lr
 1747              	.LVL221:
 1748              	.L103:
 408:lvgl/src/lv_draw/lv_img_buf.c ****         default:
 409:lvgl/src/lv_draw/lv_img_buf.c ****             return 0;
 1749              		.loc 1 409 20 view .LVU597
 1750 00ac 0020     		movs	r0, #0
ARM GAS  D:\Temp\ccBYw3dY.s 			page 57


 1751              	.LVL222:
 410:lvgl/src/lv_draw/lv_img_buf.c ****     }
 411:lvgl/src/lv_draw/lv_img_buf.c **** }
 1752              		.loc 1 411 1 view .LVU598
 1753 00ae 7047     		bx	lr
 1754              		.cfi_endproc
 1755              	.LFE174:
 1757              		.section	.text.lv_img_buf_alloc,"ax",%progbits
 1758              		.align	1
 1759              		.global	lv_img_buf_alloc
 1760              		.syntax unified
 1761              		.thumb
 1762              		.thumb_func
 1763              		.fpu fpv4-sp-d16
 1765              	lv_img_buf_alloc:
 1766              	.LVL223:
 1767              	.LFB172:
 331:lvgl/src/lv_draw/lv_img_buf.c ****     /* Allocate image descriptor */
 1768              		.loc 1 331 1 is_stmt 1 view -0
 1769              		.cfi_startproc
 1770              		@ args = 0, pretend = 0, frame = 0
 1771              		@ frame_needed = 0, uses_anonymous_args = 0
 331:lvgl/src/lv_draw/lv_img_buf.c ****     /* Allocate image descriptor */
 1772              		.loc 1 331 1 is_stmt 0 view .LVU600
 1773 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1774              	.LCFI22:
 1775              		.cfi_def_cfa_offset 24
 1776              		.cfi_offset 3, -24
 1777              		.cfi_offset 4, -20
 1778              		.cfi_offset 5, -16
 1779              		.cfi_offset 6, -12
 1780              		.cfi_offset 7, -8
 1781              		.cfi_offset 14, -4
 1782 0002 0746     		mov	r7, r0
 1783 0004 0E46     		mov	r6, r1
 1784 0006 1546     		mov	r5, r2
 333:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc == NULL)
 1785              		.loc 1 333 5 is_stmt 1 view .LVU601
 333:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc == NULL)
 1786              		.loc 1 333 26 is_stmt 0 view .LVU602
 1787 0008 0C20     		movs	r0, #12
 1788              	.LVL224:
 333:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc == NULL)
 1789              		.loc 1 333 26 view .LVU603
 1790 000a FFF7FEFF 		bl	lv_mem_alloc
 1791              	.LVL225:
 334:lvgl/src/lv_draw/lv_img_buf.c ****         return NULL;
 1792              		.loc 1 334 5 is_stmt 1 view .LVU604
 334:lvgl/src/lv_draw/lv_img_buf.c ****         return NULL;
 1793              		.loc 1 334 7 is_stmt 0 view .LVU605
 1794 000e 0446     		mov	r4, r0
 1795 0010 00B3     		cbz	r0, .L108
 337:lvgl/src/lv_draw/lv_img_buf.c **** 
 1796              		.loc 1 337 5 is_stmt 1 view .LVU606
 1797 0012 0C21     		movs	r1, #12
 1798 0014 FFF7FEFF 		bl	_lv_memset_00
 1799              	.LVL226:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 58


 340:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 1800              		.loc 1 340 5 view .LVU607
 340:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 1801              		.loc 1 340 22 is_stmt 0 view .LVU608
 1802 0018 2A46     		mov	r2, r5
 1803 001a 3146     		mov	r1, r6
 1804 001c 3846     		mov	r0, r7
 1805 001e FFF7FEFF 		bl	lv_img_buf_get_img_size
 1806              	.LVL227:
 340:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 1807              		.loc 1 340 20 view .LVU609
 1808 0022 6060     		str	r0, [r4, #4]
 341:lvgl/src/lv_draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1809              		.loc 1 341 5 is_stmt 1 view .LVU610
 341:lvgl/src/lv_draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1810              		.loc 1 341 7 is_stmt 0 view .LVU611
 1811 0024 C0B1     		cbz	r0, .L113
 347:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 1812              		.loc 1 347 5 is_stmt 1 view .LVU612
 347:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 1813              		.loc 1 347 17 is_stmt 0 view .LVU613
 1814 0026 FFF7FEFF 		bl	lv_mem_alloc
 1815              	.LVL228:
 347:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 1816              		.loc 1 347 15 view .LVU614
 1817 002a A060     		str	r0, [r4, #8]
 348:lvgl/src/lv_draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1818              		.loc 1 348 5 is_stmt 1 view .LVU615
 348:lvgl/src/lv_draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1819              		.loc 1 348 7 is_stmt 0 view .LVU616
 1820 002c C8B1     		cbz	r0, .L114
 352:lvgl/src/lv_draw/lv_img_buf.c **** 
 1821              		.loc 1 352 5 is_stmt 1 view .LVU617
 1822 002e 6168     		ldr	r1, [r4, #4]
 1823 0030 FFF7FEFF 		bl	_lv_memset_00
 1824              	.LVL229:
 355:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->header.w = w;
 1825              		.loc 1 355 5 view .LVU618
 355:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->header.w = w;
 1826              		.loc 1 355 29 is_stmt 0 view .LVU619
 1827 0034 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1828 0036 6FF34713 		bfc	r3, #5, #3
 1829 003a 2370     		strb	r3, [r4]
 356:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->header.h = h;
 1830              		.loc 1 356 5 is_stmt 1 view .LVU620
 356:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->header.h = h;
 1831              		.loc 1 356 19 is_stmt 0 view .LVU621
 1832 003c 2368     		ldr	r3, [r4]
 1833 003e 67F39423 		bfi	r3, r7, #10, #11
 1834 0042 2360     		str	r3, [r4]
 357:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->header.cf = cf;
 1835              		.loc 1 357 5 is_stmt 1 view .LVU622
 357:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->header.cf = cf;
 1836              		.loc 1 357 19 is_stmt 0 view .LVU623
 1837 0044 C3F30F42 		ubfx	r2, r3, #16, #16
 1838 0048 66F34F12 		bfi	r2, r6, #5, #11
 1839 004c 6280     		strh	r2, [r4, #2]	@ movhi
ARM GAS  D:\Temp\ccBYw3dY.s 			page 59


 358:lvgl/src/lv_draw/lv_img_buf.c ****     return dsc;
 1840              		.loc 1 358 5 is_stmt 1 view .LVU624
 358:lvgl/src/lv_draw/lv_img_buf.c ****     return dsc;
 1841              		.loc 1 358 20 is_stmt 0 view .LVU625
 1842 004e 65F30403 		bfi	r3, r5, #0, #5
 1843 0052 2370     		strb	r3, [r4]
 359:lvgl/src/lv_draw/lv_img_buf.c **** }
 1844              		.loc 1 359 5 is_stmt 1 view .LVU626
 1845              	.LVL230:
 1846              	.L108:
 360:lvgl/src/lv_draw/lv_img_buf.c **** 
 1847              		.loc 1 360 1 is_stmt 0 view .LVU627
 1848 0054 2046     		mov	r0, r4
 1849 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1850              	.LVL231:
 1851              	.L113:
 342:lvgl/src/lv_draw/lv_img_buf.c ****         return NULL;
 1852              		.loc 1 342 9 is_stmt 1 view .LVU628
 1853 0058 2046     		mov	r0, r4
 1854 005a FFF7FEFF 		bl	lv_mem_free
 1855              	.LVL232:
 343:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1856              		.loc 1 343 9 view .LVU629
 343:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1857              		.loc 1 343 16 is_stmt 0 view .LVU630
 1858 005e 0024     		movs	r4, #0
 1859              	.LVL233:
 343:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1860              		.loc 1 343 16 view .LVU631
 1861 0060 F8E7     		b	.L108
 1862              	.LVL234:
 1863              	.L114:
 349:lvgl/src/lv_draw/lv_img_buf.c ****         return NULL;
 1864              		.loc 1 349 9 is_stmt 1 view .LVU632
 1865 0062 2046     		mov	r0, r4
 1866 0064 FFF7FEFF 		bl	lv_mem_free
 1867              	.LVL235:
 350:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1868              		.loc 1 350 9 view .LVU633
 350:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1869              		.loc 1 350 16 is_stmt 0 view .LVU634
 1870 0068 0024     		movs	r4, #0
 1871              	.LVL236:
 350:lvgl/src/lv_draw/lv_img_buf.c ****     }
 1872              		.loc 1 350 16 view .LVU635
 1873 006a F3E7     		b	.L108
 1874              		.cfi_endproc
 1875              	.LFE172:
 1877              		.section	.text._lv_img_buf_transform_init,"ax",%progbits
 1878              		.align	1
 1879              		.global	_lv_img_buf_transform_init
 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
 1883              		.fpu fpv4-sp-d16
 1885              	_lv_img_buf_transform_init:
 1886              	.LVL237:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 60


 1887              	.LFB175:
 412:lvgl/src/lv_draw/lv_img_buf.c **** 
 413:lvgl/src/lv_draw/lv_img_buf.c **** #if LV_USE_IMG_TRANSFORM
 414:lvgl/src/lv_draw/lv_img_buf.c **** /**
 415:lvgl/src/lv_draw/lv_img_buf.c ****  * Initialize a descriptor to transform an image
 416:lvgl/src/lv_draw/lv_img_buf.c ****  * @param dsc pointer to an `lv_img_transform_dsc_t` variable whose `cfg` field is initialized
 417:lvgl/src/lv_draw/lv_img_buf.c ****  */
 418:lvgl/src/lv_draw/lv_img_buf.c **** void _lv_img_buf_transform_init(lv_img_transform_dsc_t * dsc)
 419:lvgl/src/lv_draw/lv_img_buf.c **** {
 1888              		.loc 1 419 1 is_stmt 1 view -0
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 0, uses_anonymous_args = 0
 1892              		.loc 1 419 1 is_stmt 0 view .LVU637
 1893 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1894              	.LCFI23:
 1895              		.cfi_def_cfa_offset 32
 1896              		.cfi_offset 4, -32
 1897              		.cfi_offset 5, -28
 1898              		.cfi_offset 6, -24
 1899              		.cfi_offset 7, -20
 1900              		.cfi_offset 8, -16
 1901              		.cfi_offset 9, -12
 1902              		.cfi_offset 10, -8
 1903              		.cfi_offset 14, -4
 1904 0004 0446     		mov	r4, r0
 420:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.pivot_x_256 = dsc->cfg.pivot_x * 256;
 1905              		.loc 1 420 5 is_stmt 1 view .LVU638
 1906              		.loc 1 420 36 is_stmt 0 view .LVU639
 1907 0006 B0F90830 		ldrsh	r3, [r0, #8]
 1908              		.loc 1 420 45 view .LVU640
 1909 000a 1B02     		lsls	r3, r3, #8
 1910              		.loc 1 420 26 view .LVU641
 1911 000c 4362     		str	r3, [r0, #36]
 421:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.pivot_y_256 = dsc->cfg.pivot_y * 256;
 1912              		.loc 1 421 5 is_stmt 1 view .LVU642
 1913              		.loc 1 421 36 is_stmt 0 view .LVU643
 1914 000e B0F90A30 		ldrsh	r3, [r0, #10]
 1915              		.loc 1 421 45 view .LVU644
 1916 0012 1B02     		lsls	r3, r3, #8
 1917              		.loc 1 421 26 view .LVU645
 1918 0014 8362     		str	r3, [r0, #40]
 422:lvgl/src/lv_draw/lv_img_buf.c **** 
 423:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t angle_low = dsc->cfg.angle / 10;
 1919              		.loc 1 423 5 is_stmt 1 view .LVU646
 1920              		.loc 1 423 33 is_stmt 0 view .LVU647
 1921 0016 B0F90C30 		ldrsh	r3, [r0, #12]
 1922              		.loc 1 423 40 view .LVU648
 1923 001a 414D     		ldr	r5, .L119
 1924 001c 85FB0312 		smull	r1, r2, r5, r3
 1925 0020 D817     		asrs	r0, r3, #31
 1926              	.LVL238:
 1927              		.loc 1 423 40 view .LVU649
 1928 0022 C0EBA200 		rsb	r0, r0, r2, asr #2
 1929 0026 00B2     		sxth	r0, r0
 1930              	.LVL239:
 424:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
ARM GAS  D:\Temp\ccBYw3dY.s 			page 61


 1931              		.loc 1 424 5 is_stmt 1 view .LVU650
 1932              		.loc 1 424 13 is_stmt 0 view .LVU651
 1933 0028 00F1010A 		add	r10, r0, #1
 1934              	.LVL240:
 425:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t angle_rem = dsc->cfg.angle  - (angle_low * 10);
 1935              		.loc 1 425 5 is_stmt 1 view .LVU652
 1936              		.loc 1 425 13 is_stmt 0 view .LVU653
 1937 002c 6FF00906 		mvn	r6, #9
 1938 0030 06FB0036 		mla	r6, r6, r0, r3
 1939              	.LVL241:
 426:lvgl/src/lv_draw/lv_img_buf.c **** 
 427:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t s1 = _lv_trigo_sin(-angle_low);
 1940              		.loc 1 427 5 is_stmt 1 view .LVU654
 1941              		.loc 1 427 18 is_stmt 0 view .LVU655
 1942 0034 87B2     		uxth	r7, r0
 1943 0036 7842     		rsbs	r0, r7, #0
 1944              	.LVL242:
 1945              		.loc 1 427 18 view .LVU656
 1946 0038 00B2     		sxth	r0, r0
 1947 003a FFF7FEFF 		bl	_lv_trigo_sin
 1948              	.LVL243:
 1949 003e 8046     		mov	r8, r0
 1950              	.LVL244:
 428:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t s2 = _lv_trigo_sin(-angle_high);
 1951              		.loc 1 428 5 is_stmt 1 view .LVU657
 1952              		.loc 1 428 18 is_stmt 0 view .LVU658
 1953 0040 1FFA8AFA 		uxth	r10, r10
 1954              	.LVL245:
 1955              		.loc 1 428 18 view .LVU659
 1956 0044 CAF10000 		rsb	r0, r10, #0
 1957              	.LVL246:
 1958              		.loc 1 428 18 view .LVU660
 1959 0048 00B2     		sxth	r0, r0
 1960 004a FFF7FEFF 		bl	_lv_trigo_sin
 1961              	.LVL247:
 1962 004e 8146     		mov	r9, r0
 1963              	.LVL248:
 429:lvgl/src/lv_draw/lv_img_buf.c **** 
 430:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t c1 = _lv_trigo_sin(-angle_low + 90);
 1964              		.loc 1 430 5 is_stmt 1 view .LVU661
 1965              		.loc 1 430 43 is_stmt 0 view .LVU662
 1966 0050 C7F15A00 		rsb	r0, r7, #90
 1967              	.LVL249:
 1968              		.loc 1 430 18 view .LVU663
 1969 0054 00B2     		sxth	r0, r0
 1970 0056 FFF7FEFF 		bl	_lv_trigo_sin
 1971              	.LVL250:
 1972 005a 0746     		mov	r7, r0
 1973              	.LVL251:
 431:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t c2 = _lv_trigo_sin(-angle_high + 90);
 1974              		.loc 1 431 5 is_stmt 1 view .LVU664
 1975              		.loc 1 431 44 is_stmt 0 view .LVU665
 1976 005c CAF15A00 		rsb	r0, r10, #90
 1977              	.LVL252:
 1978              		.loc 1 431 18 view .LVU666
 1979 0060 00B2     		sxth	r0, r0
 1980 0062 FFF7FEFF 		bl	_lv_trigo_sin
ARM GAS  D:\Temp\ccBYw3dY.s 			page 62


 1981              	.LVL253:
 432:lvgl/src/lv_draw/lv_img_buf.c **** 
 433:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.sinma = (s1 * (10 - angle_rem) + s2 * angle_rem) / 10;
 1982              		.loc 1 433 5 is_stmt 1 view .LVU667
 1983              		.loc 1 433 32 is_stmt 0 view .LVU668
 1984 0066 C6F10A03 		rsb	r3, r6, #10
 1985              		.loc 1 433 50 view .LVU669
 1986 006a 09FB06F2 		mul	r2, r9, r6
 1987              		.loc 1 433 45 view .LVU670
 1988 006e 08FB0322 		mla	r2, r8, r3, r2
 1989              		.loc 1 433 63 view .LVU671
 1990 0072 85FB02C1 		smull	ip, r1, r5, r2
 1991 0076 D217     		asrs	r2, r2, #31
 1992 0078 C2EBA102 		rsb	r2, r2, r1, asr #2
 434:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 1993              		.loc 1 434 5 is_stmt 1 view .LVU672
 1994              		.loc 1 434 50 is_stmt 0 view .LVU673
 1995 007c 00FB06F0 		mul	r0, r0, r6
 1996              	.LVL254:
 1997              		.loc 1 434 45 view .LVU674
 1998 0080 07FB0303 		mla	r3, r7, r3, r0
 1999              		.loc 1 434 63 view .LVU675
 2000 0084 85FB0315 		smull	r1, r5, r5, r3
 2001 0088 DB17     		asrs	r3, r3, #31
 2002 008a C3EBA503 		rsb	r3, r3, r5, asr #2
 435:lvgl/src/lv_draw/lv_img_buf.c **** 
 436:lvgl/src/lv_draw/lv_img_buf.c ****     /*Use smaller value to avoid overflow*/
 437:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.sinma = dsc->tmp.sinma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 2003              		.loc 1 437 5 is_stmt 1 view .LVU676
 2004              		.loc 1 437 37 is_stmt 0 view .LVU677
 2005 008e 5211     		asrs	r2, r2, #5
 2006              		.loc 1 437 20 view .LVU678
 2007 0090 E262     		str	r2, [r4, #44]
 438:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.cosma = dsc->tmp.cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 2008              		.loc 1 438 5 is_stmt 1 view .LVU679
 2009              		.loc 1 438 37 is_stmt 0 view .LVU680
 2010 0092 5B11     		asrs	r3, r3, #5
 2011              		.loc 1 438 20 view .LVU681
 2012 0094 2363     		str	r3, [r4, #48]
 439:lvgl/src/lv_draw/lv_img_buf.c **** 
 440:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.chroma_keyed = lv_img_cf_is_chroma_keyed(dsc->cfg.cf) ? 1 : 0;
 2013              		.loc 1 440 5 is_stmt 1 view .LVU682
 2014              		.loc 1 440 29 is_stmt 0 view .LVU683
 2015 0096 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 2016 0098 FFF7FEFF 		bl	lv_img_cf_is_chroma_keyed
 2017              	.LVL255:
 2018              		.loc 1 440 27 view .LVU684
 2019 009c 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2020 00a0 60F30003 		bfi	r3, r0, #0, #1
 2021 00a4 84F83430 		strb	r3, [r4, #52]
 441:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.has_alpha = lv_img_cf_has_alpha(dsc->cfg.cf) ? 1 : 0;
 2022              		.loc 1 441 5 is_stmt 1 view .LVU685
 2023              		.loc 1 441 26 is_stmt 0 view .LVU686
 2024 00a8 A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 2025 00aa FFF7FEFF 		bl	lv_img_cf_has_alpha
 2026              	.LVL256:
 2027              		.loc 1 441 24 view .LVU687
ARM GAS  D:\Temp\ccBYw3dY.s 			page 63


 2028 00ae 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2029 00b2 60F34103 		bfi	r3, r0, #1, #1
 2030 00b6 84F83430 		strb	r3, [r4, #52]
 442:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->cfg.cf == LV_IMG_CF_TRUE_COLOR || dsc->cfg.cf == LV_IMG_CF_TRUE_COLOR_ALPHA ||
 2031              		.loc 1 442 5 is_stmt 1 view .LVU688
 2032              		.loc 1 442 16 is_stmt 0 view .LVU689
 2033 00ba A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 2034              		.loc 1 442 89 view .LVU690
 2035 00bc 131F     		subs	r3, r2, #4
 2036 00be DBB2     		uxtb	r3, r3
 2037              		.loc 1 442 7 view .LVU691
 2038 00c0 022B     		cmp	r3, #2
 2039 00c2 25D8     		bhi	.L116
 443:lvgl/src/lv_draw/lv_img_buf.c ****        dsc->cfg.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 444:lvgl/src/lv_draw/lv_img_buf.c ****         dsc->tmp.native_color = 1;
 2040              		.loc 1 444 9 is_stmt 1 view .LVU692
 2041              		.loc 1 444 31 is_stmt 0 view .LVU693
 2042 00c4 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2043 00c8 43F00403 		orr	r3, r3, #4
 2044 00cc 84F83430 		strb	r3, [r4, #52]
 2045              	.L117:
 445:lvgl/src/lv_draw/lv_img_buf.c ****     }
 446:lvgl/src/lv_draw/lv_img_buf.c ****     else {
 447:lvgl/src/lv_draw/lv_img_buf.c ****         dsc->tmp.native_color = 0;
 448:lvgl/src/lv_draw/lv_img_buf.c ****     }
 449:lvgl/src/lv_draw/lv_img_buf.c **** 
 450:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.img_dsc.data = dsc->cfg.src;
 2046              		.loc 1 450 5 is_stmt 1 view .LVU694
 2047              		.loc 1 450 37 is_stmt 0 view .LVU695
 2048 00d0 2368     		ldr	r3, [r4]
 2049              		.loc 1 450 27 view .LVU696
 2050 00d2 2362     		str	r3, [r4, #32]
 451:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.always_zero = 0;
 2051              		.loc 1 451 5 is_stmt 1 view .LVU697
 2052              		.loc 1 451 41 is_stmt 0 view .LVU698
 2053 00d4 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 452:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.cf = dsc->cfg.cf;
 2054              		.loc 1 452 5 is_stmt 1 view .LVU699
 2055              		.loc 1 452 32 is_stmt 0 view .LVU700
 2056 00d6 03F01F03 		and	r3, r3, #31
 2057 00da 62F30403 		bfi	r3, r2, #0, #5
 2058 00de 2376     		strb	r3, [r4, #24]
 453:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.w = dsc->cfg.src_w;
 2059              		.loc 1 453 5 is_stmt 1 view .LVU701
 2060              		.loc 1 453 41 is_stmt 0 view .LVU702
 2061 00e0 A288     		ldrh	r2, [r4, #4]
 2062              		.loc 1 453 31 view .LVU703
 2063 00e2 A369     		ldr	r3, [r4, #24]
 2064 00e4 62F39423 		bfi	r3, r2, #10, #11
 2065 00e8 A361     		str	r3, [r4, #24]
 454:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.h = dsc->cfg.src_h;
 2066              		.loc 1 454 5 is_stmt 1 view .LVU704
 2067              		.loc 1 454 41 is_stmt 0 view .LVU705
 2068 00ea E288     		ldrh	r2, [r4, #6]
 2069              		.loc 1 454 31 view .LVU706
 2070 00ec C3F30F43 		ubfx	r3, r3, #16, #16
 2071 00f0 62F34F13 		bfi	r3, r2, #5, #11
ARM GAS  D:\Temp\ccBYw3dY.s 			page 64


 2072 00f4 6383     		strh	r3, [r4, #26]	@ movhi
 455:lvgl/src/lv_draw/lv_img_buf.c **** 
 456:lvgl/src/lv_draw/lv_img_buf.c ****     /* The inverse of the zoom will be sued during the transformation
 457:lvgl/src/lv_draw/lv_img_buf.c ****      *  + dsc->cfg.zoom / 2 for rounding*/
 458:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->tmp.zoom_inv = (((256 * 256) << _LV_ZOOM_INV_UPSCALE) + dsc->cfg.zoom / 2) / dsc->cfg.zoom
 2073              		.loc 1 458 5 is_stmt 1 view .LVU707
 2074              		.loc 1 458 74 is_stmt 0 view .LVU708
 2075 00f6 E289     		ldrh	r2, [r4, #14]
 2076              		.loc 1 458 80 view .LVU709
 2077 00f8 5308     		lsrs	r3, r2, #1
 2078              		.loc 1 458 64 view .LVU710
 2079 00fa 03F50013 		add	r3, r3, #2097152
 2080              		.loc 1 458 85 view .LVU711
 2081 00fe 93FBF2F3 		sdiv	r3, r3, r2
 2082              		.loc 1 458 23 view .LVU712
 2083 0102 A363     		str	r3, [r4, #56]
 459:lvgl/src/lv_draw/lv_img_buf.c **** 
 460:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->res.opa = LV_OPA_COVER;
 2084              		.loc 1 460 5 is_stmt 1 view .LVU713
 2085              		.loc 1 460 18 is_stmt 0 view .LVU714
 2086 0104 FF23     		movs	r3, #255
 2087 0106 A375     		strb	r3, [r4, #22]
 461:lvgl/src/lv_draw/lv_img_buf.c ****     dsc->res.color = dsc->cfg.color;
 2088              		.loc 1 461 5 is_stmt 1 view .LVU715
 2089              		.loc 1 461 20 is_stmt 0 view .LVU716
 2090 0108 238A     		ldrh	r3, [r4, #16]
 2091 010a A382     		strh	r3, [r4, #20]	@ movhi
 462:lvgl/src/lv_draw/lv_img_buf.c **** }
 2092              		.loc 1 462 1 view .LVU717
 2093 010c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2094              	.LVL257:
 2095              	.L116:
 447:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2096              		.loc 1 447 9 is_stmt 1 view .LVU718
 447:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2097              		.loc 1 447 31 is_stmt 0 view .LVU719
 2098 0110 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2099 0114 6FF38203 		bfc	r3, #2, #1
 2100 0118 84F83430 		strb	r3, [r4, #52]
 2101 011c D8E7     		b	.L117
 2102              	.L120:
 2103 011e 00BF     		.align	2
 2104              	.L119:
 2105 0120 67666666 		.word	1717986919
 2106              		.cfi_endproc
 2107              	.LFE175:
 2109              		.section	.text._lv_img_buf_get_transformed_area,"ax",%progbits
 2110              		.align	1
 2111              		.global	_lv_img_buf_get_transformed_area
 2112              		.syntax unified
 2113              		.thumb
 2114              		.thumb_func
 2115              		.fpu fpv4-sp-d16
 2117              	_lv_img_buf_get_transformed_area:
 2118              	.LVL258:
 2119              	.LFB176:
 463:lvgl/src/lv_draw/lv_img_buf.c **** #endif
ARM GAS  D:\Temp\ccBYw3dY.s 			page 65


 464:lvgl/src/lv_draw/lv_img_buf.c **** 
 465:lvgl/src/lv_draw/lv_img_buf.c **** /**
 466:lvgl/src/lv_draw/lv_img_buf.c ****  * Get the area of a rectangle if its rotated and scaled
 467:lvgl/src/lv_draw/lv_img_buf.c ****  * @param res store the coordinates here
 468:lvgl/src/lv_draw/lv_img_buf.c ****  * @param w width of the rectangle to transform
 469:lvgl/src/lv_draw/lv_img_buf.c ****  * @param h height of the rectangle to transform
 470:lvgl/src/lv_draw/lv_img_buf.c ****  * @param angle angle of rotation
 471:lvgl/src/lv_draw/lv_img_buf.c ****  * @param zoom zoom, (256 no zoom)
 472:lvgl/src/lv_draw/lv_img_buf.c ****  * @param pivot x,y pivot coordinates of rotation
 473:lvgl/src/lv_draw/lv_img_buf.c ****  */
 474:lvgl/src/lv_draw/lv_img_buf.c **** void _lv_img_buf_get_transformed_area(lv_area_t * res, lv_coord_t w, lv_coord_t h, int16_t angle, u
 475:lvgl/src/lv_draw/lv_img_buf.c ****                                       const lv_point_t * pivot)
 476:lvgl/src/lv_draw/lv_img_buf.c **** {
 2120              		.loc 1 476 1 is_stmt 1 view -0
 2121              		.cfi_startproc
 2122              		@ args = 8, pretend = 0, frame = 0
 2123              		@ frame_needed = 0, uses_anonymous_args = 0
 2124              		.loc 1 476 1 is_stmt 0 view .LVU721
 2125 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2126              	.LCFI24:
 2127              		.cfi_def_cfa_offset 40
 2128              		.cfi_offset 3, -40
 2129              		.cfi_offset 4, -36
 2130              		.cfi_offset 5, -32
 2131              		.cfi_offset 6, -28
 2132              		.cfi_offset 7, -24
 2133              		.cfi_offset 8, -20
 2134              		.cfi_offset 9, -16
 2135              		.cfi_offset 10, -12
 2136              		.cfi_offset 11, -8
 2137              		.cfi_offset 14, -4
 2138 0004 BDF828C0 		ldrh	ip, [sp, #40]
 2139 0008 0B9C     		ldr	r4, [sp, #44]
 477:lvgl/src/lv_draw/lv_img_buf.c **** #if LV_USE_IMG_TRANSFORM
 478:lvgl/src/lv_draw/lv_img_buf.c ****     if(angle == 0 && zoom == LV_IMG_ZOOM_NONE) {
 2140              		.loc 1 478 5 is_stmt 1 view .LVU722
 2141              		.loc 1 478 7 is_stmt 0 view .LVU723
 2142 000a 1E46     		mov	r6, r3
 2143 000c 13B9     		cbnz	r3, .L122
 2144              		.loc 1 478 19 discriminator 1 view .LVU724
 2145 000e BCF5807F 		cmp	ip, #256
 2146 0012 32D0     		beq	.L127
 2147              	.L122:
 479:lvgl/src/lv_draw/lv_img_buf.c ****         res->x1 = 0;
 480:lvgl/src/lv_draw/lv_img_buf.c ****         res->y1 = 0;
 481:lvgl/src/lv_draw/lv_img_buf.c ****         res->x2 = w - 1;
 482:lvgl/src/lv_draw/lv_img_buf.c ****         res->y2 = h - 1;
 483:lvgl/src/lv_draw/lv_img_buf.c ****         return;
 484:lvgl/src/lv_draw/lv_img_buf.c ****     }
 485:lvgl/src/lv_draw/lv_img_buf.c **** 
 486:lvgl/src/lv_draw/lv_img_buf.c ****     res->x1 = (((-pivot->x) * zoom) >> 8) - 1;
 2148              		.loc 1 486 5 is_stmt 1 view .LVU725
 2149              		.loc 1 486 24 is_stmt 0 view .LVU726
 2150 0014 B4F90070 		ldrsh	r7, [r4]
 2151              		.loc 1 486 18 view .LVU727
 2152 0018 7F42     		rsbs	r7, r7, #0
 2153              		.loc 1 486 29 view .LVU728
ARM GAS  D:\Temp\ccBYw3dY.s 			page 66


 2154 001a 0CFB07F7 		mul	r7, ip, r7
 2155              		.loc 1 486 37 view .LVU729
 2156 001e 3F12     		asrs	r7, r7, #8
 2157              		.loc 1 486 43 view .LVU730
 2158 0020 013F     		subs	r7, r7, #1
 2159 0022 BFB2     		uxth	r7, r7
 2160              		.loc 1 486 13 view .LVU731
 2161 0024 0780     		strh	r7, [r0]	@ movhi
 487:lvgl/src/lv_draw/lv_img_buf.c ****     res->y1 = (((-pivot->y) * zoom) >> 8) - 1;
 2162              		.loc 1 487 5 is_stmt 1 view .LVU732
 2163              		.loc 1 487 24 is_stmt 0 view .LVU733
 2164 0026 B4F90250 		ldrsh	r5, [r4, #2]
 2165              		.loc 1 487 18 view .LVU734
 2166 002a 6D42     		rsbs	r5, r5, #0
 2167              		.loc 1 487 29 view .LVU735
 2168 002c 05FB0CF5 		mul	r5, r5, ip
 2169              		.loc 1 487 37 view .LVU736
 2170 0030 2D12     		asrs	r5, r5, #8
 2171              		.loc 1 487 43 view .LVU737
 2172 0032 013D     		subs	r5, r5, #1
 2173 0034 ADB2     		uxth	r5, r5
 2174              		.loc 1 487 13 view .LVU738
 2175 0036 4580     		strh	r5, [r0, #2]	@ movhi
 488:lvgl/src/lv_draw/lv_img_buf.c ****     res->x2 = (((w - pivot->x) * zoom) >> 8) + 2;
 2176              		.loc 1 488 5 is_stmt 1 view .LVU739
 2177              		.loc 1 488 27 is_stmt 0 view .LVU740
 2178 0038 B4F90030 		ldrsh	r3, [r4]
 2179              	.LVL259:
 2180              		.loc 1 488 20 view .LVU741
 2181 003c C91A     		subs	r1, r1, r3
 2182              	.LVL260:
 2183              		.loc 1 488 32 view .LVU742
 2184 003e 01FB0CF1 		mul	r1, r1, ip
 2185              		.loc 1 488 40 view .LVU743
 2186 0042 0912     		asrs	r1, r1, #8
 2187              		.loc 1 488 46 view .LVU744
 2188 0044 0231     		adds	r1, r1, #2
 2189 0046 89B2     		uxth	r1, r1
 2190              		.loc 1 488 13 view .LVU745
 2191 0048 8180     		strh	r1, [r0, #4]	@ movhi
 489:lvgl/src/lv_draw/lv_img_buf.c ****     res->y2 = (((h - pivot->y) * zoom) >> 8) + 2;
 2192              		.loc 1 489 5 is_stmt 1 view .LVU746
 2193              		.loc 1 489 27 is_stmt 0 view .LVU747
 2194 004a B4F90230 		ldrsh	r3, [r4, #2]
 2195              		.loc 1 489 20 view .LVU748
 2196 004e D31A     		subs	r3, r2, r3
 2197              		.loc 1 489 32 view .LVU749
 2198 0050 03FB0CF3 		mul	r3, r3, ip
 2199              		.loc 1 489 40 view .LVU750
 2200 0054 1B12     		asrs	r3, r3, #8
 2201              		.loc 1 489 46 view .LVU751
 2202 0056 0233     		adds	r3, r3, #2
 2203 0058 9BB2     		uxth	r3, r3
 2204              		.loc 1 489 13 view .LVU752
 2205 005a C380     		strh	r3, [r0, #6]	@ movhi
 490:lvgl/src/lv_draw/lv_img_buf.c **** 
 491:lvgl/src/lv_draw/lv_img_buf.c ****     if(angle == 0) {
ARM GAS  D:\Temp\ccBYw3dY.s 			page 67


 2206              		.loc 1 491 5 is_stmt 1 view .LVU753
 2207              		.loc 1 491 7 is_stmt 0 view .LVU754
 2208 005c A6B9     		cbnz	r6, .L124
 492:lvgl/src/lv_draw/lv_img_buf.c ****         res->x1 += pivot->x;
 2209              		.loc 1 492 9 is_stmt 1 view .LVU755
 2210              		.loc 1 492 25 is_stmt 0 view .LVU756
 2211 005e 2288     		ldrh	r2, [r4]
 2212              	.LVL261:
 2213              		.loc 1 492 17 view .LVU757
 2214 0060 1744     		add	r7, r7, r2
 2215 0062 0780     		strh	r7, [r0]	@ movhi
 493:lvgl/src/lv_draw/lv_img_buf.c ****         res->y1 += pivot->y;
 2216              		.loc 1 493 9 is_stmt 1 view .LVU758
 2217              		.loc 1 493 25 is_stmt 0 view .LVU759
 2218 0064 6288     		ldrh	r2, [r4, #2]
 2219              		.loc 1 493 17 view .LVU760
 2220 0066 1544     		add	r5, r5, r2
 2221 0068 4580     		strh	r5, [r0, #2]	@ movhi
 494:lvgl/src/lv_draw/lv_img_buf.c ****         res->x2 += pivot->x;
 2222              		.loc 1 494 9 is_stmt 1 view .LVU761
 2223              		.loc 1 494 25 is_stmt 0 view .LVU762
 2224 006a 2288     		ldrh	r2, [r4]
 2225              		.loc 1 494 17 view .LVU763
 2226 006c 1144     		add	r1, r1, r2
 2227 006e 8180     		strh	r1, [r0, #4]	@ movhi
 495:lvgl/src/lv_draw/lv_img_buf.c ****         res->y2 += pivot->y;
 2228              		.loc 1 495 9 is_stmt 1 view .LVU764
 2229              		.loc 1 495 25 is_stmt 0 view .LVU765
 2230 0070 6288     		ldrh	r2, [r4, #2]
 2231              		.loc 1 495 17 view .LVU766
 2232 0072 1344     		add	r3, r3, r2
 2233 0074 C380     		strh	r3, [r0, #6]	@ movhi
 496:lvgl/src/lv_draw/lv_img_buf.c ****         return;
 2234              		.loc 1 496 9 is_stmt 1 view .LVU767
 2235              	.LVL262:
 2236              	.L121:
 497:lvgl/src/lv_draw/lv_img_buf.c ****     }
 498:lvgl/src/lv_draw/lv_img_buf.c **** 
 499:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t angle_low = angle / 10;
 500:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 501:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t angle_rem = angle  - (angle_low * 10);
 502:lvgl/src/lv_draw/lv_img_buf.c **** 
 503:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t s1 = _lv_trigo_sin(angle_low);
 504:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t s2 = _lv_trigo_sin(angle_high);
 505:lvgl/src/lv_draw/lv_img_buf.c **** 
 506:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t c1 = _lv_trigo_sin(angle_low + 90);
 507:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t c2 = _lv_trigo_sin(angle_high + 90);
 508:lvgl/src/lv_draw/lv_img_buf.c **** 
 509:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t sinma = (s1 * (10 - angle_rem) + s2 * angle_rem) / 10;
 510:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 511:lvgl/src/lv_draw/lv_img_buf.c **** 
 512:lvgl/src/lv_draw/lv_img_buf.c ****     /*Use smaller value to avoid overflow*/
 513:lvgl/src/lv_draw/lv_img_buf.c ****     sinma = sinma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 514:lvgl/src/lv_draw/lv_img_buf.c ****     cosma = cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 515:lvgl/src/lv_draw/lv_img_buf.c **** 
 516:lvgl/src/lv_draw/lv_img_buf.c ****     lv_point_t lt;
 517:lvgl/src/lv_draw/lv_img_buf.c ****     lv_point_t rt;
ARM GAS  D:\Temp\ccBYw3dY.s 			page 68


 518:lvgl/src/lv_draw/lv_img_buf.c ****     lv_point_t lb;
 519:lvgl/src/lv_draw/lv_img_buf.c ****     lv_point_t rb;
 520:lvgl/src/lv_draw/lv_img_buf.c **** 
 521:lvgl/src/lv_draw/lv_img_buf.c ****     lv_coord_t xt;
 522:lvgl/src/lv_draw/lv_img_buf.c ****     lv_coord_t yt;
 523:lvgl/src/lv_draw/lv_img_buf.c **** 
 524:lvgl/src/lv_draw/lv_img_buf.c ****     xt = res->x1;
 525:lvgl/src/lv_draw/lv_img_buf.c ****     yt = res->y1;
 526:lvgl/src/lv_draw/lv_img_buf.c ****     lt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 527:lvgl/src/lv_draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 528:lvgl/src/lv_draw/lv_img_buf.c **** 
 529:lvgl/src/lv_draw/lv_img_buf.c ****     xt = res->x2;
 530:lvgl/src/lv_draw/lv_img_buf.c ****     yt = res->y1;
 531:lvgl/src/lv_draw/lv_img_buf.c ****     rt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 532:lvgl/src/lv_draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 533:lvgl/src/lv_draw/lv_img_buf.c **** 
 534:lvgl/src/lv_draw/lv_img_buf.c ****     xt = res->x1;
 535:lvgl/src/lv_draw/lv_img_buf.c ****     yt = res->y2;
 536:lvgl/src/lv_draw/lv_img_buf.c ****     lb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 537:lvgl/src/lv_draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 538:lvgl/src/lv_draw/lv_img_buf.c **** 
 539:lvgl/src/lv_draw/lv_img_buf.c ****     xt = res->x2;
 540:lvgl/src/lv_draw/lv_img_buf.c ****     yt = res->y2;
 541:lvgl/src/lv_draw/lv_img_buf.c ****     rb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 542:lvgl/src/lv_draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 543:lvgl/src/lv_draw/lv_img_buf.c **** 
 544:lvgl/src/lv_draw/lv_img_buf.c ****     res->x1 = LV_MATH_MIN4(lb.x, lt.x, rb.x, rt.x);
 545:lvgl/src/lv_draw/lv_img_buf.c ****     res->x2 = LV_MATH_MAX4(lb.x, lt.x, rb.x, rt.x);
 546:lvgl/src/lv_draw/lv_img_buf.c ****     res->y1 = LV_MATH_MIN4(lb.y, lt.y, rb.y, rt.y);
 547:lvgl/src/lv_draw/lv_img_buf.c ****     res->y2 = LV_MATH_MAX4(lb.y, lt.y, rb.y, rt.y);
 548:lvgl/src/lv_draw/lv_img_buf.c **** #else
 549:lvgl/src/lv_draw/lv_img_buf.c ****     LV_UNUSED(angle);
 550:lvgl/src/lv_draw/lv_img_buf.c ****     LV_UNUSED(zoom);
 551:lvgl/src/lv_draw/lv_img_buf.c ****     LV_UNUSED(pivot);
 552:lvgl/src/lv_draw/lv_img_buf.c ****     res->x1 = 0;
 553:lvgl/src/lv_draw/lv_img_buf.c ****     res->y1 = 0;
 554:lvgl/src/lv_draw/lv_img_buf.c ****     res->x2 = w - 1;
 555:lvgl/src/lv_draw/lv_img_buf.c ****     res->y2 = h - 1;
 556:lvgl/src/lv_draw/lv_img_buf.c **** #endif
 557:lvgl/src/lv_draw/lv_img_buf.c **** }
 2237              		.loc 1 557 1 is_stmt 0 view .LVU768
 2238 0076 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2239              	.LVL263:
 2240              	.L127:
 479:lvgl/src/lv_draw/lv_img_buf.c ****         res->y1 = 0;
 2241              		.loc 1 479 9 is_stmt 1 view .LVU769
 479:lvgl/src/lv_draw/lv_img_buf.c ****         res->y1 = 0;
 2242              		.loc 1 479 17 is_stmt 0 view .LVU770
 2243 007a 0380     		strh	r3, [r0]	@ movhi
 480:lvgl/src/lv_draw/lv_img_buf.c ****         res->x2 = w - 1;
 2244              		.loc 1 480 9 is_stmt 1 view .LVU771
 480:lvgl/src/lv_draw/lv_img_buf.c ****         res->x2 = w - 1;
 2245              		.loc 1 480 17 is_stmt 0 view .LVU772
 2246 007c 4380     		strh	r3, [r0, #2]	@ movhi
 481:lvgl/src/lv_draw/lv_img_buf.c ****         res->y2 = h - 1;
 2247              		.loc 1 481 9 is_stmt 1 view .LVU773
 481:lvgl/src/lv_draw/lv_img_buf.c ****         res->y2 = h - 1;
ARM GAS  D:\Temp\ccBYw3dY.s 			page 69


 2248              		.loc 1 481 21 is_stmt 0 view .LVU774
 2249 007e 0139     		subs	r1, r1, #1
 2250              	.LVL264:
 481:lvgl/src/lv_draw/lv_img_buf.c ****         res->y2 = h - 1;
 2251              		.loc 1 481 17 view .LVU775
 2252 0080 8180     		strh	r1, [r0, #4]	@ movhi
 482:lvgl/src/lv_draw/lv_img_buf.c ****         return;
 2253              		.loc 1 482 9 is_stmt 1 view .LVU776
 482:lvgl/src/lv_draw/lv_img_buf.c ****         return;
 2254              		.loc 1 482 21 is_stmt 0 view .LVU777
 2255 0082 013A     		subs	r2, r2, #1
 2256              	.LVL265:
 482:lvgl/src/lv_draw/lv_img_buf.c ****         return;
 2257              		.loc 1 482 17 view .LVU778
 2258 0084 C280     		strh	r2, [r0, #6]	@ movhi
 483:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2259              		.loc 1 483 9 is_stmt 1 view .LVU779
 2260 0086 F6E7     		b	.L121
 2261              	.LVL266:
 2262              	.L124:
 483:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2263              		.loc 1 483 9 is_stmt 0 view .LVU780
 2264 0088 0746     		mov	r7, r0
 499:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 2265              		.loc 1 499 5 is_stmt 1 view .LVU781
 499:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 2266              		.loc 1 499 31 is_stmt 0 view .LVU782
 2267 008a DFF85491 		ldr	r9, .L128
 2268 008e 89FB0630 		smull	r3, r0, r9, r6
 2269              	.LVL267:
 499:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 2270              		.loc 1 499 31 view .LVU783
 2271 0092 F517     		asrs	r5, r6, #31
 2272 0094 C5EBA005 		rsb	r5, r5, r0, asr #2
 2273 0098 2DB2     		sxth	r5, r5
 2274              	.LVL268:
 500:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t angle_rem = angle  - (angle_low * 10);
 2275              		.loc 1 500 5 is_stmt 1 view .LVU784
 500:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t angle_rem = angle  - (angle_low * 10);
 2276              		.loc 1 500 13 is_stmt 0 view .LVU785
 2277 009a 05F1010A 		add	r10, r5, #1
 2278              	.LVL269:
 501:lvgl/src/lv_draw/lv_img_buf.c **** 
 2279              		.loc 1 501 5 is_stmt 1 view .LVU786
 501:lvgl/src/lv_draw/lv_img_buf.c **** 
 2280              		.loc 1 501 13 is_stmt 0 view .LVU787
 2281 009e 6FF00900 		mvn	r0, #9
 2282 00a2 00FB0566 		mla	r6, r0, r5, r6
 2283              	.LVL270:
 503:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t s2 = _lv_trigo_sin(angle_high);
 2284              		.loc 1 503 5 is_stmt 1 view .LVU788
 503:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t s2 = _lv_trigo_sin(angle_high);
 2285              		.loc 1 503 18 is_stmt 0 view .LVU789
 2286 00a6 2846     		mov	r0, r5
 2287 00a8 FFF7FEFF 		bl	_lv_trigo_sin
 2288              	.LVL271:
 503:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t s2 = _lv_trigo_sin(angle_high);
ARM GAS  D:\Temp\ccBYw3dY.s 			page 70


 2289              		.loc 1 503 18 view .LVU790
 2290 00ac 8046     		mov	r8, r0
 2291              	.LVL272:
 504:lvgl/src/lv_draw/lv_img_buf.c **** 
 2292              		.loc 1 504 5 is_stmt 1 view .LVU791
 504:lvgl/src/lv_draw/lv_img_buf.c **** 
 2293              		.loc 1 504 18 is_stmt 0 view .LVU792
 2294 00ae 0FFA8AF0 		sxth	r0, r10
 2295              	.LVL273:
 504:lvgl/src/lv_draw/lv_img_buf.c **** 
 2296              		.loc 1 504 18 view .LVU793
 2297 00b2 FFF7FEFF 		bl	_lv_trigo_sin
 2298              	.LVL274:
 2299 00b6 8346     		mov	fp, r0
 2300              	.LVL275:
 506:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t c2 = _lv_trigo_sin(angle_high + 90);
 2301              		.loc 1 506 5 is_stmt 1 view .LVU794
 506:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t c2 = _lv_trigo_sin(angle_high + 90);
 2302              		.loc 1 506 42 is_stmt 0 view .LVU795
 2303 00b8 05F15A00 		add	r0, r5, #90
 2304              	.LVL276:
 506:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t c2 = _lv_trigo_sin(angle_high + 90);
 2305              		.loc 1 506 18 view .LVU796
 2306 00bc 00B2     		sxth	r0, r0
 2307 00be FFF7FEFF 		bl	_lv_trigo_sin
 2308              	.LVL277:
 2309 00c2 0546     		mov	r5, r0
 2310              	.LVL278:
 507:lvgl/src/lv_draw/lv_img_buf.c **** 
 2311              		.loc 1 507 5 is_stmt 1 view .LVU797
 507:lvgl/src/lv_draw/lv_img_buf.c **** 
 2312              		.loc 1 507 43 is_stmt 0 view .LVU798
 2313 00c4 0AF15A00 		add	r0, r10, #90
 2314              	.LVL279:
 507:lvgl/src/lv_draw/lv_img_buf.c **** 
 2315              		.loc 1 507 18 view .LVU799
 2316 00c8 00B2     		sxth	r0, r0
 2317 00ca FFF7FEFF 		bl	_lv_trigo_sin
 2318              	.LVL280:
 509:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2319              		.loc 1 509 5 is_stmt 1 view .LVU800
 509:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2320              		.loc 1 509 31 is_stmt 0 view .LVU801
 2321 00ce C6F10A01 		rsb	r1, r6, #10
 509:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2322              		.loc 1 509 49 view .LVU802
 2323 00d2 0BFB06FB 		mul	fp, fp, r6
 2324              	.LVL281:
 509:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2325              		.loc 1 509 44 view .LVU803
 2326 00d6 08FB01B8 		mla	r8, r8, r1, fp
 2327              	.LVL282:
 509:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2328              		.loc 1 509 13 view .LVU804
 2329 00da 89FB0832 		smull	r3, r2, r9, r8
 2330 00de 4FEAE878 		asr	r8, r8, #31
 2331 00e2 C8EBA202 		rsb	r2, r8, r2, asr #2
ARM GAS  D:\Temp\ccBYw3dY.s 			page 71


 2332              	.LVL283:
 510:lvgl/src/lv_draw/lv_img_buf.c **** 
 2333              		.loc 1 510 5 is_stmt 1 view .LVU805
 510:lvgl/src/lv_draw/lv_img_buf.c **** 
 2334              		.loc 1 510 49 is_stmt 0 view .LVU806
 2335 00e6 00FB06F6 		mul	r6, r0, r6
 2336              	.LVL284:
 510:lvgl/src/lv_draw/lv_img_buf.c **** 
 2337              		.loc 1 510 44 view .LVU807
 2338 00ea 05FB0165 		mla	r5, r5, r1, r6
 2339              	.LVL285:
 510:lvgl/src/lv_draw/lv_img_buf.c **** 
 2340              		.loc 1 510 13 view .LVU808
 2341 00ee 89FB0539 		smull	r3, r9, r9, r5
 2342 00f2 E917     		asrs	r1, r5, #31
 2343 00f4 C1EBA901 		rsb	r1, r1, r9, asr #2
 2344              	.LVL286:
 513:lvgl/src/lv_draw/lv_img_buf.c ****     cosma = cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 2345              		.loc 1 513 5 is_stmt 1 view .LVU809
 513:lvgl/src/lv_draw/lv_img_buf.c ****     cosma = cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 2346              		.loc 1 513 11 is_stmt 0 view .LVU810
 2347 00f8 5211     		asrs	r2, r2, #5
 2348              	.LVL287:
 514:lvgl/src/lv_draw/lv_img_buf.c **** 
 2349              		.loc 1 514 5 is_stmt 1 view .LVU811
 514:lvgl/src/lv_draw/lv_img_buf.c **** 
 2350              		.loc 1 514 11 is_stmt 0 view .LVU812
 2351 00fa 4911     		asrs	r1, r1, #5
 2352              	.LVL288:
 516:lvgl/src/lv_draw/lv_img_buf.c ****     lv_point_t rt;
 2353              		.loc 1 516 5 is_stmt 1 view .LVU813
 517:lvgl/src/lv_draw/lv_img_buf.c ****     lv_point_t lb;
 2354              		.loc 1 517 5 view .LVU814
 518:lvgl/src/lv_draw/lv_img_buf.c ****     lv_point_t rb;
 2355              		.loc 1 518 5 view .LVU815
 519:lvgl/src/lv_draw/lv_img_buf.c **** 
 2356              		.loc 1 519 5 view .LVU816
 521:lvgl/src/lv_draw/lv_img_buf.c ****     lv_coord_t yt;
 2357              		.loc 1 521 5 view .LVU817
 522:lvgl/src/lv_draw/lv_img_buf.c **** 
 2358              		.loc 1 522 5 view .LVU818
 524:lvgl/src/lv_draw/lv_img_buf.c ****     yt = res->y1;
 2359              		.loc 1 524 5 view .LVU819
 524:lvgl/src/lv_draw/lv_img_buf.c ****     yt = res->y1;
 2360              		.loc 1 524 8 is_stmt 0 view .LVU820
 2361 00fc B7F90050 		ldrsh	r5, [r7]
 2362              	.LVL289:
 525:lvgl/src/lv_draw/lv_img_buf.c ****     lt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2363              		.loc 1 525 5 is_stmt 1 view .LVU821
 525:lvgl/src/lv_draw/lv_img_buf.c ****     lt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2364              		.loc 1 525 8 is_stmt 0 view .LVU822
 2365 0100 B7F90230 		ldrsh	r3, [r7, #2]
 2366              	.LVL290:
 526:lvgl/src/lv_draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2367              		.loc 1 526 5 is_stmt 1 view .LVU823
 526:lvgl/src/lv_draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2368              		.loc 1 526 20 is_stmt 0 view .LVU824
ARM GAS  D:\Temp\ccBYw3dY.s 			page 72


 2369 0104 01FB05F6 		mul	r6, r1, r5
 526:lvgl/src/lv_draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2370              		.loc 1 526 33 view .LVU825
 2371 0108 02FB03F0 		mul	r0, r2, r3
 2372              	.LVL291:
 526:lvgl/src/lv_draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2373              		.loc 1 526 25 view .LVU826
 2374 010c A6EB0008 		sub	r8, r6, r0
 526:lvgl/src/lv_draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2375              		.loc 1 526 76 view .LVU827
 2376 0110 B4F800C0 		ldrh	ip, [r4]
 526:lvgl/src/lv_draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2377              		.loc 1 526 69 view .LVU828
 2378 0114 0CEBA828 		add	r8, ip, r8, asr #10
 2379 0118 0FFA88F8 		sxth	r8, r8
 527:lvgl/src/lv_draw/lv_img_buf.c **** 
 2380              		.loc 1 527 5 is_stmt 1 view .LVU829
 527:lvgl/src/lv_draw/lv_img_buf.c **** 
 2381              		.loc 1 527 20 is_stmt 0 view .LVU830
 2382 011c 02FB05F5 		mul	r5, r2, r5
 2383              	.LVL292:
 527:lvgl/src/lv_draw/lv_img_buf.c **** 
 2384              		.loc 1 527 33 view .LVU831
 2385 0120 01FB03F3 		mul	r3, r1, r3
 2386              	.LVL293:
 527:lvgl/src/lv_draw/lv_img_buf.c **** 
 2387              		.loc 1 527 25 view .LVU832
 2388 0124 05EB030E 		add	lr, r5, r3
 527:lvgl/src/lv_draw/lv_img_buf.c **** 
 2389              		.loc 1 527 76 view .LVU833
 2390 0128 6488     		ldrh	r4, [r4, #2]
 527:lvgl/src/lv_draw/lv_img_buf.c **** 
 2391              		.loc 1 527 69 view .LVU834
 2392 012a 04EBAE2E 		add	lr, r4, lr, asr #10
 2393 012e 0FFA8EFE 		sxth	lr, lr
 529:lvgl/src/lv_draw/lv_img_buf.c ****     yt = res->y1;
 2394              		.loc 1 529 5 is_stmt 1 view .LVU835
 529:lvgl/src/lv_draw/lv_img_buf.c ****     yt = res->y1;
 2395              		.loc 1 529 8 is_stmt 0 view .LVU836
 2396 0132 B7F90490 		ldrsh	r9, [r7, #4]
 2397              	.LVL294:
 530:lvgl/src/lv_draw/lv_img_buf.c ****     rt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2398              		.loc 1 530 5 is_stmt 1 view .LVU837
 531:lvgl/src/lv_draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2399              		.loc 1 531 5 view .LVU838
 531:lvgl/src/lv_draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2400              		.loc 1 531 20 is_stmt 0 view .LVU839
 2401 0136 01FB09FB 		mul	fp, r1, r9
 531:lvgl/src/lv_draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2402              		.loc 1 531 25 view .LVU840
 2403 013a ABEB0000 		sub	r0, fp, r0
 531:lvgl/src/lv_draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2404              		.loc 1 531 69 view .LVU841
 2405 013e 0CEBA020 		add	r0, ip, r0, asr #10
 2406 0142 00B2     		sxth	r0, r0
 532:lvgl/src/lv_draw/lv_img_buf.c **** 
 2407              		.loc 1 532 5 is_stmt 1 view .LVU842
ARM GAS  D:\Temp\ccBYw3dY.s 			page 73


 532:lvgl/src/lv_draw/lv_img_buf.c **** 
 2408              		.loc 1 532 20 is_stmt 0 view .LVU843
 2409 0144 02FB09F9 		mul	r9, r2, r9
 2410              	.LVL295:
 532:lvgl/src/lv_draw/lv_img_buf.c **** 
 2411              		.loc 1 532 25 view .LVU844
 2412 0148 4B44     		add	r3, r3, r9
 532:lvgl/src/lv_draw/lv_img_buf.c **** 
 2413              		.loc 1 532 69 view .LVU845
 2414 014a 04EBA323 		add	r3, r4, r3, asr #10
 2415 014e 1BB2     		sxth	r3, r3
 534:lvgl/src/lv_draw/lv_img_buf.c ****     yt = res->y2;
 2416              		.loc 1 534 5 is_stmt 1 view .LVU846
 2417              	.LVL296:
 535:lvgl/src/lv_draw/lv_img_buf.c ****     lb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2418              		.loc 1 535 5 view .LVU847
 535:lvgl/src/lv_draw/lv_img_buf.c ****     lb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2419              		.loc 1 535 8 is_stmt 0 view .LVU848
 2420 0150 B7F906A0 		ldrsh	r10, [r7, #6]
 2421              	.LVL297:
 536:lvgl/src/lv_draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2422              		.loc 1 536 5 is_stmt 1 view .LVU849
 536:lvgl/src/lv_draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2423              		.loc 1 536 33 is_stmt 0 view .LVU850
 2424 0154 02FB0AF2 		mul	r2, r2, r10
 2425              	.LVL298:
 536:lvgl/src/lv_draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2426              		.loc 1 536 25 view .LVU851
 2427 0158 B61A     		subs	r6, r6, r2
 536:lvgl/src/lv_draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2428              		.loc 1 536 69 view .LVU852
 2429 015a 0CEBA626 		add	r6, ip, r6, asr #10
 2430 015e 36B2     		sxth	r6, r6
 537:lvgl/src/lv_draw/lv_img_buf.c **** 
 2431              		.loc 1 537 5 is_stmt 1 view .LVU853
 537:lvgl/src/lv_draw/lv_img_buf.c **** 
 2432              		.loc 1 537 33 is_stmt 0 view .LVU854
 2433 0160 01FB0AF1 		mul	r1, r1, r10
 2434              	.LVL299:
 537:lvgl/src/lv_draw/lv_img_buf.c **** 
 2435              		.loc 1 537 25 view .LVU855
 2436 0164 0D44     		add	r5, r5, r1
 537:lvgl/src/lv_draw/lv_img_buf.c **** 
 2437              		.loc 1 537 69 view .LVU856
 2438 0166 04EBA525 		add	r5, r4, r5, asr #10
 2439 016a 2DB2     		sxth	r5, r5
 539:lvgl/src/lv_draw/lv_img_buf.c ****     yt = res->y2;
 2440              		.loc 1 539 5 is_stmt 1 view .LVU857
 2441              	.LVL300:
 540:lvgl/src/lv_draw/lv_img_buf.c ****     rb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2442              		.loc 1 540 5 view .LVU858
 541:lvgl/src/lv_draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2443              		.loc 1 541 5 view .LVU859
 541:lvgl/src/lv_draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2444              		.loc 1 541 25 is_stmt 0 view .LVU860
 2445 016c ABEB0202 		sub	r2, fp, r2
 541:lvgl/src/lv_draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
ARM GAS  D:\Temp\ccBYw3dY.s 			page 74


 2446              		.loc 1 541 69 view .LVU861
 2447 0170 0CEBA22C 		add	ip, ip, r2, asr #10
 2448 0174 0FFA8CFC 		sxth	ip, ip
 542:lvgl/src/lv_draw/lv_img_buf.c **** 
 2449              		.loc 1 542 5 is_stmt 1 view .LVU862
 542:lvgl/src/lv_draw/lv_img_buf.c **** 
 2450              		.loc 1 542 25 is_stmt 0 view .LVU863
 2451 0178 4944     		add	r1, r1, r9
 542:lvgl/src/lv_draw/lv_img_buf.c **** 
 2452              		.loc 1 542 69 view .LVU864
 2453 017a 04EBA124 		add	r4, r4, r1, asr #10
 2454 017e 24B2     		sxth	r4, r4
 544:lvgl/src/lv_draw/lv_img_buf.c ****     res->x2 = LV_MATH_MAX4(lb.x, lt.x, rb.x, rt.x);
 2455              		.loc 1 544 5 is_stmt 1 view .LVU865
 544:lvgl/src/lv_draw/lv_img_buf.c ****     res->x2 = LV_MATH_MAX4(lb.x, lt.x, rb.x, rt.x);
 2456              		.loc 1 544 15 is_stmt 0 view .LVU866
 2457 0180 0246     		mov	r2, r0
 2458 0182 6045     		cmp	r0, ip
 2459 0184 A8BF     		it	ge
 2460 0186 6246     		movge	r2, ip
 2461 0188 4146     		mov	r1, r8
 2462 018a B045     		cmp	r8, r6
 2463 018c A8BF     		it	ge
 2464 018e 3146     		movge	r1, r6
 2465 0190 8A42     		cmp	r2, r1
 2466 0192 A8BF     		it	ge
 2467 0194 0A46     		movge	r2, r1
 544:lvgl/src/lv_draw/lv_img_buf.c ****     res->x2 = LV_MATH_MAX4(lb.x, lt.x, rb.x, rt.x);
 2468              		.loc 1 544 13 view .LVU867
 2469 0196 3A80     		strh	r2, [r7]	@ movhi
 545:lvgl/src/lv_draw/lv_img_buf.c ****     res->y1 = LV_MATH_MIN4(lb.y, lt.y, rb.y, rt.y);
 2470              		.loc 1 545 5 is_stmt 1 view .LVU868
 545:lvgl/src/lv_draw/lv_img_buf.c ****     res->y1 = LV_MATH_MIN4(lb.y, lt.y, rb.y, rt.y);
 2471              		.loc 1 545 15 is_stmt 0 view .LVU869
 2472 0198 6045     		cmp	r0, ip
 2473 019a B8BF     		it	lt
 2474 019c 6046     		movlt	r0, ip
 2475 019e B045     		cmp	r8, r6
 2476 01a0 B8BF     		it	lt
 2477 01a2 B046     		movlt	r8, r6
 2478 01a4 8045     		cmp	r8, r0
 2479 01a6 B8BF     		it	lt
 2480 01a8 8046     		movlt	r8, r0
 545:lvgl/src/lv_draw/lv_img_buf.c ****     res->y1 = LV_MATH_MIN4(lb.y, lt.y, rb.y, rt.y);
 2481              		.loc 1 545 13 view .LVU870
 2482 01aa A7F80480 		strh	r8, [r7, #4]	@ movhi
 2483              	.LVL301:
 546:lvgl/src/lv_draw/lv_img_buf.c ****     res->y2 = LV_MATH_MAX4(lb.y, lt.y, rb.y, rt.y);
 2484              		.loc 1 546 5 is_stmt 1 view .LVU871
 546:lvgl/src/lv_draw/lv_img_buf.c ****     res->y2 = LV_MATH_MAX4(lb.y, lt.y, rb.y, rt.y);
 2485              		.loc 1 546 15 is_stmt 0 view .LVU872
 2486 01ae 1A46     		mov	r2, r3
 2487 01b0 A342     		cmp	r3, r4
 2488 01b2 A8BF     		it	ge
 2489 01b4 2246     		movge	r2, r4
 2490 01b6 7146     		mov	r1, lr
 2491 01b8 AE45     		cmp	lr, r5
ARM GAS  D:\Temp\ccBYw3dY.s 			page 75


 2492 01ba A8BF     		it	ge
 2493 01bc 2946     		movge	r1, r5
 2494 01be 8A42     		cmp	r2, r1
 2495 01c0 A8BF     		it	ge
 2496 01c2 0A46     		movge	r2, r1
 546:lvgl/src/lv_draw/lv_img_buf.c ****     res->y2 = LV_MATH_MAX4(lb.y, lt.y, rb.y, rt.y);
 2497              		.loc 1 546 13 view .LVU873
 2498 01c4 7A80     		strh	r2, [r7, #2]	@ movhi
 547:lvgl/src/lv_draw/lv_img_buf.c **** #else
 2499              		.loc 1 547 5 is_stmt 1 view .LVU874
 547:lvgl/src/lv_draw/lv_img_buf.c **** #else
 2500              		.loc 1 547 15 is_stmt 0 view .LVU875
 2501 01c6 9C42     		cmp	r4, r3
 2502 01c8 B8BF     		it	lt
 2503 01ca 1C46     		movlt	r4, r3
 2504 01cc AE45     		cmp	lr, r5
 2505 01ce B8BF     		it	lt
 2506 01d0 AE46     		movlt	lr, r5
 2507 01d2 A645     		cmp	lr, r4
 2508 01d4 B8BF     		it	lt
 2509 01d6 A646     		movlt	lr, r4
 547:lvgl/src/lv_draw/lv_img_buf.c **** #else
 2510              		.loc 1 547 13 view .LVU876
 2511 01d8 A7F806E0 		strh	lr, [r7, #6]	@ movhi
 2512 01dc 4BE7     		b	.L121
 2513              	.L129:
 2514 01de 00BF     		.align	2
 2515              	.L128:
 2516 01e0 67666666 		.word	1717986919
 2517              		.cfi_endproc
 2518              	.LFE176:
 2520              		.section	.text._lv_img_buf_transform_anti_alias,"ax",%progbits
 2521              		.align	1
 2522              		.global	_lv_img_buf_transform_anti_alias
 2523              		.syntax unified
 2524              		.thumb
 2525              		.thumb_func
 2526              		.fpu fpv4-sp-d16
 2528              	_lv_img_buf_transform_anti_alias:
 2529              	.LVL302:
 2530              	.LFB177:
 558:lvgl/src/lv_draw/lv_img_buf.c **** 
 559:lvgl/src/lv_draw/lv_img_buf.c **** #if LV_USE_IMG_TRANSFORM
 560:lvgl/src/lv_draw/lv_img_buf.c **** /**
 561:lvgl/src/lv_draw/lv_img_buf.c ****  * Continue transformation by taking the neighbors into account
 562:lvgl/src/lv_draw/lv_img_buf.c ****  * @param dsc pointer to the transformation descriptor
 563:lvgl/src/lv_draw/lv_img_buf.c ****  */
 564:lvgl/src/lv_draw/lv_img_buf.c **** bool _lv_img_buf_transform_anti_alias(lv_img_transform_dsc_t * dsc)
 565:lvgl/src/lv_draw/lv_img_buf.c **** {
 2531              		.loc 1 565 1 is_stmt 1 view -0
 2532              		.cfi_startproc
 2533              		@ args = 0, pretend = 0, frame = 32
 2534              		@ frame_needed = 0, uses_anonymous_args = 0
 2535              		.loc 1 565 1 is_stmt 0 view .LVU878
 2536 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2537              	.LCFI25:
 2538              		.cfi_def_cfa_offset 36
ARM GAS  D:\Temp\ccBYw3dY.s 			page 76


 2539              		.cfi_offset 4, -36
 2540              		.cfi_offset 5, -32
 2541              		.cfi_offset 6, -28
 2542              		.cfi_offset 7, -24
 2543              		.cfi_offset 8, -20
 2544              		.cfi_offset 9, -16
 2545              		.cfi_offset 10, -12
 2546              		.cfi_offset 11, -8
 2547              		.cfi_offset 14, -4
 2548 0004 89B0     		sub	sp, sp, #36
 2549              	.LCFI26:
 2550              		.cfi_def_cfa_offset 72
 2551 0006 0446     		mov	r4, r0
 566:lvgl/src/lv_draw/lv_img_buf.c ****     const uint8_t * src_u8 = dsc->cfg.src;
 2552              		.loc 1 566 5 is_stmt 1 view .LVU879
 2553              		.loc 1 566 21 is_stmt 0 view .LVU880
 2554 0008 0168     		ldr	r1, [r0]
 2555              	.LVL303:
 567:lvgl/src/lv_draw/lv_img_buf.c **** 
 568:lvgl/src/lv_draw/lv_img_buf.c ****     /*Get the fractional part of the source pixel*/
 569:lvgl/src/lv_draw/lv_img_buf.c ****     int xs_fract = dsc->tmp.xs & 0xff;
 2556              		.loc 1 569 5 is_stmt 1 view .LVU881
 2557              		.loc 1 569 28 is_stmt 0 view .LVU882
 2558 000a B0F93C50 		ldrsh	r5, [r0, #60]
 2559              		.loc 1 569 9 view .LVU883
 2560 000e EAB2     		uxtb	r2, r5
 2561              	.LVL304:
 570:lvgl/src/lv_draw/lv_img_buf.c ****     int ys_fract = dsc->tmp.ys & 0xff;
 2562              		.loc 1 570 5 is_stmt 1 view .LVU884
 2563              		.loc 1 570 28 is_stmt 0 view .LVU885
 2564 0010 B0F93E60 		ldrsh	r6, [r0, #62]
 2565              		.loc 1 570 9 view .LVU886
 2566 0014 F3B2     		uxtb	r3, r6
 2567              	.LVL305:
 571:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t xn;      /*x neighbor*/
 2568              		.loc 1 571 5 is_stmt 1 view .LVU887
 572:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t xr; /*x mix ratio*/
 2569              		.loc 1 572 5 view .LVU888
 573:lvgl/src/lv_draw/lv_img_buf.c **** 
 574:lvgl/src/lv_draw/lv_img_buf.c ****     if(xs_fract < 0x70) {
 2570              		.loc 1 574 5 view .LVU889
 2571              		.loc 1 574 7 is_stmt 0 view .LVU890
 2572 0016 6F2A     		cmp	r2, #111
 2573 0018 2EDC     		bgt	.L131
 575:lvgl/src/lv_draw/lv_img_buf.c ****         xn = - 1;
 2574              		.loc 1 575 9 is_stmt 1 view .LVU891
 2575              	.LVL306:
 576:lvgl/src/lv_draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn < 0) xn = 0;
 2576              		.loc 1 576 9 view .LVU892
 2577              		.loc 1 576 20 is_stmt 0 view .LVU893
 2578 001a B0F94020 		ldrsh	r2, [r0, #64]
 2579              	.LVL307:
 2580              		.loc 1 576 11 view .LVU894
 2581 001e 002A     		cmp	r2, #0
 2582 0020 28DD     		ble	.L164
 575:lvgl/src/lv_draw/lv_img_buf.c ****         xn = - 1;
 2583              		.loc 1 575 12 view .LVU895
ARM GAS  D:\Temp\ccBYw3dY.s 			page 77


 2584 0022 4FF0FF37 		mov	r7, #-1
 2585              	.L132:
 2586              	.LVL308:
 577:lvgl/src/lv_draw/lv_img_buf.c ****         xr = xs_fract + 0x80;
 2587              		.loc 1 577 9 is_stmt 1 view .LVU896
 2588              		.loc 1 577 23 is_stmt 0 view .LVU897
 2589 0026 EDB2     		uxtb	r5, r5
 2590              		.loc 1 577 12 view .LVU898
 2591 0028 85F08005 		eor	r5, r5, #128
 2592              	.LVL309:
 2593              	.L133:
 578:lvgl/src/lv_draw/lv_img_buf.c ****     }
 579:lvgl/src/lv_draw/lv_img_buf.c ****     else if(xs_fract > 0x90) {
 580:lvgl/src/lv_draw/lv_img_buf.c ****         xn =  1;
 581:lvgl/src/lv_draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn >= dsc->cfg.src_w) xn = 0;
 582:lvgl/src/lv_draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 583:lvgl/src/lv_draw/lv_img_buf.c ****     }
 584:lvgl/src/lv_draw/lv_img_buf.c ****     else {
 585:lvgl/src/lv_draw/lv_img_buf.c ****         xn = 0;
 586:lvgl/src/lv_draw/lv_img_buf.c ****         xr = 0xFF;
 587:lvgl/src/lv_draw/lv_img_buf.c ****     }
 588:lvgl/src/lv_draw/lv_img_buf.c **** 
 589:lvgl/src/lv_draw/lv_img_buf.c ****     int32_t yn;      /*x neighbor*/
 2594              		.loc 1 589 5 is_stmt 1 view .LVU899
 590:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t yr; /*x mix ratio*/
 2595              		.loc 1 590 5 view .LVU900
 591:lvgl/src/lv_draw/lv_img_buf.c **** 
 592:lvgl/src/lv_draw/lv_img_buf.c ****     if(ys_fract < 0x70) {
 2596              		.loc 1 592 5 view .LVU901
 2597              		.loc 1 592 7 is_stmt 0 view .LVU902
 2598 002c 6F2B     		cmp	r3, #111
 2599 002e 3ADC     		bgt	.L135
 593:lvgl/src/lv_draw/lv_img_buf.c ****         yn = - 1;
 2600              		.loc 1 593 9 is_stmt 1 view .LVU903
 2601              	.LVL310:
 594:lvgl/src/lv_draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn < 0) yn = 0;
 2602              		.loc 1 594 9 view .LVU904
 2603              		.loc 1 594 20 is_stmt 0 view .LVU905
 2604 0030 B4F94230 		ldrsh	r3, [r4, #66]
 2605              	.LVL311:
 2606              		.loc 1 594 11 view .LVU906
 2607 0034 002B     		cmp	r3, #0
 2608 0036 33DD     		ble	.L167
 593:lvgl/src/lv_draw/lv_img_buf.c ****         yn = - 1;
 2609              		.loc 1 593 12 view .LVU907
 2610 0038 4FF0FF38 		mov	r8, #-1
 2611              	.L136:
 2612              	.LVL312:
 595:lvgl/src/lv_draw/lv_img_buf.c **** 
 596:lvgl/src/lv_draw/lv_img_buf.c ****         yr = ys_fract + 0x80;
 2613              		.loc 1 596 9 is_stmt 1 view .LVU908
 2614              		.loc 1 596 23 is_stmt 0 view .LVU909
 2615 003c F6B2     		uxtb	r6, r6
 2616              		.loc 1 596 12 view .LVU910
 2617 003e 86F08006 		eor	r6, r6, #128
 2618              	.LVL313:
 2619              	.L137:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 78


 597:lvgl/src/lv_draw/lv_img_buf.c ****     }
 598:lvgl/src/lv_draw/lv_img_buf.c ****     else if(ys_fract > 0x90) {
 599:lvgl/src/lv_draw/lv_img_buf.c ****         yn =  1;
 600:lvgl/src/lv_draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn >= dsc->cfg.src_h) yn = 0;
 601:lvgl/src/lv_draw/lv_img_buf.c **** 
 602:lvgl/src/lv_draw/lv_img_buf.c ****         yr = (0xFF - ys_fract) + 0x80;
 603:lvgl/src/lv_draw/lv_img_buf.c ****     }
 604:lvgl/src/lv_draw/lv_img_buf.c ****     else {
 605:lvgl/src/lv_draw/lv_img_buf.c ****         yn = 0;
 606:lvgl/src/lv_draw/lv_img_buf.c ****         yr = 0xFF;
 607:lvgl/src/lv_draw/lv_img_buf.c ****     }
 608:lvgl/src/lv_draw/lv_img_buf.c **** 
 609:lvgl/src/lv_draw/lv_img_buf.c ****     lv_color_t c00 = dsc->res.color;
 2620              		.loc 1 609 5 is_stmt 1 view .LVU911
 2621              		.loc 1 609 16 is_stmt 0 view .LVU912
 2622 0042 B4F81490 		ldrh	r9, [r4, #20]
 610:lvgl/src/lv_draw/lv_img_buf.c ****     lv_color_t c01;
 2623              		.loc 1 610 5 is_stmt 1 view .LVU913
 611:lvgl/src/lv_draw/lv_img_buf.c ****     lv_color_t c10;
 2624              		.loc 1 611 5 view .LVU914
 612:lvgl/src/lv_draw/lv_img_buf.c ****     lv_color_t c11;
 2625              		.loc 1 612 5 view .LVU915
 613:lvgl/src/lv_draw/lv_img_buf.c **** 
 614:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t a00 = dsc->res.opa;
 2626              		.loc 1 614 5 view .LVU916
 2627              		.loc 1 614 14 is_stmt 0 view .LVU917
 2628 0046 94F816A0 		ldrb	r10, [r4, #22]	@ zero_extendqisi2
 2629              	.LVL314:
 615:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t a10 = 0;
 2630              		.loc 1 615 5 is_stmt 1 view .LVU918
 616:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t a01 = 0;
 2631              		.loc 1 616 5 view .LVU919
 617:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t a11 = 0;
 2632              		.loc 1 617 5 view .LVU920
 618:lvgl/src/lv_draw/lv_img_buf.c **** 
 619:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->tmp.native_color) {
 2633              		.loc 1 619 5 view .LVU921
 2634              		.loc 1 619 8 is_stmt 0 view .LVU922
 2635 004a 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2636              		.loc 1 619 7 view .LVU923
 2637 004e 13F0040F 		tst	r3, #4
 2638 0052 00F0BE80 		beq	.L139
 620:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&c01, &src_u8[dsc->tmp.pxi + dsc->tmp.px_size * xn], sizeof(lv_color_t));
 2639              		.loc 1 620 9 is_stmt 1 view .LVU924
 2640              		.loc 1 620 48 is_stmt 0 view .LVU925
 2641 0056 636C     		ldr	r3, [r4, #68]
 2642              		.loc 1 620 63 view .LVU926
 2643 0058 94F84820 		ldrb	r2, [r4, #72]	@ zero_extendqisi2
 2644              		.loc 1 620 53 view .LVU927
 2645 005c 07FB0232 		mla	r2, r7, r2, r3
 2646              		.loc 1 620 32 view .LVU928
 2647 0060 0A44     		add	r2, r2, r1
 2648              	.LVL315:
 2649              	.LBB78:
 2650              	.LBI78:
 213:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 2651              		.loc 2 213 44 is_stmt 1 view .LVU929
ARM GAS  D:\Temp\ccBYw3dY.s 			page 79


 2652              	.LBB79:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2653              		.loc 2 215 5 view .LVU930
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 2654              		.loc 2 216 5 view .LVU931
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 2655              		.loc 2 218 5 view .LVU932
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2656              		.loc 2 215 15 is_stmt 0 view .LVU933
 2657 0062 07A8     		add	r0, sp, #28
 2658              	.LVL316:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2659              		.loc 2 215 15 view .LVU934
 2660              	.LBE79:
 2661              	.LBE78:
 2662              		.loc 1 620 32 view .LVU935
 2663 0064 0223     		movs	r3, #2
 2664              	.LVL317:
 2665              	.L140:
 2666              	.LBB82:
 2667              	.LBB80:
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 2668              		.loc 2 218 10 view .LVU936
 2669 0066 ABB3     		cbz	r3, .L180
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 2670              		.loc 2 219 9 is_stmt 1 view .LVU937
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 2671              		.loc 2 219 15 is_stmt 0 view .LVU938
 2672 0068 12F801CB 		ldrb	ip, [r2], #1	@ zero_extendqisi2
 2673              	.LVL318:
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 2674              		.loc 2 219 13 view .LVU939
 2675 006c 00F801CB 		strb	ip, [r0], #1
 2676              	.LVL319:
 220:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         s8++;
 2677              		.loc 2 220 9 is_stmt 1 view .LVU940
 221:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         len--;
 2678              		.loc 2 221 9 view .LVU941
 2679              		.loc 2 222 9 view .LVU942
 2680              		.loc 2 222 12 is_stmt 0 view .LVU943
 2681 0070 013B     		subs	r3, r3, #1
 2682              	.LVL320:
 2683              		.loc 2 222 12 view .LVU944
 2684 0072 F8E7     		b	.L140
 2685              	.LVL321:
 2686              	.L164:
 2687              		.loc 2 222 12 view .LVU945
 2688              	.LBE80:
 2689              	.LBE82:
 576:lvgl/src/lv_draw/lv_img_buf.c ****         xr = xs_fract + 0x80;
 2690              		.loc 1 576 41 view .LVU946
 2691 0074 0027     		movs	r7, #0
 2692 0076 D6E7     		b	.L132
 2693              	.LVL322:
 2694              	.L131:
 579:lvgl/src/lv_draw/lv_img_buf.c ****         xn =  1;
 2695              		.loc 1 579 10 is_stmt 1 view .LVU947
ARM GAS  D:\Temp\ccBYw3dY.s 			page 80


 579:lvgl/src/lv_draw/lv_img_buf.c ****         xn =  1;
 2696              		.loc 1 579 12 is_stmt 0 view .LVU948
 2697 0078 902A     		cmp	r2, #144
 2698 007a 0EDD     		ble	.L165
 580:lvgl/src/lv_draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn >= dsc->cfg.src_w) xn = 0;
 2699              		.loc 1 580 9 is_stmt 1 view .LVU949
 2700              	.LVL323:
 581:lvgl/src/lv_draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2701              		.loc 1 581 9 view .LVU950
 581:lvgl/src/lv_draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2702              		.loc 1 581 20 is_stmt 0 view .LVU951
 2703 007c B0F94020 		ldrsh	r2, [r0, #64]
 2704              	.LVL324:
 581:lvgl/src/lv_draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2705              		.loc 1 581 28 view .LVU952
 2706 0080 0132     		adds	r2, r2, #1
 581:lvgl/src/lv_draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2707              		.loc 1 581 44 view .LVU953
 2708 0082 B0F90400 		ldrsh	r0, [r0, #4]
 2709              	.LVL325:
 581:lvgl/src/lv_draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2710              		.loc 1 581 11 view .LVU954
 2711 0086 8242     		cmp	r2, r0
 2712 0088 05DA     		bge	.L166
 580:lvgl/src/lv_draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn >= dsc->cfg.src_w) xn = 0;
 2713              		.loc 1 580 12 view .LVU955
 2714 008a 0127     		movs	r7, #1
 2715              	.L134:
 2716              	.LVL326:
 582:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2717              		.loc 1 582 9 is_stmt 1 view .LVU956
 582:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2718              		.loc 1 582 32 is_stmt 0 view .LVU957
 2719 008c EDB2     		uxtb	r5, r5
 582:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2720              		.loc 1 582 12 view .LVU958
 2721 008e C5F17F05 		rsb	r5, r5, #127
 2722              	.LVL327:
 582:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2723              		.loc 1 582 12 view .LVU959
 2724 0092 EDB2     		uxtb	r5, r5
 2725              	.LVL328:
 582:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2726              		.loc 1 582 12 view .LVU960
 2727 0094 CAE7     		b	.L133
 2728              	.LVL329:
 2729              	.L166:
 581:lvgl/src/lv_draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2730              		.loc 1 581 55 view .LVU961
 2731 0096 0027     		movs	r7, #0
 2732 0098 F8E7     		b	.L134
 2733              	.LVL330:
 2734              	.L165:
 586:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2735              		.loc 1 586 12 view .LVU962
 2736 009a FF25     		movs	r5, #255
 585:lvgl/src/lv_draw/lv_img_buf.c ****         xr = 0xFF;
ARM GAS  D:\Temp\ccBYw3dY.s 			page 81


 2737              		.loc 1 585 12 view .LVU963
 2738 009c 0027     		movs	r7, #0
 2739 009e C5E7     		b	.L133
 2740              	.LVL331:
 2741              	.L167:
 594:lvgl/src/lv_draw/lv_img_buf.c **** 
 2742              		.loc 1 594 41 view .LVU964
 2743 00a0 4FF00008 		mov	r8, #0
 2744 00a4 CAE7     		b	.L136
 2745              	.LVL332:
 2746              	.L135:
 598:lvgl/src/lv_draw/lv_img_buf.c ****         yn =  1;
 2747              		.loc 1 598 10 is_stmt 1 view .LVU965
 598:lvgl/src/lv_draw/lv_img_buf.c ****         yn =  1;
 2748              		.loc 1 598 12 is_stmt 0 view .LVU966
 2749 00a6 902B     		cmp	r3, #144
 2750 00a8 10DD     		ble	.L168
 599:lvgl/src/lv_draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn >= dsc->cfg.src_h) yn = 0;
 2751              		.loc 1 599 9 is_stmt 1 view .LVU967
 2752              	.LVL333:
 600:lvgl/src/lv_draw/lv_img_buf.c **** 
 2753              		.loc 1 600 9 view .LVU968
 600:lvgl/src/lv_draw/lv_img_buf.c **** 
 2754              		.loc 1 600 20 is_stmt 0 view .LVU969
 2755 00aa B4F94230 		ldrsh	r3, [r4, #66]
 2756              	.LVL334:
 600:lvgl/src/lv_draw/lv_img_buf.c **** 
 2757              		.loc 1 600 28 view .LVU970
 2758 00ae 0133     		adds	r3, r3, #1
 600:lvgl/src/lv_draw/lv_img_buf.c **** 
 2759              		.loc 1 600 44 view .LVU971
 2760 00b0 B4F90620 		ldrsh	r2, [r4, #6]
 600:lvgl/src/lv_draw/lv_img_buf.c **** 
 2761              		.loc 1 600 11 view .LVU972
 2762 00b4 9342     		cmp	r3, r2
 2763 00b6 06DA     		bge	.L169
 599:lvgl/src/lv_draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn >= dsc->cfg.src_h) yn = 0;
 2764              		.loc 1 599 12 view .LVU973
 2765 00b8 4FF00108 		mov	r8, #1
 2766              	.L138:
 2767              	.LVL335:
 602:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2768              		.loc 1 602 9 is_stmt 1 view .LVU974
 602:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2769              		.loc 1 602 32 is_stmt 0 view .LVU975
 2770 00bc F6B2     		uxtb	r6, r6
 602:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2771              		.loc 1 602 12 view .LVU976
 2772 00be C6F17F06 		rsb	r6, r6, #127
 2773              	.LVL336:
 602:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2774              		.loc 1 602 12 view .LVU977
 2775 00c2 F6B2     		uxtb	r6, r6
 2776              	.LVL337:
 602:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2777              		.loc 1 602 12 view .LVU978
 2778 00c4 BDE7     		b	.L137
ARM GAS  D:\Temp\ccBYw3dY.s 			page 82


 2779              	.LVL338:
 2780              	.L169:
 600:lvgl/src/lv_draw/lv_img_buf.c **** 
 2781              		.loc 1 600 55 view .LVU979
 2782 00c6 4FF00008 		mov	r8, #0
 2783 00ca F7E7     		b	.L138
 2784              	.LVL339:
 2785              	.L168:
 606:lvgl/src/lv_draw/lv_img_buf.c ****     }
 2786              		.loc 1 606 12 view .LVU980
 2787 00cc FF26     		movs	r6, #255
 605:lvgl/src/lv_draw/lv_img_buf.c ****         yr = 0xFF;
 2788              		.loc 1 605 12 view .LVU981
 2789 00ce 4FF00008 		mov	r8, #0
 2790 00d2 B6E7     		b	.L137
 2791              	.LVL340:
 2792              	.L180:
 2793              	.LBB83:
 2794              	.LBB81:
 223:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 224:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 225:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     return dst;
 2795              		.loc 2 225 5 is_stmt 1 view .LVU982
 2796              		.loc 2 225 5 is_stmt 0 view .LVU983
 2797              	.LBE81:
 2798              	.LBE83:
 621:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&c10, &src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn], size
 2799              		.loc 1 621 9 is_stmt 1 view .LVU984
 2800              		.loc 1 621 48 is_stmt 0 view .LVU985
 2801 00d4 636C     		ldr	r3, [r4, #68]
 2802              		.loc 1 621 63 view .LVU986
 2803 00d6 B4F90400 		ldrsh	r0, [r4, #4]
 2804              		.loc 1 621 80 view .LVU987
 2805 00da 94F84820 		ldrb	r2, [r4, #72]	@ zero_extendqisi2
 2806              		.loc 1 621 70 view .LVU988
 2807 00de 02FB00F2 		mul	r2, r2, r0
 2808              		.loc 1 621 53 view .LVU989
 2809 00e2 08FB0232 		mla	r2, r8, r2, r3
 2810              		.loc 1 621 32 view .LVU990
 2811 00e6 0A44     		add	r2, r2, r1
 2812              	.LVL341:
 2813              	.LBB84:
 2814              	.LBI84:
 213:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 2815              		.loc 2 213 44 is_stmt 1 view .LVU991
 2816              	.LBB85:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2817              		.loc 2 215 15 is_stmt 0 view .LVU992
 2818 00e8 06A8     		add	r0, sp, #24
 2819              	.LVL342:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2820              		.loc 2 215 15 view .LVU993
 2821              	.LBE85:
 2822              	.LBE84:
 2823              		.loc 1 621 32 view .LVU994
 2824 00ea 0223     		movs	r3, #2
 2825              	.LVL343:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 83


 2826              	.L142:
 2827              	.LBB87:
 2828              	.LBB86:
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 2829              		.loc 2 218 10 view .LVU995
 2830 00ec 2BB1     		cbz	r3, .L181
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 2831              		.loc 2 219 9 is_stmt 1 view .LVU996
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 2832              		.loc 2 219 15 is_stmt 0 view .LVU997
 2833 00ee 12F801CB 		ldrb	ip, [r2], #1	@ zero_extendqisi2
 2834              	.LVL344:
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 2835              		.loc 2 219 13 view .LVU998
 2836 00f2 00F801CB 		strb	ip, [r0], #1
 2837              	.LVL345:
 220:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         s8++;
 2838              		.loc 2 220 9 is_stmt 1 view .LVU999
 221:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         len--;
 2839              		.loc 2 221 9 view .LVU1000
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 2840              		.loc 2 222 9 view .LVU1001
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 2841              		.loc 2 222 12 is_stmt 0 view .LVU1002
 2842 00f6 013B     		subs	r3, r3, #1
 2843              	.LVL346:
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 2844              		.loc 2 222 12 view .LVU1003
 2845 00f8 F8E7     		b	.L142
 2846              	.L181:
 2847              		.loc 2 225 5 is_stmt 1 view .LVU1004
 2848              	.LVL347:
 2849              		.loc 2 225 5 is_stmt 0 view .LVU1005
 2850              	.LBE86:
 2851              	.LBE87:
 622:lvgl/src/lv_draw/lv_img_buf.c ****         _lv_memcpy_small(&c11, &src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn + dsc-
 2852              		.loc 1 622 9 is_stmt 1 view .LVU1006
 2853              		.loc 1 622 48 is_stmt 0 view .LVU1007
 2854 00fa 606C     		ldr	r0, [r4, #68]
 2855              		.loc 1 622 104 view .LVU1008
 2856 00fc 94F84830 		ldrb	r3, [r4, #72]	@ zero_extendqisi2
 2857              		.loc 1 622 63 view .LVU1009
 2858 0100 B4F90420 		ldrsh	r2, [r4, #4]
 2859              		.loc 1 622 70 view .LVU1010
 2860 0104 02FB03F2 		mul	r2, r2, r3
 2861              		.loc 1 622 89 view .LVU1011
 2862 0108 08FB02F2 		mul	r2, r8, r2
 2863              		.loc 1 622 94 view .LVU1012
 2864 010c 07FB0322 		mla	r2, r7, r3, r2
 2865 0110 0244     		add	r2, r2, r0
 2866              		.loc 1 622 32 view .LVU1013
 2867 0112 0A44     		add	r2, r2, r1
 2868              	.LVL348:
 2869              	.LBB88:
 2870              	.LBI88:
 213:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 2871              		.loc 2 213 44 is_stmt 1 view .LVU1014
ARM GAS  D:\Temp\ccBYw3dY.s 			page 84


 2872              	.LBB89:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2873              		.loc 2 215 15 is_stmt 0 view .LVU1015
 2874 0114 05A8     		add	r0, sp, #20
 2875              	.LVL349:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2876              		.loc 2 215 15 view .LVU1016
 2877              	.LBE89:
 2878              	.LBE88:
 2879              		.loc 1 622 32 view .LVU1017
 2880 0116 0223     		movs	r3, #2
 2881              	.LVL350:
 2882              	.L144:
 2883              	.LBB91:
 2884              	.LBB90:
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 2885              		.loc 2 218 10 view .LVU1018
 2886 0118 2BB1     		cbz	r3, .L182
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 2887              		.loc 2 219 9 is_stmt 1 view .LVU1019
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 2888              		.loc 2 219 15 is_stmt 0 view .LVU1020
 2889 011a 12F801CB 		ldrb	ip, [r2], #1	@ zero_extendqisi2
 2890              	.LVL351:
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 2891              		.loc 2 219 13 view .LVU1021
 2892 011e 00F801CB 		strb	ip, [r0], #1
 2893              	.LVL352:
 220:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         s8++;
 2894              		.loc 2 220 9 is_stmt 1 view .LVU1022
 221:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         len--;
 2895              		.loc 2 221 9 view .LVU1023
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 2896              		.loc 2 222 9 view .LVU1024
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 2897              		.loc 2 222 12 is_stmt 0 view .LVU1025
 2898 0122 013B     		subs	r3, r3, #1
 2899              	.LVL353:
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 2900              		.loc 2 222 12 view .LVU1026
 2901 0124 F8E7     		b	.L144
 2902              	.L182:
 2903              		.loc 2 225 5 is_stmt 1 view .LVU1027
 2904              	.LVL354:
 2905              		.loc 2 225 5 is_stmt 0 view .LVU1028
 2906              	.LBE90:
 2907              	.LBE91:
 623:lvgl/src/lv_draw/lv_img_buf.c ****                          sizeof(lv_color_t));
 624:lvgl/src/lv_draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha) {
 2908              		.loc 1 624 9 is_stmt 1 view .LVU1029
 2909              		.loc 1 624 12 is_stmt 0 view .LVU1030
 2910 0126 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2911              		.loc 1 624 11 view .LVU1031
 2912 012a 13F0020F 		tst	r3, #2
 2913 012e 00F0A180 		beq	.L170
 625:lvgl/src/lv_draw/lv_img_buf.c ****             a10 = src_u8[dsc->tmp.pxi + dsc->tmp.px_size * xn + dsc->tmp.px_size - 1];
 2914              		.loc 1 625 13 is_stmt 1 view .LVU1032
ARM GAS  D:\Temp\ccBYw3dY.s 			page 85


 2915              		.loc 1 625 34 is_stmt 0 view .LVU1033
 2916 0132 606C     		ldr	r0, [r4, #68]
 2917              		.loc 1 625 49 view .LVU1034
 2918 0134 94F84830 		ldrb	r3, [r4, #72]	@ zero_extendqisi2
 2919              		.loc 1 625 58 view .LVU1035
 2920 0138 07FB03F2 		mul	r2, r7, r3
 2921              		.loc 1 625 39 view .LVU1036
 2922 013c 8718     		adds	r7, r0, r2
 2923              	.LVL355:
 2924              		.loc 1 625 63 view .LVU1037
 2925 013e 1F44     		add	r7, r7, r3
 2926              		.loc 1 625 25 view .LVU1038
 2927 0140 013F     		subs	r7, r7, #1
 2928              		.loc 1 625 17 view .LVU1039
 2929 0142 11F807B0 		ldrb	fp, [r1, r7]	@ zero_extendqisi2
 2930              	.LVL356:
 626:lvgl/src/lv_draw/lv_img_buf.c ****             a01 = src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn + dsc->tmp.px_size -
 2931              		.loc 1 626 13 is_stmt 1 view .LVU1040
 2932              		.loc 1 626 49 is_stmt 0 view .LVU1041
 2933 0146 B4F90470 		ldrsh	r7, [r4, #4]
 2934              		.loc 1 626 56 view .LVU1042
 2935 014a 07FB03F7 		mul	r7, r7, r3
 2936              		.loc 1 626 75 view .LVU1043
 2937 014e 08FB07F8 		mul	r8, r8, r7
 2938              	.LVL357:
 2939              		.loc 1 626 39 view .LVU1044
 2940 0152 00EB0807 		add	r7, r0, r8
 2941              		.loc 1 626 80 view .LVU1045
 2942 0156 1F44     		add	r7, r7, r3
 2943              		.loc 1 626 25 view .LVU1046
 2944 0158 013F     		subs	r7, r7, #1
 2945              		.loc 1 626 17 view .LVU1047
 2946 015a CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 2947              	.LVL358:
 627:lvgl/src/lv_draw/lv_img_buf.c ****             a11 = src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn + dsc->tmp.px_size *
 2948              		.loc 1 627 13 is_stmt 1 view .LVU1048
 2949              		.loc 1 627 80 is_stmt 0 view .LVU1049
 2950 015c 4244     		add	r2, r2, r8
 2951 015e 0244     		add	r2, r2, r0
 2952              		.loc 1 627 104 view .LVU1050
 2953 0160 1344     		add	r3, r3, r2
 2954              		.loc 1 627 25 view .LVU1051
 2955 0162 013B     		subs	r3, r3, #1
 2956              		.loc 1 627 17 view .LVU1052
 2957 0164 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 2958              	.LVL359:
 2959              	.L146:
 628:lvgl/src/lv_draw/lv_img_buf.c ****         }
 629:lvgl/src/lv_draw/lv_img_buf.c ****     }
 630:lvgl/src/lv_draw/lv_img_buf.c ****     else {
 631:lvgl/src/lv_draw/lv_img_buf.c ****         c01 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int, dsc
 632:lvgl/src/lv_draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 633:lvgl/src/lv_draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 634:lvgl/src/lv_draw/lv_img_buf.c **** 
 635:lvgl/src/lv_draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha) {
 636:lvgl/src/lv_draw/lv_img_buf.c ****             a10 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int)
 637:lvgl/src/lv_draw/lv_img_buf.c ****             a01 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn)
ARM GAS  D:\Temp\ccBYw3dY.s 			page 86


 638:lvgl/src/lv_draw/lv_img_buf.c ****             a11 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int 
 639:lvgl/src/lv_draw/lv_img_buf.c ****         }
 640:lvgl/src/lv_draw/lv_img_buf.c ****     }
 641:lvgl/src/lv_draw/lv_img_buf.c **** 
 642:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t xr0 = xr;
 2960              		.loc 1 642 5 is_stmt 1 view .LVU1053
 643:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t xr1 = xr;
 2961              		.loc 1 643 5 view .LVU1054
 644:lvgl/src/lv_draw/lv_img_buf.c ****     if(dsc->tmp.has_alpha) {
 2962              		.loc 1 644 5 view .LVU1055
 2963              		.loc 1 644 8 is_stmt 0 view .LVU1056
 2964 0166 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2965              		.loc 1 644 7 view .LVU1057
 2966 016a 13F0020F 		tst	r3, #2
 2967 016e 00F08B80 		beq	.L147
 2968              	.LBB92:
 645:lvgl/src/lv_draw/lv_img_buf.c ****         lv_opa_t a0 = (a00 * xr + (a10 * (255 - xr))) >> 8;
 2969              		.loc 1 645 9 is_stmt 1 view .LVU1058
 2970              		.loc 1 645 47 is_stmt 0 view .LVU1059
 2971 0172 C5F1FF03 		rsb	r3, r5, #255
 2972              		.loc 1 645 40 view .LVU1060
 2973 0176 03FB0BF1 		mul	r1, r3, fp
 2974              		.loc 1 645 33 view .LVU1061
 2975 017a 05FB0A11 		mla	r1, r5, r10, r1
 2976              		.loc 1 645 18 view .LVU1062
 2977 017e C1F30721 		ubfx	r1, r1, #8, #8
 2978              	.LVL360:
 646:lvgl/src/lv_draw/lv_img_buf.c ****         lv_opa_t a1 = (a01 * xr + (a11 * (255 - xr))) >> 8;
 2979              		.loc 1 646 9 is_stmt 1 view .LVU1063
 2980              		.loc 1 646 40 is_stmt 0 view .LVU1064
 2981 0182 03FB00F3 		mul	r3, r3, r0
 2982              		.loc 1 646 33 view .LVU1065
 2983 0186 05FB0733 		mla	r3, r5, r7, r3
 2984              		.loc 1 646 18 view .LVU1066
 2985 018a C3F30723 		ubfx	r3, r3, #8, #8
 2986              	.LVL361:
 647:lvgl/src/lv_draw/lv_img_buf.c ****         dsc->res.opa = (a0 * yr + (a1 * (255 - yr))) >> 8;
 2987              		.loc 1 647 9 is_stmt 1 view .LVU1067
 2988              		.loc 1 647 46 is_stmt 0 view .LVU1068
 2989 018e C6F1FF02 		rsb	r2, r6, #255
 2990              		.loc 1 647 39 view .LVU1069
 2991 0192 02FB03F2 		mul	r2, r2, r3
 2992              		.loc 1 647 33 view .LVU1070
 2993 0196 06FB0122 		mla	r2, r6, r1, r2
 2994              		.loc 1 647 54 view .LVU1071
 2995 019a 1212     		asrs	r2, r2, #8
 2996              		.loc 1 647 22 view .LVU1072
 2997 019c A275     		strb	r2, [r4, #22]
 648:lvgl/src/lv_draw/lv_img_buf.c **** 
 649:lvgl/src/lv_draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN && a1 <= LV_OPA_MIN) return false;
 2998              		.loc 1 649 9 is_stmt 1 view .LVU1073
 2999              		.loc 1 649 11 is_stmt 0 view .LVU1074
 3000 019e 0229     		cmp	r1, #2
 3001 01a0 02D8     		bhi	.L148
 3002              		.loc 1 649 29 discriminator 1 view .LVU1075
 3003 01a2 022B     		cmp	r3, #2
 3004 01a4 40F23C81 		bls	.L172
ARM GAS  D:\Temp\ccBYw3dY.s 			page 87


 3005              	.L148:
 650:lvgl/src/lv_draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN) yr = LV_OPA_TRANSP;
 3006              		.loc 1 650 9 is_stmt 1 view .LVU1076
 3007              		.loc 1 650 11 is_stmt 0 view .LVU1077
 3008 01a8 0229     		cmp	r1, #2
 3009 01aa 00D8     		bhi	.L150
 3010              		.loc 1 650 33 view .LVU1078
 3011 01ac 0026     		movs	r6, #0
 3012              	.LVL362:
 3013              	.L150:
 651:lvgl/src/lv_draw/lv_img_buf.c ****         if(a1 <= LV_OPA_MIN) yr = LV_OPA_COVER;
 3014              		.loc 1 651 9 is_stmt 1 view .LVU1079
 3015              		.loc 1 651 11 is_stmt 0 view .LVU1080
 3016 01ae 022B     		cmp	r3, #2
 3017 01b0 00D8     		bhi	.L151
 3018              		.loc 1 651 33 view .LVU1081
 3019 01b2 FF26     		movs	r6, #255
 3020              	.LVL363:
 3021              	.L151:
 652:lvgl/src/lv_draw/lv_img_buf.c ****         if(a00 <= LV_OPA_MIN) xr0 = LV_OPA_TRANSP;
 3022              		.loc 1 652 9 is_stmt 1 view .LVU1082
 3023              		.loc 1 652 11 is_stmt 0 view .LVU1083
 3024 01b4 BAF1020F 		cmp	r10, #2
 3025 01b8 64D9     		bls	.L175
 3026              	.LBE92:
 642:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t xr1 = xr;
 3027              		.loc 1 642 14 view .LVU1084
 3028 01ba 2B46     		mov	r3, r5
 3029              	.LVL364:
 3030              	.L152:
 3031              	.LBB93:
 653:lvgl/src/lv_draw/lv_img_buf.c ****         if(a10 <= LV_OPA_MIN) xr0 = LV_OPA_COVER;
 3032              		.loc 1 653 9 is_stmt 1 view .LVU1085
 3033              		.loc 1 653 11 is_stmt 0 view .LVU1086
 3034 01bc BBF1020F 		cmp	fp, #2
 3035 01c0 00D8     		bhi	.L153
 3036              		.loc 1 653 35 view .LVU1087
 3037 01c2 FF23     		movs	r3, #255
 3038              	.LVL365:
 3039              	.L153:
 654:lvgl/src/lv_draw/lv_img_buf.c ****         if(a01 <= LV_OPA_MIN) xr1 = LV_OPA_TRANSP;
 3040              		.loc 1 654 9 is_stmt 1 view .LVU1088
 3041              		.loc 1 654 11 is_stmt 0 view .LVU1089
 3042 01c4 022F     		cmp	r7, #2
 3043 01c6 00D8     		bhi	.L154
 3044              		.loc 1 654 35 view .LVU1090
 3045 01c8 0025     		movs	r5, #0
 3046              	.LVL366:
 3047              	.L154:
 655:lvgl/src/lv_draw/lv_img_buf.c ****         if(a11 <= LV_OPA_MIN) xr1 = LV_OPA_COVER;
 3048              		.loc 1 655 9 is_stmt 1 view .LVU1091
 3049              		.loc 1 655 11 is_stmt 0 view .LVU1092
 3050 01ca 0228     		cmp	r0, #2
 3051 01cc 5FD8     		bhi	.L155
 3052              		.loc 1 655 35 view .LVU1093
 3053 01ce FF25     		movs	r5, #255
 3054              	.LVL367:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 88


 3055              		.loc 1 655 35 view .LVU1094
 3056 01d0 5DE0     		b	.L155
 3057              	.LVL368:
 3058              	.L139:
 3059              		.loc 1 655 35 view .LVU1095
 3060              	.LBE93:
 631:lvgl/src/lv_draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3061              		.loc 1 631 9 is_stmt 1 view .LVU1096
 631:lvgl/src/lv_draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3062              		.loc 1 631 15 is_stmt 0 view .LVU1097
 3063 01d2 04F11800 		add	r0, r4, #24
 631:lvgl/src/lv_draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3064              		.loc 1 631 66 view .LVU1098
 3065 01d6 B4F84010 		ldrh	r1, [r4, #64]
 3066              	.LVL369:
 631:lvgl/src/lv_draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3067              		.loc 1 631 74 view .LVU1099
 3068 01da BFB2     		uxth	r7, r7
 3069              	.LVL370:
 631:lvgl/src/lv_draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3070              		.loc 1 631 74 view .LVU1100
 3071 01dc 3944     		add	r1, r1, r7
 631:lvgl/src/lv_draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3072              		.loc 1 631 15 view .LVU1101
 3073 01de 238A     		ldrh	r3, [r4, #16]
 3074 01e0 B4F94220 		ldrsh	r2, [r4, #66]
 3075 01e4 09B2     		sxth	r1, r1
 3076 01e6 8346     		mov	fp, r0
 3077 01e8 FFF7FEFF 		bl	lv_img_buf_get_px_color
 3078              	.LVL371:
 631:lvgl/src/lv_draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 3079              		.loc 1 631 15 view .LVU1102
 3080 01ec ADF81C00 		strh	r0, [sp, #28]	@ movhi
 632:lvgl/src/lv_draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 3081              		.loc 1 632 9 is_stmt 1 view .LVU1103
 632:lvgl/src/lv_draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 3082              		.loc 1 632 83 is_stmt 0 view .LVU1104
 3083 01f0 B4F84220 		ldrh	r2, [r4, #66]
 632:lvgl/src/lv_draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 3084              		.loc 1 632 91 view .LVU1105
 3085 01f4 1FFA88F8 		uxth	r8, r8
 3086              	.LVL372:
 632:lvgl/src/lv_draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 3087              		.loc 1 632 91 view .LVU1106
 3088 01f8 4244     		add	r2, r2, r8
 632:lvgl/src/lv_draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 3089              		.loc 1 632 15 view .LVU1107
 3090 01fa 238A     		ldrh	r3, [r4, #16]
 3091 01fc 12B2     		sxth	r2, r2
 3092 01fe B4F94010 		ldrsh	r1, [r4, #64]
 3093 0202 5846     		mov	r0, fp
 3094 0204 FFF7FEFF 		bl	lv_img_buf_get_px_color
 3095              	.LVL373:
 3096 0208 ADF81800 		strh	r0, [sp, #24]	@ movhi
 633:lvgl/src/lv_draw/lv_img_buf.c **** 
 3097              		.loc 1 633 9 is_stmt 1 view .LVU1108
 633:lvgl/src/lv_draw/lv_img_buf.c **** 
ARM GAS  D:\Temp\ccBYw3dY.s 			page 89


 3098              		.loc 1 633 66 is_stmt 0 view .LVU1109
 3099 020c B4F84010 		ldrh	r1, [r4, #64]
 633:lvgl/src/lv_draw/lv_img_buf.c **** 
 3100              		.loc 1 633 74 view .LVU1110
 3101 0210 3944     		add	r1, r1, r7
 633:lvgl/src/lv_draw/lv_img_buf.c **** 
 3102              		.loc 1 633 88 view .LVU1111
 3103 0212 B4F84220 		ldrh	r2, [r4, #66]
 633:lvgl/src/lv_draw/lv_img_buf.c **** 
 3104              		.loc 1 633 96 view .LVU1112
 3105 0216 4244     		add	r2, r2, r8
 633:lvgl/src/lv_draw/lv_img_buf.c **** 
 3106              		.loc 1 633 15 view .LVU1113
 3107 0218 238A     		ldrh	r3, [r4, #16]
 3108 021a 12B2     		sxth	r2, r2
 3109 021c 09B2     		sxth	r1, r1
 3110 021e 5846     		mov	r0, fp
 3111 0220 FFF7FEFF 		bl	lv_img_buf_get_px_color
 3112              	.LVL374:
 3113 0224 ADF81400 		strh	r0, [sp, #20]	@ movhi
 635:lvgl/src/lv_draw/lv_img_buf.c ****             a10 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int)
 3114              		.loc 1 635 9 is_stmt 1 view .LVU1114
 635:lvgl/src/lv_draw/lv_img_buf.c ****             a10 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int)
 3115              		.loc 1 635 12 is_stmt 0 view .LVU1115
 3116 0228 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 635:lvgl/src/lv_draw/lv_img_buf.c ****             a10 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int)
 3117              		.loc 1 635 11 view .LVU1116
 3118 022c 13F0020F 		tst	r3, #2
 3119 0230 24D0     		beq	.L171
 636:lvgl/src/lv_draw/lv_img_buf.c ****             a01 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn)
 3120              		.loc 1 636 13 is_stmt 1 view .LVU1117
 636:lvgl/src/lv_draw/lv_img_buf.c ****             a01 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn)
 3121              		.loc 1 636 70 is_stmt 0 view .LVU1118
 3122 0232 B4F94030 		ldrsh	r3, [r4, #64]
 636:lvgl/src/lv_draw/lv_img_buf.c ****             a01 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn)
 3123              		.loc 1 636 78 view .LVU1119
 3124 0236 0293     		str	r3, [sp, #8]
 3125 0238 17FA83F7 		uxtah	r7, r7, r3
 636:lvgl/src/lv_draw/lv_img_buf.c ****             a01 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn)
 3126              		.loc 1 636 19 view .LVU1120
 3127 023c 3BB2     		sxth	r3, r7
 3128 023e B4F94270 		ldrsh	r7, [r4, #66]
 3129 0242 3A46     		mov	r2, r7
 3130 0244 0393     		str	r3, [sp, #12]
 3131 0246 1946     		mov	r1, r3
 3132 0248 CDF804B0 		str	fp, [sp, #4]
 3133 024c 5846     		mov	r0, fp
 3134 024e FFF7FEFF 		bl	lv_img_buf_get_px_alpha
 3135              	.LVL375:
 3136 0252 8346     		mov	fp, r0
 3137              	.LVL376:
 637:lvgl/src/lv_draw/lv_img_buf.c ****             a11 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int 
 3138              		.loc 1 637 13 is_stmt 1 view .LVU1121
 637:lvgl/src/lv_draw/lv_img_buf.c ****             a11 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int 
 3139              		.loc 1 637 95 is_stmt 0 view .LVU1122
 3140 0254 18FA87F8 		uxtah	r8, r8, r7
 637:lvgl/src/lv_draw/lv_img_buf.c ****             a11 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int 
ARM GAS  D:\Temp\ccBYw3dY.s 			page 90


 3141              		.loc 1 637 19 view .LVU1123
 3142 0258 0FFA88F8 		sxth	r8, r8
 3143 025c 4246     		mov	r2, r8
 3144 025e 0299     		ldr	r1, [sp, #8]
 3145 0260 0198     		ldr	r0, [sp, #4]
 3146 0262 FFF7FEFF 		bl	lv_img_buf_get_px_alpha
 3147              	.LVL377:
 3148 0266 0746     		mov	r7, r0
 3149              	.LVL378:
 638:lvgl/src/lv_draw/lv_img_buf.c ****         }
 3150              		.loc 1 638 13 is_stmt 1 view .LVU1124
 638:lvgl/src/lv_draw/lv_img_buf.c ****         }
 3151              		.loc 1 638 19 is_stmt 0 view .LVU1125
 3152 0268 4246     		mov	r2, r8
 3153 026a 0399     		ldr	r1, [sp, #12]
 3154 026c 0198     		ldr	r0, [sp, #4]
 3155 026e FFF7FEFF 		bl	lv_img_buf_get_px_alpha
 3156              	.LVL379:
 638:lvgl/src/lv_draw/lv_img_buf.c ****         }
 3157              		.loc 1 638 19 view .LVU1126
 3158 0272 78E7     		b	.L146
 3159              	.LVL380:
 3160              	.L170:
 617:lvgl/src/lv_draw/lv_img_buf.c **** 
 3161              		.loc 1 617 14 view .LVU1127
 3162 0274 0020     		movs	r0, #0
 616:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t a11 = 0;
 3163              		.loc 1 616 14 view .LVU1128
 3164 0276 0746     		mov	r7, r0
 3165              	.LVL381:
 615:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t a01 = 0;
 3166              		.loc 1 615 14 view .LVU1129
 3167 0278 8346     		mov	fp, r0
 3168 027a 74E7     		b	.L146
 3169              	.LVL382:
 3170              	.L171:
 617:lvgl/src/lv_draw/lv_img_buf.c **** 
 3171              		.loc 1 617 14 view .LVU1130
 3172 027c 0020     		movs	r0, #0
 616:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t a11 = 0;
 3173              		.loc 1 616 14 view .LVU1131
 3174 027e 0746     		mov	r7, r0
 615:lvgl/src/lv_draw/lv_img_buf.c ****     lv_opa_t a01 = 0;
 3175              		.loc 1 615 14 view .LVU1132
 3176 0280 8346     		mov	fp, r0
 3177 0282 70E7     		b	.L146
 3178              	.LVL383:
 3179              	.L175:
 3180              	.LBB94:
 652:lvgl/src/lv_draw/lv_img_buf.c ****         if(a10 <= LV_OPA_MIN) xr0 = LV_OPA_COVER;
 3181              		.loc 1 652 35 view .LVU1133
 3182 0284 0023     		movs	r3, #0
 3183              	.LVL384:
 652:lvgl/src/lv_draw/lv_img_buf.c ****         if(a10 <= LV_OPA_MIN) xr0 = LV_OPA_COVER;
 3184              		.loc 1 652 35 view .LVU1134
 3185 0286 99E7     		b	.L152
 3186              	.LVL385:
ARM GAS  D:\Temp\ccBYw3dY.s 			page 91


 3187              	.L147:
 652:lvgl/src/lv_draw/lv_img_buf.c ****         if(a10 <= LV_OPA_MIN) xr0 = LV_OPA_COVER;
 3188              		.loc 1 652 35 view .LVU1135
 3189              	.LBE94:
 656:lvgl/src/lv_draw/lv_img_buf.c ****     }
 657:lvgl/src/lv_draw/lv_img_buf.c ****     else {
 658:lvgl/src/lv_draw/lv_img_buf.c ****         xr0 = xr;
 3190              		.loc 1 658 9 is_stmt 1 view .LVU1136
 659:lvgl/src/lv_draw/lv_img_buf.c ****         xr1 = xr;
 3191              		.loc 1 659 9 view .LVU1137
 660:lvgl/src/lv_draw/lv_img_buf.c ****         dsc->res.opa = LV_OPA_COVER;
 3192              		.loc 1 660 9 view .LVU1138
 3193              		.loc 1 660 22 is_stmt 0 view .LVU1139
 3194 0288 FF23     		movs	r3, #255
 3195 028a A375     		strb	r3, [r4, #22]
 658:lvgl/src/lv_draw/lv_img_buf.c ****         xr1 = xr;
 3196              		.loc 1 658 13 view .LVU1140
 3197 028c 2B46     		mov	r3, r5
 3198              	.LVL386:
 3199              	.L155:
 661:lvgl/src/lv_draw/lv_img_buf.c ****     }
 662:lvgl/src/lv_draw/lv_img_buf.c **** 
 663:lvgl/src/lv_draw/lv_img_buf.c ****     lv_color_t c0;
 3200              		.loc 1 663 5 is_stmt 1 view .LVU1141
 664:lvgl/src/lv_draw/lv_img_buf.c ****     if(xr0 == LV_OPA_TRANSP) c0 = c01;
 3201              		.loc 1 664 5 view .LVU1142
 3202              		.loc 1 664 7 is_stmt 0 view .LVU1143
 3203 028e 63B9     		cbnz	r3, .L156
 3204              		.loc 1 664 30 is_stmt 1 discriminator 1 view .LVU1144
 3205              		.loc 1 664 33 is_stmt 0 discriminator 1 view .LVU1145
 3206 0290 BDF81C90 		ldrh	r9, [sp, #28]
 3207              	.LVL387:
 3208              	.L157:
 665:lvgl/src/lv_draw/lv_img_buf.c ****     else if(xr0 == LV_OPA_COVER) c0 = c00;
 666:lvgl/src/lv_draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 667:lvgl/src/lv_draw/lv_img_buf.c **** 
 668:lvgl/src/lv_draw/lv_img_buf.c ****     lv_color_t c1;
 3209              		.loc 1 668 5 is_stmt 1 view .LVU1146
 669:lvgl/src/lv_draw/lv_img_buf.c ****     if(xr1 == LV_OPA_TRANSP) c1 = c11;
 3210              		.loc 1 669 5 view .LVU1147
 3211              		.loc 1 669 7 is_stmt 0 view .LVU1148
 3212 0294 002D     		cmp	r5, #0
 3213 0296 44D1     		bne	.L159
 3214              		.loc 1 669 30 is_stmt 1 discriminator 1 view .LVU1149
 3215              		.loc 1 669 33 is_stmt 0 discriminator 1 view .LVU1150
 3216 0298 BDF81430 		ldrh	r3, [sp, #20]
 3217              	.LVL388:
 3218              	.L160:
 670:lvgl/src/lv_draw/lv_img_buf.c ****     else if(xr1 == LV_OPA_COVER) c1 = c10;
 671:lvgl/src/lv_draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 672:lvgl/src/lv_draw/lv_img_buf.c **** 
 673:lvgl/src/lv_draw/lv_img_buf.c ****     if(yr == LV_OPA_TRANSP) dsc->res.color = c1;
 3219              		.loc 1 673 5 is_stmt 1 view .LVU1151
 3220              		.loc 1 673 7 is_stmt 0 view .LVU1152
 3221 029c 002E     		cmp	r6, #0
 3222 029e 7FD1     		bne	.L162
 3223              		.loc 1 673 29 is_stmt 1 discriminator 1 view .LVU1153
ARM GAS  D:\Temp\ccBYw3dY.s 			page 92


 3224              	.LVL389:
 3225              		.loc 1 673 44 is_stmt 0 discriminator 1 view .LVU1154
 3226 02a0 A382     		strh	r3, [r4, #20]	@ movhi
 674:lvgl/src/lv_draw/lv_img_buf.c ****     else if(yr == LV_OPA_COVER) dsc->res.color = c0;
 675:lvgl/src/lv_draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 676:lvgl/src/lv_draw/lv_img_buf.c **** 
 677:lvgl/src/lv_draw/lv_img_buf.c ****     return true;
 3227              		.loc 1 677 12 discriminator 1 view .LVU1155
 3228 02a2 0120     		movs	r0, #1
 3229              	.LVL390:
 3230              	.L149:
 678:lvgl/src/lv_draw/lv_img_buf.c **** }
 3231              		.loc 1 678 1 view .LVU1156
 3232 02a4 09B0     		add	sp, sp, #36
 3233              	.LCFI27:
 3234              		.cfi_remember_state
 3235              		.cfi_def_cfa_offset 36
 3236              		@ sp needed
 3237 02a6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3238              	.LVL391:
 3239              	.L156:
 3240              	.LCFI28:
 3241              		.cfi_restore_state
 665:lvgl/src/lv_draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 3242              		.loc 1 665 10 is_stmt 1 view .LVU1157
 665:lvgl/src/lv_draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 3243              		.loc 1 665 12 is_stmt 0 view .LVU1158
 3244 02aa FF2B     		cmp	r3, #255
 3245 02ac F2D0     		beq	.L157
 666:lvgl/src/lv_draw/lv_img_buf.c **** 
 3246              		.loc 1 666 10 is_stmt 1 view .LVU1159
 3247 02ae BDF81C00 		ldrh	r0, [sp, #28]
 3248              	.LVL392:
 3249              	.LBB95:
 3250              	.LBI95:
 433:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 434:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
 435:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 436:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 437:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 438:lvgl/src/lv_draw/../lv_misc/lv_color.h **** //! @cond Doxygen_Suppress
 439:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 440:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
 441:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Mix two colors with a given ratio.
 442:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 443:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 444:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 445:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @return the mixed color
 446:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 3251              		.loc 3 447 48 view .LVU1160
 3252              	.LBB96:
 448:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color_t ret;
 3253              		.loc 3 449 5 view .LVU1161
 450:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 451:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
ARM GAS  D:\Temp\ccBYw3dY.s 			page 93


 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 3254              		.loc 3 452 5 view .LVU1162
 3255              		.loc 3 452 5 is_stmt 0 view .LVU1163
 3256 02b2 4FEAD922 		lsr	r2, r9, #11
 3257              	.LVL393:
 3258              		.loc 3 452 5 view .LVU1164
 3259 02b6 C10A     		lsrs	r1, r0, #11
 3260 02b8 C3F1FF07 		rsb	r7, r3, #255
 3261              	.LVL394:
 3262              		.loc 3 452 5 view .LVU1165
 3263 02bc 07FB01F1 		mul	r1, r7, r1
 3264 02c0 03FB0212 		mla	r2, r3, r2, r1
 3265 02c4 8032     		adds	r2, r2, #128
 3266 02c6 02EB0221 		add	r1, r2, r2, lsl #8
 3267 02ca 02EBC112 		add	r2, r2, r1, lsl #7
 3268 02ce C2F3C452 		ubfx	r2, r2, #23, #5
 3269 02d2 4FF00001 		mov	r1, #0	@ movhi
 3270              		.loc 3 452 5 view .LVU1166
 3271 02d6 62F3CF21 		bfi	r1, r2, #11, #5
 3272              	.LVL395:
 453:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 3273              		.loc 3 454 5 is_stmt 1 view .LVU1167
 3274 02da C9F34512 		ubfx	r2, r9, #5, #6
 3275 02de C0F3451C 		ubfx	ip, r0, #5, #6
 3276 02e2 0CFB07FC 		mul	ip, ip, r7
 3277 02e6 02FB03C2 		mla	r2, r2, r3, ip
 3278 02ea 8032     		adds	r2, r2, #128
 3279 02ec 02EB022C 		add	ip, r2, r2, lsl #8
 3280 02f0 02EBCC12 		add	r2, r2, ip, lsl #7
 3281 02f4 C2F3C552 		ubfx	r2, r2, #23, #6
 3282 02f8 62F34A11 		bfi	r1, r2, #5, #6
 455:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 3283              		.loc 3 456 5 view .LVU1168
 3284 02fc 09F01F09 		and	r9, r9, #31
 3285              	.LVL396:
 3286              		.loc 3 456 5 is_stmt 0 view .LVU1169
 3287 0300 00F01F00 		and	r0, r0, #31
 3288              	.LVL397:
 3289              		.loc 3 456 5 view .LVU1170
 3290 0304 00FB07F7 		mul	r7, r0, r7
 3291 0308 09FB0373 		mla	r3, r9, r3, r7
 3292              	.LVL398:
 3293              		.loc 3 456 5 view .LVU1171
 3294 030c 8033     		adds	r3, r3, #128
 3295 030e 03EB0322 		add	r2, r3, r3, lsl #8
 3296 0312 03EBC213 		add	r3, r3, r2, lsl #7
 3297 0316 C3F3C453 		ubfx	r3, r3, #23, #5
 3298 031a 63F30401 		bfi	r1, r3, #0, #5
 457:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 3299              		.loc 3 458 5 is_stmt 1 view .LVU1172
 3300              		.loc 3 458 5 view .LVU1173
 459:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 460:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 461:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
ARM GAS  D:\Temp\ccBYw3dY.s 			page 94


 462:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 463:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret;
 3301              		.loc 3 464 5 view .LVU1174
 3302 031e 8946     		mov	r9, r1	@ movhi
 3303              		.loc 3 464 5 is_stmt 0 view .LVU1175
 3304 0320 B8E7     		b	.L157
 3305              	.L159:
 3306              		.loc 3 464 5 view .LVU1176
 3307              	.LBE96:
 3308              	.LBE95:
 670:lvgl/src/lv_draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3309              		.loc 1 670 10 is_stmt 1 view .LVU1177
 670:lvgl/src/lv_draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3310              		.loc 1 670 12 is_stmt 0 view .LVU1178
 3311 0322 FF2D     		cmp	r5, #255
 3312 0324 39D0     		beq	.L183
 671:lvgl/src/lv_draw/lv_img_buf.c **** 
 3313              		.loc 1 671 10 is_stmt 1 view .LVU1179
 3314 0326 BDF81800 		ldrh	r0, [sp, #24]
 3315 032a BDF81410 		ldrh	r1, [sp, #20]
 3316              	.LVL399:
 3317              	.LBB97:
 3318              	.LBI97:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 3319              		.loc 3 447 48 view .LVU1180
 3320              	.LBB98:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3321              		.loc 3 449 5 view .LVU1181
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3322              		.loc 3 452 5 view .LVU1182
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3323              		.loc 3 452 5 is_stmt 0 view .LVU1183
 3324 032e C30A     		lsrs	r3, r0, #11
 3325              	.LVL400:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3326              		.loc 3 452 5 view .LVU1184
 3327 0330 CA0A     		lsrs	r2, r1, #11
 3328 0332 C5F1FF07 		rsb	r7, r5, #255
 3329 0336 07FB02F2 		mul	r2, r7, r2
 3330 033a 05FB0323 		mla	r3, r5, r3, r2
 3331 033e 8033     		adds	r3, r3, #128
 3332 0340 03EB0322 		add	r2, r3, r3, lsl #8
 3333 0344 03EBC213 		add	r3, r3, r2, lsl #7
 3334 0348 C3F3C452 		ubfx	r2, r3, #23, #5
 3335 034c 4FF00003 		mov	r3, #0	@ movhi
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3336              		.loc 3 452 5 view .LVU1185
 3337 0350 62F3CF23 		bfi	r3, r2, #11, #5
 3338              	.LVL401:
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3339              		.loc 3 454 5 is_stmt 1 view .LVU1186
 3340 0354 C0F34512 		ubfx	r2, r0, #5, #6
 3341 0358 C1F3451C 		ubfx	ip, r1, #5, #6
 3342 035c 0CFB07FC 		mul	ip, ip, r7
 3343 0360 02FB05C2 		mla	r2, r2, r5, ip
 3344 0364 8032     		adds	r2, r2, #128
ARM GAS  D:\Temp\ccBYw3dY.s 			page 95


 3345 0366 02EB022C 		add	ip, r2, r2, lsl #8
 3346 036a 02EBCC12 		add	r2, r2, ip, lsl #7
 3347 036e C2F3C552 		ubfx	r2, r2, #23, #6
 3348 0372 62F34A13 		bfi	r3, r2, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3349              		.loc 3 456 5 view .LVU1187
 3350 0376 00F01F00 		and	r0, r0, #31
 3351              	.LVL402:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3352              		.loc 3 456 5 is_stmt 0 view .LVU1188
 3353 037a 01F01F01 		and	r1, r1, #31
 3354              	.LVL403:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3355              		.loc 3 456 5 view .LVU1189
 3356 037e 01FB07F7 		mul	r7, r1, r7
 3357 0382 00FB0575 		mla	r5, r0, r5, r7
 3358              	.LVL404:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3359              		.loc 3 456 5 view .LVU1190
 3360 0386 8035     		adds	r5, r5, #128
 3361 0388 05EB0522 		add	r2, r5, r5, lsl #8
 3362 038c 05EBC215 		add	r5, r5, r2, lsl #7
 3363 0390 C5F3C455 		ubfx	r5, r5, #23, #5
 3364 0394 65F30403 		bfi	r3, r5, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3365              		.loc 3 458 5 is_stmt 1 view .LVU1191
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3366              		.loc 3 458 5 view .LVU1192
 3367              		.loc 3 464 5 view .LVU1193
 3368              		.loc 3 464 5 is_stmt 0 view .LVU1194
 3369 0398 80E7     		b	.L160
 3370              	.LVL405:
 3371              	.L183:
 3372              		.loc 3 464 5 view .LVU1195
 3373              	.LBE98:
 3374              	.LBE97:
 670:lvgl/src/lv_draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3375              		.loc 1 670 34 is_stmt 1 discriminator 1 view .LVU1196
 670:lvgl/src/lv_draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3376              		.loc 1 670 37 is_stmt 0 discriminator 1 view .LVU1197
 3377 039a BDF81830 		ldrh	r3, [sp, #24]
 3378 039e 7DE7     		b	.L160
 3379              	.LVL406:
 3380              	.L162:
 674:lvgl/src/lv_draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3381              		.loc 1 674 10 is_stmt 1 view .LVU1198
 674:lvgl/src/lv_draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3382              		.loc 1 674 12 is_stmt 0 view .LVU1199
 3383 03a0 FF2E     		cmp	r6, #255
 3384 03a2 39D0     		beq	.L184
 675:lvgl/src/lv_draw/lv_img_buf.c **** 
 3385              		.loc 1 675 10 is_stmt 1 view .LVU1200
 3386              	.LVL407:
 3387              	.LBB99:
 3388              	.LBI99:
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 3389              		.loc 3 447 48 view .LVU1201
ARM GAS  D:\Temp\ccBYw3dY.s 			page 96


 3390              	.LBB100:
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 3391              		.loc 3 449 5 view .LVU1202
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3392              		.loc 3 452 5 view .LVU1203
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3393              		.loc 3 452 5 is_stmt 0 view .LVU1204
 3394 03a4 C9F3C422 		ubfx	r2, r9, #11, #5
 3395              	.LVL408:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3396              		.loc 3 452 5 view .LVU1205
 3397 03a8 C3F3C421 		ubfx	r1, r3, #11, #5
 3398              	.LVL409:
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3399              		.loc 3 452 5 view .LVU1206
 3400 03ac C6F1FF00 		rsb	r0, r6, #255
 3401 03b0 00FB01F1 		mul	r1, r0, r1
 3402 03b4 06FB0212 		mla	r2, r6, r2, r1
 3403 03b8 8032     		adds	r2, r2, #128
 3404 03ba 02EB0221 		add	r1, r2, r2, lsl #8
 3405 03be 02EBC112 		add	r2, r2, r1, lsl #7
 3406 03c2 C2F3C452 		ubfx	r2, r2, #23, #5
 3407 03c6 4FF00001 		mov	r1, #0	@ movhi
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3408              		.loc 3 452 5 view .LVU1207
 3409 03ca 62F3CF21 		bfi	r1, r2, #11, #5
 3410              	.LVL410:
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3411              		.loc 3 454 5 is_stmt 1 view .LVU1208
 3412 03ce C9F34512 		ubfx	r2, r9, #5, #6
 3413 03d2 C3F34515 		ubfx	r5, r3, #5, #6
 3414 03d6 05FB00F5 		mul	r5, r5, r0
 3415 03da 02FB0652 		mla	r2, r2, r6, r5
 3416 03de 8032     		adds	r2, r2, #128
 3417 03e0 02EB0225 		add	r5, r2, r2, lsl #8
 3418 03e4 02EBC512 		add	r2, r2, r5, lsl #7
 3419 03e8 C2F3C552 		ubfx	r2, r2, #23, #6
 3420 03ec 62F34A11 		bfi	r1, r2, #5, #6
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3421              		.loc 3 456 5 view .LVU1209
 3422 03f0 09F01F09 		and	r9, r9, #31
 3423              	.LVL411:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3424              		.loc 3 456 5 is_stmt 0 view .LVU1210
 3425 03f4 03F01F03 		and	r3, r3, #31
 3426              	.LVL412:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3427              		.loc 3 456 5 view .LVU1211
 3428 03f8 03FB00F0 		mul	r0, r3, r0
 3429 03fc 09FB0606 		mla	r6, r9, r6, r0
 3430              	.LVL413:
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3431              		.loc 3 456 5 view .LVU1212
 3432 0400 8036     		adds	r6, r6, #128
 3433 0402 06EB0623 		add	r3, r6, r6, lsl #8
 3434 0406 06EBC316 		add	r6, r6, r3, lsl #7
 3435 040a C6F3C456 		ubfx	r6, r6, #23, #5
ARM GAS  D:\Temp\ccBYw3dY.s 			page 97


 3436 040e 66F30401 		bfi	r1, r6, #0, #5
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3437              		.loc 3 458 5 is_stmt 1 view .LVU1213
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 3438              		.loc 3 458 5 view .LVU1214
 3439              		.loc 3 464 5 view .LVU1215
 3440              		.loc 3 464 5 is_stmt 0 view .LVU1216
 3441              	.LBE100:
 3442              	.LBE99:
 675:lvgl/src/lv_draw/lv_img_buf.c **** 
 3443              		.loc 1 675 27 view .LVU1217
 3444 0412 A182     		strh	r1, [r4, #20]	@ movhi
 677:lvgl/src/lv_draw/lv_img_buf.c **** }
 3445              		.loc 1 677 12 view .LVU1218
 3446 0414 0120     		movs	r0, #1
 3447 0416 45E7     		b	.L149
 3448              	.LVL414:
 3449              	.L184:
 674:lvgl/src/lv_draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3450              		.loc 1 674 33 is_stmt 1 discriminator 1 view .LVU1219
 674:lvgl/src/lv_draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3451              		.loc 1 674 48 is_stmt 0 discriminator 1 view .LVU1220
 3452 0418 A4F81490 		strh	r9, [r4, #20]	@ movhi
 677:lvgl/src/lv_draw/lv_img_buf.c **** }
 3453              		.loc 1 677 12 discriminator 1 view .LVU1221
 3454 041c 0120     		movs	r0, #1
 3455 041e 41E7     		b	.L149
 3456              	.LVL415:
 3457              	.L172:
 3458              	.LBB101:
 649:lvgl/src/lv_draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN) yr = LV_OPA_TRANSP;
 3459              		.loc 1 649 57 view .LVU1222
 3460 0420 0020     		movs	r0, #0
 3461              	.LVL416:
 649:lvgl/src/lv_draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN) yr = LV_OPA_TRANSP;
 3462              		.loc 1 649 57 view .LVU1223
 3463 0422 3FE7     		b	.L149
 3464              	.LBE101:
 3465              		.cfi_endproc
 3466              	.LFE177:
 3468              		.section	.rodata
 3469              		.align	2
 3470              		.set	.LANCHOR0,. + 0
 3471              	.LC0:
 3472 0000 00       		.byte	0
 3473 0001 55       		.byte	85
 3474 0002 AA       		.byte	-86
 3475 0003 FF       		.byte	-1
 3476              	.LC1:
 3477 0004 00       		.byte	0
 3478 0005 11       		.byte	17
 3479 0006 22       		.byte	34
 3480 0007 33       		.byte	51
 3481 0008 44       		.byte	68
 3482 0009 55       		.byte	85
 3483 000a 66       		.byte	102
 3484 000b 77       		.byte	119
ARM GAS  D:\Temp\ccBYw3dY.s 			page 98


 3485 000c 88       		.byte	-120
 3486 000d 99       		.byte	-103
 3487 000e AA       		.byte	-86
 3488 000f BB       		.byte	-69
 3489 0010 CC       		.byte	-52
 3490 0011 DD       		.byte	-35
 3491 0012 EE       		.byte	-18
 3492 0013 FF       		.byte	-1
 3493              		.text
 3494              	.Letext0:
 3495              		.file 4 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-none
 3496              		.file 5 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 3497              		.file 6 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 3498              		.file 7 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 3499              		.file 8 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 3500              		.file 9 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 3501              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 3502              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3503              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3504              		.file 13 "lvgl/lv_conf.h"
 3505              		.file 14 "lvgl/src/lv_draw/../lv_misc/lv_area.h"
 3506              		.file 15 "lvgl/src/lv_draw/lv_img_buf.h"
 3507              		.file 16 "lvgl/src/lv_draw/../lv_core/../lv_font/lv_font.h"
 3508              		.file 17 "lvgl/src/lv_draw/../lv_core/../lv_misc/lv_anim.h"
 3509              		.file 18 "lvgl/src/lv_draw/../lv_misc/lv_math.h"
 3510              		.file 19 "lvgl/src/lv_draw/lv_draw_img.h"
ARM GAS  D:\Temp\ccBYw3dY.s 			page 99


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_img_buf.c
  D:\Temp\ccBYw3dY.s:18     .text.lv_img_buf_get_px_color:0000000000000000 $t
  D:\Temp\ccBYw3dY.s:26     .text.lv_img_buf_get_px_color:0000000000000000 lv_img_buf_get_px_color
  D:\Temp\ccBYw3dY.s:363    .text.lv_img_buf_get_px_alpha:0000000000000000 $t
  D:\Temp\ccBYw3dY.s:370    .text.lv_img_buf_get_px_alpha:0000000000000000 lv_img_buf_get_px_alpha
  D:\Temp\ccBYw3dY.s:654    .text.lv_img_buf_get_px_alpha:00000000000000f8 $d
  D:\Temp\ccBYw3dY.s:661    .text.lv_img_buf_set_px_alpha:0000000000000000 $t
  D:\Temp\ccBYw3dY.s:668    .text.lv_img_buf_set_px_alpha:0000000000000000 lv_img_buf_set_px_alpha
  D:\Temp\ccBYw3dY.s:931    .text.lv_img_buf_set_px_color:0000000000000000 $t
  D:\Temp\ccBYw3dY.s:938    .text.lv_img_buf_set_px_color:0000000000000000 lv_img_buf_set_px_color
  D:\Temp\ccBYw3dY.s:1337   .text.lv_img_buf_set_palette:0000000000000000 $t
  D:\Temp\ccBYw3dY.s:1344   .text.lv_img_buf_set_palette:0000000000000000 lv_img_buf_set_palette
  D:\Temp\ccBYw3dY.s:1512   .text.lv_img_buf_free:0000000000000000 $t
  D:\Temp\ccBYw3dY.s:1519   .text.lv_img_buf_free:0000000000000000 lv_img_buf_free
  D:\Temp\ccBYw3dY.s:1564   .text.lv_img_buf_get_img_size:0000000000000000 $t
  D:\Temp\ccBYw3dY.s:1571   .text.lv_img_buf_get_img_size:0000000000000000 lv_img_buf_get_img_size
  D:\Temp\ccBYw3dY.s:1587   .text.lv_img_buf_get_img_size:000000000000000a $d
  D:\Temp\ccBYw3dY.s:1758   .text.lv_img_buf_alloc:0000000000000000 $t
  D:\Temp\ccBYw3dY.s:1765   .text.lv_img_buf_alloc:0000000000000000 lv_img_buf_alloc
  D:\Temp\ccBYw3dY.s:1878   .text._lv_img_buf_transform_init:0000000000000000 $t
  D:\Temp\ccBYw3dY.s:1885   .text._lv_img_buf_transform_init:0000000000000000 _lv_img_buf_transform_init
  D:\Temp\ccBYw3dY.s:2105   .text._lv_img_buf_transform_init:0000000000000120 $d
  D:\Temp\ccBYw3dY.s:2110   .text._lv_img_buf_get_transformed_area:0000000000000000 $t
  D:\Temp\ccBYw3dY.s:2117   .text._lv_img_buf_get_transformed_area:0000000000000000 _lv_img_buf_get_transformed_area
  D:\Temp\ccBYw3dY.s:2516   .text._lv_img_buf_get_transformed_area:00000000000001e0 $d
  D:\Temp\ccBYw3dY.s:2521   .text._lv_img_buf_transform_anti_alias:0000000000000000 $t
  D:\Temp\ccBYw3dY.s:2528   .text._lv_img_buf_transform_anti_alias:0000000000000000 _lv_img_buf_transform_anti_alias
  D:\Temp\ccBYw3dY.s:3469   .rodata:0000000000000000 $d
  D:\Temp\ccBYw3dY.s:1598   .text.lv_img_buf_get_img_size:0000000000000015 $d
  D:\Temp\ccBYw3dY.s:1598   .text.lv_img_buf_get_img_size:0000000000000016 $t

UNDEFINED SYMBOLS
lv_img_cf_get_px_size
lv_mem_free
lv_mem_alloc
_lv_memset_00
_lv_trigo_sin
lv_img_cf_is_chroma_keyed
lv_img_cf_has_alpha
