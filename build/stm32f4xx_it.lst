ARM GAS  D:\Temp\ccWlYxjz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
  18              		.align	1
  19              		.global	DMA2_Stream0_IRQHandler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	DMA2_Stream0_IRQHandler:
  27              	.LFB560:
  28              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  27:Src/stm32f4xx_it.c **** #include "../lvgl/lvgl.h"
  28:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32f4xx_it.c **** 
  30:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  D:\Temp\ccWlYxjz.s 			page 2


  31:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32f4xx_it.c **** 
  33:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  34:Src/stm32f4xx_it.c **** 
  35:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32f4xx_it.c ****  
  38:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  44:Src/stm32f4xx_it.c **** 
  45:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32f4xx_it.c **** 
  48:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  49:Src/stm32f4xx_it.c **** 
  50:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  52:Src/stm32f4xx_it.c **** 
  53:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  54:Src/stm32f4xx_it.c **** 
  55:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  59:Src/stm32f4xx_it.c **** 
  60:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  61:Src/stm32f4xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_FS;
  62:Src/stm32f4xx_it.c **** extern RNG_HandleTypeDef hrng;
  63:Src/stm32f4xx_it.c **** extern SD_HandleTypeDef hsd;
  64:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  65:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_memtomem_dma2_stream0;
  66:Src/stm32f4xx_it.c **** /**
  67:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
  68:Src/stm32f4xx_it.c ****   */
  69:Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
  70:Src/stm32f4xx_it.c **** {
  29              		.loc 1 70 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  71:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
  72:Src/stm32f4xx_it.c **** 
  73:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
  74:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_memtomem_dma2_stream0);
  38              		.loc 1 74 3 view .LVU1
  39 0002 0248     		ldr	r0, .L3
  40 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
  41              	.LVL0:
ARM GAS  D:\Temp\ccWlYxjz.s 			page 3


  75:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
  76:Src/stm32f4xx_it.c **** 
  77:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
  78:Src/stm32f4xx_it.c **** }
  42              		.loc 1 78 1 is_stmt 0 view .LVU2
  43 0008 08BD     		pop	{r3, pc}
  44              	.L4:
  45 000a 00BF     		.align	2
  46              	.L3:
  47 000c 00000000 		.word	hdma_memtomem_dma2_stream0
  48              		.cfi_endproc
  49              	.LFE560:
  51              		.section	.text.NMI_Handler,"ax",%progbits
  52              		.align	1
  53              		.global	NMI_Handler
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	NMI_Handler:
  60              	.LFB561:
  79:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  80:Src/stm32f4xx_it.c **** 
  81:Src/stm32f4xx_it.c **** /******************************************************************************/
  82:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  83:Src/stm32f4xx_it.c **** /******************************************************************************/
  84:Src/stm32f4xx_it.c **** /**
  85:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  86:Src/stm32f4xx_it.c ****   */
  87:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  88:Src/stm32f4xx_it.c **** {
  61              		.loc 1 88 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  89:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  90:Src/stm32f4xx_it.c **** 
  91:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  92:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  93:Src/stm32f4xx_it.c **** 
  94:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  95:Src/stm32f4xx_it.c **** }
  66              		.loc 1 95 1 view .LVU4
  67 0000 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE561:
  71              		.section	.text.HardFault_Handler,"ax",%progbits
  72              		.align	1
  73              		.global	HardFault_Handler
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	HardFault_Handler:
  80              	.LFB562:
  96:Src/stm32f4xx_it.c **** 
ARM GAS  D:\Temp\ccWlYxjz.s 			page 4


  97:Src/stm32f4xx_it.c **** /**
  98:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  99:Src/stm32f4xx_it.c ****   */
 100:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
 101:Src/stm32f4xx_it.c **** {
  81              		.loc 1 101 1 view -0
  82              		.cfi_startproc
  83              		@ Volatile: function does not return.
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.L7:
 102:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 103:Src/stm32f4xx_it.c **** 
 104:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 105:Src/stm32f4xx_it.c ****   while (1)
  88              		.loc 1 105 3 discriminator 1 view .LVU6
 106:Src/stm32f4xx_it.c ****   {
 107:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 108:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 109:Src/stm32f4xx_it.c ****   }
  89              		.loc 1 109 3 discriminator 1 view .LVU7
  90 0000 FEE7     		b	.L7
  91              		.cfi_endproc
  92              	.LFE562:
  94              		.section	.text.MemManage_Handler,"ax",%progbits
  95              		.align	1
  96              		.global	MemManage_Handler
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu fpv4-sp-d16
 102              	MemManage_Handler:
 103              	.LFB563:
 110:Src/stm32f4xx_it.c **** }
 111:Src/stm32f4xx_it.c **** 
 112:Src/stm32f4xx_it.c **** /**
 113:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 114:Src/stm32f4xx_it.c ****   */
 115:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 116:Src/stm32f4xx_it.c **** {
 104              		.loc 1 116 1 view -0
 105              		.cfi_startproc
 106              		@ Volatile: function does not return.
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.L9:
 117:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 118:Src/stm32f4xx_it.c **** 
 119:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 120:Src/stm32f4xx_it.c ****   while (1)
 111              		.loc 1 120 3 discriminator 1 view .LVU9
 121:Src/stm32f4xx_it.c ****   {
 122:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 123:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 124:Src/stm32f4xx_it.c ****   }
ARM GAS  D:\Temp\ccWlYxjz.s 			page 5


 112              		.loc 1 124 3 discriminator 1 view .LVU10
 113 0000 FEE7     		b	.L9
 114              		.cfi_endproc
 115              	.LFE563:
 117              		.section	.text.BusFault_Handler,"ax",%progbits
 118              		.align	1
 119              		.global	BusFault_Handler
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	BusFault_Handler:
 126              	.LFB564:
 125:Src/stm32f4xx_it.c **** }
 126:Src/stm32f4xx_it.c **** 
 127:Src/stm32f4xx_it.c **** /**
 128:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 129:Src/stm32f4xx_it.c ****   */
 130:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 131:Src/stm32f4xx_it.c **** {
 127              		.loc 1 131 1 view -0
 128              		.cfi_startproc
 129              		@ Volatile: function does not return.
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 133              	.L11:
 132:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 133:Src/stm32f4xx_it.c **** 
 134:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 135:Src/stm32f4xx_it.c ****   while (1)
 134              		.loc 1 135 3 discriminator 1 view .LVU12
 136:Src/stm32f4xx_it.c ****   {
 137:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 138:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 139:Src/stm32f4xx_it.c ****   }
 135              		.loc 1 139 3 discriminator 1 view .LVU13
 136 0000 FEE7     		b	.L11
 137              		.cfi_endproc
 138              	.LFE564:
 140              		.section	.text.UsageFault_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	UsageFault_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	UsageFault_Handler:
 149              	.LFB565:
 140:Src/stm32f4xx_it.c **** }
 141:Src/stm32f4xx_it.c **** 
 142:Src/stm32f4xx_it.c **** /**
 143:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 144:Src/stm32f4xx_it.c ****   */
 145:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 146:Src/stm32f4xx_it.c **** {
 150              		.loc 1 146 1 view -0
ARM GAS  D:\Temp\ccWlYxjz.s 			page 6


 151              		.cfi_startproc
 152              		@ Volatile: function does not return.
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156              	.L13:
 147:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 148:Src/stm32f4xx_it.c **** 
 149:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 150:Src/stm32f4xx_it.c ****   while (1)
 157              		.loc 1 150 3 discriminator 1 view .LVU15
 151:Src/stm32f4xx_it.c ****   {
 152:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 153:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 154:Src/stm32f4xx_it.c ****   }
 158              		.loc 1 154 3 discriminator 1 view .LVU16
 159 0000 FEE7     		b	.L13
 160              		.cfi_endproc
 161              	.LFE565:
 163              		.section	.text.SVC_Handler,"ax",%progbits
 164              		.align	1
 165              		.global	SVC_Handler
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	SVC_Handler:
 172              	.LFB566:
 155:Src/stm32f4xx_it.c **** }
 156:Src/stm32f4xx_it.c **** 
 157:Src/stm32f4xx_it.c **** /**
 158:Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 159:Src/stm32f4xx_it.c ****   */
 160:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 161:Src/stm32f4xx_it.c **** {
 173              		.loc 1 161 1 view -0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 162:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 163:Src/stm32f4xx_it.c **** 
 164:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 165:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 166:Src/stm32f4xx_it.c **** 
 167:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 168:Src/stm32f4xx_it.c **** }
 178              		.loc 1 168 1 view .LVU18
 179 0000 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE566:
 183              		.section	.text.DebugMon_Handler,"ax",%progbits
 184              		.align	1
 185              		.global	DebugMon_Handler
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
ARM GAS  D:\Temp\ccWlYxjz.s 			page 7


 189              		.fpu fpv4-sp-d16
 191              	DebugMon_Handler:
 192              	.LFB567:
 169:Src/stm32f4xx_it.c **** 
 170:Src/stm32f4xx_it.c **** /**
 171:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 172:Src/stm32f4xx_it.c ****   */
 173:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 174:Src/stm32f4xx_it.c **** {
 193              		.loc 1 174 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 175:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 176:Src/stm32f4xx_it.c **** 
 177:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 178:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 179:Src/stm32f4xx_it.c **** 
 180:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 181:Src/stm32f4xx_it.c **** }
 198              		.loc 1 181 1 view .LVU20
 199 0000 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE567:
 203              		.section	.text.PendSV_Handler,"ax",%progbits
 204              		.align	1
 205              		.global	PendSV_Handler
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	PendSV_Handler:
 212              	.LFB568:
 182:Src/stm32f4xx_it.c **** 
 183:Src/stm32f4xx_it.c **** /**
 184:Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 185:Src/stm32f4xx_it.c ****   */
 186:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 187:Src/stm32f4xx_it.c **** {
 213              		.loc 1 187 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 188:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 189:Src/stm32f4xx_it.c **** 
 190:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 191:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 192:Src/stm32f4xx_it.c **** 
 193:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 194:Src/stm32f4xx_it.c **** }
 218              		.loc 1 194 1 view .LVU22
 219 0000 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE568:
 223              		.section	.text.SysTick_Handler,"ax",%progbits
ARM GAS  D:\Temp\ccWlYxjz.s 			page 8


 224              		.align	1
 225              		.global	SysTick_Handler
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	SysTick_Handler:
 232              	.LFB569:
 195:Src/stm32f4xx_it.c **** 
 196:Src/stm32f4xx_it.c **** /**
 197:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 198:Src/stm32f4xx_it.c ****   */
 199:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 200:Src/stm32f4xx_it.c **** {
 233              		.loc 1 200 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 08B5     		push	{r3, lr}
 238              	.LCFI1:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 201:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 202:Src/stm32f4xx_it.c **** 
 203:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 204:Src/stm32f4xx_it.c ****   HAL_IncTick();
 242              		.loc 1 204 3 view .LVU24
 243 0002 FFF7FEFF 		bl	HAL_IncTick
 244              	.LVL1:
 205:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 206:Src/stm32f4xx_it.c **** lv_tick_inc(1);
 245              		.loc 1 206 1 view .LVU25
 246 0006 0120     		movs	r0, #1
 247 0008 FFF7FEFF 		bl	lv_tick_inc
 248              	.LVL2:
 207:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 208:Src/stm32f4xx_it.c **** }
 249              		.loc 1 208 1 is_stmt 0 view .LVU26
 250 000c 08BD     		pop	{r3, pc}
 251              		.cfi_endproc
 252              	.LFE569:
 254              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.global	EXTI3_IRQHandler
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	EXTI3_IRQHandler:
 263              	.LFB570:
 209:Src/stm32f4xx_it.c **** 
 210:Src/stm32f4xx_it.c **** /******************************************************************************/
 211:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 212:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 213:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 214:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
ARM GAS  D:\Temp\ccWlYxjz.s 			page 9


 215:Src/stm32f4xx_it.c **** /******************************************************************************/
 216:Src/stm32f4xx_it.c **** 
 217:Src/stm32f4xx_it.c **** /**
 218:Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line3 interrupt.
 219:Src/stm32f4xx_it.c ****   */
 220:Src/stm32f4xx_it.c **** void EXTI3_IRQHandler(void)
 221:Src/stm32f4xx_it.c **** {
 264              		.loc 1 221 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 222:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 223:Src/stm32f4xx_it.c **** 
 224:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 225:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 273              		.loc 1 225 3 view .LVU28
 274 0002 0820     		movs	r0, #8
 275 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 276              	.LVL3:
 226:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 227:Src/stm32f4xx_it.c **** 
 228:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 229:Src/stm32f4xx_it.c **** }
 277              		.loc 1 229 1 is_stmt 0 view .LVU29
 278 0008 08BD     		pop	{r3, pc}
 279              		.cfi_endproc
 280              	.LFE570:
 282              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 283              		.align	1
 284              		.global	EXTI4_IRQHandler
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	EXTI4_IRQHandler:
 291              	.LFB571:
 230:Src/stm32f4xx_it.c **** 
 231:Src/stm32f4xx_it.c **** /**
 232:Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line4 interrupt.
 233:Src/stm32f4xx_it.c ****   */
 234:Src/stm32f4xx_it.c **** void EXTI4_IRQHandler(void)
 235:Src/stm32f4xx_it.c **** {
 292              		.loc 1 235 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 08B5     		push	{r3, lr}
 297              	.LCFI3:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
 236:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
ARM GAS  D:\Temp\ccWlYxjz.s 			page 10


 237:Src/stm32f4xx_it.c **** 
 238:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 239:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 301              		.loc 1 239 3 view .LVU31
 302 0002 1020     		movs	r0, #16
 303 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 304              	.LVL4:
 240:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 241:Src/stm32f4xx_it.c **** 
 242:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 243:Src/stm32f4xx_it.c **** }
 305              		.loc 1 243 1 is_stmt 0 view .LVU32
 306 0008 08BD     		pop	{r3, pc}
 307              		.cfi_endproc
 308              	.LFE571:
 310              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 311              		.align	1
 312              		.global	EXTI9_5_IRQHandler
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	EXTI9_5_IRQHandler:
 319              	.LFB572:
 244:Src/stm32f4xx_it.c **** 
 245:Src/stm32f4xx_it.c **** /**
 246:Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 247:Src/stm32f4xx_it.c ****   */
 248:Src/stm32f4xx_it.c **** void EXTI9_5_IRQHandler(void)
 249:Src/stm32f4xx_it.c **** {
 320              		.loc 1 249 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI4:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 250:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 251:Src/stm32f4xx_it.c **** 
 252:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 253:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 329              		.loc 1 253 3 view .LVU34
 330 0002 2020     		movs	r0, #32
 331 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 332              	.LVL5:
 254:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_8);
 333              		.loc 1 254 3 view .LVU35
 334 0008 4FF48070 		mov	r0, #256
 335 000c FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 336              	.LVL6:
 255:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 256:Src/stm32f4xx_it.c **** 
 257:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 258:Src/stm32f4xx_it.c **** }
 337              		.loc 1 258 1 is_stmt 0 view .LVU36
ARM GAS  D:\Temp\ccWlYxjz.s 			page 11


 338 0010 08BD     		pop	{r3, pc}
 339              		.cfi_endproc
 340              	.LFE572:
 342              		.section	.text.SDIO_IRQHandler,"ax",%progbits
 343              		.align	1
 344              		.global	SDIO_IRQHandler
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.fpu fpv4-sp-d16
 350              	SDIO_IRQHandler:
 351              	.LFB573:
 259:Src/stm32f4xx_it.c **** 
 260:Src/stm32f4xx_it.c **** /**
 261:Src/stm32f4xx_it.c ****   * @brief This function handles SDIO global interrupt.
 262:Src/stm32f4xx_it.c ****   */
 263:Src/stm32f4xx_it.c **** void SDIO_IRQHandler(void)
 264:Src/stm32f4xx_it.c **** {
 352              		.loc 1 264 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356 0000 08B5     		push	{r3, lr}
 357              	.LCFI5:
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 3, -8
 360              		.cfi_offset 14, -4
 265:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SDIO_IRQn 0 */
 266:Src/stm32f4xx_it.c **** 
 267:Src/stm32f4xx_it.c ****   /* USER CODE END SDIO_IRQn 0 */
 268:Src/stm32f4xx_it.c ****   HAL_SD_IRQHandler(&hsd);
 361              		.loc 1 268 3 view .LVU38
 362 0002 0248     		ldr	r0, .L27
 363 0004 FFF7FEFF 		bl	HAL_SD_IRQHandler
 364              	.LVL7:
 269:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SDIO_IRQn 1 */
 270:Src/stm32f4xx_it.c **** 
 271:Src/stm32f4xx_it.c ****   /* USER CODE END SDIO_IRQn 1 */
 272:Src/stm32f4xx_it.c **** }
 365              		.loc 1 272 1 is_stmt 0 view .LVU39
 366 0008 08BD     		pop	{r3, pc}
 367              	.L28:
 368 000a 00BF     		.align	2
 369              	.L27:
 370 000c 00000000 		.word	hsd
 371              		.cfi_endproc
 372              	.LFE573:
 374              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 375              		.align	1
 376              		.global	OTG_FS_IRQHandler
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 380              		.fpu fpv4-sp-d16
 382              	OTG_FS_IRQHandler:
 383              	.LFB574:
 273:Src/stm32f4xx_it.c **** 
ARM GAS  D:\Temp\ccWlYxjz.s 			page 12


 274:Src/stm32f4xx_it.c **** /**
 275:Src/stm32f4xx_it.c ****   * @brief This function handles USB On The Go FS global interrupt.
 276:Src/stm32f4xx_it.c ****   */
 277:Src/stm32f4xx_it.c **** void OTG_FS_IRQHandler(void)
 278:Src/stm32f4xx_it.c **** {
 384              		.loc 1 278 1 is_stmt 1 view -0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388 0000 08B5     		push	{r3, lr}
 389              	.LCFI6:
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 3, -8
 392              		.cfi_offset 14, -4
 279:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 0 */
 280:Src/stm32f4xx_it.c **** 
 281:Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 0 */
 282:Src/stm32f4xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 393              		.loc 1 282 3 view .LVU41
 394 0002 0248     		ldr	r0, .L31
 395 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 396              	.LVL8:
 283:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 1 */
 284:Src/stm32f4xx_it.c **** 
 285:Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 1 */
 286:Src/stm32f4xx_it.c **** }
 397              		.loc 1 286 1 is_stmt 0 view .LVU42
 398 0008 08BD     		pop	{r3, pc}
 399              	.L32:
 400 000a 00BF     		.align	2
 401              	.L31:
 402 000c 00000000 		.word	hpcd_USB_OTG_FS
 403              		.cfi_endproc
 404              	.LFE574:
 406              		.section	.text.HASH_RNG_IRQHandler,"ax",%progbits
 407              		.align	1
 408              		.global	HASH_RNG_IRQHandler
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv4-sp-d16
 414              	HASH_RNG_IRQHandler:
 415              	.LFB575:
 287:Src/stm32f4xx_it.c **** 
 288:Src/stm32f4xx_it.c **** /**
 289:Src/stm32f4xx_it.c ****   * @brief This function handles HASH and RNG global interrupts.
 290:Src/stm32f4xx_it.c ****   */
 291:Src/stm32f4xx_it.c **** void HASH_RNG_IRQHandler(void)
 292:Src/stm32f4xx_it.c **** {
 416              		.loc 1 292 1 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 08B5     		push	{r3, lr}
 421              	.LCFI7:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
ARM GAS  D:\Temp\ccWlYxjz.s 			page 13


 424              		.cfi_offset 14, -4
 293:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HASH_RNG_IRQn 0 */
 294:Src/stm32f4xx_it.c **** 
 295:Src/stm32f4xx_it.c ****   /* USER CODE END HASH_RNG_IRQn 0 */
 296:Src/stm32f4xx_it.c ****   HAL_RNG_IRQHandler(&hrng);
 425              		.loc 1 296 3 view .LVU44
 426 0002 0248     		ldr	r0, .L35
 427 0004 FFF7FEFF 		bl	HAL_RNG_IRQHandler
 428              	.LVL9:
 297:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HASH_RNG_IRQn 1 */
 298:Src/stm32f4xx_it.c **** 
 299:Src/stm32f4xx_it.c ****   /* USER CODE END HASH_RNG_IRQn 1 */
 300:Src/stm32f4xx_it.c **** }
 429              		.loc 1 300 1 is_stmt 0 view .LVU45
 430 0008 08BD     		pop	{r3, pc}
 431              	.L36:
 432 000a 00BF     		.align	2
 433              	.L35:
 434 000c 00000000 		.word	hrng
 435              		.cfi_endproc
 436              	.LFE575:
 438              		.text
 439              	.Letext0:
 440              		.file 2 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 441              		.file 3 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 442              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 443              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 444              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 445              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 446              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 447              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rng.h"
 448              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 449              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 450              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 451              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 452              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 453              		.file 15 "lvgl/lv_conf.h"
 454              		.file 16 "Src/../lvgl/src/lv_misc/lv_mem.h"
 455              		.file 17 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 456              		.file 18 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 457              		.file 19 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 458              		.file 20 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 459              		.file 21 "Src/../lvgl/src/lv_core/../lv_font/lv_font.h"
 460              		.file 22 "Src/../lvgl/src/lv_core/../lv_misc/lv_anim.h"
 461              		.file 23 "Src/../lvgl/src/lv_core/../lv_draw/../lv_misc/lv_txt.h"
 462              		.file 24 "Src/../lvgl/src/lv_core/../lv_draw/lv_draw_label.h"
 463              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 464              		.file 26 "Src/../lvgl/src/lv_hal/lv_hal_tick.h"
ARM GAS  D:\Temp\ccWlYxjz.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
  D:\Temp\ccWlYxjz.s:18     .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:26     .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
  D:\Temp\ccWlYxjz.s:47     .text.DMA2_Stream0_IRQHandler:000000000000000c $d
  D:\Temp\ccWlYxjz.s:52     .text.NMI_Handler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:59     .text.NMI_Handler:0000000000000000 NMI_Handler
  D:\Temp\ccWlYxjz.s:72     .text.HardFault_Handler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:79     .text.HardFault_Handler:0000000000000000 HardFault_Handler
  D:\Temp\ccWlYxjz.s:95     .text.MemManage_Handler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:102    .text.MemManage_Handler:0000000000000000 MemManage_Handler
  D:\Temp\ccWlYxjz.s:118    .text.BusFault_Handler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:125    .text.BusFault_Handler:0000000000000000 BusFault_Handler
  D:\Temp\ccWlYxjz.s:141    .text.UsageFault_Handler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:148    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
  D:\Temp\ccWlYxjz.s:164    .text.SVC_Handler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:171    .text.SVC_Handler:0000000000000000 SVC_Handler
  D:\Temp\ccWlYxjz.s:184    .text.DebugMon_Handler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:191    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
  D:\Temp\ccWlYxjz.s:204    .text.PendSV_Handler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:211    .text.PendSV_Handler:0000000000000000 PendSV_Handler
  D:\Temp\ccWlYxjz.s:224    .text.SysTick_Handler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:231    .text.SysTick_Handler:0000000000000000 SysTick_Handler
  D:\Temp\ccWlYxjz.s:255    .text.EXTI3_IRQHandler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:262    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
  D:\Temp\ccWlYxjz.s:283    .text.EXTI4_IRQHandler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:290    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
  D:\Temp\ccWlYxjz.s:311    .text.EXTI9_5_IRQHandler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:318    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
  D:\Temp\ccWlYxjz.s:343    .text.SDIO_IRQHandler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:350    .text.SDIO_IRQHandler:0000000000000000 SDIO_IRQHandler
  D:\Temp\ccWlYxjz.s:370    .text.SDIO_IRQHandler:000000000000000c $d
  D:\Temp\ccWlYxjz.s:375    .text.OTG_FS_IRQHandler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:382    .text.OTG_FS_IRQHandler:0000000000000000 OTG_FS_IRQHandler
  D:\Temp\ccWlYxjz.s:402    .text.OTG_FS_IRQHandler:000000000000000c $d
  D:\Temp\ccWlYxjz.s:407    .text.HASH_RNG_IRQHandler:0000000000000000 $t
  D:\Temp\ccWlYxjz.s:414    .text.HASH_RNG_IRQHandler:0000000000000000 HASH_RNG_IRQHandler
  D:\Temp\ccWlYxjz.s:434    .text.HASH_RNG_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_memtomem_dma2_stream0
HAL_IncTick
lv_tick_inc
HAL_GPIO_EXTI_IRQHandler
HAL_SD_IRQHandler
hsd
HAL_PCD_IRQHandler
hpcd_USB_OTG_FS
HAL_RNG_IRQHandler
hrng
