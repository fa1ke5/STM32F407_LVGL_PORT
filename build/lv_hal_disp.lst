ARM GAS  D:\Temp\ccJHuqZf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_hal_disp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_disp_drv_init,"ax",%progbits
  18              		.align	1
  19              		.global	lv_disp_drv_init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	lv_disp_drv_init:
  27              	.LVL0:
  28              	.LFB458:
  29              		.file 1 "lvgl/src/lv_hal/lv_hal_disp.c"
   1:lvgl/src/lv_hal/lv_hal_disp.c **** 
   2:lvgl/src/lv_hal/lv_hal_disp.c **** /**
   3:lvgl/src/lv_hal/lv_hal_disp.c ****  * @file hal_disp.c
   4:lvgl/src/lv_hal/lv_hal_disp.c ****  *
   5:lvgl/src/lv_hal/lv_hal_disp.c ****  * @description HAL layer for display driver
   6:lvgl/src/lv_hal/lv_hal_disp.c ****  *
   7:lvgl/src/lv_hal/lv_hal_disp.c ****  */
   8:lvgl/src/lv_hal/lv_hal_disp.c **** 
   9:lvgl/src/lv_hal/lv_hal_disp.c **** /*********************
  10:lvgl/src/lv_hal/lv_hal_disp.c ****  *      INCLUDES
  11:lvgl/src/lv_hal/lv_hal_disp.c ****  *********************/
  12:lvgl/src/lv_hal/lv_hal_disp.c **** #include <stdint.h>
  13:lvgl/src/lv_hal/lv_hal_disp.c **** #include <stddef.h>
  14:lvgl/src/lv_hal/lv_hal_disp.c **** #include "lv_hal.h"
  15:lvgl/src/lv_hal/lv_hal_disp.c **** #include "../lv_misc/lv_mem.h"
  16:lvgl/src/lv_hal/lv_hal_disp.c **** #include "../lv_misc/lv_gc.h"
  17:lvgl/src/lv_hal/lv_hal_disp.c **** #include "../lv_misc/lv_debug.h"
  18:lvgl/src/lv_hal/lv_hal_disp.c **** #include "../lv_core/lv_obj.h"
  19:lvgl/src/lv_hal/lv_hal_disp.c **** #include "../lv_core/lv_refr.h"
  20:lvgl/src/lv_hal/lv_hal_disp.c **** #include "../lv_themes/lv_theme.h"
  21:lvgl/src/lv_hal/lv_hal_disp.c **** 
  22:lvgl/src/lv_hal/lv_hal_disp.c **** /*********************
  23:lvgl/src/lv_hal/lv_hal_disp.c ****  *      DEFINES
  24:lvgl/src/lv_hal/lv_hal_disp.c ****  *********************/
  25:lvgl/src/lv_hal/lv_hal_disp.c **** 
  26:lvgl/src/lv_hal/lv_hal_disp.c **** /**********************
  27:lvgl/src/lv_hal/lv_hal_disp.c ****  *      TYPEDEFS
  28:lvgl/src/lv_hal/lv_hal_disp.c ****  **********************/
  29:lvgl/src/lv_hal/lv_hal_disp.c **** 
ARM GAS  D:\Temp\ccJHuqZf.s 			page 2


  30:lvgl/src/lv_hal/lv_hal_disp.c **** /**********************
  31:lvgl/src/lv_hal/lv_hal_disp.c ****  *  STATIC PROTOTYPES
  32:lvgl/src/lv_hal/lv_hal_disp.c ****  **********************/
  33:lvgl/src/lv_hal/lv_hal_disp.c **** 
  34:lvgl/src/lv_hal/lv_hal_disp.c **** /**********************
  35:lvgl/src/lv_hal/lv_hal_disp.c ****  *  STATIC VARIABLES
  36:lvgl/src/lv_hal/lv_hal_disp.c ****  **********************/
  37:lvgl/src/lv_hal/lv_hal_disp.c **** static lv_disp_t * disp_def;
  38:lvgl/src/lv_hal/lv_hal_disp.c **** 
  39:lvgl/src/lv_hal/lv_hal_disp.c **** /**********************
  40:lvgl/src/lv_hal/lv_hal_disp.c ****  *      MACROS
  41:lvgl/src/lv_hal/lv_hal_disp.c ****  **********************/
  42:lvgl/src/lv_hal/lv_hal_disp.c **** 
  43:lvgl/src/lv_hal/lv_hal_disp.c **** /**********************
  44:lvgl/src/lv_hal/lv_hal_disp.c ****  *   GLOBAL FUNCTIONS
  45:lvgl/src/lv_hal/lv_hal_disp.c ****  **********************/
  46:lvgl/src/lv_hal/lv_hal_disp.c **** 
  47:lvgl/src/lv_hal/lv_hal_disp.c **** /**
  48:lvgl/src/lv_hal/lv_hal_disp.c ****  * Initialize a display driver with default values.
  49:lvgl/src/lv_hal/lv_hal_disp.c ****  * It is used to surly have known values in the fields ant not memory junk.
  50:lvgl/src/lv_hal/lv_hal_disp.c ****  * After it you can set the fields.
  51:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param driver pointer to driver variable to initialize
  52:lvgl/src/lv_hal/lv_hal_disp.c ****  */
  53:lvgl/src/lv_hal/lv_hal_disp.c **** void lv_disp_drv_init(lv_disp_drv_t * driver)
  54:lvgl/src/lv_hal/lv_hal_disp.c **** {
  30              		.loc 1 54 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 54 1 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 0446     		mov	r4, r0
  55:lvgl/src/lv_hal/lv_hal_disp.c ****     _lv_memset_00(driver, sizeof(lv_disp_drv_t));
  41              		.loc 1 55 5 is_stmt 1 view .LVU2
  42 0004 3421     		movs	r1, #52
  43 0006 FFF7FEFF 		bl	_lv_memset_00
  44              	.LVL1:
  56:lvgl/src/lv_hal/lv_hal_disp.c **** 
  57:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->flush_cb         = NULL;
  45              		.loc 1 57 5 view .LVU3
  46              		.loc 1 57 30 is_stmt 0 view .LVU4
  47 000a 0023     		movs	r3, #0
  48 000c E360     		str	r3, [r4, #12]
  58:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->hor_res          = LV_HOR_RES_MAX;
  49              		.loc 1 58 5 is_stmt 1 view .LVU5
  50              		.loc 1 58 30 is_stmt 0 view .LVU6
  51 000e 4FF4A072 		mov	r2, #320
  52 0012 2280     		strh	r2, [r4]	@ movhi
  59:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->ver_res          = LV_VER_RES_MAX;
  53              		.loc 1 59 5 is_stmt 1 view .LVU7
  54              		.loc 1 59 30 is_stmt 0 view .LVU8
  55 0014 F022     		movs	r2, #240
  56 0016 6280     		strh	r2, [r4, #2]	@ movhi
ARM GAS  D:\Temp\ccJHuqZf.s 			page 3


  60:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->buffer           = NULL;
  57              		.loc 1 60 5 is_stmt 1 view .LVU9
  58              		.loc 1 60 30 is_stmt 0 view .LVU10
  59 0018 6360     		str	r3, [r4, #4]
  61:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->rotated          = 0;
  60              		.loc 1 61 5 is_stmt 1 view .LVU11
  61              		.loc 1 61 30 is_stmt 0 view .LVU12
  62 001a 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
  63 001c 63F34102 		bfi	r2, r3, #1, #1
  64 0020 2272     		strb	r2, [r4, #8]
  62:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->color_chroma_key = LV_COLOR_TRANSP;
  65              		.loc 1 62 5 is_stmt 1 view .LVU13
  66              		.loc 1 62 30 is_stmt 0 view .LVU14
  67 0022 94F83020 		ldrb	r2, [r4, #48]	@ zero_extendqisi2
  68 0026 63F30402 		bfi	r2, r3, #0, #5
  69 002a 84F83020 		strb	r2, [r4, #48]
  70 002e 228E     		ldrh	r2, [r4, #48]
  71 0030 42F4FC62 		orr	r2, r2, #2016
  72 0034 2286     		strh	r2, [r4, #48]	@ movhi
  73 0036 C2F30722 		ubfx	r2, r2, #8, #8
  74 003a 63F3C702 		bfi	r2, r3, #3, #5
  75 003e 84F83120 		strb	r2, [r4, #49]
  63:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->dpi = LV_DPI;
  76              		.loc 1 63 5 is_stmt 1 view .LVU15
  77              		.loc 1 63 17 is_stmt 0 view .LVU16
  78 0042 2289     		ldrh	r2, [r4, #8]
  79 0044 5021     		movs	r1, #80
  80 0046 61F38B02 		bfi	r2, r1, #2, #10
  81 004a 2281     		strh	r2, [r4, #8]	@ movhi
  64:lvgl/src/lv_hal/lv_hal_disp.c **** 
  65:lvgl/src/lv_hal/lv_hal_disp.c **** #if LV_ANTIALIAS
  66:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->antialiasing = true;
  82              		.loc 1 66 5 is_stmt 1 view .LVU17
  83              		.loc 1 66 26 is_stmt 0 view .LVU18
  84 004c D2B2     		uxtb	r2, r2
  85 004e 42F00102 		orr	r2, r2, #1
  86 0052 2272     		strb	r2, [r4, #8]
  67:lvgl/src/lv_hal/lv_hal_disp.c **** #endif
  68:lvgl/src/lv_hal/lv_hal_disp.c **** 
  69:lvgl/src/lv_hal/lv_hal_disp.c **** #if LV_COLOR_SCREEN_TRANSP
  70:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->screen_transp = 1;
  71:lvgl/src/lv_hal/lv_hal_disp.c **** #endif
  72:lvgl/src/lv_hal/lv_hal_disp.c **** 
  73:lvgl/src/lv_hal/lv_hal_disp.c **** #if LV_USE_GPU
  74:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->gpu_blend_cb = NULL;
  87              		.loc 1 74 5 is_stmt 1 view .LVU19
  88              		.loc 1 74 26 is_stmt 0 view .LVU20
  89 0054 A362     		str	r3, [r4, #40]
  75:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->gpu_fill_cb  = NULL;
  90              		.loc 1 75 5 is_stmt 1 view .LVU21
  91              		.loc 1 75 26 is_stmt 0 view .LVU22
  92 0056 E362     		str	r3, [r4, #44]
  76:lvgl/src/lv_hal/lv_hal_disp.c **** #endif
  77:lvgl/src/lv_hal/lv_hal_disp.c **** 
  78:lvgl/src/lv_hal/lv_hal_disp.c **** #if LV_USE_USER_DATA
  79:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->user_data = NULL;
  80:lvgl/src/lv_hal/lv_hal_disp.c **** #endif
ARM GAS  D:\Temp\ccJHuqZf.s 			page 4


  81:lvgl/src/lv_hal/lv_hal_disp.c **** 
  82:lvgl/src/lv_hal/lv_hal_disp.c ****     driver->set_px_cb = NULL;
  93              		.loc 1 82 5 is_stmt 1 view .LVU23
  94              		.loc 1 82 23 is_stmt 0 view .LVU24
  95 0058 6361     		str	r3, [r4, #20]
  83:lvgl/src/lv_hal/lv_hal_disp.c **** }
  96              		.loc 1 83 1 view .LVU25
  97 005a 10BD     		pop	{r4, pc}
  98              		.loc 1 83 1 view .LVU26
  99              		.cfi_endproc
 100              	.LFE458:
 102              		.section	.text.lv_disp_buf_init,"ax",%progbits
 103              		.align	1
 104              		.global	lv_disp_buf_init
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	lv_disp_buf_init:
 111              	.LVL2:
 112              	.LFB459:
  84:lvgl/src/lv_hal/lv_hal_disp.c **** 
  85:lvgl/src/lv_hal/lv_hal_disp.c **** /**
  86:lvgl/src/lv_hal/lv_hal_disp.c ****  * Initialize a display buffer
  87:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp_buf pointer `lv_disp_buf_t` variable to initialize
  88:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param buf1 A buffer to be used by LVGL to draw the image.
  89:lvgl/src/lv_hal/lv_hal_disp.c ****  *             Always has to specified and can't be NULL.
  90:lvgl/src/lv_hal/lv_hal_disp.c ****  *             Can be an array allocated by the user. E.g. `static lv_color_t disp_buf1[1024 * 10]`
  91:lvgl/src/lv_hal/lv_hal_disp.c ****  *             Or a memory address e.g. in external SRAM
  92:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param buf2 Optionally specify a second buffer to make image rendering and image flushing
  93:lvgl/src/lv_hal/lv_hal_disp.c ****  *             (sending to the display) parallel.
  94:lvgl/src/lv_hal/lv_hal_disp.c ****  *             In the `disp_drv->flush` you should use DMA or similar hardware to send
  95:lvgl/src/lv_hal/lv_hal_disp.c ****  *             the image to the display in the background.
  96:lvgl/src/lv_hal/lv_hal_disp.c ****  *             It lets LVGL to render next frame into the other buffer while previous is being
  97:lvgl/src/lv_hal/lv_hal_disp.c ****  * sent. Set to `NULL` if unused.
  98:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param size_in_px_cnt size of the `buf1` and `buf2` in pixel count.
  99:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 100:lvgl/src/lv_hal/lv_hal_disp.c **** void lv_disp_buf_init(lv_disp_buf_t * disp_buf, void * buf1, void * buf2, uint32_t size_in_px_cnt)
 101:lvgl/src/lv_hal/lv_hal_disp.c **** {
 113              		.loc 1 101 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		.loc 1 101 1 is_stmt 0 view .LVU28
 118 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 24
 121              		.cfi_offset 3, -24
 122              		.cfi_offset 4, -20
 123              		.cfi_offset 5, -16
 124              		.cfi_offset 6, -12
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 0002 0446     		mov	r4, r0
 128 0004 0D46     		mov	r5, r1
 129 0006 1746     		mov	r7, r2
 130 0008 1E46     		mov	r6, r3
ARM GAS  D:\Temp\ccJHuqZf.s 			page 5


 102:lvgl/src/lv_hal/lv_hal_disp.c ****     _lv_memset_00(disp_buf, sizeof(lv_disp_buf_t));
 131              		.loc 1 102 5 is_stmt 1 view .LVU29
 132 000a 2421     		movs	r1, #36
 133              	.LVL3:
 134              		.loc 1 102 5 is_stmt 0 view .LVU30
 135 000c FFF7FEFF 		bl	_lv_memset_00
 136              	.LVL4:
 103:lvgl/src/lv_hal/lv_hal_disp.c **** 
 104:lvgl/src/lv_hal/lv_hal_disp.c ****     disp_buf->buf1    = buf1;
 137              		.loc 1 104 5 is_stmt 1 view .LVU31
 138              		.loc 1 104 23 is_stmt 0 view .LVU32
 139 0010 2560     		str	r5, [r4]
 105:lvgl/src/lv_hal/lv_hal_disp.c ****     disp_buf->buf2    = buf2;
 140              		.loc 1 105 5 is_stmt 1 view .LVU33
 141              		.loc 1 105 23 is_stmt 0 view .LVU34
 142 0012 6760     		str	r7, [r4, #4]
 106:lvgl/src/lv_hal/lv_hal_disp.c ****     disp_buf->buf_act = disp_buf->buf1;
 143              		.loc 1 106 5 is_stmt 1 view .LVU35
 144              		.loc 1 106 23 is_stmt 0 view .LVU36
 145 0014 A560     		str	r5, [r4, #8]
 107:lvgl/src/lv_hal/lv_hal_disp.c ****     disp_buf->size    = size_in_px_cnt;
 146              		.loc 1 107 5 is_stmt 1 view .LVU37
 147              		.loc 1 107 23 is_stmt 0 view .LVU38
 148 0016 E660     		str	r6, [r4, #12]
 108:lvgl/src/lv_hal/lv_hal_disp.c **** }
 149              		.loc 1 108 1 view .LVU39
 150 0018 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 151              		.loc 1 108 1 view .LVU40
 152              		.cfi_endproc
 153              	.LFE459:
 155              		.section	.text.lv_disp_set_default,"ax",%progbits
 156              		.align	1
 157              		.global	lv_disp_set_default
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	lv_disp_set_default:
 164              	.LVL5:
 165              	.LFB463:
 109:lvgl/src/lv_hal/lv_hal_disp.c **** 
 110:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 111:lvgl/src/lv_hal/lv_hal_disp.c ****  * Register an initialized display driver.
 112:lvgl/src/lv_hal/lv_hal_disp.c ****  * Automatically set the first display as active.
 113:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param driver pointer to an initialized 'lv_disp_drv_t' variable (can be local variable)
 114:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return pointer to the new display or NULL on error
 115:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 116:lvgl/src/lv_hal/lv_hal_disp.c **** lv_disp_t * lv_disp_drv_register(lv_disp_drv_t * driver)
 117:lvgl/src/lv_hal/lv_hal_disp.c **** {
 118:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_disp_t * disp = _lv_ll_ins_head(&LV_GC_ROOT(_lv_disp_ll));
 119:lvgl/src/lv_hal/lv_hal_disp.c ****     if(!disp) {
 120:lvgl/src/lv_hal/lv_hal_disp.c ****         LV_ASSERT_MEM(disp);
 121:lvgl/src/lv_hal/lv_hal_disp.c ****         return NULL;
 122:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 123:lvgl/src/lv_hal/lv_hal_disp.c **** 
 124:lvgl/src/lv_hal/lv_hal_disp.c ****     _lv_memset_00(disp, sizeof(lv_disp_t));
 125:lvgl/src/lv_hal/lv_hal_disp.c ****     _lv_memcpy(&disp->driver, driver, sizeof(lv_disp_drv_t));
ARM GAS  D:\Temp\ccJHuqZf.s 			page 6


 126:lvgl/src/lv_hal/lv_hal_disp.c **** 
 127:lvgl/src/lv_hal/lv_hal_disp.c ****     _lv_ll_init(&disp->scr_ll, sizeof(lv_obj_t));
 128:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->last_activity_time = 0;
 129:lvgl/src/lv_hal/lv_hal_disp.c **** 
 130:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp_def == NULL) disp_def = disp;
 131:lvgl/src/lv_hal/lv_hal_disp.c **** 
 132:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_disp_t * disp_def_tmp = disp_def;
 133:lvgl/src/lv_hal/lv_hal_disp.c ****     disp_def                 = disp; /*Temporarily change the default screen to create the default 
 134:lvgl/src/lv_hal/lv_hal_disp.c ****                                         new display*/
 135:lvgl/src/lv_hal/lv_hal_disp.c ****     /*Create a refresh task*/
 136:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->refr_task = lv_task_create(_lv_disp_refr_task, LV_DISP_DEF_REFR_PERIOD, LV_REFR_TASK_PRIO
 137:lvgl/src/lv_hal/lv_hal_disp.c ****     LV_ASSERT_MEM(disp->refr_task);
 138:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp->refr_task == NULL) return NULL;
 139:lvgl/src/lv_hal/lv_hal_disp.c **** 
 140:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->inv_p = 0;
 141:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->last_activity_time = 0;
 142:lvgl/src/lv_hal/lv_hal_disp.c **** 
 143:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->bg_color = LV_COLOR_WHITE;
 144:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->bg_img = NULL;
 145:lvgl/src/lv_hal/lv_hal_disp.c **** #if LV_COLOR_SCREEN_TRANSP
 146:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->bg_opa = LV_OPA_TRANSP;
 147:lvgl/src/lv_hal/lv_hal_disp.c **** #else
 148:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->bg_opa = LV_OPA_COVER;
 149:lvgl/src/lv_hal/lv_hal_disp.c **** #endif
 150:lvgl/src/lv_hal/lv_hal_disp.c **** 
 151:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->prev_scr  = NULL;
 152:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->act_scr   = lv_obj_create(NULL, NULL); /*Create a default screen on the display*/
 153:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->top_layer = lv_obj_create(NULL, NULL); /*Create top layer on the display*/
 154:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->sys_layer = lv_obj_create(NULL, NULL); /*Create sys layer on the display*/
 155:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_reset_style_list(disp->top_layer, LV_OBJ_PART_MAIN);
 156:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_reset_style_list(disp->sys_layer, LV_OBJ_PART_MAIN);
 157:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_set_click(disp->top_layer, false);
 158:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_set_click(disp->sys_layer, false);
 159:lvgl/src/lv_hal/lv_hal_disp.c **** 
 160:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_invalidate(disp->act_scr);
 161:lvgl/src/lv_hal/lv_hal_disp.c **** 
 162:lvgl/src/lv_hal/lv_hal_disp.c ****     disp_def = disp_def_tmp; /*Revert the default display*/
 163:lvgl/src/lv_hal/lv_hal_disp.c **** 
 164:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_task_ready(disp->refr_task); /*Be sure the screen will be refreshed immediately on start up*
 165:lvgl/src/lv_hal/lv_hal_disp.c **** 
 166:lvgl/src/lv_hal/lv_hal_disp.c ****     /*Can't handle this case later so add an error*/
 167:lvgl/src/lv_hal/lv_hal_disp.c ****     if(lv_disp_is_true_double_buf(disp) && disp->driver.set_px_cb) {
 168:lvgl/src/lv_hal/lv_hal_disp.c ****         LV_LOG_ERROR("Can't handle 2 screen sized buffers with set_px_cb. Display will not be refre
 169:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 170:lvgl/src/lv_hal/lv_hal_disp.c **** 
 171:lvgl/src/lv_hal/lv_hal_disp.c ****     return disp;
 172:lvgl/src/lv_hal/lv_hal_disp.c **** }
 173:lvgl/src/lv_hal/lv_hal_disp.c **** 
 174:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 175:lvgl/src/lv_hal/lv_hal_disp.c ****  * Update the driver in run time.
 176:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to a display. (return value of `lv_disp_drv_register`)
 177:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param new_drv pointer to the new driver
 178:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 179:lvgl/src/lv_hal/lv_hal_disp.c **** void lv_disp_drv_update(lv_disp_t * disp, lv_disp_drv_t * new_drv)
 180:lvgl/src/lv_hal/lv_hal_disp.c **** {
 181:lvgl/src/lv_hal/lv_hal_disp.c ****     memcpy(&disp->driver, new_drv, sizeof(lv_disp_drv_t));
 182:lvgl/src/lv_hal/lv_hal_disp.c **** 
ARM GAS  D:\Temp\ccJHuqZf.s 			page 7


 183:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_t * scr;
 184:lvgl/src/lv_hal/lv_hal_disp.c ****     _LV_LL_READ(disp->scr_ll, scr) {
 185:lvgl/src/lv_hal/lv_hal_disp.c ****         lv_obj_set_size(scr, lv_disp_get_hor_res(disp), lv_disp_get_ver_res(disp));
 186:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 187:lvgl/src/lv_hal/lv_hal_disp.c **** }
 188:lvgl/src/lv_hal/lv_hal_disp.c **** 
 189:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 190:lvgl/src/lv_hal/lv_hal_disp.c ****  * Remove a display
 191:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to display
 192:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 193:lvgl/src/lv_hal/lv_hal_disp.c **** void lv_disp_remove(lv_disp_t * disp)
 194:lvgl/src/lv_hal/lv_hal_disp.c **** {
 195:lvgl/src/lv_hal/lv_hal_disp.c ****     bool was_default = false;
 196:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == lv_disp_get_default()) was_default = true;
 197:lvgl/src/lv_hal/lv_hal_disp.c **** 
 198:lvgl/src/lv_hal/lv_hal_disp.c ****     /*Detach the input devices */
 199:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_indev_t * indev;
 200:lvgl/src/lv_hal/lv_hal_disp.c ****     indev = lv_indev_get_next(NULL);
 201:lvgl/src/lv_hal/lv_hal_disp.c ****     while(indev) {
 202:lvgl/src/lv_hal/lv_hal_disp.c ****         if(indev->driver.disp == disp) {
 203:lvgl/src/lv_hal/lv_hal_disp.c ****             indev->driver.disp = NULL;
 204:lvgl/src/lv_hal/lv_hal_disp.c ****         }
 205:lvgl/src/lv_hal/lv_hal_disp.c ****         indev = lv_indev_get_next(indev);
 206:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 207:lvgl/src/lv_hal/lv_hal_disp.c **** 
 208:lvgl/src/lv_hal/lv_hal_disp.c ****     _lv_ll_remove(&LV_GC_ROOT(_lv_disp_ll), disp);
 209:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_mem_free(disp);
 210:lvgl/src/lv_hal/lv_hal_disp.c **** 
 211:lvgl/src/lv_hal/lv_hal_disp.c ****     if(was_default) lv_disp_set_default(_lv_ll_get_head(&LV_GC_ROOT(_lv_disp_ll)));
 212:lvgl/src/lv_hal/lv_hal_disp.c **** }
 213:lvgl/src/lv_hal/lv_hal_disp.c **** 
 214:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 215:lvgl/src/lv_hal/lv_hal_disp.c ****  * Set a default screen. The new screens will be created on it by default.
 216:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to a display
 217:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 218:lvgl/src/lv_hal/lv_hal_disp.c **** void lv_disp_set_default(lv_disp_t * disp)
 219:lvgl/src/lv_hal/lv_hal_disp.c **** {
 166              		.loc 1 219 1 is_stmt 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 220:lvgl/src/lv_hal/lv_hal_disp.c ****     disp_def = disp;
 171              		.loc 1 220 5 view .LVU42
 172              		.loc 1 220 14 is_stmt 0 view .LVU43
 173 0000 014B     		ldr	r3, .L6
 174 0002 1860     		str	r0, [r3]
 221:lvgl/src/lv_hal/lv_hal_disp.c **** }
 175              		.loc 1 221 1 view .LVU44
 176 0004 7047     		bx	lr
 177              	.L7:
 178 0006 00BF     		.align	2
 179              	.L6:
 180 0008 00000000 		.word	.LANCHOR0
 181              		.cfi_endproc
 182              	.LFE463:
 184              		.section	.text.lv_disp_get_default,"ax",%progbits
ARM GAS  D:\Temp\ccJHuqZf.s 			page 8


 185              		.align	1
 186              		.global	lv_disp_get_default
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	lv_disp_get_default:
 193              	.LFB464:
 222:lvgl/src/lv_hal/lv_hal_disp.c **** 
 223:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 224:lvgl/src/lv_hal/lv_hal_disp.c ****  * Get the default display
 225:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return pointer to the default display
 226:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 227:lvgl/src/lv_hal/lv_hal_disp.c **** lv_disp_t * lv_disp_get_default(void)
 228:lvgl/src/lv_hal/lv_hal_disp.c **** {
 194              		.loc 1 228 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 229:lvgl/src/lv_hal/lv_hal_disp.c ****     return disp_def;
 199              		.loc 1 229 5 view .LVU46
 230:lvgl/src/lv_hal/lv_hal_disp.c **** }
 200              		.loc 1 230 1 is_stmt 0 view .LVU47
 201 0000 014B     		ldr	r3, .L9
 202 0002 1868     		ldr	r0, [r3]
 203 0004 7047     		bx	lr
 204              	.L10:
 205 0006 00BF     		.align	2
 206              	.L9:
 207 0008 00000000 		.word	.LANCHOR0
 208              		.cfi_endproc
 209              	.LFE464:
 211              		.section	.text.lv_disp_remove,"ax",%progbits
 212              		.align	1
 213              		.global	lv_disp_remove
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv4-sp-d16
 219              	lv_disp_remove:
 220              	.LVL6:
 221              	.LFB462:
 194:lvgl/src/lv_hal/lv_hal_disp.c ****     bool was_default = false;
 222              		.loc 1 194 1 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 194:lvgl/src/lv_hal/lv_hal_disp.c ****     bool was_default = false;
 226              		.loc 1 194 1 is_stmt 0 view .LVU49
 227 0000 38B5     		push	{r3, r4, r5, lr}
 228              	.LCFI2:
 229              		.cfi_def_cfa_offset 16
 230              		.cfi_offset 3, -16
 231              		.cfi_offset 4, -12
 232              		.cfi_offset 5, -8
 233              		.cfi_offset 14, -4
ARM GAS  D:\Temp\ccJHuqZf.s 			page 9


 234 0002 0446     		mov	r4, r0
 195:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == lv_disp_get_default()) was_default = true;
 235              		.loc 1 195 5 is_stmt 1 view .LVU50
 236              	.LVL7:
 196:lvgl/src/lv_hal/lv_hal_disp.c **** 
 237              		.loc 1 196 5 view .LVU51
 196:lvgl/src/lv_hal/lv_hal_disp.c **** 
 238              		.loc 1 196 16 is_stmt 0 view .LVU52
 239 0004 FFF7FEFF 		bl	lv_disp_get_default
 240              	.LVL8:
 196:lvgl/src/lv_hal/lv_hal_disp.c **** 
 241              		.loc 1 196 7 view .LVU53
 242 0008 8442     		cmp	r4, r0
 243 000a 04D0     		beq	.L17
 195:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == lv_disp_get_default()) was_default = true;
 244              		.loc 1 195 10 view .LVU54
 245 000c 0025     		movs	r5, #0
 246              	.L12:
 247              	.LVL9:
 199:lvgl/src/lv_hal/lv_hal_disp.c ****     indev = lv_indev_get_next(NULL);
 248              		.loc 1 199 5 is_stmt 1 view .LVU55
 200:lvgl/src/lv_hal/lv_hal_disp.c ****     while(indev) {
 249              		.loc 1 200 5 view .LVU56
 200:lvgl/src/lv_hal/lv_hal_disp.c ****     while(indev) {
 250              		.loc 1 200 13 is_stmt 0 view .LVU57
 251 000e 0020     		movs	r0, #0
 252 0010 FFF7FEFF 		bl	lv_indev_get_next
 253              	.LVL10:
 201:lvgl/src/lv_hal/lv_hal_disp.c ****         if(indev->driver.disp == disp) {
 254              		.loc 1 201 5 is_stmt 1 view .LVU58
 201:lvgl/src/lv_hal/lv_hal_disp.c ****         if(indev->driver.disp == disp) {
 255              		.loc 1 201 10 is_stmt 0 view .LVU59
 256 0014 05E0     		b	.L13
 257              	.LVL11:
 258              	.L17:
 196:lvgl/src/lv_hal/lv_hal_disp.c **** 
 259              		.loc 1 196 51 view .LVU60
 260 0016 0125     		movs	r5, #1
 261 0018 F9E7     		b	.L12
 262              	.LVL12:
 263              	.L20:
 203:lvgl/src/lv_hal/lv_hal_disp.c ****         }
 264              		.loc 1 203 13 is_stmt 1 view .LVU61
 203:lvgl/src/lv_hal/lv_hal_disp.c ****         }
 265              		.loc 1 203 32 is_stmt 0 view .LVU62
 266 001a 0023     		movs	r3, #0
 267 001c C360     		str	r3, [r0, #12]
 268              	.L14:
 205:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 269              		.loc 1 205 9 is_stmt 1 view .LVU63
 205:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 270              		.loc 1 205 17 is_stmt 0 view .LVU64
 271 001e FFF7FEFF 		bl	lv_indev_get_next
 272              	.LVL13:
 273              	.L13:
 201:lvgl/src/lv_hal/lv_hal_disp.c ****         if(indev->driver.disp == disp) {
 274              		.loc 1 201 10 view .LVU65
ARM GAS  D:\Temp\ccJHuqZf.s 			page 10


 275 0022 18B1     		cbz	r0, .L19
 202:lvgl/src/lv_hal/lv_hal_disp.c ****             indev->driver.disp = NULL;
 276              		.loc 1 202 9 is_stmt 1 view .LVU66
 202:lvgl/src/lv_hal/lv_hal_disp.c ****             indev->driver.disp = NULL;
 277              		.loc 1 202 25 is_stmt 0 view .LVU67
 278 0024 C368     		ldr	r3, [r0, #12]
 202:lvgl/src/lv_hal/lv_hal_disp.c ****             indev->driver.disp = NULL;
 279              		.loc 1 202 11 view .LVU68
 280 0026 A342     		cmp	r3, r4
 281 0028 F9D1     		bne	.L14
 282 002a F6E7     		b	.L20
 283              	.L19:
 208:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_mem_free(disp);
 284              		.loc 1 208 5 is_stmt 1 view .LVU69
 285 002c 2146     		mov	r1, r4
 286 002e 0748     		ldr	r0, .L22
 287              	.LVL14:
 208:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_mem_free(disp);
 288              		.loc 1 208 5 is_stmt 0 view .LVU70
 289 0030 FFF7FEFF 		bl	_lv_ll_remove
 290              	.LVL15:
 209:lvgl/src/lv_hal/lv_hal_disp.c **** 
 291              		.loc 1 209 5 is_stmt 1 view .LVU71
 292 0034 2046     		mov	r0, r4
 293 0036 FFF7FEFF 		bl	lv_mem_free
 294              	.LVL16:
 211:lvgl/src/lv_hal/lv_hal_disp.c **** }
 295              		.loc 1 211 5 view .LVU72
 211:lvgl/src/lv_hal/lv_hal_disp.c **** }
 296              		.loc 1 211 7 is_stmt 0 view .LVU73
 297 003a 05B9     		cbnz	r5, .L21
 298              	.L11:
 212:lvgl/src/lv_hal/lv_hal_disp.c **** 
 299              		.loc 1 212 1 view .LVU74
 300 003c 38BD     		pop	{r3, r4, r5, pc}
 301              	.LVL17:
 302              	.L21:
 211:lvgl/src/lv_hal/lv_hal_disp.c **** }
 303              		.loc 1 211 21 is_stmt 1 discriminator 1 view .LVU75
 211:lvgl/src/lv_hal/lv_hal_disp.c **** }
 304              		.loc 1 211 41 is_stmt 0 discriminator 1 view .LVU76
 305 003e 0348     		ldr	r0, .L22
 306 0040 FFF7FEFF 		bl	_lv_ll_get_head
 307              	.LVL18:
 211:lvgl/src/lv_hal/lv_hal_disp.c **** }
 308              		.loc 1 211 21 discriminator 1 view .LVU77
 309 0044 FFF7FEFF 		bl	lv_disp_set_default
 310              	.LVL19:
 212:lvgl/src/lv_hal/lv_hal_disp.c **** 
 311              		.loc 1 212 1 discriminator 1 view .LVU78
 312 0048 F8E7     		b	.L11
 313              	.L23:
 314 004a 00BF     		.align	2
 315              	.L22:
 316 004c 00000000 		.word	_lv_disp_ll
 317              		.cfi_endproc
 318              	.LFE462:
ARM GAS  D:\Temp\ccJHuqZf.s 			page 11


 320              		.section	.text.lv_disp_get_hor_res,"ax",%progbits
 321              		.align	1
 322              		.global	lv_disp_get_hor_res
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv4-sp-d16
 328              	lv_disp_get_hor_res:
 329              	.LVL20:
 330              	.LFB465:
 231:lvgl/src/lv_hal/lv_hal_disp.c **** 
 232:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 233:lvgl/src/lv_hal/lv_hal_disp.c ****  * Get the horizontal resolution of a display
 234:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to a display (NULL to use the default display)
 235:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return the horizontal resolution of the display
 236:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 237:lvgl/src/lv_hal/lv_hal_disp.c **** lv_coord_t lv_disp_get_hor_res(lv_disp_t * disp)
 238:lvgl/src/lv_hal/lv_hal_disp.c **** {
 331              		.loc 1 238 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		.loc 1 238 1 is_stmt 0 view .LVU80
 336 0000 08B5     		push	{r3, lr}
 337              	.LCFI3:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 239:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) disp = lv_disp_get_default();
 341              		.loc 1 239 5 is_stmt 1 view .LVU81
 342              		.loc 1 239 7 is_stmt 0 view .LVU82
 343 0002 0346     		mov	r3, r0
 344 0004 38B1     		cbz	r0, .L31
 345              	.L25:
 240:lvgl/src/lv_hal/lv_hal_disp.c **** 
 241:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL)
 346              		.loc 1 241 5 is_stmt 1 view .LVU83
 347              		.loc 1 241 7 is_stmt 0 view .LVU84
 348 0006 6BB1     		cbz	r3, .L29
 242:lvgl/src/lv_hal/lv_hal_disp.c ****         return LV_HOR_RES_MAX;
 243:lvgl/src/lv_hal/lv_hal_disp.c ****     else
 244:lvgl/src/lv_hal/lv_hal_disp.c ****         return disp->driver.rotated == 0 ? disp->driver.hor_res : disp->driver.ver_res;
 349              		.loc 1 244 9 is_stmt 1 view .LVU85
 350              		.loc 1 244 37 is_stmt 0 view .LVU86
 351 0008 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 352              		.loc 1 244 65 view .LVU87
 353 000a 12F0020F 		tst	r2, #2
 354 000e 06D1     		bne	.L27
 355              		.loc 1 244 65 discriminator 1 view .LVU88
 356 0010 B3F90000 		ldrsh	r0, [r3]
 357              	.LVL21:
 358              	.L26:
 245:lvgl/src/lv_hal/lv_hal_disp.c **** }
 359              		.loc 1 245 1 view .LVU89
 360 0014 08BD     		pop	{r3, pc}
 361              	.LVL22:
 362              	.L31:
ARM GAS  D:\Temp\ccJHuqZf.s 			page 12


 239:lvgl/src/lv_hal/lv_hal_disp.c **** 
 363              		.loc 1 239 22 is_stmt 1 discriminator 1 view .LVU90
 239:lvgl/src/lv_hal/lv_hal_disp.c **** 
 364              		.loc 1 239 29 is_stmt 0 discriminator 1 view .LVU91
 365 0016 FFF7FEFF 		bl	lv_disp_get_default
 366              	.LVL23:
 239:lvgl/src/lv_hal/lv_hal_disp.c **** 
 367              		.loc 1 239 29 discriminator 1 view .LVU92
 368 001a 0346     		mov	r3, r0
 369              	.LVL24:
 239:lvgl/src/lv_hal/lv_hal_disp.c **** 
 370              		.loc 1 239 29 discriminator 1 view .LVU93
 371 001c F3E7     		b	.L25
 372              	.L27:
 244:lvgl/src/lv_hal/lv_hal_disp.c **** }
 373              		.loc 1 244 65 discriminator 2 view .LVU94
 374 001e B3F90200 		ldrsh	r0, [r3, #2]
 375              	.LVL25:
 244:lvgl/src/lv_hal/lv_hal_disp.c **** }
 376              		.loc 1 244 65 discriminator 2 view .LVU95
 377 0022 F7E7     		b	.L26
 378              	.LVL26:
 379              	.L29:
 242:lvgl/src/lv_hal/lv_hal_disp.c ****     else
 380              		.loc 1 242 16 view .LVU96
 381 0024 4FF4A070 		mov	r0, #320
 382              	.LVL27:
 242:lvgl/src/lv_hal/lv_hal_disp.c ****     else
 383              		.loc 1 242 16 view .LVU97
 384 0028 F4E7     		b	.L26
 385              		.cfi_endproc
 386              	.LFE465:
 388              		.section	.text.lv_disp_get_ver_res,"ax",%progbits
 389              		.align	1
 390              		.global	lv_disp_get_ver_res
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	lv_disp_get_ver_res:
 397              	.LVL28:
 398              	.LFB466:
 246:lvgl/src/lv_hal/lv_hal_disp.c **** 
 247:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 248:lvgl/src/lv_hal/lv_hal_disp.c ****  * Get the vertical resolution of a display
 249:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to a display (NULL to use the default display)
 250:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return the vertical resolution of the display
 251:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 252:lvgl/src/lv_hal/lv_hal_disp.c **** lv_coord_t lv_disp_get_ver_res(lv_disp_t * disp)
 253:lvgl/src/lv_hal/lv_hal_disp.c **** {
 399              		.loc 1 253 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		.loc 1 253 1 is_stmt 0 view .LVU99
 404 0000 08B5     		push	{r3, lr}
 405              	.LCFI4:
ARM GAS  D:\Temp\ccJHuqZf.s 			page 13


 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
 254:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) disp = lv_disp_get_default();
 409              		.loc 1 254 5 is_stmt 1 view .LVU100
 410              		.loc 1 254 7 is_stmt 0 view .LVU101
 411 0002 0346     		mov	r3, r0
 412 0004 38B1     		cbz	r0, .L39
 413              	.L33:
 255:lvgl/src/lv_hal/lv_hal_disp.c **** 
 256:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL)
 414              		.loc 1 256 5 is_stmt 1 view .LVU102
 415              		.loc 1 256 7 is_stmt 0 view .LVU103
 416 0006 6BB1     		cbz	r3, .L37
 257:lvgl/src/lv_hal/lv_hal_disp.c ****         return LV_VER_RES_MAX;
 258:lvgl/src/lv_hal/lv_hal_disp.c ****     else
 259:lvgl/src/lv_hal/lv_hal_disp.c ****         return disp->driver.rotated == 0 ? disp->driver.ver_res : disp->driver.hor_res;
 417              		.loc 1 259 9 is_stmt 1 view .LVU104
 418              		.loc 1 259 37 is_stmt 0 view .LVU105
 419 0008 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 420              		.loc 1 259 65 view .LVU106
 421 000a 12F0020F 		tst	r2, #2
 422 000e 06D1     		bne	.L35
 423              		.loc 1 259 65 discriminator 1 view .LVU107
 424 0010 B3F90200 		ldrsh	r0, [r3, #2]
 425              	.LVL29:
 426              	.L34:
 260:lvgl/src/lv_hal/lv_hal_disp.c **** }
 427              		.loc 1 260 1 view .LVU108
 428 0014 08BD     		pop	{r3, pc}
 429              	.LVL30:
 430              	.L39:
 254:lvgl/src/lv_hal/lv_hal_disp.c **** 
 431              		.loc 1 254 22 is_stmt 1 discriminator 1 view .LVU109
 254:lvgl/src/lv_hal/lv_hal_disp.c **** 
 432              		.loc 1 254 29 is_stmt 0 discriminator 1 view .LVU110
 433 0016 FFF7FEFF 		bl	lv_disp_get_default
 434              	.LVL31:
 254:lvgl/src/lv_hal/lv_hal_disp.c **** 
 435              		.loc 1 254 29 discriminator 1 view .LVU111
 436 001a 0346     		mov	r3, r0
 437              	.LVL32:
 254:lvgl/src/lv_hal/lv_hal_disp.c **** 
 438              		.loc 1 254 29 discriminator 1 view .LVU112
 439 001c F3E7     		b	.L33
 440              	.L35:
 259:lvgl/src/lv_hal/lv_hal_disp.c **** }
 441              		.loc 1 259 65 discriminator 2 view .LVU113
 442 001e B3F90000 		ldrsh	r0, [r3]
 443              	.LVL33:
 259:lvgl/src/lv_hal/lv_hal_disp.c **** }
 444              		.loc 1 259 65 discriminator 2 view .LVU114
 445 0022 F7E7     		b	.L34
 446              	.LVL34:
 447              	.L37:
 257:lvgl/src/lv_hal/lv_hal_disp.c ****     else
 448              		.loc 1 257 16 view .LVU115
ARM GAS  D:\Temp\ccJHuqZf.s 			page 14


 449 0024 F020     		movs	r0, #240
 450              	.LVL35:
 257:lvgl/src/lv_hal/lv_hal_disp.c ****     else
 451              		.loc 1 257 16 view .LVU116
 452 0026 F5E7     		b	.L34
 453              		.cfi_endproc
 454              	.LFE466:
 456              		.section	.text.lv_disp_drv_update,"ax",%progbits
 457              		.align	1
 458              		.global	lv_disp_drv_update
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.fpu fpv4-sp-d16
 464              	lv_disp_drv_update:
 465              	.LVL36:
 466              	.LFB461:
 180:lvgl/src/lv_hal/lv_hal_disp.c ****     memcpy(&disp->driver, new_drv, sizeof(lv_disp_drv_t));
 467              		.loc 1 180 1 is_stmt 1 view -0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 180:lvgl/src/lv_hal/lv_hal_disp.c ****     memcpy(&disp->driver, new_drv, sizeof(lv_disp_drv_t));
 471              		.loc 1 180 1 is_stmt 0 view .LVU118
 472 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 473              	.LCFI5:
 474              		.cfi_def_cfa_offset 24
 475              		.cfi_offset 3, -24
 476              		.cfi_offset 4, -20
 477              		.cfi_offset 5, -16
 478              		.cfi_offset 6, -12
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 0546     		mov	r5, r0
 181:lvgl/src/lv_hal/lv_hal_disp.c **** 
 482              		.loc 1 181 5 is_stmt 1 view .LVU119
 483 0004 0B46     		mov	r3, r1
 484 0006 0246     		mov	r2, r0
 485 0008 3031     		adds	r1, r1, #48
 486              	.LVL37:
 487              	.L41:
 181:lvgl/src/lv_hal/lv_hal_disp.c **** 
 488              		.loc 1 181 5 is_stmt 0 view .LVU120
 489 000a 1F68     		ldr	r7, [r3]	@ unaligned
 490 000c 5E68     		ldr	r6, [r3, #4]	@ unaligned
 491 000e 9C68     		ldr	r4, [r3, #8]	@ unaligned
 492 0010 D868     		ldr	r0, [r3, #12]	@ unaligned
 493 0012 1760     		str	r7, [r2]	@ unaligned
 494 0014 5660     		str	r6, [r2, #4]	@ unaligned
 495 0016 9460     		str	r4, [r2, #8]	@ unaligned
 496 0018 D060     		str	r0, [r2, #12]	@ unaligned
 497 001a 1033     		adds	r3, r3, #16
 498 001c 1032     		adds	r2, r2, #16
 499 001e 8B42     		cmp	r3, r1
 500 0020 F3D1     		bne	.L41
 501 0022 1B68     		ldr	r3, [r3]	@ unaligned
 502 0024 1360     		str	r3, [r2]	@ unaligned
ARM GAS  D:\Temp\ccJHuqZf.s 			page 15


 183:lvgl/src/lv_hal/lv_hal_disp.c ****     _LV_LL_READ(disp->scr_ll, scr) {
 503              		.loc 1 183 5 is_stmt 1 view .LVU121
 184:lvgl/src/lv_hal/lv_hal_disp.c ****         lv_obj_set_size(scr, lv_disp_get_hor_res(disp), lv_disp_get_ver_res(disp));
 504              		.loc 1 184 5 view .LVU122
 505 0026 05F13807 		add	r7, r5, #56
 506 002a 3846     		mov	r0, r7
 507 002c FFF7FEFF 		bl	_lv_ll_get_head
 508              	.LVL38:
 184:lvgl/src/lv_hal/lv_hal_disp.c ****         lv_obj_set_size(scr, lv_disp_get_hor_res(disp), lv_disp_get_ver_res(disp));
 509              		.loc 1 184 5 is_stmt 0 view .LVU123
 510 0030 0446     		mov	r4, r0
 511              	.LVL39:
 512              	.L42:
 184:lvgl/src/lv_hal/lv_hal_disp.c ****         lv_obj_set_size(scr, lv_disp_get_hor_res(disp), lv_disp_get_ver_res(disp));
 513              		.loc 1 184 5 discriminator 1 view .LVU124
 514 0032 8CB1     		cbz	r4, .L45
 185:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 515              		.loc 1 185 9 is_stmt 1 discriminator 3 view .LVU125
 516 0034 2846     		mov	r0, r5
 517              	.LVL40:
 185:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 518              		.loc 1 185 9 is_stmt 0 discriminator 3 view .LVU126
 519 0036 FFF7FEFF 		bl	lv_disp_get_hor_res
 520              	.LVL41:
 521 003a 0646     		mov	r6, r0
 522 003c 2846     		mov	r0, r5
 523 003e FFF7FEFF 		bl	lv_disp_get_ver_res
 524              	.LVL42:
 525 0042 0246     		mov	r2, r0
 526 0044 3146     		mov	r1, r6
 527 0046 2046     		mov	r0, r4
 528 0048 FFF7FEFF 		bl	lv_obj_set_size
 529              	.LVL43:
 184:lvgl/src/lv_hal/lv_hal_disp.c ****         lv_obj_set_size(scr, lv_disp_get_hor_res(disp), lv_disp_get_ver_res(disp));
 530              		.loc 1 184 5 discriminator 3 view .LVU127
 531 004c 2146     		mov	r1, r4
 532 004e 3846     		mov	r0, r7
 533 0050 FFF7FEFF 		bl	_lv_ll_get_next
 534              	.LVL44:
 535 0054 0446     		mov	r4, r0
 536              	.LVL45:
 184:lvgl/src/lv_hal/lv_hal_disp.c ****         lv_obj_set_size(scr, lv_disp_get_hor_res(disp), lv_disp_get_ver_res(disp));
 537              		.loc 1 184 5 discriminator 3 view .LVU128
 538 0056 ECE7     		b	.L42
 539              	.L45:
 187:lvgl/src/lv_hal/lv_hal_disp.c **** 
 540              		.loc 1 187 1 view .LVU129
 541 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 187:lvgl/src/lv_hal/lv_hal_disp.c **** 
 542              		.loc 1 187 1 view .LVU130
 543              		.cfi_endproc
 544              	.LFE461:
 546              		.section	.text.lv_disp_get_antialiasing,"ax",%progbits
 547              		.align	1
 548              		.global	lv_disp_get_antialiasing
 549              		.syntax unified
 550              		.thumb
ARM GAS  D:\Temp\ccJHuqZf.s 			page 16


 551              		.thumb_func
 552              		.fpu fpv4-sp-d16
 554              	lv_disp_get_antialiasing:
 555              	.LVL46:
 556              	.LFB467:
 261:lvgl/src/lv_hal/lv_hal_disp.c **** 
 262:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 263:lvgl/src/lv_hal/lv_hal_disp.c ****  * Get if anti-aliasing is enabled for a display or not
 264:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to a display (NULL to use the default display)
 265:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return true: anti-aliasing is enabled; false: disabled
 266:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 267:lvgl/src/lv_hal/lv_hal_disp.c **** bool lv_disp_get_antialiasing(lv_disp_t * disp)
 268:lvgl/src/lv_hal/lv_hal_disp.c **** {
 557              		.loc 1 268 1 is_stmt 1 view -0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		.loc 1 268 1 is_stmt 0 view .LVU132
 562 0000 08B5     		push	{r3, lr}
 563              	.LCFI6:
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 3, -8
 566              		.cfi_offset 14, -4
 269:lvgl/src/lv_hal/lv_hal_disp.c **** #if LV_ANTIALIAS == 0
 270:lvgl/src/lv_hal/lv_hal_disp.c ****     LV_UNUSED(disp);
 271:lvgl/src/lv_hal/lv_hal_disp.c ****     return false;
 272:lvgl/src/lv_hal/lv_hal_disp.c **** #else
 273:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) disp = lv_disp_get_default();
 567              		.loc 1 273 5 is_stmt 1 view .LVU133
 568              		.loc 1 273 7 is_stmt 0 view .LVU134
 569 0002 0346     		mov	r3, r0
 570 0004 20B1     		cbz	r0, .L51
 571              	.L47:
 274:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) return false;
 572              		.loc 1 274 5 is_stmt 1 view .LVU135
 573              		.loc 1 274 7 is_stmt 0 view .LVU136
 574 0006 3BB1     		cbz	r3, .L49
 275:lvgl/src/lv_hal/lv_hal_disp.c **** 
 276:lvgl/src/lv_hal/lv_hal_disp.c ****     return disp->driver.antialiasing ? true : false;
 575              		.loc 1 276 5 is_stmt 1 view .LVU137
 576              		.loc 1 276 38 is_stmt 0 view .LVU138
 577 0008 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 578              	.LVL47:
 579              		.loc 1 276 45 view .LVU139
 580 000a 00F00100 		and	r0, r0, #1
 581              	.L48:
 277:lvgl/src/lv_hal/lv_hal_disp.c **** #endif
 278:lvgl/src/lv_hal/lv_hal_disp.c **** }
 582              		.loc 1 278 1 view .LVU140
 583 000e 08BD     		pop	{r3, pc}
 584              	.LVL48:
 585              	.L51:
 273:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) return false;
 586              		.loc 1 273 22 is_stmt 1 discriminator 1 view .LVU141
 273:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) return false;
 587              		.loc 1 273 29 is_stmt 0 discriminator 1 view .LVU142
 588 0010 FFF7FEFF 		bl	lv_disp_get_default
ARM GAS  D:\Temp\ccJHuqZf.s 			page 17


 589              	.LVL49:
 273:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) return false;
 590              		.loc 1 273 29 discriminator 1 view .LVU143
 591 0014 0346     		mov	r3, r0
 592              	.LVL50:
 273:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) return false;
 593              		.loc 1 273 29 discriminator 1 view .LVU144
 594 0016 F6E7     		b	.L47
 595              	.L49:
 274:lvgl/src/lv_hal/lv_hal_disp.c **** 
 596              		.loc 1 274 29 view .LVU145
 597 0018 0020     		movs	r0, #0
 598              	.LVL51:
 274:lvgl/src/lv_hal/lv_hal_disp.c **** 
 599              		.loc 1 274 29 view .LVU146
 600 001a F8E7     		b	.L48
 601              		.cfi_endproc
 602              	.LFE467:
 604              		.section	.text.lv_disp_get_dpi,"ax",%progbits
 605              		.align	1
 606              		.global	lv_disp_get_dpi
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv4-sp-d16
 612              	lv_disp_get_dpi:
 613              	.LVL52:
 614              	.LFB468:
 279:lvgl/src/lv_hal/lv_hal_disp.c **** 
 280:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 281:lvgl/src/lv_hal/lv_hal_disp.c ****  * Get the DPI of the display
 282:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to a display (NULL to use the default display)
 283:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return dpi of the display
 284:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 285:lvgl/src/lv_hal/lv_hal_disp.c **** lv_coord_t lv_disp_get_dpi(lv_disp_t * disp)
 286:lvgl/src/lv_hal/lv_hal_disp.c **** {
 615              		.loc 1 286 1 is_stmt 1 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              		.loc 1 286 1 is_stmt 0 view .LVU148
 620 0000 08B5     		push	{r3, lr}
 621              	.LCFI7:
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 3, -8
 624              		.cfi_offset 14, -4
 287:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) disp = lv_disp_get_default();
 625              		.loc 1 287 5 is_stmt 1 view .LVU149
 626              		.loc 1 287 7 is_stmt 0 view .LVU150
 627 0002 0346     		mov	r3, r0
 628 0004 20B1     		cbz	r0, .L57
 629              	.L53:
 288:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) return LV_DPI;  /*Do not return 0 because it might be a divider*/
 630              		.loc 1 288 5 is_stmt 1 view .LVU151
 631              		.loc 1 288 7 is_stmt 0 view .LVU152
 632 0006 3BB1     		cbz	r3, .L55
 289:lvgl/src/lv_hal/lv_hal_disp.c ****     return disp->driver.dpi;
ARM GAS  D:\Temp\ccJHuqZf.s 			page 18


 633              		.loc 1 289 5 is_stmt 1 view .LVU153
 634              		.loc 1 289 24 is_stmt 0 view .LVU154
 635 0008 1889     		ldrh	r0, [r3, #8]
 636              	.LVL53:
 637              		.loc 1 289 24 view .LVU155
 638 000a C0F38900 		ubfx	r0, r0, #2, #10
 639              	.L54:
 290:lvgl/src/lv_hal/lv_hal_disp.c **** }
 640              		.loc 1 290 1 view .LVU156
 641 000e 08BD     		pop	{r3, pc}
 642              	.LVL54:
 643              	.L57:
 287:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) return LV_DPI;  /*Do not return 0 because it might be a divider*/
 644              		.loc 1 287 22 is_stmt 1 discriminator 1 view .LVU157
 287:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) return LV_DPI;  /*Do not return 0 because it might be a divider*/
 645              		.loc 1 287 29 is_stmt 0 discriminator 1 view .LVU158
 646 0010 FFF7FEFF 		bl	lv_disp_get_default
 647              	.LVL55:
 287:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) return LV_DPI;  /*Do not return 0 because it might be a divider*/
 648              		.loc 1 287 29 discriminator 1 view .LVU159
 649 0014 0346     		mov	r3, r0
 650              	.LVL56:
 287:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) return LV_DPI;  /*Do not return 0 because it might be a divider*/
 651              		.loc 1 287 29 discriminator 1 view .LVU160
 652 0016 F6E7     		b	.L53
 653              	.L55:
 288:lvgl/src/lv_hal/lv_hal_disp.c ****     return disp->driver.dpi;
 654              		.loc 1 288 29 view .LVU161
 655 0018 5020     		movs	r0, #80
 656              	.LVL57:
 288:lvgl/src/lv_hal/lv_hal_disp.c ****     return disp->driver.dpi;
 657              		.loc 1 288 29 view .LVU162
 658 001a F8E7     		b	.L54
 659              		.cfi_endproc
 660              	.LFE468:
 662              		.section	.text.lv_disp_get_size_category,"ax",%progbits
 663              		.align	1
 664              		.global	lv_disp_get_size_category
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv4-sp-d16
 670              	lv_disp_get_size_category:
 671              	.LVL58:
 672              	.LFB469:
 291:lvgl/src/lv_hal/lv_hal_disp.c **** 
 292:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 293:lvgl/src/lv_hal/lv_hal_disp.c ****  * Get the size category of the display based on it's hor. res. and dpi.
 294:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to a display (NULL to use the default display)
 295:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return LV_DISP_SIZE_SMALL/MEDIUM/LARGE/EXTRA_LARGE
 296:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 297:lvgl/src/lv_hal/lv_hal_disp.c **** lv_disp_size_t lv_disp_get_size_category(lv_disp_t * disp)
 298:lvgl/src/lv_hal/lv_hal_disp.c **** {
 673              		.loc 1 298 1 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\Temp\ccJHuqZf.s 			page 19


 677              		.loc 1 298 1 is_stmt 0 view .LVU164
 678 0000 38B5     		push	{r3, r4, r5, lr}
 679              	.LCFI8:
 680              		.cfi_def_cfa_offset 16
 681              		.cfi_offset 3, -16
 682              		.cfi_offset 4, -12
 683              		.cfi_offset 5, -8
 684              		.cfi_offset 14, -4
 299:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) disp = lv_disp_get_default();
 685              		.loc 1 299 5 is_stmt 1 view .LVU165
 686              		.loc 1 299 7 is_stmt 0 view .LVU166
 687 0002 0546     		mov	r5, r0
 688 0004 A0B1     		cbz	r0, .L67
 689              	.L59:
 300:lvgl/src/lv_hal/lv_hal_disp.c **** 
 301:lvgl/src/lv_hal/lv_hal_disp.c ****     uint32_t w;
 690              		.loc 1 301 5 is_stmt 1 view .LVU167
 302:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL) w = LV_HOR_RES_MAX;
 691              		.loc 1 302 5 view .LVU168
 692              		.loc 1 302 7 is_stmt 0 view .LVU169
 693 0006 BDB1     		cbz	r5, .L62
 303:lvgl/src/lv_hal/lv_hal_disp.c ****     else w = lv_disp_get_hor_res(disp);
 694              		.loc 1 303 10 is_stmt 1 view .LVU170
 695              		.loc 1 303 14 is_stmt 0 view .LVU171
 696 0008 2846     		mov	r0, r5
 697              		.loc 1 303 14 view .LVU172
 698 000a FFF7FEFF 		bl	lv_disp_get_hor_res
 699              	.LVL59:
 700              		.loc 1 303 12 view .LVU173
 701 000e 0446     		mov	r4, r0
 702              	.LVL60:
 703              	.L60:
 304:lvgl/src/lv_hal/lv_hal_disp.c **** 
 305:lvgl/src/lv_hal/lv_hal_disp.c ****     uint32_t dpi = lv_disp_get_dpi(disp);
 704              		.loc 1 305 5 is_stmt 1 view .LVU174
 705              		.loc 1 305 20 is_stmt 0 view .LVU175
 706 0010 2846     		mov	r0, r5
 707 0012 FFF7FEFF 		bl	lv_disp_get_dpi
 708              	.LVL61:
 306:lvgl/src/lv_hal/lv_hal_disp.c **** 
 307:lvgl/src/lv_hal/lv_hal_disp.c ****     w = w * 10 / dpi;
 709              		.loc 1 307 5 is_stmt 1 view .LVU176
 710              		.loc 1 307 11 is_stmt 0 view .LVU177
 711 0016 04EB8404 		add	r4, r4, r4, lsl #2
 712              	.LVL62:
 713              		.loc 1 307 11 view .LVU178
 714 001a 6300     		lsls	r3, r4, #1
 715              		.loc 1 307 7 view .LVU179
 716 001c B3FBF0F0 		udiv	r0, r3, r0
 717              	.LVL63:
 308:lvgl/src/lv_hal/lv_hal_disp.c **** 
 309:lvgl/src/lv_hal/lv_hal_disp.c ****     if(w < LV_DISP_SMALL_LIMIT) return LV_DISP_SIZE_SMALL;
 718              		.loc 1 309 5 is_stmt 1 view .LVU180
 719              		.loc 1 309 7 is_stmt 0 view .LVU181
 720 0020 1D28     		cmp	r0, #29
 721 0022 0CD9     		bls	.L63
 310:lvgl/src/lv_hal/lv_hal_disp.c ****     if(w < LV_DISP_MEDIUM_LIMIT) return LV_DISP_SIZE_MEDIUM;
ARM GAS  D:\Temp\ccJHuqZf.s 			page 20


 722              		.loc 1 310 5 is_stmt 1 view .LVU182
 723              		.loc 1 310 7 is_stmt 0 view .LVU183
 724 0024 3128     		cmp	r0, #49
 725 0026 0CD9     		bls	.L64
 311:lvgl/src/lv_hal/lv_hal_disp.c ****     if(w < LV_DISP_LARGE_LIMIT) return LV_DISP_SIZE_LARGE;
 726              		.loc 1 311 5 is_stmt 1 view .LVU184
 727              		.loc 1 311 7 is_stmt 0 view .LVU185
 728 0028 4528     		cmp	r0, #69
 729 002a 0CD8     		bhi	.L65
 730              		.loc 1 311 40 view .LVU186
 731 002c 0220     		movs	r0, #2
 732              	.LVL64:
 733              		.loc 1 311 40 view .LVU187
 734 002e 07E0     		b	.L61
 735              	.LVL65:
 736              	.L67:
 299:lvgl/src/lv_hal/lv_hal_disp.c **** 
 737              		.loc 1 299 22 is_stmt 1 discriminator 1 view .LVU188
 299:lvgl/src/lv_hal/lv_hal_disp.c **** 
 738              		.loc 1 299 29 is_stmt 0 discriminator 1 view .LVU189
 739 0030 FFF7FEFF 		bl	lv_disp_get_default
 740              	.LVL66:
 299:lvgl/src/lv_hal/lv_hal_disp.c **** 
 741              		.loc 1 299 29 discriminator 1 view .LVU190
 742 0034 0546     		mov	r5, r0
 743              	.LVL67:
 299:lvgl/src/lv_hal/lv_hal_disp.c **** 
 744              		.loc 1 299 29 discriminator 1 view .LVU191
 745 0036 E6E7     		b	.L59
 746              	.L62:
 302:lvgl/src/lv_hal/lv_hal_disp.c ****     else w = lv_disp_get_hor_res(disp);
 747              		.loc 1 302 24 view .LVU192
 748 0038 4FF4A074 		mov	r4, #320
 749 003c E8E7     		b	.L60
 750              	.LVL68:
 751              	.L63:
 309:lvgl/src/lv_hal/lv_hal_disp.c ****     if(w < LV_DISP_MEDIUM_LIMIT) return LV_DISP_SIZE_MEDIUM;
 752              		.loc 1 309 40 view .LVU193
 753 003e 0020     		movs	r0, #0
 754              	.LVL69:
 755              	.L61:
 312:lvgl/src/lv_hal/lv_hal_disp.c ****     else return LV_DISP_SIZE_EXTRA_LARGE;
 313:lvgl/src/lv_hal/lv_hal_disp.c **** }
 756              		.loc 1 313 1 view .LVU194
 757 0040 38BD     		pop	{r3, r4, r5, pc}
 758              	.LVL70:
 759              	.L64:
 310:lvgl/src/lv_hal/lv_hal_disp.c ****     if(w < LV_DISP_LARGE_LIMIT) return LV_DISP_SIZE_LARGE;
 760              		.loc 1 310 41 view .LVU195
 761 0042 0120     		movs	r0, #1
 762              	.LVL71:
 310:lvgl/src/lv_hal/lv_hal_disp.c ****     if(w < LV_DISP_LARGE_LIMIT) return LV_DISP_SIZE_LARGE;
 763              		.loc 1 310 41 view .LVU196
 764 0044 FCE7     		b	.L61
 765              	.LVL72:
 766              	.L65:
 312:lvgl/src/lv_hal/lv_hal_disp.c ****     else return LV_DISP_SIZE_EXTRA_LARGE;
ARM GAS  D:\Temp\ccJHuqZf.s 			page 21


 767              		.loc 1 312 17 view .LVU197
 768 0046 0320     		movs	r0, #3
 769              	.LVL73:
 312:lvgl/src/lv_hal/lv_hal_disp.c ****     else return LV_DISP_SIZE_EXTRA_LARGE;
 770              		.loc 1 312 17 view .LVU198
 771 0048 FAE7     		b	.L61
 772              		.cfi_endproc
 773              	.LFE469:
 775              		.section	.text.lv_disp_flush_ready,"ax",%progbits
 776              		.align	1
 777              		.global	lv_disp_flush_ready
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 781              		.fpu fpv4-sp-d16
 783              	lv_disp_flush_ready:
 784              	.LVL74:
 785              	.LFB470:
 314:lvgl/src/lv_hal/lv_hal_disp.c **** 
 315:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 316:lvgl/src/lv_hal/lv_hal_disp.c ****  * Call in the display driver's `flush_cb` function when the flushing is finished
 317:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp_drv pointer to display driver in `flush_cb` where this function is called
 318:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 319:lvgl/src/lv_hal/lv_hal_disp.c **** LV_ATTRIBUTE_FLUSH_READY void lv_disp_flush_ready(lv_disp_drv_t * disp_drv)
 320:lvgl/src/lv_hal/lv_hal_disp.c **** {
 786              		.loc 1 320 1 is_stmt 1 view -0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		@ link register save eliminated.
 321:lvgl/src/lv_hal/lv_hal_disp.c ****     /*If the screen is transparent initialize it when the flushing is ready*/
 322:lvgl/src/lv_hal/lv_hal_disp.c **** #if LV_COLOR_SCREEN_TRANSP
 323:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp_drv->screen_transp) {
 324:lvgl/src/lv_hal/lv_hal_disp.c ****         _lv_memset_00(disp_drv->buffer->buf_act, disp_drv->buffer->size * sizeof(lv_color32_t));
 325:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 326:lvgl/src/lv_hal/lv_hal_disp.c **** #endif
 327:lvgl/src/lv_hal/lv_hal_disp.c **** 
 328:lvgl/src/lv_hal/lv_hal_disp.c ****     disp_drv->buffer->flushing = 0;
 791              		.loc 1 328 5 view .LVU200
 792              		.loc 1 328 13 is_stmt 0 view .LVU201
 793 0000 4268     		ldr	r2, [r0, #4]
 794              		.loc 1 328 32 view .LVU202
 795 0002 0023     		movs	r3, #0
 796 0004 9361     		str	r3, [r2, #24]
 329:lvgl/src/lv_hal/lv_hal_disp.c ****     disp_drv->buffer->flushing_last = 0;
 797              		.loc 1 329 5 is_stmt 1 view .LVU203
 798              		.loc 1 329 13 is_stmt 0 view .LVU204
 799 0006 4268     		ldr	r2, [r0, #4]
 800              		.loc 1 329 37 view .LVU205
 801 0008 D361     		str	r3, [r2, #28]
 330:lvgl/src/lv_hal/lv_hal_disp.c **** }
 802              		.loc 1 330 1 view .LVU206
 803 000a 7047     		bx	lr
 804              		.cfi_endproc
 805              	.LFE470:
 807              		.section	.text.lv_disp_flush_is_last,"ax",%progbits
 808              		.align	1
ARM GAS  D:\Temp\ccJHuqZf.s 			page 22


 809              		.global	lv_disp_flush_is_last
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu fpv4-sp-d16
 815              	lv_disp_flush_is_last:
 816              	.LVL75:
 817              	.LFB471:
 331:lvgl/src/lv_hal/lv_hal_disp.c **** 
 332:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 333:lvgl/src/lv_hal/lv_hal_disp.c ****  * Tell if it's the last area of the refreshing process.
 334:lvgl/src/lv_hal/lv_hal_disp.c ****  * Can be called from `flush_cb` to execute some special display refreshing if needed when all area
 335:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp_drv pointer to display driver
 336:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return true: it's the last area to flush; false: there are other areas too which will be refres
 337:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 338:lvgl/src/lv_hal/lv_hal_disp.c **** LV_ATTRIBUTE_FLUSH_READY bool lv_disp_flush_is_last(lv_disp_drv_t * disp_drv)
 339:lvgl/src/lv_hal/lv_hal_disp.c **** {
 818              		.loc 1 339 1 is_stmt 1 view -0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 340:lvgl/src/lv_hal/lv_hal_disp.c ****     return disp_drv->buffer->flushing_last;
 823              		.loc 1 340 5 view .LVU208
 824              		.loc 1 340 20 is_stmt 0 view .LVU209
 825 0000 4368     		ldr	r3, [r0, #4]
 826              		.loc 1 340 28 view .LVU210
 827 0002 D869     		ldr	r0, [r3, #28]
 828              	.LVL76:
 341:lvgl/src/lv_hal/lv_hal_disp.c **** }
 829              		.loc 1 341 1 view .LVU211
 830 0004 0030     		adds	r0, r0, #0
 831 0006 18BF     		it	ne
 832 0008 0120     		movne	r0, #1
 833 000a 7047     		bx	lr
 834              		.cfi_endproc
 835              	.LFE471:
 837              		.section	.text.lv_disp_get_next,"ax",%progbits
 838              		.align	1
 839              		.global	lv_disp_get_next
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 843              		.fpu fpv4-sp-d16
 845              	lv_disp_get_next:
 846              	.LVL77:
 847              	.LFB472:
 342:lvgl/src/lv_hal/lv_hal_disp.c **** 
 343:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 344:lvgl/src/lv_hal/lv_hal_disp.c ****  * Get the next display.
 345:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to the current display. NULL to initialize.
 346:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return the next display or NULL if no more. Give the first display when the parameter is NULL
 347:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 348:lvgl/src/lv_hal/lv_hal_disp.c **** lv_disp_t * lv_disp_get_next(lv_disp_t * disp)
 349:lvgl/src/lv_hal/lv_hal_disp.c **** {
 848              		.loc 1 349 1 is_stmt 1 view -0
 849              		.cfi_startproc
ARM GAS  D:\Temp\ccJHuqZf.s 			page 23


 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              		.loc 1 349 1 is_stmt 0 view .LVU213
 853 0000 08B5     		push	{r3, lr}
 854              	.LCFI9:
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 3, -8
 857              		.cfi_offset 14, -4
 350:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp == NULL)
 858              		.loc 1 350 5 is_stmt 1 view .LVU214
 859              		.loc 1 350 7 is_stmt 0 view .LVU215
 860 0002 20B1     		cbz	r0, .L74
 861 0004 0146     		mov	r1, r0
 351:lvgl/src/lv_hal/lv_hal_disp.c ****         return _lv_ll_get_head(&LV_GC_ROOT(_lv_disp_ll));
 352:lvgl/src/lv_hal/lv_hal_disp.c ****     else
 353:lvgl/src/lv_hal/lv_hal_disp.c ****         return _lv_ll_get_next(&LV_GC_ROOT(_lv_disp_ll), disp);
 862              		.loc 1 353 9 is_stmt 1 view .LVU216
 863              		.loc 1 353 16 is_stmt 0 view .LVU217
 864 0006 0448     		ldr	r0, .L75
 865              	.LVL78:
 866              		.loc 1 353 16 view .LVU218
 867 0008 FFF7FEFF 		bl	_lv_ll_get_next
 868              	.LVL79:
 869              	.L70:
 354:lvgl/src/lv_hal/lv_hal_disp.c **** }
 870              		.loc 1 354 1 view .LVU219
 871 000c 08BD     		pop	{r3, pc}
 872              	.LVL80:
 873              	.L74:
 351:lvgl/src/lv_hal/lv_hal_disp.c ****         return _lv_ll_get_head(&LV_GC_ROOT(_lv_disp_ll));
 874              		.loc 1 351 9 is_stmt 1 view .LVU220
 351:lvgl/src/lv_hal/lv_hal_disp.c ****         return _lv_ll_get_head(&LV_GC_ROOT(_lv_disp_ll));
 875              		.loc 1 351 16 is_stmt 0 view .LVU221
 876 000e 0248     		ldr	r0, .L75
 877              	.LVL81:
 351:lvgl/src/lv_hal/lv_hal_disp.c ****         return _lv_ll_get_head(&LV_GC_ROOT(_lv_disp_ll));
 878              		.loc 1 351 16 view .LVU222
 879 0010 FFF7FEFF 		bl	_lv_ll_get_head
 880              	.LVL82:
 881 0014 FAE7     		b	.L70
 882              	.L76:
 883 0016 00BF     		.align	2
 884              	.L75:
 885 0018 00000000 		.word	_lv_disp_ll
 886              		.cfi_endproc
 887              	.LFE472:
 889              		.section	.text.lv_disp_get_buf,"ax",%progbits
 890              		.align	1
 891              		.global	lv_disp_get_buf
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 895              		.fpu fpv4-sp-d16
 897              	lv_disp_get_buf:
 898              	.LVL83:
 899              	.LFB473:
 355:lvgl/src/lv_hal/lv_hal_disp.c **** 
ARM GAS  D:\Temp\ccJHuqZf.s 			page 24


 356:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 357:lvgl/src/lv_hal/lv_hal_disp.c ****  * Get the internal buffer of a display
 358:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to a display
 359:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return pointer to the internal buffers
 360:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 361:lvgl/src/lv_hal/lv_hal_disp.c **** lv_disp_buf_t * lv_disp_get_buf(lv_disp_t * disp)
 362:lvgl/src/lv_hal/lv_hal_disp.c **** {
 900              		.loc 1 362 1 is_stmt 1 view -0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 363:lvgl/src/lv_hal/lv_hal_disp.c ****     return disp->driver.buffer;
 905              		.loc 1 363 5 view .LVU224
 364:lvgl/src/lv_hal/lv_hal_disp.c **** }
 906              		.loc 1 364 1 is_stmt 0 view .LVU225
 907 0000 4068     		ldr	r0, [r0, #4]
 908              	.LVL84:
 909              		.loc 1 364 1 view .LVU226
 910 0002 7047     		bx	lr
 911              		.cfi_endproc
 912              	.LFE473:
 914              		.section	.text.lv_disp_get_inv_buf_size,"ax",%progbits
 915              		.align	1
 916              		.global	lv_disp_get_inv_buf_size
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 920              		.fpu fpv4-sp-d16
 922              	lv_disp_get_inv_buf_size:
 923              	.LVL85:
 924              	.LFB474:
 365:lvgl/src/lv_hal/lv_hal_disp.c **** 
 366:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 367:lvgl/src/lv_hal/lv_hal_disp.c ****  * Get the number of areas in the buffer
 368:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return number of invalid areas
 369:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 370:lvgl/src/lv_hal/lv_hal_disp.c **** uint16_t lv_disp_get_inv_buf_size(lv_disp_t * disp)
 371:lvgl/src/lv_hal/lv_hal_disp.c **** {
 925              		.loc 1 371 1 is_stmt 1 view -0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 372:lvgl/src/lv_hal/lv_hal_disp.c ****     return disp->inv_p;
 930              		.loc 1 372 5 view .LVU228
 931              		.loc 1 372 16 is_stmt 0 view .LVU229
 932 0000 B0F88201 		ldrh	r0, [r0, #386]
 933              	.LVL86:
 373:lvgl/src/lv_hal/lv_hal_disp.c **** }
 934              		.loc 1 373 1 view .LVU230
 935 0004 C0F30900 		ubfx	r0, r0, #0, #10
 936 0008 7047     		bx	lr
 937              		.cfi_endproc
 938              	.LFE474:
 940              		.section	.text._lv_disp_pop_from_inv_buf,"ax",%progbits
 941              		.align	1
ARM GAS  D:\Temp\ccJHuqZf.s 			page 25


 942              		.global	_lv_disp_pop_from_inv_buf
 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 946              		.fpu fpv4-sp-d16
 948              	_lv_disp_pop_from_inv_buf:
 949              	.LVL87:
 950              	.LFB475:
 374:lvgl/src/lv_hal/lv_hal_disp.c **** 
 375:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 376:lvgl/src/lv_hal/lv_hal_disp.c ****  * Pop (delete) the last 'num' invalidated areas from the buffer
 377:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param num number of areas to delete
 378:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 379:lvgl/src/lv_hal/lv_hal_disp.c **** void _lv_disp_pop_from_inv_buf(lv_disp_t * disp, uint16_t num)
 380:lvgl/src/lv_hal/lv_hal_disp.c **** {
 951              		.loc 1 380 1 is_stmt 1 view -0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 381:lvgl/src/lv_hal/lv_hal_disp.c **** 
 382:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp->inv_p < num)
 956              		.loc 1 382 5 view .LVU232
 957              		.loc 1 382 12 is_stmt 0 view .LVU233
 958 0000 B0F88231 		ldrh	r3, [r0, #386]
 959 0004 C3F30903 		ubfx	r3, r3, #0, #10
 960              		.loc 1 382 7 view .LVU234
 961 0008 8B42     		cmp	r3, r1
 962 000a 06DA     		bge	.L80
 383:lvgl/src/lv_hal/lv_hal_disp.c ****         disp->inv_p = 0;
 963              		.loc 1 383 9 is_stmt 1 view .LVU235
 964              		.loc 1 383 21 is_stmt 0 view .LVU236
 965 000c B0F88231 		ldrh	r3, [r0, #386]
 966 0010 6FF30903 		bfc	r3, #0, #10
 967 0014 A0F88231 		strh	r3, [r0, #386]	@ movhi
 968 0018 7047     		bx	lr
 969              	.L80:
 384:lvgl/src/lv_hal/lv_hal_disp.c ****     else
 385:lvgl/src/lv_hal/lv_hal_disp.c ****         disp->inv_p -= num;
 970              		.loc 1 385 9 is_stmt 1 view .LVU237
 971              		.loc 1 385 21 is_stmt 0 view .LVU238
 972 001a 5B1A     		subs	r3, r3, r1
 973 001c B0F88221 		ldrh	r2, [r0, #386]
 974 0020 63F30902 		bfi	r2, r3, #0, #10
 975 0024 A0F88221 		strh	r2, [r0, #386]	@ movhi
 386:lvgl/src/lv_hal/lv_hal_disp.c **** }
 976              		.loc 1 386 1 view .LVU239
 977 0028 7047     		bx	lr
 978              		.cfi_endproc
 979              	.LFE475:
 981              		.section	.text.lv_disp_is_double_buf,"ax",%progbits
 982              		.align	1
 983              		.global	lv_disp_is_double_buf
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv4-sp-d16
ARM GAS  D:\Temp\ccJHuqZf.s 			page 26


 989              	lv_disp_is_double_buf:
 990              	.LVL88:
 991              	.LFB476:
 387:lvgl/src/lv_hal/lv_hal_disp.c **** 
 388:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 389:lvgl/src/lv_hal/lv_hal_disp.c ****  * Check the driver configuration if it's double buffered (both `buf1` and `buf2` are set)
 390:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to to display to check
 391:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return true: double buffered; false: not double buffered
 392:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 393:lvgl/src/lv_hal/lv_hal_disp.c **** bool lv_disp_is_double_buf(lv_disp_t * disp)
 394:lvgl/src/lv_hal/lv_hal_disp.c **** {
 992              		.loc 1 394 1 is_stmt 1 view -0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
 996              		@ link register save eliminated.
 395:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp->driver.buffer->buf1 && disp->driver.buffer->buf2)
 997              		.loc 1 395 5 view .LVU241
 998              		.loc 1 395 20 is_stmt 0 view .LVU242
 999 0000 4368     		ldr	r3, [r0, #4]
 1000              		.loc 1 395 27 view .LVU243
 1001 0002 1A68     		ldr	r2, [r3]
 1002              		.loc 1 395 7 view .LVU244
 1003 0004 2AB1     		cbz	r2, .L84
 1004              		.loc 1 395 56 discriminator 1 view .LVU245
 1005 0006 5B68     		ldr	r3, [r3, #4]
 1006              		.loc 1 395 34 discriminator 1 view .LVU246
 1007 0008 0BB1     		cbz	r3, .L86
 396:lvgl/src/lv_hal/lv_hal_disp.c ****         return true;
 1008              		.loc 1 396 16 view .LVU247
 1009 000a 0120     		movs	r0, #1
 1010              	.LVL89:
 397:lvgl/src/lv_hal/lv_hal_disp.c ****     else
 398:lvgl/src/lv_hal/lv_hal_disp.c ****         return false;
 399:lvgl/src/lv_hal/lv_hal_disp.c **** }
 1011              		.loc 1 399 1 view .LVU248
 1012 000c 7047     		bx	lr
 1013              	.LVL90:
 1014              	.L86:
 398:lvgl/src/lv_hal/lv_hal_disp.c **** }
 1015              		.loc 1 398 16 view .LVU249
 1016 000e 0020     		movs	r0, #0
 1017              	.LVL91:
 398:lvgl/src/lv_hal/lv_hal_disp.c **** }
 1018              		.loc 1 398 16 view .LVU250
 1019 0010 7047     		bx	lr
 1020              	.LVL92:
 1021              	.L84:
 398:lvgl/src/lv_hal/lv_hal_disp.c **** }
 1022              		.loc 1 398 16 view .LVU251
 1023 0012 0020     		movs	r0, #0
 1024              	.LVL93:
 398:lvgl/src/lv_hal/lv_hal_disp.c **** }
 1025              		.loc 1 398 16 view .LVU252
 1026 0014 7047     		bx	lr
 1027              		.cfi_endproc
 1028              	.LFE476:
ARM GAS  D:\Temp\ccJHuqZf.s 			page 27


 1030              		.section	.text.lv_disp_is_true_double_buf,"ax",%progbits
 1031              		.align	1
 1032              		.global	lv_disp_is_true_double_buf
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1036              		.fpu fpv4-sp-d16
 1038              	lv_disp_is_true_double_buf:
 1039              	.LVL94:
 1040              	.LFB477:
 400:lvgl/src/lv_hal/lv_hal_disp.c **** 
 401:lvgl/src/lv_hal/lv_hal_disp.c **** /**
 402:lvgl/src/lv_hal/lv_hal_disp.c ****  * Check the driver configuration if it's TRUE double buffered (both `buf1` and `buf2` are set and
 403:lvgl/src/lv_hal/lv_hal_disp.c ****  * `size` is screen sized)
 404:lvgl/src/lv_hal/lv_hal_disp.c ****  * @param disp pointer to to display to check
 405:lvgl/src/lv_hal/lv_hal_disp.c ****  * @return true: double buffered; false: not double buffered
 406:lvgl/src/lv_hal/lv_hal_disp.c ****  */
 407:lvgl/src/lv_hal/lv_hal_disp.c **** bool lv_disp_is_true_double_buf(lv_disp_t * disp)
 408:lvgl/src/lv_hal/lv_hal_disp.c **** {
 1041              		.loc 1 408 1 is_stmt 1 view -0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		.loc 1 408 1 is_stmt 0 view .LVU254
 1046 0000 38B5     		push	{r3, r4, r5, lr}
 1047              	.LCFI10:
 1048              		.cfi_def_cfa_offset 16
 1049              		.cfi_offset 3, -16
 1050              		.cfi_offset 4, -12
 1051              		.cfi_offset 5, -8
 1052              		.cfi_offset 14, -4
 1053 0002 0546     		mov	r5, r0
 409:lvgl/src/lv_hal/lv_hal_disp.c ****     uint32_t scr_size = disp->driver.hor_res * disp->driver.ver_res;
 1054              		.loc 1 409 5 is_stmt 1 view .LVU255
 1055              		.loc 1 409 37 is_stmt 0 view .LVU256
 1056 0004 B0F90040 		ldrsh	r4, [r0]
 1057              		.loc 1 409 60 view .LVU257
 1058 0008 B0F90230 		ldrsh	r3, [r0, #2]
 1059              		.loc 1 409 46 view .LVU258
 1060 000c 03FB04F4 		mul	r4, r3, r4
 1061              	.LVL95:
 410:lvgl/src/lv_hal/lv_hal_disp.c **** 
 411:lvgl/src/lv_hal/lv_hal_disp.c ****     if(lv_disp_is_double_buf(disp) && disp->driver.buffer->size == scr_size) {
 1062              		.loc 1 411 5 is_stmt 1 view .LVU259
 1063              		.loc 1 411 8 is_stmt 0 view .LVU260
 1064 0010 FFF7FEFF 		bl	lv_disp_is_double_buf
 1065              	.LVL96:
 1066              		.loc 1 411 7 view .LVU261
 1067 0014 38B1     		cbz	r0, .L89
 1068 0016 0346     		mov	r3, r0
 1069              		.loc 1 411 51 discriminator 1 view .LVU262
 1070 0018 6A68     		ldr	r2, [r5, #4]
 1071              		.loc 1 411 58 discriminator 1 view .LVU263
 1072 001a D268     		ldr	r2, [r2, #12]
 1073              		.loc 1 411 36 discriminator 1 view .LVU264
 1074 001c A242     		cmp	r2, r4
 1075 001e 00D0     		beq	.L88
ARM GAS  D:\Temp\ccJHuqZf.s 			page 28


 412:lvgl/src/lv_hal/lv_hal_disp.c ****         return true;
 413:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 414:lvgl/src/lv_hal/lv_hal_disp.c ****     else {
 415:lvgl/src/lv_hal/lv_hal_disp.c ****         return false;
 1076              		.loc 1 415 16 view .LVU265
 1077 0020 0023     		movs	r3, #0
 1078              	.L88:
 416:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 417:lvgl/src/lv_hal/lv_hal_disp.c **** }
 1079              		.loc 1 417 1 view .LVU266
 1080 0022 1846     		mov	r0, r3
 1081 0024 38BD     		pop	{r3, r4, r5, pc}
 1082              	.LVL97:
 1083              	.L89:
 415:lvgl/src/lv_hal/lv_hal_disp.c ****     }
 1084              		.loc 1 415 16 view .LVU267
 1085 0026 0023     		movs	r3, #0
 1086 0028 FBE7     		b	.L88
 1087              		.cfi_endproc
 1088              	.LFE477:
 1090              		.section	.text.lv_disp_drv_register,"ax",%progbits
 1091              		.align	1
 1092              		.global	lv_disp_drv_register
 1093              		.syntax unified
 1094              		.thumb
 1095              		.thumb_func
 1096              		.fpu fpv4-sp-d16
 1098              	lv_disp_drv_register:
 1099              	.LVL98:
 1100              	.LFB460:
 117:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_disp_t * disp = _lv_ll_ins_head(&LV_GC_ROOT(_lv_disp_ll));
 1101              		.loc 1 117 1 is_stmt 1 view -0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 117:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_disp_t * disp = _lv_ll_ins_head(&LV_GC_ROOT(_lv_disp_ll));
 1105              		.loc 1 117 1 is_stmt 0 view .LVU269
 1106 0000 70B5     		push	{r4, r5, r6, lr}
 1107              	.LCFI11:
 1108              		.cfi_def_cfa_offset 16
 1109              		.cfi_offset 4, -16
 1110              		.cfi_offset 5, -12
 1111              		.cfi_offset 6, -8
 1112              		.cfi_offset 14, -4
 1113 0002 0546     		mov	r5, r0
 118:lvgl/src/lv_hal/lv_hal_disp.c ****     if(!disp) {
 1114              		.loc 1 118 5 is_stmt 1 view .LVU270
 118:lvgl/src/lv_hal/lv_hal_disp.c ****     if(!disp) {
 1115              		.loc 1 118 24 is_stmt 0 view .LVU271
 1116 0004 3D48     		ldr	r0, .L103
 1117              	.LVL99:
 118:lvgl/src/lv_hal/lv_hal_disp.c ****     if(!disp) {
 1118              		.loc 1 118 24 view .LVU272
 1119 0006 FFF7FEFF 		bl	_lv_ll_ins_head
 1120              	.LVL100:
 119:lvgl/src/lv_hal/lv_hal_disp.c ****         LV_ASSERT_MEM(disp);
 1121              		.loc 1 119 5 is_stmt 1 view .LVU273
ARM GAS  D:\Temp\ccJHuqZf.s 			page 29


 119:lvgl/src/lv_hal/lv_hal_disp.c ****         LV_ASSERT_MEM(disp);
 1122              		.loc 1 119 7 is_stmt 0 view .LVU274
 1123 000a 0446     		mov	r4, r0
 1124 000c 0028     		cmp	r0, #0
 1125 000e 60D0     		beq	.L100
 124:lvgl/src/lv_hal/lv_hal_disp.c ****     _lv_memcpy(&disp->driver, driver, sizeof(lv_disp_drv_t));
 1126              		.loc 1 124 5 is_stmt 1 view .LVU275
 1127 0010 4FF4C471 		mov	r1, #392
 1128 0014 FFF7FEFF 		bl	_lv_memset_00
 1129              	.LVL101:
 125:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1130              		.loc 1 125 5 view .LVU276
 1131 0018 3422     		movs	r2, #52
 1132 001a 2946     		mov	r1, r5
 1133 001c 2046     		mov	r0, r4
 1134 001e FFF7FEFF 		bl	_lv_memcpy
 1135              	.LVL102:
 127:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->last_activity_time = 0;
 1136              		.loc 1 127 5 view .LVU277
 1137 0022 4C21     		movs	r1, #76
 1138 0024 04F13800 		add	r0, r4, #56
 1139 0028 FFF7FEFF 		bl	_lv_ll_init
 1140              	.LVL103:
 128:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1141              		.loc 1 128 5 view .LVU278
 128:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1142              		.loc 1 128 30 is_stmt 0 view .LVU279
 1143 002c 0023     		movs	r3, #0
 1144 002e C4F88431 		str	r3, [r4, #388]
 130:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1145              		.loc 1 130 5 is_stmt 1 view .LVU280
 130:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1146              		.loc 1 130 17 is_stmt 0 view .LVU281
 1147 0032 334B     		ldr	r3, .L103+4
 1148 0034 1B68     		ldr	r3, [r3]
 130:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1149              		.loc 1 130 7 view .LVU282
 1150 0036 002B     		cmp	r3, #0
 1151 0038 55D0     		beq	.L101
 1152              	.L95:
 132:lvgl/src/lv_hal/lv_hal_disp.c ****     disp_def                 = disp; /*Temporarily change the default screen to create the default 
 1153              		.loc 1 132 5 is_stmt 1 view .LVU283
 132:lvgl/src/lv_hal/lv_hal_disp.c ****     disp_def                 = disp; /*Temporarily change the default screen to create the default 
 1154              		.loc 1 132 17 is_stmt 0 view .LVU284
 1155 003a 314B     		ldr	r3, .L103+4
 1156 003c 1E68     		ldr	r6, [r3]
 1157              	.LVL104:
 133:lvgl/src/lv_hal/lv_hal_disp.c ****                                         new display*/
 1158              		.loc 1 133 5 is_stmt 1 view .LVU285
 133:lvgl/src/lv_hal/lv_hal_disp.c ****                                         new display*/
 1159              		.loc 1 133 30 is_stmt 0 view .LVU286
 1160 003e 1C60     		str	r4, [r3]
 136:lvgl/src/lv_hal/lv_hal_disp.c ****     LV_ASSERT_MEM(disp->refr_task);
 1161              		.loc 1 136 5 is_stmt 1 view .LVU287
 136:lvgl/src/lv_hal/lv_hal_disp.c ****     LV_ASSERT_MEM(disp->refr_task);
 1162              		.loc 1 136 23 is_stmt 0 view .LVU288
 1163 0040 2346     		mov	r3, r4
ARM GAS  D:\Temp\ccJHuqZf.s 			page 30


 1164 0042 0322     		movs	r2, #3
 1165 0044 1421     		movs	r1, #20
 1166 0046 2F48     		ldr	r0, .L103+8
 1167 0048 FFF7FEFF 		bl	lv_task_create
 1168              	.LVL105:
 136:lvgl/src/lv_hal/lv_hal_disp.c ****     LV_ASSERT_MEM(disp->refr_task);
 1169              		.loc 1 136 21 view .LVU289
 1170 004c 6063     		str	r0, [r4, #52]
 137:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp->refr_task == NULL) return NULL;
 1171              		.loc 1 137 5 is_stmt 1 view .LVU290
 137:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp->refr_task == NULL) return NULL;
 1172              		.loc 1 137 5 view .LVU291
 1173 004e FFF7FEFF 		bl	lv_debug_check_null
 1174              	.LVL106:
 1175 0052 0028     		cmp	r0, #0
 1176 0054 4AD0     		beq	.L102
 137:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp->refr_task == NULL) return NULL;
 1177              		.loc 1 137 35 discriminator 2 view .LVU292
 138:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1178              		.loc 1 138 5 discriminator 2 view .LVU293
 138:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1179              		.loc 1 138 12 is_stmt 0 discriminator 2 view .LVU294
 1180 0056 636B     		ldr	r3, [r4, #52]
 138:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1181              		.loc 1 138 7 discriminator 2 view .LVU295
 1182 0058 002B     		cmp	r3, #0
 1183 005a 4DD0     		beq	.L98
 140:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->last_activity_time = 0;
 1184              		.loc 1 140 5 is_stmt 1 view .LVU296
 140:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->last_activity_time = 0;
 1185              		.loc 1 140 17 is_stmt 0 view .LVU297
 1186 005c B4F88231 		ldrh	r3, [r4, #386]
 1187 0060 6FF30903 		bfc	r3, #0, #10
 1188 0064 A4F88231 		strh	r3, [r4, #386]	@ movhi
 141:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1189              		.loc 1 141 5 is_stmt 1 view .LVU298
 141:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1190              		.loc 1 141 30 is_stmt 0 view .LVU299
 1191 0068 0025     		movs	r5, #0
 1192              	.LVL107:
 141:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1193              		.loc 1 141 30 view .LVU300
 1194 006a C4F88451 		str	r5, [r4, #388]
 143:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->bg_img = NULL;
 1195              		.loc 1 143 5 is_stmt 1 view .LVU301
 143:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->bg_img = NULL;
 1196              		.loc 1 143 20 is_stmt 0 view .LVU302
 1197 006e 264B     		ldr	r3, .L103+12
 1198 0070 1B88     		ldrh	r3, [r3]
 1199 0072 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 144:lvgl/src/lv_hal/lv_hal_disp.c **** #if LV_COLOR_SCREEN_TRANSP
 1200              		.loc 1 144 5 is_stmt 1 view .LVU303
 144:lvgl/src/lv_hal/lv_hal_disp.c **** #if LV_COLOR_SCREEN_TRANSP
 1201              		.loc 1 144 18 is_stmt 0 view .LVU304
 1202 0076 E565     		str	r5, [r4, #92]
 148:lvgl/src/lv_hal/lv_hal_disp.c **** #endif
 1203              		.loc 1 148 5 is_stmt 1 view .LVU305
ARM GAS  D:\Temp\ccJHuqZf.s 			page 31


 148:lvgl/src/lv_hal/lv_hal_disp.c **** #endif
 1204              		.loc 1 148 18 is_stmt 0 view .LVU306
 1205 0078 FF23     		movs	r3, #255
 1206 007a 84F86030 		strb	r3, [r4, #96]
 151:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->act_scr   = lv_obj_create(NULL, NULL); /*Create a default screen on the display*/
 1207              		.loc 1 151 5 is_stmt 1 view .LVU307
 151:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->act_scr   = lv_obj_create(NULL, NULL); /*Create a default screen on the display*/
 1208              		.loc 1 151 21 is_stmt 0 view .LVU308
 1209 007e A564     		str	r5, [r4, #72]
 152:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->top_layer = lv_obj_create(NULL, NULL); /*Create top layer on the display*/
 1210              		.loc 1 152 5 is_stmt 1 view .LVU309
 152:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->top_layer = lv_obj_create(NULL, NULL); /*Create top layer on the display*/
 1211              		.loc 1 152 23 is_stmt 0 view .LVU310
 1212 0080 2946     		mov	r1, r5
 1213 0082 2846     		mov	r0, r5
 1214 0084 FFF7FEFF 		bl	lv_obj_create
 1215              	.LVL108:
 152:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->top_layer = lv_obj_create(NULL, NULL); /*Create top layer on the display*/
 1216              		.loc 1 152 21 view .LVU311
 1217 0088 6064     		str	r0, [r4, #68]
 153:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->sys_layer = lv_obj_create(NULL, NULL); /*Create sys layer on the display*/
 1218              		.loc 1 153 5 is_stmt 1 view .LVU312
 153:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->sys_layer = lv_obj_create(NULL, NULL); /*Create sys layer on the display*/
 1219              		.loc 1 153 23 is_stmt 0 view .LVU313
 1220 008a 2946     		mov	r1, r5
 1221 008c 2846     		mov	r0, r5
 1222 008e FFF7FEFF 		bl	lv_obj_create
 1223              	.LVL109:
 153:lvgl/src/lv_hal/lv_hal_disp.c ****     disp->sys_layer = lv_obj_create(NULL, NULL); /*Create sys layer on the display*/
 1224              		.loc 1 153 21 view .LVU314
 1225 0092 2065     		str	r0, [r4, #80]
 154:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_reset_style_list(disp->top_layer, LV_OBJ_PART_MAIN);
 1226              		.loc 1 154 5 is_stmt 1 view .LVU315
 154:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_reset_style_list(disp->top_layer, LV_OBJ_PART_MAIN);
 1227              		.loc 1 154 23 is_stmt 0 view .LVU316
 1228 0094 2946     		mov	r1, r5
 1229 0096 2846     		mov	r0, r5
 1230 0098 FFF7FEFF 		bl	lv_obj_create
 1231              	.LVL110:
 154:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_reset_style_list(disp->top_layer, LV_OBJ_PART_MAIN);
 1232              		.loc 1 154 21 view .LVU317
 1233 009c 6065     		str	r0, [r4, #84]
 155:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_reset_style_list(disp->sys_layer, LV_OBJ_PART_MAIN);
 1234              		.loc 1 155 5 is_stmt 1 view .LVU318
 1235 009e 2946     		mov	r1, r5
 1236 00a0 206D     		ldr	r0, [r4, #80]
 1237 00a2 FFF7FEFF 		bl	lv_obj_reset_style_list
 1238              	.LVL111:
 156:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_set_click(disp->top_layer, false);
 1239              		.loc 1 156 5 view .LVU319
 1240 00a6 2946     		mov	r1, r5
 1241 00a8 606D     		ldr	r0, [r4, #84]
 1242 00aa FFF7FEFF 		bl	lv_obj_reset_style_list
 1243              	.LVL112:
 157:lvgl/src/lv_hal/lv_hal_disp.c ****     lv_obj_set_click(disp->sys_layer, false);
 1244              		.loc 1 157 5 view .LVU320
 1245 00ae 2946     		mov	r1, r5
ARM GAS  D:\Temp\ccJHuqZf.s 			page 32


 1246 00b0 206D     		ldr	r0, [r4, #80]
 1247 00b2 FFF7FEFF 		bl	lv_obj_set_click
 1248              	.LVL113:
 158:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1249              		.loc 1 158 5 view .LVU321
 1250 00b6 2946     		mov	r1, r5
 1251 00b8 606D     		ldr	r0, [r4, #84]
 1252 00ba FFF7FEFF 		bl	lv_obj_set_click
 1253              	.LVL114:
 160:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1254              		.loc 1 160 5 view .LVU322
 1255 00be 606C     		ldr	r0, [r4, #68]
 1256 00c0 FFF7FEFF 		bl	lv_obj_invalidate
 1257              	.LVL115:
 162:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1258              		.loc 1 162 5 view .LVU323
 162:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1259              		.loc 1 162 14 is_stmt 0 view .LVU324
 1260 00c4 0E4B     		ldr	r3, .L103+4
 1261 00c6 1E60     		str	r6, [r3]
 164:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1262              		.loc 1 164 5 is_stmt 1 view .LVU325
 1263 00c8 606B     		ldr	r0, [r4, #52]
 1264 00ca FFF7FEFF 		bl	lv_task_ready
 1265              	.LVL116:
 167:lvgl/src/lv_hal/lv_hal_disp.c ****         LV_LOG_ERROR("Can't handle 2 screen sized buffers with set_px_cb. Display will not be refre
 1266              		.loc 1 167 5 view .LVU326
 1267              	.L91:
 172:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1268              		.loc 1 172 1 is_stmt 0 view .LVU327
 1269 00ce 2046     		mov	r0, r4
 1270 00d0 70BD     		pop	{r4, r5, r6, pc}
 1271              	.LVL117:
 1272              	.L100:
 120:lvgl/src/lv_hal/lv_hal_disp.c ****         return NULL;
 1273              		.loc 1 120 9 is_stmt 1 view .LVU328
 120:lvgl/src/lv_hal/lv_hal_disp.c ****         return NULL;
 1274              		.loc 1 120 9 view .LVU329
 1275 00d2 FFF7FEFF 		bl	lv_debug_check_null
 1276              	.LVL118:
 120:lvgl/src/lv_hal/lv_hal_disp.c ****         return NULL;
 1277              		.loc 1 120 9 is_stmt 0 view .LVU330
 1278 00d6 0028     		cmp	r0, #0
 1279 00d8 F9D1     		bne	.L91
 120:lvgl/src/lv_hal/lv_hal_disp.c ****         return NULL;
 1280              		.loc 1 120 9 is_stmt 1 discriminator 1 view .LVU331
 120:lvgl/src/lv_hal/lv_hal_disp.c ****         return NULL;
 1281              		.loc 1 120 9 discriminator 1 view .LVU332
 1282 00da 2246     		mov	r2, r4
 1283 00dc 0023     		movs	r3, #0
 1284 00de 0B48     		ldr	r0, .L103+16
 1285 00e0 FFF7FEFF 		bl	lv_debug_log_error
 1286              	.LVL119:
 1287              	.L94:
 120:lvgl/src/lv_hal/lv_hal_disp.c ****         return NULL;
 1288              		.loc 1 120 9 discriminator 1 view .LVU333
 120:lvgl/src/lv_hal/lv_hal_disp.c ****         return NULL;
ARM GAS  D:\Temp\ccJHuqZf.s 			page 33


 1289              		.loc 1 120 9 discriminator 1 view .LVU334
 1290 00e4 FEE7     		b	.L94
 1291              	.L101:
 130:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1292              		.loc 1 130 26 discriminator 1 view .LVU335
 130:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1293              		.loc 1 130 35 is_stmt 0 discriminator 1 view .LVU336
 1294 00e6 064B     		ldr	r3, .L103+4
 1295 00e8 1C60     		str	r4, [r3]
 1296 00ea A6E7     		b	.L95
 1297              	.LVL120:
 1298              	.L102:
 137:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp->refr_task == NULL) return NULL;
 1299              		.loc 1 137 5 is_stmt 1 discriminator 1 view .LVU337
 137:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp->refr_task == NULL) return NULL;
 1300              		.loc 1 137 5 discriminator 1 view .LVU338
 1301 00ec 626B     		ldr	r2, [r4, #52]
 1302 00ee 0023     		movs	r3, #0
 1303 00f0 0648     		ldr	r0, .L103+16
 1304 00f2 FFF7FEFF 		bl	lv_debug_log_error
 1305              	.LVL121:
 1306              	.L97:
 137:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp->refr_task == NULL) return NULL;
 1307              		.loc 1 137 5 discriminator 2 view .LVU339
 137:lvgl/src/lv_hal/lv_hal_disp.c ****     if(disp->refr_task == NULL) return NULL;
 1308              		.loc 1 137 5 discriminator 2 view .LVU340
 1309 00f6 FEE7     		b	.L97
 1310              	.L98:
 138:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1311              		.loc 1 138 40 is_stmt 0 view .LVU341
 1312 00f8 0024     		movs	r4, #0
 1313              	.LVL122:
 138:lvgl/src/lv_hal/lv_hal_disp.c **** 
 1314              		.loc 1 138 40 view .LVU342
 1315 00fa E8E7     		b	.L91
 1316              	.L104:
 1317              		.align	2
 1318              	.L103:
 1319 00fc 00000000 		.word	_lv_disp_ll
 1320 0100 00000000 		.word	.LANCHOR0
 1321 0104 00000000 		.word	_lv_disp_refr_task
 1322 0108 00000000 		.word	.LANCHOR1
 1323 010c 00000000 		.word	.LC1
 1324              		.cfi_endproc
 1325              	.LFE460:
 1327              		.section	.rodata
 1328              		.align	2
 1329              		.set	.LANCHOR1,. + 0
 1330              	.LC0:
 1331 0000 FF       		.byte	255
 1332 0001 FF       		.byte	255
 1333              		.section	.bss.disp_def,"aw",%nobits
 1334              		.align	2
 1335              		.set	.LANCHOR0,. + 0
 1338              	disp_def:
 1339 0000 00000000 		.space	4
 1340              		.section	.rodata.lv_disp_drv_register.str1.4,"aMS",%progbits,1
ARM GAS  D:\Temp\ccJHuqZf.s 			page 34


 1341              		.align	2
 1342              	.LC1:
 1343 0000 4F757420 		.ascii	"Out of memory\000"
 1343      6F66206D 
 1343      656D6F72 
 1343      7900
 1344              		.text
 1345              	.Letext0:
 1346              		.file 2 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 1347              		.file 3 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 1348              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1349              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1350              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1351              		.file 7 "lvgl/lv_conf.h"
 1352              		.file 8 "lvgl/src/lv_hal/../lv_misc/lv_color.h"
 1353              		.file 9 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 1354              		.file 10 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 1355              		.file 11 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 1356              		.file 12 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 1357              		.file 13 "lvgl/src/lv_hal/../lv_misc/lv_types.h"
 1358              		.file 14 "lvgl/src/lv_hal/../lv_misc/lv_mem.h"
 1359              		.file 15 "lvgl/src/lv_hal/../lv_misc/lv_area.h"
 1360              		.file 16 "lvgl/src/lv_hal/../lv_misc/lv_ll.h"
 1361              		.file 17 "lvgl/src/lv_hal/../lv_misc/lv_task.h"
 1362              		.file 18 "lvgl/src/lv_hal/lv_hal_disp.h"
 1363              		.file 19 "lvgl/src/lv_hal/../lv_core/lv_obj.h"
 1364              		.file 20 "lvgl/src/lv_hal/lv_hal_indev.h"
 1365              		.file 21 "lvgl/src/lv_hal/../lv_misc/../lv_draw/lv_img_buf.h"
 1366              		.file 22 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_font\\lv_font.h"
 1367              		.file 23 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_anim.h"
 1368              		.file 24 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_draw\\lv_draw_mask.h"
 1369              		.file 25 "lvgl/src/lv_hal/../lv_misc/../lv_draw/../lv_core/lv_style.h"
 1370              		.file 26 "lvgl/src/lv_hal/../lv_misc/../lv_draw/lv_img_decoder.h"
 1371              		.file 27 "lvgl/src/lv_hal/../lv_misc/../lv_draw/lv_img_cache.h"
 1372              		.file 28 "lvgl/src/lv_hal/../lv_misc/lv_gc.h"
 1373              		.file 29 "lvgl/src/lv_hal/../lv_core/../lv_draw/../lv_misc/lv_bidi.h"
 1374              		.file 30 "lvgl/src/lv_hal/../lv_core/../lv_draw/../lv_misc/lv_txt.h"
 1375              		.file 31 "lvgl/src/lv_hal/../lv_core/../lv_draw/lv_draw_label.h"
 1376              		.file 32 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_debug.h"
ARM GAS  D:\Temp\ccJHuqZf.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_hal_disp.c
  D:\Temp\ccJHuqZf.s:18     .text.lv_disp_drv_init:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:26     .text.lv_disp_drv_init:0000000000000000 lv_disp_drv_init
  D:\Temp\ccJHuqZf.s:103    .text.lv_disp_buf_init:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:110    .text.lv_disp_buf_init:0000000000000000 lv_disp_buf_init
  D:\Temp\ccJHuqZf.s:156    .text.lv_disp_set_default:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:163    .text.lv_disp_set_default:0000000000000000 lv_disp_set_default
  D:\Temp\ccJHuqZf.s:180    .text.lv_disp_set_default:0000000000000008 $d
  D:\Temp\ccJHuqZf.s:185    .text.lv_disp_get_default:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:192    .text.lv_disp_get_default:0000000000000000 lv_disp_get_default
  D:\Temp\ccJHuqZf.s:207    .text.lv_disp_get_default:0000000000000008 $d
  D:\Temp\ccJHuqZf.s:212    .text.lv_disp_remove:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:219    .text.lv_disp_remove:0000000000000000 lv_disp_remove
  D:\Temp\ccJHuqZf.s:316    .text.lv_disp_remove:000000000000004c $d
  D:\Temp\ccJHuqZf.s:321    .text.lv_disp_get_hor_res:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:328    .text.lv_disp_get_hor_res:0000000000000000 lv_disp_get_hor_res
  D:\Temp\ccJHuqZf.s:389    .text.lv_disp_get_ver_res:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:396    .text.lv_disp_get_ver_res:0000000000000000 lv_disp_get_ver_res
  D:\Temp\ccJHuqZf.s:457    .text.lv_disp_drv_update:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:464    .text.lv_disp_drv_update:0000000000000000 lv_disp_drv_update
  D:\Temp\ccJHuqZf.s:547    .text.lv_disp_get_antialiasing:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:554    .text.lv_disp_get_antialiasing:0000000000000000 lv_disp_get_antialiasing
  D:\Temp\ccJHuqZf.s:605    .text.lv_disp_get_dpi:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:612    .text.lv_disp_get_dpi:0000000000000000 lv_disp_get_dpi
  D:\Temp\ccJHuqZf.s:663    .text.lv_disp_get_size_category:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:670    .text.lv_disp_get_size_category:0000000000000000 lv_disp_get_size_category
  D:\Temp\ccJHuqZf.s:776    .text.lv_disp_flush_ready:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:783    .text.lv_disp_flush_ready:0000000000000000 lv_disp_flush_ready
  D:\Temp\ccJHuqZf.s:808    .text.lv_disp_flush_is_last:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:815    .text.lv_disp_flush_is_last:0000000000000000 lv_disp_flush_is_last
  D:\Temp\ccJHuqZf.s:838    .text.lv_disp_get_next:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:845    .text.lv_disp_get_next:0000000000000000 lv_disp_get_next
  D:\Temp\ccJHuqZf.s:885    .text.lv_disp_get_next:0000000000000018 $d
  D:\Temp\ccJHuqZf.s:890    .text.lv_disp_get_buf:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:897    .text.lv_disp_get_buf:0000000000000000 lv_disp_get_buf
  D:\Temp\ccJHuqZf.s:915    .text.lv_disp_get_inv_buf_size:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:922    .text.lv_disp_get_inv_buf_size:0000000000000000 lv_disp_get_inv_buf_size
  D:\Temp\ccJHuqZf.s:941    .text._lv_disp_pop_from_inv_buf:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:948    .text._lv_disp_pop_from_inv_buf:0000000000000000 _lv_disp_pop_from_inv_buf
  D:\Temp\ccJHuqZf.s:982    .text.lv_disp_is_double_buf:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:989    .text.lv_disp_is_double_buf:0000000000000000 lv_disp_is_double_buf
  D:\Temp\ccJHuqZf.s:1031   .text.lv_disp_is_true_double_buf:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:1038   .text.lv_disp_is_true_double_buf:0000000000000000 lv_disp_is_true_double_buf
  D:\Temp\ccJHuqZf.s:1091   .text.lv_disp_drv_register:0000000000000000 $t
  D:\Temp\ccJHuqZf.s:1098   .text.lv_disp_drv_register:0000000000000000 lv_disp_drv_register
  D:\Temp\ccJHuqZf.s:1319   .text.lv_disp_drv_register:00000000000000fc $d
  D:\Temp\ccJHuqZf.s:1328   .rodata:0000000000000000 $d
  D:\Temp\ccJHuqZf.s:1334   .bss.disp_def:0000000000000000 $d
  D:\Temp\ccJHuqZf.s:1338   .bss.disp_def:0000000000000000 disp_def
  D:\Temp\ccJHuqZf.s:1341   .rodata.lv_disp_drv_register.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
_lv_memset_00
lv_indev_get_next
_lv_ll_remove
lv_mem_free
ARM GAS  D:\Temp\ccJHuqZf.s 			page 36


_lv_ll_get_head
_lv_disp_ll
lv_obj_set_size
_lv_ll_get_next
_lv_ll_ins_head
_lv_memcpy
_lv_ll_init
lv_task_create
lv_debug_check_null
lv_obj_create
lv_obj_reset_style_list
lv_obj_set_click
lv_obj_invalidate
lv_task_ready
lv_debug_log_error
_lv_disp_refr_task
