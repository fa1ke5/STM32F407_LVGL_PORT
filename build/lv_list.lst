ARM GAS  D:\Temp\cc6WWuOg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_list.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_list_get_style,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	lv_list_get_style:
  26              	.LVL0:
  27              	.LFB510:
  28              		.file 1 "lvgl/src/lv_widgets/lv_list.c"
   1:lvgl/src/lv_widgets/lv_list.c **** /**
   2:lvgl/src/lv_widgets/lv_list.c ****  * @file lv_list.c
   3:lvgl/src/lv_widgets/lv_list.c ****  *
   4:lvgl/src/lv_widgets/lv_list.c ****  */
   5:lvgl/src/lv_widgets/lv_list.c **** 
   6:lvgl/src/lv_widgets/lv_list.c **** /*********************
   7:lvgl/src/lv_widgets/lv_list.c ****  *      INCLUDES
   8:lvgl/src/lv_widgets/lv_list.c ****  *********************/
   9:lvgl/src/lv_widgets/lv_list.c **** #include "lv_list.h"
  10:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_LIST != 0
  11:lvgl/src/lv_widgets/lv_list.c **** 
  12:lvgl/src/lv_widgets/lv_list.c **** #include "../lv_misc/lv_debug.h"
  13:lvgl/src/lv_widgets/lv_list.c **** #include "../lv_core/lv_group.h"
  14:lvgl/src/lv_widgets/lv_list.c **** #include "../lv_themes/lv_theme.h"
  15:lvgl/src/lv_widgets/lv_list.c **** #include "../lv_misc/lv_anim.h"
  16:lvgl/src/lv_widgets/lv_list.c **** #include "../lv_misc/lv_math.h"
  17:lvgl/src/lv_widgets/lv_list.c **** 
  18:lvgl/src/lv_widgets/lv_list.c **** /*********************
  19:lvgl/src/lv_widgets/lv_list.c ****  *      DEFINES
  20:lvgl/src/lv_widgets/lv_list.c ****  *********************/
  21:lvgl/src/lv_widgets/lv_list.c **** #define LV_OBJX_NAME "lv_list"
  22:lvgl/src/lv_widgets/lv_list.c **** 
  23:lvgl/src/lv_widgets/lv_list.c **** #define LV_LIST_LAYOUT_DEF LV_LAYOUT_COLUMN_MID
  24:lvgl/src/lv_widgets/lv_list.c **** 
  25:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_ANIMATION == 0
  26:lvgl/src/lv_widgets/lv_list.c ****     #undef LV_LIST_DEF_ANIM_TIME
  27:lvgl/src/lv_widgets/lv_list.c ****     #define LV_LIST_DEF_ANIM_TIME 0
  28:lvgl/src/lv_widgets/lv_list.c **** #endif
  29:lvgl/src/lv_widgets/lv_list.c **** 
  30:lvgl/src/lv_widgets/lv_list.c **** /**********************
ARM GAS  D:\Temp\cc6WWuOg.s 			page 2


  31:lvgl/src/lv_widgets/lv_list.c ****  *      TYPEDEFS
  32:lvgl/src/lv_widgets/lv_list.c ****  **********************/
  33:lvgl/src/lv_widgets/lv_list.c **** 
  34:lvgl/src/lv_widgets/lv_list.c **** /**********************
  35:lvgl/src/lv_widgets/lv_list.c ****  *  STATIC PROTOTYPES
  36:lvgl/src/lv_widgets/lv_list.c ****  **********************/
  37:lvgl/src/lv_widgets/lv_list.c **** static lv_res_t lv_list_signal(lv_obj_t * list, lv_signal_t sign, void * param);
  38:lvgl/src/lv_widgets/lv_list.c **** static lv_res_t lv_list_btn_signal(lv_obj_t * btn, lv_signal_t sign, void * param);
  39:lvgl/src/lv_widgets/lv_list.c **** static lv_style_list_t * lv_list_get_style(lv_obj_t * list, uint8_t part);
  40:lvgl/src/lv_widgets/lv_list.c **** static bool lv_list_is_list_btn(lv_obj_t * list_btn);
  41:lvgl/src/lv_widgets/lv_list.c **** static bool lv_list_is_list_img(lv_obj_t * list_btn);
  42:lvgl/src/lv_widgets/lv_list.c **** static bool lv_list_is_list_label(lv_obj_t * list_btn);
  43:lvgl/src/lv_widgets/lv_list.c **** 
  44:lvgl/src/lv_widgets/lv_list.c **** /**********************
  45:lvgl/src/lv_widgets/lv_list.c ****  *  STATIC VARIABLES
  46:lvgl/src/lv_widgets/lv_list.c ****  **********************/
  47:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_IMG
  48:lvgl/src/lv_widgets/lv_list.c ****     static lv_signal_cb_t img_signal;
  49:lvgl/src/lv_widgets/lv_list.c **** #endif
  50:lvgl/src/lv_widgets/lv_list.c **** static lv_signal_cb_t label_signal;
  51:lvgl/src/lv_widgets/lv_list.c **** static lv_signal_cb_t ancestor_page_signal;
  52:lvgl/src/lv_widgets/lv_list.c **** static lv_signal_cb_t ancestor_btn_signal;
  53:lvgl/src/lv_widgets/lv_list.c **** 
  54:lvgl/src/lv_widgets/lv_list.c **** /**********************
  55:lvgl/src/lv_widgets/lv_list.c ****  *      MACROS
  56:lvgl/src/lv_widgets/lv_list.c ****  **********************/
  57:lvgl/src/lv_widgets/lv_list.c **** 
  58:lvgl/src/lv_widgets/lv_list.c **** /**********************
  59:lvgl/src/lv_widgets/lv_list.c ****  *   GLOBAL FUNCTIONS
  60:lvgl/src/lv_widgets/lv_list.c ****  **********************/
  61:lvgl/src/lv_widgets/lv_list.c **** 
  62:lvgl/src/lv_widgets/lv_list.c **** /**
  63:lvgl/src/lv_widgets/lv_list.c ****  * Create a list objects
  64:lvgl/src/lv_widgets/lv_list.c ****  * @param par pointer to an object, it will be the parent of the new list
  65:lvgl/src/lv_widgets/lv_list.c ****  * @param copy pointer to a list object, if not NULL then the new object will be copied from it
  66:lvgl/src/lv_widgets/lv_list.c ****  * @return pointer to the created list
  67:lvgl/src/lv_widgets/lv_list.c ****  */
  68:lvgl/src/lv_widgets/lv_list.c **** lv_obj_t * lv_list_create(lv_obj_t * par, const lv_obj_t * copy)
  69:lvgl/src/lv_widgets/lv_list.c **** {
  70:lvgl/src/lv_widgets/lv_list.c ****     LV_LOG_TRACE("list create started");
  71:lvgl/src/lv_widgets/lv_list.c **** 
  72:lvgl/src/lv_widgets/lv_list.c ****     /*Create the ancestor basic object*/
  73:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * list = lv_page_create(par, copy);
  74:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_MEM(list);
  75:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) return NULL;
  76:lvgl/src/lv_widgets/lv_list.c **** 
  77:lvgl/src/lv_widgets/lv_list.c ****     if(ancestor_page_signal == NULL) ancestor_page_signal = lv_obj_get_signal_cb(list);
  78:lvgl/src/lv_widgets/lv_list.c **** 
  79:lvgl/src/lv_widgets/lv_list.c ****     lv_list_ext_t * ext = lv_obj_allocate_ext_attr(list, sizeof(lv_list_ext_t));
  80:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_MEM(ext);
  81:lvgl/src/lv_widgets/lv_list.c ****     if(ext == NULL) {
  82:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_del(list);
  83:lvgl/src/lv_widgets/lv_list.c ****         return NULL;
  84:lvgl/src/lv_widgets/lv_list.c ****     }
  85:lvgl/src/lv_widgets/lv_list.c **** 
  86:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
  87:lvgl/src/lv_widgets/lv_list.c ****     ext->last_sel_btn = NULL;
ARM GAS  D:\Temp\cc6WWuOg.s 			page 3


  88:lvgl/src/lv_widgets/lv_list.c **** #endif
  89:lvgl/src/lv_widgets/lv_list.c ****     ext->act_sel_btn = NULL;
  90:lvgl/src/lv_widgets/lv_list.c **** 
  91:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_set_signal_cb(list, lv_list_signal);
  92:lvgl/src/lv_widgets/lv_list.c **** 
  93:lvgl/src/lv_widgets/lv_list.c ****     /*Init the new list object*/
  94:lvgl/src/lv_widgets/lv_list.c ****     if(copy == NULL) {
  95:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_anim_time(list, LV_LIST_DEF_ANIM_TIME);
  96:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrollable_fit2(list, LV_FIT_PARENT, LV_FIT_TIGHT);
  97:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_set_size(list, 2 * LV_DPI, 3 * LV_DPI);
  98:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrl_layout(list, LV_LIST_LAYOUT_DEF);
  99:lvgl/src/lv_widgets/lv_list.c ****         lv_list_set_scrollbar_mode(list, LV_SCROLLBAR_MODE_DRAG);
 100:lvgl/src/lv_widgets/lv_list.c **** 
 101:lvgl/src/lv_widgets/lv_list.c ****         lv_theme_apply(list, LV_THEME_LIST);
 102:lvgl/src/lv_widgets/lv_list.c **** 
 103:lvgl/src/lv_widgets/lv_list.c ****     }
 104:lvgl/src/lv_widgets/lv_list.c ****     else {
 105:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_t * copy_btn = lv_list_get_next_btn(copy, NULL);
 106:lvgl/src/lv_widgets/lv_list.c ****         while(copy_btn) {
 107:lvgl/src/lv_widgets/lv_list.c ****             const void * img_src = NULL;
 108:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_IMG
 109:lvgl/src/lv_widgets/lv_list.c ****             lv_obj_t * copy_img = lv_list_get_btn_img(copy_btn);
 110:lvgl/src/lv_widgets/lv_list.c ****             if(copy_img) img_src = lv_img_get_src(copy_img);
 111:lvgl/src/lv_widgets/lv_list.c **** #endif
 112:lvgl/src/lv_widgets/lv_list.c ****             lv_list_add_btn(list, img_src, lv_list_get_btn_text(copy_btn));
 113:lvgl/src/lv_widgets/lv_list.c ****             copy_btn = lv_list_get_next_btn(copy, copy_btn);
 114:lvgl/src/lv_widgets/lv_list.c ****         }
 115:lvgl/src/lv_widgets/lv_list.c **** 
 116:lvgl/src/lv_widgets/lv_list.c ****         /*Refresh the style with new signal function*/
 117:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_refresh_style(list, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);
 118:lvgl/src/lv_widgets/lv_list.c ****     }
 119:lvgl/src/lv_widgets/lv_list.c **** 
 120:lvgl/src/lv_widgets/lv_list.c ****     LV_LOG_INFO("list created");
 121:lvgl/src/lv_widgets/lv_list.c **** 
 122:lvgl/src/lv_widgets/lv_list.c ****     return list;
 123:lvgl/src/lv_widgets/lv_list.c **** }
 124:lvgl/src/lv_widgets/lv_list.c **** 
 125:lvgl/src/lv_widgets/lv_list.c **** /**
 126:lvgl/src/lv_widgets/lv_list.c ****  * Delete all children of the scrl object, without deleting scrl child.
 127:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to an object
 128:lvgl/src/lv_widgets/lv_list.c ****  */
 129:lvgl/src/lv_widgets/lv_list.c **** void lv_list_clean(lv_obj_t * list)
 130:lvgl/src/lv_widgets/lv_list.c **** {
 131:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 132:lvgl/src/lv_widgets/lv_list.c **** 
 133:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * scrl = lv_page_get_scrollable(list);
 134:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_clean(scrl);
 135:lvgl/src/lv_widgets/lv_list.c **** }
 136:lvgl/src/lv_widgets/lv_list.c **** 
 137:lvgl/src/lv_widgets/lv_list.c **** /*======================
 138:lvgl/src/lv_widgets/lv_list.c ****  * Add/remove functions
 139:lvgl/src/lv_widgets/lv_list.c ****  *=====================*/
 140:lvgl/src/lv_widgets/lv_list.c **** /**
 141:lvgl/src/lv_widgets/lv_list.c ****  * Add a list element to the list
 142:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to list object
 143:lvgl/src/lv_widgets/lv_list.c ****  * @param img_fn file name of an image before the text (NULL if unused)
 144:lvgl/src/lv_widgets/lv_list.c ****  * @param txt text of the list element (NULL if unused)
ARM GAS  D:\Temp\cc6WWuOg.s 			page 4


 145:lvgl/src/lv_widgets/lv_list.c ****  * @return pointer to the new list element which can be customized (a button)
 146:lvgl/src/lv_widgets/lv_list.c ****  */
 147:lvgl/src/lv_widgets/lv_list.c **** lv_obj_t * lv_list_add_btn(lv_obj_t * list, const void * img_src, const char * txt)
 148:lvgl/src/lv_widgets/lv_list.c **** {
 149:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 150:lvgl/src/lv_widgets/lv_list.c **** 
 151:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * last_btn = lv_list_get_prev_btn(list, NULL);
 152:lvgl/src/lv_widgets/lv_list.c **** 
 153:lvgl/src/lv_widgets/lv_list.c ****     /*The coordinates may changed due to autofit so revert them at the end*/
 154:lvgl/src/lv_widgets/lv_list.c ****     lv_coord_t pos_x_ori = lv_obj_get_x(list);
 155:lvgl/src/lv_widgets/lv_list.c ****     lv_coord_t pos_y_ori = lv_obj_get_y(list);
 156:lvgl/src/lv_widgets/lv_list.c **** 
 157:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * scrl =  lv_page_get_scrollable(list);
 158:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_add_protect(scrl, LV_PROTECT_CHILD_CHG);
 159:lvgl/src/lv_widgets/lv_list.c **** 
 160:lvgl/src/lv_widgets/lv_list.c ****     /*Create a list element with the image an the text*/
 161:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * btn;
 162:lvgl/src/lv_widgets/lv_list.c ****     btn = lv_btn_create(list, NULL);
 163:lvgl/src/lv_widgets/lv_list.c **** 
 164:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_add_protect(btn, LV_PROTECT_CHILD_CHG);
 165:lvgl/src/lv_widgets/lv_list.c **** 
 166:lvgl/src/lv_widgets/lv_list.c ****     /*Save the original signal function because it will be required in `lv_list_btn_signal`*/
 167:lvgl/src/lv_widgets/lv_list.c ****     if(ancestor_btn_signal == NULL) ancestor_btn_signal = lv_obj_get_signal_cb(btn);
 168:lvgl/src/lv_widgets/lv_list.c **** 
 169:lvgl/src/lv_widgets/lv_list.c ****     /*Set the default styles*/
 170:lvgl/src/lv_widgets/lv_list.c ****     lv_theme_apply(btn, LV_THEME_LIST_BTN);
 171:lvgl/src/lv_widgets/lv_list.c **** 
 172:lvgl/src/lv_widgets/lv_list.c ****     lv_page_glue_obj(btn, true);
 173:lvgl/src/lv_widgets/lv_list.c ****     lv_btn_set_layout(btn, LV_LAYOUT_ROW_MID);
 174:lvgl/src/lv_widgets/lv_list.c **** 
 175:lvgl/src/lv_widgets/lv_list.c ****     lv_layout_t list_layout = lv_list_get_layout(list);
 176:lvgl/src/lv_widgets/lv_list.c ****     bool layout_ver = false;
 177:lvgl/src/lv_widgets/lv_list.c ****     if(list_layout == LV_LAYOUT_COLUMN_MID || list_layout == LV_LAYOUT_COLUMN_LEFT ||
 178:lvgl/src/lv_widgets/lv_list.c ****        list_layout == LV_LAYOUT_COLUMN_RIGHT) {
 179:lvgl/src/lv_widgets/lv_list.c ****         layout_ver = true;
 180:lvgl/src/lv_widgets/lv_list.c ****     }
 181:lvgl/src/lv_widgets/lv_list.c **** 
 182:lvgl/src/lv_widgets/lv_list.c ****     if(layout_ver) {
 183:lvgl/src/lv_widgets/lv_list.c ****         lv_btn_set_fit2(btn, LV_FIT_PARENT, LV_FIT_TIGHT);
 184:lvgl/src/lv_widgets/lv_list.c ****     }
 185:lvgl/src/lv_widgets/lv_list.c ****     else {
 186:lvgl/src/lv_widgets/lv_list.c ****         lv_coord_t w = last_btn ? lv_obj_get_width(last_btn) : (LV_DPI * 3) / 2;
 187:lvgl/src/lv_widgets/lv_list.c ****         lv_btn_set_fit2(btn, LV_FIT_NONE, LV_FIT_TIGHT);
 188:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_set_width(btn, w);
 189:lvgl/src/lv_widgets/lv_list.c ****     }
 190:lvgl/src/lv_widgets/lv_list.c **** 
 191:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_add_protect(btn, LV_PROTECT_PRESS_LOST);
 192:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_set_signal_cb(btn, lv_list_btn_signal);
 193:lvgl/src/lv_widgets/lv_list.c **** 
 194:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_IMG != 0
 195:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * img = NULL;
 196:lvgl/src/lv_widgets/lv_list.c ****     if(img_src) {
 197:lvgl/src/lv_widgets/lv_list.c ****         img = lv_img_create(btn, NULL);
 198:lvgl/src/lv_widgets/lv_list.c ****         lv_img_set_src(img, img_src);
 199:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_set_click(img, false);
 200:lvgl/src/lv_widgets/lv_list.c ****         if(img_signal == NULL) img_signal = lv_obj_get_signal_cb(img);
 201:lvgl/src/lv_widgets/lv_list.c ****     }
ARM GAS  D:\Temp\cc6WWuOg.s 			page 5


 202:lvgl/src/lv_widgets/lv_list.c **** #endif
 203:lvgl/src/lv_widgets/lv_list.c ****     if(txt != NULL) {
 204:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_t * label = lv_label_create(btn, NULL);
 205:lvgl/src/lv_widgets/lv_list.c ****         lv_label_set_text(label, txt);
 206:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_set_click(label, false);
 207:lvgl/src/lv_widgets/lv_list.c ****         lv_label_set_long_mode(label, LV_LABEL_LONG_SROLL_CIRC);
 208:lvgl/src/lv_widgets/lv_list.c ****         if(lv_obj_get_base_dir(btn) == LV_BIDI_DIR_RTL) {
 209:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t pad = lv_obj_get_style_pad_left(btn, LV_BTN_PART_MAIN);
 210:lvgl/src/lv_widgets/lv_list.c ****             lv_obj_set_width(label, label->coords.x2 - btn->coords.x1 - pad);
 211:lvgl/src/lv_widgets/lv_list.c ****         }
 212:lvgl/src/lv_widgets/lv_list.c ****         else {
 213:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t pad = lv_obj_get_style_pad_right(btn, LV_BTN_PART_MAIN);
 214:lvgl/src/lv_widgets/lv_list.c ****             lv_obj_set_width(label, btn->coords.x2 - label->coords.x1 - pad);
 215:lvgl/src/lv_widgets/lv_list.c ****         }
 216:lvgl/src/lv_widgets/lv_list.c ****         if(label_signal == NULL) label_signal = lv_obj_get_signal_cb(label);
 217:lvgl/src/lv_widgets/lv_list.c ****     }
 218:lvgl/src/lv_widgets/lv_list.c **** 
 219:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 220:lvgl/src/lv_widgets/lv_list.c ****     /* If this is the first item to be added to the list and the list is
 221:lvgl/src/lv_widgets/lv_list.c ****      * focused, select it */
 222:lvgl/src/lv_widgets/lv_list.c ****     {
 223:lvgl/src/lv_widgets/lv_list.c ****         lv_group_t * g = lv_obj_get_group(list);
 224:lvgl/src/lv_widgets/lv_list.c ****         if(lv_list_get_next_btn(list, NULL) == btn && lv_group_get_focused(g) == list) {
 225:lvgl/src/lv_widgets/lv_list.c ****             lv_list_focus_btn(list, btn);
 226:lvgl/src/lv_widgets/lv_list.c ****         }
 227:lvgl/src/lv_widgets/lv_list.c ****     }
 228:lvgl/src/lv_widgets/lv_list.c **** #endif
 229:lvgl/src/lv_widgets/lv_list.c **** 
 230:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_clear_protect(scrl, LV_PROTECT_CHILD_CHG);
 231:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_clear_protect(btn, LV_PROTECT_CHILD_CHG);
 232:lvgl/src/lv_widgets/lv_list.c ****     btn->signal_cb(btn, LV_SIGNAL_CHILD_CHG, NULL);
 233:lvgl/src/lv_widgets/lv_list.c **** 
 234:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_set_pos(list, pos_x_ori, pos_y_ori);
 235:lvgl/src/lv_widgets/lv_list.c **** 
 236:lvgl/src/lv_widgets/lv_list.c ****     return btn;
 237:lvgl/src/lv_widgets/lv_list.c **** }
 238:lvgl/src/lv_widgets/lv_list.c **** 
 239:lvgl/src/lv_widgets/lv_list.c **** /**
 240:lvgl/src/lv_widgets/lv_list.c ****  * Remove the index of the button in the list
 241:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to a list object
 242:lvgl/src/lv_widgets/lv_list.c ****  * @param index pointer to a the button's index in the list, index must be 0 <= index <
 243:lvgl/src/lv_widgets/lv_list.c ****  * lv_list_ext_t.size
 244:lvgl/src/lv_widgets/lv_list.c ****  * @return true: successfully deleted
 245:lvgl/src/lv_widgets/lv_list.c ****  */
 246:lvgl/src/lv_widgets/lv_list.c **** bool lv_list_remove(const lv_obj_t * list, uint16_t index)
 247:lvgl/src/lv_widgets/lv_list.c **** {
 248:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 249:lvgl/src/lv_widgets/lv_list.c **** 
 250:lvgl/src/lv_widgets/lv_list.c ****     lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 251:lvgl/src/lv_widgets/lv_list.c ****     uint16_t count = 0;
 252:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e   = lv_list_get_next_btn(list, NULL);
 253:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 254:lvgl/src/lv_widgets/lv_list.c ****         if(count == index) {
 255:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 256:lvgl/src/lv_widgets/lv_list.c ****             if(e == ext->last_sel_btn) ext->last_sel_btn = NULL;
 257:lvgl/src/lv_widgets/lv_list.c **** #endif
 258:lvgl/src/lv_widgets/lv_list.c ****             if(e == ext->act_sel_btn) ext->act_sel_btn = NULL;
ARM GAS  D:\Temp\cc6WWuOg.s 			page 6


 259:lvgl/src/lv_widgets/lv_list.c **** 
 260:lvgl/src/lv_widgets/lv_list.c ****             lv_obj_del(e);
 261:lvgl/src/lv_widgets/lv_list.c ****             return true;
 262:lvgl/src/lv_widgets/lv_list.c ****         }
 263:lvgl/src/lv_widgets/lv_list.c ****         e = lv_list_get_next_btn(list, e);
 264:lvgl/src/lv_widgets/lv_list.c ****         count++;
 265:lvgl/src/lv_widgets/lv_list.c ****     }
 266:lvgl/src/lv_widgets/lv_list.c ****     return false;
 267:lvgl/src/lv_widgets/lv_list.c **** }
 268:lvgl/src/lv_widgets/lv_list.c **** 
 269:lvgl/src/lv_widgets/lv_list.c **** /*=====================
 270:lvgl/src/lv_widgets/lv_list.c ****  * Setter functions
 271:lvgl/src/lv_widgets/lv_list.c ****  *====================*/
 272:lvgl/src/lv_widgets/lv_list.c **** 
 273:lvgl/src/lv_widgets/lv_list.c **** /**
 274:lvgl/src/lv_widgets/lv_list.c ****  * Make a button selected
 275:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to a list object
 276:lvgl/src/lv_widgets/lv_list.c ****  * @param btn pointer to a button to select
 277:lvgl/src/lv_widgets/lv_list.c ****  *            NULL to not select any buttons
 278:lvgl/src/lv_widgets/lv_list.c ****  */
 279:lvgl/src/lv_widgets/lv_list.c **** void lv_list_focus_btn(lv_obj_t * list, lv_obj_t * btn)
 280:lvgl/src/lv_widgets/lv_list.c **** {
 281:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 282:lvgl/src/lv_widgets/lv_list.c ****     if(btn) {
 283:lvgl/src/lv_widgets/lv_list.c ****         LV_ASSERT_OBJ(btn, "lv_btn");
 284:lvgl/src/lv_widgets/lv_list.c ****     }
 285:lvgl/src/lv_widgets/lv_list.c **** 
 286:lvgl/src/lv_widgets/lv_list.c ****     lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 287:lvgl/src/lv_widgets/lv_list.c **** 
 288:lvgl/src/lv_widgets/lv_list.c ****     /*Defocus the current button*/
 289:lvgl/src/lv_widgets/lv_list.c ****     if(ext->act_sel_btn) lv_obj_clear_state(ext->act_sel_btn, LV_STATE_FOCUSED);
 290:lvgl/src/lv_widgets/lv_list.c **** 
 291:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 292:lvgl/src/lv_widgets/lv_list.c ****     /*Don't forget which button was selected.
 293:lvgl/src/lv_widgets/lv_list.c ****      * It will be restored when the list is focused again.*/
 294:lvgl/src/lv_widgets/lv_list.c ****     if(btn) ext->last_sel_btn = btn;
 295:lvgl/src/lv_widgets/lv_list.c **** #endif
 296:lvgl/src/lv_widgets/lv_list.c **** 
 297:lvgl/src/lv_widgets/lv_list.c ****     /*Focus the new button*/
 298:lvgl/src/lv_widgets/lv_list.c ****     ext->act_sel_btn = btn;
 299:lvgl/src/lv_widgets/lv_list.c **** 
 300:lvgl/src/lv_widgets/lv_list.c ****     if(ext->act_sel_btn) {
 301:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_add_state(ext->act_sel_btn, LV_STATE_FOCUSED);
 302:lvgl/src/lv_widgets/lv_list.c ****         lv_page_focus(list, ext->act_sel_btn, LV_ANIM_ON);
 303:lvgl/src/lv_widgets/lv_list.c ****     }
 304:lvgl/src/lv_widgets/lv_list.c **** }
 305:lvgl/src/lv_widgets/lv_list.c **** 
 306:lvgl/src/lv_widgets/lv_list.c **** /**
 307:lvgl/src/lv_widgets/lv_list.c ****  * Set layout of a list
 308:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to a list object
 309:lvgl/src/lv_widgets/lv_list.c ****  * @param layout which layout should be used
 310:lvgl/src/lv_widgets/lv_list.c ****  */
 311:lvgl/src/lv_widgets/lv_list.c **** void lv_list_set_layout(lv_obj_t * list, lv_layout_t layout)
 312:lvgl/src/lv_widgets/lv_list.c **** {
 313:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 314:lvgl/src/lv_widgets/lv_list.c **** 
 315:lvgl/src/lv_widgets/lv_list.c ****     /* Update list layout if necessary */
ARM GAS  D:\Temp\cc6WWuOg.s 			page 7


 316:lvgl/src/lv_widgets/lv_list.c ****     if(layout == lv_list_get_layout(list)) return;
 317:lvgl/src/lv_widgets/lv_list.c **** 
 318:lvgl/src/lv_widgets/lv_list.c ****     /* Get the first button on the list */
 319:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * btn = lv_list_get_prev_btn(list, NULL);
 320:lvgl/src/lv_widgets/lv_list.c **** 
 321:lvgl/src/lv_widgets/lv_list.c ****     /* Visit all buttons on the list and update their layout  */
 322:lvgl/src/lv_widgets/lv_list.c ****     while(btn != NULL) {
 323:lvgl/src/lv_widgets/lv_list.c ****         /*If a column layout set the buttons' width to list width*/
 324:lvgl/src/lv_widgets/lv_list.c ****         if(layout == LV_LAYOUT_COLUMN_MID || layout == LV_LAYOUT_COLUMN_LEFT || layout == LV_LAYOUT
 325:lvgl/src/lv_widgets/lv_list.c ****             lv_btn_set_fit2(btn, LV_FIT_PARENT, LV_FIT_TIGHT);
 326:lvgl/src/lv_widgets/lv_list.c ****         }
 327:lvgl/src/lv_widgets/lv_list.c ****         /*If a row layout set the buttons' width according to the content*/
 328:lvgl/src/lv_widgets/lv_list.c ****         else if(layout == LV_LAYOUT_ROW_MID || layout == LV_LAYOUT_ROW_TOP || layout == LV_LAYOUT_R
 329:lvgl/src/lv_widgets/lv_list.c ****             lv_btn_set_fit(btn, LV_FIT_TIGHT);
 330:lvgl/src/lv_widgets/lv_list.c ****         }
 331:lvgl/src/lv_widgets/lv_list.c **** 
 332:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_list_get_prev_btn(list, btn);
 333:lvgl/src/lv_widgets/lv_list.c ****     }
 334:lvgl/src/lv_widgets/lv_list.c **** 
 335:lvgl/src/lv_widgets/lv_list.c ****     if(layout == LV_LAYOUT_COLUMN_MID || layout == LV_LAYOUT_COLUMN_LEFT || layout == LV_LAYOUT_COL
 336:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrollable_fit2(list, LV_FIT_PARENT, LV_FIT_TIGHT);
 337:lvgl/src/lv_widgets/lv_list.c ****     }
 338:lvgl/src/lv_widgets/lv_list.c ****     else if(layout == LV_LAYOUT_ROW_MID || layout == LV_LAYOUT_ROW_TOP || layout == LV_LAYOUT_ROW_B
 339:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrollable_fit2(list, LV_FIT_TIGHT, LV_FIT_TIGHT);
 340:lvgl/src/lv_widgets/lv_list.c ****         lv_cont_set_fit2(list, LV_FIT_NONE, LV_FIT_TIGHT);
 341:lvgl/src/lv_widgets/lv_list.c ****     }
 342:lvgl/src/lv_widgets/lv_list.c **** 
 343:lvgl/src/lv_widgets/lv_list.c ****     lv_page_set_scrl_layout(list, layout);
 344:lvgl/src/lv_widgets/lv_list.c **** }
 345:lvgl/src/lv_widgets/lv_list.c **** 
 346:lvgl/src/lv_widgets/lv_list.c **** /*=====================
 347:lvgl/src/lv_widgets/lv_list.c ****  * Getter functions
 348:lvgl/src/lv_widgets/lv_list.c ****  *====================*/
 349:lvgl/src/lv_widgets/lv_list.c **** 
 350:lvgl/src/lv_widgets/lv_list.c **** /**
 351:lvgl/src/lv_widgets/lv_list.c ****  * Get the text of a list element
 352:lvgl/src/lv_widgets/lv_list.c ****  * @param btn pointer to list element
 353:lvgl/src/lv_widgets/lv_list.c ****  * @return pointer to the text
 354:lvgl/src/lv_widgets/lv_list.c ****  */
 355:lvgl/src/lv_widgets/lv_list.c **** const char * lv_list_get_btn_text(const lv_obj_t * btn)
 356:lvgl/src/lv_widgets/lv_list.c **** {
 357:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 358:lvgl/src/lv_widgets/lv_list.c **** 
 359:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * label = lv_list_get_btn_label(btn);
 360:lvgl/src/lv_widgets/lv_list.c ****     if(label == NULL) return "";
 361:lvgl/src/lv_widgets/lv_list.c ****     return lv_label_get_text(label);
 362:lvgl/src/lv_widgets/lv_list.c **** }
 363:lvgl/src/lv_widgets/lv_list.c **** 
 364:lvgl/src/lv_widgets/lv_list.c **** /**
 365:lvgl/src/lv_widgets/lv_list.c ****  * Get the label object from a list element
 366:lvgl/src/lv_widgets/lv_list.c ****  * @param btn pointer to a list element (button)
 367:lvgl/src/lv_widgets/lv_list.c ****  * @return pointer to the label from the list element or NULL if not found
 368:lvgl/src/lv_widgets/lv_list.c ****  */
 369:lvgl/src/lv_widgets/lv_list.c **** lv_obj_t * lv_list_get_btn_label(const lv_obj_t * btn)
 370:lvgl/src/lv_widgets/lv_list.c **** {
 371:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 372:lvgl/src/lv_widgets/lv_list.c **** 
ARM GAS  D:\Temp\cc6WWuOg.s 			page 8


 373:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * label = lv_obj_get_child_back(btn, NULL);
 374:lvgl/src/lv_widgets/lv_list.c ****     if(label == NULL) return NULL;
 375:lvgl/src/lv_widgets/lv_list.c **** 
 376:lvgl/src/lv_widgets/lv_list.c ****     while(lv_list_is_list_label(label) == false) {
 377:lvgl/src/lv_widgets/lv_list.c ****         label = lv_obj_get_child_back(btn, label);
 378:lvgl/src/lv_widgets/lv_list.c ****         if(label == NULL) break;
 379:lvgl/src/lv_widgets/lv_list.c ****     }
 380:lvgl/src/lv_widgets/lv_list.c **** 
 381:lvgl/src/lv_widgets/lv_list.c ****     return label;
 382:lvgl/src/lv_widgets/lv_list.c **** }
 383:lvgl/src/lv_widgets/lv_list.c **** 
 384:lvgl/src/lv_widgets/lv_list.c **** /**
 385:lvgl/src/lv_widgets/lv_list.c ****  * Get the image object from a list element
 386:lvgl/src/lv_widgets/lv_list.c ****  * @param btn pointer to a list element (button)
 387:lvgl/src/lv_widgets/lv_list.c ****  * @return pointer to the image from the list element or NULL if not found
 388:lvgl/src/lv_widgets/lv_list.c ****  */
 389:lvgl/src/lv_widgets/lv_list.c **** lv_obj_t * lv_list_get_btn_img(const lv_obj_t * btn)
 390:lvgl/src/lv_widgets/lv_list.c **** {
 391:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 392:lvgl/src/lv_widgets/lv_list.c **** 
 393:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_IMG != 0
 394:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * img = lv_obj_get_child_back(btn, NULL);
 395:lvgl/src/lv_widgets/lv_list.c ****     if(img == NULL) return NULL;
 396:lvgl/src/lv_widgets/lv_list.c **** 
 397:lvgl/src/lv_widgets/lv_list.c ****     while(lv_list_is_list_img(img) == false) {
 398:lvgl/src/lv_widgets/lv_list.c ****         img = lv_obj_get_child_back(btn, img);
 399:lvgl/src/lv_widgets/lv_list.c ****         if(img == NULL) break;
 400:lvgl/src/lv_widgets/lv_list.c ****     }
 401:lvgl/src/lv_widgets/lv_list.c **** 
 402:lvgl/src/lv_widgets/lv_list.c ****     return img;
 403:lvgl/src/lv_widgets/lv_list.c **** #else
 404:lvgl/src/lv_widgets/lv_list.c ****     return NULL;
 405:lvgl/src/lv_widgets/lv_list.c **** #endif
 406:lvgl/src/lv_widgets/lv_list.c **** }
 407:lvgl/src/lv_widgets/lv_list.c **** 
 408:lvgl/src/lv_widgets/lv_list.c **** /**
 409:lvgl/src/lv_widgets/lv_list.c ****  * Get the previous button from list. (Starts from the bottom button)
 410:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to a list object
 411:lvgl/src/lv_widgets/lv_list.c ****  * @param prev_btn pointer to button. Search the previous before it.
 412:lvgl/src/lv_widgets/lv_list.c ****  * @return pointer to the previous button or NULL when no more buttons
 413:lvgl/src/lv_widgets/lv_list.c ****  */
 414:lvgl/src/lv_widgets/lv_list.c **** lv_obj_t * lv_list_get_prev_btn(const lv_obj_t * list, lv_obj_t * prev_btn)
 415:lvgl/src/lv_widgets/lv_list.c **** {
 416:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 417:lvgl/src/lv_widgets/lv_list.c **** 
 418:lvgl/src/lv_widgets/lv_list.c ****     /* Not a good practice but user can add/create objects to the lists manually.
 419:lvgl/src/lv_widgets/lv_list.c ****      * When getting the next button try to be sure that it is at least a button */
 420:lvgl/src/lv_widgets/lv_list.c **** 
 421:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * btn;
 422:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * scrl = lv_page_get_scrollable(list);
 423:lvgl/src/lv_widgets/lv_list.c **** 
 424:lvgl/src/lv_widgets/lv_list.c ****     btn = lv_obj_get_child(scrl, prev_btn);
 425:lvgl/src/lv_widgets/lv_list.c ****     if(btn == NULL) return NULL;
 426:lvgl/src/lv_widgets/lv_list.c **** 
 427:lvgl/src/lv_widgets/lv_list.c ****     while(lv_list_is_list_btn(btn) == false) {
 428:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_obj_get_child(scrl, btn);
 429:lvgl/src/lv_widgets/lv_list.c ****         if(btn == NULL) break;
ARM GAS  D:\Temp\cc6WWuOg.s 			page 9


 430:lvgl/src/lv_widgets/lv_list.c ****     }
 431:lvgl/src/lv_widgets/lv_list.c **** 
 432:lvgl/src/lv_widgets/lv_list.c ****     return btn;
 433:lvgl/src/lv_widgets/lv_list.c **** }
 434:lvgl/src/lv_widgets/lv_list.c **** 
 435:lvgl/src/lv_widgets/lv_list.c **** /**
 436:lvgl/src/lv_widgets/lv_list.c ****  * Get the next button from list. (Starts from the top button)
 437:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to a list object
 438:lvgl/src/lv_widgets/lv_list.c ****  * @param prev_btn pointer to button. Search the next after it.
 439:lvgl/src/lv_widgets/lv_list.c ****  * @return pointer to the next button or NULL when no more buttons
 440:lvgl/src/lv_widgets/lv_list.c ****  */
 441:lvgl/src/lv_widgets/lv_list.c **** lv_obj_t * lv_list_get_next_btn(const lv_obj_t * list, lv_obj_t * prev_btn)
 442:lvgl/src/lv_widgets/lv_list.c **** {
 443:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 444:lvgl/src/lv_widgets/lv_list.c **** 
 445:lvgl/src/lv_widgets/lv_list.c ****     /* Not a good practice but user can add/create objects to the lists manually.
 446:lvgl/src/lv_widgets/lv_list.c ****      * When getting the next button try to be sure that it is at least a button */
 447:lvgl/src/lv_widgets/lv_list.c **** 
 448:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * btn;
 449:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * scrl = lv_page_get_scrollable(list);
 450:lvgl/src/lv_widgets/lv_list.c **** 
 451:lvgl/src/lv_widgets/lv_list.c ****     btn = lv_obj_get_child_back(scrl, prev_btn);
 452:lvgl/src/lv_widgets/lv_list.c ****     if(btn == NULL) return NULL;
 453:lvgl/src/lv_widgets/lv_list.c **** 
 454:lvgl/src/lv_widgets/lv_list.c ****     while(lv_list_is_list_btn(btn) == false) {
 455:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_obj_get_child_back(scrl, btn);
 456:lvgl/src/lv_widgets/lv_list.c ****         if(btn == NULL) break;
 457:lvgl/src/lv_widgets/lv_list.c ****     }
 458:lvgl/src/lv_widgets/lv_list.c **** 
 459:lvgl/src/lv_widgets/lv_list.c ****     return btn;
 460:lvgl/src/lv_widgets/lv_list.c **** }
 461:lvgl/src/lv_widgets/lv_list.c **** 
 462:lvgl/src/lv_widgets/lv_list.c **** /**
 463:lvgl/src/lv_widgets/lv_list.c ****  * Get the index of the button in the list
 464:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to a list object. If NULL, assumes btn is part of a list.
 465:lvgl/src/lv_widgets/lv_list.c ****  * @param btn pointer to a list element (button)
 466:lvgl/src/lv_widgets/lv_list.c ****  * @return the index of the button in the list, or -1 of the button not in this list
 467:lvgl/src/lv_widgets/lv_list.c ****  */
 468:lvgl/src/lv_widgets/lv_list.c **** int32_t lv_list_get_btn_index(const lv_obj_t * list, const lv_obj_t * btn)
 469:lvgl/src/lv_widgets/lv_list.c **** {
 470:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 471:lvgl/src/lv_widgets/lv_list.c **** 
 472:lvgl/src/lv_widgets/lv_list.c ****     int index = 0;
 473:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) {
 474:lvgl/src/lv_widgets/lv_list.c ****         /* no list provided, assuming btn is part of a list */
 475:lvgl/src/lv_widgets/lv_list.c ****         list = lv_obj_get_parent(lv_obj_get_parent(btn));
 476:lvgl/src/lv_widgets/lv_list.c ****     }
 477:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 478:lvgl/src/lv_widgets/lv_list.c **** 
 479:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e = lv_list_get_next_btn(list, NULL);
 480:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 481:lvgl/src/lv_widgets/lv_list.c ****         if(e == btn) {
 482:lvgl/src/lv_widgets/lv_list.c ****             return index;
 483:lvgl/src/lv_widgets/lv_list.c ****         }
 484:lvgl/src/lv_widgets/lv_list.c ****         index++;
 485:lvgl/src/lv_widgets/lv_list.c ****         e = lv_list_get_next_btn(list, e);
 486:lvgl/src/lv_widgets/lv_list.c ****     }
ARM GAS  D:\Temp\cc6WWuOg.s 			page 10


 487:lvgl/src/lv_widgets/lv_list.c ****     return -1;
 488:lvgl/src/lv_widgets/lv_list.c **** }
 489:lvgl/src/lv_widgets/lv_list.c **** 
 490:lvgl/src/lv_widgets/lv_list.c **** /**
 491:lvgl/src/lv_widgets/lv_list.c ****  * Get the number of buttons in the list
 492:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to a list object
 493:lvgl/src/lv_widgets/lv_list.c ****  * @return the number of buttons in the list
 494:lvgl/src/lv_widgets/lv_list.c ****  */
 495:lvgl/src/lv_widgets/lv_list.c **** uint16_t lv_list_get_size(const lv_obj_t * list)
 496:lvgl/src/lv_widgets/lv_list.c **** {
 497:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 498:lvgl/src/lv_widgets/lv_list.c **** 
 499:lvgl/src/lv_widgets/lv_list.c ****     uint16_t size = 0;
 500:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * btn = lv_list_get_next_btn(list, NULL);
 501:lvgl/src/lv_widgets/lv_list.c ****     while(btn) {
 502:lvgl/src/lv_widgets/lv_list.c ****         size++;
 503:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_list_get_next_btn(list, btn);
 504:lvgl/src/lv_widgets/lv_list.c ****     }
 505:lvgl/src/lv_widgets/lv_list.c ****     return size;
 506:lvgl/src/lv_widgets/lv_list.c **** }
 507:lvgl/src/lv_widgets/lv_list.c **** 
 508:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 509:lvgl/src/lv_widgets/lv_list.c **** /**
 510:lvgl/src/lv_widgets/lv_list.c ****  * Get the currently selected button
 511:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to a list object
 512:lvgl/src/lv_widgets/lv_list.c ****  * @return pointer to the selected button
 513:lvgl/src/lv_widgets/lv_list.c ****  */
 514:lvgl/src/lv_widgets/lv_list.c **** lv_obj_t * lv_list_get_btn_selected(const lv_obj_t * list)
 515:lvgl/src/lv_widgets/lv_list.c **** {
 516:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 517:lvgl/src/lv_widgets/lv_list.c **** 
 518:lvgl/src/lv_widgets/lv_list.c ****     lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 519:lvgl/src/lv_widgets/lv_list.c ****     return ext->act_sel_btn;
 520:lvgl/src/lv_widgets/lv_list.c **** }
 521:lvgl/src/lv_widgets/lv_list.c **** #endif
 522:lvgl/src/lv_widgets/lv_list.c **** 
 523:lvgl/src/lv_widgets/lv_list.c **** /**
 524:lvgl/src/lv_widgets/lv_list.c ****  * Get layout of a list
 525:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to a list object
 526:lvgl/src/lv_widgets/lv_list.c ****  * @return layout of the list object
 527:lvgl/src/lv_widgets/lv_list.c ****  */
 528:lvgl/src/lv_widgets/lv_list.c **** lv_layout_t lv_list_get_layout(lv_obj_t * list)
 529:lvgl/src/lv_widgets/lv_list.c **** {
 530:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 531:lvgl/src/lv_widgets/lv_list.c **** 
 532:lvgl/src/lv_widgets/lv_list.c ****     return lv_page_get_scrl_layout(list);
 533:lvgl/src/lv_widgets/lv_list.c **** }
 534:lvgl/src/lv_widgets/lv_list.c **** 
 535:lvgl/src/lv_widgets/lv_list.c **** /*=====================
 536:lvgl/src/lv_widgets/lv_list.c ****  * Other functions
 537:lvgl/src/lv_widgets/lv_list.c ****  *====================*/
 538:lvgl/src/lv_widgets/lv_list.c **** 
 539:lvgl/src/lv_widgets/lv_list.c **** /**
 540:lvgl/src/lv_widgets/lv_list.c ****  * Move the list elements up by one
 541:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer a to list object
 542:lvgl/src/lv_widgets/lv_list.c ****  */
 543:lvgl/src/lv_widgets/lv_list.c **** void lv_list_up(const lv_obj_t * list)
ARM GAS  D:\Temp\cc6WWuOg.s 			page 11


 544:lvgl/src/lv_widgets/lv_list.c **** {
 545:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 546:lvgl/src/lv_widgets/lv_list.c **** 
 547:lvgl/src/lv_widgets/lv_list.c ****     /*Search the first list element which 'y' coordinate is below the parent
 548:lvgl/src/lv_widgets/lv_list.c ****      * and position the list to show this element on the bottom*/
 549:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * scrl = lv_page_get_scrollable(list);
 550:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e;
 551:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e_prev = NULL;
 552:lvgl/src/lv_widgets/lv_list.c **** 
 553:lvgl/src/lv_widgets/lv_list.c ****     e                 = lv_list_get_prev_btn(list, NULL);
 554:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 555:lvgl/src/lv_widgets/lv_list.c ****         if(e->coords.y2 <= list->coords.y2) {
 556:lvgl/src/lv_widgets/lv_list.c ****             if(e_prev != NULL) {
 557:lvgl/src/lv_widgets/lv_list.c ****                 lv_coord_t new_y = lv_obj_get_height(list) - (lv_obj_get_y(e_prev) + lv_obj_get_hei
 558:lvgl/src/lv_widgets/lv_list.c ****                 if(lv_list_get_anim_time(list) == 0) {
 559:lvgl/src/lv_widgets/lv_list.c ****                     lv_obj_set_y(scrl, new_y);
 560:lvgl/src/lv_widgets/lv_list.c ****                 }
 561:lvgl/src/lv_widgets/lv_list.c ****                 else {
 562:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_ANIMATION
 563:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_t a;
 564:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_init(&a);
 565:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_set_var(&a, scrl);
 566:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)lv_obj_set_y);
 567:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_set_values(&a, lv_obj_get_y(scrl), new_y);
 568:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_set_time(&a, LV_LIST_DEF_ANIM_TIME);
 569:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_start(&a);
 570:lvgl/src/lv_widgets/lv_list.c **** #endif
 571:lvgl/src/lv_widgets/lv_list.c ****                 }
 572:lvgl/src/lv_widgets/lv_list.c ****             }
 573:lvgl/src/lv_widgets/lv_list.c ****             break;
 574:lvgl/src/lv_widgets/lv_list.c ****         }
 575:lvgl/src/lv_widgets/lv_list.c ****         e_prev = e;
 576:lvgl/src/lv_widgets/lv_list.c ****         e      = lv_list_get_prev_btn(list, e);
 577:lvgl/src/lv_widgets/lv_list.c ****     }
 578:lvgl/src/lv_widgets/lv_list.c **** }
 579:lvgl/src/lv_widgets/lv_list.c **** 
 580:lvgl/src/lv_widgets/lv_list.c **** /**
 581:lvgl/src/lv_widgets/lv_list.c ****  * Move the list elements down by one
 582:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to a list object
 583:lvgl/src/lv_widgets/lv_list.c ****  */
 584:lvgl/src/lv_widgets/lv_list.c **** void lv_list_down(const lv_obj_t * list)
 585:lvgl/src/lv_widgets/lv_list.c **** {
 586:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 587:lvgl/src/lv_widgets/lv_list.c **** 
 588:lvgl/src/lv_widgets/lv_list.c ****     /*Search the first list element which 'y' coordinate is above the parent
 589:lvgl/src/lv_widgets/lv_list.c ****      * and position the list to show this element on the top*/
 590:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * scrl = lv_page_get_scrollable(list);
 591:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e;
 592:lvgl/src/lv_widgets/lv_list.c ****     e = lv_list_get_prev_btn(list, NULL);
 593:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 594:lvgl/src/lv_widgets/lv_list.c ****         if(e->coords.y1 < list->coords.y1) {
 595:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t new_y = -lv_obj_get_y(e);
 596:lvgl/src/lv_widgets/lv_list.c ****             if(lv_list_get_anim_time(list) == 0) {
 597:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_set_y(scrl, new_y);
 598:lvgl/src/lv_widgets/lv_list.c ****             }
 599:lvgl/src/lv_widgets/lv_list.c ****             else {
 600:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_ANIMATION
ARM GAS  D:\Temp\cc6WWuOg.s 			page 12


 601:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_t a;
 602:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_init(&a);
 603:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_set_var(&a, scrl);
 604:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)lv_obj_set_y);
 605:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_set_values(&a, lv_obj_get_y(scrl), new_y);
 606:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_set_time(&a, LV_LIST_DEF_ANIM_TIME);
 607:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_start(&a);
 608:lvgl/src/lv_widgets/lv_list.c **** #endif
 609:lvgl/src/lv_widgets/lv_list.c ****             }
 610:lvgl/src/lv_widgets/lv_list.c ****             break;
 611:lvgl/src/lv_widgets/lv_list.c ****         }
 612:lvgl/src/lv_widgets/lv_list.c ****         e = lv_list_get_prev_btn(list, e);
 613:lvgl/src/lv_widgets/lv_list.c ****     }
 614:lvgl/src/lv_widgets/lv_list.c **** }
 615:lvgl/src/lv_widgets/lv_list.c **** 
 616:lvgl/src/lv_widgets/lv_list.c **** /**
 617:lvgl/src/lv_widgets/lv_list.c ****  * Focus on a list button. It ensures that the button will be visible on the list.
 618:lvgl/src/lv_widgets/lv_list.c ****  * @param btn pointer to a list button to focus
 619:lvgl/src/lv_widgets/lv_list.c ****  * @param anim_en LV_ANIM_ON: scroll with animation, LV_ANOM_OFF: without animation
 620:lvgl/src/lv_widgets/lv_list.c ****  */
 621:lvgl/src/lv_widgets/lv_list.c **** void lv_list_focus(const lv_obj_t * btn, lv_anim_enable_t anim)
 622:lvgl/src/lv_widgets/lv_list.c **** {
 623:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "");
 624:lvgl/src/lv_widgets/lv_list.c **** 
 625:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_ANIMATION == 0
 626:lvgl/src/lv_widgets/lv_list.c ****     anim = false;
 627:lvgl/src/lv_widgets/lv_list.c **** #endif
 628:lvgl/src/lv_widgets/lv_list.c **** 
 629:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * list = lv_obj_get_parent(lv_obj_get_parent(btn));
 630:lvgl/src/lv_widgets/lv_list.c **** 
 631:lvgl/src/lv_widgets/lv_list.c ****     lv_page_focus(list, btn, anim == LV_ANIM_OFF ? 0 : lv_list_get_anim_time(list));
 632:lvgl/src/lv_widgets/lv_list.c **** }
 633:lvgl/src/lv_widgets/lv_list.c **** 
 634:lvgl/src/lv_widgets/lv_list.c **** /**********************
 635:lvgl/src/lv_widgets/lv_list.c ****  *   STATIC FUNCTIONS
 636:lvgl/src/lv_widgets/lv_list.c ****  **********************/
 637:lvgl/src/lv_widgets/lv_list.c **** 
 638:lvgl/src/lv_widgets/lv_list.c **** /**
 639:lvgl/src/lv_widgets/lv_list.c ****  * Signal function of the list
 640:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer to a list object
 641:lvgl/src/lv_widgets/lv_list.c ****  * @param sign a signal type from lv_signal_t enum
 642:lvgl/src/lv_widgets/lv_list.c ****  * @param param pointer to a signal specific variable
 643:lvgl/src/lv_widgets/lv_list.c ****  * @return LV_RES_OK: the object is not deleted in the function; LV_RES_INV: the object is deleted
 644:lvgl/src/lv_widgets/lv_list.c ****  */
 645:lvgl/src/lv_widgets/lv_list.c **** static lv_res_t lv_list_signal(lv_obj_t * list, lv_signal_t sign, void * param)
 646:lvgl/src/lv_widgets/lv_list.c **** {
 647:lvgl/src/lv_widgets/lv_list.c ****     lv_res_t res;
 648:lvgl/src/lv_widgets/lv_list.c ****     if(sign == LV_SIGNAL_GET_STYLE) {
 649:lvgl/src/lv_widgets/lv_list.c ****         lv_get_style_info_t * info = param;
 650:lvgl/src/lv_widgets/lv_list.c ****         info->result = lv_list_get_style(list, info->part);
 651:lvgl/src/lv_widgets/lv_list.c ****         if(info->result != NULL) return LV_RES_OK;
 652:lvgl/src/lv_widgets/lv_list.c ****         else return ancestor_page_signal(list, sign, param);
 653:lvgl/src/lv_widgets/lv_list.c ****     }
 654:lvgl/src/lv_widgets/lv_list.c **** 
 655:lvgl/src/lv_widgets/lv_list.c ****     /* Include the ancient signal function */
 656:lvgl/src/lv_widgets/lv_list.c ****     res = ancestor_page_signal(list, sign, param);
 657:lvgl/src/lv_widgets/lv_list.c ****     if(res != LV_RES_OK) return res;
ARM GAS  D:\Temp\cc6WWuOg.s 			page 13


 658:lvgl/src/lv_widgets/lv_list.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 659:lvgl/src/lv_widgets/lv_list.c **** 
 660:lvgl/src/lv_widgets/lv_list.c ****     if(sign == LV_SIGNAL_RELEASED || sign == LV_SIGNAL_PRESSED || sign == LV_SIGNAL_PRESSING ||
 661:lvgl/src/lv_widgets/lv_list.c ****        sign == LV_SIGNAL_LONG_PRESS || sign == LV_SIGNAL_LONG_PRESS_REP) {
 662:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 663:lvgl/src/lv_widgets/lv_list.c ****         /*If pressed/released etc by a KEYPAD or ENCODER delegate signal and events to the button*/
 664:lvgl/src/lv_widgets/lv_list.c ****         lv_indev_t * indev         = lv_indev_get_act();
 665:lvgl/src/lv_widgets/lv_list.c ****         lv_indev_type_t indev_type = lv_indev_get_type(indev);
 666:lvgl/src/lv_widgets/lv_list.c ****         if(indev_type == LV_INDEV_TYPE_KEYPAD ||
 667:lvgl/src/lv_widgets/lv_list.c ****            (indev_type == LV_INDEV_TYPE_ENCODER && lv_group_get_editing(lv_obj_get_group(list)))) {
 668:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 669:lvgl/src/lv_widgets/lv_list.c **** 
 670:lvgl/src/lv_widgets/lv_list.c ****             /*The page receives the key presses so the events should be propagated to the selected
 671:lvgl/src/lv_widgets/lv_list.c ****              * button*/
 672:lvgl/src/lv_widgets/lv_list.c ****             if(ext->act_sel_btn) {
 673:lvgl/src/lv_widgets/lv_list.c ****                 res = lv_signal_send(ext->act_sel_btn, sign, param);
 674:lvgl/src/lv_widgets/lv_list.c ****                 if(res != LV_RES_OK) return res;
 675:lvgl/src/lv_widgets/lv_list.c ****                 if(sign == LV_SIGNAL_PRESSED) {
 676:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_PRESSED, NULL);
 677:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 678:lvgl/src/lv_widgets/lv_list.c ****                 }
 679:lvgl/src/lv_widgets/lv_list.c ****                 else if(sign == LV_SIGNAL_PRESSING) {
 680:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_PRESSING, NULL);
 681:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 682:lvgl/src/lv_widgets/lv_list.c ****                 }
 683:lvgl/src/lv_widgets/lv_list.c ****                 else if(sign == LV_SIGNAL_LONG_PRESS) {
 684:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_LONG_PRESSED, NULL);
 685:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 686:lvgl/src/lv_widgets/lv_list.c ****                 }
 687:lvgl/src/lv_widgets/lv_list.c ****                 else if(sign == LV_SIGNAL_LONG_PRESS_REP) {
 688:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 689:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 690:lvgl/src/lv_widgets/lv_list.c ****                 }
 691:lvgl/src/lv_widgets/lv_list.c ****                 else if(sign == LV_SIGNAL_RELEASED) {
 692:lvgl/src/lv_widgets/lv_list.c ****                     if(indev->proc.long_pr_sent == 0) {
 693:lvgl/src/lv_widgets/lv_list.c ****                         res = lv_event_send(ext->act_sel_btn, LV_EVENT_SHORT_CLICKED, NULL);
 694:lvgl/src/lv_widgets/lv_list.c ****                         if(res != LV_RES_OK) return res;
 695:lvgl/src/lv_widgets/lv_list.c ****                     }
 696:lvgl/src/lv_widgets/lv_list.c ****                     if(lv_indev_is_dragging(indev) == false) {
 697:lvgl/src/lv_widgets/lv_list.c ****                         res = lv_event_send(ext->act_sel_btn, LV_EVENT_CLICKED, NULL);
 698:lvgl/src/lv_widgets/lv_list.c ****                         if(res != LV_RES_OK) return res;
 699:lvgl/src/lv_widgets/lv_list.c ****                     }
 700:lvgl/src/lv_widgets/lv_list.c **** 
 701:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_RELEASED, NULL);
 702:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 703:lvgl/src/lv_widgets/lv_list.c ****                 }
 704:lvgl/src/lv_widgets/lv_list.c ****             }
 705:lvgl/src/lv_widgets/lv_list.c ****         }
 706:lvgl/src/lv_widgets/lv_list.c **** #endif
 707:lvgl/src/lv_widgets/lv_list.c ****     }
 708:lvgl/src/lv_widgets/lv_list.c ****     else if(sign == LV_SIGNAL_FOCUS) {
 709:lvgl/src/lv_widgets/lv_list.c **** 
 710:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 711:lvgl/src/lv_widgets/lv_list.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 712:lvgl/src/lv_widgets/lv_list.c ****         /*With ENCODER focus the button only in edit mode*/
 713:lvgl/src/lv_widgets/lv_list.c ****         lv_group_t * g = lv_obj_get_group(list);
 714:lvgl/src/lv_widgets/lv_list.c ****         if((indev_type == LV_INDEV_TYPE_KEYPAD) ||
ARM GAS  D:\Temp\cc6WWuOg.s 			page 14


 715:lvgl/src/lv_widgets/lv_list.c ****            (indev_type == LV_INDEV_TYPE_ENCODER && lv_group_get_editing(g))) {
 716:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 717:lvgl/src/lv_widgets/lv_list.c ****             /* Select the last used button, or use the first no last button */
 718:lvgl/src/lv_widgets/lv_list.c ****             if(ext->last_sel_btn) lv_list_focus_btn(list, ext->last_sel_btn);
 719:lvgl/src/lv_widgets/lv_list.c ****             else lv_list_focus_btn(list, lv_list_get_next_btn(list, NULL));
 720:lvgl/src/lv_widgets/lv_list.c ****         }
 721:lvgl/src/lv_widgets/lv_list.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER && lv_group_get_editing(g) == false) {
 722:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 723:lvgl/src/lv_widgets/lv_list.c ****             if(ext->act_sel_btn) lv_obj_clear_state(ext->act_sel_btn, LV_STATE_PRESSED);
 724:lvgl/src/lv_widgets/lv_list.c ****             if(ext->last_sel_btn) lv_obj_clear_state(ext->last_sel_btn, LV_STATE_PRESSED);
 725:lvgl/src/lv_widgets/lv_list.c ****         }
 726:lvgl/src/lv_widgets/lv_list.c **** #endif
 727:lvgl/src/lv_widgets/lv_list.c ****     }
 728:lvgl/src/lv_widgets/lv_list.c ****     else if(sign == LV_SIGNAL_DEFOCUS) {
 729:lvgl/src/lv_widgets/lv_list.c **** 
 730:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 731:lvgl/src/lv_widgets/lv_list.c ****         /*De-select the selected btn*/
 732:lvgl/src/lv_widgets/lv_list.c ****         lv_list_focus_btn(list, NULL);
 733:lvgl/src/lv_widgets/lv_list.c ****         lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 734:lvgl/src/lv_widgets/lv_list.c ****         ext->act_sel_btn   = NULL;
 735:lvgl/src/lv_widgets/lv_list.c **** #endif
 736:lvgl/src/lv_widgets/lv_list.c ****     }
 737:lvgl/src/lv_widgets/lv_list.c ****     else if(sign == LV_SIGNAL_GET_EDITABLE) {
 738:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 739:lvgl/src/lv_widgets/lv_list.c ****         bool * editable = (bool *)param;
 740:lvgl/src/lv_widgets/lv_list.c ****         *editable       = true;
 741:lvgl/src/lv_widgets/lv_list.c **** #endif
 742:lvgl/src/lv_widgets/lv_list.c ****     }
 743:lvgl/src/lv_widgets/lv_list.c ****     else if(sign == LV_SIGNAL_CONTROL) {
 744:lvgl/src/lv_widgets/lv_list.c **** 
 745:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 746:lvgl/src/lv_widgets/lv_list.c ****         char c = *((char *)param);
 747:lvgl/src/lv_widgets/lv_list.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_DOWN) {
 748:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 749:lvgl/src/lv_widgets/lv_list.c ****             /*If there is a valid selected button the make the previous selected*/
 750:lvgl/src/lv_widgets/lv_list.c ****             if(ext->act_sel_btn) {
 751:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_t * btn_prev = lv_list_get_next_btn(list, ext->act_sel_btn);
 752:lvgl/src/lv_widgets/lv_list.c ****                 if(btn_prev) lv_list_focus_btn(list, btn_prev);
 753:lvgl/src/lv_widgets/lv_list.c ****             }
 754:lvgl/src/lv_widgets/lv_list.c ****             /*If there is no selected button the make the first selected*/
 755:lvgl/src/lv_widgets/lv_list.c ****             else {
 756:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_t * btn = lv_list_get_next_btn(list, NULL);
 757:lvgl/src/lv_widgets/lv_list.c ****                 if(btn)
 758:lvgl/src/lv_widgets/lv_list.c ****                     lv_list_focus_btn(list,
 759:lvgl/src/lv_widgets/lv_list.c ****                                       btn); /*If there are no buttons on the list then there is no 
 760:lvgl/src/lv_widgets/lv_list.c ****             }
 761:lvgl/src/lv_widgets/lv_list.c ****         }
 762:lvgl/src/lv_widgets/lv_list.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_UP) {
 763:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 764:lvgl/src/lv_widgets/lv_list.c ****             /*If there is a valid selected button the make the next selected*/
 765:lvgl/src/lv_widgets/lv_list.c ****             if(ext->act_sel_btn != NULL) {
 766:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_t * btn_next = lv_list_get_prev_btn(list, ext->act_sel_btn);
 767:lvgl/src/lv_widgets/lv_list.c ****                 if(btn_next) lv_list_focus_btn(list, btn_next);
 768:lvgl/src/lv_widgets/lv_list.c ****             }
 769:lvgl/src/lv_widgets/lv_list.c ****             /*If there is no selected button the make the first selected*/
 770:lvgl/src/lv_widgets/lv_list.c ****             else {
 771:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_t * btn = lv_list_get_next_btn(list, NULL);
ARM GAS  D:\Temp\cc6WWuOg.s 			page 15


 772:lvgl/src/lv_widgets/lv_list.c ****                 if(btn) lv_list_focus_btn(list, btn);
 773:lvgl/src/lv_widgets/lv_list.c ****             }
 774:lvgl/src/lv_widgets/lv_list.c ****         }
 775:lvgl/src/lv_widgets/lv_list.c ****         else if(c == LV_KEY_ESC) {
 776:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 777:lvgl/src/lv_widgets/lv_list.c ****             /* Handle ESC/Cancel event */
 778:lvgl/src/lv_widgets/lv_list.c ****             res = lv_event_send(ext->act_sel_btn, LV_EVENT_CANCEL, NULL);
 779:lvgl/src/lv_widgets/lv_list.c ****         }
 780:lvgl/src/lv_widgets/lv_list.c **** #endif
 781:lvgl/src/lv_widgets/lv_list.c ****     }
 782:lvgl/src/lv_widgets/lv_list.c ****     return res;
 783:lvgl/src/lv_widgets/lv_list.c **** }
 784:lvgl/src/lv_widgets/lv_list.c **** 
 785:lvgl/src/lv_widgets/lv_list.c **** /**
 786:lvgl/src/lv_widgets/lv_list.c ****  * Signal function of the list buttons
 787:lvgl/src/lv_widgets/lv_list.c ****  * @param btn pointer to a button on the list
 788:lvgl/src/lv_widgets/lv_list.c ****  * @param sign a signal type from lv_signal_t enum
 789:lvgl/src/lv_widgets/lv_list.c ****  * @param param pointer to a signal specific variable
 790:lvgl/src/lv_widgets/lv_list.c ****  * @return LV_RES_OK: the object is not deleted in the function; LV_RES_INV: the object is deleted
 791:lvgl/src/lv_widgets/lv_list.c ****  */
 792:lvgl/src/lv_widgets/lv_list.c **** static lv_res_t lv_list_btn_signal(lv_obj_t * btn, lv_signal_t sign, void * param)
 793:lvgl/src/lv_widgets/lv_list.c **** {
 794:lvgl/src/lv_widgets/lv_list.c ****     lv_res_t res;
 795:lvgl/src/lv_widgets/lv_list.c **** 
 796:lvgl/src/lv_widgets/lv_list.c ****     /* Include the ancient signal function */
 797:lvgl/src/lv_widgets/lv_list.c ****     res = ancestor_btn_signal(btn, sign, param);
 798:lvgl/src/lv_widgets/lv_list.c ****     if(res != LV_RES_OK) return res;
 799:lvgl/src/lv_widgets/lv_list.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, "");
 800:lvgl/src/lv_widgets/lv_list.c **** 
 801:lvgl/src/lv_widgets/lv_list.c ****     if((sign == LV_SIGNAL_COORD_CHG && (lv_obj_get_width(btn) != lv_area_get_width(param) ||
 802:lvgl/src/lv_widgets/lv_list.c ****                                         lv_obj_get_height(btn) != lv_area_get_height(param))) ||
 803:lvgl/src/lv_widgets/lv_list.c ****        sign == LV_SIGNAL_STYLE_CHG) {
 804:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_t * label = lv_list_get_btn_label(btn);
 805:lvgl/src/lv_widgets/lv_list.c ****         if(label) {
 806:lvgl/src/lv_widgets/lv_list.c ****             const lv_font_t * font = lv_obj_get_style_text_font(label, LV_LABEL_PART_MAIN);
 807:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t font_h = lv_font_get_line_height(font);
 808:lvgl/src/lv_widgets/lv_list.c ****             if(lv_obj_get_base_dir(btn) == LV_BIDI_DIR_RTL) {
 809:lvgl/src/lv_widgets/lv_list.c ****                 lv_coord_t pad = lv_obj_get_style_pad_left(btn, LV_BTN_PART_MAIN);
 810:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_set_size(label, label->coords.x2 - btn->coords.x1 - pad, font_h);
 811:lvgl/src/lv_widgets/lv_list.c ****             }
 812:lvgl/src/lv_widgets/lv_list.c ****             else {
 813:lvgl/src/lv_widgets/lv_list.c ****                 lv_coord_t pad = lv_obj_get_style_pad_right(btn, LV_BTN_PART_MAIN);
 814:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_set_size(label, btn->coords.x2 - label->coords.x1 - pad + 1, font_h);
 815:lvgl/src/lv_widgets/lv_list.c ****             }
 816:lvgl/src/lv_widgets/lv_list.c ****         }
 817:lvgl/src/lv_widgets/lv_list.c ****     }
 818:lvgl/src/lv_widgets/lv_list.c ****     else if(sign == LV_SIGNAL_RELEASED) {
 819:lvgl/src/lv_widgets/lv_list.c ****         if(lv_indev_is_dragging(lv_indev_get_act()) == false) {
 820:lvgl/src/lv_widgets/lv_list.c ****             lv_obj_t * list = lv_obj_get_parent(lv_obj_get_parent(btn));
 821:lvgl/src/lv_widgets/lv_list.c ****             lv_list_focus_btn(list, btn);
 822:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 823:lvgl/src/lv_widgets/lv_list.c ****             if(lv_obj_get_group(list)) {
 824:lvgl/src/lv_widgets/lv_list.c ****                 lv_group_focus_obj(list);
 825:lvgl/src/lv_widgets/lv_list.c ****             }
 826:lvgl/src/lv_widgets/lv_list.c **** #endif
 827:lvgl/src/lv_widgets/lv_list.c ****         }
 828:lvgl/src/lv_widgets/lv_list.c ****     }
ARM GAS  D:\Temp\cc6WWuOg.s 			page 16


 829:lvgl/src/lv_widgets/lv_list.c ****     else if(sign == LV_SIGNAL_CLEANUP) {
 830:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 831:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_t * list = lv_obj_get_parent(lv_obj_get_parent(btn));
 832:lvgl/src/lv_widgets/lv_list.c ****         lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 833:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_t * sel  = lv_list_get_btn_selected(list);
 834:lvgl/src/lv_widgets/lv_list.c ****         if(sel == btn) lv_list_focus_btn(list, lv_list_get_next_btn(list, btn));
 835:lvgl/src/lv_widgets/lv_list.c ****         if(ext->last_sel_btn == btn) ext->last_sel_btn = NULL;
 836:lvgl/src/lv_widgets/lv_list.c **** #endif
 837:lvgl/src/lv_widgets/lv_list.c ****     }
 838:lvgl/src/lv_widgets/lv_list.c **** 
 839:lvgl/src/lv_widgets/lv_list.c ****     return res;
 840:lvgl/src/lv_widgets/lv_list.c **** }
 841:lvgl/src/lv_widgets/lv_list.c **** 
 842:lvgl/src/lv_widgets/lv_list.c **** /**
 843:lvgl/src/lv_widgets/lv_list.c ****  * Get the style descriptor of a part of the object
 844:lvgl/src/lv_widgets/lv_list.c ****  * @param list pointer the object
 845:lvgl/src/lv_widgets/lv_list.c ****  * @param part the part from `lv_page_list_t`. (LV_LIST_PART_...)
 846:lvgl/src/lv_widgets/lv_list.c ****  * @return pointer to the style descriptor of the specified part
 847:lvgl/src/lv_widgets/lv_list.c ****  */
 848:lvgl/src/lv_widgets/lv_list.c **** static lv_style_list_t * lv_list_get_style(lv_obj_t * list, uint8_t part)
 849:lvgl/src/lv_widgets/lv_list.c **** {
  29              		.loc 1 849 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 849 1 is_stmt 0 view .LVU1
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 0546     		mov	r5, r0
  42 0004 0C46     		mov	r4, r1
 850:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
  43              		.loc 1 850 5 is_stmt 1 view .LVU2
  44              		.loc 1 850 5 view .LVU3
  45 0006 FFF7FEFF 		bl	lv_debug_check_null
  46              	.LVL1:
  47              		.loc 1 850 5 is_stmt 0 view .LVU4
  48 000a 28B9     		cbnz	r0, .L2
  49              		.loc 1 850 5 is_stmt 1 discriminator 1 view .LVU5
  50              		.loc 1 850 5 discriminator 1 view .LVU6
  51 000c 2A46     		mov	r2, r5
  52 000e 0023     		movs	r3, #0
  53 0010 0D48     		ldr	r0, .L10
  54 0012 FFF7FEFF 		bl	lv_debug_log_error
  55              	.LVL2:
  56              	.L3:
  57              		.loc 1 850 5 discriminator 1 view .LVU7
  58              		.loc 1 850 5 discriminator 1 view .LVU8
  59 0016 FEE7     		b	.L3
  60              	.L2:
  61              		.loc 1 850 38 discriminator 2 view .LVU9
 851:lvgl/src/lv_widgets/lv_list.c **** 
 852:lvgl/src/lv_widgets/lv_list.c ****     lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
ARM GAS  D:\Temp\cc6WWuOg.s 			page 17


  62              		.loc 1 852 5 discriminator 2 view .LVU10
  63              		.loc 1 852 27 is_stmt 0 discriminator 2 view .LVU11
  64 0018 2846     		mov	r0, r5
  65 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
  66              	.LVL3:
 853:lvgl/src/lv_widgets/lv_list.c ****     lv_style_list_t * style_dsc_p;
  67              		.loc 1 853 5 is_stmt 1 discriminator 2 view .LVU12
 854:lvgl/src/lv_widgets/lv_list.c **** 
 855:lvgl/src/lv_widgets/lv_list.c ****     switch(part) {
  68              		.loc 1 855 5 discriminator 2 view .LVU13
  69 001e 012C     		cmp	r4, #1
  70 0020 0DD0     		beq	.L4
  71              		.loc 1 855 5 is_stmt 0 view .LVU14
  72 0022 63B2     		sxtb	r3, r4
  73 0024 2BB1     		cbz	r3, .L5
  74 0026 022C     		cmp	r4, #2
  75 0028 0BD0     		beq	.L6
  76 002a 402C     		cmp	r4, #64
  77 002c 04D0     		beq	.L7
 856:lvgl/src/lv_widgets/lv_list.c ****         case LV_LIST_PART_BG:
 857:lvgl/src/lv_widgets/lv_list.c ****             style_dsc_p = &list->style_list;
 858:lvgl/src/lv_widgets/lv_list.c ****             break;
 859:lvgl/src/lv_widgets/lv_list.c ****         case LV_LIST_PART_SCROLLABLE:
 860:lvgl/src/lv_widgets/lv_list.c ****             style_dsc_p = &ext->page.scrl->style_list;
 861:lvgl/src/lv_widgets/lv_list.c ****             break;
 862:lvgl/src/lv_widgets/lv_list.c ****         case LV_LIST_PART_SCROLLBAR:
 863:lvgl/src/lv_widgets/lv_list.c ****             style_dsc_p = &ext->page.scrlbar.style;
 864:lvgl/src/lv_widgets/lv_list.c ****             break;
 865:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_ANIMATION
 866:lvgl/src/lv_widgets/lv_list.c ****         case LV_LIST_PART_EDGE_FLASH:
 867:lvgl/src/lv_widgets/lv_list.c ****             style_dsc_p = &ext->page.edge_flash.style;
 868:lvgl/src/lv_widgets/lv_list.c ****             break;
 869:lvgl/src/lv_widgets/lv_list.c **** #endif
 870:lvgl/src/lv_widgets/lv_list.c ****         default:
 871:lvgl/src/lv_widgets/lv_list.c ****             style_dsc_p = NULL;
  78              		.loc 1 871 25 view .LVU15
  79 002e 0020     		movs	r0, #0
  80              	.LVL4:
  81              	.L1:
 872:lvgl/src/lv_widgets/lv_list.c ****     }
 873:lvgl/src/lv_widgets/lv_list.c **** 
 874:lvgl/src/lv_widgets/lv_list.c ****     return style_dsc_p;
 875:lvgl/src/lv_widgets/lv_list.c **** }
  82              		.loc 1 875 1 view .LVU16
  83 0030 38BD     		pop	{r3, r4, r5, pc}
  84              	.LVL5:
  85              	.L5:
 857:lvgl/src/lv_widgets/lv_list.c ****             break;
  86              		.loc 1 857 13 is_stmt 1 view .LVU17
 857:lvgl/src/lv_widgets/lv_list.c ****             break;
  87              		.loc 1 857 25 is_stmt 0 view .LVU18
  88 0032 05F12800 		add	r0, r5, #40
  89              	.LVL6:
 858:lvgl/src/lv_widgets/lv_list.c ****         case LV_LIST_PART_SCROLLABLE:
  90              		.loc 1 858 13 is_stmt 1 view .LVU19
  91 0036 FBE7     		b	.L1
  92              	.LVL7:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 18


  93              	.L7:
 860:lvgl/src/lv_widgets/lv_list.c ****             break;
  94              		.loc 1 860 13 view .LVU20
 860:lvgl/src/lv_widgets/lv_list.c ****             break;
  95              		.loc 1 860 37 is_stmt 0 view .LVU21
  96 0038 4068     		ldr	r0, [r0, #4]
  97              	.LVL8:
 860:lvgl/src/lv_widgets/lv_list.c ****             break;
  98              		.loc 1 860 25 view .LVU22
  99 003a 2830     		adds	r0, r0, #40
 100              	.LVL9:
 861:lvgl/src/lv_widgets/lv_list.c ****         case LV_LIST_PART_SCROLLBAR:
 101              		.loc 1 861 13 is_stmt 1 view .LVU23
 102 003c F8E7     		b	.L1
 103              	.LVL10:
 104              	.L4:
 863:lvgl/src/lv_widgets/lv_list.c ****             break;
 105              		.loc 1 863 13 view .LVU24
 863:lvgl/src/lv_widgets/lv_list.c ****             break;
 106              		.loc 1 863 25 is_stmt 0 view .LVU25
 107 003e 0830     		adds	r0, r0, #8
 108              	.LVL11:
 864:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_ANIMATION
 109              		.loc 1 864 13 is_stmt 1 view .LVU26
 110 0040 F6E7     		b	.L1
 111              	.LVL12:
 112              	.L6:
 867:lvgl/src/lv_widgets/lv_list.c ****             break;
 113              		.loc 1 867 13 view .LVU27
 867:lvgl/src/lv_widgets/lv_list.c ****             break;
 114              		.loc 1 867 25 is_stmt 0 view .LVU28
 115 0042 2830     		adds	r0, r0, #40
 116              	.LVL13:
 868:lvgl/src/lv_widgets/lv_list.c **** #endif
 117              		.loc 1 868 13 is_stmt 1 view .LVU29
 874:lvgl/src/lv_widgets/lv_list.c **** }
 118              		.loc 1 874 5 view .LVU30
 874:lvgl/src/lv_widgets/lv_list.c **** }
 119              		.loc 1 874 12 is_stmt 0 view .LVU31
 120 0044 F4E7     		b	.L1
 121              	.L11:
 122 0046 00BF     		.align	2
 123              	.L10:
 124 0048 00000000 		.word	.LC0
 125              		.cfi_endproc
 126              	.LFE510:
 128              		.section	.text.lv_list_is_list_label,"ax",%progbits
 129              		.align	1
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.fpu fpv4-sp-d16
 135              	lv_list_is_list_label:
 136              	.LVL14:
 137              	.LFB512:
 876:lvgl/src/lv_widgets/lv_list.c **** 
 877:lvgl/src/lv_widgets/lv_list.c **** /**
ARM GAS  D:\Temp\cc6WWuOg.s 			page 19


 878:lvgl/src/lv_widgets/lv_list.c ****  * Check if this is really a list button or another object.
 879:lvgl/src/lv_widgets/lv_list.c ****  * @param list_btn List button
 880:lvgl/src/lv_widgets/lv_list.c ****  */
 881:lvgl/src/lv_widgets/lv_list.c **** static bool lv_list_is_list_btn(lv_obj_t * list_btn)
 882:lvgl/src/lv_widgets/lv_list.c **** {
 883:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_type_t type;
 884:lvgl/src/lv_widgets/lv_list.c **** 
 885:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_get_type(list_btn, &type);
 886:lvgl/src/lv_widgets/lv_list.c ****     uint8_t cnt;
 887:lvgl/src/lv_widgets/lv_list.c ****     for(cnt = 0; cnt < LV_MAX_ANCESTOR_NUM; cnt++) {
 888:lvgl/src/lv_widgets/lv_list.c ****         if(type.type[cnt] == NULL) break;
 889:lvgl/src/lv_widgets/lv_list.c ****         if(!strcmp(type.type[cnt], "lv_btn")) return true;
 890:lvgl/src/lv_widgets/lv_list.c ****     }
 891:lvgl/src/lv_widgets/lv_list.c ****     return false;
 892:lvgl/src/lv_widgets/lv_list.c **** }
 893:lvgl/src/lv_widgets/lv_list.c **** 
 894:lvgl/src/lv_widgets/lv_list.c **** /**
 895:lvgl/src/lv_widgets/lv_list.c ****  * Check if this is really a list label or another object.
 896:lvgl/src/lv_widgets/lv_list.c ****  * @param list_label List label
 897:lvgl/src/lv_widgets/lv_list.c ****  */
 898:lvgl/src/lv_widgets/lv_list.c **** static bool lv_list_is_list_label(lv_obj_t * list_label)
 899:lvgl/src/lv_widgets/lv_list.c **** {
 138              		.loc 1 899 1 is_stmt 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 32
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		.loc 1 899 1 is_stmt 0 view .LVU33
 143 0000 10B5     		push	{r4, lr}
 144              	.LCFI1:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 4, -8
 147              		.cfi_offset 14, -4
 148 0002 88B0     		sub	sp, sp, #32
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 40
 900:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_type_t type;
 151              		.loc 1 900 5 is_stmt 1 view .LVU34
 901:lvgl/src/lv_widgets/lv_list.c **** 
 902:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_get_type(list_label, &type);
 152              		.loc 1 902 5 view .LVU35
 153 0004 6946     		mov	r1, sp
 154 0006 FFF7FEFF 		bl	lv_obj_get_type
 155              	.LVL15:
 903:lvgl/src/lv_widgets/lv_list.c ****     uint8_t cnt;
 156              		.loc 1 903 5 view .LVU36
 904:lvgl/src/lv_widgets/lv_list.c ****     for(cnt = 0; cnt < LV_MAX_ANCESTOR_NUM; cnt++) {
 157              		.loc 1 904 5 view .LVU37
 158              		.loc 1 904 13 is_stmt 0 view .LVU38
 159 000a 0024     		movs	r4, #0
 160              		.loc 1 904 5 view .LVU39
 161 000c 01E0     		b	.L13
 162              	.LVL16:
 163              	.L20:
 164              		.loc 1 904 48 discriminator 2 view .LVU40
 165 000e 0134     		adds	r4, r4, #1
 166              	.LVL17:
 167              		.loc 1 904 48 discriminator 2 view .LVU41
ARM GAS  D:\Temp\cc6WWuOg.s 			page 20


 168 0010 E4B2     		uxtb	r4, r4
 169              	.LVL18:
 170              	.L13:
 171              		.loc 1 904 5 discriminator 1 view .LVU42
 172 0012 072C     		cmp	r4, #7
 173 0014 0CD8     		bhi	.L19
 905:lvgl/src/lv_widgets/lv_list.c ****         if(type.type[cnt] == NULL) break;
 174              		.loc 1 905 9 is_stmt 1 view .LVU43
 175              		.loc 1 905 21 is_stmt 0 view .LVU44
 176 0016 08AB     		add	r3, sp, #32
 177 0018 03EB8403 		add	r3, r3, r4, lsl #2
 178 001c 53F8200C 		ldr	r0, [r3, #-32]
 179              		.loc 1 905 11 view .LVU45
 180 0020 48B1     		cbz	r0, .L16
 906:lvgl/src/lv_widgets/lv_list.c ****         if(!strcmp(type.type[cnt], "lv_label")) return true;
 181              		.loc 1 906 9 is_stmt 1 view .LVU46
 182              		.loc 1 906 13 is_stmt 0 view .LVU47
 183 0022 0649     		ldr	r1, .L21
 184 0024 FFF7FEFF 		bl	strcmp
 185              	.LVL19:
 186              		.loc 1 906 11 view .LVU48
 187 0028 0028     		cmp	r0, #0
 188 002a F0D1     		bne	.L20
 189              		.loc 1 906 56 view .LVU49
 190 002c 0120     		movs	r0, #1
 191 002e 00E0     		b	.L14
 192              	.L19:
 907:lvgl/src/lv_widgets/lv_list.c ****     }
 908:lvgl/src/lv_widgets/lv_list.c ****     return false;
 193              		.loc 1 908 12 view .LVU50
 194 0030 0020     		movs	r0, #0
 195              	.L14:
 909:lvgl/src/lv_widgets/lv_list.c **** }
 196              		.loc 1 909 1 view .LVU51
 197 0032 08B0     		add	sp, sp, #32
 198              	.LCFI3:
 199              		.cfi_remember_state
 200              		.cfi_def_cfa_offset 8
 201              		@ sp needed
 202 0034 10BD     		pop	{r4, pc}
 203              	.LVL20:
 204              	.L16:
 205              	.LCFI4:
 206              		.cfi_restore_state
 908:lvgl/src/lv_widgets/lv_list.c **** }
 207              		.loc 1 908 12 view .LVU52
 208 0036 0020     		movs	r0, #0
 209 0038 FBE7     		b	.L14
 210              	.L22:
 211 003a 00BF     		.align	2
 212              	.L21:
 213 003c 00000000 		.word	.LC1
 214              		.cfi_endproc
 215              	.LFE512:
 217              		.section	.text.lv_list_is_list_img,"ax",%progbits
 218              		.align	1
 219              		.syntax unified
ARM GAS  D:\Temp\cc6WWuOg.s 			page 21


 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	lv_list_is_list_img:
 225              	.LVL21:
 226              	.LFB513:
 910:lvgl/src/lv_widgets/lv_list.c **** 
 911:lvgl/src/lv_widgets/lv_list.c **** /**
 912:lvgl/src/lv_widgets/lv_list.c ****  * Check if this is really a list image or another object.
 913:lvgl/src/lv_widgets/lv_list.c ****  * @param list_image List image
 914:lvgl/src/lv_widgets/lv_list.c ****  */
 915:lvgl/src/lv_widgets/lv_list.c **** static bool lv_list_is_list_img(lv_obj_t * list_img)
 916:lvgl/src/lv_widgets/lv_list.c **** {
 227              		.loc 1 916 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 32
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		.loc 1 916 1 is_stmt 0 view .LVU54
 232 0000 10B5     		push	{r4, lr}
 233              	.LCFI5:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 88B0     		sub	sp, sp, #32
 238              	.LCFI6:
 239              		.cfi_def_cfa_offset 40
 917:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_type_t type;
 240              		.loc 1 917 5 is_stmt 1 view .LVU55
 918:lvgl/src/lv_widgets/lv_list.c **** 
 919:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_get_type(list_img, &type);
 241              		.loc 1 919 5 view .LVU56
 242 0004 6946     		mov	r1, sp
 243 0006 FFF7FEFF 		bl	lv_obj_get_type
 244              	.LVL22:
 920:lvgl/src/lv_widgets/lv_list.c ****     uint8_t cnt;
 245              		.loc 1 920 5 view .LVU57
 921:lvgl/src/lv_widgets/lv_list.c ****     for(cnt = 0; cnt < LV_MAX_ANCESTOR_NUM; cnt++) {
 246              		.loc 1 921 5 view .LVU58
 247              		.loc 1 921 13 is_stmt 0 view .LVU59
 248 000a 0024     		movs	r4, #0
 249              		.loc 1 921 5 view .LVU60
 250 000c 01E0     		b	.L24
 251              	.LVL23:
 252              	.L31:
 253              		.loc 1 921 48 discriminator 2 view .LVU61
 254 000e 0134     		adds	r4, r4, #1
 255              	.LVL24:
 256              		.loc 1 921 48 discriminator 2 view .LVU62
 257 0010 E4B2     		uxtb	r4, r4
 258              	.LVL25:
 259              	.L24:
 260              		.loc 1 921 5 discriminator 1 view .LVU63
 261 0012 072C     		cmp	r4, #7
 262 0014 0CD8     		bhi	.L30
 922:lvgl/src/lv_widgets/lv_list.c ****         if(type.type[cnt] == NULL) break;
 263              		.loc 1 922 9 is_stmt 1 view .LVU64
 264              		.loc 1 922 21 is_stmt 0 view .LVU65
ARM GAS  D:\Temp\cc6WWuOg.s 			page 22


 265 0016 08AB     		add	r3, sp, #32
 266 0018 03EB8403 		add	r3, r3, r4, lsl #2
 267 001c 53F8200C 		ldr	r0, [r3, #-32]
 268              		.loc 1 922 11 view .LVU66
 269 0020 48B1     		cbz	r0, .L27
 923:lvgl/src/lv_widgets/lv_list.c ****         if(!strcmp(type.type[cnt], "lv_img")) return true;
 270              		.loc 1 923 9 is_stmt 1 view .LVU67
 271              		.loc 1 923 13 is_stmt 0 view .LVU68
 272 0022 0649     		ldr	r1, .L32
 273 0024 FFF7FEFF 		bl	strcmp
 274              	.LVL26:
 275              		.loc 1 923 11 view .LVU69
 276 0028 0028     		cmp	r0, #0
 277 002a F0D1     		bne	.L31
 278              		.loc 1 923 54 view .LVU70
 279 002c 0120     		movs	r0, #1
 280 002e 00E0     		b	.L25
 281              	.L30:
 924:lvgl/src/lv_widgets/lv_list.c ****     }
 925:lvgl/src/lv_widgets/lv_list.c ****     return false;
 282              		.loc 1 925 12 view .LVU71
 283 0030 0020     		movs	r0, #0
 284              	.L25:
 926:lvgl/src/lv_widgets/lv_list.c **** }
 285              		.loc 1 926 1 view .LVU72
 286 0032 08B0     		add	sp, sp, #32
 287              	.LCFI7:
 288              		.cfi_remember_state
 289              		.cfi_def_cfa_offset 8
 290              		@ sp needed
 291 0034 10BD     		pop	{r4, pc}
 292              	.LVL27:
 293              	.L27:
 294              	.LCFI8:
 295              		.cfi_restore_state
 925:lvgl/src/lv_widgets/lv_list.c **** }
 296              		.loc 1 925 12 view .LVU73
 297 0036 0020     		movs	r0, #0
 298 0038 FBE7     		b	.L25
 299              	.L33:
 300 003a 00BF     		.align	2
 301              	.L32:
 302 003c 00000000 		.word	.LC2
 303              		.cfi_endproc
 304              	.LFE513:
 306              		.section	.text.lv_list_is_list_btn,"ax",%progbits
 307              		.align	1
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu fpv4-sp-d16
 313              	lv_list_is_list_btn:
 314              	.LVL28:
 315              	.LFB511:
 882:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_type_t type;
 316              		.loc 1 882 1 is_stmt 1 view -0
 317              		.cfi_startproc
ARM GAS  D:\Temp\cc6WWuOg.s 			page 23


 318              		@ args = 0, pretend = 0, frame = 32
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 882:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_type_t type;
 320              		.loc 1 882 1 is_stmt 0 view .LVU75
 321 0000 10B5     		push	{r4, lr}
 322              	.LCFI9:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 4, -8
 325              		.cfi_offset 14, -4
 326 0002 88B0     		sub	sp, sp, #32
 327              	.LCFI10:
 328              		.cfi_def_cfa_offset 40
 883:lvgl/src/lv_widgets/lv_list.c **** 
 329              		.loc 1 883 5 is_stmt 1 view .LVU76
 885:lvgl/src/lv_widgets/lv_list.c ****     uint8_t cnt;
 330              		.loc 1 885 5 view .LVU77
 331 0004 6946     		mov	r1, sp
 332 0006 FFF7FEFF 		bl	lv_obj_get_type
 333              	.LVL29:
 886:lvgl/src/lv_widgets/lv_list.c ****     for(cnt = 0; cnt < LV_MAX_ANCESTOR_NUM; cnt++) {
 334              		.loc 1 886 5 view .LVU78
 887:lvgl/src/lv_widgets/lv_list.c ****         if(type.type[cnt] == NULL) break;
 335              		.loc 1 887 5 view .LVU79
 887:lvgl/src/lv_widgets/lv_list.c ****         if(type.type[cnt] == NULL) break;
 336              		.loc 1 887 13 is_stmt 0 view .LVU80
 337 000a 0024     		movs	r4, #0
 887:lvgl/src/lv_widgets/lv_list.c ****         if(type.type[cnt] == NULL) break;
 338              		.loc 1 887 5 view .LVU81
 339 000c 01E0     		b	.L35
 340              	.LVL30:
 341              	.L42:
 887:lvgl/src/lv_widgets/lv_list.c ****         if(type.type[cnt] == NULL) break;
 342              		.loc 1 887 48 discriminator 2 view .LVU82
 343 000e 0134     		adds	r4, r4, #1
 344              	.LVL31:
 887:lvgl/src/lv_widgets/lv_list.c ****         if(type.type[cnt] == NULL) break;
 345              		.loc 1 887 48 discriminator 2 view .LVU83
 346 0010 E4B2     		uxtb	r4, r4
 347              	.LVL32:
 348              	.L35:
 887:lvgl/src/lv_widgets/lv_list.c ****         if(type.type[cnt] == NULL) break;
 349              		.loc 1 887 5 discriminator 1 view .LVU84
 350 0012 072C     		cmp	r4, #7
 351 0014 0CD8     		bhi	.L41
 888:lvgl/src/lv_widgets/lv_list.c ****         if(!strcmp(type.type[cnt], "lv_btn")) return true;
 352              		.loc 1 888 9 is_stmt 1 view .LVU85
 888:lvgl/src/lv_widgets/lv_list.c ****         if(!strcmp(type.type[cnt], "lv_btn")) return true;
 353              		.loc 1 888 21 is_stmt 0 view .LVU86
 354 0016 08AB     		add	r3, sp, #32
 355 0018 03EB8403 		add	r3, r3, r4, lsl #2
 356 001c 53F8200C 		ldr	r0, [r3, #-32]
 888:lvgl/src/lv_widgets/lv_list.c ****         if(!strcmp(type.type[cnt], "lv_btn")) return true;
 357              		.loc 1 888 11 view .LVU87
 358 0020 48B1     		cbz	r0, .L38
 889:lvgl/src/lv_widgets/lv_list.c ****     }
 359              		.loc 1 889 9 is_stmt 1 view .LVU88
 889:lvgl/src/lv_widgets/lv_list.c ****     }
ARM GAS  D:\Temp\cc6WWuOg.s 			page 24


 360              		.loc 1 889 13 is_stmt 0 view .LVU89
 361 0022 0649     		ldr	r1, .L43
 362 0024 FFF7FEFF 		bl	strcmp
 363              	.LVL33:
 889:lvgl/src/lv_widgets/lv_list.c ****     }
 364              		.loc 1 889 11 view .LVU90
 365 0028 0028     		cmp	r0, #0
 366 002a F0D1     		bne	.L42
 889:lvgl/src/lv_widgets/lv_list.c ****     }
 367              		.loc 1 889 54 view .LVU91
 368 002c 0120     		movs	r0, #1
 369 002e 00E0     		b	.L36
 370              	.L41:
 891:lvgl/src/lv_widgets/lv_list.c **** }
 371              		.loc 1 891 12 view .LVU92
 372 0030 0020     		movs	r0, #0
 373              	.L36:
 892:lvgl/src/lv_widgets/lv_list.c **** 
 374              		.loc 1 892 1 view .LVU93
 375 0032 08B0     		add	sp, sp, #32
 376              	.LCFI11:
 377              		.cfi_remember_state
 378              		.cfi_def_cfa_offset 8
 379              		@ sp needed
 380 0034 10BD     		pop	{r4, pc}
 381              	.LVL34:
 382              	.L38:
 383              	.LCFI12:
 384              		.cfi_restore_state
 891:lvgl/src/lv_widgets/lv_list.c **** }
 385              		.loc 1 891 12 view .LVU94
 386 0036 0020     		movs	r0, #0
 387 0038 FBE7     		b	.L36
 388              	.L44:
 389 003a 00BF     		.align	2
 390              	.L43:
 391 003c 00000000 		.word	.LC3
 392              		.cfi_endproc
 393              	.LFE511:
 395              		.section	.text.lv_list_clean,"ax",%progbits
 396              		.align	1
 397              		.global	lv_list_clean
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 401              		.fpu fpv4-sp-d16
 403              	lv_list_clean:
 404              	.LVL35:
 405              	.LFB491:
 130:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 406              		.loc 1 130 1 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 130:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 410              		.loc 1 130 1 is_stmt 0 view .LVU96
 411 0000 10B5     		push	{r4, lr}
ARM GAS  D:\Temp\cc6WWuOg.s 			page 25


 412              	.LCFI13:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 4, -8
 415              		.cfi_offset 14, -4
 416 0002 0446     		mov	r4, r0
 131:lvgl/src/lv_widgets/lv_list.c **** 
 417              		.loc 1 131 5 is_stmt 1 view .LVU97
 131:lvgl/src/lv_widgets/lv_list.c **** 
 418              		.loc 1 131 5 view .LVU98
 419 0004 FFF7FEFF 		bl	lv_debug_check_null
 420              	.LVL36:
 131:lvgl/src/lv_widgets/lv_list.c **** 
 421              		.loc 1 131 5 is_stmt 0 view .LVU99
 422 0008 28B9     		cbnz	r0, .L46
 131:lvgl/src/lv_widgets/lv_list.c **** 
 423              		.loc 1 131 5 is_stmt 1 discriminator 1 view .LVU100
 131:lvgl/src/lv_widgets/lv_list.c **** 
 424              		.loc 1 131 5 discriminator 1 view .LVU101
 425 000a 2246     		mov	r2, r4
 426 000c 0023     		movs	r3, #0
 427 000e 0548     		ldr	r0, .L49
 428 0010 FFF7FEFF 		bl	lv_debug_log_error
 429              	.LVL37:
 430              	.L47:
 131:lvgl/src/lv_widgets/lv_list.c **** 
 431              		.loc 1 131 5 discriminator 1 view .LVU102
 131:lvgl/src/lv_widgets/lv_list.c **** 
 432              		.loc 1 131 5 discriminator 1 view .LVU103
 433 0014 FEE7     		b	.L47
 434              	.L46:
 131:lvgl/src/lv_widgets/lv_list.c **** 
 435              		.loc 1 131 38 discriminator 2 view .LVU104
 133:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_clean(scrl);
 436              		.loc 1 133 5 discriminator 2 view .LVU105
 133:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_clean(scrl);
 437              		.loc 1 133 23 is_stmt 0 discriminator 2 view .LVU106
 438 0016 2046     		mov	r0, r4
 439 0018 FFF7FEFF 		bl	lv_page_get_scrollable
 440              	.LVL38:
 134:lvgl/src/lv_widgets/lv_list.c **** }
 441              		.loc 1 134 5 is_stmt 1 discriminator 2 view .LVU107
 442 001c FFF7FEFF 		bl	lv_obj_clean
 443              	.LVL39:
 135:lvgl/src/lv_widgets/lv_list.c **** 
 444              		.loc 1 135 1 is_stmt 0 discriminator 2 view .LVU108
 445 0020 10BD     		pop	{r4, pc}
 446              	.LVL40:
 447              	.L50:
 135:lvgl/src/lv_widgets/lv_list.c **** 
 448              		.loc 1 135 1 discriminator 2 view .LVU109
 449 0022 00BF     		.align	2
 450              	.L49:
 451 0024 00000000 		.word	.LC0
 452              		.cfi_endproc
 453              	.LFE491:
 455              		.section	.text.lv_list_focus_btn,"ax",%progbits
 456              		.align	1
ARM GAS  D:\Temp\cc6WWuOg.s 			page 26


 457              		.global	lv_list_focus_btn
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 461              		.fpu fpv4-sp-d16
 463              	lv_list_focus_btn:
 464              	.LVL41:
 465              	.LFB494:
 280:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 466              		.loc 1 280 1 is_stmt 1 view -0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 280:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 470              		.loc 1 280 1 is_stmt 0 view .LVU111
 471 0000 70B5     		push	{r4, r5, r6, lr}
 472              	.LCFI14:
 473              		.cfi_def_cfa_offset 16
 474              		.cfi_offset 4, -16
 475              		.cfi_offset 5, -12
 476              		.cfi_offset 6, -8
 477              		.cfi_offset 14, -4
 478 0002 0646     		mov	r6, r0
 479 0004 0C46     		mov	r4, r1
 281:lvgl/src/lv_widgets/lv_list.c ****     if(btn) {
 480              		.loc 1 281 5 is_stmt 1 view .LVU112
 281:lvgl/src/lv_widgets/lv_list.c ****     if(btn) {
 481              		.loc 1 281 5 view .LVU113
 482 0006 FFF7FEFF 		bl	lv_debug_check_null
 483              	.LVL42:
 281:lvgl/src/lv_widgets/lv_list.c ****     if(btn) {
 484              		.loc 1 281 5 is_stmt 0 view .LVU114
 485 000a D8B1     		cbz	r0, .L60
 281:lvgl/src/lv_widgets/lv_list.c ****     if(btn) {
 486              		.loc 1 281 38 is_stmt 1 discriminator 2 view .LVU115
 282:lvgl/src/lv_widgets/lv_list.c ****         LV_ASSERT_OBJ(btn, "lv_btn");
 487              		.loc 1 282 5 discriminator 2 view .LVU116
 282:lvgl/src/lv_widgets/lv_list.c ****         LV_ASSERT_OBJ(btn, "lv_btn");
 488              		.loc 1 282 7 is_stmt 0 discriminator 2 view .LVU117
 489 000c 1CB1     		cbz	r4, .L54
 283:lvgl/src/lv_widgets/lv_list.c ****     }
 490              		.loc 1 283 9 is_stmt 1 view .LVU118
 283:lvgl/src/lv_widgets/lv_list.c ****     }
 491              		.loc 1 283 9 view .LVU119
 492 000e 2046     		mov	r0, r4
 493 0010 FFF7FEFF 		bl	lv_debug_check_null
 494              	.LVL43:
 495 0014 E0B1     		cbz	r0, .L61
 496              	.L54:
 283:lvgl/src/lv_widgets/lv_list.c ****     }
 497              		.loc 1 283 37 discriminator 2 view .LVU120
 286:lvgl/src/lv_widgets/lv_list.c **** 
 498              		.loc 1 286 5 discriminator 2 view .LVU121
 286:lvgl/src/lv_widgets/lv_list.c **** 
 499              		.loc 1 286 27 is_stmt 0 discriminator 2 view .LVU122
 500 0016 3046     		mov	r0, r6
 501 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
ARM GAS  D:\Temp\cc6WWuOg.s 			page 27


 502              	.LVL44:
 503 001c 0546     		mov	r5, r0
 504              	.LVL45:
 289:lvgl/src/lv_widgets/lv_list.c **** 
 505              		.loc 1 289 5 is_stmt 1 discriminator 2 view .LVU123
 289:lvgl/src/lv_widgets/lv_list.c **** 
 506              		.loc 1 289 11 is_stmt 0 discriminator 2 view .LVU124
 507 001e 406C     		ldr	r0, [r0, #68]
 508              	.LVL46:
 289:lvgl/src/lv_widgets/lv_list.c **** 
 509              		.loc 1 289 7 discriminator 2 view .LVU125
 510 0020 10B1     		cbz	r0, .L56
 289:lvgl/src/lv_widgets/lv_list.c **** 
 511              		.loc 1 289 26 is_stmt 1 discriminator 1 view .LVU126
 512 0022 0221     		movs	r1, #2
 513 0024 FFF7FEFF 		bl	lv_obj_clear_state
 514              	.LVL47:
 515              	.L56:
 294:lvgl/src/lv_widgets/lv_list.c **** #endif
 516              		.loc 1 294 5 view .LVU127
 294:lvgl/src/lv_widgets/lv_list.c **** #endif
 517              		.loc 1 294 7 is_stmt 0 view .LVU128
 518 0028 04B1     		cbz	r4, .L57
 294:lvgl/src/lv_widgets/lv_list.c **** #endif
 519              		.loc 1 294 13 is_stmt 1 discriminator 1 view .LVU129
 294:lvgl/src/lv_widgets/lv_list.c **** #endif
 520              		.loc 1 294 31 is_stmt 0 discriminator 1 view .LVU130
 521 002a 2C64     		str	r4, [r5, #64]
 522              	.L57:
 298:lvgl/src/lv_widgets/lv_list.c **** 
 523              		.loc 1 298 5 is_stmt 1 view .LVU131
 298:lvgl/src/lv_widgets/lv_list.c **** 
 524              		.loc 1 298 22 is_stmt 0 view .LVU132
 525 002c 6C64     		str	r4, [r5, #68]
 300:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_add_state(ext->act_sel_btn, LV_STATE_FOCUSED);
 526              		.loc 1 300 5 is_stmt 1 view .LVU133
 300:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_add_state(ext->act_sel_btn, LV_STATE_FOCUSED);
 527              		.loc 1 300 7 is_stmt 0 view .LVU134
 528 002e 44B1     		cbz	r4, .L51
 301:lvgl/src/lv_widgets/lv_list.c ****         lv_page_focus(list, ext->act_sel_btn, LV_ANIM_ON);
 529              		.loc 1 301 9 is_stmt 1 view .LVU135
 530 0030 0221     		movs	r1, #2
 531 0032 2046     		mov	r0, r4
 532 0034 FFF7FEFF 		bl	lv_obj_add_state
 533              	.LVL48:
 302:lvgl/src/lv_widgets/lv_list.c ****     }
 534              		.loc 1 302 9 view .LVU136
 535 0038 0122     		movs	r2, #1
 536 003a 696C     		ldr	r1, [r5, #68]
 537 003c 3046     		mov	r0, r6
 538 003e FFF7FEFF 		bl	lv_page_focus
 539              	.LVL49:
 540              	.L51:
 304:lvgl/src/lv_widgets/lv_list.c **** 
 541              		.loc 1 304 1 is_stmt 0 view .LVU137
 542 0042 70BD     		pop	{r4, r5, r6, pc}
 543              	.LVL50:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 28


 544              	.L60:
 281:lvgl/src/lv_widgets/lv_list.c ****     if(btn) {
 545              		.loc 1 281 5 is_stmt 1 discriminator 1 view .LVU138
 281:lvgl/src/lv_widgets/lv_list.c ****     if(btn) {
 546              		.loc 1 281 5 discriminator 1 view .LVU139
 547 0044 3246     		mov	r2, r6
 548 0046 0023     		movs	r3, #0
 549 0048 0448     		ldr	r0, .L62
 550 004a FFF7FEFF 		bl	lv_debug_log_error
 551              	.LVL51:
 552              	.L53:
 281:lvgl/src/lv_widgets/lv_list.c ****     if(btn) {
 553              		.loc 1 281 5 discriminator 1 view .LVU140
 281:lvgl/src/lv_widgets/lv_list.c ****     if(btn) {
 554              		.loc 1 281 5 discriminator 1 view .LVU141
 555 004e FEE7     		b	.L53
 556              	.L61:
 283:lvgl/src/lv_widgets/lv_list.c ****     }
 557              		.loc 1 283 9 discriminator 1 view .LVU142
 283:lvgl/src/lv_widgets/lv_list.c ****     }
 558              		.loc 1 283 9 discriminator 1 view .LVU143
 559 0050 2246     		mov	r2, r4
 560 0052 0023     		movs	r3, #0
 561 0054 0148     		ldr	r0, .L62
 562 0056 FFF7FEFF 		bl	lv_debug_log_error
 563              	.LVL52:
 564              	.L55:
 283:lvgl/src/lv_widgets/lv_list.c ****     }
 565              		.loc 1 283 9 discriminator 2 view .LVU144
 283:lvgl/src/lv_widgets/lv_list.c ****     }
 566              		.loc 1 283 9 discriminator 2 view .LVU145
 567 005a FEE7     		b	.L55
 568              	.L63:
 569              		.align	2
 570              	.L62:
 571 005c 00000000 		.word	.LC0
 572              		.cfi_endproc
 573              	.LFE494:
 575              		.section	.text.lv_list_get_btn_label,"ax",%progbits
 576              		.align	1
 577              		.global	lv_list_get_btn_label
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv4-sp-d16
 583              	lv_list_get_btn_label:
 584              	.LVL53:
 585              	.LFB497:
 370:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 586              		.loc 1 370 1 view -0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 370:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 590              		.loc 1 370 1 is_stmt 0 view .LVU147
 591 0000 38B5     		push	{r3, r4, r5, lr}
 592              	.LCFI15:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 29


 593              		.cfi_def_cfa_offset 16
 594              		.cfi_offset 3, -16
 595              		.cfi_offset 4, -12
 596              		.cfi_offset 5, -8
 597              		.cfi_offset 14, -4
 598 0002 0546     		mov	r5, r0
 371:lvgl/src/lv_widgets/lv_list.c **** 
 599              		.loc 1 371 5 is_stmt 1 view .LVU148
 371:lvgl/src/lv_widgets/lv_list.c **** 
 600              		.loc 1 371 5 view .LVU149
 601 0004 FFF7FEFF 		bl	lv_debug_check_null
 602              	.LVL54:
 371:lvgl/src/lv_widgets/lv_list.c **** 
 603              		.loc 1 371 5 is_stmt 0 view .LVU150
 604 0008 28B9     		cbnz	r0, .L65
 371:lvgl/src/lv_widgets/lv_list.c **** 
 605              		.loc 1 371 5 is_stmt 1 discriminator 1 view .LVU151
 371:lvgl/src/lv_widgets/lv_list.c **** 
 606              		.loc 1 371 5 discriminator 1 view .LVU152
 607 000a 2A46     		mov	r2, r5
 608 000c 0023     		movs	r3, #0
 609 000e 0B48     		ldr	r0, .L71
 610 0010 FFF7FEFF 		bl	lv_debug_log_error
 611              	.LVL55:
 612              	.L66:
 371:lvgl/src/lv_widgets/lv_list.c **** 
 613              		.loc 1 371 5 discriminator 1 view .LVU153
 371:lvgl/src/lv_widgets/lv_list.c **** 
 614              		.loc 1 371 5 discriminator 1 view .LVU154
 615 0014 FEE7     		b	.L66
 616              	.L65:
 371:lvgl/src/lv_widgets/lv_list.c **** 
 617              		.loc 1 371 33 discriminator 2 view .LVU155
 373:lvgl/src/lv_widgets/lv_list.c ****     if(label == NULL) return NULL;
 618              		.loc 1 373 5 discriminator 2 view .LVU156
 373:lvgl/src/lv_widgets/lv_list.c ****     if(label == NULL) return NULL;
 619              		.loc 1 373 24 is_stmt 0 discriminator 2 view .LVU157
 620 0016 0021     		movs	r1, #0
 621 0018 2846     		mov	r0, r5
 622 001a FFF7FEFF 		bl	lv_obj_get_child_back
 623              	.LVL56:
 374:lvgl/src/lv_widgets/lv_list.c **** 
 624              		.loc 1 374 5 is_stmt 1 discriminator 2 view .LVU158
 374:lvgl/src/lv_widgets/lv_list.c **** 
 625              		.loc 1 374 7 is_stmt 0 discriminator 2 view .LVU159
 626 001e 0446     		mov	r4, r0
 627 0020 50B1     		cbz	r0, .L64
 628              	.L68:
 376:lvgl/src/lv_widgets/lv_list.c ****         label = lv_obj_get_child_back(btn, label);
 629              		.loc 1 376 11 view .LVU160
 630 0022 2046     		mov	r0, r4
 376:lvgl/src/lv_widgets/lv_list.c ****         label = lv_obj_get_child_back(btn, label);
 631              		.loc 1 376 11 view .LVU161
 632 0024 FFF7FEFF 		bl	lv_list_is_list_label
 633              	.LVL57:
 376:lvgl/src/lv_widgets/lv_list.c ****         label = lv_obj_get_child_back(btn, label);
 634              		.loc 1 376 10 view .LVU162
ARM GAS  D:\Temp\cc6WWuOg.s 			page 30


 635 0028 30B9     		cbnz	r0, .L64
 377:lvgl/src/lv_widgets/lv_list.c ****         if(label == NULL) break;
 636              		.loc 1 377 9 is_stmt 1 view .LVU163
 377:lvgl/src/lv_widgets/lv_list.c ****         if(label == NULL) break;
 637              		.loc 1 377 17 is_stmt 0 view .LVU164
 638 002a 2146     		mov	r1, r4
 639 002c 2846     		mov	r0, r5
 640 002e FFF7FEFF 		bl	lv_obj_get_child_back
 641              	.LVL58:
 378:lvgl/src/lv_widgets/lv_list.c ****     }
 642              		.loc 1 378 9 is_stmt 1 view .LVU165
 378:lvgl/src/lv_widgets/lv_list.c ****     }
 643              		.loc 1 378 11 is_stmt 0 view .LVU166
 644 0032 0446     		mov	r4, r0
 645 0034 0028     		cmp	r0, #0
 646 0036 F4D1     		bne	.L68
 647              	.LVL59:
 648              	.L64:
 382:lvgl/src/lv_widgets/lv_list.c **** 
 649              		.loc 1 382 1 view .LVU167
 650 0038 2046     		mov	r0, r4
 651 003a 38BD     		pop	{r3, r4, r5, pc}
 652              	.LVL60:
 653              	.L72:
 382:lvgl/src/lv_widgets/lv_list.c **** 
 654              		.loc 1 382 1 view .LVU168
 655              		.align	2
 656              	.L71:
 657 003c 00000000 		.word	.LC0
 658              		.cfi_endproc
 659              	.LFE497:
 661              		.section	.text.lv_list_get_btn_text,"ax",%progbits
 662              		.align	1
 663              		.global	lv_list_get_btn_text
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu fpv4-sp-d16
 669              	lv_list_get_btn_text:
 670              	.LVL61:
 671              	.LFB496:
 356:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 672              		.loc 1 356 1 is_stmt 1 view -0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 356:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 676              		.loc 1 356 1 is_stmt 0 view .LVU170
 677 0000 10B5     		push	{r4, lr}
 678              	.LCFI16:
 679              		.cfi_def_cfa_offset 8
 680              		.cfi_offset 4, -8
 681              		.cfi_offset 14, -4
 682 0002 0446     		mov	r4, r0
 357:lvgl/src/lv_widgets/lv_list.c **** 
 683              		.loc 1 357 5 is_stmt 1 view .LVU171
 357:lvgl/src/lv_widgets/lv_list.c **** 
ARM GAS  D:\Temp\cc6WWuOg.s 			page 31


 684              		.loc 1 357 5 view .LVU172
 685 0004 FFF7FEFF 		bl	lv_debug_check_null
 686              	.LVL62:
 357:lvgl/src/lv_widgets/lv_list.c **** 
 687              		.loc 1 357 5 is_stmt 0 view .LVU173
 688 0008 28B9     		cbnz	r0, .L74
 357:lvgl/src/lv_widgets/lv_list.c **** 
 689              		.loc 1 357 5 is_stmt 1 discriminator 1 view .LVU174
 357:lvgl/src/lv_widgets/lv_list.c **** 
 690              		.loc 1 357 5 discriminator 1 view .LVU175
 691 000a 2246     		mov	r2, r4
 692 000c 0023     		movs	r3, #0
 693 000e 0648     		ldr	r0, .L79
 694 0010 FFF7FEFF 		bl	lv_debug_log_error
 695              	.LVL63:
 696              	.L75:
 357:lvgl/src/lv_widgets/lv_list.c **** 
 697              		.loc 1 357 5 discriminator 1 view .LVU176
 357:lvgl/src/lv_widgets/lv_list.c **** 
 698              		.loc 1 357 5 discriminator 1 view .LVU177
 699 0014 FEE7     		b	.L75
 700              	.L74:
 357:lvgl/src/lv_widgets/lv_list.c **** 
 701              		.loc 1 357 33 discriminator 2 view .LVU178
 359:lvgl/src/lv_widgets/lv_list.c ****     if(label == NULL) return "";
 702              		.loc 1 359 5 discriminator 2 view .LVU179
 359:lvgl/src/lv_widgets/lv_list.c ****     if(label == NULL) return "";
 703              		.loc 1 359 24 is_stmt 0 discriminator 2 view .LVU180
 704 0016 2046     		mov	r0, r4
 705 0018 FFF7FEFF 		bl	lv_list_get_btn_label
 706              	.LVL64:
 360:lvgl/src/lv_widgets/lv_list.c ****     return lv_label_get_text(label);
 707              		.loc 1 360 5 is_stmt 1 discriminator 2 view .LVU181
 360:lvgl/src/lv_widgets/lv_list.c ****     return lv_label_get_text(label);
 708              		.loc 1 360 7 is_stmt 0 discriminator 2 view .LVU182
 709 001c 10B1     		cbz	r0, .L77
 361:lvgl/src/lv_widgets/lv_list.c **** }
 710              		.loc 1 361 5 is_stmt 1 view .LVU183
 361:lvgl/src/lv_widgets/lv_list.c **** }
 711              		.loc 1 361 12 is_stmt 0 view .LVU184
 712 001e FFF7FEFF 		bl	lv_label_get_text
 713              	.LVL65:
 714              	.L73:
 362:lvgl/src/lv_widgets/lv_list.c **** 
 715              		.loc 1 362 1 view .LVU185
 716 0022 10BD     		pop	{r4, pc}
 717              	.LVL66:
 718              	.L77:
 360:lvgl/src/lv_widgets/lv_list.c ****     return lv_label_get_text(label);
 719              		.loc 1 360 30 view .LVU186
 720 0024 0148     		ldr	r0, .L79+4
 721              	.LVL67:
 360:lvgl/src/lv_widgets/lv_list.c ****     return lv_label_get_text(label);
 722              		.loc 1 360 30 view .LVU187
 723 0026 FCE7     		b	.L73
 724              	.L80:
 725              		.align	2
ARM GAS  D:\Temp\cc6WWuOg.s 			page 32


 726              	.L79:
 727 0028 00000000 		.word	.LC0
 728 002c 00000000 		.word	.LC4
 729              		.cfi_endproc
 730              	.LFE496:
 732              		.section	.text.lv_list_get_btn_img,"ax",%progbits
 733              		.align	1
 734              		.global	lv_list_get_btn_img
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv4-sp-d16
 740              	lv_list_get_btn_img:
 741              	.LVL68:
 742              	.LFB498:
 390:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 743              		.loc 1 390 1 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 390:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 747              		.loc 1 390 1 is_stmt 0 view .LVU189
 748 0000 38B5     		push	{r3, r4, r5, lr}
 749              	.LCFI17:
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 3, -16
 752              		.cfi_offset 4, -12
 753              		.cfi_offset 5, -8
 754              		.cfi_offset 14, -4
 755 0002 0546     		mov	r5, r0
 391:lvgl/src/lv_widgets/lv_list.c **** 
 756              		.loc 1 391 5 is_stmt 1 view .LVU190
 391:lvgl/src/lv_widgets/lv_list.c **** 
 757              		.loc 1 391 5 view .LVU191
 758 0004 FFF7FEFF 		bl	lv_debug_check_null
 759              	.LVL69:
 391:lvgl/src/lv_widgets/lv_list.c **** 
 760              		.loc 1 391 5 is_stmt 0 view .LVU192
 761 0008 28B9     		cbnz	r0, .L82
 391:lvgl/src/lv_widgets/lv_list.c **** 
 762              		.loc 1 391 5 is_stmt 1 discriminator 1 view .LVU193
 391:lvgl/src/lv_widgets/lv_list.c **** 
 763              		.loc 1 391 5 discriminator 1 view .LVU194
 764 000a 2A46     		mov	r2, r5
 765 000c 0023     		movs	r3, #0
 766 000e 0B48     		ldr	r0, .L88
 767 0010 FFF7FEFF 		bl	lv_debug_log_error
 768              	.LVL70:
 769              	.L83:
 391:lvgl/src/lv_widgets/lv_list.c **** 
 770              		.loc 1 391 5 discriminator 1 view .LVU195
 391:lvgl/src/lv_widgets/lv_list.c **** 
 771              		.loc 1 391 5 discriminator 1 view .LVU196
 772 0014 FEE7     		b	.L83
 773              	.L82:
 391:lvgl/src/lv_widgets/lv_list.c **** 
 774              		.loc 1 391 33 discriminator 2 view .LVU197
ARM GAS  D:\Temp\cc6WWuOg.s 			page 33


 394:lvgl/src/lv_widgets/lv_list.c ****     if(img == NULL) return NULL;
 775              		.loc 1 394 5 discriminator 2 view .LVU198
 394:lvgl/src/lv_widgets/lv_list.c ****     if(img == NULL) return NULL;
 776              		.loc 1 394 22 is_stmt 0 discriminator 2 view .LVU199
 777 0016 0021     		movs	r1, #0
 778 0018 2846     		mov	r0, r5
 779 001a FFF7FEFF 		bl	lv_obj_get_child_back
 780              	.LVL71:
 395:lvgl/src/lv_widgets/lv_list.c **** 
 781              		.loc 1 395 5 is_stmt 1 discriminator 2 view .LVU200
 395:lvgl/src/lv_widgets/lv_list.c **** 
 782              		.loc 1 395 7 is_stmt 0 discriminator 2 view .LVU201
 783 001e 0446     		mov	r4, r0
 784 0020 50B1     		cbz	r0, .L81
 785              	.L85:
 397:lvgl/src/lv_widgets/lv_list.c ****         img = lv_obj_get_child_back(btn, img);
 786              		.loc 1 397 11 view .LVU202
 787 0022 2046     		mov	r0, r4
 397:lvgl/src/lv_widgets/lv_list.c ****         img = lv_obj_get_child_back(btn, img);
 788              		.loc 1 397 11 view .LVU203
 789 0024 FFF7FEFF 		bl	lv_list_is_list_img
 790              	.LVL72:
 397:lvgl/src/lv_widgets/lv_list.c ****         img = lv_obj_get_child_back(btn, img);
 791              		.loc 1 397 10 view .LVU204
 792 0028 30B9     		cbnz	r0, .L81
 398:lvgl/src/lv_widgets/lv_list.c ****         if(img == NULL) break;
 793              		.loc 1 398 9 is_stmt 1 view .LVU205
 398:lvgl/src/lv_widgets/lv_list.c ****         if(img == NULL) break;
 794              		.loc 1 398 15 is_stmt 0 view .LVU206
 795 002a 2146     		mov	r1, r4
 796 002c 2846     		mov	r0, r5
 797 002e FFF7FEFF 		bl	lv_obj_get_child_back
 798              	.LVL73:
 399:lvgl/src/lv_widgets/lv_list.c ****     }
 799              		.loc 1 399 9 is_stmt 1 view .LVU207
 399:lvgl/src/lv_widgets/lv_list.c ****     }
 800              		.loc 1 399 11 is_stmt 0 view .LVU208
 801 0032 0446     		mov	r4, r0
 802 0034 0028     		cmp	r0, #0
 803 0036 F4D1     		bne	.L85
 804              	.LVL74:
 805              	.L81:
 406:lvgl/src/lv_widgets/lv_list.c **** 
 806              		.loc 1 406 1 view .LVU209
 807 0038 2046     		mov	r0, r4
 808 003a 38BD     		pop	{r3, r4, r5, pc}
 809              	.LVL75:
 810              	.L89:
 406:lvgl/src/lv_widgets/lv_list.c **** 
 811              		.loc 1 406 1 view .LVU210
 812              		.align	2
 813              	.L88:
 814 003c 00000000 		.word	.LC0
 815              		.cfi_endproc
 816              	.LFE498:
 818              		.section	.text.lv_list_get_prev_btn,"ax",%progbits
 819              		.align	1
ARM GAS  D:\Temp\cc6WWuOg.s 			page 34


 820              		.global	lv_list_get_prev_btn
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	lv_list_get_prev_btn:
 827              	.LVL76:
 828              	.LFB499:
 415:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 829              		.loc 1 415 1 is_stmt 1 view -0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 415:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 833              		.loc 1 415 1 is_stmt 0 view .LVU212
 834 0000 70B5     		push	{r4, r5, r6, lr}
 835              	.LCFI18:
 836              		.cfi_def_cfa_offset 16
 837              		.cfi_offset 4, -16
 838              		.cfi_offset 5, -12
 839              		.cfi_offset 6, -8
 840              		.cfi_offset 14, -4
 841 0002 0446     		mov	r4, r0
 842 0004 0D46     		mov	r5, r1
 416:lvgl/src/lv_widgets/lv_list.c **** 
 843              		.loc 1 416 5 is_stmt 1 view .LVU213
 416:lvgl/src/lv_widgets/lv_list.c **** 
 844              		.loc 1 416 5 view .LVU214
 845 0006 FFF7FEFF 		bl	lv_debug_check_null
 846              	.LVL77:
 416:lvgl/src/lv_widgets/lv_list.c **** 
 847              		.loc 1 416 5 is_stmt 0 view .LVU215
 848 000a 28B9     		cbnz	r0, .L91
 416:lvgl/src/lv_widgets/lv_list.c **** 
 849              		.loc 1 416 5 is_stmt 1 discriminator 1 view .LVU216
 416:lvgl/src/lv_widgets/lv_list.c **** 
 850              		.loc 1 416 5 discriminator 1 view .LVU217
 851 000c 2246     		mov	r2, r4
 852 000e 0023     		movs	r3, #0
 853 0010 0C48     		ldr	r0, .L97
 854 0012 FFF7FEFF 		bl	lv_debug_log_error
 855              	.LVL78:
 856              	.L92:
 416:lvgl/src/lv_widgets/lv_list.c **** 
 857              		.loc 1 416 5 discriminator 1 view .LVU218
 416:lvgl/src/lv_widgets/lv_list.c **** 
 858              		.loc 1 416 5 discriminator 1 view .LVU219
 859 0016 FEE7     		b	.L92
 860              	.L91:
 416:lvgl/src/lv_widgets/lv_list.c **** 
 861              		.loc 1 416 38 discriminator 2 view .LVU220
 421:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * scrl = lv_page_get_scrollable(list);
 862              		.loc 1 421 5 discriminator 2 view .LVU221
 422:lvgl/src/lv_widgets/lv_list.c **** 
 863              		.loc 1 422 5 discriminator 2 view .LVU222
 422:lvgl/src/lv_widgets/lv_list.c **** 
 864              		.loc 1 422 23 is_stmt 0 discriminator 2 view .LVU223
ARM GAS  D:\Temp\cc6WWuOg.s 			page 35


 865 0018 2046     		mov	r0, r4
 866 001a FFF7FEFF 		bl	lv_page_get_scrollable
 867              	.LVL79:
 868 001e 0646     		mov	r6, r0
 869              	.LVL80:
 424:lvgl/src/lv_widgets/lv_list.c ****     if(btn == NULL) return NULL;
 870              		.loc 1 424 5 is_stmt 1 discriminator 2 view .LVU224
 424:lvgl/src/lv_widgets/lv_list.c ****     if(btn == NULL) return NULL;
 871              		.loc 1 424 11 is_stmt 0 discriminator 2 view .LVU225
 872 0020 2946     		mov	r1, r5
 873 0022 FFF7FEFF 		bl	lv_obj_get_child
 874              	.LVL81:
 425:lvgl/src/lv_widgets/lv_list.c **** 
 875              		.loc 1 425 5 is_stmt 1 discriminator 2 view .LVU226
 425:lvgl/src/lv_widgets/lv_list.c **** 
 876              		.loc 1 425 7 is_stmt 0 discriminator 2 view .LVU227
 877 0026 0446     		mov	r4, r0
 878              	.LVL82:
 425:lvgl/src/lv_widgets/lv_list.c **** 
 879              		.loc 1 425 7 discriminator 2 view .LVU228
 880 0028 50B1     		cbz	r0, .L90
 881              	.L94:
 427:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_obj_get_child(scrl, btn);
 882              		.loc 1 427 11 view .LVU229
 883 002a 2046     		mov	r0, r4
 427:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_obj_get_child(scrl, btn);
 884              		.loc 1 427 11 view .LVU230
 885 002c FFF7FEFF 		bl	lv_list_is_list_btn
 886              	.LVL83:
 427:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_obj_get_child(scrl, btn);
 887              		.loc 1 427 10 view .LVU231
 888 0030 30B9     		cbnz	r0, .L90
 428:lvgl/src/lv_widgets/lv_list.c ****         if(btn == NULL) break;
 889              		.loc 1 428 9 is_stmt 1 view .LVU232
 428:lvgl/src/lv_widgets/lv_list.c ****         if(btn == NULL) break;
 890              		.loc 1 428 15 is_stmt 0 view .LVU233
 891 0032 2146     		mov	r1, r4
 892 0034 3046     		mov	r0, r6
 893 0036 FFF7FEFF 		bl	lv_obj_get_child
 894              	.LVL84:
 429:lvgl/src/lv_widgets/lv_list.c ****     }
 895              		.loc 1 429 9 is_stmt 1 view .LVU234
 429:lvgl/src/lv_widgets/lv_list.c ****     }
 896              		.loc 1 429 11 is_stmt 0 view .LVU235
 897 003a 0446     		mov	r4, r0
 898 003c 0028     		cmp	r0, #0
 899 003e F4D1     		bne	.L94
 900              	.LVL85:
 901              	.L90:
 433:lvgl/src/lv_widgets/lv_list.c **** 
 902              		.loc 1 433 1 view .LVU236
 903 0040 2046     		mov	r0, r4
 904 0042 70BD     		pop	{r4, r5, r6, pc}
 905              	.LVL86:
 906              	.L98:
 433:lvgl/src/lv_widgets/lv_list.c **** 
 907              		.loc 1 433 1 view .LVU237
ARM GAS  D:\Temp\cc6WWuOg.s 			page 36


 908              		.align	2
 909              	.L97:
 910 0044 00000000 		.word	.LC0
 911              		.cfi_endproc
 912              	.LFE499:
 914              		.section	.text.lv_list_get_next_btn,"ax",%progbits
 915              		.align	1
 916              		.global	lv_list_get_next_btn
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 920              		.fpu fpv4-sp-d16
 922              	lv_list_get_next_btn:
 923              	.LVL87:
 924              	.LFB500:
 442:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 925              		.loc 1 442 1 is_stmt 1 view -0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 442:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 929              		.loc 1 442 1 is_stmt 0 view .LVU239
 930 0000 70B5     		push	{r4, r5, r6, lr}
 931              	.LCFI19:
 932              		.cfi_def_cfa_offset 16
 933              		.cfi_offset 4, -16
 934              		.cfi_offset 5, -12
 935              		.cfi_offset 6, -8
 936              		.cfi_offset 14, -4
 937 0002 0446     		mov	r4, r0
 938 0004 0D46     		mov	r5, r1
 443:lvgl/src/lv_widgets/lv_list.c **** 
 939              		.loc 1 443 5 is_stmt 1 view .LVU240
 443:lvgl/src/lv_widgets/lv_list.c **** 
 940              		.loc 1 443 5 view .LVU241
 941 0006 FFF7FEFF 		bl	lv_debug_check_null
 942              	.LVL88:
 443:lvgl/src/lv_widgets/lv_list.c **** 
 943              		.loc 1 443 5 is_stmt 0 view .LVU242
 944 000a 28B9     		cbnz	r0, .L100
 443:lvgl/src/lv_widgets/lv_list.c **** 
 945              		.loc 1 443 5 is_stmt 1 discriminator 1 view .LVU243
 443:lvgl/src/lv_widgets/lv_list.c **** 
 946              		.loc 1 443 5 discriminator 1 view .LVU244
 947 000c 2246     		mov	r2, r4
 948 000e 0023     		movs	r3, #0
 949 0010 0C48     		ldr	r0, .L106
 950 0012 FFF7FEFF 		bl	lv_debug_log_error
 951              	.LVL89:
 952              	.L101:
 443:lvgl/src/lv_widgets/lv_list.c **** 
 953              		.loc 1 443 5 discriminator 1 view .LVU245
 443:lvgl/src/lv_widgets/lv_list.c **** 
 954              		.loc 1 443 5 discriminator 1 view .LVU246
 955 0016 FEE7     		b	.L101
 956              	.L100:
 443:lvgl/src/lv_widgets/lv_list.c **** 
ARM GAS  D:\Temp\cc6WWuOg.s 			page 37


 957              		.loc 1 443 38 discriminator 2 view .LVU247
 448:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * scrl = lv_page_get_scrollable(list);
 958              		.loc 1 448 5 discriminator 2 view .LVU248
 449:lvgl/src/lv_widgets/lv_list.c **** 
 959              		.loc 1 449 5 discriminator 2 view .LVU249
 449:lvgl/src/lv_widgets/lv_list.c **** 
 960              		.loc 1 449 23 is_stmt 0 discriminator 2 view .LVU250
 961 0018 2046     		mov	r0, r4
 962 001a FFF7FEFF 		bl	lv_page_get_scrollable
 963              	.LVL90:
 964 001e 0646     		mov	r6, r0
 965              	.LVL91:
 451:lvgl/src/lv_widgets/lv_list.c ****     if(btn == NULL) return NULL;
 966              		.loc 1 451 5 is_stmt 1 discriminator 2 view .LVU251
 451:lvgl/src/lv_widgets/lv_list.c ****     if(btn == NULL) return NULL;
 967              		.loc 1 451 11 is_stmt 0 discriminator 2 view .LVU252
 968 0020 2946     		mov	r1, r5
 969 0022 FFF7FEFF 		bl	lv_obj_get_child_back
 970              	.LVL92:
 452:lvgl/src/lv_widgets/lv_list.c **** 
 971              		.loc 1 452 5 is_stmt 1 discriminator 2 view .LVU253
 452:lvgl/src/lv_widgets/lv_list.c **** 
 972              		.loc 1 452 7 is_stmt 0 discriminator 2 view .LVU254
 973 0026 0446     		mov	r4, r0
 974              	.LVL93:
 452:lvgl/src/lv_widgets/lv_list.c **** 
 975              		.loc 1 452 7 discriminator 2 view .LVU255
 976 0028 50B1     		cbz	r0, .L99
 977              	.L103:
 454:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_obj_get_child_back(scrl, btn);
 978              		.loc 1 454 11 view .LVU256
 979 002a 2046     		mov	r0, r4
 454:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_obj_get_child_back(scrl, btn);
 980              		.loc 1 454 11 view .LVU257
 981 002c FFF7FEFF 		bl	lv_list_is_list_btn
 982              	.LVL94:
 454:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_obj_get_child_back(scrl, btn);
 983              		.loc 1 454 10 view .LVU258
 984 0030 30B9     		cbnz	r0, .L99
 455:lvgl/src/lv_widgets/lv_list.c ****         if(btn == NULL) break;
 985              		.loc 1 455 9 is_stmt 1 view .LVU259
 455:lvgl/src/lv_widgets/lv_list.c ****         if(btn == NULL) break;
 986              		.loc 1 455 15 is_stmt 0 view .LVU260
 987 0032 2146     		mov	r1, r4
 988 0034 3046     		mov	r0, r6
 989 0036 FFF7FEFF 		bl	lv_obj_get_child_back
 990              	.LVL95:
 456:lvgl/src/lv_widgets/lv_list.c ****     }
 991              		.loc 1 456 9 is_stmt 1 view .LVU261
 456:lvgl/src/lv_widgets/lv_list.c ****     }
 992              		.loc 1 456 11 is_stmt 0 view .LVU262
 993 003a 0446     		mov	r4, r0
 994 003c 0028     		cmp	r0, #0
 995 003e F4D1     		bne	.L103
 996              	.LVL96:
 997              	.L99:
 460:lvgl/src/lv_widgets/lv_list.c **** 
ARM GAS  D:\Temp\cc6WWuOg.s 			page 38


 998              		.loc 1 460 1 view .LVU263
 999 0040 2046     		mov	r0, r4
 1000 0042 70BD     		pop	{r4, r5, r6, pc}
 1001              	.LVL97:
 1002              	.L107:
 460:lvgl/src/lv_widgets/lv_list.c **** 
 1003              		.loc 1 460 1 view .LVU264
 1004              		.align	2
 1005              	.L106:
 1006 0044 00000000 		.word	.LC0
 1007              		.cfi_endproc
 1008              	.LFE500:
 1010              		.section	.text.lv_list_signal,"ax",%progbits
 1011              		.align	1
 1012              		.syntax unified
 1013              		.thumb
 1014              		.thumb_func
 1015              		.fpu fpv4-sp-d16
 1017              	lv_list_signal:
 1018              	.LVL98:
 1019              	.LFB508:
 646:lvgl/src/lv_widgets/lv_list.c ****     lv_res_t res;
 1020              		.loc 1 646 1 is_stmt 1 view -0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 646:lvgl/src/lv_widgets/lv_list.c ****     lv_res_t res;
 1024              		.loc 1 646 1 is_stmt 0 view .LVU266
 1025 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1026              	.LCFI20:
 1027              		.cfi_def_cfa_offset 24
 1028              		.cfi_offset 4, -24
 1029              		.cfi_offset 5, -20
 1030              		.cfi_offset 6, -16
 1031              		.cfi_offset 7, -12
 1032              		.cfi_offset 8, -8
 1033              		.cfi_offset 14, -4
 1034 0004 0746     		mov	r7, r0
 1035 0006 0C46     		mov	r4, r1
 1036 0008 1646     		mov	r6, r2
 647:lvgl/src/lv_widgets/lv_list.c ****     if(sign == LV_SIGNAL_GET_STYLE) {
 1037              		.loc 1 647 5 is_stmt 1 view .LVU267
 648:lvgl/src/lv_widgets/lv_list.c ****         lv_get_style_info_t * info = param;
 1038              		.loc 1 648 5 view .LVU268
 648:lvgl/src/lv_widgets/lv_list.c ****         lv_get_style_info_t * info = param;
 1039              		.loc 1 648 7 is_stmt 0 view .LVU269
 1040 000a 0829     		cmp	r1, #8
 1041 000c 35D0     		beq	.L135
 656:lvgl/src/lv_widgets/lv_list.c ****     if(res != LV_RES_OK) return res;
 1042              		.loc 1 656 5 is_stmt 1 view .LVU270
 656:lvgl/src/lv_widgets/lv_list.c ****     if(res != LV_RES_OK) return res;
 1043              		.loc 1 656 11 is_stmt 0 view .LVU271
 1044 000e 984B     		ldr	r3, .L148
 1045 0010 1B68     		ldr	r3, [r3]
 1046 0012 9847     		blx	r3
 1047              	.LVL99:
 656:lvgl/src/lv_widgets/lv_list.c ****     if(res != LV_RES_OK) return res;
ARM GAS  D:\Temp\cc6WWuOg.s 			page 39


 1048              		.loc 1 656 11 view .LVU272
 1049 0014 0546     		mov	r5, r0
 1050              	.LVL100:
 657:lvgl/src/lv_widgets/lv_list.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 1051              		.loc 1 657 5 is_stmt 1 view .LVU273
 657:lvgl/src/lv_widgets/lv_list.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 1052              		.loc 1 657 7 is_stmt 0 view .LVU274
 1053 0016 0128     		cmp	r0, #1
 1054 0018 4DD1     		bne	.L110
 658:lvgl/src/lv_widgets/lv_list.c **** 
 1055              		.loc 1 658 5 is_stmt 1 view .LVU275
 658:lvgl/src/lv_widgets/lv_list.c **** 
 1056              		.loc 1 658 7 is_stmt 0 view .LVU276
 1057 001a 072C     		cmp	r4, #7
 1058 001c 3CD0     		beq	.L136
 660:lvgl/src/lv_widgets/lv_list.c ****        sign == LV_SIGNAL_LONG_PRESS || sign == LV_SIGNAL_LONG_PRESS_REP) {
 1059              		.loc 1 660 5 is_stmt 1 view .LVU277
 660:lvgl/src/lv_widgets/lv_list.c ****        sign == LV_SIGNAL_LONG_PRESS || sign == LV_SIGNAL_LONG_PRESS_REP) {
 1060              		.loc 1 660 7 is_stmt 0 view .LVU278
 1061 001e 0E2C     		cmp	r4, #14
 1062 0020 40D0     		beq	.L112
 660:lvgl/src/lv_widgets/lv_list.c ****        sign == LV_SIGNAL_LONG_PRESS || sign == LV_SIGNAL_LONG_PRESS_REP) {
 1063              		.loc 1 660 35 discriminator 1 view .LVU279
 1064 0022 0B2C     		cmp	r4, #11
 1065 0024 3ED0     		beq	.L112
 660:lvgl/src/lv_widgets/lv_list.c ****        sign == LV_SIGNAL_LONG_PRESS || sign == LV_SIGNAL_LONG_PRESS_REP) {
 1066              		.loc 1 660 64 discriminator 2 view .LVU280
 1067 0026 0C2C     		cmp	r4, #12
 1068 0028 3CD0     		beq	.L112
 660:lvgl/src/lv_widgets/lv_list.c ****        sign == LV_SIGNAL_LONG_PRESS || sign == LV_SIGNAL_LONG_PRESS_REP) {
 1069              		.loc 1 660 94 discriminator 3 view .LVU281
 1070 002a 0F2C     		cmp	r4, #15
 1071 002c 3AD0     		beq	.L112
 661:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 1072              		.loc 1 661 37 view .LVU282
 1073 002e 102C     		cmp	r4, #16
 1074 0030 38D0     		beq	.L112
 708:lvgl/src/lv_widgets/lv_list.c **** 
 1075              		.loc 1 708 10 is_stmt 1 view .LVU283
 708:lvgl/src/lv_widgets/lv_list.c **** 
 1076              		.loc 1 708 12 is_stmt 0 view .LVU284
 1077 0032 162C     		cmp	r4, #22
 1078 0034 00F09D80 		beq	.L137
 728:lvgl/src/lv_widgets/lv_list.c **** 
 1079              		.loc 1 728 10 is_stmt 1 view .LVU285
 728:lvgl/src/lv_widgets/lv_list.c **** 
 1080              		.loc 1 728 12 is_stmt 0 view .LVU286
 1081 0038 172C     		cmp	r4, #23
 1082 003a 00F0D480 		beq	.L138
 737:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 1083              		.loc 1 737 10 is_stmt 1 view .LVU287
 737:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 1084              		.loc 1 737 12 is_stmt 0 view .LVU288
 1085 003e 192C     		cmp	r4, #25
 1086 0040 00F0DB80 		beq	.L139
 743:lvgl/src/lv_widgets/lv_list.c **** 
 1087              		.loc 1 743 10 is_stmt 1 view .LVU289
ARM GAS  D:\Temp\cc6WWuOg.s 			page 40


 743:lvgl/src/lv_widgets/lv_list.c **** 
 1088              		.loc 1 743 12 is_stmt 0 view .LVU290
 1089 0044 182C     		cmp	r4, #24
 1090 0046 36D1     		bne	.L110
 1091              	.LBB91:
 746:lvgl/src/lv_widgets/lv_list.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_DOWN) {
 1092              		.loc 1 746 9 is_stmt 1 view .LVU291
 746:lvgl/src/lv_widgets/lv_list.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_DOWN) {
 1093              		.loc 1 746 14 is_stmt 0 view .LVU292
 1094 0048 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 1095              	.LVL101:
 747:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1096              		.loc 1 747 9 is_stmt 1 view .LVU293
 747:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1097              		.loc 1 747 30 is_stmt 0 view .LVU294
 1098 004a A2F11203 		sub	r3, r2, #18
 1099 004e DBB2     		uxtb	r3, r3
 747:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1100              		.loc 1 747 11 view .LVU295
 1101 0050 012B     		cmp	r3, #1
 1102 0052 40F2D580 		bls	.L140
 762:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1103              		.loc 1 762 14 is_stmt 1 view .LVU296
 762:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1104              		.loc 1 762 16 is_stmt 0 view .LVU297
 1105 0056 142A     		cmp	r2, #20
 1106 0058 00F0EE80 		beq	.L130
 762:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1107              		.loc 1 762 34 discriminator 1 view .LVU298
 1108 005c 112A     		cmp	r2, #17
 1109 005e 00F0EB80 		beq	.L130
 775:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1110              		.loc 1 775 14 is_stmt 1 view .LVU299
 775:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1111              		.loc 1 775 16 is_stmt 0 view .LVU300
 1112 0062 1B2A     		cmp	r2, #27
 1113 0064 27D1     		bne	.L110
 1114              	.LBB92:
 776:lvgl/src/lv_widgets/lv_list.c ****             /* Handle ESC/Cancel event */
 1115              		.loc 1 776 13 is_stmt 1 view .LVU301
 776:lvgl/src/lv_widgets/lv_list.c ****             /* Handle ESC/Cancel event */
 1116              		.loc 1 776 35 is_stmt 0 view .LVU302
 1117 0066 3846     		mov	r0, r7
 1118              	.LVL102:
 776:lvgl/src/lv_widgets/lv_list.c ****             /* Handle ESC/Cancel event */
 1119              		.loc 1 776 35 view .LVU303
 1120 0068 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1121              	.LVL103:
 778:lvgl/src/lv_widgets/lv_list.c ****         }
 1122              		.loc 1 778 13 is_stmt 1 view .LVU304
 778:lvgl/src/lv_widgets/lv_list.c ****         }
 1123              		.loc 1 778 19 is_stmt 0 view .LVU305
 1124 006c 0022     		movs	r2, #0
 1125 006e 1421     		movs	r1, #20
 1126 0070 406C     		ldr	r0, [r0, #68]
 1127              	.LVL104:
 778:lvgl/src/lv_widgets/lv_list.c ****         }
ARM GAS  D:\Temp\cc6WWuOg.s 			page 41


 1128              		.loc 1 778 19 view .LVU306
 1129 0072 FFF7FEFF 		bl	lv_event_send
 1130              	.LVL105:
 1131 0076 0546     		mov	r5, r0
 1132              	.LVL106:
 778:lvgl/src/lv_widgets/lv_list.c ****         }
 1133              		.loc 1 778 19 view .LVU307
 1134 0078 1DE0     		b	.L110
 1135              	.LVL107:
 1136              	.L135:
 778:lvgl/src/lv_widgets/lv_list.c ****         }
 1137              		.loc 1 778 19 view .LVU308
 1138              	.LBE92:
 1139              	.LBE91:
 1140              	.LBB99:
 649:lvgl/src/lv_widgets/lv_list.c ****         info->result = lv_list_get_style(list, info->part);
 1141              		.loc 1 649 9 is_stmt 1 view .LVU309
 650:lvgl/src/lv_widgets/lv_list.c ****         if(info->result != NULL) return LV_RES_OK;
 1142              		.loc 1 650 9 view .LVU310
 650:lvgl/src/lv_widgets/lv_list.c ****         if(info->result != NULL) return LV_RES_OK;
 1143              		.loc 1 650 24 is_stmt 0 view .LVU311
 1144 007a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1145              	.LVL108:
 650:lvgl/src/lv_widgets/lv_list.c ****         if(info->result != NULL) return LV_RES_OK;
 1146              		.loc 1 650 24 view .LVU312
 1147 007c FFF7FEFF 		bl	lv_list_get_style
 1148              	.LVL109:
 650:lvgl/src/lv_widgets/lv_list.c ****         if(info->result != NULL) return LV_RES_OK;
 1149              		.loc 1 650 22 view .LVU313
 1150 0080 7060     		str	r0, [r6, #4]
 651:lvgl/src/lv_widgets/lv_list.c ****         else return ancestor_page_signal(list, sign, param);
 1151              		.loc 1 651 9 is_stmt 1 view .LVU314
 651:lvgl/src/lv_widgets/lv_list.c ****         else return ancestor_page_signal(list, sign, param);
 1152              		.loc 1 651 11 is_stmt 0 view .LVU315
 1153 0082 08B1     		cbz	r0, .L141
 651:lvgl/src/lv_widgets/lv_list.c ****         else return ancestor_page_signal(list, sign, param);
 1154              		.loc 1 651 41 view .LVU316
 1155 0084 0125     		movs	r5, #1
 1156 0086 16E0     		b	.L110
 1157              	.L141:
 652:lvgl/src/lv_widgets/lv_list.c ****     }
 1158              		.loc 1 652 14 is_stmt 1 view .LVU317
 652:lvgl/src/lv_widgets/lv_list.c ****     }
 1159              		.loc 1 652 21 is_stmt 0 view .LVU318
 1160 0088 794B     		ldr	r3, .L148
 1161 008a 1B68     		ldr	r3, [r3]
 1162 008c 3246     		mov	r2, r6
 1163 008e 2146     		mov	r1, r4
 1164 0090 3846     		mov	r0, r7
 1165 0092 9847     		blx	r3
 1166              	.LVL110:
 1167 0094 0546     		mov	r5, r0
 1168 0096 0EE0     		b	.L110
 1169              	.LVL111:
 1170              	.L136:
 652:lvgl/src/lv_widgets/lv_list.c ****     }
 1171              		.loc 1 652 21 view .LVU319
ARM GAS  D:\Temp\cc6WWuOg.s 			page 42


 1172              	.LBE99:
 658:lvgl/src/lv_widgets/lv_list.c **** 
 1173              		.loc 1 658 36 is_stmt 1 discriminator 1 view .LVU320
 658:lvgl/src/lv_widgets/lv_list.c **** 
 1174              		.loc 1 658 43 is_stmt 0 discriminator 1 view .LVU321
 1175 0098 7649     		ldr	r1, .L148+4
 1176 009a 3046     		mov	r0, r6
 1177              	.LVL112:
 658:lvgl/src/lv_widgets/lv_list.c **** 
 1178              		.loc 1 658 43 discriminator 1 view .LVU322
 1179 009c FFF7FEFF 		bl	lv_obj_handle_get_type_signal
 1180              	.LVL113:
 1181 00a0 0546     		mov	r5, r0
 1182 00a2 08E0     		b	.L110
 1183              	.LVL114:
 1184              	.L112:
 1185              	.LBB100:
 664:lvgl/src/lv_widgets/lv_list.c ****         lv_indev_type_t indev_type = lv_indev_get_type(indev);
 1186              		.loc 1 664 9 is_stmt 1 view .LVU323
 664:lvgl/src/lv_widgets/lv_list.c ****         lv_indev_type_t indev_type = lv_indev_get_type(indev);
 1187              		.loc 1 664 38 is_stmt 0 view .LVU324
 1188 00a4 FFF7FEFF 		bl	lv_indev_get_act
 1189              	.LVL115:
 664:lvgl/src/lv_widgets/lv_list.c ****         lv_indev_type_t indev_type = lv_indev_get_type(indev);
 1190              		.loc 1 664 38 view .LVU325
 1191 00a8 8046     		mov	r8, r0
 1192              	.LVL116:
 665:lvgl/src/lv_widgets/lv_list.c ****         if(indev_type == LV_INDEV_TYPE_KEYPAD ||
 1193              		.loc 1 665 9 is_stmt 1 view .LVU326
 665:lvgl/src/lv_widgets/lv_list.c ****         if(indev_type == LV_INDEV_TYPE_KEYPAD ||
 1194              		.loc 1 665 38 is_stmt 0 view .LVU327
 1195 00aa FFF7FEFF 		bl	lv_indev_get_type
 1196              	.LVL117:
 666:lvgl/src/lv_widgets/lv_list.c ****            (indev_type == LV_INDEV_TYPE_ENCODER && lv_group_get_editing(lv_obj_get_group(list)))) {
 1197              		.loc 1 666 9 is_stmt 1 view .LVU328
 666:lvgl/src/lv_widgets/lv_list.c ****            (indev_type == LV_INDEV_TYPE_ENCODER && lv_group_get_editing(lv_obj_get_group(list)))) {
 1198              		.loc 1 666 11 is_stmt 0 view .LVU329
 1199 00ae 0228     		cmp	r0, #2
 1200 00b0 0BD0     		beq	.L114
 666:lvgl/src/lv_widgets/lv_list.c ****            (indev_type == LV_INDEV_TYPE_ENCODER && lv_group_get_editing(lv_obj_get_group(list)))) {
 1201              		.loc 1 666 47 discriminator 1 view .LVU330
 1202 00b2 0428     		cmp	r0, #4
 1203 00b4 02D0     		beq	.L142
 1204              	.LVL118:
 1205              	.L110:
 666:lvgl/src/lv_widgets/lv_list.c ****            (indev_type == LV_INDEV_TYPE_ENCODER && lv_group_get_editing(lv_obj_get_group(list)))) {
 1206              		.loc 1 666 47 discriminator 1 view .LVU331
 1207              	.LBE100:
 783:lvgl/src/lv_widgets/lv_list.c **** 
 1208              		.loc 1 783 1 view .LVU332
 1209 00b6 2846     		mov	r0, r5
 1210 00b8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1211              	.LVL119:
 1212              	.L142:
 1213              	.LBB102:
 667:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1214              		.loc 1 667 73 view .LVU333
ARM GAS  D:\Temp\cc6WWuOg.s 			page 43


 1215 00bc 3846     		mov	r0, r7
 1216              	.LVL120:
 667:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1217              		.loc 1 667 73 view .LVU334
 1218 00be FFF7FEFF 		bl	lv_obj_get_group
 1219              	.LVL121:
 667:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1220              		.loc 1 667 52 view .LVU335
 1221 00c2 FFF7FEFF 		bl	lv_group_get_editing
 1222              	.LVL122:
 667:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1223              		.loc 1 667 49 view .LVU336
 1224 00c6 0028     		cmp	r0, #0
 1225 00c8 F5D0     		beq	.L110
 1226              	.L114:
 1227              	.LBB101:
 668:lvgl/src/lv_widgets/lv_list.c **** 
 1228              		.loc 1 668 13 is_stmt 1 view .LVU337
 668:lvgl/src/lv_widgets/lv_list.c **** 
 1229              		.loc 1 668 35 is_stmt 0 view .LVU338
 1230 00ca 3846     		mov	r0, r7
 1231 00cc FFF7FEFF 		bl	lv_obj_get_ext_attr
 1232              	.LVL123:
 1233 00d0 0746     		mov	r7, r0
 1234              	.LVL124:
 672:lvgl/src/lv_widgets/lv_list.c ****                 res = lv_signal_send(ext->act_sel_btn, sign, param);
 1235              		.loc 1 672 13 is_stmt 1 view .LVU339
 672:lvgl/src/lv_widgets/lv_list.c ****                 res = lv_signal_send(ext->act_sel_btn, sign, param);
 1236              		.loc 1 672 19 is_stmt 0 view .LVU340
 1237 00d2 406C     		ldr	r0, [r0, #68]
 1238              	.LVL125:
 672:lvgl/src/lv_widgets/lv_list.c ****                 res = lv_signal_send(ext->act_sel_btn, sign, param);
 1239              		.loc 1 672 15 view .LVU341
 1240 00d4 0028     		cmp	r0, #0
 1241 00d6 EED0     		beq	.L110
 673:lvgl/src/lv_widgets/lv_list.c ****                 if(res != LV_RES_OK) return res;
 1242              		.loc 1 673 17 is_stmt 1 view .LVU342
 673:lvgl/src/lv_widgets/lv_list.c ****                 if(res != LV_RES_OK) return res;
 1243              		.loc 1 673 23 is_stmt 0 view .LVU343
 1244 00d8 3246     		mov	r2, r6
 1245 00da 2146     		mov	r1, r4
 1246 00dc FFF7FEFF 		bl	lv_signal_send
 1247              	.LVL126:
 1248 00e0 0546     		mov	r5, r0
 1249              	.LVL127:
 674:lvgl/src/lv_widgets/lv_list.c ****                 if(sign == LV_SIGNAL_PRESSED) {
 1250              		.loc 1 674 17 is_stmt 1 view .LVU344
 674:lvgl/src/lv_widgets/lv_list.c ****                 if(sign == LV_SIGNAL_PRESSED) {
 1251              		.loc 1 674 19 is_stmt 0 view .LVU345
 1252 00e2 0128     		cmp	r0, #1
 1253 00e4 E7D1     		bne	.L110
 675:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_PRESSED, NULL);
 1254              		.loc 1 675 17 is_stmt 1 view .LVU346
 675:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_PRESSED, NULL);
 1255              		.loc 1 675 19 is_stmt 0 view .LVU347
 1256 00e6 0B2C     		cmp	r4, #11
 1257 00e8 27D0     		beq	.L143
ARM GAS  D:\Temp\cc6WWuOg.s 			page 44


 679:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_PRESSING, NULL);
 1258              		.loc 1 679 22 is_stmt 1 view .LVU348
 679:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_PRESSING, NULL);
 1259              		.loc 1 679 24 is_stmt 0 view .LVU349
 1260 00ea 0C2C     		cmp	r4, #12
 1261 00ec 2CD0     		beq	.L144
 683:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_LONG_PRESSED, NULL);
 1262              		.loc 1 683 22 is_stmt 1 view .LVU350
 683:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_LONG_PRESSED, NULL);
 1263              		.loc 1 683 24 is_stmt 0 view .LVU351
 1264 00ee 0F2C     		cmp	r4, #15
 1265 00f0 31D0     		beq	.L145
 687:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 1266              		.loc 1 687 22 is_stmt 1 view .LVU352
 687:lvgl/src/lv_widgets/lv_list.c ****                     res = lv_event_send(ext->act_sel_btn, LV_EVENT_LONG_PRESSED_REPEAT, NULL);
 1267              		.loc 1 687 24 is_stmt 0 view .LVU353
 1268 00f2 102C     		cmp	r4, #16
 1269 00f4 36D0     		beq	.L146
 691:lvgl/src/lv_widgets/lv_list.c ****                     if(indev->proc.long_pr_sent == 0) {
 1270              		.loc 1 691 22 is_stmt 1 view .LVU354
 691:lvgl/src/lv_widgets/lv_list.c ****                     if(indev->proc.long_pr_sent == 0) {
 1271              		.loc 1 691 24 is_stmt 0 view .LVU355
 1272 00f6 0E2C     		cmp	r4, #14
 1273 00f8 DDD1     		bne	.L110
 692:lvgl/src/lv_widgets/lv_list.c ****                         res = lv_event_send(ext->act_sel_btn, LV_EVENT_SHORT_CLICKED, NULL);
 1274              		.loc 1 692 21 is_stmt 1 view .LVU356
 692:lvgl/src/lv_widgets/lv_list.c ****                         res = lv_event_send(ext->act_sel_btn, LV_EVENT_SHORT_CLICKED, NULL);
 1275              		.loc 1 692 49 is_stmt 0 view .LVU357
 1276 00fa 98F85030 		ldrb	r3, [r8, #80]	@ zero_extendqisi2
 692:lvgl/src/lv_widgets/lv_list.c ****                         res = lv_event_send(ext->act_sel_btn, LV_EVENT_SHORT_CLICKED, NULL);
 1277              		.loc 1 692 23 view .LVU358
 1278 00fe 13F0010F 		tst	r3, #1
 1279 0102 07D1     		bne	.L119
 693:lvgl/src/lv_widgets/lv_list.c ****                         if(res != LV_RES_OK) return res;
 1280              		.loc 1 693 25 is_stmt 1 view .LVU359
 693:lvgl/src/lv_widgets/lv_list.c ****                         if(res != LV_RES_OK) return res;
 1281              		.loc 1 693 31 is_stmt 0 view .LVU360
 1282 0104 0022     		movs	r2, #0
 1283 0106 0321     		movs	r1, #3
 1284 0108 786C     		ldr	r0, [r7, #68]
 1285              	.LVL128:
 693:lvgl/src/lv_widgets/lv_list.c ****                         if(res != LV_RES_OK) return res;
 1286              		.loc 1 693 31 view .LVU361
 1287 010a FFF7FEFF 		bl	lv_event_send
 1288              	.LVL129:
 1289 010e 0546     		mov	r5, r0
 1290              	.LVL130:
 694:lvgl/src/lv_widgets/lv_list.c ****                     }
 1291              		.loc 1 694 25 is_stmt 1 view .LVU362
 694:lvgl/src/lv_widgets/lv_list.c ****                     }
 1292              		.loc 1 694 27 is_stmt 0 view .LVU363
 1293 0110 0128     		cmp	r0, #1
 1294 0112 D0D1     		bne	.L110
 1295              	.L119:
 696:lvgl/src/lv_widgets/lv_list.c ****                         res = lv_event_send(ext->act_sel_btn, LV_EVENT_CLICKED, NULL);
 1296              		.loc 1 696 21 is_stmt 1 view .LVU364
 696:lvgl/src/lv_widgets/lv_list.c ****                         res = lv_event_send(ext->act_sel_btn, LV_EVENT_CLICKED, NULL);
ARM GAS  D:\Temp\cc6WWuOg.s 			page 45


 1297              		.loc 1 696 24 is_stmt 0 view .LVU365
 1298 0114 4046     		mov	r0, r8
 1299              	.LVL131:
 696:lvgl/src/lv_widgets/lv_list.c ****                         res = lv_event_send(ext->act_sel_btn, LV_EVENT_CLICKED, NULL);
 1300              		.loc 1 696 24 view .LVU366
 1301 0116 FFF7FEFF 		bl	lv_indev_is_dragging
 1302              	.LVL132:
 696:lvgl/src/lv_widgets/lv_list.c ****                         res = lv_event_send(ext->act_sel_btn, LV_EVENT_CLICKED, NULL);
 1303              		.loc 1 696 23 view .LVU367
 1304 011a 38B9     		cbnz	r0, .L120
 697:lvgl/src/lv_widgets/lv_list.c ****                         if(res != LV_RES_OK) return res;
 1305              		.loc 1 697 25 is_stmt 1 view .LVU368
 697:lvgl/src/lv_widgets/lv_list.c ****                         if(res != LV_RES_OK) return res;
 1306              		.loc 1 697 31 is_stmt 0 view .LVU369
 1307 011c 0022     		movs	r2, #0
 1308 011e 0621     		movs	r1, #6
 1309 0120 786C     		ldr	r0, [r7, #68]
 1310 0122 FFF7FEFF 		bl	lv_event_send
 1311              	.LVL133:
 1312 0126 0546     		mov	r5, r0
 1313              	.LVL134:
 698:lvgl/src/lv_widgets/lv_list.c ****                     }
 1314              		.loc 1 698 25 is_stmt 1 view .LVU370
 698:lvgl/src/lv_widgets/lv_list.c ****                     }
 1315              		.loc 1 698 27 is_stmt 0 view .LVU371
 1316 0128 0128     		cmp	r0, #1
 1317 012a C4D1     		bne	.L110
 1318              	.LVL135:
 1319              	.L120:
 701:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1320              		.loc 1 701 21 is_stmt 1 view .LVU372
 701:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1321              		.loc 1 701 27 is_stmt 0 view .LVU373
 1322 012c 0022     		movs	r2, #0
 1323 012e 0721     		movs	r1, #7
 1324 0130 786C     		ldr	r0, [r7, #68]
 1325 0132 FFF7FEFF 		bl	lv_event_send
 1326              	.LVL136:
 1327 0136 0546     		mov	r5, r0
 1328              	.LVL137:
 702:lvgl/src/lv_widgets/lv_list.c ****                 }
 1329              		.loc 1 702 21 is_stmt 1 view .LVU374
 1330 0138 BDE7     		b	.L110
 1331              	.LVL138:
 1332              	.L143:
 676:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1333              		.loc 1 676 21 view .LVU375
 676:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1334              		.loc 1 676 27 is_stmt 0 view .LVU376
 1335 013a 0022     		movs	r2, #0
 1336 013c 1146     		mov	r1, r2
 1337 013e 786C     		ldr	r0, [r7, #68]
 1338              	.LVL139:
 676:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1339              		.loc 1 676 27 view .LVU377
 1340 0140 FFF7FEFF 		bl	lv_event_send
 1341              	.LVL140:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 46


 1342 0144 0546     		mov	r5, r0
 1343              	.LVL141:
 677:lvgl/src/lv_widgets/lv_list.c ****                 }
 1344              		.loc 1 677 21 is_stmt 1 view .LVU378
 1345 0146 B6E7     		b	.L110
 1346              	.LVL142:
 1347              	.L144:
 680:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1348              		.loc 1 680 21 view .LVU379
 680:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1349              		.loc 1 680 27 is_stmt 0 view .LVU380
 1350 0148 0022     		movs	r2, #0
 1351 014a 0121     		movs	r1, #1
 1352 014c 786C     		ldr	r0, [r7, #68]
 1353              	.LVL143:
 680:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1354              		.loc 1 680 27 view .LVU381
 1355 014e FFF7FEFF 		bl	lv_event_send
 1356              	.LVL144:
 1357 0152 0546     		mov	r5, r0
 1358              	.LVL145:
 681:lvgl/src/lv_widgets/lv_list.c ****                 }
 1359              		.loc 1 681 21 is_stmt 1 view .LVU382
 1360 0154 AFE7     		b	.L110
 1361              	.LVL146:
 1362              	.L145:
 684:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1363              		.loc 1 684 21 view .LVU383
 684:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1364              		.loc 1 684 27 is_stmt 0 view .LVU384
 1365 0156 0022     		movs	r2, #0
 1366 0158 0421     		movs	r1, #4
 1367 015a 786C     		ldr	r0, [r7, #68]
 1368              	.LVL147:
 684:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1369              		.loc 1 684 27 view .LVU385
 1370 015c FFF7FEFF 		bl	lv_event_send
 1371              	.LVL148:
 1372 0160 0546     		mov	r5, r0
 1373              	.LVL149:
 685:lvgl/src/lv_widgets/lv_list.c ****                 }
 1374              		.loc 1 685 21 is_stmt 1 view .LVU386
 1375 0162 A8E7     		b	.L110
 1376              	.LVL150:
 1377              	.L146:
 688:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1378              		.loc 1 688 21 view .LVU387
 688:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1379              		.loc 1 688 27 is_stmt 0 view .LVU388
 1380 0164 0022     		movs	r2, #0
 1381 0166 0521     		movs	r1, #5
 1382 0168 786C     		ldr	r0, [r7, #68]
 1383              	.LVL151:
 688:lvgl/src/lv_widgets/lv_list.c ****                     if(res != LV_RES_OK) return res;
 1384              		.loc 1 688 27 view .LVU389
 1385 016a FFF7FEFF 		bl	lv_event_send
 1386              	.LVL152:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 47


 1387 016e 0546     		mov	r5, r0
 1388              	.LVL153:
 689:lvgl/src/lv_widgets/lv_list.c ****                 }
 1389              		.loc 1 689 21 is_stmt 1 view .LVU390
 1390 0170 A1E7     		b	.L110
 1391              	.LVL154:
 1392              	.L137:
 689:lvgl/src/lv_widgets/lv_list.c ****                 }
 1393              		.loc 1 689 21 is_stmt 0 view .LVU391
 1394              	.LBE101:
 1395              	.LBE102:
 1396              	.LBB103:
 711:lvgl/src/lv_widgets/lv_list.c ****         /*With ENCODER focus the button only in edit mode*/
 1397              		.loc 1 711 9 is_stmt 1 view .LVU392
 711:lvgl/src/lv_widgets/lv_list.c ****         /*With ENCODER focus the button only in edit mode*/
 1398              		.loc 1 711 56 is_stmt 0 view .LVU393
 1399 0172 FFF7FEFF 		bl	lv_indev_get_act
 1400              	.LVL155:
 711:lvgl/src/lv_widgets/lv_list.c ****         /*With ENCODER focus the button only in edit mode*/
 1401              		.loc 1 711 38 view .LVU394
 1402 0176 FFF7FEFF 		bl	lv_indev_get_type
 1403              	.LVL156:
 1404 017a 0446     		mov	r4, r0
 1405              	.LVL157:
 713:lvgl/src/lv_widgets/lv_list.c ****         if((indev_type == LV_INDEV_TYPE_KEYPAD) ||
 1406              		.loc 1 713 9 is_stmt 1 view .LVU395
 713:lvgl/src/lv_widgets/lv_list.c ****         if((indev_type == LV_INDEV_TYPE_KEYPAD) ||
 1407              		.loc 1 713 26 is_stmt 0 view .LVU396
 1408 017c 3846     		mov	r0, r7
 1409 017e FFF7FEFF 		bl	lv_obj_get_group
 1410              	.LVL158:
 1411 0182 0646     		mov	r6, r0
 1412              	.LVL159:
 714:lvgl/src/lv_widgets/lv_list.c ****            (indev_type == LV_INDEV_TYPE_ENCODER && lv_group_get_editing(g))) {
 1413              		.loc 1 714 9 is_stmt 1 view .LVU397
 714:lvgl/src/lv_widgets/lv_list.c ****            (indev_type == LV_INDEV_TYPE_ENCODER && lv_group_get_editing(g))) {
 1414              		.loc 1 714 11 is_stmt 0 view .LVU398
 1415 0184 022C     		cmp	r4, #2
 1416 0186 1CD0     		beq	.L122
 714:lvgl/src/lv_widgets/lv_list.c ****            (indev_type == LV_INDEV_TYPE_ENCODER && lv_group_get_editing(g))) {
 1417              		.loc 1 714 49 discriminator 1 view .LVU399
 1418 0188 042C     		cmp	r4, #4
 1419 018a 16D0     		beq	.L147
 1420              	.LVL160:
 1421              	.L123:
 721:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1422              		.loc 1 721 9 is_stmt 1 view .LVU400
 721:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1423              		.loc 1 721 11 is_stmt 0 view .LVU401
 1424 018c 042C     		cmp	r4, #4
 1425 018e 92D1     		bne	.L110
 721:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1426              		.loc 1 721 51 discriminator 1 view .LVU402
 1427 0190 3046     		mov	r0, r6
 1428 0192 FFF7FEFF 		bl	lv_group_get_editing
 1429              	.LVL161:
 721:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
ARM GAS  D:\Temp\cc6WWuOg.s 			page 48


 1430              		.loc 1 721 48 discriminator 1 view .LVU403
 1431 0196 0028     		cmp	r0, #0
 1432 0198 8DD1     		bne	.L110
 1433              	.LBB104:
 722:lvgl/src/lv_widgets/lv_list.c ****             if(ext->act_sel_btn) lv_obj_clear_state(ext->act_sel_btn, LV_STATE_PRESSED);
 1434              		.loc 1 722 13 is_stmt 1 view .LVU404
 722:lvgl/src/lv_widgets/lv_list.c ****             if(ext->act_sel_btn) lv_obj_clear_state(ext->act_sel_btn, LV_STATE_PRESSED);
 1435              		.loc 1 722 35 is_stmt 0 view .LVU405
 1436 019a 3846     		mov	r0, r7
 1437 019c FFF7FEFF 		bl	lv_obj_get_ext_attr
 1438              	.LVL162:
 1439 01a0 0446     		mov	r4, r0
 1440              	.LVL163:
 723:lvgl/src/lv_widgets/lv_list.c ****             if(ext->last_sel_btn) lv_obj_clear_state(ext->last_sel_btn, LV_STATE_PRESSED);
 1441              		.loc 1 723 13 is_stmt 1 view .LVU406
 723:lvgl/src/lv_widgets/lv_list.c ****             if(ext->last_sel_btn) lv_obj_clear_state(ext->last_sel_btn, LV_STATE_PRESSED);
 1442              		.loc 1 723 19 is_stmt 0 view .LVU407
 1443 01a2 406C     		ldr	r0, [r0, #68]
 1444              	.LVL164:
 723:lvgl/src/lv_widgets/lv_list.c ****             if(ext->last_sel_btn) lv_obj_clear_state(ext->last_sel_btn, LV_STATE_PRESSED);
 1445              		.loc 1 723 15 view .LVU408
 1446 01a4 10B1     		cbz	r0, .L125
 723:lvgl/src/lv_widgets/lv_list.c ****             if(ext->last_sel_btn) lv_obj_clear_state(ext->last_sel_btn, LV_STATE_PRESSED);
 1447              		.loc 1 723 34 is_stmt 1 discriminator 1 view .LVU409
 1448 01a6 1021     		movs	r1, #16
 1449 01a8 FFF7FEFF 		bl	lv_obj_clear_state
 1450              	.LVL165:
 1451              	.L125:
 724:lvgl/src/lv_widgets/lv_list.c ****         }
 1452              		.loc 1 724 13 view .LVU410
 724:lvgl/src/lv_widgets/lv_list.c ****         }
 1453              		.loc 1 724 19 is_stmt 0 view .LVU411
 1454 01ac 206C     		ldr	r0, [r4, #64]
 724:lvgl/src/lv_widgets/lv_list.c ****         }
 1455              		.loc 1 724 15 view .LVU412
 1456 01ae 0028     		cmp	r0, #0
 1457 01b0 81D0     		beq	.L110
 724:lvgl/src/lv_widgets/lv_list.c ****         }
 1458              		.loc 1 724 35 is_stmt 1 discriminator 1 view .LVU413
 1459 01b2 1021     		movs	r1, #16
 1460 01b4 FFF7FEFF 		bl	lv_obj_clear_state
 1461              	.LVL166:
 1462 01b8 7DE7     		b	.L110
 1463              	.LVL167:
 1464              	.L147:
 724:lvgl/src/lv_widgets/lv_list.c ****         }
 1465              		.loc 1 724 35 is_stmt 0 discriminator 1 view .LVU414
 1466              	.LBE104:
 715:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1467              		.loc 1 715 52 view .LVU415
 1468 01ba FFF7FEFF 		bl	lv_group_get_editing
 1469              	.LVL168:
 715:lvgl/src/lv_widgets/lv_list.c ****             lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1470              		.loc 1 715 49 view .LVU416
 1471 01be 0028     		cmp	r0, #0
 1472 01c0 E4D0     		beq	.L123
 1473              	.L122:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 49


 1474              	.LBB105:
 716:lvgl/src/lv_widgets/lv_list.c ****             /* Select the last used button, or use the first no last button */
 1475              		.loc 1 716 13 is_stmt 1 view .LVU417
 716:lvgl/src/lv_widgets/lv_list.c ****             /* Select the last used button, or use the first no last button */
 1476              		.loc 1 716 35 is_stmt 0 view .LVU418
 1477 01c2 3846     		mov	r0, r7
 1478 01c4 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1479              	.LVL169:
 718:lvgl/src/lv_widgets/lv_list.c ****             else lv_list_focus_btn(list, lv_list_get_next_btn(list, NULL));
 1480              		.loc 1 718 13 is_stmt 1 view .LVU419
 718:lvgl/src/lv_widgets/lv_list.c ****             else lv_list_focus_btn(list, lv_list_get_next_btn(list, NULL));
 1481              		.loc 1 718 19 is_stmt 0 view .LVU420
 1482 01c8 016C     		ldr	r1, [r0, #64]
 718:lvgl/src/lv_widgets/lv_list.c ****             else lv_list_focus_btn(list, lv_list_get_next_btn(list, NULL));
 1483              		.loc 1 718 15 view .LVU421
 1484 01ca 19B1     		cbz	r1, .L124
 718:lvgl/src/lv_widgets/lv_list.c ****             else lv_list_focus_btn(list, lv_list_get_next_btn(list, NULL));
 1485              		.loc 1 718 35 is_stmt 1 discriminator 1 view .LVU422
 1486 01cc 3846     		mov	r0, r7
 1487              	.LVL170:
 718:lvgl/src/lv_widgets/lv_list.c ****             else lv_list_focus_btn(list, lv_list_get_next_btn(list, NULL));
 1488              		.loc 1 718 35 is_stmt 0 discriminator 1 view .LVU423
 1489 01ce FFF7FEFF 		bl	lv_list_focus_btn
 1490              	.LVL171:
 1491 01d2 DBE7     		b	.L123
 1492              	.LVL172:
 1493              	.L124:
 719:lvgl/src/lv_widgets/lv_list.c ****         }
 1494              		.loc 1 719 18 is_stmt 1 view .LVU424
 1495 01d4 0021     		movs	r1, #0
 1496 01d6 3846     		mov	r0, r7
 1497              	.LVL173:
 719:lvgl/src/lv_widgets/lv_list.c ****         }
 1498              		.loc 1 719 18 is_stmt 0 view .LVU425
 1499 01d8 FFF7FEFF 		bl	lv_list_get_next_btn
 1500              	.LVL174:
 1501 01dc 0146     		mov	r1, r0
 1502 01de 3846     		mov	r0, r7
 1503 01e0 FFF7FEFF 		bl	lv_list_focus_btn
 1504              	.LVL175:
 1505 01e4 D2E7     		b	.L123
 1506              	.LVL176:
 1507              	.L138:
 719:lvgl/src/lv_widgets/lv_list.c ****         }
 1508              		.loc 1 719 18 view .LVU426
 1509              	.LBE105:
 1510              	.LBE103:
 1511              	.LBB106:
 732:lvgl/src/lv_widgets/lv_list.c ****         lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1512              		.loc 1 732 9 is_stmt 1 view .LVU427
 1513 01e6 0021     		movs	r1, #0
 1514 01e8 3846     		mov	r0, r7
 1515              	.LVL177:
 732:lvgl/src/lv_widgets/lv_list.c ****         lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 1516              		.loc 1 732 9 is_stmt 0 view .LVU428
 1517 01ea FFF7FEFF 		bl	lv_list_focus_btn
 1518              	.LVL178:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 50


 733:lvgl/src/lv_widgets/lv_list.c ****         ext->act_sel_btn   = NULL;
 1519              		.loc 1 733 9 is_stmt 1 view .LVU429
 733:lvgl/src/lv_widgets/lv_list.c ****         ext->act_sel_btn   = NULL;
 1520              		.loc 1 733 31 is_stmt 0 view .LVU430
 1521 01ee 3846     		mov	r0, r7
 1522 01f0 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1523              	.LVL179:
 734:lvgl/src/lv_widgets/lv_list.c **** #endif
 1524              		.loc 1 734 9 is_stmt 1 view .LVU431
 734:lvgl/src/lv_widgets/lv_list.c **** #endif
 1525              		.loc 1 734 28 is_stmt 0 view .LVU432
 1526 01f4 0023     		movs	r3, #0
 1527 01f6 4364     		str	r3, [r0, #68]
 1528              	.LBE106:
 1529 01f8 5DE7     		b	.L110
 1530              	.LVL180:
 1531              	.L139:
 1532              	.LBB107:
 739:lvgl/src/lv_widgets/lv_list.c ****         *editable       = true;
 1533              		.loc 1 739 9 is_stmt 1 view .LVU433
 740:lvgl/src/lv_widgets/lv_list.c **** #endif
 1534              		.loc 1 740 9 view .LVU434
 740:lvgl/src/lv_widgets/lv_list.c **** #endif
 1535              		.loc 1 740 25 is_stmt 0 view .LVU435
 1536 01fa 0123     		movs	r3, #1
 1537 01fc 3370     		strb	r3, [r6]
 1538              	.LBE107:
 1539 01fe 5AE7     		b	.L110
 1540              	.LVL181:
 1541              	.L140:
 1542              	.LBB108:
 1543              	.LBB93:
 748:lvgl/src/lv_widgets/lv_list.c ****             /*If there is a valid selected button the make the previous selected*/
 1544              		.loc 1 748 13 is_stmt 1 view .LVU436
 748:lvgl/src/lv_widgets/lv_list.c ****             /*If there is a valid selected button the make the previous selected*/
 1545              		.loc 1 748 35 is_stmt 0 view .LVU437
 1546 0200 3846     		mov	r0, r7
 1547              	.LVL182:
 748:lvgl/src/lv_widgets/lv_list.c ****             /*If there is a valid selected button the make the previous selected*/
 1548              		.loc 1 748 35 view .LVU438
 1549 0202 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1550              	.LVL183:
 750:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_t * btn_prev = lv_list_get_next_btn(list, ext->act_sel_btn);
 1551              		.loc 1 750 13 is_stmt 1 view .LVU439
 750:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_t * btn_prev = lv_list_get_next_btn(list, ext->act_sel_btn);
 1552              		.loc 1 750 19 is_stmt 0 view .LVU440
 1553 0206 416C     		ldr	r1, [r0, #68]
 750:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_t * btn_prev = lv_list_get_next_btn(list, ext->act_sel_btn);
 1554              		.loc 1 750 15 view .LVU441
 1555 0208 51B1     		cbz	r1, .L129
 1556              	.LBB94:
 751:lvgl/src/lv_widgets/lv_list.c ****                 if(btn_prev) lv_list_focus_btn(list, btn_prev);
 1557              		.loc 1 751 17 is_stmt 1 view .LVU442
 751:lvgl/src/lv_widgets/lv_list.c ****                 if(btn_prev) lv_list_focus_btn(list, btn_prev);
 1558              		.loc 1 751 39 is_stmt 0 view .LVU443
 1559 020a 3846     		mov	r0, r7
 1560              	.LVL184:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 51


 751:lvgl/src/lv_widgets/lv_list.c ****                 if(btn_prev) lv_list_focus_btn(list, btn_prev);
 1561              		.loc 1 751 39 view .LVU444
 1562 020c FFF7FEFF 		bl	lv_list_get_next_btn
 1563              	.LVL185:
 752:lvgl/src/lv_widgets/lv_list.c ****             }
 1564              		.loc 1 752 17 is_stmt 1 view .LVU445
 752:lvgl/src/lv_widgets/lv_list.c ****             }
 1565              		.loc 1 752 19 is_stmt 0 view .LVU446
 1566 0210 0146     		mov	r1, r0
 1567 0212 0028     		cmp	r0, #0
 1568 0214 3FF44FAF 		beq	.L110
 752:lvgl/src/lv_widgets/lv_list.c ****             }
 1569              		.loc 1 752 30 is_stmt 1 discriminator 1 view .LVU447
 1570 0218 3846     		mov	r0, r7
 1571              	.LVL186:
 752:lvgl/src/lv_widgets/lv_list.c ****             }
 1572              		.loc 1 752 30 is_stmt 0 discriminator 1 view .LVU448
 1573 021a FFF7FEFF 		bl	lv_list_focus_btn
 1574              	.LVL187:
 752:lvgl/src/lv_widgets/lv_list.c ****             }
 1575              		.loc 1 752 30 discriminator 1 view .LVU449
 1576 021e 4AE7     		b	.L110
 1577              	.LVL188:
 1578              	.L129:
 752:lvgl/src/lv_widgets/lv_list.c ****             }
 1579              		.loc 1 752 30 discriminator 1 view .LVU450
 1580              	.LBE94:
 1581              	.LBB95:
 756:lvgl/src/lv_widgets/lv_list.c ****                 if(btn)
 1582              		.loc 1 756 17 is_stmt 1 view .LVU451
 756:lvgl/src/lv_widgets/lv_list.c ****                 if(btn)
 1583              		.loc 1 756 34 is_stmt 0 view .LVU452
 1584 0220 0021     		movs	r1, #0
 1585 0222 3846     		mov	r0, r7
 1586              	.LVL189:
 756:lvgl/src/lv_widgets/lv_list.c ****                 if(btn)
 1587              		.loc 1 756 34 view .LVU453
 1588 0224 FFF7FEFF 		bl	lv_list_get_next_btn
 1589              	.LVL190:
 757:lvgl/src/lv_widgets/lv_list.c ****                     lv_list_focus_btn(list,
 1590              		.loc 1 757 17 is_stmt 1 view .LVU454
 757:lvgl/src/lv_widgets/lv_list.c ****                     lv_list_focus_btn(list,
 1591              		.loc 1 757 19 is_stmt 0 view .LVU455
 1592 0228 0146     		mov	r1, r0
 1593 022a 0028     		cmp	r0, #0
 1594 022c 3FF443AF 		beq	.L110
 758:lvgl/src/lv_widgets/lv_list.c ****                                       btn); /*If there are no buttons on the list then there is no 
 1595              		.loc 1 758 21 is_stmt 1 view .LVU456
 1596 0230 3846     		mov	r0, r7
 1597              	.LVL191:
 758:lvgl/src/lv_widgets/lv_list.c ****                                       btn); /*If there are no buttons on the list then there is no 
 1598              		.loc 1 758 21 is_stmt 0 view .LVU457
 1599 0232 FFF7FEFF 		bl	lv_list_focus_btn
 1600              	.LVL192:
 758:lvgl/src/lv_widgets/lv_list.c ****                                       btn); /*If there are no buttons on the list then there is no 
 1601              		.loc 1 758 21 view .LVU458
 1602 0236 3EE7     		b	.L110
ARM GAS  D:\Temp\cc6WWuOg.s 			page 52


 1603              	.LVL193:
 1604              	.L130:
 758:lvgl/src/lv_widgets/lv_list.c ****                                       btn); /*If there are no buttons on the list then there is no 
 1605              		.loc 1 758 21 view .LVU459
 1606              	.LBE95:
 1607              	.LBE93:
 1608              	.LBB96:
 763:lvgl/src/lv_widgets/lv_list.c ****             /*If there is a valid selected button the make the next selected*/
 1609              		.loc 1 763 13 is_stmt 1 view .LVU460
 763:lvgl/src/lv_widgets/lv_list.c ****             /*If there is a valid selected button the make the next selected*/
 1610              		.loc 1 763 35 is_stmt 0 view .LVU461
 1611 0238 3846     		mov	r0, r7
 1612              	.LVL194:
 763:lvgl/src/lv_widgets/lv_list.c ****             /*If there is a valid selected button the make the next selected*/
 1613              		.loc 1 763 35 view .LVU462
 1614 023a FFF7FEFF 		bl	lv_obj_get_ext_attr
 1615              	.LVL195:
 765:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_t * btn_next = lv_list_get_prev_btn(list, ext->act_sel_btn);
 1616              		.loc 1 765 13 is_stmt 1 view .LVU463
 765:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_t * btn_next = lv_list_get_prev_btn(list, ext->act_sel_btn);
 1617              		.loc 1 765 19 is_stmt 0 view .LVU464
 1618 023e 416C     		ldr	r1, [r0, #68]
 765:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_t * btn_next = lv_list_get_prev_btn(list, ext->act_sel_btn);
 1619              		.loc 1 765 15 view .LVU465
 1620 0240 51B1     		cbz	r1, .L132
 1621              	.LBB97:
 766:lvgl/src/lv_widgets/lv_list.c ****                 if(btn_next) lv_list_focus_btn(list, btn_next);
 1622              		.loc 1 766 17 is_stmt 1 view .LVU466
 766:lvgl/src/lv_widgets/lv_list.c ****                 if(btn_next) lv_list_focus_btn(list, btn_next);
 1623              		.loc 1 766 39 is_stmt 0 view .LVU467
 1624 0242 3846     		mov	r0, r7
 1625              	.LVL196:
 766:lvgl/src/lv_widgets/lv_list.c ****                 if(btn_next) lv_list_focus_btn(list, btn_next);
 1626              		.loc 1 766 39 view .LVU468
 1627 0244 FFF7FEFF 		bl	lv_list_get_prev_btn
 1628              	.LVL197:
 767:lvgl/src/lv_widgets/lv_list.c ****             }
 1629              		.loc 1 767 17 is_stmt 1 view .LVU469
 767:lvgl/src/lv_widgets/lv_list.c ****             }
 1630              		.loc 1 767 19 is_stmt 0 view .LVU470
 1631 0248 0146     		mov	r1, r0
 1632 024a 0028     		cmp	r0, #0
 1633 024c 3FF433AF 		beq	.L110
 767:lvgl/src/lv_widgets/lv_list.c ****             }
 1634              		.loc 1 767 30 is_stmt 1 discriminator 1 view .LVU471
 1635 0250 3846     		mov	r0, r7
 1636              	.LVL198:
 767:lvgl/src/lv_widgets/lv_list.c ****             }
 1637              		.loc 1 767 30 is_stmt 0 discriminator 1 view .LVU472
 1638 0252 FFF7FEFF 		bl	lv_list_focus_btn
 1639              	.LVL199:
 767:lvgl/src/lv_widgets/lv_list.c ****             }
 1640              		.loc 1 767 30 discriminator 1 view .LVU473
 1641 0256 2EE7     		b	.L110
 1642              	.LVL200:
 1643              	.L132:
 767:lvgl/src/lv_widgets/lv_list.c ****             }
ARM GAS  D:\Temp\cc6WWuOg.s 			page 53


 1644              		.loc 1 767 30 discriminator 1 view .LVU474
 1645              	.LBE97:
 1646              	.LBB98:
 771:lvgl/src/lv_widgets/lv_list.c ****                 if(btn) lv_list_focus_btn(list, btn);
 1647              		.loc 1 771 17 is_stmt 1 view .LVU475
 771:lvgl/src/lv_widgets/lv_list.c ****                 if(btn) lv_list_focus_btn(list, btn);
 1648              		.loc 1 771 34 is_stmt 0 view .LVU476
 1649 0258 0021     		movs	r1, #0
 1650 025a 3846     		mov	r0, r7
 1651              	.LVL201:
 771:lvgl/src/lv_widgets/lv_list.c ****                 if(btn) lv_list_focus_btn(list, btn);
 1652              		.loc 1 771 34 view .LVU477
 1653 025c FFF7FEFF 		bl	lv_list_get_next_btn
 1654              	.LVL202:
 772:lvgl/src/lv_widgets/lv_list.c ****             }
 1655              		.loc 1 772 17 is_stmt 1 view .LVU478
 772:lvgl/src/lv_widgets/lv_list.c ****             }
 1656              		.loc 1 772 19 is_stmt 0 view .LVU479
 1657 0260 0146     		mov	r1, r0
 1658 0262 0028     		cmp	r0, #0
 1659 0264 3FF427AF 		beq	.L110
 772:lvgl/src/lv_widgets/lv_list.c ****             }
 1660              		.loc 1 772 25 is_stmt 1 discriminator 1 view .LVU480
 1661 0268 3846     		mov	r0, r7
 1662              	.LVL203:
 772:lvgl/src/lv_widgets/lv_list.c ****             }
 1663              		.loc 1 772 25 is_stmt 0 discriminator 1 view .LVU481
 1664 026a FFF7FEFF 		bl	lv_list_focus_btn
 1665              	.LVL204:
 772:lvgl/src/lv_widgets/lv_list.c ****             }
 1666              		.loc 1 772 25 discriminator 1 view .LVU482
 1667 026e 22E7     		b	.L110
 1668              	.L149:
 1669              		.align	2
 1670              	.L148:
 1671 0270 00000000 		.word	.LANCHOR0
 1672 0274 00000000 		.word	.LC5
 1673              	.LBE98:
 1674              	.LBE96:
 1675              	.LBE108:
 1676              		.cfi_endproc
 1677              	.LFE508:
 1679              		.section	.text.lv_list_remove,"ax",%progbits
 1680              		.align	1
 1681              		.global	lv_list_remove
 1682              		.syntax unified
 1683              		.thumb
 1684              		.thumb_func
 1685              		.fpu fpv4-sp-d16
 1687              	lv_list_remove:
 1688              	.LVL205:
 1689              	.LFB493:
 247:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 1690              		.loc 1 247 1 is_stmt 1 view -0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\Temp\cc6WWuOg.s 			page 54


 247:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 1694              		.loc 1 247 1 is_stmt 0 view .LVU484
 1695 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1696              	.LCFI21:
 1697              		.cfi_def_cfa_offset 24
 1698              		.cfi_offset 4, -24
 1699              		.cfi_offset 5, -20
 1700              		.cfi_offset 6, -16
 1701              		.cfi_offset 7, -12
 1702              		.cfi_offset 8, -8
 1703              		.cfi_offset 14, -4
 1704 0004 0646     		mov	r6, r0
 1705 0006 8846     		mov	r8, r1
 248:lvgl/src/lv_widgets/lv_list.c **** 
 1706              		.loc 1 248 5 is_stmt 1 view .LVU485
 248:lvgl/src/lv_widgets/lv_list.c **** 
 1707              		.loc 1 248 5 view .LVU486
 1708 0008 FFF7FEFF 		bl	lv_debug_check_null
 1709              	.LVL206:
 248:lvgl/src/lv_widgets/lv_list.c **** 
 1710              		.loc 1 248 5 is_stmt 0 view .LVU487
 1711 000c 28B9     		cbnz	r0, .L151
 248:lvgl/src/lv_widgets/lv_list.c **** 
 1712              		.loc 1 248 5 is_stmt 1 discriminator 1 view .LVU488
 248:lvgl/src/lv_widgets/lv_list.c **** 
 1713              		.loc 1 248 5 discriminator 1 view .LVU489
 1714 000e 3246     		mov	r2, r6
 1715 0010 0023     		movs	r3, #0
 1716 0012 1548     		ldr	r0, .L164
 1717 0014 FFF7FEFF 		bl	lv_debug_log_error
 1718              	.LVL207:
 1719              	.L152:
 248:lvgl/src/lv_widgets/lv_list.c **** 
 1720              		.loc 1 248 5 discriminator 1 view .LVU490
 248:lvgl/src/lv_widgets/lv_list.c **** 
 1721              		.loc 1 248 5 discriminator 1 view .LVU491
 1722 0018 FEE7     		b	.L152
 1723              	.L151:
 1724 001a 0746     		mov	r7, r0
 248:lvgl/src/lv_widgets/lv_list.c **** 
 1725              		.loc 1 248 38 discriminator 2 view .LVU492
 250:lvgl/src/lv_widgets/lv_list.c ****     uint16_t count = 0;
 1726              		.loc 1 250 5 discriminator 2 view .LVU493
 250:lvgl/src/lv_widgets/lv_list.c ****     uint16_t count = 0;
 1727              		.loc 1 250 27 is_stmt 0 discriminator 2 view .LVU494
 1728 001c 3046     		mov	r0, r6
 1729 001e FFF7FEFF 		bl	lv_obj_get_ext_attr
 1730              	.LVL208:
 1731 0022 0546     		mov	r5, r0
 1732              	.LVL209:
 251:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e   = lv_list_get_next_btn(list, NULL);
 1733              		.loc 1 251 5 is_stmt 1 discriminator 2 view .LVU495
 252:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 1734              		.loc 1 252 5 discriminator 2 view .LVU496
 252:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 1735              		.loc 1 252 22 is_stmt 0 discriminator 2 view .LVU497
 1736 0024 0021     		movs	r1, #0
ARM GAS  D:\Temp\cc6WWuOg.s 			page 55


 1737 0026 3046     		mov	r0, r6
 1738              	.LVL210:
 252:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 1739              		.loc 1 252 22 discriminator 2 view .LVU498
 1740 0028 FFF7FEFF 		bl	lv_list_get_next_btn
 1741              	.LVL211:
 253:lvgl/src/lv_widgets/lv_list.c ****         if(count == index) {
 1742              		.loc 1 253 5 is_stmt 1 discriminator 2 view .LVU499
 251:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e   = lv_list_get_next_btn(list, NULL);
 1743              		.loc 1 251 14 is_stmt 0 discriminator 2 view .LVU500
 1744 002c 0024     		movs	r4, #0
 1745              	.LVL212:
 1746              	.L153:
 253:lvgl/src/lv_widgets/lv_list.c ****         if(count == index) {
 1747              		.loc 1 253 10 view .LVU501
 1748 002e B8B1     		cbz	r0, .L160
 254:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 1749              		.loc 1 254 9 is_stmt 1 view .LVU502
 254:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 1750              		.loc 1 254 11 is_stmt 0 view .LVU503
 1751 0030 4445     		cmp	r4, r8
 1752 0032 06D0     		beq	.L161
 263:lvgl/src/lv_widgets/lv_list.c ****         count++;
 1753              		.loc 1 263 9 is_stmt 1 view .LVU504
 263:lvgl/src/lv_widgets/lv_list.c ****         count++;
 1754              		.loc 1 263 13 is_stmt 0 view .LVU505
 1755 0034 0146     		mov	r1, r0
 1756 0036 3046     		mov	r0, r6
 1757              	.LVL213:
 263:lvgl/src/lv_widgets/lv_list.c ****         count++;
 1758              		.loc 1 263 13 view .LVU506
 1759 0038 FFF7FEFF 		bl	lv_list_get_next_btn
 1760              	.LVL214:
 264:lvgl/src/lv_widgets/lv_list.c ****     }
 1761              		.loc 1 264 9 is_stmt 1 view .LVU507
 264:lvgl/src/lv_widgets/lv_list.c ****     }
 1762              		.loc 1 264 14 is_stmt 0 view .LVU508
 1763 003c 0134     		adds	r4, r4, #1
 1764              	.LVL215:
 264:lvgl/src/lv_widgets/lv_list.c ****     }
 1765              		.loc 1 264 14 view .LVU509
 1766 003e A4B2     		uxth	r4, r4
 1767              	.LVL216:
 264:lvgl/src/lv_widgets/lv_list.c ****     }
 1768              		.loc 1 264 14 view .LVU510
 1769 0040 F5E7     		b	.L153
 1770              	.L161:
 256:lvgl/src/lv_widgets/lv_list.c **** #endif
 1771              		.loc 1 256 13 is_stmt 1 view .LVU511
 256:lvgl/src/lv_widgets/lv_list.c **** #endif
 1772              		.loc 1 256 24 is_stmt 0 view .LVU512
 1773 0042 2B6C     		ldr	r3, [r5, #64]
 256:lvgl/src/lv_widgets/lv_list.c **** #endif
 1774              		.loc 1 256 15 view .LVU513
 1775 0044 8342     		cmp	r3, r0
 1776 0046 05D0     		beq	.L162
 1777              	.L155:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 56


 258:lvgl/src/lv_widgets/lv_list.c **** 
 1778              		.loc 1 258 13 is_stmt 1 view .LVU514
 258:lvgl/src/lv_widgets/lv_list.c **** 
 1779              		.loc 1 258 24 is_stmt 0 view .LVU515
 1780 0048 6B6C     		ldr	r3, [r5, #68]
 258:lvgl/src/lv_widgets/lv_list.c **** 
 1781              		.loc 1 258 15 view .LVU516
 1782 004a 8342     		cmp	r3, r0
 1783 004c 05D0     		beq	.L163
 1784              	.L156:
 260:lvgl/src/lv_widgets/lv_list.c ****             return true;
 1785              		.loc 1 260 13 is_stmt 1 view .LVU517
 1786 004e FFF7FEFF 		bl	lv_obj_del
 1787              	.LVL217:
 261:lvgl/src/lv_widgets/lv_list.c ****         }
 1788              		.loc 1 261 13 view .LVU518
 261:lvgl/src/lv_widgets/lv_list.c ****         }
 1789              		.loc 1 261 20 is_stmt 0 view .LVU519
 1790 0052 06E0     		b	.L157
 1791              	.LVL218:
 1792              	.L162:
 256:lvgl/src/lv_widgets/lv_list.c **** #endif
 1793              		.loc 1 256 40 is_stmt 1 discriminator 1 view .LVU520
 256:lvgl/src/lv_widgets/lv_list.c **** #endif
 1794              		.loc 1 256 58 is_stmt 0 discriminator 1 view .LVU521
 1795 0054 0023     		movs	r3, #0
 1796 0056 2B64     		str	r3, [r5, #64]
 1797 0058 F6E7     		b	.L155
 1798              	.L163:
 258:lvgl/src/lv_widgets/lv_list.c **** 
 1799              		.loc 1 258 39 is_stmt 1 discriminator 1 view .LVU522
 258:lvgl/src/lv_widgets/lv_list.c **** 
 1800              		.loc 1 258 56 is_stmt 0 discriminator 1 view .LVU523
 1801 005a 0023     		movs	r3, #0
 1802 005c 6B64     		str	r3, [r5, #68]
 1803 005e F6E7     		b	.L156
 1804              	.L160:
 266:lvgl/src/lv_widgets/lv_list.c **** }
 1805              		.loc 1 266 12 view .LVU524
 1806 0060 0027     		movs	r7, #0
 1807              	.LVL219:
 1808              	.L157:
 267:lvgl/src/lv_widgets/lv_list.c **** 
 1809              		.loc 1 267 1 view .LVU525
 1810 0062 3846     		mov	r0, r7
 1811 0064 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1812              	.LVL220:
 1813              	.L165:
 267:lvgl/src/lv_widgets/lv_list.c **** 
 1814              		.loc 1 267 1 view .LVU526
 1815              		.align	2
 1816              	.L164:
 1817 0068 00000000 		.word	.LC0
 1818              		.cfi_endproc
 1819              	.LFE493:
 1821              		.section	.text.lv_list_get_btn_index,"ax",%progbits
 1822              		.align	1
ARM GAS  D:\Temp\cc6WWuOg.s 			page 57


 1823              		.global	lv_list_get_btn_index
 1824              		.syntax unified
 1825              		.thumb
 1826              		.thumb_func
 1827              		.fpu fpv4-sp-d16
 1829              	lv_list_get_btn_index:
 1830              	.LVL221:
 1831              	.LFB501:
 469:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 1832              		.loc 1 469 1 is_stmt 1 view -0
 1833              		.cfi_startproc
 1834              		@ args = 0, pretend = 0, frame = 0
 1835              		@ frame_needed = 0, uses_anonymous_args = 0
 469:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "lv_btn");
 1836              		.loc 1 469 1 is_stmt 0 view .LVU528
 1837 0000 70B5     		push	{r4, r5, r6, lr}
 1838              	.LCFI22:
 1839              		.cfi_def_cfa_offset 16
 1840              		.cfi_offset 4, -16
 1841              		.cfi_offset 5, -12
 1842              		.cfi_offset 6, -8
 1843              		.cfi_offset 14, -4
 1844 0002 0446     		mov	r4, r0
 1845 0004 0E46     		mov	r6, r1
 470:lvgl/src/lv_widgets/lv_list.c **** 
 1846              		.loc 1 470 5 is_stmt 1 view .LVU529
 470:lvgl/src/lv_widgets/lv_list.c **** 
 1847              		.loc 1 470 5 view .LVU530
 1848 0006 0846     		mov	r0, r1
 1849              	.LVL222:
 470:lvgl/src/lv_widgets/lv_list.c **** 
 1850              		.loc 1 470 5 is_stmt 0 view .LVU531
 1851 0008 FFF7FEFF 		bl	lv_debug_check_null
 1852              	.LVL223:
 470:lvgl/src/lv_widgets/lv_list.c **** 
 1853              		.loc 1 470 5 view .LVU532
 1854 000c 50B1     		cbz	r0, .L176
 470:lvgl/src/lv_widgets/lv_list.c **** 
 1855              		.loc 1 470 33 is_stmt 1 discriminator 2 view .LVU533
 472:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) {
 1856              		.loc 1 472 5 discriminator 2 view .LVU534
 1857              	.LVL224:
 473:lvgl/src/lv_widgets/lv_list.c ****         /* no list provided, assuming btn is part of a list */
 1858              		.loc 1 473 5 discriminator 2 view .LVU535
 473:lvgl/src/lv_widgets/lv_list.c ****         /* no list provided, assuming btn is part of a list */
 1859              		.loc 1 473 7 is_stmt 0 discriminator 2 view .LVU536
 1860 000e 7CB1     		cbz	r4, .L177
 1861              	.L169:
 477:lvgl/src/lv_widgets/lv_list.c **** 
 1862              		.loc 1 477 5 is_stmt 1 view .LVU537
 477:lvgl/src/lv_widgets/lv_list.c **** 
 1863              		.loc 1 477 5 view .LVU538
 1864 0010 2046     		mov	r0, r4
 1865 0012 FFF7FEFF 		bl	lv_debug_check_null
 1866              	.LVL225:
 1867 0016 90B9     		cbnz	r0, .L170
 477:lvgl/src/lv_widgets/lv_list.c **** 
ARM GAS  D:\Temp\cc6WWuOg.s 			page 58


 1868              		.loc 1 477 5 discriminator 1 view .LVU539
 477:lvgl/src/lv_widgets/lv_list.c **** 
 1869              		.loc 1 477 5 discriminator 1 view .LVU540
 1870 0018 2246     		mov	r2, r4
 1871 001a 0023     		movs	r3, #0
 1872 001c 1148     		ldr	r0, .L179
 1873 001e FFF7FEFF 		bl	lv_debug_log_error
 1874              	.LVL226:
 1875              	.L171:
 477:lvgl/src/lv_widgets/lv_list.c **** 
 1876              		.loc 1 477 5 discriminator 2 view .LVU541
 477:lvgl/src/lv_widgets/lv_list.c **** 
 1877              		.loc 1 477 5 discriminator 2 view .LVU542
 1878 0022 FEE7     		b	.L171
 1879              	.LVL227:
 1880              	.L176:
 470:lvgl/src/lv_widgets/lv_list.c **** 
 1881              		.loc 1 470 5 discriminator 1 view .LVU543
 470:lvgl/src/lv_widgets/lv_list.c **** 
 1882              		.loc 1 470 5 discriminator 1 view .LVU544
 1883 0024 3246     		mov	r2, r6
 1884 0026 0023     		movs	r3, #0
 1885 0028 0E48     		ldr	r0, .L179
 1886 002a FFF7FEFF 		bl	lv_debug_log_error
 1887              	.LVL228:
 1888              	.L168:
 470:lvgl/src/lv_widgets/lv_list.c **** 
 1889              		.loc 1 470 5 discriminator 1 view .LVU545
 470:lvgl/src/lv_widgets/lv_list.c **** 
 1890              		.loc 1 470 5 discriminator 1 view .LVU546
 1891 002e FEE7     		b	.L168
 1892              	.LVL229:
 1893              	.L177:
 475:lvgl/src/lv_widgets/lv_list.c ****     }
 1894              		.loc 1 475 9 view .LVU547
 475:lvgl/src/lv_widgets/lv_list.c ****     }
 1895              		.loc 1 475 34 is_stmt 0 view .LVU548
 1896 0030 3046     		mov	r0, r6
 1897 0032 FFF7FEFF 		bl	lv_obj_get_parent
 1898              	.LVL230:
 475:lvgl/src/lv_widgets/lv_list.c ****     }
 1899              		.loc 1 475 16 view .LVU549
 1900 0036 FFF7FEFF 		bl	lv_obj_get_parent
 1901              	.LVL231:
 1902 003a 0446     		mov	r4, r0
 1903              	.LVL232:
 475:lvgl/src/lv_widgets/lv_list.c ****     }
 1904              		.loc 1 475 16 view .LVU550
 1905 003c E8E7     		b	.L169
 1906              	.LVL233:
 1907              	.L170:
 477:lvgl/src/lv_widgets/lv_list.c **** 
 1908              		.loc 1 477 38 is_stmt 1 discriminator 2 view .LVU551
 479:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 1909              		.loc 1 479 5 discriminator 2 view .LVU552
 479:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 1910              		.loc 1 479 20 is_stmt 0 discriminator 2 view .LVU553
ARM GAS  D:\Temp\cc6WWuOg.s 			page 59


 1911 003e 0021     		movs	r1, #0
 1912 0040 2046     		mov	r0, r4
 1913 0042 FFF7FEFF 		bl	lv_list_get_next_btn
 1914              	.LVL234:
 480:lvgl/src/lv_widgets/lv_list.c ****         if(e == btn) {
 1915              		.loc 1 480 5 is_stmt 1 discriminator 2 view .LVU554
 472:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) {
 1916              		.loc 1 472 9 is_stmt 0 discriminator 2 view .LVU555
 1917 0046 0025     		movs	r5, #0
 1918              	.LVL235:
 1919              	.L172:
 480:lvgl/src/lv_widgets/lv_list.c ****         if(e == btn) {
 1920              		.loc 1 480 10 view .LVU556
 1921 0048 38B1     		cbz	r0, .L178
 481:lvgl/src/lv_widgets/lv_list.c ****             return index;
 1922              		.loc 1 481 9 is_stmt 1 view .LVU557
 481:lvgl/src/lv_widgets/lv_list.c ****             return index;
 1923              		.loc 1 481 11 is_stmt 0 view .LVU558
 1924 004a B042     		cmp	r0, r6
 1925 004c 07D0     		beq	.L166
 484:lvgl/src/lv_widgets/lv_list.c ****         e = lv_list_get_next_btn(list, e);
 1926              		.loc 1 484 9 is_stmt 1 view .LVU559
 484:lvgl/src/lv_widgets/lv_list.c ****         e = lv_list_get_next_btn(list, e);
 1927              		.loc 1 484 14 is_stmt 0 view .LVU560
 1928 004e 0135     		adds	r5, r5, #1
 1929              	.LVL236:
 485:lvgl/src/lv_widgets/lv_list.c ****     }
 1930              		.loc 1 485 9 is_stmt 1 view .LVU561
 485:lvgl/src/lv_widgets/lv_list.c ****     }
 1931              		.loc 1 485 13 is_stmt 0 view .LVU562
 1932 0050 0146     		mov	r1, r0
 1933 0052 2046     		mov	r0, r4
 1934              	.LVL237:
 485:lvgl/src/lv_widgets/lv_list.c ****     }
 1935              		.loc 1 485 13 view .LVU563
 1936 0054 FFF7FEFF 		bl	lv_list_get_next_btn
 1937              	.LVL238:
 485:lvgl/src/lv_widgets/lv_list.c ****     }
 1938              		.loc 1 485 13 view .LVU564
 1939 0058 F6E7     		b	.L172
 1940              	.L178:
 487:lvgl/src/lv_widgets/lv_list.c **** }
 1941              		.loc 1 487 12 view .LVU565
 1942 005a 4FF0FF35 		mov	r5, #-1
 1943              	.LVL239:
 1944              	.L166:
 488:lvgl/src/lv_widgets/lv_list.c **** 
 1945              		.loc 1 488 1 view .LVU566
 1946 005e 2846     		mov	r0, r5
 1947              	.LVL240:
 488:lvgl/src/lv_widgets/lv_list.c **** 
 1948              		.loc 1 488 1 view .LVU567
 1949 0060 70BD     		pop	{r4, r5, r6, pc}
 1950              	.LVL241:
 1951              	.L180:
 488:lvgl/src/lv_widgets/lv_list.c **** 
 1952              		.loc 1 488 1 view .LVU568
ARM GAS  D:\Temp\cc6WWuOg.s 			page 60


 1953 0062 00BF     		.align	2
 1954              	.L179:
 1955 0064 00000000 		.word	.LC0
 1956              		.cfi_endproc
 1957              	.LFE501:
 1959              		.section	.text.lv_list_get_size,"ax",%progbits
 1960              		.align	1
 1961              		.global	lv_list_get_size
 1962              		.syntax unified
 1963              		.thumb
 1964              		.thumb_func
 1965              		.fpu fpv4-sp-d16
 1967              	lv_list_get_size:
 1968              	.LVL242:
 1969              	.LFB502:
 496:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 1970              		.loc 1 496 1 is_stmt 1 view -0
 1971              		.cfi_startproc
 1972              		@ args = 0, pretend = 0, frame = 0
 1973              		@ frame_needed = 0, uses_anonymous_args = 0
 496:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 1974              		.loc 1 496 1 is_stmt 0 view .LVU570
 1975 0000 38B5     		push	{r3, r4, r5, lr}
 1976              	.LCFI23:
 1977              		.cfi_def_cfa_offset 16
 1978              		.cfi_offset 3, -16
 1979              		.cfi_offset 4, -12
 1980              		.cfi_offset 5, -8
 1981              		.cfi_offset 14, -4
 1982 0002 0546     		mov	r5, r0
 497:lvgl/src/lv_widgets/lv_list.c **** 
 1983              		.loc 1 497 5 is_stmt 1 view .LVU571
 497:lvgl/src/lv_widgets/lv_list.c **** 
 1984              		.loc 1 497 5 view .LVU572
 1985 0004 FFF7FEFF 		bl	lv_debug_check_null
 1986              	.LVL243:
 497:lvgl/src/lv_widgets/lv_list.c **** 
 1987              		.loc 1 497 5 is_stmt 0 view .LVU573
 1988 0008 28B9     		cbnz	r0, .L182
 497:lvgl/src/lv_widgets/lv_list.c **** 
 1989              		.loc 1 497 5 is_stmt 1 discriminator 1 view .LVU574
 497:lvgl/src/lv_widgets/lv_list.c **** 
 1990              		.loc 1 497 5 discriminator 1 view .LVU575
 1991 000a 2A46     		mov	r2, r5
 1992 000c 0023     		movs	r3, #0
 1993 000e 0A48     		ldr	r0, .L187
 1994 0010 FFF7FEFF 		bl	lv_debug_log_error
 1995              	.LVL244:
 1996              	.L183:
 497:lvgl/src/lv_widgets/lv_list.c **** 
 1997              		.loc 1 497 5 discriminator 1 view .LVU576
 497:lvgl/src/lv_widgets/lv_list.c **** 
 1998              		.loc 1 497 5 discriminator 1 view .LVU577
 1999 0014 FEE7     		b	.L183
 2000              	.L182:
 497:lvgl/src/lv_widgets/lv_list.c **** 
 2001              		.loc 1 497 38 discriminator 2 view .LVU578
ARM GAS  D:\Temp\cc6WWuOg.s 			page 61


 499:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * btn = lv_list_get_next_btn(list, NULL);
 2002              		.loc 1 499 5 discriminator 2 view .LVU579
 2003              	.LVL245:
 500:lvgl/src/lv_widgets/lv_list.c ****     while(btn) {
 2004              		.loc 1 500 5 discriminator 2 view .LVU580
 500:lvgl/src/lv_widgets/lv_list.c ****     while(btn) {
 2005              		.loc 1 500 22 is_stmt 0 discriminator 2 view .LVU581
 2006 0016 0021     		movs	r1, #0
 2007 0018 2846     		mov	r0, r5
 2008 001a FFF7FEFF 		bl	lv_list_get_next_btn
 2009              	.LVL246:
 501:lvgl/src/lv_widgets/lv_list.c ****         size++;
 2010              		.loc 1 501 5 is_stmt 1 discriminator 2 view .LVU582
 499:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * btn = lv_list_get_next_btn(list, NULL);
 2011              		.loc 1 499 14 is_stmt 0 discriminator 2 view .LVU583
 2012 001e 0024     		movs	r4, #0
 501:lvgl/src/lv_widgets/lv_list.c ****         size++;
 2013              		.loc 1 501 10 discriminator 2 view .LVU584
 2014 0020 05E0     		b	.L184
 2015              	.LVL247:
 2016              	.L185:
 502:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_list_get_next_btn(list, btn);
 2017              		.loc 1 502 9 is_stmt 1 view .LVU585
 502:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_list_get_next_btn(list, btn);
 2018              		.loc 1 502 13 is_stmt 0 view .LVU586
 2019 0022 0134     		adds	r4, r4, #1
 2020              	.LVL248:
 502:lvgl/src/lv_widgets/lv_list.c ****         btn = lv_list_get_next_btn(list, btn);
 2021              		.loc 1 502 13 view .LVU587
 2022 0024 A4B2     		uxth	r4, r4
 2023              	.LVL249:
 503:lvgl/src/lv_widgets/lv_list.c ****     }
 2024              		.loc 1 503 9 is_stmt 1 view .LVU588
 503:lvgl/src/lv_widgets/lv_list.c ****     }
 2025              		.loc 1 503 15 is_stmt 0 view .LVU589
 2026 0026 0146     		mov	r1, r0
 2027 0028 2846     		mov	r0, r5
 2028              	.LVL250:
 503:lvgl/src/lv_widgets/lv_list.c ****     }
 2029              		.loc 1 503 15 view .LVU590
 2030 002a FFF7FEFF 		bl	lv_list_get_next_btn
 2031              	.LVL251:
 2032              	.L184:
 501:lvgl/src/lv_widgets/lv_list.c ****         size++;
 2033              		.loc 1 501 10 view .LVU591
 2034 002e 0028     		cmp	r0, #0
 2035 0030 F7D1     		bne	.L185
 505:lvgl/src/lv_widgets/lv_list.c **** }
 2036              		.loc 1 505 5 is_stmt 1 view .LVU592
 506:lvgl/src/lv_widgets/lv_list.c **** 
 2037              		.loc 1 506 1 is_stmt 0 view .LVU593
 2038 0032 2046     		mov	r0, r4
 2039              	.LVL252:
 506:lvgl/src/lv_widgets/lv_list.c **** 
 2040              		.loc 1 506 1 view .LVU594
 2041 0034 38BD     		pop	{r3, r4, r5, pc}
 2042              	.LVL253:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 62


 2043              	.L188:
 506:lvgl/src/lv_widgets/lv_list.c **** 
 2044              		.loc 1 506 1 view .LVU595
 2045 0036 00BF     		.align	2
 2046              	.L187:
 2047 0038 00000000 		.word	.LC0
 2048              		.cfi_endproc
 2049              	.LFE502:
 2051              		.section	.text.lv_list_get_btn_selected,"ax",%progbits
 2052              		.align	1
 2053              		.global	lv_list_get_btn_selected
 2054              		.syntax unified
 2055              		.thumb
 2056              		.thumb_func
 2057              		.fpu fpv4-sp-d16
 2059              	lv_list_get_btn_selected:
 2060              	.LVL254:
 2061              	.LFB503:
 515:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 2062              		.loc 1 515 1 is_stmt 1 view -0
 2063              		.cfi_startproc
 2064              		@ args = 0, pretend = 0, frame = 0
 2065              		@ frame_needed = 0, uses_anonymous_args = 0
 515:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 2066              		.loc 1 515 1 is_stmt 0 view .LVU597
 2067 0000 10B5     		push	{r4, lr}
 2068              	.LCFI24:
 2069              		.cfi_def_cfa_offset 8
 2070              		.cfi_offset 4, -8
 2071              		.cfi_offset 14, -4
 2072 0002 0446     		mov	r4, r0
 516:lvgl/src/lv_widgets/lv_list.c **** 
 2073              		.loc 1 516 5 is_stmt 1 view .LVU598
 516:lvgl/src/lv_widgets/lv_list.c **** 
 2074              		.loc 1 516 5 view .LVU599
 2075 0004 FFF7FEFF 		bl	lv_debug_check_null
 2076              	.LVL255:
 516:lvgl/src/lv_widgets/lv_list.c **** 
 2077              		.loc 1 516 5 is_stmt 0 view .LVU600
 2078 0008 28B9     		cbnz	r0, .L190
 516:lvgl/src/lv_widgets/lv_list.c **** 
 2079              		.loc 1 516 5 is_stmt 1 discriminator 1 view .LVU601
 516:lvgl/src/lv_widgets/lv_list.c **** 
 2080              		.loc 1 516 5 discriminator 1 view .LVU602
 2081 000a 2246     		mov	r2, r4
 2082 000c 0023     		movs	r3, #0
 2083 000e 0448     		ldr	r0, .L193
 2084 0010 FFF7FEFF 		bl	lv_debug_log_error
 2085              	.LVL256:
 2086              	.L191:
 516:lvgl/src/lv_widgets/lv_list.c **** 
 2087              		.loc 1 516 5 discriminator 1 view .LVU603
 516:lvgl/src/lv_widgets/lv_list.c **** 
 2088              		.loc 1 516 5 discriminator 1 view .LVU604
 2089 0014 FEE7     		b	.L191
 2090              	.L190:
 516:lvgl/src/lv_widgets/lv_list.c **** 
ARM GAS  D:\Temp\cc6WWuOg.s 			page 63


 2091              		.loc 1 516 38 discriminator 2 view .LVU605
 518:lvgl/src/lv_widgets/lv_list.c ****     return ext->act_sel_btn;
 2092              		.loc 1 518 5 discriminator 2 view .LVU606
 518:lvgl/src/lv_widgets/lv_list.c ****     return ext->act_sel_btn;
 2093              		.loc 1 518 27 is_stmt 0 discriminator 2 view .LVU607
 2094 0016 2046     		mov	r0, r4
 2095 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 2096              	.LVL257:
 519:lvgl/src/lv_widgets/lv_list.c **** }
 2097              		.loc 1 519 5 is_stmt 1 discriminator 2 view .LVU608
 520:lvgl/src/lv_widgets/lv_list.c **** #endif
 2098              		.loc 1 520 1 is_stmt 0 discriminator 2 view .LVU609
 2099 001c 406C     		ldr	r0, [r0, #68]
 2100              	.LVL258:
 520:lvgl/src/lv_widgets/lv_list.c **** #endif
 2101              		.loc 1 520 1 discriminator 2 view .LVU610
 2102 001e 10BD     		pop	{r4, pc}
 2103              	.LVL259:
 2104              	.L194:
 520:lvgl/src/lv_widgets/lv_list.c **** #endif
 2105              		.loc 1 520 1 discriminator 2 view .LVU611
 2106              		.align	2
 2107              	.L193:
 2108 0020 00000000 		.word	.LC0
 2109              		.cfi_endproc
 2110              	.LFE503:
 2112              		.section	.text.lv_list_btn_signal,"ax",%progbits
 2113              		.align	1
 2114              		.syntax unified
 2115              		.thumb
 2116              		.thumb_func
 2117              		.fpu fpv4-sp-d16
 2119              	lv_list_btn_signal:
 2120              	.LVL260:
 2121              	.LFB509:
 793:lvgl/src/lv_widgets/lv_list.c ****     lv_res_t res;
 2122              		.loc 1 793 1 is_stmt 1 view -0
 2123              		.cfi_startproc
 2124              		@ args = 0, pretend = 0, frame = 0
 2125              		@ frame_needed = 0, uses_anonymous_args = 0
 793:lvgl/src/lv_widgets/lv_list.c ****     lv_res_t res;
 2126              		.loc 1 793 1 is_stmt 0 view .LVU613
 2127 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2128              	.LCFI25:
 2129              		.cfi_def_cfa_offset 24
 2130              		.cfi_offset 3, -24
 2131              		.cfi_offset 4, -20
 2132              		.cfi_offset 5, -16
 2133              		.cfi_offset 6, -12
 2134              		.cfi_offset 7, -8
 2135              		.cfi_offset 14, -4
 2136 0002 0646     		mov	r6, r0
 2137 0004 0D46     		mov	r5, r1
 2138 0006 1746     		mov	r7, r2
 794:lvgl/src/lv_widgets/lv_list.c **** 
 2139              		.loc 1 794 5 is_stmt 1 view .LVU614
 797:lvgl/src/lv_widgets/lv_list.c ****     if(res != LV_RES_OK) return res;
ARM GAS  D:\Temp\cc6WWuOg.s 			page 64


 2140              		.loc 1 797 5 view .LVU615
 797:lvgl/src/lv_widgets/lv_list.c ****     if(res != LV_RES_OK) return res;
 2141              		.loc 1 797 11 is_stmt 0 view .LVU616
 2142 0008 4B4B     		ldr	r3, .L212
 2143 000a 1B68     		ldr	r3, [r3]
 2144 000c 9847     		blx	r3
 2145              	.LVL261:
 797:lvgl/src/lv_widgets/lv_list.c ****     if(res != LV_RES_OK) return res;
 2146              		.loc 1 797 11 view .LVU617
 2147 000e 0446     		mov	r4, r0
 2148              	.LVL262:
 798:lvgl/src/lv_widgets/lv_list.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, "");
 2149              		.loc 1 798 5 is_stmt 1 view .LVU618
 798:lvgl/src/lv_widgets/lv_list.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, "");
 2150              		.loc 1 798 7 is_stmt 0 view .LVU619
 2151 0010 0128     		cmp	r0, #1
 2152 0012 09D1     		bne	.L196
 799:lvgl/src/lv_widgets/lv_list.c **** 
 2153              		.loc 1 799 5 is_stmt 1 view .LVU620
 799:lvgl/src/lv_widgets/lv_list.c **** 
 2154              		.loc 1 799 7 is_stmt 0 view .LVU621
 2155 0014 072D     		cmp	r5, #7
 2156 0016 09D0     		beq	.L205
 801:lvgl/src/lv_widgets/lv_list.c ****                                         lv_obj_get_height(btn) != lv_area_get_height(param))) ||
 2157              		.loc 1 801 5 is_stmt 1 view .LVU622
 801:lvgl/src/lv_widgets/lv_list.c ****                                         lv_obj_get_height(btn) != lv_area_get_height(param))) ||
 2158              		.loc 1 801 7 is_stmt 0 view .LVU623
 2159 0018 022D     		cmp	r5, #2
 2160 001a 0DD0     		beq	.L206
 2161              	.LVL263:
 2162              	.L198:
 802:lvgl/src/lv_widgets/lv_list.c ****        sign == LV_SIGNAL_STYLE_CHG) {
 2163              		.loc 1 802 95 view .LVU624
 2164 001c 042D     		cmp	r5, #4
 2165 001e 16D0     		beq	.L199
 818:lvgl/src/lv_widgets/lv_list.c ****         if(lv_indev_is_dragging(lv_indev_get_act()) == false) {
 2166              		.loc 1 818 10 is_stmt 1 view .LVU625
 818:lvgl/src/lv_widgets/lv_list.c ****         if(lv_indev_is_dragging(lv_indev_get_act()) == false) {
 2167              		.loc 1 818 12 is_stmt 0 view .LVU626
 2168 0020 0E2D     		cmp	r5, #14
 2169 0022 54D0     		beq	.L207
 829:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 2170              		.loc 1 829 10 is_stmt 1 view .LVU627
 829:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
 2171              		.loc 1 829 12 is_stmt 0 view .LVU628
 2172 0024 002D     		cmp	r5, #0
 2173 0026 6AD0     		beq	.L208
 2174              	.LVL264:
 2175              	.L196:
 840:lvgl/src/lv_widgets/lv_list.c **** 
 2176              		.loc 1 840 1 view .LVU629
 2177 0028 2046     		mov	r0, r4
 2178 002a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2179              	.LVL265:
 2180              	.L205:
 799:lvgl/src/lv_widgets/lv_list.c **** 
 2181              		.loc 1 799 36 is_stmt 1 discriminator 1 view .LVU630
ARM GAS  D:\Temp\cc6WWuOg.s 			page 65


 799:lvgl/src/lv_widgets/lv_list.c **** 
 2182              		.loc 1 799 43 is_stmt 0 discriminator 1 view .LVU631
 2183 002c 4349     		ldr	r1, .L212+4
 2184 002e 3846     		mov	r0, r7
 2185              	.LVL266:
 799:lvgl/src/lv_widgets/lv_list.c **** 
 2186              		.loc 1 799 43 discriminator 1 view .LVU632
 2187 0030 FFF7FEFF 		bl	lv_obj_handle_get_type_signal
 2188              	.LVL267:
 2189 0034 0446     		mov	r4, r0
 2190 0036 F7E7     		b	.L196
 2191              	.LVL268:
 2192              	.L206:
 801:lvgl/src/lv_widgets/lv_list.c ****                                         lv_obj_get_height(btn) != lv_area_get_height(param))) ||
 2193              		.loc 1 801 41 discriminator 1 view .LVU633
 2194 0038 3046     		mov	r0, r6
 2195              	.LVL269:
 801:lvgl/src/lv_widgets/lv_list.c ****                                         lv_obj_get_height(btn) != lv_area_get_height(param))) ||
 2196              		.loc 1 801 41 discriminator 1 view .LVU634
 2197 003a FFF7FEFF 		bl	lv_obj_get_width
 2198              	.LVL270:
 2199              	.LBB109:
 2200              	.LBI109:
 2201              		.file 2 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_area.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @file lv_area.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_AREA_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <string.h>
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdbool.h>
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdint.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "lv_mem.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      DEFINES
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*To avoid overflow don't let the max ranges (reduce with 1000) */
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - 1000))
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      TYPEDEFS
ARM GAS  D:\Temp\cc6WWuOg.s 			page 66


  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Represents a point on the screen.
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x;
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y;
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_point_t;
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Represents an area of the screen. */
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x1;
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y1;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x2;
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y2;
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_area_t;
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Alignments */
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** enum {
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_CENTER = 0,
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_LEFT,
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_MID,
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_RIGHT,
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_LEFT,
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_MID,
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_RIGHT,
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_LEFT_MID,
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_RIGHT_MID,
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** };
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef uint8_t lv_align_t;
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * GLOBAL PROTOTYPES
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Initialize an area
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x1 left coordinate of the area
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y1 top coordinate of the area
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x2 right coordinate of the area
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y2 bottom coordinate of the area
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
ARM GAS  D:\Temp\cc6WWuOg.s 			page 67


  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Copy an area
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param dest pointer to the destination area
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param src pointer to the source area
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     _lv_memcpy_small(dest, src, sizeof(lv_area_t));
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** }
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Get the width of an area
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 2202              		.loc 2 107 26 is_stmt 1 discriminator 1 view .LVU635
 2203              	.LBB110:
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 2204              		.loc 2 109 5 discriminator 1 view .LVU636
 2205              		.loc 2 109 31 is_stmt 0 discriminator 1 view .LVU637
 2206 003e BB88     		ldrh	r3, [r7, #4]
 2207              		.loc 2 109 44 discriminator 1 view .LVU638
 2208 0040 3A88     		ldrh	r2, [r7]
 2209              		.loc 2 109 36 discriminator 1 view .LVU639
 2210 0042 9B1A     		subs	r3, r3, r2
 2211 0044 9BB2     		uxth	r3, r3
 2212              		.loc 2 109 49 discriminator 1 view .LVU640
 2213 0046 0133     		adds	r3, r3, #1
 2214              		.loc 2 109 12 discriminator 1 view .LVU641
 2215 0048 1BB2     		sxth	r3, r3
 2216              	.LVL271:
 2217              		.loc 2 109 12 discriminator 1 view .LVU642
 2218              	.LBE110:
 2219              	.LBE109:
 801:lvgl/src/lv_widgets/lv_list.c ****                                         lv_obj_get_height(btn) != lv_area_get_height(param))) ||
 2220              		.loc 1 801 37 discriminator 1 view .LVU643
 2221 004a 9842     		cmp	r0, r3
 2222 004c 23D0     		beq	.L209
 2223              	.L199:
 2224              	.LBB111:
 804:lvgl/src/lv_widgets/lv_list.c ****         if(label) {
 2225              		.loc 1 804 9 is_stmt 1 view .LVU644
 804:lvgl/src/lv_widgets/lv_list.c ****         if(label) {
 2226              		.loc 1 804 28 is_stmt 0 view .LVU645
 2227 004e 3046     		mov	r0, r6
 2228 0050 FFF7FEFF 		bl	lv_list_get_btn_label
 2229              	.LVL272:
 805:lvgl/src/lv_widgets/lv_list.c ****             const lv_font_t * font = lv_obj_get_style_text_font(label, LV_LABEL_PART_MAIN);
 2230              		.loc 1 805 9 is_stmt 1 view .LVU646
 805:lvgl/src/lv_widgets/lv_list.c ****             const lv_font_t * font = lv_obj_get_style_text_font(label, LV_LABEL_PART_MAIN);
 2231              		.loc 1 805 11 is_stmt 0 view .LVU647
 2232 0054 0546     		mov	r5, r0
 2233 0056 0028     		cmp	r0, #0
 2234 0058 E6D0     		beq	.L196
ARM GAS  D:\Temp\cc6WWuOg.s 			page 68


 2235              	.LBB112:
 806:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t font_h = lv_font_get_line_height(font);
 2236              		.loc 1 806 13 is_stmt 1 view .LVU648
 2237              	.LVL273:
 2238              	.LBB113:
 2239              	.LBI113:
 2240              		.file 3 "lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h"
   1:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   2:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
   3:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * @file lv_obj_style_dec.h
   4:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
   5:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
   6:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   7:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifndef LV_OBJ_STYLE_DEC_H
   8:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define LV_OBJ_STYLE_DEC_H
   9:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  10:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifdef __cplusplus
  11:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** extern "C" {
  12:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #endif
  13:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  14:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /*********************
  15:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      DEFINES
  16:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *********************/
  17:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  18:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
  19:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Macro to declare the most important style set/get API functions.
  20:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  21:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value of a style property from an object in the object's current state
  22:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -----------------------------------------------------------------------------
  23:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Get the value of a style property from an object in the object's current state.
  24:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Transition animation is taken into account.
  25:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not set in the object's styles check the parent(s) if the property can be 
  26:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If still not found return a default value.
  27:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  28:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t w = lv_obj_get_style_border_width(btn1, LV_BTN_PART_MAIN);`
  29:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  30:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a local style property for an object in a given state
  31:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------------------------
  32:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  33:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_set_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, 2);`
  34:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  35:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get a local style property's value of an object in a given state
  36:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ----------------------------------------------------------------
  37:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Return the best matching property in the given state.
  38:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - E.g. if `state` parameter is LV_STATE_PRESSED | LV_STATE_CHECKED` but the property defined on
  39:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    `LV_STATE_PRESSED` and `LV_STATE_DEFAULT` the best matching state is `LV_STATE_PRESSED`
  40:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    (because it has higher precedence) and it will be returned.
  41:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not found even in `LV_STATE_DEFAULT` `-1` is returned.
  42:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  43:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `//Type of result should be lv_style_int_t/lv_opa_t/lv_color_t/const void * according to th
  44:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t result;`
  45:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_get_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, &result);`
  46:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  47:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  48:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value from a style in a given state
  49:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -------------------------------------------
  50:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - The same rules applies to the return value then for "lv_obj_get_style_local_...()" above
ARM GAS  D:\Temp\cc6WWuOg.s 			page 69


  51:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  52:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `int16_t weight = lv_style_get_border_width(&style1, LV_STATE_PRESSED, &result);`
  53:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  54:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  55:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a value in a style in a given state
  56:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------
  57:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  58:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_set_border_width(&style1, LV_STATE_PRESSED, 2);`
  59:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
  60:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  61:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  62:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  63:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  64:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return (value_type) _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);       
  65:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  66:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  67:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  68:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  69:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  70:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);                    
  71:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  72:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  73:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_scalar(prop_name, func_name, value_type, style_type)                  
  74:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  75:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  76:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  77:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  78:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  79:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_nonscalar(prop_name, func_name, value_type, style_type)               
  80:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  81:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  82:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  83:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  84:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  85:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  86:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  87:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  88:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  89:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  90:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  91:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  92:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  93:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  94:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  95:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  96:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  97:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _LV_OBJ_STYLE_SET_GET_DECLARE(prop_name, func_name, value_type, style_type, scalar)        
  98:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_GET_STYLE_##scalar(prop_name, func_name, value_type, style_type)                          
  99:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_LOCAL_##scalar(prop_name, func_name, value_type, style_type)                    
 100:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_##scalar(prop_name, func_name, value_type, style_type)
 101:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
 102:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(RADIUS, radius, lv_style_int_t, _int, scalar)
 103:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 104:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 105:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_WIDTH, transform_width, lv_style_int_t, _int, scalar)
 106:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_HEIGHT, transform_height, lv_style_int_t, _int, scalar)
 107:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ANGLE, transform_angle, lv_style_int_t, _int, scalar)
ARM GAS  D:\Temp\cc6WWuOg.s 			page 70


 108:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ZOOM, transform_zoom, lv_style_int_t, _int, scalar)
 109:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OPA_SCALE, opa_scale, lv_opa_t, _opa, scalar)
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_TOP, pad_top, lv_style_int_t, _int, scalar)
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 115:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 116:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_BOTTOM, margin_bottom, lv_style_int_t, _int, scalar)
 117:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_LEFT, margin_left, lv_style_int_t, _int, scalar)
 118:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_RIGHT, margin_right, lv_style_int_t, _int, scalar)
 119:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_BLEND_MODE, bg_blend_mode, lv_blend_mode_t, _int, scalar)
 120:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_MAIN_STOP, bg_main_stop, lv_style_int_t, _int, scalar)
 121:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_STOP, bg_grad_stop, lv_style_int_t, _int, scalar)
 122:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_DIR, bg_grad_dir, lv_grad_dir_t, _int, scalar)
 123:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_COLOR, bg_color, lv_color_t, _color, nonscalar)
 124:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_COLOR, bg_grad_color, lv_color_t, _color, nonscalar)
 125:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_OPA, bg_opa, lv_opa_t, _opa, scalar)
 126:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_WIDTH, border_width, lv_style_int_t, _int, scalar)
 127:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_SIDE, border_side, lv_border_side_t, _int, scalar)
 128:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_BLEND_MODE, border_blend_mode, lv_blend_mode_t, _int, scalar)
 129:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_POST, border_post, bool, _int, scalar)
 130:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_COLOR, border_color, lv_color_t, _color, nonscalar)
 131:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_OPA, border_opa, lv_opa_t, _opa, scalar)
 132:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_WIDTH, outline_width, lv_style_int_t, _int, scalar)
 133:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_PAD, outline_pad, lv_style_int_t, _int, scalar)
 134:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_BLEND_MODE, outline_blend_mode, lv_blend_mode_t, _int, scalar
 135:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_COLOR, outline_color, lv_color_t, _color, nonscalar)
 136:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_OPA, outline_opa, lv_opa_t, _opa, scalar)
 137:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_WIDTH, shadow_width, lv_style_int_t, _int, scalar)
 138:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_X, shadow_ofs_x, lv_style_int_t, _int, scalar)
 139:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_Y, shadow_ofs_y, lv_style_int_t, _int, scalar)
 140:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_SPREAD, shadow_spread, lv_style_int_t, _int, scalar)
 141:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_BLEND_MODE, shadow_blend_mode, lv_blend_mode_t, _int, scalar)
 142:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_COLOR, shadow_color, lv_color_t, _color, nonscalar)
 143:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OPA, shadow_opa, lv_opa_t, _opa, scalar)
 144:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_REPEAT, pattern_repeat, bool, _int, scalar)
 145:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_BLEND_MODE, pattern_blend_mode, lv_blend_mode_t, _int, scalar
 146:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR, pattern_recolor, lv_color_t, _color, nonscalar)
 147:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_OPA, pattern_opa, lv_opa_t, _opa, scalar)
 148:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR_OPA, pattern_recolor_opa, lv_opa_t, _opa, scalar)
 149:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_IMAGE, pattern_image, const void *, _ptr, scalar)
 150:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LETTER_SPACE, value_letter_space, lv_style_int_t, _int, scalar)
 151:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LINE_SPACE, value_line_space, lv_style_int_t, _int, scalar)
 152:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_BLEND_MODE, value_blend_mode, lv_blend_mode_t, _int, scalar)
 153:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_X, value_ofs_x, lv_style_int_t, _int, scalar)
 154:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_Y, value_ofs_y, lv_style_int_t, _int, scalar)
 155:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_ALIGN, value_align, lv_align_t, _int, scalar)
 156:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_COLOR, value_color, lv_color_t, _color, nonscalar)
 157:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OPA, value_opa, lv_opa_t, _opa, scalar)
 158:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_FONT, value_font, const lv_font_t *, _ptr, scalar)
 159:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_STR, value_str, const char *, _ptr, scalar)
 160:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LETTER_SPACE, text_letter_space, lv_style_int_t, _int, scalar)
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LINE_SPACE, text_line_space, lv_style_int_t, _int, scalar)
 162:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 163:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_BLEND_MODE, text_blend_mode, lv_blend_mode_t, _int, scalar)
 164:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_COLOR, text_color, lv_color_t, _color, nonscalar)
ARM GAS  D:\Temp\cc6WWuOg.s 			page 71


 165:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_SEL_COLOR, text_sel_color, lv_color_t, _color, nonscalar)
 166:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_SEL_BG_COLOR, text_sel_bg_color, lv_color_t, _color, nonscalar)
 167:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_OPA, text_opa, lv_opa_t, _opa, scalar)
 168:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_FONT, text_font, const lv_font_t *, _ptr, scalar)
 2241              		.loc 3 168 1 view .LVU649
 2242              	.LBB114:
 2243              		.loc 3 168 1 view .LVU650
 2244 005a 48F28E02 		movw	r2, #32910
 2245 005e 0021     		movs	r1, #0
 2246 0060 FFF7FEFF 		bl	_lv_obj_get_style_ptr
 2247              	.LVL274:
 2248              		.loc 3 168 1 is_stmt 0 view .LVU651
 2249              	.LBE114:
 2250              	.LBE113:
 807:lvgl/src/lv_widgets/lv_list.c ****             if(lv_obj_get_base_dir(btn) == LV_BIDI_DIR_RTL) {
 2251              		.loc 1 807 13 is_stmt 1 view .LVU652
 2252              	.LBB115:
 2253              	.LBI115:
 2254              		.file 4 "lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h"
   1:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
   2:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @file lv_font.h
   3:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *
   4:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
   5:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
   6:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #ifndef LV_FONT_H
   7:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #define LV_FONT_H
   8:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
   9:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** extern "C" {
  11:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #endif
  12:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  13:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /*********************
  14:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *********************/
  16:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include <stdint.h>
  18:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include <stddef.h>
  19:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include <stdbool.h>
  20:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  21:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include "lv_symbol_def.h"
  22:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include "../lv_misc/lv_area.h"
  23:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  24:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /*********************
  25:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *      DEFINES
  26:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *********************/
  27:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  28:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**********************
  29:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *      TYPEDEFS
  30:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  **********************/
  31:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  32:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /*------------------
  33:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * General types
  34:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *-----------------*/
  35:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  36:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /** Describes the properties of a glyph. */
  37:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** typedef struct {
  38:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint16_t adv_w; /**< The glyph needs this space. Draw the next glyph after this width. 8 bit in
ARM GAS  D:\Temp\cc6WWuOg.s 			page 72


  39:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint16_t box_w;  /**< Width of the glyph's bounding box*/
  40:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint16_t box_h;  /**< Height of the glyph's bounding box*/
  41:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int16_t ofs_x;   /**< x offset of the bounding box*/
  42:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int16_t ofs_y;  /**< y offset of the bounding box*/
  43:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint8_t bpp;   /**< Bit-per-pixel: 1, 2, 4, 8*/
  44:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** } lv_font_glyph_dsc_t;
  45:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  46:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /** The bitmaps might be upscaled by 3 to achieve subpixel rendering. */
  47:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** enum {
  48:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_NONE,
  49:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_HOR,
  50:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_VER,
  51:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_BOTH,
  52:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** };
  53:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  54:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** typedef uint8_t lv_font_subpx_t;
  55:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  56:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /** Describe the properties of a font*/
  57:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** typedef struct _lv_font_struct {
  58:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     /** Get a glyph's descriptor from a font*/
  59:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     bool (*get_glyph_dsc)(const struct _lv_font_struct *, lv_font_glyph_dsc_t *, uint32_t letter, u
  60:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  61:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     /** Get a glyph's bitmap from a font*/
  62:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     const uint8_t * (*get_glyph_bitmap)(const struct _lv_font_struct *, uint32_t);
  63:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  64:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     /*Pointer to the font in a font pack (must have the same line height)*/
  65:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     lv_coord_t line_height;         /**< The real line height where any text fits*/
  66:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     lv_coord_t base_line;           /**< Base line measured from the top of the line_height*/
  67:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint8_t subpx  : 2;             /**< An element of `lv_font_subpx_t`*/
  68:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  69:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int8_t underline_position;      /**< Distance between the top of the underline and base line (<
  70:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int8_t underline_thickness;     /**< Thickness of the underline*/
  71:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  72:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     void * dsc;                     /**< Store implementation specific or run_time data or caching 
  73:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #if LV_USE_USER_DATA
  74:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     lv_font_user_data_t user_data;  /**< Custom user data for font. */
  75:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #endif
  76:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  77:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** } lv_font_t;
  78:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  79:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**********************
  80:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * GLOBAL PROTOTYPES
  81:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  **********************/
  82:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  83:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
  84:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Return with the bitmap of a font.
  85:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font_p pointer to a font
  86:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter an UNICODE character code
  87:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return pointer to the bitmap of the letter
  88:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
  89:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** const uint8_t * lv_font_get_glyph_bitmap(const lv_font_t * font_p, uint32_t letter);
  90:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  91:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
  92:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Get the descriptor of a glyph
  93:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font_p pointer to font
  94:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param dsc_out store the result descriptor here
  95:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter an UNICODE letter code
ARM GAS  D:\Temp\cc6WWuOg.s 			page 73


  96:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return true: descriptor is successfully loaded into `dsc_out`.
  97:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *         false: the letter was not found, no data is loaded to `dsc_out`
  98:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
  99:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** bool lv_font_get_glyph_dsc(const lv_font_t * font_p, lv_font_glyph_dsc_t * dsc_out, uint32_t letter
 100:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****                            uint32_t letter_next);
 101:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
 102:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
 103:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Get the width of a glyph with kerning
 104:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font pointer to a font
 105:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter an UNICODE letter
 106:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter_next the next letter after `letter`. Used for kerning
 107:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return the width of the glyph
 108:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
 109:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** uint16_t lv_font_get_glyph_width(const lv_font_t * font, uint32_t letter, uint32_t letter_next);
 110:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
 111:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
 112:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Get the line height of a font. All characters fit into this height
 113:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font_p pointer to a font
 114:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return the height of a font
 115:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
 116:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** static inline lv_coord_t lv_font_get_line_height(const lv_font_t * font_p)
 2255              		.loc 4 116 26 view .LVU653
 2256              	.LBB116:
 117:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** {
 118:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     return font_p->line_height;
 2257              		.loc 4 118 5 view .LVU654
 2258              		.loc 4 118 18 is_stmt 0 view .LVU655
 2259 0064 B0F90870 		ldrsh	r7, [r0, #8]
 2260              	.LVL275:
 2261              		.loc 4 118 18 view .LVU656
 2262              	.LBE116:
 2263              	.LBE115:
 808:lvgl/src/lv_widgets/lv_list.c ****                 lv_coord_t pad = lv_obj_get_style_pad_left(btn, LV_BTN_PART_MAIN);
 2264              		.loc 1 808 13 is_stmt 1 view .LVU657
 808:lvgl/src/lv_widgets/lv_list.c ****                 lv_coord_t pad = lv_obj_get_style_pad_left(btn, LV_BTN_PART_MAIN);
 2265              		.loc 1 808 16 is_stmt 0 view .LVU658
 2266 0068 3046     		mov	r0, r6
 2267              	.LVL276:
 808:lvgl/src/lv_widgets/lv_list.c ****                 lv_coord_t pad = lv_obj_get_style_pad_left(btn, LV_BTN_PART_MAIN);
 2268              		.loc 1 808 16 view .LVU659
 2269 006a FFF7FEFF 		bl	lv_obj_get_base_dir
 2270              	.LVL277:
 808:lvgl/src/lv_widgets/lv_list.c ****                 lv_coord_t pad = lv_obj_get_style_pad_left(btn, LV_BTN_PART_MAIN);
 2271              		.loc 1 808 15 view .LVU660
 2272 006e 0128     		cmp	r0, #1
 2273 0070 1DD0     		beq	.L210
 2274              	.LBB117:
 813:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_set_size(label, btn->coords.x2 - label->coords.x1 - pad + 1, font_h);
 2275              		.loc 1 813 17 is_stmt 1 view .LVU661
 2276              	.LVL278:
 2277              	.LBB118:
 2278              	.LBI118:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2279              		.loc 3 113 1 view .LVU662
 2280              	.LBB119:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2281              		.loc 3 113 1 view .LVU663
ARM GAS  D:\Temp\cc6WWuOg.s 			page 74


 2282 0072 1322     		movs	r2, #19
 2283 0074 0021     		movs	r1, #0
 2284 0076 3046     		mov	r0, r6
 2285 0078 FFF7FEFF 		bl	_lv_obj_get_style_int
 2286              	.LVL279:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2287              		.loc 3 113 1 is_stmt 0 view .LVU664
 2288              	.LBE119:
 2289              	.LBE118:
 814:lvgl/src/lv_widgets/lv_list.c ****             }
 2290              		.loc 1 814 17 is_stmt 1 view .LVU665
 814:lvgl/src/lv_widgets/lv_list.c ****             }
 2291              		.loc 1 814 51 is_stmt 0 view .LVU666
 2292 007c B18A     		ldrh	r1, [r6, #20]
 814:lvgl/src/lv_widgets/lv_list.c ****             }
 2293              		.loc 1 814 70 view .LVU667
 2294 007e 2B8A     		ldrh	r3, [r5, #16]
 814:lvgl/src/lv_widgets/lv_list.c ****             }
 2295              		.loc 1 814 55 view .LVU668
 2296 0080 C91A     		subs	r1, r1, r3
 2297 0082 89B2     		uxth	r1, r1
 814:lvgl/src/lv_widgets/lv_list.c ****             }
 2298              		.loc 1 814 74 view .LVU669
 2299 0084 091A     		subs	r1, r1, r0
 2300 0086 89B2     		uxth	r1, r1
 814:lvgl/src/lv_widgets/lv_list.c ****             }
 2301              		.loc 1 814 80 view .LVU670
 2302 0088 0131     		adds	r1, r1, #1
 814:lvgl/src/lv_widgets/lv_list.c ****             }
 2303              		.loc 1 814 17 view .LVU671
 2304 008a 3A46     		mov	r2, r7
 2305 008c 09B2     		sxth	r1, r1
 2306 008e 2846     		mov	r0, r5
 2307              	.LVL280:
 814:lvgl/src/lv_widgets/lv_list.c ****             }
 2308              		.loc 1 814 17 view .LVU672
 2309 0090 FFF7FEFF 		bl	lv_obj_set_size
 2310              	.LVL281:
 2311 0094 C8E7     		b	.L196
 2312              	.LVL282:
 2313              	.L209:
 814:lvgl/src/lv_widgets/lv_list.c ****             }
 2314              		.loc 1 814 17 view .LVU673
 2315              	.LBE117:
 2316              	.LBE112:
 2317              	.LBE111:
 802:lvgl/src/lv_widgets/lv_list.c ****        sign == LV_SIGNAL_STYLE_CHG) {
 2318              		.loc 1 802 41 discriminator 2 view .LVU674
 2319 0096 3046     		mov	r0, r6
 2320 0098 FFF7FEFF 		bl	lv_obj_get_height
 2321              	.LVL283:
 2322              	.LBB124:
 2323              	.LBI124:
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** }
 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Get the height of an area
ARM GAS  D:\Temp\cc6WWuOg.s 			page 75


 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 2324              		.loc 2 117 26 is_stmt 1 discriminator 2 view .LVU675
 2325              	.LBB125:
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 119:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 2326              		.loc 2 119 5 discriminator 2 view .LVU676
 2327              		.loc 2 119 31 is_stmt 0 discriminator 2 view .LVU677
 2328 009c FB88     		ldrh	r3, [r7, #6]
 2329              		.loc 2 119 44 discriminator 2 view .LVU678
 2330 009e 7A88     		ldrh	r2, [r7, #2]
 2331              		.loc 2 119 36 discriminator 2 view .LVU679
 2332 00a0 9B1A     		subs	r3, r3, r2
 2333 00a2 9BB2     		uxth	r3, r3
 2334              		.loc 2 119 49 discriminator 2 view .LVU680
 2335 00a4 0133     		adds	r3, r3, #1
 2336              		.loc 2 119 12 discriminator 2 view .LVU681
 2337 00a6 1BB2     		sxth	r3, r3
 2338              	.LVL284:
 2339              		.loc 2 119 12 discriminator 2 view .LVU682
 2340              	.LBE125:
 2341              	.LBE124:
 801:lvgl/src/lv_widgets/lv_list.c ****                                         lv_obj_get_height(btn) != lv_area_get_height(param))) ||
 2342              		.loc 1 801 91 discriminator 2 view .LVU683
 2343 00a8 9842     		cmp	r0, r3
 2344 00aa D0D1     		bne	.L199
 2345 00ac B6E7     		b	.L198
 2346              	.LVL285:
 2347              	.L210:
 2348              	.LBB126:
 2349              	.LBB123:
 2350              	.LBB120:
 809:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_set_size(label, label->coords.x2 - btn->coords.x1 - pad, font_h);
 2351              		.loc 1 809 17 is_stmt 1 view .LVU684
 2352              	.LBB121:
 2353              	.LBI121:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2354              		.loc 3 112 1 view .LVU685
 2355              	.LBB122:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2356              		.loc 3 112 1 view .LVU686
 2357 00ae 1222     		movs	r2, #18
 2358 00b0 0021     		movs	r1, #0
 2359 00b2 3046     		mov	r0, r6
 2360 00b4 FFF7FEFF 		bl	_lv_obj_get_style_int
 2361              	.LVL286:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2362              		.loc 3 112 1 is_stmt 0 view .LVU687
 2363              	.LBE122:
 2364              	.LBE121:
 810:lvgl/src/lv_widgets/lv_list.c ****             }
 2365              		.loc 1 810 17 is_stmt 1 view .LVU688
 810:lvgl/src/lv_widgets/lv_list.c ****             }
 2366              		.loc 1 810 53 is_stmt 0 view .LVU689
 2367 00b8 A98A     		ldrh	r1, [r5, #20]
ARM GAS  D:\Temp\cc6WWuOg.s 			page 76


 810:lvgl/src/lv_widgets/lv_list.c ****             }
 2368              		.loc 1 810 70 view .LVU690
 2369 00ba 338A     		ldrh	r3, [r6, #16]
 810:lvgl/src/lv_widgets/lv_list.c ****             }
 2370              		.loc 1 810 57 view .LVU691
 2371 00bc C91A     		subs	r1, r1, r3
 2372 00be 89B2     		uxth	r1, r1
 810:lvgl/src/lv_widgets/lv_list.c ****             }
 2373              		.loc 1 810 74 view .LVU692
 2374 00c0 091A     		subs	r1, r1, r0
 810:lvgl/src/lv_widgets/lv_list.c ****             }
 2375              		.loc 1 810 17 view .LVU693
 2376 00c2 3A46     		mov	r2, r7
 2377 00c4 09B2     		sxth	r1, r1
 2378 00c6 2846     		mov	r0, r5
 2379              	.LVL287:
 810:lvgl/src/lv_widgets/lv_list.c ****             }
 2380              		.loc 1 810 17 view .LVU694
 2381 00c8 FFF7FEFF 		bl	lv_obj_set_size
 2382              	.LVL288:
 2383              	.LBE120:
 2384 00cc ACE7     		b	.L196
 2385              	.LVL289:
 2386              	.L207:
 810:lvgl/src/lv_widgets/lv_list.c ****             }
 2387              		.loc 1 810 17 view .LVU695
 2388              	.LBE123:
 2389              	.LBE126:
 819:lvgl/src/lv_widgets/lv_list.c ****             lv_obj_t * list = lv_obj_get_parent(lv_obj_get_parent(btn));
 2390              		.loc 1 819 9 is_stmt 1 view .LVU696
 819:lvgl/src/lv_widgets/lv_list.c ****             lv_obj_t * list = lv_obj_get_parent(lv_obj_get_parent(btn));
 2391              		.loc 1 819 33 is_stmt 0 view .LVU697
 2392 00ce FFF7FEFF 		bl	lv_indev_get_act
 2393              	.LVL290:
 819:lvgl/src/lv_widgets/lv_list.c ****             lv_obj_t * list = lv_obj_get_parent(lv_obj_get_parent(btn));
 2394              		.loc 1 819 12 view .LVU698
 2395 00d2 FFF7FEFF 		bl	lv_indev_is_dragging
 2396              	.LVL291:
 819:lvgl/src/lv_widgets/lv_list.c ****             lv_obj_t * list = lv_obj_get_parent(lv_obj_get_parent(btn));
 2397              		.loc 1 819 11 view .LVU699
 2398 00d6 0028     		cmp	r0, #0
 2399 00d8 A6D1     		bne	.L196
 2400              	.LBB127:
 820:lvgl/src/lv_widgets/lv_list.c ****             lv_list_focus_btn(list, btn);
 2401              		.loc 1 820 13 is_stmt 1 view .LVU700
 820:lvgl/src/lv_widgets/lv_list.c ****             lv_list_focus_btn(list, btn);
 2402              		.loc 1 820 49 is_stmt 0 view .LVU701
 2403 00da 3046     		mov	r0, r6
 2404 00dc FFF7FEFF 		bl	lv_obj_get_parent
 2405              	.LVL292:
 820:lvgl/src/lv_widgets/lv_list.c ****             lv_list_focus_btn(list, btn);
 2406              		.loc 1 820 31 view .LVU702
 2407 00e0 FFF7FEFF 		bl	lv_obj_get_parent
 2408              	.LVL293:
 2409 00e4 0546     		mov	r5, r0
 2410              	.LVL294:
 821:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_GROUP
ARM GAS  D:\Temp\cc6WWuOg.s 			page 77


 2411              		.loc 1 821 13 is_stmt 1 view .LVU703
 2412 00e6 3146     		mov	r1, r6
 2413 00e8 FFF7FEFF 		bl	lv_list_focus_btn
 2414              	.LVL295:
 823:lvgl/src/lv_widgets/lv_list.c ****                 lv_group_focus_obj(list);
 2415              		.loc 1 823 13 view .LVU704
 823:lvgl/src/lv_widgets/lv_list.c ****                 lv_group_focus_obj(list);
 2416              		.loc 1 823 16 is_stmt 0 view .LVU705
 2417 00ec 2846     		mov	r0, r5
 2418 00ee FFF7FEFF 		bl	lv_obj_get_group
 2419              	.LVL296:
 823:lvgl/src/lv_widgets/lv_list.c ****                 lv_group_focus_obj(list);
 2420              		.loc 1 823 15 view .LVU706
 2421 00f2 0028     		cmp	r0, #0
 2422 00f4 98D0     		beq	.L196
 824:lvgl/src/lv_widgets/lv_list.c ****             }
 2423              		.loc 1 824 17 is_stmt 1 view .LVU707
 2424 00f6 2846     		mov	r0, r5
 2425 00f8 FFF7FEFF 		bl	lv_group_focus_obj
 2426              	.LVL297:
 2427 00fc 94E7     		b	.L196
 2428              	.LVL298:
 2429              	.L208:
 824:lvgl/src/lv_widgets/lv_list.c ****             }
 2430              		.loc 1 824 17 is_stmt 0 view .LVU708
 2431              	.LBE127:
 2432              	.LBB128:
 831:lvgl/src/lv_widgets/lv_list.c ****         lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 2433              		.loc 1 831 9 is_stmt 1 view .LVU709
 831:lvgl/src/lv_widgets/lv_list.c ****         lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 2434              		.loc 1 831 45 is_stmt 0 view .LVU710
 2435 00fe 3046     		mov	r0, r6
 2436 0100 FFF7FEFF 		bl	lv_obj_get_parent
 2437              	.LVL299:
 831:lvgl/src/lv_widgets/lv_list.c ****         lv_list_ext_t * ext = lv_obj_get_ext_attr(list);
 2438              		.loc 1 831 27 view .LVU711
 2439 0104 FFF7FEFF 		bl	lv_obj_get_parent
 2440              	.LVL300:
 2441 0108 0546     		mov	r5, r0
 2442              	.LVL301:
 832:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_t * sel  = lv_list_get_btn_selected(list);
 2443              		.loc 1 832 9 is_stmt 1 view .LVU712
 832:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_t * sel  = lv_list_get_btn_selected(list);
 2444              		.loc 1 832 31 is_stmt 0 view .LVU713
 2445 010a FFF7FEFF 		bl	lv_obj_get_ext_attr
 2446              	.LVL302:
 832:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_t * sel  = lv_list_get_btn_selected(list);
 2447              		.loc 1 832 31 view .LVU714
 2448 010e 0746     		mov	r7, r0
 2449              	.LVL303:
 833:lvgl/src/lv_widgets/lv_list.c ****         if(sel == btn) lv_list_focus_btn(list, lv_list_get_next_btn(list, btn));
 2450              		.loc 1 833 9 is_stmt 1 view .LVU715
 833:lvgl/src/lv_widgets/lv_list.c ****         if(sel == btn) lv_list_focus_btn(list, lv_list_get_next_btn(list, btn));
 2451              		.loc 1 833 27 is_stmt 0 view .LVU716
 2452 0110 2846     		mov	r0, r5
 2453              	.LVL304:
 833:lvgl/src/lv_widgets/lv_list.c ****         if(sel == btn) lv_list_focus_btn(list, lv_list_get_next_btn(list, btn));
ARM GAS  D:\Temp\cc6WWuOg.s 			page 78


 2454              		.loc 1 833 27 view .LVU717
 2455 0112 FFF7FEFF 		bl	lv_list_get_btn_selected
 2456              	.LVL305:
 834:lvgl/src/lv_widgets/lv_list.c ****         if(ext->last_sel_btn == btn) ext->last_sel_btn = NULL;
 2457              		.loc 1 834 9 is_stmt 1 view .LVU718
 834:lvgl/src/lv_widgets/lv_list.c ****         if(ext->last_sel_btn == btn) ext->last_sel_btn = NULL;
 2458              		.loc 1 834 11 is_stmt 0 view .LVU719
 2459 0116 8642     		cmp	r6, r0
 2460 0118 05D0     		beq	.L211
 2461              	.LVL306:
 2462              	.L203:
 835:lvgl/src/lv_widgets/lv_list.c **** #endif
 2463              		.loc 1 835 9 is_stmt 1 view .LVU720
 835:lvgl/src/lv_widgets/lv_list.c **** #endif
 2464              		.loc 1 835 15 is_stmt 0 view .LVU721
 2465 011a 3B6C     		ldr	r3, [r7, #64]
 835:lvgl/src/lv_widgets/lv_list.c **** #endif
 2466              		.loc 1 835 11 view .LVU722
 2467 011c B342     		cmp	r3, r6
 2468 011e 83D1     		bne	.L196
 835:lvgl/src/lv_widgets/lv_list.c **** #endif
 2469              		.loc 1 835 38 is_stmt 1 discriminator 1 view .LVU723
 835:lvgl/src/lv_widgets/lv_list.c **** #endif
 2470              		.loc 1 835 56 is_stmt 0 discriminator 1 view .LVU724
 2471 0120 0023     		movs	r3, #0
 2472 0122 3B64     		str	r3, [r7, #64]
 2473 0124 80E7     		b	.L196
 2474              	.LVL307:
 2475              	.L211:
 834:lvgl/src/lv_widgets/lv_list.c ****         if(ext->last_sel_btn == btn) ext->last_sel_btn = NULL;
 2476              		.loc 1 834 24 is_stmt 1 discriminator 1 view .LVU725
 2477 0126 3146     		mov	r1, r6
 2478 0128 2846     		mov	r0, r5
 2479              	.LVL308:
 834:lvgl/src/lv_widgets/lv_list.c ****         if(ext->last_sel_btn == btn) ext->last_sel_btn = NULL;
 2480              		.loc 1 834 24 is_stmt 0 discriminator 1 view .LVU726
 2481 012a FFF7FEFF 		bl	lv_list_get_next_btn
 2482              	.LVL309:
 2483 012e 0146     		mov	r1, r0
 2484 0130 2846     		mov	r0, r5
 2485 0132 FFF7FEFF 		bl	lv_list_focus_btn
 2486              	.LVL310:
 2487 0136 F0E7     		b	.L203
 2488              	.L213:
 2489              		.align	2
 2490              	.L212:
 2491 0138 00000000 		.word	.LANCHOR1
 2492 013c 00000000 		.word	.LC4
 2493              	.LBE128:
 2494              		.cfi_endproc
 2495              	.LFE509:
 2497              		.section	.text.lv_list_get_layout,"ax",%progbits
 2498              		.align	1
 2499              		.global	lv_list_get_layout
 2500              		.syntax unified
 2501              		.thumb
 2502              		.thumb_func
ARM GAS  D:\Temp\cc6WWuOg.s 			page 79


 2503              		.fpu fpv4-sp-d16
 2505              	lv_list_get_layout:
 2506              	.LVL311:
 2507              	.LFB504:
 529:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 2508              		.loc 1 529 1 is_stmt 1 view -0
 2509              		.cfi_startproc
 2510              		@ args = 0, pretend = 0, frame = 0
 2511              		@ frame_needed = 0, uses_anonymous_args = 0
 529:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 2512              		.loc 1 529 1 is_stmt 0 view .LVU728
 2513 0000 10B5     		push	{r4, lr}
 2514              	.LCFI26:
 2515              		.cfi_def_cfa_offset 8
 2516              		.cfi_offset 4, -8
 2517              		.cfi_offset 14, -4
 2518 0002 0446     		mov	r4, r0
 530:lvgl/src/lv_widgets/lv_list.c **** 
 2519              		.loc 1 530 5 is_stmt 1 view .LVU729
 530:lvgl/src/lv_widgets/lv_list.c **** 
 2520              		.loc 1 530 5 view .LVU730
 2521 0004 FFF7FEFF 		bl	lv_debug_check_null
 2522              	.LVL312:
 530:lvgl/src/lv_widgets/lv_list.c **** 
 2523              		.loc 1 530 5 is_stmt 0 view .LVU731
 2524 0008 28B9     		cbnz	r0, .L215
 530:lvgl/src/lv_widgets/lv_list.c **** 
 2525              		.loc 1 530 5 is_stmt 1 discriminator 1 view .LVU732
 530:lvgl/src/lv_widgets/lv_list.c **** 
 2526              		.loc 1 530 5 discriminator 1 view .LVU733
 2527 000a 2246     		mov	r2, r4
 2528 000c 0023     		movs	r3, #0
 2529 000e 0548     		ldr	r0, .L218
 2530 0010 FFF7FEFF 		bl	lv_debug_log_error
 2531              	.LVL313:
 2532              	.L216:
 530:lvgl/src/lv_widgets/lv_list.c **** 
 2533              		.loc 1 530 5 discriminator 1 view .LVU734
 530:lvgl/src/lv_widgets/lv_list.c **** 
 2534              		.loc 1 530 5 discriminator 1 view .LVU735
 2535 0014 FEE7     		b	.L216
 2536              	.L215:
 530:lvgl/src/lv_widgets/lv_list.c **** 
 2537              		.loc 1 530 38 view .LVU736
 532:lvgl/src/lv_widgets/lv_list.c **** }
 2538              		.loc 1 532 5 view .LVU737
 2539              	.LVL314:
 2540              	.LBB129:
 2541              	.LBI129:
 2542              		.file 5 "lvgl/src/lv_widgets/lv_page.h"
   1:lvgl/src/lv_widgets/lv_page.h **** /**
   2:lvgl/src/lv_widgets/lv_page.h ****  * @file lv_page.h
   3:lvgl/src/lv_widgets/lv_page.h ****  *
   4:lvgl/src/lv_widgets/lv_page.h ****  */
   5:lvgl/src/lv_widgets/lv_page.h **** 
   6:lvgl/src/lv_widgets/lv_page.h **** #ifndef LV_PAGE_H
   7:lvgl/src/lv_widgets/lv_page.h **** #define LV_PAGE_H
ARM GAS  D:\Temp\cc6WWuOg.s 			page 80


   8:lvgl/src/lv_widgets/lv_page.h **** 
   9:lvgl/src/lv_widgets/lv_page.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/lv_page.h **** extern "C" {
  11:lvgl/src/lv_widgets/lv_page.h **** #endif
  12:lvgl/src/lv_widgets/lv_page.h **** 
  13:lvgl/src/lv_widgets/lv_page.h **** /*********************
  14:lvgl/src/lv_widgets/lv_page.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/lv_page.h ****  *********************/
  16:lvgl/src/lv_widgets/lv_page.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/lv_page.h **** 
  18:lvgl/src/lv_widgets/lv_page.h **** #if LV_USE_PAGE != 0
  19:lvgl/src/lv_widgets/lv_page.h **** 
  20:lvgl/src/lv_widgets/lv_page.h **** /*Testing of dependencies*/
  21:lvgl/src/lv_widgets/lv_page.h **** #if LV_USE_CONT == 0
  22:lvgl/src/lv_widgets/lv_page.h **** #error "lv_page: lv_cont is required. Enable it in lv_conf.h (LV_USE_CONT 1)"
  23:lvgl/src/lv_widgets/lv_page.h **** #endif
  24:lvgl/src/lv_widgets/lv_page.h **** 
  25:lvgl/src/lv_widgets/lv_page.h **** #include "lv_cont.h"
  26:lvgl/src/lv_widgets/lv_page.h **** #include "../lv_core/lv_indev.h"
  27:lvgl/src/lv_widgets/lv_page.h **** #include "../lv_misc/lv_anim.h"
  28:lvgl/src/lv_widgets/lv_page.h **** 
  29:lvgl/src/lv_widgets/lv_page.h **** /*********************
  30:lvgl/src/lv_widgets/lv_page.h ****  *      DEFINES
  31:lvgl/src/lv_widgets/lv_page.h ****  *********************/
  32:lvgl/src/lv_widgets/lv_page.h **** 
  33:lvgl/src/lv_widgets/lv_page.h **** /**********************
  34:lvgl/src/lv_widgets/lv_page.h ****  *      TYPEDEFS
  35:lvgl/src/lv_widgets/lv_page.h ****  **********************/
  36:lvgl/src/lv_widgets/lv_page.h **** 
  37:lvgl/src/lv_widgets/lv_page.h **** /** Scrollbar modes: shows when should the scrollbars be visible*/
  38:lvgl/src/lv_widgets/lv_page.h **** enum {
  39:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_OFF    = 0x0, /**< Never show scroll bars*/
  40:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_ON     = 0x1, /**< Always show scroll bars*/
  41:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_DRAG   = 0x2, /**< Show scroll bars when page is being dragged*/
  42:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_AUTO   = 0x3, /**< Show scroll bars when the scrollable container is large en
  43:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_HIDE   = 0x4, /**< Hide the scroll bar temporally*/
  44:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_UNHIDE = 0x8, /**< Unhide the previously hidden scroll bar. Recover original 
  45:lvgl/src/lv_widgets/lv_page.h **** };
  46:lvgl/src/lv_widgets/lv_page.h **** typedef uint8_t lv_scrollbar_mode_t;
  47:lvgl/src/lv_widgets/lv_page.h **** 
  48:lvgl/src/lv_widgets/lv_page.h **** /** Edges: describes the four edges of the page*/
  49:lvgl/src/lv_widgets/lv_page.h **** enum { LV_PAGE_EDGE_LEFT = 0x1, LV_PAGE_EDGE_TOP = 0x2, LV_PAGE_EDGE_RIGHT = 0x4, LV_PAGE_EDGE_BOTT
  50:lvgl/src/lv_widgets/lv_page.h **** typedef uint8_t lv_page_edge_t;
  51:lvgl/src/lv_widgets/lv_page.h **** 
  52:lvgl/src/lv_widgets/lv_page.h **** /*Data of page*/
  53:lvgl/src/lv_widgets/lv_page.h **** typedef struct {
  54:lvgl/src/lv_widgets/lv_page.h ****     lv_cont_ext_t bg; /*Ext. of ancestor*/
  55:lvgl/src/lv_widgets/lv_page.h ****     /*New data for this type */
  56:lvgl/src/lv_widgets/lv_page.h ****     lv_obj_t * scrl; /*The scrollable object on the background*/
  57:lvgl/src/lv_widgets/lv_page.h ****     struct {
  58:lvgl/src/lv_widgets/lv_page.h ****         lv_style_list_t style; /*Style of scrollbars*/
  59:lvgl/src/lv_widgets/lv_page.h ****         lv_area_t hor_area;       /*Horizontal scrollbar area relative to the page. (Handled by the
  60:lvgl/src/lv_widgets/lv_page.h ****         lv_area_t ver_area;       /*Vertical scrollbar area relative to the page (Handled by the li
  61:lvgl/src/lv_widgets/lv_page.h ****         uint8_t hor_draw : 1;     /*1: horizontal scrollbar is visible now (Handled by the library)
  62:lvgl/src/lv_widgets/lv_page.h ****         uint8_t ver_draw : 1;     /*1: vertical scrollbar is visible now (Handled by the library)*/
  63:lvgl/src/lv_widgets/lv_page.h ****         lv_scrollbar_mode_t mode : 3;    /*Scrollbar visibility from 'lv_scrollbar_mode_t'*/
  64:lvgl/src/lv_widgets/lv_page.h ****     } scrlbar;
ARM GAS  D:\Temp\cc6WWuOg.s 			page 81


  65:lvgl/src/lv_widgets/lv_page.h **** #if LV_USE_ANIMATION
  66:lvgl/src/lv_widgets/lv_page.h ****     struct {
  67:lvgl/src/lv_widgets/lv_page.h ****         lv_anim_value_t state;    /*Store the current size of the edge flash effect*/
  68:lvgl/src/lv_widgets/lv_page.h ****         lv_style_list_t style; /*Style of edge flash effect (usually homogeneous circle)*/
  69:lvgl/src/lv_widgets/lv_page.h ****         uint8_t enabled : 1;      /*1: Show a flash animation on the edge*/
  70:lvgl/src/lv_widgets/lv_page.h ****         uint8_t top_ip : 1;       /*Used internally to show that top most position is reached (flas
  71:lvgl/src/lv_widgets/lv_page.h ****                                      Progress)*/
  72:lvgl/src/lv_widgets/lv_page.h ****         uint8_t bottom_ip : 1;    /*Used internally to show that bottom most position is reached (f
  73:lvgl/src/lv_widgets/lv_page.h ****                                      is In Progress)*/
  74:lvgl/src/lv_widgets/lv_page.h ****         uint8_t right_ip : 1;     /*Used internally to show that right most position is reached (fl
  75:lvgl/src/lv_widgets/lv_page.h ****                                      is In Progress)*/
  76:lvgl/src/lv_widgets/lv_page.h ****         uint8_t left_ip : 1;      /*Used internally to show that left most position is reached (fla
  77:lvgl/src/lv_widgets/lv_page.h ****                                      In Progress)*/
  78:lvgl/src/lv_widgets/lv_page.h ****     } edge_flash;
  79:lvgl/src/lv_widgets/lv_page.h **** 
  80:lvgl/src/lv_widgets/lv_page.h ****     uint16_t anim_time; /*Scroll animation time*/
  81:lvgl/src/lv_widgets/lv_page.h **** #endif
  82:lvgl/src/lv_widgets/lv_page.h ****     lv_obj_t * scroll_prop_obj;          /*Pointer to child page from where the scroll is being pro
  83:lvgl/src/lv_widgets/lv_page.h ****     uint8_t scroll_prop : 1;   /*The direction of the scroll propagation*/
  84:lvgl/src/lv_widgets/lv_page.h **** } lv_page_ext_t;
  85:lvgl/src/lv_widgets/lv_page.h **** 
  86:lvgl/src/lv_widgets/lv_page.h **** enum {
  87:lvgl/src/lv_widgets/lv_page.h ****     LV_PAGE_PART_BG = LV_CONT_PART_MAIN,
  88:lvgl/src/lv_widgets/lv_page.h ****     LV_PAGE_PART_SCROLLBAR = _LV_OBJ_PART_VIRTUAL_LAST,
  89:lvgl/src/lv_widgets/lv_page.h ****     LV_PAGE_PART_EDGE_FLASH,
  90:lvgl/src/lv_widgets/lv_page.h ****     _LV_PAGE_PART_VIRTUAL_LAST,
  91:lvgl/src/lv_widgets/lv_page.h **** 
  92:lvgl/src/lv_widgets/lv_page.h ****     LV_PAGE_PART_SCROLLABLE = _LV_OBJ_PART_REAL_LAST,
  93:lvgl/src/lv_widgets/lv_page.h ****     _LV_PAGE_PART_REAL_LAST,
  94:lvgl/src/lv_widgets/lv_page.h **** };
  95:lvgl/src/lv_widgets/lv_page.h **** typedef uint8_t lv_part_style_t;
  96:lvgl/src/lv_widgets/lv_page.h **** 
  97:lvgl/src/lv_widgets/lv_page.h **** /**********************
  98:lvgl/src/lv_widgets/lv_page.h ****  * GLOBAL PROTOTYPES
  99:lvgl/src/lv_widgets/lv_page.h ****  **********************/
 100:lvgl/src/lv_widgets/lv_page.h **** 
 101:lvgl/src/lv_widgets/lv_page.h **** /**
 102:lvgl/src/lv_widgets/lv_page.h ****  * Create a page objects
 103:lvgl/src/lv_widgets/lv_page.h ****  * @param par pointer to an object, it will be the parent of the new page
 104:lvgl/src/lv_widgets/lv_page.h ****  * @param copy pointer to a page object, if not NULL then the new object will be copied from it
 105:lvgl/src/lv_widgets/lv_page.h ****  * @return pointer to the created page
 106:lvgl/src/lv_widgets/lv_page.h ****  */
 107:lvgl/src/lv_widgets/lv_page.h **** lv_obj_t * lv_page_create(lv_obj_t * par, const lv_obj_t * copy);
 108:lvgl/src/lv_widgets/lv_page.h **** 
 109:lvgl/src/lv_widgets/lv_page.h **** /**
 110:lvgl/src/lv_widgets/lv_page.h ****  * Delete all children of the scrl object, without deleting scrl child.
 111:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to an object
 112:lvgl/src/lv_widgets/lv_page.h ****  */
 113:lvgl/src/lv_widgets/lv_page.h **** void lv_page_clean(lv_obj_t * page);
 114:lvgl/src/lv_widgets/lv_page.h **** 
 115:lvgl/src/lv_widgets/lv_page.h **** /**
 116:lvgl/src/lv_widgets/lv_page.h ****  * Get the scrollable object of a page
 117:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 118:lvgl/src/lv_widgets/lv_page.h ****  * @return pointer to a container which is the scrollable part of the page
 119:lvgl/src/lv_widgets/lv_page.h ****  */
 120:lvgl/src/lv_widgets/lv_page.h **** lv_obj_t * lv_page_get_scrollable(const lv_obj_t * page);
 121:lvgl/src/lv_widgets/lv_page.h **** 
ARM GAS  D:\Temp\cc6WWuOg.s 			page 82


 122:lvgl/src/lv_widgets/lv_page.h **** /**
 123:lvgl/src/lv_widgets/lv_page.h ****  * Get the animation time
 124:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 125:lvgl/src/lv_widgets/lv_page.h ****  * @return the animation time in milliseconds
 126:lvgl/src/lv_widgets/lv_page.h ****  */
 127:lvgl/src/lv_widgets/lv_page.h **** uint16_t lv_page_get_anim_time(const lv_obj_t * page);
 128:lvgl/src/lv_widgets/lv_page.h **** 
 129:lvgl/src/lv_widgets/lv_page.h **** /*=====================
 130:lvgl/src/lv_widgets/lv_page.h ****  * Setter functions
 131:lvgl/src/lv_widgets/lv_page.h ****  *====================*/
 132:lvgl/src/lv_widgets/lv_page.h **** 
 133:lvgl/src/lv_widgets/lv_page.h **** /**
 134:lvgl/src/lv_widgets/lv_page.h ****  * Set the scroll bar mode on a page
 135:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 136:lvgl/src/lv_widgets/lv_page.h ****  * @param sb_mode the new mode from 'lv_page_sb.mode_t' enum
 137:lvgl/src/lv_widgets/lv_page.h ****  */
 138:lvgl/src/lv_widgets/lv_page.h **** void lv_page_set_scrollbar_mode(lv_obj_t * page, lv_scrollbar_mode_t sb_mode);
 139:lvgl/src/lv_widgets/lv_page.h **** 
 140:lvgl/src/lv_widgets/lv_page.h **** /**
 141:lvgl/src/lv_widgets/lv_page.h ****  * Set the animation time for the page
 142:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 143:lvgl/src/lv_widgets/lv_page.h ****  * @param anim_time animation time in milliseconds
 144:lvgl/src/lv_widgets/lv_page.h ****  */
 145:lvgl/src/lv_widgets/lv_page.h **** void lv_page_set_anim_time(lv_obj_t * page, uint16_t anim_time);
 146:lvgl/src/lv_widgets/lv_page.h **** 
 147:lvgl/src/lv_widgets/lv_page.h **** /**
 148:lvgl/src/lv_widgets/lv_page.h ****  * Enable the scroll propagation feature. If enabled then the page will move its parent if there is
 149:lvgl/src/lv_widgets/lv_page.h ****  * no more space to scroll.
 150:lvgl/src/lv_widgets/lv_page.h ****  * The page needs to have a page-like parent (e.g. `lv_page`, `lv_tabview` tab, `lv_win` content ar
 151:lvgl/src/lv_widgets/lv_page.h ****  * If enabled drag direction will be changed `LV_DRAG_DIR_ONE` automatically to allow scrolling onl
 152:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a Page
 153:lvgl/src/lv_widgets/lv_page.h ****  * @param en true or false to enable/disable scroll propagation
 154:lvgl/src/lv_widgets/lv_page.h ****  */
 155:lvgl/src/lv_widgets/lv_page.h **** void lv_page_set_scroll_propagation(lv_obj_t * page, bool en);
 156:lvgl/src/lv_widgets/lv_page.h **** 
 157:lvgl/src/lv_widgets/lv_page.h **** /**
 158:lvgl/src/lv_widgets/lv_page.h ****  * Enable the edge flash effect. (Show an arc when the an edge is reached)
 159:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a Page
 160:lvgl/src/lv_widgets/lv_page.h ****  * @param en true or false to enable/disable end flash
 161:lvgl/src/lv_widgets/lv_page.h ****  */
 162:lvgl/src/lv_widgets/lv_page.h **** void lv_page_set_edge_flash(lv_obj_t * page, bool en);
 163:lvgl/src/lv_widgets/lv_page.h **** 
 164:lvgl/src/lv_widgets/lv_page.h **** /**
 165:lvgl/src/lv_widgets/lv_page.h ****  * Set the fit policy in all 4 directions separately.
 166:lvgl/src/lv_widgets/lv_page.h ****  * It tell how to change the page size automatically.
 167:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 168:lvgl/src/lv_widgets/lv_page.h ****  * @param left left fit policy from `lv_fit_t`
 169:lvgl/src/lv_widgets/lv_page.h ****  * @param right right fit policy from `lv_fit_t`
 170:lvgl/src/lv_widgets/lv_page.h ****  * @param top bottom fit policy from `lv_fit_t`
 171:lvgl/src/lv_widgets/lv_page.h ****  * @param bottom bottom fit policy from `lv_fit_t`
 172:lvgl/src/lv_widgets/lv_page.h ****  */
 173:lvgl/src/lv_widgets/lv_page.h **** static inline void lv_page_set_scrollable_fit4(lv_obj_t * page, lv_fit_t left, lv_fit_t right, lv_f
 174:lvgl/src/lv_widgets/lv_page.h ****                                                lv_fit_t bottom)
 175:lvgl/src/lv_widgets/lv_page.h **** {
 176:lvgl/src/lv_widgets/lv_page.h ****     lv_cont_set_fit4(lv_page_get_scrollable(page), left, right, top, bottom);
 177:lvgl/src/lv_widgets/lv_page.h **** }
 178:lvgl/src/lv_widgets/lv_page.h **** 
ARM GAS  D:\Temp\cc6WWuOg.s 			page 83


 179:lvgl/src/lv_widgets/lv_page.h **** /**
 180:lvgl/src/lv_widgets/lv_page.h ****  * Set the fit policy horizontally and vertically separately.
 181:lvgl/src/lv_widgets/lv_page.h ****  * It tell how to change the page size automatically.
 182:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 183:lvgl/src/lv_widgets/lv_page.h ****  * @param hot horizontal fit policy from `lv_fit_t`
 184:lvgl/src/lv_widgets/lv_page.h ****  * @param ver vertical fit policy from `lv_fit_t`
 185:lvgl/src/lv_widgets/lv_page.h ****  */
 186:lvgl/src/lv_widgets/lv_page.h **** static inline void lv_page_set_scrollable_fit2(lv_obj_t * page, lv_fit_t hor, lv_fit_t ver)
 187:lvgl/src/lv_widgets/lv_page.h **** {
 188:lvgl/src/lv_widgets/lv_page.h ****     lv_cont_set_fit2(lv_page_get_scrollable(page), hor, ver);
 189:lvgl/src/lv_widgets/lv_page.h **** }
 190:lvgl/src/lv_widgets/lv_page.h **** 
 191:lvgl/src/lv_widgets/lv_page.h **** /**
 192:lvgl/src/lv_widgets/lv_page.h ****  * Set the fit policy in all 4 direction at once.
 193:lvgl/src/lv_widgets/lv_page.h ****  * It tell how to change the page size automatically.
 194:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a button object
 195:lvgl/src/lv_widgets/lv_page.h ****  * @param fit fit policy from `lv_fit_t`
 196:lvgl/src/lv_widgets/lv_page.h ****  */
 197:lvgl/src/lv_widgets/lv_page.h **** static inline void lv_page_set_scrollable_fit(lv_obj_t * page, lv_fit_t fit)
 198:lvgl/src/lv_widgets/lv_page.h **** {
 199:lvgl/src/lv_widgets/lv_page.h ****     lv_cont_set_fit(lv_page_get_scrollable(page), fit);
 200:lvgl/src/lv_widgets/lv_page.h **** }
 201:lvgl/src/lv_widgets/lv_page.h **** 
 202:lvgl/src/lv_widgets/lv_page.h **** /**
 203:lvgl/src/lv_widgets/lv_page.h ****  * Set width of the scrollable part of a page
 204:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 205:lvgl/src/lv_widgets/lv_page.h ****  * @param w the new width of the scrollable (it ha no effect is horizontal fit is enabled)
 206:lvgl/src/lv_widgets/lv_page.h ****  */
 207:lvgl/src/lv_widgets/lv_page.h **** static inline void lv_page_set_scrl_width(lv_obj_t * page, lv_coord_t w)
 208:lvgl/src/lv_widgets/lv_page.h **** {
 209:lvgl/src/lv_widgets/lv_page.h ****     lv_obj_set_width(lv_page_get_scrollable(page), w);
 210:lvgl/src/lv_widgets/lv_page.h **** }
 211:lvgl/src/lv_widgets/lv_page.h **** 
 212:lvgl/src/lv_widgets/lv_page.h **** /**
 213:lvgl/src/lv_widgets/lv_page.h ****  * Set height of the scrollable part of a page
 214:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 215:lvgl/src/lv_widgets/lv_page.h ****  * @param h the new height of the scrollable (it ha no effect is vertical fit is enabled)
 216:lvgl/src/lv_widgets/lv_page.h ****  */
 217:lvgl/src/lv_widgets/lv_page.h **** static inline void lv_page_set_scrl_height(lv_obj_t * page, lv_coord_t h)
 218:lvgl/src/lv_widgets/lv_page.h **** {
 219:lvgl/src/lv_widgets/lv_page.h ****     lv_obj_set_height(lv_page_get_scrollable(page), h);
 220:lvgl/src/lv_widgets/lv_page.h **** }
 221:lvgl/src/lv_widgets/lv_page.h **** 
 222:lvgl/src/lv_widgets/lv_page.h **** /**
 223:lvgl/src/lv_widgets/lv_page.h ****  * Set the layout of the scrollable part of the page
 224:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 225:lvgl/src/lv_widgets/lv_page.h ****  * @param layout a layout from 'lv_cont_layout_t'
 226:lvgl/src/lv_widgets/lv_page.h ****  */
 227:lvgl/src/lv_widgets/lv_page.h **** static inline void lv_page_set_scrl_layout(lv_obj_t * page, lv_layout_t layout)
 228:lvgl/src/lv_widgets/lv_page.h **** {
 229:lvgl/src/lv_widgets/lv_page.h ****     lv_cont_set_layout(lv_page_get_scrollable(page), layout);
 230:lvgl/src/lv_widgets/lv_page.h **** }
 231:lvgl/src/lv_widgets/lv_page.h **** 
 232:lvgl/src/lv_widgets/lv_page.h **** /*=====================
 233:lvgl/src/lv_widgets/lv_page.h ****  * Getter functions
 234:lvgl/src/lv_widgets/lv_page.h ****  *====================*/
 235:lvgl/src/lv_widgets/lv_page.h **** 
ARM GAS  D:\Temp\cc6WWuOg.s 			page 84


 236:lvgl/src/lv_widgets/lv_page.h **** /**
 237:lvgl/src/lv_widgets/lv_page.h ****  * Set the scroll bar mode on a page
 238:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 239:lvgl/src/lv_widgets/lv_page.h ****  * @return the mode from 'lv_page_sb.mode_t' enum
 240:lvgl/src/lv_widgets/lv_page.h ****  */
 241:lvgl/src/lv_widgets/lv_page.h **** lv_scrollbar_mode_t lv_page_get_scrollbar_mode(const lv_obj_t * page);
 242:lvgl/src/lv_widgets/lv_page.h **** 
 243:lvgl/src/lv_widgets/lv_page.h **** /**
 244:lvgl/src/lv_widgets/lv_page.h ****  * Get the scroll propagation property
 245:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a Page
 246:lvgl/src/lv_widgets/lv_page.h ****  * @return true or false
 247:lvgl/src/lv_widgets/lv_page.h ****  */
 248:lvgl/src/lv_widgets/lv_page.h **** bool lv_page_get_scroll_propagation(lv_obj_t * page);
 249:lvgl/src/lv_widgets/lv_page.h **** 
 250:lvgl/src/lv_widgets/lv_page.h **** /**
 251:lvgl/src/lv_widgets/lv_page.h ****  * Get the edge flash effect property.
 252:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a Page
 253:lvgl/src/lv_widgets/lv_page.h ****  * return true or false
 254:lvgl/src/lv_widgets/lv_page.h ****  */
 255:lvgl/src/lv_widgets/lv_page.h **** bool lv_page_get_edge_flash(lv_obj_t * page);
 256:lvgl/src/lv_widgets/lv_page.h **** 
 257:lvgl/src/lv_widgets/lv_page.h **** /**
 258:lvgl/src/lv_widgets/lv_page.h ****  * Get that width which can be set to the children to still not cause overflow (show scrollbars)
 259:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 260:lvgl/src/lv_widgets/lv_page.h ****  * @return the width which still fits into the page
 261:lvgl/src/lv_widgets/lv_page.h ****  */
 262:lvgl/src/lv_widgets/lv_page.h **** lv_coord_t lv_page_get_width_fit(lv_obj_t * page);
 263:lvgl/src/lv_widgets/lv_page.h **** 
 264:lvgl/src/lv_widgets/lv_page.h **** /**
 265:lvgl/src/lv_widgets/lv_page.h ****  * Get that height which can be set to the children to still not cause overflow (show scrollbars)
 266:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 267:lvgl/src/lv_widgets/lv_page.h ****  * @return the height which still fits into the page
 268:lvgl/src/lv_widgets/lv_page.h ****  */
 269:lvgl/src/lv_widgets/lv_page.h **** lv_coord_t lv_page_get_height_fit(lv_obj_t * page);
 270:lvgl/src/lv_widgets/lv_page.h **** 
 271:lvgl/src/lv_widgets/lv_page.h **** /**
 272:lvgl/src/lv_widgets/lv_page.h ****  * Divide the width of the object and get the width of a given number of columns.
 273:lvgl/src/lv_widgets/lv_page.h ****  * Take into account the paddings of the background and scrollable too.
 274:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to an object
 275:lvgl/src/lv_widgets/lv_page.h ****  * @param div indicates how many columns are assumed.
 276:lvgl/src/lv_widgets/lv_page.h ****  * If 1 the width will be set the parent's width
 277:lvgl/src/lv_widgets/lv_page.h ****  * If 2 only half parent width - inner padding of the parent
 278:lvgl/src/lv_widgets/lv_page.h ****  * If 3 only third parent width - 2 * inner padding of the parent
 279:lvgl/src/lv_widgets/lv_page.h ****  * @param span how many columns are combined
 280:lvgl/src/lv_widgets/lv_page.h ****  * @return the width according to the given parameters
 281:lvgl/src/lv_widgets/lv_page.h ****  */
 282:lvgl/src/lv_widgets/lv_page.h **** lv_coord_t lv_page_get_width_grid(lv_obj_t * page, uint8_t div, uint8_t span);
 283:lvgl/src/lv_widgets/lv_page.h **** 
 284:lvgl/src/lv_widgets/lv_page.h **** /**
 285:lvgl/src/lv_widgets/lv_page.h ****  * Divide the height of the object and get the width of a given number of columns.
 286:lvgl/src/lv_widgets/lv_page.h ****  * Take into account the paddings of the background and scrollable too.
 287:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to an object
 288:lvgl/src/lv_widgets/lv_page.h ****  * @param div indicates how many rows are assumed.
 289:lvgl/src/lv_widgets/lv_page.h ****  * If 1 the height will be set the parent's height
 290:lvgl/src/lv_widgets/lv_page.h ****  * If 2 only half parent height - inner padding of the parent
 291:lvgl/src/lv_widgets/lv_page.h ****  * If 3 only third parent height - 2 * inner padding of the parent
 292:lvgl/src/lv_widgets/lv_page.h ****  * @param span how many rows are combined
ARM GAS  D:\Temp\cc6WWuOg.s 			page 85


 293:lvgl/src/lv_widgets/lv_page.h ****  * @return the height according to the given parameters
 294:lvgl/src/lv_widgets/lv_page.h ****  */
 295:lvgl/src/lv_widgets/lv_page.h **** lv_coord_t lv_page_get_height_grid(lv_obj_t * page, uint8_t div, uint8_t span);
 296:lvgl/src/lv_widgets/lv_page.h **** 
 297:lvgl/src/lv_widgets/lv_page.h **** /**
 298:lvgl/src/lv_widgets/lv_page.h ****  * Get width of the scrollable part of a page
 299:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 300:lvgl/src/lv_widgets/lv_page.h ****  * @return the width of the scrollable
 301:lvgl/src/lv_widgets/lv_page.h ****  */
 302:lvgl/src/lv_widgets/lv_page.h **** static inline lv_coord_t lv_page_get_scrl_width(const lv_obj_t * page)
 303:lvgl/src/lv_widgets/lv_page.h **** {
 304:lvgl/src/lv_widgets/lv_page.h ****     return lv_obj_get_width(lv_page_get_scrollable(page));
 305:lvgl/src/lv_widgets/lv_page.h **** }
 306:lvgl/src/lv_widgets/lv_page.h **** 
 307:lvgl/src/lv_widgets/lv_page.h **** /**
 308:lvgl/src/lv_widgets/lv_page.h ****  * Get height of the scrollable part of a page
 309:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 310:lvgl/src/lv_widgets/lv_page.h ****  * @return the height of the scrollable
 311:lvgl/src/lv_widgets/lv_page.h ****  */
 312:lvgl/src/lv_widgets/lv_page.h **** static inline lv_coord_t lv_page_get_scrl_height(const lv_obj_t * page)
 313:lvgl/src/lv_widgets/lv_page.h **** {
 314:lvgl/src/lv_widgets/lv_page.h ****     return lv_obj_get_height(lv_page_get_scrollable(page));
 315:lvgl/src/lv_widgets/lv_page.h **** }
 316:lvgl/src/lv_widgets/lv_page.h **** 
 317:lvgl/src/lv_widgets/lv_page.h **** /**
 318:lvgl/src/lv_widgets/lv_page.h ****  * Get the layout of the scrollable part of a page
 319:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to page object
 320:lvgl/src/lv_widgets/lv_page.h ****  * @return the layout from 'lv_cont_layout_t'
 321:lvgl/src/lv_widgets/lv_page.h ****  */
 322:lvgl/src/lv_widgets/lv_page.h **** static inline lv_layout_t lv_page_get_scrl_layout(const lv_obj_t * page)
 2543              		.loc 5 322 27 view .LVU738
 2544              	.LBB130:
 323:lvgl/src/lv_widgets/lv_page.h **** {
 324:lvgl/src/lv_widgets/lv_page.h ****     return lv_cont_get_layout(lv_page_get_scrollable(page));
 2545              		.loc 5 324 5 view .LVU739
 2546              		.loc 5 324 31 is_stmt 0 view .LVU740
 2547 0016 2046     		mov	r0, r4
 2548 0018 FFF7FEFF 		bl	lv_page_get_scrollable
 2549              	.LVL315:
 2550              		.loc 5 324 12 view .LVU741
 2551 001c FFF7FEFF 		bl	lv_cont_get_layout
 2552              	.LVL316:
 2553              		.loc 5 324 12 view .LVU742
 2554              	.LBE130:
 2555              	.LBE129:
 533:lvgl/src/lv_widgets/lv_list.c **** 
 2556              		.loc 1 533 1 view .LVU743
 2557 0020 10BD     		pop	{r4, pc}
 2558              	.LVL317:
 2559              	.L219:
 533:lvgl/src/lv_widgets/lv_list.c **** 
 2560              		.loc 1 533 1 view .LVU744
 2561 0022 00BF     		.align	2
 2562              	.L218:
 2563 0024 00000000 		.word	.LC0
 2564              		.cfi_endproc
 2565              	.LFE504:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 86


 2567              		.section	.text.lv_list_add_btn,"ax",%progbits
 2568              		.align	1
 2569              		.global	lv_list_add_btn
 2570              		.syntax unified
 2571              		.thumb
 2572              		.thumb_func
 2573              		.fpu fpv4-sp-d16
 2575              	lv_list_add_btn:
 2576              	.LVL318:
 2577              	.LFB492:
 148:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 2578              		.loc 1 148 1 is_stmt 1 view -0
 2579              		.cfi_startproc
 2580              		@ args = 0, pretend = 0, frame = 0
 2581              		@ frame_needed = 0, uses_anonymous_args = 0
 148:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 2582              		.loc 1 148 1 is_stmt 0 view .LVU746
 2583 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2584              	.LCFI27:
 2585              		.cfi_def_cfa_offset 36
 2586              		.cfi_offset 4, -36
 2587              		.cfi_offset 5, -32
 2588              		.cfi_offset 6, -28
 2589              		.cfi_offset 7, -24
 2590              		.cfi_offset 8, -20
 2591              		.cfi_offset 9, -16
 2592              		.cfi_offset 10, -12
 2593              		.cfi_offset 11, -8
 2594              		.cfi_offset 14, -4
 2595 0004 83B0     		sub	sp, sp, #12
 2596              	.LCFI28:
 2597              		.cfi_def_cfa_offset 48
 2598 0006 0546     		mov	r5, r0
 2599 0008 0E46     		mov	r6, r1
 2600 000a 9246     		mov	r10, r2
 149:lvgl/src/lv_widgets/lv_list.c **** 
 2601              		.loc 1 149 5 is_stmt 1 view .LVU747
 149:lvgl/src/lv_widgets/lv_list.c **** 
 2602              		.loc 1 149 5 view .LVU748
 2603 000c FFF7FEFF 		bl	lv_debug_check_null
 2604              	.LVL319:
 149:lvgl/src/lv_widgets/lv_list.c **** 
 2605              		.loc 1 149 5 is_stmt 0 view .LVU749
 2606 0010 28B9     		cbnz	r0, .L221
 149:lvgl/src/lv_widgets/lv_list.c **** 
 2607              		.loc 1 149 5 is_stmt 1 discriminator 1 view .LVU750
 149:lvgl/src/lv_widgets/lv_list.c **** 
 2608              		.loc 1 149 5 discriminator 1 view .LVU751
 2609 0012 2A46     		mov	r2, r5
 2610 0014 0023     		movs	r3, #0
 2611 0016 7148     		ldr	r0, .L240
 2612 0018 FFF7FEFF 		bl	lv_debug_log_error
 2613              	.LVL320:
 2614              	.L222:
 149:lvgl/src/lv_widgets/lv_list.c **** 
 2615              		.loc 1 149 5 discriminator 1 view .LVU752
 149:lvgl/src/lv_widgets/lv_list.c **** 
ARM GAS  D:\Temp\cc6WWuOg.s 			page 87


 2616              		.loc 1 149 5 discriminator 1 view .LVU753
 2617 001c FEE7     		b	.L222
 2618              	.L221:
 149:lvgl/src/lv_widgets/lv_list.c **** 
 2619              		.loc 1 149 38 discriminator 2 view .LVU754
 151:lvgl/src/lv_widgets/lv_list.c **** 
 2620              		.loc 1 151 5 discriminator 2 view .LVU755
 151:lvgl/src/lv_widgets/lv_list.c **** 
 2621              		.loc 1 151 27 is_stmt 0 discriminator 2 view .LVU756
 2622 001e 0021     		movs	r1, #0
 2623 0020 2846     		mov	r0, r5
 2624 0022 FFF7FEFF 		bl	lv_list_get_prev_btn
 2625              	.LVL321:
 2626 0026 8346     		mov	fp, r0
 2627              	.LVL322:
 154:lvgl/src/lv_widgets/lv_list.c ****     lv_coord_t pos_y_ori = lv_obj_get_y(list);
 2628              		.loc 1 154 5 is_stmt 1 discriminator 2 view .LVU757
 154:lvgl/src/lv_widgets/lv_list.c ****     lv_coord_t pos_y_ori = lv_obj_get_y(list);
 2629              		.loc 1 154 28 is_stmt 0 discriminator 2 view .LVU758
 2630 0028 2846     		mov	r0, r5
 2631              	.LVL323:
 154:lvgl/src/lv_widgets/lv_list.c ****     lv_coord_t pos_y_ori = lv_obj_get_y(list);
 2632              		.loc 1 154 28 discriminator 2 view .LVU759
 2633 002a FFF7FEFF 		bl	lv_obj_get_x
 2634              	.LVL324:
 2635 002e 0746     		mov	r7, r0
 2636              	.LVL325:
 155:lvgl/src/lv_widgets/lv_list.c **** 
 2637              		.loc 1 155 5 is_stmt 1 discriminator 2 view .LVU760
 155:lvgl/src/lv_widgets/lv_list.c **** 
 2638              		.loc 1 155 28 is_stmt 0 discriminator 2 view .LVU761
 2639 0030 2846     		mov	r0, r5
 2640 0032 FFF7FEFF 		bl	lv_obj_get_y
 2641              	.LVL326:
 2642 0036 8046     		mov	r8, r0
 2643              	.LVL327:
 157:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_add_protect(scrl, LV_PROTECT_CHILD_CHG);
 2644              		.loc 1 157 5 is_stmt 1 discriminator 2 view .LVU762
 157:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_add_protect(scrl, LV_PROTECT_CHILD_CHG);
 2645              		.loc 1 157 24 is_stmt 0 discriminator 2 view .LVU763
 2646 0038 2846     		mov	r0, r5
 2647 003a FFF7FEFF 		bl	lv_page_get_scrollable
 2648              	.LVL328:
 2649 003e 8146     		mov	r9, r0
 2650              	.LVL329:
 158:lvgl/src/lv_widgets/lv_list.c **** 
 2651              		.loc 1 158 5 is_stmt 1 discriminator 2 view .LVU764
 2652 0040 0121     		movs	r1, #1
 2653 0042 FFF7FEFF 		bl	lv_obj_add_protect
 2654              	.LVL330:
 161:lvgl/src/lv_widgets/lv_list.c ****     btn = lv_btn_create(list, NULL);
 2655              		.loc 1 161 5 discriminator 2 view .LVU765
 162:lvgl/src/lv_widgets/lv_list.c **** 
 2656              		.loc 1 162 5 discriminator 2 view .LVU766
 162:lvgl/src/lv_widgets/lv_list.c **** 
 2657              		.loc 1 162 11 is_stmt 0 discriminator 2 view .LVU767
 2658 0046 0021     		movs	r1, #0
ARM GAS  D:\Temp\cc6WWuOg.s 			page 88


 2659 0048 2846     		mov	r0, r5
 2660 004a FFF7FEFF 		bl	lv_btn_create
 2661              	.LVL331:
 2662 004e 0446     		mov	r4, r0
 2663              	.LVL332:
 164:lvgl/src/lv_widgets/lv_list.c **** 
 2664              		.loc 1 164 5 is_stmt 1 discriminator 2 view .LVU768
 2665 0050 0121     		movs	r1, #1
 2666 0052 FFF7FEFF 		bl	lv_obj_add_protect
 2667              	.LVL333:
 167:lvgl/src/lv_widgets/lv_list.c **** 
 2668              		.loc 1 167 5 discriminator 2 view .LVU769
 167:lvgl/src/lv_widgets/lv_list.c **** 
 2669              		.loc 1 167 28 is_stmt 0 discriminator 2 view .LVU770
 2670 0056 624B     		ldr	r3, .L240+4
 2671 0058 1B68     		ldr	r3, [r3]
 167:lvgl/src/lv_widgets/lv_list.c **** 
 2672              		.loc 1 167 7 discriminator 2 view .LVU771
 2673 005a 002B     		cmp	r3, #0
 2674 005c 00F08880 		beq	.L234
 2675              	.L223:
 170:lvgl/src/lv_widgets/lv_list.c **** 
 2676              		.loc 1 170 5 is_stmt 1 view .LVU772
 2677 0060 1621     		movs	r1, #22
 2678 0062 2046     		mov	r0, r4
 2679 0064 FFF7FEFF 		bl	lv_theme_apply
 2680              	.LVL334:
 172:lvgl/src/lv_widgets/lv_list.c ****     lv_btn_set_layout(btn, LV_LAYOUT_ROW_MID);
 2681              		.loc 1 172 5 view .LVU773
 2682 0068 0121     		movs	r1, #1
 2683 006a 2046     		mov	r0, r4
 2684 006c FFF7FEFF 		bl	lv_page_glue_obj
 2685              	.LVL335:
 173:lvgl/src/lv_widgets/lv_list.c **** 
 2686              		.loc 1 173 5 view .LVU774
 2687              	.LBB131:
 2688              	.LBI131:
 2689              		.file 6 "lvgl/src/lv_widgets/lv_btn.h"
   1:lvgl/src/lv_widgets/lv_btn.h **** /**
   2:lvgl/src/lv_widgets/lv_btn.h ****  * @file lv_btn.h
   3:lvgl/src/lv_widgets/lv_btn.h ****  *
   4:lvgl/src/lv_widgets/lv_btn.h ****  */
   5:lvgl/src/lv_widgets/lv_btn.h **** 
   6:lvgl/src/lv_widgets/lv_btn.h **** #ifndef LV_BTN_H
   7:lvgl/src/lv_widgets/lv_btn.h **** #define LV_BTN_H
   8:lvgl/src/lv_widgets/lv_btn.h **** 
   9:lvgl/src/lv_widgets/lv_btn.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/lv_btn.h **** extern "C" {
  11:lvgl/src/lv_widgets/lv_btn.h **** #endif
  12:lvgl/src/lv_widgets/lv_btn.h **** 
  13:lvgl/src/lv_widgets/lv_btn.h **** /*********************
  14:lvgl/src/lv_widgets/lv_btn.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/lv_btn.h ****  *********************/
  16:lvgl/src/lv_widgets/lv_btn.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/lv_btn.h **** 
  18:lvgl/src/lv_widgets/lv_btn.h **** #if LV_USE_BTN != 0
  19:lvgl/src/lv_widgets/lv_btn.h **** 
ARM GAS  D:\Temp\cc6WWuOg.s 			page 89


  20:lvgl/src/lv_widgets/lv_btn.h **** /*Testing of dependencies*/
  21:lvgl/src/lv_widgets/lv_btn.h **** #if LV_USE_CONT == 0
  22:lvgl/src/lv_widgets/lv_btn.h **** #error "lv_btn: lv_cont is required. Enable it in lv_conf.h (LV_USE_CONT 1)"
  23:lvgl/src/lv_widgets/lv_btn.h **** #endif
  24:lvgl/src/lv_widgets/lv_btn.h **** 
  25:lvgl/src/lv_widgets/lv_btn.h **** #include "lv_cont.h"
  26:lvgl/src/lv_widgets/lv_btn.h **** #include "../lv_core/lv_indev.h"
  27:lvgl/src/lv_widgets/lv_btn.h **** 
  28:lvgl/src/lv_widgets/lv_btn.h **** /*********************
  29:lvgl/src/lv_widgets/lv_btn.h ****  *      DEFINES
  30:lvgl/src/lv_widgets/lv_btn.h ****  *********************/
  31:lvgl/src/lv_widgets/lv_btn.h **** 
  32:lvgl/src/lv_widgets/lv_btn.h **** /**********************
  33:lvgl/src/lv_widgets/lv_btn.h ****  *      TYPEDEFS
  34:lvgl/src/lv_widgets/lv_btn.h ****  **********************/
  35:lvgl/src/lv_widgets/lv_btn.h **** 
  36:lvgl/src/lv_widgets/lv_btn.h **** /** Possible states of a button.
  37:lvgl/src/lv_widgets/lv_btn.h ****  * It can be used not only by buttons but other button-like objects too*/
  38:lvgl/src/lv_widgets/lv_btn.h **** enum {
  39:lvgl/src/lv_widgets/lv_btn.h ****     LV_BTN_STATE_RELEASED,
  40:lvgl/src/lv_widgets/lv_btn.h ****     LV_BTN_STATE_PRESSED,
  41:lvgl/src/lv_widgets/lv_btn.h ****     LV_BTN_STATE_DISABLED,
  42:lvgl/src/lv_widgets/lv_btn.h ****     LV_BTN_STATE_CHECKED_RELEASED,
  43:lvgl/src/lv_widgets/lv_btn.h ****     LV_BTN_STATE_CHECKED_PRESSED,
  44:lvgl/src/lv_widgets/lv_btn.h ****     LV_BTN_STATE_CHECKED_DISABLED,
  45:lvgl/src/lv_widgets/lv_btn.h ****     _LV_BTN_STATE_LAST, /* Number of states*/
  46:lvgl/src/lv_widgets/lv_btn.h **** };
  47:lvgl/src/lv_widgets/lv_btn.h **** typedef uint8_t lv_btn_state_t;
  48:lvgl/src/lv_widgets/lv_btn.h **** 
  49:lvgl/src/lv_widgets/lv_btn.h **** /** Extended data of button*/
  50:lvgl/src/lv_widgets/lv_btn.h **** typedef struct {
  51:lvgl/src/lv_widgets/lv_btn.h ****     /** Ext. of ancestor*/
  52:lvgl/src/lv_widgets/lv_btn.h ****     lv_cont_ext_t cont;
  53:lvgl/src/lv_widgets/lv_btn.h **** 
  54:lvgl/src/lv_widgets/lv_btn.h ****     /** 1: Toggle enabled*/
  55:lvgl/src/lv_widgets/lv_btn.h ****     uint8_t checkable : 1;
  56:lvgl/src/lv_widgets/lv_btn.h **** } lv_btn_ext_t;
  57:lvgl/src/lv_widgets/lv_btn.h **** 
  58:lvgl/src/lv_widgets/lv_btn.h **** /**Styles*/
  59:lvgl/src/lv_widgets/lv_btn.h **** enum {
  60:lvgl/src/lv_widgets/lv_btn.h ****     LV_BTN_PART_MAIN = LV_OBJ_PART_MAIN,
  61:lvgl/src/lv_widgets/lv_btn.h ****     _LV_BTN_PART_VIRTUAL_LAST,
  62:lvgl/src/lv_widgets/lv_btn.h ****     _LV_BTN_PART_REAL_LAST = _LV_OBJ_PART_REAL_LAST,
  63:lvgl/src/lv_widgets/lv_btn.h **** };
  64:lvgl/src/lv_widgets/lv_btn.h **** typedef uint8_t lv_btn_part_t;
  65:lvgl/src/lv_widgets/lv_btn.h **** 
  66:lvgl/src/lv_widgets/lv_btn.h **** /**********************
  67:lvgl/src/lv_widgets/lv_btn.h ****  * GLOBAL PROTOTYPES
  68:lvgl/src/lv_widgets/lv_btn.h ****  **********************/
  69:lvgl/src/lv_widgets/lv_btn.h **** 
  70:lvgl/src/lv_widgets/lv_btn.h **** /**
  71:lvgl/src/lv_widgets/lv_btn.h ****  * Create a button object
  72:lvgl/src/lv_widgets/lv_btn.h ****  * @param par pointer to an object, it will be the parent of the new button
  73:lvgl/src/lv_widgets/lv_btn.h ****  * @param copy pointer to a button object, if not NULL then the new object will be copied from it
  74:lvgl/src/lv_widgets/lv_btn.h ****  * @return pointer to the created button
  75:lvgl/src/lv_widgets/lv_btn.h ****  */
  76:lvgl/src/lv_widgets/lv_btn.h **** lv_obj_t * lv_btn_create(lv_obj_t * par, const lv_obj_t * copy);
ARM GAS  D:\Temp\cc6WWuOg.s 			page 90


  77:lvgl/src/lv_widgets/lv_btn.h **** 
  78:lvgl/src/lv_widgets/lv_btn.h **** /*=====================
  79:lvgl/src/lv_widgets/lv_btn.h ****  * Setter functions
  80:lvgl/src/lv_widgets/lv_btn.h ****  *====================*/
  81:lvgl/src/lv_widgets/lv_btn.h **** 
  82:lvgl/src/lv_widgets/lv_btn.h **** /**
  83:lvgl/src/lv_widgets/lv_btn.h ****  * Enable the toggled states. On release the button will change from/to toggled state.
  84:lvgl/src/lv_widgets/lv_btn.h ****  * @param btn pointer to a button object
  85:lvgl/src/lv_widgets/lv_btn.h ****  * @param tgl true: enable toggled states, false: disable
  86:lvgl/src/lv_widgets/lv_btn.h ****  */
  87:lvgl/src/lv_widgets/lv_btn.h **** void lv_btn_set_checkable(lv_obj_t * btn, bool tgl);
  88:lvgl/src/lv_widgets/lv_btn.h **** 
  89:lvgl/src/lv_widgets/lv_btn.h **** /**
  90:lvgl/src/lv_widgets/lv_btn.h ****  * Set the state of the button
  91:lvgl/src/lv_widgets/lv_btn.h ****  * @param btn pointer to a button object
  92:lvgl/src/lv_widgets/lv_btn.h ****  * @param state the new state of the button (from lv_btn_state_t enum)
  93:lvgl/src/lv_widgets/lv_btn.h ****  */
  94:lvgl/src/lv_widgets/lv_btn.h **** void lv_btn_set_state(lv_obj_t * btn, lv_btn_state_t state);
  95:lvgl/src/lv_widgets/lv_btn.h **** 
  96:lvgl/src/lv_widgets/lv_btn.h **** /**
  97:lvgl/src/lv_widgets/lv_btn.h ****  * Toggle the state of the button (ON->OFF, OFF->ON)
  98:lvgl/src/lv_widgets/lv_btn.h ****  * @param btn pointer to a button object
  99:lvgl/src/lv_widgets/lv_btn.h ****  */
 100:lvgl/src/lv_widgets/lv_btn.h **** void lv_btn_toggle(lv_obj_t * btn);
 101:lvgl/src/lv_widgets/lv_btn.h **** 
 102:lvgl/src/lv_widgets/lv_btn.h **** /**
 103:lvgl/src/lv_widgets/lv_btn.h ****  * Set the layout on a button
 104:lvgl/src/lv_widgets/lv_btn.h ****  * @param btn pointer to a button object
 105:lvgl/src/lv_widgets/lv_btn.h ****  * @param layout a layout from 'lv_cont_layout_t'
 106:lvgl/src/lv_widgets/lv_btn.h ****  */
 107:lvgl/src/lv_widgets/lv_btn.h **** static inline void lv_btn_set_layout(lv_obj_t * btn, lv_layout_t layout)
 2690              		.loc 6 107 20 view .LVU775
 2691              	.LBB132:
 108:lvgl/src/lv_widgets/lv_btn.h **** {
 109:lvgl/src/lv_widgets/lv_btn.h ****     lv_cont_set_layout(btn, layout);
 2692              		.loc 6 109 5 view .LVU776
 2693 0070 0621     		movs	r1, #6
 2694 0072 2046     		mov	r0, r4
 2695 0074 FFF7FEFF 		bl	lv_cont_set_layout
 2696              	.LVL336:
 2697              		.loc 6 109 5 is_stmt 0 view .LVU777
 2698              	.LBE132:
 2699              	.LBE131:
 175:lvgl/src/lv_widgets/lv_list.c ****     bool layout_ver = false;
 2700              		.loc 1 175 5 is_stmt 1 view .LVU778
 175:lvgl/src/lv_widgets/lv_list.c ****     bool layout_ver = false;
 2701              		.loc 1 175 31 is_stmt 0 view .LVU779
 2702 0078 2846     		mov	r0, r5
 2703 007a FFF7FEFF 		bl	lv_list_get_layout
 2704              	.LVL337:
 176:lvgl/src/lv_widgets/lv_list.c ****     if(list_layout == LV_LAYOUT_COLUMN_MID || list_layout == LV_LAYOUT_COLUMN_LEFT ||
 2705              		.loc 1 176 5 is_stmt 1 view .LVU780
 177:lvgl/src/lv_widgets/lv_list.c ****        list_layout == LV_LAYOUT_COLUMN_RIGHT) {
 2706              		.loc 1 177 5 view .LVU781
 177:lvgl/src/lv_widgets/lv_list.c ****        list_layout == LV_LAYOUT_COLUMN_RIGHT) {
 2707              		.loc 1 177 84 is_stmt 0 view .LVU782
 2708 007e 831E     		subs	r3, r0, #2
ARM GAS  D:\Temp\cc6WWuOg.s 			page 91


 2709 0080 DBB2     		uxtb	r3, r3
 177:lvgl/src/lv_widgets/lv_list.c ****        list_layout == LV_LAYOUT_COLUMN_RIGHT) {
 2710              		.loc 1 177 7 view .LVU783
 2711 0082 022B     		cmp	r3, #2
 2712 0084 7DD9     		bls	.L224
 182:lvgl/src/lv_widgets/lv_list.c ****         lv_btn_set_fit2(btn, LV_FIT_PARENT, LV_FIT_TIGHT);
 2713              		.loc 1 182 5 is_stmt 1 view .LVU784
 2714              	.LBB133:
 186:lvgl/src/lv_widgets/lv_list.c ****         lv_btn_set_fit2(btn, LV_FIT_NONE, LV_FIT_TIGHT);
 2715              		.loc 1 186 9 view .LVU785
 186:lvgl/src/lv_widgets/lv_list.c ****         lv_btn_set_fit2(btn, LV_FIT_NONE, LV_FIT_TIGHT);
 2716              		.loc 1 186 20 is_stmt 0 view .LVU786
 2717 0086 BBF1000F 		cmp	fp, #0
 2718 008a 77D0     		beq	.L235
 186:lvgl/src/lv_widgets/lv_list.c ****         lv_btn_set_fit2(btn, LV_FIT_NONE, LV_FIT_TIGHT);
 2719              		.loc 1 186 35 discriminator 1 view .LVU787
 2720 008c 5846     		mov	r0, fp
 2721              	.LVL338:
 186:lvgl/src/lv_widgets/lv_list.c ****         lv_btn_set_fit2(btn, LV_FIT_NONE, LV_FIT_TIGHT);
 2722              		.loc 1 186 35 discriminator 1 view .LVU788
 2723 008e FFF7FEFF 		bl	lv_obj_get_width
 2724              	.LVL339:
 2725 0092 8346     		mov	fp, r0
 2726              	.LVL340:
 2727              	.L226:
 187:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_set_width(btn, w);
 2728              		.loc 1 187 9 is_stmt 1 discriminator 4 view .LVU789
 2729              	.LBB134:
 2730              	.LBI134:
 110:lvgl/src/lv_widgets/lv_btn.h **** }
 111:lvgl/src/lv_widgets/lv_btn.h **** 
 112:lvgl/src/lv_widgets/lv_btn.h **** /**
 113:lvgl/src/lv_widgets/lv_btn.h ****  * Set the fit policy in all 4 directions separately.
 114:lvgl/src/lv_widgets/lv_btn.h ****  * It tells how to change the button size automatically.
 115:lvgl/src/lv_widgets/lv_btn.h ****  * @param btn pointer to a button object
 116:lvgl/src/lv_widgets/lv_btn.h ****  * @param left left fit policy from `lv_fit_t`
 117:lvgl/src/lv_widgets/lv_btn.h ****  * @param right right fit policy from `lv_fit_t`
 118:lvgl/src/lv_widgets/lv_btn.h ****  * @param top top fit policy from `lv_fit_t`
 119:lvgl/src/lv_widgets/lv_btn.h ****  * @param bottom bottom fit policy from `lv_fit_t`
 120:lvgl/src/lv_widgets/lv_btn.h ****  */
 121:lvgl/src/lv_widgets/lv_btn.h **** static inline void lv_btn_set_fit4(lv_obj_t * btn, lv_fit_t left, lv_fit_t right, lv_fit_t top, lv_
 122:lvgl/src/lv_widgets/lv_btn.h **** {
 123:lvgl/src/lv_widgets/lv_btn.h ****     lv_cont_set_fit4(btn, left, right, top, bottom);
 124:lvgl/src/lv_widgets/lv_btn.h **** }
 125:lvgl/src/lv_widgets/lv_btn.h **** 
 126:lvgl/src/lv_widgets/lv_btn.h **** /**
 127:lvgl/src/lv_widgets/lv_btn.h ****  * Set the fit policy horizontally and vertically separately.
 128:lvgl/src/lv_widgets/lv_btn.h ****  * It tells how to change the button size automatically.
 129:lvgl/src/lv_widgets/lv_btn.h ****  * @param btn pointer to a button object
 130:lvgl/src/lv_widgets/lv_btn.h ****  * @param hor horizontal fit policy from `lv_fit_t`
 131:lvgl/src/lv_widgets/lv_btn.h ****  * @param ver vertical fit policy from `lv_fit_t`
 132:lvgl/src/lv_widgets/lv_btn.h ****  */
 133:lvgl/src/lv_widgets/lv_btn.h **** static inline void lv_btn_set_fit2(lv_obj_t * btn, lv_fit_t hor, lv_fit_t ver)
 2731              		.loc 6 133 20 discriminator 4 view .LVU790
 2732              	.LBE134:
 2733              	.LBE133:
 134:lvgl/src/lv_widgets/lv_btn.h **** {
ARM GAS  D:\Temp\cc6WWuOg.s 			page 92


 135:lvgl/src/lv_widgets/lv_btn.h ****     lv_cont_set_fit2(btn, hor, ver);
 2734              		.loc 6 135 5 discriminator 4 view .LVU791
 2735              	.LBB138:
 2736              	.LBB137:
 2737              	.LBB135:
 2738              	.LBI135:
 2739              		.file 7 "lvgl/src/lv_widgets/lv_cont.h"
   1:lvgl/src/lv_widgets/lv_cont.h **** /**
   2:lvgl/src/lv_widgets/lv_cont.h ****  * @file lv_cont.h
   3:lvgl/src/lv_widgets/lv_cont.h ****  *
   4:lvgl/src/lv_widgets/lv_cont.h ****  */
   5:lvgl/src/lv_widgets/lv_cont.h **** 
   6:lvgl/src/lv_widgets/lv_cont.h **** #ifndef LV_CONT_H
   7:lvgl/src/lv_widgets/lv_cont.h **** #define LV_CONT_H
   8:lvgl/src/lv_widgets/lv_cont.h **** 
   9:lvgl/src/lv_widgets/lv_cont.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/lv_cont.h **** extern "C" {
  11:lvgl/src/lv_widgets/lv_cont.h **** #endif
  12:lvgl/src/lv_widgets/lv_cont.h **** 
  13:lvgl/src/lv_widgets/lv_cont.h **** /*********************
  14:lvgl/src/lv_widgets/lv_cont.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/lv_cont.h ****  *********************/
  16:lvgl/src/lv_widgets/lv_cont.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/lv_cont.h **** 
  18:lvgl/src/lv_widgets/lv_cont.h **** #if LV_USE_CONT != 0
  19:lvgl/src/lv_widgets/lv_cont.h **** 
  20:lvgl/src/lv_widgets/lv_cont.h **** #include "../lv_core/lv_obj.h"
  21:lvgl/src/lv_widgets/lv_cont.h **** 
  22:lvgl/src/lv_widgets/lv_cont.h **** /*********************
  23:lvgl/src/lv_widgets/lv_cont.h ****  *      DEFINES
  24:lvgl/src/lv_widgets/lv_cont.h ****  *********************/
  25:lvgl/src/lv_widgets/lv_cont.h **** 
  26:lvgl/src/lv_widgets/lv_cont.h **** /**********************
  27:lvgl/src/lv_widgets/lv_cont.h ****  *      TYPEDEFS
  28:lvgl/src/lv_widgets/lv_cont.h ****  **********************/
  29:lvgl/src/lv_widgets/lv_cont.h **** 
  30:lvgl/src/lv_widgets/lv_cont.h **** /** Container layout options*/
  31:lvgl/src/lv_widgets/lv_cont.h **** enum {
  32:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_OFF = 0, /**< No layout */
  33:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_CENTER, /**< Center objects */
  34:lvgl/src/lv_widgets/lv_cont.h **** 
  35:lvgl/src/lv_widgets/lv_cont.h ****     /**
  36:lvgl/src/lv_widgets/lv_cont.h ****      * COLUMN:
  37:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object below each other
  38:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_top` space on the top
  39:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects
  40:lvgl/src/lv_widgets/lv_cont.h ****      */
  41:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_COLUMN_LEFT,      /**< Column left align*/
  42:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_COLUMN_MID,       /**< Column middle align*/
  43:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_COLUMN_RIGHT,     /**< Column right align*/
  44:lvgl/src/lv_widgets/lv_cont.h **** 
  45:lvgl/src/lv_widgets/lv_cont.h ****     /**
  46:lvgl/src/lv_widgets/lv_cont.h ****      * ROW:
  47:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object next to each other
  48:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_left` space on the left
  49:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects
  50:lvgl/src/lv_widgets/lv_cont.h ****      * - If the object which applies the layout has `base_dir == LV_BIDI_DIR_RTL`
ARM GAS  D:\Temp\cc6WWuOg.s 			page 93


  51:lvgl/src/lv_widgets/lv_cont.h ****      *   the row will start from the right applying `pad.right` space
  52:lvgl/src/lv_widgets/lv_cont.h ****      */
  53:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_ROW_TOP,          /**< Row top align*/
  54:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_ROW_MID,          /**< Row middle align*/
  55:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_ROW_BOTTOM,       /**< Row bottom align*/
  56:lvgl/src/lv_widgets/lv_cont.h **** 
  57:lvgl/src/lv_widgets/lv_cont.h ****     /**
  58:lvgl/src/lv_widgets/lv_cont.h ****      * PRETTY:
  59:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object next to each other
  60:lvgl/src/lv_widgets/lv_cont.h ****      * - If there is no more space start a new row
  61:lvgl/src/lv_widgets/lv_cont.h ****      * - Respect `pad_left` and `pad_right` when determining the available space in a row
  62:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in the same row
  63:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in rows
  64:lvgl/src/lv_widgets/lv_cont.h ****      * - Divide the remaining horizontal space equally
  65:lvgl/src/lv_widgets/lv_cont.h ****      */
  66:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_PRETTY_TOP,       /**< Row top align*/
  67:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_PRETTY_MID,       /**< Row middle align*/
  68:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_PRETTY_BOTTOM,    /**< Row bottom align*/
  69:lvgl/src/lv_widgets/lv_cont.h **** 
  70:lvgl/src/lv_widgets/lv_cont.h ****     /**
  71:lvgl/src/lv_widgets/lv_cont.h ****      * GRID
  72:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object next to each other
  73:lvgl/src/lv_widgets/lv_cont.h ****      * - If there is no more space start a new row
  74:lvgl/src/lv_widgets/lv_cont.h ****      * - Respect `pad_left` and `pad_right` when determining the available space in a row
  75:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in the same row
  76:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in rows
  77:lvgl/src/lv_widgets/lv_cont.h ****      * - Unlike `PRETTY`, `GRID` always keep `pad_inner` space horizontally between objects
  78:lvgl/src/lv_widgets/lv_cont.h ****      *   so it doesn't divide the remaining horizontal space equally
  79:lvgl/src/lv_widgets/lv_cont.h ****      */
  80:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_GRID,   /**< Align same-sized object into a grid*/
  81:lvgl/src/lv_widgets/lv_cont.h **** 
  82:lvgl/src/lv_widgets/lv_cont.h ****     _LV_LAYOUT_LAST
  83:lvgl/src/lv_widgets/lv_cont.h **** };
  84:lvgl/src/lv_widgets/lv_cont.h **** typedef uint8_t lv_layout_t;
  85:lvgl/src/lv_widgets/lv_cont.h **** 
  86:lvgl/src/lv_widgets/lv_cont.h **** /**
  87:lvgl/src/lv_widgets/lv_cont.h ****  * How to resize the container around the children.
  88:lvgl/src/lv_widgets/lv_cont.h ****  */
  89:lvgl/src/lv_widgets/lv_cont.h **** enum {
  90:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_NONE,  /**< Do not change the size automatically*/
  91:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_TIGHT, /**< Shrink wrap around the children */
  92:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_PARENT, /**< Align the size to the parent's edge*/
  93:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_MAX,  /**< Align the size to the parent's edge first but if there is an object out of it
  94:lvgl/src/lv_widgets/lv_cont.h ****                      then get larger */
  95:lvgl/src/lv_widgets/lv_cont.h ****     _LV_FIT_LAST
  96:lvgl/src/lv_widgets/lv_cont.h **** };
  97:lvgl/src/lv_widgets/lv_cont.h **** typedef uint8_t lv_fit_t;
  98:lvgl/src/lv_widgets/lv_cont.h **** 
  99:lvgl/src/lv_widgets/lv_cont.h **** typedef struct {
 100:lvgl/src/lv_widgets/lv_cont.h ****     /*Inherited from 'base_obj' so no inherited ext. */ /*Ext. of ancestor*/
 101:lvgl/src/lv_widgets/lv_cont.h ****     /*New data for this type */
 102:lvgl/src/lv_widgets/lv_cont.h ****     lv_layout_t layout : 4;     /*A layout from 'lv_layout_t' enum*/
 103:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_left : 2;   /*A fit type from `lv_fit_t` enum */
 104:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_right : 2;  /*A fit type from `lv_fit_t` enum */
 105:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_top : 2;    /*A fit type from `lv_fit_t` enum */
 106:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_bottom : 2; /*A fit type from `lv_fit_t` enum */
 107:lvgl/src/lv_widgets/lv_cont.h **** } lv_cont_ext_t;
ARM GAS  D:\Temp\cc6WWuOg.s 			page 94


 108:lvgl/src/lv_widgets/lv_cont.h **** 
 109:lvgl/src/lv_widgets/lv_cont.h **** /*Part of the container*/
 110:lvgl/src/lv_widgets/lv_cont.h **** enum {
 111:lvgl/src/lv_widgets/lv_cont.h ****     LV_CONT_PART_MAIN = LV_OBJ_PART_MAIN,
 112:lvgl/src/lv_widgets/lv_cont.h ****     _LV_CONT_PART_VIRTUAL_LAST = _LV_OBJ_PART_VIRTUAL_LAST,
 113:lvgl/src/lv_widgets/lv_cont.h ****     _LV_CONT_PART_REAL_LAST = _LV_OBJ_PART_REAL_LAST,
 114:lvgl/src/lv_widgets/lv_cont.h **** };
 115:lvgl/src/lv_widgets/lv_cont.h **** 
 116:lvgl/src/lv_widgets/lv_cont.h **** /**********************
 117:lvgl/src/lv_widgets/lv_cont.h ****  * GLOBAL PROTOTYPES
 118:lvgl/src/lv_widgets/lv_cont.h ****  **********************/
 119:lvgl/src/lv_widgets/lv_cont.h **** 
 120:lvgl/src/lv_widgets/lv_cont.h **** /**
 121:lvgl/src/lv_widgets/lv_cont.h ****  * Create a container objects
 122:lvgl/src/lv_widgets/lv_cont.h ****  * @param par pointer to an object, it will be the parent of the new container
 123:lvgl/src/lv_widgets/lv_cont.h ****  * @param copy pointer to a container object, if not NULL then the new object will be copied from i
 124:lvgl/src/lv_widgets/lv_cont.h ****  * @return pointer to the created container
 125:lvgl/src/lv_widgets/lv_cont.h ****  */
 126:lvgl/src/lv_widgets/lv_cont.h **** lv_obj_t * lv_cont_create(lv_obj_t * par, const lv_obj_t * copy);
 127:lvgl/src/lv_widgets/lv_cont.h **** 
 128:lvgl/src/lv_widgets/lv_cont.h **** /*=====================
 129:lvgl/src/lv_widgets/lv_cont.h ****  * Setter functions
 130:lvgl/src/lv_widgets/lv_cont.h ****  *====================*/
 131:lvgl/src/lv_widgets/lv_cont.h **** 
 132:lvgl/src/lv_widgets/lv_cont.h **** /**
 133:lvgl/src/lv_widgets/lv_cont.h ****  * Set a layout on a container
 134:lvgl/src/lv_widgets/lv_cont.h ****  * @param cont pointer to a container object
 135:lvgl/src/lv_widgets/lv_cont.h ****  * @param layout a layout from 'lv_cont_layout_t'
 136:lvgl/src/lv_widgets/lv_cont.h ****  */
 137:lvgl/src/lv_widgets/lv_cont.h **** void lv_cont_set_layout(lv_obj_t * cont, lv_layout_t layout);
 138:lvgl/src/lv_widgets/lv_cont.h **** 
 139:lvgl/src/lv_widgets/lv_cont.h **** /**
 140:lvgl/src/lv_widgets/lv_cont.h ****  * Set the fit policy in all 4 directions separately.
 141:lvgl/src/lv_widgets/lv_cont.h ****  * It tell how to change the container's size automatically.
 142:lvgl/src/lv_widgets/lv_cont.h ****  * @param cont pointer to a container object
 143:lvgl/src/lv_widgets/lv_cont.h ****  * @param left left fit policy from `lv_fit_t`
 144:lvgl/src/lv_widgets/lv_cont.h ****  * @param right right fit policy from `lv_fit_t`
 145:lvgl/src/lv_widgets/lv_cont.h ****  * @param top top fit policy from `lv_fit_t`
 146:lvgl/src/lv_widgets/lv_cont.h ****  * @param bottom bottom fit policy from `lv_fit_t`
 147:lvgl/src/lv_widgets/lv_cont.h ****  */
 148:lvgl/src/lv_widgets/lv_cont.h **** void lv_cont_set_fit4(lv_obj_t * cont, lv_fit_t left, lv_fit_t right, lv_fit_t top, lv_fit_t bottom
 149:lvgl/src/lv_widgets/lv_cont.h **** 
 150:lvgl/src/lv_widgets/lv_cont.h **** /**
 151:lvgl/src/lv_widgets/lv_cont.h ****  * Set the fit policy horizontally and vertically separately.
 152:lvgl/src/lv_widgets/lv_cont.h ****  * It tells how to change the container's size automatically.
 153:lvgl/src/lv_widgets/lv_cont.h ****  * @param cont pointer to a container object
 154:lvgl/src/lv_widgets/lv_cont.h ****  * @param hor horizontal fit policy from `lv_fit_t`
 155:lvgl/src/lv_widgets/lv_cont.h ****  * @param ver vertical fit policy from `lv_fit_t`
 156:lvgl/src/lv_widgets/lv_cont.h ****  */
 157:lvgl/src/lv_widgets/lv_cont.h **** static inline void lv_cont_set_fit2(lv_obj_t * cont, lv_fit_t hor, lv_fit_t ver)
 2740              		.loc 7 157 20 discriminator 4 view .LVU792
 2741              	.LBB136:
 158:lvgl/src/lv_widgets/lv_cont.h **** {
 159:lvgl/src/lv_widgets/lv_cont.h ****     lv_cont_set_fit4(cont, hor, hor, ver, ver);
 2742              		.loc 7 159 5 discriminator 4 view .LVU793
 2743 0094 0123     		movs	r3, #1
 2744 0096 0093     		str	r3, [sp]
ARM GAS  D:\Temp\cc6WWuOg.s 			page 95


 2745 0098 0022     		movs	r2, #0
 2746 009a 1146     		mov	r1, r2
 2747 009c 2046     		mov	r0, r4
 2748 009e FFF7FEFF 		bl	lv_cont_set_fit4
 2749              	.LVL341:
 2750              		.loc 7 159 5 is_stmt 0 discriminator 4 view .LVU794
 2751              	.LBE136:
 2752              	.LBE135:
 2753              	.LBE137:
 188:lvgl/src/lv_widgets/lv_list.c ****     }
 2754              		.loc 1 188 9 is_stmt 1 discriminator 4 view .LVU795
 2755 00a2 5946     		mov	r1, fp
 2756 00a4 2046     		mov	r0, r4
 2757 00a6 FFF7FEFF 		bl	lv_obj_set_width
 2758              	.LVL342:
 2759              	.L227:
 188:lvgl/src/lv_widgets/lv_list.c ****     }
 2760              		.loc 1 188 9 is_stmt 0 discriminator 4 view .LVU796
 2761              	.LBE138:
 191:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_set_signal_cb(btn, lv_list_btn_signal);
 2762              		.loc 1 191 5 is_stmt 1 view .LVU797
 2763 00aa 1021     		movs	r1, #16
 2764 00ac 2046     		mov	r0, r4
 2765 00ae FFF7FEFF 		bl	lv_obj_add_protect
 2766              	.LVL343:
 192:lvgl/src/lv_widgets/lv_list.c **** 
 2767              		.loc 1 192 5 view .LVU798
 2768 00b2 4C49     		ldr	r1, .L240+8
 2769 00b4 2046     		mov	r0, r4
 2770 00b6 FFF7FEFF 		bl	lv_obj_set_signal_cb
 2771              	.LVL344:
 195:lvgl/src/lv_widgets/lv_list.c ****     if(img_src) {
 2772              		.loc 1 195 5 view .LVU799
 196:lvgl/src/lv_widgets/lv_list.c ****         img = lv_img_create(btn, NULL);
 2773              		.loc 1 196 5 view .LVU800
 196:lvgl/src/lv_widgets/lv_list.c ****         img = lv_img_create(btn, NULL);
 2774              		.loc 1 196 7 is_stmt 0 view .LVU801
 2775 00ba 7EB1     		cbz	r6, .L228
 197:lvgl/src/lv_widgets/lv_list.c ****         lv_img_set_src(img, img_src);
 2776              		.loc 1 197 9 is_stmt 1 view .LVU802
 197:lvgl/src/lv_widgets/lv_list.c ****         lv_img_set_src(img, img_src);
 2777              		.loc 1 197 15 is_stmt 0 view .LVU803
 2778 00bc 0021     		movs	r1, #0
 2779 00be 2046     		mov	r0, r4
 2780 00c0 FFF7FEFF 		bl	lv_img_create
 2781              	.LVL345:
 2782 00c4 8346     		mov	fp, r0
 2783              	.LVL346:
 198:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_set_click(img, false);
 2784              		.loc 1 198 9 is_stmt 1 view .LVU804
 2785 00c6 3146     		mov	r1, r6
 2786 00c8 FFF7FEFF 		bl	lv_img_set_src
 2787              	.LVL347:
 199:lvgl/src/lv_widgets/lv_list.c ****         if(img_signal == NULL) img_signal = lv_obj_get_signal_cb(img);
 2788              		.loc 1 199 9 view .LVU805
 2789 00cc 0021     		movs	r1, #0
 2790 00ce 5846     		mov	r0, fp
ARM GAS  D:\Temp\cc6WWuOg.s 			page 96


 2791 00d0 FFF7FEFF 		bl	lv_obj_set_click
 2792              	.LVL348:
 200:lvgl/src/lv_widgets/lv_list.c ****     }
 2793              		.loc 1 200 9 view .LVU806
 200:lvgl/src/lv_widgets/lv_list.c ****     }
 2794              		.loc 1 200 23 is_stmt 0 view .LVU807
 2795 00d4 444B     		ldr	r3, .L240+12
 2796 00d6 1B68     		ldr	r3, [r3]
 200:lvgl/src/lv_widgets/lv_list.c ****     }
 2797              		.loc 1 200 11 view .LVU808
 2798 00d8 002B     		cmp	r3, #0
 2799 00da 5AD0     		beq	.L236
 2800              	.LVL349:
 2801              	.L228:
 203:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_t * label = lv_label_create(btn, NULL);
 2802              		.loc 1 203 5 is_stmt 1 view .LVU809
 203:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_t * label = lv_label_create(btn, NULL);
 2803              		.loc 1 203 7 is_stmt 0 view .LVU810
 2804 00dc BAF1000F 		cmp	r10, #0
 2805 00e0 26D0     		beq	.L229
 2806              	.LBB139:
 204:lvgl/src/lv_widgets/lv_list.c ****         lv_label_set_text(label, txt);
 2807              		.loc 1 204 9 is_stmt 1 view .LVU811
 204:lvgl/src/lv_widgets/lv_list.c ****         lv_label_set_text(label, txt);
 2808              		.loc 1 204 28 is_stmt 0 view .LVU812
 2809 00e2 0021     		movs	r1, #0
 2810 00e4 2046     		mov	r0, r4
 2811 00e6 FFF7FEFF 		bl	lv_label_create
 2812              	.LVL350:
 2813 00ea 0646     		mov	r6, r0
 2814              	.LVL351:
 205:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_set_click(label, false);
 2815              		.loc 1 205 9 is_stmt 1 view .LVU813
 2816 00ec 5146     		mov	r1, r10
 2817 00ee FFF7FEFF 		bl	lv_label_set_text
 2818              	.LVL352:
 206:lvgl/src/lv_widgets/lv_list.c ****         lv_label_set_long_mode(label, LV_LABEL_LONG_SROLL_CIRC);
 2819              		.loc 1 206 9 view .LVU814
 2820 00f2 0021     		movs	r1, #0
 2821 00f4 3046     		mov	r0, r6
 2822 00f6 FFF7FEFF 		bl	lv_obj_set_click
 2823              	.LVL353:
 207:lvgl/src/lv_widgets/lv_list.c ****         if(lv_obj_get_base_dir(btn) == LV_BIDI_DIR_RTL) {
 2824              		.loc 1 207 9 view .LVU815
 2825 00fa 0421     		movs	r1, #4
 2826 00fc 3046     		mov	r0, r6
 2827 00fe FFF7FEFF 		bl	lv_label_set_long_mode
 2828              	.LVL354:
 208:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t pad = lv_obj_get_style_pad_left(btn, LV_BTN_PART_MAIN);
 2829              		.loc 1 208 9 view .LVU816
 208:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t pad = lv_obj_get_style_pad_left(btn, LV_BTN_PART_MAIN);
 2830              		.loc 1 208 12 is_stmt 0 view .LVU817
 2831 0102 2046     		mov	r0, r4
 2832 0104 FFF7FEFF 		bl	lv_obj_get_base_dir
 2833              	.LVL355:
 208:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t pad = lv_obj_get_style_pad_left(btn, LV_BTN_PART_MAIN);
 2834              		.loc 1 208 11 view .LVU818
ARM GAS  D:\Temp\cc6WWuOg.s 			page 97


 2835 0108 0128     		cmp	r0, #1
 2836 010a 48D0     		beq	.L237
 2837              	.LBB140:
 213:lvgl/src/lv_widgets/lv_list.c ****             lv_obj_set_width(label, btn->coords.x2 - label->coords.x1 - pad);
 2838              		.loc 1 213 13 is_stmt 1 view .LVU819
 2839              	.LVL356:
 2840              	.LBB141:
 2841              	.LBI141:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2842              		.loc 3 113 1 view .LVU820
 2843              	.LBB142:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2844              		.loc 3 113 1 view .LVU821
 2845 010c 1322     		movs	r2, #19
 2846 010e 0021     		movs	r1, #0
 2847 0110 2046     		mov	r0, r4
 2848 0112 FFF7FEFF 		bl	_lv_obj_get_style_int
 2849              	.LVL357:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 2850              		.loc 3 113 1 is_stmt 0 view .LVU822
 2851              	.LBE142:
 2852              	.LBE141:
 214:lvgl/src/lv_widgets/lv_list.c ****         }
 2853              		.loc 1 214 13 is_stmt 1 view .LVU823
 214:lvgl/src/lv_widgets/lv_list.c ****         }
 2854              		.loc 1 214 48 is_stmt 0 view .LVU824
 2855 0116 A38A     		ldrh	r3, [r4, #20]
 214:lvgl/src/lv_widgets/lv_list.c ****         }
 2856              		.loc 1 214 67 view .LVU825
 2857 0118 328A     		ldrh	r2, [r6, #16]
 214:lvgl/src/lv_widgets/lv_list.c ****         }
 2858              		.loc 1 214 52 view .LVU826
 2859 011a 9B1A     		subs	r3, r3, r2
 2860 011c 9BB2     		uxth	r3, r3
 214:lvgl/src/lv_widgets/lv_list.c ****         }
 2861              		.loc 1 214 71 view .LVU827
 2862 011e 1B1A     		subs	r3, r3, r0
 214:lvgl/src/lv_widgets/lv_list.c ****         }
 2863              		.loc 1 214 13 view .LVU828
 2864 0120 19B2     		sxth	r1, r3
 2865 0122 3046     		mov	r0, r6
 2866              	.LVL358:
 214:lvgl/src/lv_widgets/lv_list.c ****         }
 2867              		.loc 1 214 13 view .LVU829
 2868 0124 FFF7FEFF 		bl	lv_obj_set_width
 2869              	.LVL359:
 2870              	.L231:
 214:lvgl/src/lv_widgets/lv_list.c ****         }
 2871              		.loc 1 214 13 view .LVU830
 2872              	.LBE140:
 216:lvgl/src/lv_widgets/lv_list.c ****     }
 2873              		.loc 1 216 9 is_stmt 1 view .LVU831
 216:lvgl/src/lv_widgets/lv_list.c ****     }
 2874              		.loc 1 216 25 is_stmt 0 view .LVU832
 2875 0128 304B     		ldr	r3, .L240+16
 2876 012a 1B68     		ldr	r3, [r3]
 216:lvgl/src/lv_widgets/lv_list.c ****     }
ARM GAS  D:\Temp\cc6WWuOg.s 			page 98


 2877              		.loc 1 216 11 view .LVU833
 2878 012c 002B     		cmp	r3, #0
 2879 012e 45D0     		beq	.L238
 2880              	.LVL360:
 2881              	.L229:
 216:lvgl/src/lv_widgets/lv_list.c ****     }
 2882              		.loc 1 216 11 view .LVU834
 2883              	.LBE139:
 2884              	.LBB146:
 223:lvgl/src/lv_widgets/lv_list.c ****         if(lv_list_get_next_btn(list, NULL) == btn && lv_group_get_focused(g) == list) {
 2885              		.loc 1 223 9 is_stmt 1 view .LVU835
 223:lvgl/src/lv_widgets/lv_list.c ****         if(lv_list_get_next_btn(list, NULL) == btn && lv_group_get_focused(g) == list) {
 2886              		.loc 1 223 26 is_stmt 0 view .LVU836
 2887 0130 2846     		mov	r0, r5
 2888 0132 FFF7FEFF 		bl	lv_obj_get_group
 2889              	.LVL361:
 2890 0136 0646     		mov	r6, r0
 2891              	.LVL362:
 224:lvgl/src/lv_widgets/lv_list.c ****             lv_list_focus_btn(list, btn);
 2892              		.loc 1 224 9 is_stmt 1 view .LVU837
 224:lvgl/src/lv_widgets/lv_list.c ****             lv_list_focus_btn(list, btn);
 2893              		.loc 1 224 12 is_stmt 0 view .LVU838
 2894 0138 0021     		movs	r1, #0
 2895 013a 2846     		mov	r0, r5
 2896              	.LVL363:
 224:lvgl/src/lv_widgets/lv_list.c ****             lv_list_focus_btn(list, btn);
 2897              		.loc 1 224 12 view .LVU839
 2898 013c FFF7FEFF 		bl	lv_list_get_next_btn
 2899              	.LVL364:
 224:lvgl/src/lv_widgets/lv_list.c ****             lv_list_focus_btn(list, btn);
 2900              		.loc 1 224 11 view .LVU840
 2901 0140 8442     		cmp	r4, r0
 2902 0142 41D0     		beq	.L239
 2903              	.L232:
 2904              	.LBE146:
 230:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_clear_protect(btn, LV_PROTECT_CHILD_CHG);
 2905              		.loc 1 230 5 is_stmt 1 view .LVU841
 2906 0144 0121     		movs	r1, #1
 2907 0146 4846     		mov	r0, r9
 2908 0148 FFF7FEFF 		bl	lv_obj_clear_protect
 2909              	.LVL365:
 231:lvgl/src/lv_widgets/lv_list.c ****     btn->signal_cb(btn, LV_SIGNAL_CHILD_CHG, NULL);
 2910              		.loc 1 231 5 view .LVU842
 2911 014c 0121     		movs	r1, #1
 2912 014e 2046     		mov	r0, r4
 2913 0150 FFF7FEFF 		bl	lv_obj_clear_protect
 2914              	.LVL366:
 232:lvgl/src/lv_widgets/lv_list.c **** 
 2915              		.loc 1 232 5 view .LVU843
 232:lvgl/src/lv_widgets/lv_list.c **** 
 2916              		.loc 1 232 8 is_stmt 0 view .LVU844
 2917 0154 E369     		ldr	r3, [r4, #28]
 232:lvgl/src/lv_widgets/lv_list.c **** 
 2918              		.loc 1 232 5 view .LVU845
 2919 0156 0022     		movs	r2, #0
 2920 0158 0121     		movs	r1, #1
 2921 015a 2046     		mov	r0, r4
ARM GAS  D:\Temp\cc6WWuOg.s 			page 99


 2922 015c 9847     		blx	r3
 2923              	.LVL367:
 234:lvgl/src/lv_widgets/lv_list.c **** 
 2924              		.loc 1 234 5 is_stmt 1 view .LVU846
 2925 015e 4246     		mov	r2, r8
 2926 0160 3946     		mov	r1, r7
 2927 0162 2846     		mov	r0, r5
 2928 0164 FFF7FEFF 		bl	lv_obj_set_pos
 2929              	.LVL368:
 236:lvgl/src/lv_widgets/lv_list.c **** }
 2930              		.loc 1 236 5 view .LVU847
 237:lvgl/src/lv_widgets/lv_list.c **** 
 2931              		.loc 1 237 1 is_stmt 0 view .LVU848
 2932 0168 2046     		mov	r0, r4
 2933 016a 03B0     		add	sp, sp, #12
 2934              	.LCFI29:
 2935              		.cfi_remember_state
 2936              		.cfi_def_cfa_offset 36
 2937              		@ sp needed
 2938 016c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2939              	.LVL369:
 2940              	.L234:
 2941              	.LCFI30:
 2942              		.cfi_restore_state
 167:lvgl/src/lv_widgets/lv_list.c **** 
 2943              		.loc 1 167 37 is_stmt 1 discriminator 1 view .LVU849
 167:lvgl/src/lv_widgets/lv_list.c **** 
 2944              		.loc 1 167 59 is_stmt 0 discriminator 1 view .LVU850
 2945 0170 2046     		mov	r0, r4
 2946 0172 FFF7FEFF 		bl	lv_obj_get_signal_cb
 2947              	.LVL370:
 167:lvgl/src/lv_widgets/lv_list.c **** 
 2948              		.loc 1 167 57 discriminator 1 view .LVU851
 2949 0176 1A4B     		ldr	r3, .L240+4
 2950 0178 1860     		str	r0, [r3]
 2951 017a 71E7     		b	.L223
 2952              	.LVL371:
 2953              	.L235:
 2954              	.LBB147:
 186:lvgl/src/lv_widgets/lv_list.c ****         lv_btn_set_fit2(btn, LV_FIT_NONE, LV_FIT_TIGHT);
 2955              		.loc 1 186 20 view .LVU852
 2956 017c 4FF0780B 		mov	fp, #120
 2957              	.LVL372:
 186:lvgl/src/lv_widgets/lv_list.c ****         lv_btn_set_fit2(btn, LV_FIT_NONE, LV_FIT_TIGHT);
 2958              		.loc 1 186 20 view .LVU853
 2959 0180 88E7     		b	.L226
 2960              	.LVL373:
 2961              	.L224:
 186:lvgl/src/lv_widgets/lv_list.c ****         lv_btn_set_fit2(btn, LV_FIT_NONE, LV_FIT_TIGHT);
 2962              		.loc 1 186 20 view .LVU854
 2963              	.LBE147:
 179:lvgl/src/lv_widgets/lv_list.c ****     }
 2964              		.loc 1 179 9 is_stmt 1 view .LVU855
 182:lvgl/src/lv_widgets/lv_list.c ****         lv_btn_set_fit2(btn, LV_FIT_PARENT, LV_FIT_TIGHT);
 2965              		.loc 1 182 5 view .LVU856
 183:lvgl/src/lv_widgets/lv_list.c ****     }
 2966              		.loc 1 183 9 view .LVU857
ARM GAS  D:\Temp\cc6WWuOg.s 			page 100


 2967              	.LBB148:
 2968              	.LBI148:
 133:lvgl/src/lv_widgets/lv_btn.h **** {
 2969              		.loc 6 133 20 view .LVU858
 2970              	.LBE148:
 2971              		.loc 6 135 5 view .LVU859
 2972              	.LBB151:
 2973              	.LBB149:
 2974              	.LBI149:
 157:lvgl/src/lv_widgets/lv_cont.h **** {
 2975              		.loc 7 157 20 view .LVU860
 2976              	.LBB150:
 2977              		.loc 7 159 5 view .LVU861
 2978 0182 0123     		movs	r3, #1
 2979 0184 0093     		str	r3, [sp]
 2980 0186 0222     		movs	r2, #2
 2981 0188 1146     		mov	r1, r2
 2982 018a 2046     		mov	r0, r4
 2983              	.LVL374:
 2984              		.loc 7 159 5 is_stmt 0 view .LVU862
 2985 018c FFF7FEFF 		bl	lv_cont_set_fit4
 2986              	.LVL375:
 2987              		.loc 7 159 5 view .LVU863
 2988 0190 8BE7     		b	.L227
 2989              	.LVL376:
 2990              	.L236:
 2991              		.loc 7 159 5 view .LVU864
 2992              	.LBE150:
 2993              	.LBE149:
 2994              	.LBE151:
 200:lvgl/src/lv_widgets/lv_list.c ****     }
 2995              		.loc 1 200 32 is_stmt 1 discriminator 1 view .LVU865
 200:lvgl/src/lv_widgets/lv_list.c ****     }
 2996              		.loc 1 200 45 is_stmt 0 discriminator 1 view .LVU866
 2997 0192 5846     		mov	r0, fp
 2998 0194 FFF7FEFF 		bl	lv_obj_get_signal_cb
 2999              	.LVL377:
 200:lvgl/src/lv_widgets/lv_list.c ****     }
 3000              		.loc 1 200 43 discriminator 1 view .LVU867
 3001 0198 134B     		ldr	r3, .L240+12
 3002 019a 1860     		str	r0, [r3]
 3003 019c 9EE7     		b	.L228
 3004              	.LVL378:
 3005              	.L237:
 3006              	.LBB152:
 3007              	.LBB143:
 209:lvgl/src/lv_widgets/lv_list.c ****             lv_obj_set_width(label, label->coords.x2 - btn->coords.x1 - pad);
 3008              		.loc 1 209 13 is_stmt 1 view .LVU868
 3009              	.LBB144:
 3010              	.LBI144:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 3011              		.loc 3 112 1 view .LVU869
 3012              	.LBB145:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 3013              		.loc 3 112 1 view .LVU870
 3014 019e 1222     		movs	r2, #18
 3015 01a0 0021     		movs	r1, #0
ARM GAS  D:\Temp\cc6WWuOg.s 			page 101


 3016 01a2 2046     		mov	r0, r4
 3017 01a4 FFF7FEFF 		bl	_lv_obj_get_style_int
 3018              	.LVL379:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 3019              		.loc 3 112 1 is_stmt 0 view .LVU871
 3020              	.LBE145:
 3021              	.LBE144:
 210:lvgl/src/lv_widgets/lv_list.c ****         }
 3022              		.loc 1 210 13 is_stmt 1 view .LVU872
 210:lvgl/src/lv_widgets/lv_list.c ****         }
 3023              		.loc 1 210 50 is_stmt 0 view .LVU873
 3024 01a8 B38A     		ldrh	r3, [r6, #20]
 210:lvgl/src/lv_widgets/lv_list.c ****         }
 3025              		.loc 1 210 67 view .LVU874
 3026 01aa 228A     		ldrh	r2, [r4, #16]
 210:lvgl/src/lv_widgets/lv_list.c ****         }
 3027              		.loc 1 210 54 view .LVU875
 3028 01ac 9B1A     		subs	r3, r3, r2
 3029 01ae 9BB2     		uxth	r3, r3
 210:lvgl/src/lv_widgets/lv_list.c ****         }
 3030              		.loc 1 210 71 view .LVU876
 3031 01b0 1B1A     		subs	r3, r3, r0
 210:lvgl/src/lv_widgets/lv_list.c ****         }
 3032              		.loc 1 210 13 view .LVU877
 3033 01b2 19B2     		sxth	r1, r3
 3034 01b4 3046     		mov	r0, r6
 3035              	.LVL380:
 210:lvgl/src/lv_widgets/lv_list.c ****         }
 3036              		.loc 1 210 13 view .LVU878
 3037 01b6 FFF7FEFF 		bl	lv_obj_set_width
 3038              	.LVL381:
 3039              	.LBE143:
 3040 01ba B5E7     		b	.L231
 3041              	.L238:
 216:lvgl/src/lv_widgets/lv_list.c ****     }
 3042              		.loc 1 216 34 is_stmt 1 discriminator 1 view .LVU879
 216:lvgl/src/lv_widgets/lv_list.c ****     }
 3043              		.loc 1 216 49 is_stmt 0 discriminator 1 view .LVU880
 3044 01bc 3046     		mov	r0, r6
 3045 01be FFF7FEFF 		bl	lv_obj_get_signal_cb
 3046              	.LVL382:
 216:lvgl/src/lv_widgets/lv_list.c ****     }
 3047              		.loc 1 216 47 discriminator 1 view .LVU881
 3048 01c2 0A4B     		ldr	r3, .L240+16
 3049 01c4 1860     		str	r0, [r3]
 3050 01c6 B3E7     		b	.L229
 3051              	.LVL383:
 3052              	.L239:
 216:lvgl/src/lv_widgets/lv_list.c ****     }
 3053              		.loc 1 216 47 discriminator 1 view .LVU882
 3054              	.LBE152:
 3055              	.LBB153:
 224:lvgl/src/lv_widgets/lv_list.c ****             lv_list_focus_btn(list, btn);
 3056              		.loc 1 224 55 discriminator 1 view .LVU883
 3057 01c8 3046     		mov	r0, r6
 3058 01ca FFF7FEFF 		bl	lv_group_get_focused
 3059              	.LVL384:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 102


 224:lvgl/src/lv_widgets/lv_list.c ****             lv_list_focus_btn(list, btn);
 3060              		.loc 1 224 52 discriminator 1 view .LVU884
 3061 01ce 8542     		cmp	r5, r0
 3062 01d0 B8D1     		bne	.L232
 225:lvgl/src/lv_widgets/lv_list.c ****         }
 3063              		.loc 1 225 13 is_stmt 1 view .LVU885
 3064 01d2 2146     		mov	r1, r4
 3065 01d4 2846     		mov	r0, r5
 3066 01d6 FFF7FEFF 		bl	lv_list_focus_btn
 3067              	.LVL385:
 3068 01da B3E7     		b	.L232
 3069              	.L241:
 3070              		.align	2
 3071              	.L240:
 3072 01dc 00000000 		.word	.LC0
 3073 01e0 00000000 		.word	.LANCHOR1
 3074 01e4 00000000 		.word	lv_list_btn_signal
 3075 01e8 00000000 		.word	.LANCHOR2
 3076 01ec 00000000 		.word	.LANCHOR3
 3077              	.LBE153:
 3078              		.cfi_endproc
 3079              	.LFE492:
 3081              		.section	.text.lv_list_create,"ax",%progbits
 3082              		.align	1
 3083              		.global	lv_list_create
 3084              		.syntax unified
 3085              		.thumb
 3086              		.thumb_func
 3087              		.fpu fpv4-sp-d16
 3089              	lv_list_create:
 3090              	.LVL386:
 3091              	.LFB490:
  69:lvgl/src/lv_widgets/lv_list.c ****     LV_LOG_TRACE("list create started");
 3092              		.loc 1 69 1 view -0
 3093              		.cfi_startproc
 3094              		@ args = 0, pretend = 0, frame = 0
 3095              		@ frame_needed = 0, uses_anonymous_args = 0
  69:lvgl/src/lv_widgets/lv_list.c ****     LV_LOG_TRACE("list create started");
 3096              		.loc 1 69 1 is_stmt 0 view .LVU887
 3097 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3098              	.LCFI31:
 3099              		.cfi_def_cfa_offset 20
 3100              		.cfi_offset 4, -20
 3101              		.cfi_offset 5, -16
 3102              		.cfi_offset 6, -12
 3103              		.cfi_offset 7, -8
 3104              		.cfi_offset 14, -4
 3105 0002 83B0     		sub	sp, sp, #12
 3106              	.LCFI32:
 3107              		.cfi_def_cfa_offset 32
 3108 0004 0E46     		mov	r6, r1
  70:lvgl/src/lv_widgets/lv_list.c **** 
 3109              		.loc 1 70 40 is_stmt 1 view .LVU888
  73:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_MEM(list);
 3110              		.loc 1 73 5 view .LVU889
  73:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_MEM(list);
 3111              		.loc 1 73 23 is_stmt 0 view .LVU890
ARM GAS  D:\Temp\cc6WWuOg.s 			page 103


 3112 0006 FFF7FEFF 		bl	lv_page_create
 3113              	.LVL387:
  73:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_MEM(list);
 3114              		.loc 1 73 23 view .LVU891
 3115 000a 0446     		mov	r4, r0
 3116              	.LVL388:
  74:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) return NULL;
 3117              		.loc 1 74 5 is_stmt 1 view .LVU892
  74:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) return NULL;
 3118              		.loc 1 74 5 view .LVU893
 3119 000c FFF7FEFF 		bl	lv_debug_check_null
 3120              	.LVL389:
  74:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) return NULL;
 3121              		.loc 1 74 5 is_stmt 0 view .LVU894
 3122 0010 D8B1     		cbz	r0, .L256
  74:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) return NULL;
 3123              		.loc 1 74 24 is_stmt 1 discriminator 2 view .LVU895
  75:lvgl/src/lv_widgets/lv_list.c **** 
 3124              		.loc 1 75 5 discriminator 2 view .LVU896
  75:lvgl/src/lv_widgets/lv_list.c **** 
 3125              		.loc 1 75 7 is_stmt 0 discriminator 2 view .LVU897
 3126 0012 002C     		cmp	r4, #0
 3127 0014 6ED0     		beq	.L242
  77:lvgl/src/lv_widgets/lv_list.c **** 
 3128              		.loc 1 77 5 is_stmt 1 view .LVU898
  77:lvgl/src/lv_widgets/lv_list.c **** 
 3129              		.loc 1 77 29 is_stmt 0 view .LVU899
 3130 0016 394B     		ldr	r3, .L262
 3131 0018 1B68     		ldr	r3, [r3]
  77:lvgl/src/lv_widgets/lv_list.c **** 
 3132              		.loc 1 77 7 view .LVU900
 3133 001a E3B1     		cbz	r3, .L257
 3134              	.L246:
  79:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_MEM(ext);
 3135              		.loc 1 79 5 is_stmt 1 view .LVU901
  79:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_MEM(ext);
 3136              		.loc 1 79 27 is_stmt 0 view .LVU902
 3137 001c 4821     		movs	r1, #72
 3138 001e 2046     		mov	r0, r4
 3139 0020 FFF7FEFF 		bl	lv_obj_allocate_ext_attr
 3140              	.LVL390:
 3141 0024 0546     		mov	r5, r0
 3142              	.LVL391:
  80:lvgl/src/lv_widgets/lv_list.c ****     if(ext == NULL) {
 3143              		.loc 1 80 5 is_stmt 1 view .LVU903
  80:lvgl/src/lv_widgets/lv_list.c ****     if(ext == NULL) {
 3144              		.loc 1 80 5 view .LVU904
 3145 0026 FFF7FEFF 		bl	lv_debug_check_null
 3146              	.LVL392:
  80:lvgl/src/lv_widgets/lv_list.c ****     if(ext == NULL) {
 3147              		.loc 1 80 5 is_stmt 0 view .LVU905
 3148 002a D0B1     		cbz	r0, .L258
  80:lvgl/src/lv_widgets/lv_list.c ****     if(ext == NULL) {
 3149              		.loc 1 80 23 is_stmt 1 discriminator 2 view .LVU906
  81:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_del(list);
 3150              		.loc 1 81 5 discriminator 2 view .LVU907
  81:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_del(list);
ARM GAS  D:\Temp\cc6WWuOg.s 			page 104


 3151              		.loc 1 81 7 is_stmt 0 discriminator 2 view .LVU908
 3152 002c FDB1     		cbz	r5, .L259
  87:lvgl/src/lv_widgets/lv_list.c **** #endif
 3153              		.loc 1 87 5 is_stmt 1 view .LVU909
  87:lvgl/src/lv_widgets/lv_list.c **** #endif
 3154              		.loc 1 87 23 is_stmt 0 view .LVU910
 3155 002e 0023     		movs	r3, #0
 3156 0030 2B64     		str	r3, [r5, #64]
  89:lvgl/src/lv_widgets/lv_list.c **** 
 3157              		.loc 1 89 5 is_stmt 1 view .LVU911
  89:lvgl/src/lv_widgets/lv_list.c **** 
 3158              		.loc 1 89 22 is_stmt 0 view .LVU912
 3159 0032 6B64     		str	r3, [r5, #68]
  91:lvgl/src/lv_widgets/lv_list.c **** 
 3160              		.loc 1 91 5 is_stmt 1 view .LVU913
 3161 0034 3249     		ldr	r1, .L262+4
 3162 0036 2046     		mov	r0, r4
 3163 0038 FFF7FEFF 		bl	lv_obj_set_signal_cb
 3164              	.LVL393:
  94:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_anim_time(list, LV_LIST_DEF_ANIM_TIME);
 3165              		.loc 1 94 5 view .LVU914
  94:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_anim_time(list, LV_LIST_DEF_ANIM_TIME);
 3166              		.loc 1 94 7 is_stmt 0 view .LVU915
 3167 003c E6B1     		cbz	r6, .L260
 3168              	.LBB164:
 105:lvgl/src/lv_widgets/lv_list.c ****         while(copy_btn) {
 3169              		.loc 1 105 9 is_stmt 1 view .LVU916
 105:lvgl/src/lv_widgets/lv_list.c ****         while(copy_btn) {
 3170              		.loc 1 105 31 is_stmt 0 view .LVU917
 3171 003e 0021     		movs	r1, #0
 3172 0040 3046     		mov	r0, r6
 3173 0042 FFF7FEFF 		bl	lv_list_get_next_btn
 3174              	.LVL394:
 3175 0046 0546     		mov	r5, r0
 3176              	.LVL395:
 106:lvgl/src/lv_widgets/lv_list.c ****             const void * img_src = NULL;
 3177              		.loc 1 106 9 is_stmt 1 view .LVU918
 106:lvgl/src/lv_widgets/lv_list.c ****             const void * img_src = NULL;
 3178              		.loc 1 106 14 is_stmt 0 view .LVU919
 3179 0048 45E0     		b	.L251
 3180              	.LVL396:
 3181              	.L256:
 106:lvgl/src/lv_widgets/lv_list.c ****             const void * img_src = NULL;
 3182              		.loc 1 106 14 view .LVU920
 3183              	.LBE164:
  74:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) return NULL;
 3184              		.loc 1 74 5 is_stmt 1 discriminator 1 view .LVU921
  74:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) return NULL;
 3185              		.loc 1 74 5 discriminator 1 view .LVU922
 3186 004a 2246     		mov	r2, r4
 3187 004c 0023     		movs	r3, #0
 3188 004e 2D48     		ldr	r0, .L262+8
 3189 0050 FFF7FEFF 		bl	lv_debug_log_error
 3190              	.LVL397:
 3191              	.L244:
  74:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) return NULL;
 3192              		.loc 1 74 5 discriminator 1 view .LVU923
ARM GAS  D:\Temp\cc6WWuOg.s 			page 105


  74:lvgl/src/lv_widgets/lv_list.c ****     if(list == NULL) return NULL;
 3193              		.loc 1 74 5 discriminator 1 view .LVU924
 3194 0054 FEE7     		b	.L244
 3195              	.L257:
  77:lvgl/src/lv_widgets/lv_list.c **** 
 3196              		.loc 1 77 38 discriminator 1 view .LVU925
  77:lvgl/src/lv_widgets/lv_list.c **** 
 3197              		.loc 1 77 61 is_stmt 0 discriminator 1 view .LVU926
 3198 0056 2046     		mov	r0, r4
 3199 0058 FFF7FEFF 		bl	lv_obj_get_signal_cb
 3200              	.LVL398:
  77:lvgl/src/lv_widgets/lv_list.c **** 
 3201              		.loc 1 77 59 discriminator 1 view .LVU927
 3202 005c 274B     		ldr	r3, .L262
 3203 005e 1860     		str	r0, [r3]
 3204 0060 DCE7     		b	.L246
 3205              	.LVL399:
 3206              	.L258:
  80:lvgl/src/lv_widgets/lv_list.c ****     if(ext == NULL) {
 3207              		.loc 1 80 5 is_stmt 1 discriminator 1 view .LVU928
  80:lvgl/src/lv_widgets/lv_list.c ****     if(ext == NULL) {
 3208              		.loc 1 80 5 discriminator 1 view .LVU929
 3209 0062 2A46     		mov	r2, r5
 3210 0064 0023     		movs	r3, #0
 3211 0066 2748     		ldr	r0, .L262+8
 3212 0068 FFF7FEFF 		bl	lv_debug_log_error
 3213              	.LVL400:
 3214              	.L248:
  80:lvgl/src/lv_widgets/lv_list.c ****     if(ext == NULL) {
 3215              		.loc 1 80 5 discriminator 2 view .LVU930
  80:lvgl/src/lv_widgets/lv_list.c ****     if(ext == NULL) {
 3216              		.loc 1 80 5 discriminator 2 view .LVU931
 3217 006c FEE7     		b	.L248
 3218              	.L259:
  82:lvgl/src/lv_widgets/lv_list.c ****         return NULL;
 3219              		.loc 1 82 9 view .LVU932
 3220 006e 2046     		mov	r0, r4
 3221 0070 FFF7FEFF 		bl	lv_obj_del
 3222              	.LVL401:
  83:lvgl/src/lv_widgets/lv_list.c ****     }
 3223              		.loc 1 83 9 view .LVU933
  83:lvgl/src/lv_widgets/lv_list.c ****     }
 3224              		.loc 1 83 16 is_stmt 0 view .LVU934
 3225 0074 0024     		movs	r4, #0
 3226              	.LVL402:
  83:lvgl/src/lv_widgets/lv_list.c ****     }
 3227              		.loc 1 83 16 view .LVU935
 3228 0076 3DE0     		b	.L242
 3229              	.LVL403:
 3230              	.L260:
  95:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrollable_fit2(list, LV_FIT_PARENT, LV_FIT_TIGHT);
 3231              		.loc 1 95 9 is_stmt 1 view .LVU936
 3232 0078 6421     		movs	r1, #100
 3233 007a 2046     		mov	r0, r4
 3234 007c FFF7FEFF 		bl	lv_page_set_anim_time
 3235              	.LVL404:
  96:lvgl/src/lv_widgets/lv_list.c ****         lv_obj_set_size(list, 2 * LV_DPI, 3 * LV_DPI);
ARM GAS  D:\Temp\cc6WWuOg.s 			page 106


 3236              		.loc 1 96 9 view .LVU937
 3237              	.LBB167:
 3238              	.LBI167:
 186:lvgl/src/lv_widgets/lv_page.h **** {
 3239              		.loc 5 186 20 view .LVU938
 3240              	.LBB168:
 188:lvgl/src/lv_widgets/lv_page.h **** }
 3241              		.loc 5 188 5 view .LVU939
 3242 0080 2046     		mov	r0, r4
 3243 0082 FFF7FEFF 		bl	lv_page_get_scrollable
 3244              	.LVL405:
 3245              	.LBB169:
 3246              	.LBI169:
 157:lvgl/src/lv_widgets/lv_cont.h **** {
 3247              		.loc 7 157 20 view .LVU940
 3248              	.LBB170:
 3249              		.loc 7 159 5 view .LVU941
 3250 0086 0123     		movs	r3, #1
 3251 0088 0093     		str	r3, [sp]
 3252 008a 0222     		movs	r2, #2
 3253 008c 1146     		mov	r1, r2
 3254 008e FFF7FEFF 		bl	lv_cont_set_fit4
 3255              	.LVL406:
 3256              		.loc 7 159 5 is_stmt 0 view .LVU942
 3257              	.LBE170:
 3258              	.LBE169:
 3259              	.LBE168:
 3260              	.LBE167:
  97:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrl_layout(list, LV_LIST_LAYOUT_DEF);
 3261              		.loc 1 97 9 is_stmt 1 view .LVU943
 3262 0092 F022     		movs	r2, #240
 3263 0094 A021     		movs	r1, #160
 3264 0096 2046     		mov	r0, r4
 3265 0098 FFF7FEFF 		bl	lv_obj_set_size
 3266              	.LVL407:
  98:lvgl/src/lv_widgets/lv_list.c ****         lv_list_set_scrollbar_mode(list, LV_SCROLLBAR_MODE_DRAG);
 3267              		.loc 1 98 9 view .LVU944
 3268              	.LBB171:
 3269              	.LBI171:
 227:lvgl/src/lv_widgets/lv_page.h **** {
 3270              		.loc 5 227 20 view .LVU945
 3271              	.LBB172:
 229:lvgl/src/lv_widgets/lv_page.h **** }
 3272              		.loc 5 229 5 view .LVU946
 3273 009c 2046     		mov	r0, r4
 3274 009e FFF7FEFF 		bl	lv_page_get_scrollable
 3275              	.LVL408:
 3276 00a2 0321     		movs	r1, #3
 3277 00a4 FFF7FEFF 		bl	lv_cont_set_layout
 3278              	.LVL409:
 229:lvgl/src/lv_widgets/lv_page.h **** }
 3279              		.loc 5 229 5 is_stmt 0 view .LVU947
 3280              	.LBE172:
 3281              	.LBE171:
  99:lvgl/src/lv_widgets/lv_list.c **** 
 3282              		.loc 1 99 9 is_stmt 1 view .LVU948
 3283              	.LBB173:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 107


 3284              	.LBI173:
 3285              		.file 8 "lvgl/src/lv_widgets/lv_list.h"
   1:lvgl/src/lv_widgets/lv_list.h **** /**
   2:lvgl/src/lv_widgets/lv_list.h ****  * @file lv_list.h
   3:lvgl/src/lv_widgets/lv_list.h ****  *
   4:lvgl/src/lv_widgets/lv_list.h ****  */
   5:lvgl/src/lv_widgets/lv_list.h **** 
   6:lvgl/src/lv_widgets/lv_list.h **** #ifndef LV_LIST_H
   7:lvgl/src/lv_widgets/lv_list.h **** #define LV_LIST_H
   8:lvgl/src/lv_widgets/lv_list.h **** 
   9:lvgl/src/lv_widgets/lv_list.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/lv_list.h **** extern "C" {
  11:lvgl/src/lv_widgets/lv_list.h **** #endif
  12:lvgl/src/lv_widgets/lv_list.h **** 
  13:lvgl/src/lv_widgets/lv_list.h **** /*********************
  14:lvgl/src/lv_widgets/lv_list.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/lv_list.h ****  *********************/
  16:lvgl/src/lv_widgets/lv_list.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/lv_list.h **** 
  18:lvgl/src/lv_widgets/lv_list.h **** #if LV_USE_LIST != 0
  19:lvgl/src/lv_widgets/lv_list.h **** 
  20:lvgl/src/lv_widgets/lv_list.h **** /*Testing of dependencies*/
  21:lvgl/src/lv_widgets/lv_list.h **** #if LV_USE_PAGE == 0
  22:lvgl/src/lv_widgets/lv_list.h **** #error "lv_list: lv_page is required. Enable it in lv_conf.h (LV_USE_PAGE 1)"
  23:lvgl/src/lv_widgets/lv_list.h **** #endif
  24:lvgl/src/lv_widgets/lv_list.h **** 
  25:lvgl/src/lv_widgets/lv_list.h **** #if LV_USE_BTN == 0
  26:lvgl/src/lv_widgets/lv_list.h **** #error "lv_list: lv_btn is required. Enable it in lv_conf.h (LV_USE_BTN 1)"
  27:lvgl/src/lv_widgets/lv_list.h **** #endif
  28:lvgl/src/lv_widgets/lv_list.h **** 
  29:lvgl/src/lv_widgets/lv_list.h **** #if LV_USE_LABEL == 0
  30:lvgl/src/lv_widgets/lv_list.h **** #error "lv_list: lv_label is required. Enable it in lv_conf.h (LV_USE_LABEL 1)"
  31:lvgl/src/lv_widgets/lv_list.h **** #endif
  32:lvgl/src/lv_widgets/lv_list.h **** 
  33:lvgl/src/lv_widgets/lv_list.h **** #include "../lv_core/lv_obj.h"
  34:lvgl/src/lv_widgets/lv_list.h **** #include "lv_page.h"
  35:lvgl/src/lv_widgets/lv_list.h **** #include "lv_btn.h"
  36:lvgl/src/lv_widgets/lv_list.h **** #include "lv_label.h"
  37:lvgl/src/lv_widgets/lv_list.h **** #include "lv_img.h"
  38:lvgl/src/lv_widgets/lv_list.h **** 
  39:lvgl/src/lv_widgets/lv_list.h **** /*********************
  40:lvgl/src/lv_widgets/lv_list.h ****  *      DEFINES
  41:lvgl/src/lv_widgets/lv_list.h ****  *********************/
  42:lvgl/src/lv_widgets/lv_list.h **** 
  43:lvgl/src/lv_widgets/lv_list.h **** /**********************
  44:lvgl/src/lv_widgets/lv_list.h ****  *      TYPEDEFS
  45:lvgl/src/lv_widgets/lv_list.h ****  **********************/
  46:lvgl/src/lv_widgets/lv_list.h **** /*Data of list*/
  47:lvgl/src/lv_widgets/lv_list.h **** typedef struct {
  48:lvgl/src/lv_widgets/lv_list.h ****     lv_page_ext_t page; /*Ext. of ancestor*/
  49:lvgl/src/lv_widgets/lv_list.h ****     /*New data for this type */
  50:lvgl/src/lv_widgets/lv_list.h **** 
  51:lvgl/src/lv_widgets/lv_list.h **** #if LV_USE_GROUP
  52:lvgl/src/lv_widgets/lv_list.h ****     lv_obj_t * last_sel_btn;     /* The last selected button. It will be reverted when the list is 
  53:lvgl/src/lv_widgets/lv_list.h **** #endif
  54:lvgl/src/lv_widgets/lv_list.h ****     lv_obj_t * act_sel_btn; /* The button is currently being selected*/
  55:lvgl/src/lv_widgets/lv_list.h **** } lv_list_ext_t;
ARM GAS  D:\Temp\cc6WWuOg.s 			page 108


  56:lvgl/src/lv_widgets/lv_list.h **** 
  57:lvgl/src/lv_widgets/lv_list.h **** /** List styles. */
  58:lvgl/src/lv_widgets/lv_list.h **** enum {
  59:lvgl/src/lv_widgets/lv_list.h ****     LV_LIST_PART_BG = LV_PAGE_PART_BG, /**< List background style */
  60:lvgl/src/lv_widgets/lv_list.h ****     LV_LIST_PART_SCROLLBAR = LV_PAGE_PART_SCROLLBAR, /**< List scrollbar style. */
  61:lvgl/src/lv_widgets/lv_list.h ****     LV_LIST_PART_EDGE_FLASH = LV_PAGE_PART_EDGE_FLASH, /**< List edge flash style. */
  62:lvgl/src/lv_widgets/lv_list.h ****     _LV_LIST_PART_VIRTUAL_LAST = _LV_PAGE_PART_VIRTUAL_LAST,
  63:lvgl/src/lv_widgets/lv_list.h ****     LV_LIST_PART_SCROLLABLE = LV_PAGE_PART_SCROLLABLE, /**< List scrollable area style. */
  64:lvgl/src/lv_widgets/lv_list.h ****     _LV_LIST_PART_REAL_LAST = _LV_PAGE_PART_REAL_LAST,
  65:lvgl/src/lv_widgets/lv_list.h **** };
  66:lvgl/src/lv_widgets/lv_list.h **** typedef uint8_t lv_list_style_t;
  67:lvgl/src/lv_widgets/lv_list.h **** 
  68:lvgl/src/lv_widgets/lv_list.h **** /**********************
  69:lvgl/src/lv_widgets/lv_list.h ****  * GLOBAL PROTOTYPES
  70:lvgl/src/lv_widgets/lv_list.h ****  **********************/
  71:lvgl/src/lv_widgets/lv_list.h **** 
  72:lvgl/src/lv_widgets/lv_list.h **** /**
  73:lvgl/src/lv_widgets/lv_list.h ****  * Create a list objects
  74:lvgl/src/lv_widgets/lv_list.h ****  * @param par pointer to an object, it will be the parent of the new list
  75:lvgl/src/lv_widgets/lv_list.h ****  * @param copy pointer to a list object, if not NULL then the new object will be copied from it
  76:lvgl/src/lv_widgets/lv_list.h ****  * @return pointer to the created list
  77:lvgl/src/lv_widgets/lv_list.h ****  */
  78:lvgl/src/lv_widgets/lv_list.h **** lv_obj_t * lv_list_create(lv_obj_t * par, const lv_obj_t * copy);
  79:lvgl/src/lv_widgets/lv_list.h **** 
  80:lvgl/src/lv_widgets/lv_list.h **** /**
  81:lvgl/src/lv_widgets/lv_list.h ****  * Delete all children of the scrl object, without deleting scrl child.
  82:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to an object
  83:lvgl/src/lv_widgets/lv_list.h ****  */
  84:lvgl/src/lv_widgets/lv_list.h **** void lv_list_clean(lv_obj_t * list);
  85:lvgl/src/lv_widgets/lv_list.h **** 
  86:lvgl/src/lv_widgets/lv_list.h **** /*======================
  87:lvgl/src/lv_widgets/lv_list.h ****  * Add/remove functions
  88:lvgl/src/lv_widgets/lv_list.h ****  *=====================*/
  89:lvgl/src/lv_widgets/lv_list.h **** 
  90:lvgl/src/lv_widgets/lv_list.h **** /**
  91:lvgl/src/lv_widgets/lv_list.h ****  * Add a list element to the list
  92:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to list object
  93:lvgl/src/lv_widgets/lv_list.h ****  * @param img_fn file name of an image before the text (NULL if unused)
  94:lvgl/src/lv_widgets/lv_list.h ****  * @param txt text of the list element (NULL if unused)
  95:lvgl/src/lv_widgets/lv_list.h ****  * @return pointer to the new list element which can be customized (a button)
  96:lvgl/src/lv_widgets/lv_list.h ****  */
  97:lvgl/src/lv_widgets/lv_list.h **** lv_obj_t * lv_list_add_btn(lv_obj_t * list, const void * img_src, const char * txt);
  98:lvgl/src/lv_widgets/lv_list.h **** 
  99:lvgl/src/lv_widgets/lv_list.h **** /**
 100:lvgl/src/lv_widgets/lv_list.h ****  * Remove the index of the button in the list
 101:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 102:lvgl/src/lv_widgets/lv_list.h ****  * @param index pointer to a the button's index in the list, index must be 0 <= index <
 103:lvgl/src/lv_widgets/lv_list.h ****  * lv_list_ext_t.size
 104:lvgl/src/lv_widgets/lv_list.h ****  * @return true: successfully deleted
 105:lvgl/src/lv_widgets/lv_list.h ****  */
 106:lvgl/src/lv_widgets/lv_list.h **** bool lv_list_remove(const lv_obj_t * list, uint16_t index);
 107:lvgl/src/lv_widgets/lv_list.h **** 
 108:lvgl/src/lv_widgets/lv_list.h **** /*=====================
 109:lvgl/src/lv_widgets/lv_list.h ****  * Setter functions
 110:lvgl/src/lv_widgets/lv_list.h ****  *====================*/
 111:lvgl/src/lv_widgets/lv_list.h **** 
 112:lvgl/src/lv_widgets/lv_list.h **** /**
ARM GAS  D:\Temp\cc6WWuOg.s 			page 109


 113:lvgl/src/lv_widgets/lv_list.h ****  * Make a button selected
 114:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 115:lvgl/src/lv_widgets/lv_list.h ****  * @param btn pointer to a button to select
 116:lvgl/src/lv_widgets/lv_list.h ****  *            NULL to not select any buttons
 117:lvgl/src/lv_widgets/lv_list.h ****  */
 118:lvgl/src/lv_widgets/lv_list.h **** void lv_list_focus_btn(lv_obj_t * list, lv_obj_t * btn);
 119:lvgl/src/lv_widgets/lv_list.h **** 
 120:lvgl/src/lv_widgets/lv_list.h **** /**
 121:lvgl/src/lv_widgets/lv_list.h ****  * Set the scroll bar mode of a list
 122:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 123:lvgl/src/lv_widgets/lv_list.h ****  * @param sb_mode the new mode from 'lv_page_sb_mode_t' enum
 124:lvgl/src/lv_widgets/lv_list.h ****  */
 125:lvgl/src/lv_widgets/lv_list.h **** static inline void lv_list_set_scrollbar_mode(lv_obj_t * list, lv_scrollbar_mode_t mode)
 3286              		.loc 8 125 20 view .LVU949
 3287              	.LBB174:
 126:lvgl/src/lv_widgets/lv_list.h **** {
 127:lvgl/src/lv_widgets/lv_list.h ****     lv_page_set_scrollbar_mode(list, mode);
 3288              		.loc 8 127 5 view .LVU950
 3289 00a8 0221     		movs	r1, #2
 3290 00aa 2046     		mov	r0, r4
 3291 00ac FFF7FEFF 		bl	lv_page_set_scrollbar_mode
 3292              	.LVL410:
 3293              		.loc 8 127 5 is_stmt 0 view .LVU951
 3294              	.LBE174:
 3295              	.LBE173:
 101:lvgl/src/lv_widgets/lv_list.c **** 
 3296              		.loc 1 101 9 is_stmt 1 view .LVU952
 3297 00b0 1521     		movs	r1, #21
 3298 00b2 2046     		mov	r0, r4
 3299 00b4 FFF7FEFF 		bl	lv_theme_apply
 3300              	.LVL411:
 3301 00b8 1CE0     		b	.L242
 3302              	.LVL412:
 3303              	.L254:
 3304              	.LBB175:
 3305              	.LBB165:
 107:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_IMG
 3306              		.loc 1 107 26 is_stmt 0 view .LVU953
 3307 00ba 0027     		movs	r7, #0
 3308              	.LVL413:
 3309              	.L252:
 112:lvgl/src/lv_widgets/lv_list.c ****             copy_btn = lv_list_get_next_btn(copy, copy_btn);
 3310              		.loc 1 112 13 is_stmt 1 view .LVU954
 3311 00bc 2846     		mov	r0, r5
 3312 00be FFF7FEFF 		bl	lv_list_get_btn_text
 3313              	.LVL414:
 3314 00c2 0246     		mov	r2, r0
 3315 00c4 3946     		mov	r1, r7
 3316 00c6 2046     		mov	r0, r4
 3317 00c8 FFF7FEFF 		bl	lv_list_add_btn
 3318              	.LVL415:
 113:lvgl/src/lv_widgets/lv_list.c ****         }
 3319              		.loc 1 113 13 view .LVU955
 113:lvgl/src/lv_widgets/lv_list.c ****         }
 3320              		.loc 1 113 24 is_stmt 0 view .LVU956
 3321 00cc 2946     		mov	r1, r5
 3322 00ce 3046     		mov	r0, r6
ARM GAS  D:\Temp\cc6WWuOg.s 			page 110


 3323 00d0 FFF7FEFF 		bl	lv_list_get_next_btn
 3324              	.LVL416:
 3325 00d4 0546     		mov	r5, r0
 3326              	.LVL417:
 3327              	.L251:
 113:lvgl/src/lv_widgets/lv_list.c ****         }
 3328              		.loc 1 113 24 view .LVU957
 3329              	.LBE165:
 106:lvgl/src/lv_widgets/lv_list.c ****             const void * img_src = NULL;
 3330              		.loc 1 106 14 view .LVU958
 3331 00d6 45B1     		cbz	r5, .L261
 3332              	.LBB166:
 107:lvgl/src/lv_widgets/lv_list.c **** #if LV_USE_IMG
 3333              		.loc 1 107 13 is_stmt 1 view .LVU959
 3334              	.LVL418:
 109:lvgl/src/lv_widgets/lv_list.c ****             if(copy_img) img_src = lv_img_get_src(copy_img);
 3335              		.loc 1 109 13 view .LVU960
 109:lvgl/src/lv_widgets/lv_list.c ****             if(copy_img) img_src = lv_img_get_src(copy_img);
 3336              		.loc 1 109 35 is_stmt 0 view .LVU961
 3337 00d8 2846     		mov	r0, r5
 109:lvgl/src/lv_widgets/lv_list.c ****             if(copy_img) img_src = lv_img_get_src(copy_img);
 3338              		.loc 1 109 35 view .LVU962
 3339 00da FFF7FEFF 		bl	lv_list_get_btn_img
 3340              	.LVL419:
 110:lvgl/src/lv_widgets/lv_list.c **** #endif
 3341              		.loc 1 110 13 is_stmt 1 view .LVU963
 110:lvgl/src/lv_widgets/lv_list.c **** #endif
 3342              		.loc 1 110 15 is_stmt 0 view .LVU964
 3343 00de 0028     		cmp	r0, #0
 3344 00e0 EBD0     		beq	.L254
 110:lvgl/src/lv_widgets/lv_list.c **** #endif
 3345              		.loc 1 110 26 is_stmt 1 discriminator 1 view .LVU965
 110:lvgl/src/lv_widgets/lv_list.c **** #endif
 3346              		.loc 1 110 36 is_stmt 0 discriminator 1 view .LVU966
 3347 00e2 FFF7FEFF 		bl	lv_img_get_src
 3348              	.LVL420:
 110:lvgl/src/lv_widgets/lv_list.c **** #endif
 3349              		.loc 1 110 36 discriminator 1 view .LVU967
 3350 00e6 0746     		mov	r7, r0
 3351              	.LVL421:
 110:lvgl/src/lv_widgets/lv_list.c **** #endif
 3352              		.loc 1 110 36 discriminator 1 view .LVU968
 3353 00e8 E8E7     		b	.L252
 3354              	.LVL422:
 3355              	.L261:
 110:lvgl/src/lv_widgets/lv_list.c **** #endif
 3356              		.loc 1 110 36 discriminator 1 view .LVU969
 3357              	.LBE166:
 117:lvgl/src/lv_widgets/lv_list.c ****     }
 3358              		.loc 1 117 9 is_stmt 1 view .LVU970
 3359 00ea FF22     		movs	r2, #255
 3360 00ec 1146     		mov	r1, r2
 3361 00ee 2046     		mov	r0, r4
 3362              	.LVL423:
 117:lvgl/src/lv_widgets/lv_list.c ****     }
 3363              		.loc 1 117 9 is_stmt 0 view .LVU971
 3364 00f0 FFF7FEFF 		bl	lv_obj_refresh_style
ARM GAS  D:\Temp\cc6WWuOg.s 			page 111


 3365              	.LVL424:
 3366              	.L242:
 117:lvgl/src/lv_widgets/lv_list.c ****     }
 3367              		.loc 1 117 9 view .LVU972
 3368              	.LBE175:
 123:lvgl/src/lv_widgets/lv_list.c **** 
 3369              		.loc 1 123 1 view .LVU973
 3370 00f4 2046     		mov	r0, r4
 3371 00f6 03B0     		add	sp, sp, #12
 3372              	.LCFI33:
 3373              		.cfi_def_cfa_offset 20
 3374              		@ sp needed
 3375 00f8 F0BD     		pop	{r4, r5, r6, r7, pc}
 3376              	.LVL425:
 3377              	.L263:
 123:lvgl/src/lv_widgets/lv_list.c **** 
 3378              		.loc 1 123 1 view .LVU974
 3379 00fa 00BF     		.align	2
 3380              	.L262:
 3381 00fc 00000000 		.word	.LANCHOR0
 3382 0100 00000000 		.word	lv_list_signal
 3383 0104 00000000 		.word	.LC6
 3384              		.cfi_endproc
 3385              	.LFE490:
 3387              		.section	.text.lv_list_set_layout,"ax",%progbits
 3388              		.align	1
 3389              		.global	lv_list_set_layout
 3390              		.syntax unified
 3391              		.thumb
 3392              		.thumb_func
 3393              		.fpu fpv4-sp-d16
 3395              	lv_list_set_layout:
 3396              	.LVL426:
 3397              	.LFB495:
 312:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 3398              		.loc 1 312 1 is_stmt 1 view -0
 3399              		.cfi_startproc
 3400              		@ args = 0, pretend = 0, frame = 0
 3401              		@ frame_needed = 0, uses_anonymous_args = 0
 312:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 3402              		.loc 1 312 1 is_stmt 0 view .LVU976
 3403 0000 70B5     		push	{r4, r5, r6, lr}
 3404              	.LCFI34:
 3405              		.cfi_def_cfa_offset 16
 3406              		.cfi_offset 4, -16
 3407              		.cfi_offset 5, -12
 3408              		.cfi_offset 6, -8
 3409              		.cfi_offset 14, -4
 3410 0002 82B0     		sub	sp, sp, #8
 3411              	.LCFI35:
 3412              		.cfi_def_cfa_offset 24
 3413 0004 0446     		mov	r4, r0
 3414 0006 0D46     		mov	r5, r1
 313:lvgl/src/lv_widgets/lv_list.c **** 
 3415              		.loc 1 313 5 is_stmt 1 view .LVU977
 313:lvgl/src/lv_widgets/lv_list.c **** 
 3416              		.loc 1 313 5 view .LVU978
ARM GAS  D:\Temp\cc6WWuOg.s 			page 112


 3417 0008 FFF7FEFF 		bl	lv_debug_check_null
 3418              	.LVL427:
 313:lvgl/src/lv_widgets/lv_list.c **** 
 3419              		.loc 1 313 5 is_stmt 0 view .LVU979
 3420 000c 28B9     		cbnz	r0, .L265
 313:lvgl/src/lv_widgets/lv_list.c **** 
 3421              		.loc 1 313 5 is_stmt 1 discriminator 1 view .LVU980
 313:lvgl/src/lv_widgets/lv_list.c **** 
 3422              		.loc 1 313 5 discriminator 1 view .LVU981
 3423 000e 2246     		mov	r2, r4
 3424 0010 0023     		movs	r3, #0
 3425 0012 2C48     		ldr	r0, .L279
 3426 0014 FFF7FEFF 		bl	lv_debug_log_error
 3427              	.LVL428:
 3428              	.L266:
 313:lvgl/src/lv_widgets/lv_list.c **** 
 3429              		.loc 1 313 5 discriminator 1 view .LVU982
 313:lvgl/src/lv_widgets/lv_list.c **** 
 3430              		.loc 1 313 5 discriminator 1 view .LVU983
 3431 0018 FEE7     		b	.L266
 3432              	.L265:
 313:lvgl/src/lv_widgets/lv_list.c **** 
 3433              		.loc 1 313 38 discriminator 2 view .LVU984
 316:lvgl/src/lv_widgets/lv_list.c **** 
 3434              		.loc 1 316 5 discriminator 2 view .LVU985
 316:lvgl/src/lv_widgets/lv_list.c **** 
 3435              		.loc 1 316 18 is_stmt 0 discriminator 2 view .LVU986
 3436 001a 2046     		mov	r0, r4
 3437 001c FFF7FEFF 		bl	lv_list_get_layout
 3438              	.LVL429:
 316:lvgl/src/lv_widgets/lv_list.c **** 
 3439              		.loc 1 316 7 discriminator 2 view .LVU987
 3440 0020 A842     		cmp	r0, r5
 3441 0022 30D0     		beq	.L264
 319:lvgl/src/lv_widgets/lv_list.c **** 
 3442              		.loc 1 319 5 is_stmt 1 view .LVU988
 319:lvgl/src/lv_widgets/lv_list.c **** 
 3443              		.loc 1 319 22 is_stmt 0 view .LVU989
 3444 0024 0021     		movs	r1, #0
 3445 0026 2046     		mov	r0, r4
 3446 0028 FFF7FEFF 		bl	lv_list_get_prev_btn
 3447              	.LVL430:
 3448 002c 0646     		mov	r6, r0
 3449              	.LVL431:
 322:lvgl/src/lv_widgets/lv_list.c ****         /*If a column layout set the buttons' width to list width*/
 3450              		.loc 1 322 5 is_stmt 1 view .LVU990
 322:lvgl/src/lv_widgets/lv_list.c ****         /*If a column layout set the buttons' width to list width*/
 3451              		.loc 1 322 10 is_stmt 0 view .LVU991
 3452 002e 0BE0     		b	.L268
 3453              	.L276:
 325:lvgl/src/lv_widgets/lv_list.c ****         }
 3454              		.loc 1 325 13 is_stmt 1 view .LVU992
 3455              	.LVL432:
 3456              	.LBB194:
 3457              	.LBI194:
 133:lvgl/src/lv_widgets/lv_btn.h **** {
 3458              		.loc 6 133 20 view .LVU993
ARM GAS  D:\Temp\cc6WWuOg.s 			page 113


 3459              	.LBE194:
 3460              		.loc 6 135 5 view .LVU994
 3461              	.LBB197:
 3462              	.LBB195:
 3463              	.LBI195:
 157:lvgl/src/lv_widgets/lv_cont.h **** {
 3464              		.loc 7 157 20 view .LVU995
 3465              	.LBB196:
 3466              		.loc 7 159 5 view .LVU996
 3467 0030 0123     		movs	r3, #1
 3468 0032 0093     		str	r3, [sp]
 3469 0034 0222     		movs	r2, #2
 3470 0036 1146     		mov	r1, r2
 3471 0038 3046     		mov	r0, r6
 3472              	.LVL433:
 3473              		.loc 7 159 5 is_stmt 0 view .LVU997
 3474 003a FFF7FEFF 		bl	lv_cont_set_fit4
 3475              	.LVL434:
 3476              	.L270:
 3477              		.loc 7 159 5 view .LVU998
 3478              	.LBE196:
 3479              	.LBE195:
 3480              	.LBE197:
 332:lvgl/src/lv_widgets/lv_list.c ****     }
 3481              		.loc 1 332 9 is_stmt 1 view .LVU999
 332:lvgl/src/lv_widgets/lv_list.c ****     }
 3482              		.loc 1 332 15 is_stmt 0 view .LVU1000
 3483 003e 3146     		mov	r1, r6
 3484 0040 2046     		mov	r0, r4
 3485 0042 FFF7FEFF 		bl	lv_list_get_prev_btn
 3486              	.LVL435:
 3487 0046 0646     		mov	r6, r0
 3488              	.LVL436:
 3489              	.L268:
 322:lvgl/src/lv_widgets/lv_list.c ****         /*If a column layout set the buttons' width to list width*/
 3490              		.loc 1 322 10 view .LVU1001
 3491 0048 7EB1     		cbz	r6, .L275
 324:lvgl/src/lv_widgets/lv_list.c ****             lv_btn_set_fit2(btn, LV_FIT_PARENT, LV_FIT_TIGHT);
 3492              		.loc 1 324 9 is_stmt 1 view .LVU1002
 324:lvgl/src/lv_widgets/lv_list.c ****             lv_btn_set_fit2(btn, LV_FIT_PARENT, LV_FIT_TIGHT);
 3493              		.loc 1 324 78 is_stmt 0 view .LVU1003
 3494 004a AB1E     		subs	r3, r5, #2
 3495 004c DBB2     		uxtb	r3, r3
 324:lvgl/src/lv_widgets/lv_list.c ****             lv_btn_set_fit2(btn, LV_FIT_PARENT, LV_FIT_TIGHT);
 3496              		.loc 1 324 11 view .LVU1004
 3497 004e 022B     		cmp	r3, #2
 3498 0050 EED9     		bls	.L276
 328:lvgl/src/lv_widgets/lv_list.c ****             lv_btn_set_fit(btn, LV_FIT_TIGHT);
 3499              		.loc 1 328 14 is_stmt 1 view .LVU1005
 328:lvgl/src/lv_widgets/lv_list.c ****             lv_btn_set_fit(btn, LV_FIT_TIGHT);
 3500              		.loc 1 328 76 is_stmt 0 view .LVU1006
 3501 0052 6B1F     		subs	r3, r5, #5
 3502 0054 DBB2     		uxtb	r3, r3
 328:lvgl/src/lv_widgets/lv_list.c ****             lv_btn_set_fit(btn, LV_FIT_TIGHT);
 3503              		.loc 1 328 16 view .LVU1007
 3504 0056 022B     		cmp	r3, #2
 3505 0058 F1D8     		bhi	.L270
ARM GAS  D:\Temp\cc6WWuOg.s 			page 114


 329:lvgl/src/lv_widgets/lv_list.c ****         }
 3506              		.loc 1 329 13 is_stmt 1 view .LVU1008
 3507              	.LVL437:
 3508              	.LBB198:
 3509              	.LBI198:
 136:lvgl/src/lv_widgets/lv_btn.h **** }
 137:lvgl/src/lv_widgets/lv_btn.h **** 
 138:lvgl/src/lv_widgets/lv_btn.h **** /**
 139:lvgl/src/lv_widgets/lv_btn.h ****  * Set the fit policy in all 4 direction at once.
 140:lvgl/src/lv_widgets/lv_btn.h ****  * It tells how to change the button size automatically.
 141:lvgl/src/lv_widgets/lv_btn.h ****  * @param btn pointer to a button object
 142:lvgl/src/lv_widgets/lv_btn.h ****  * @param fit fit policy from `lv_fit_t`
 143:lvgl/src/lv_widgets/lv_btn.h ****  */
 144:lvgl/src/lv_widgets/lv_btn.h **** static inline void lv_btn_set_fit(lv_obj_t * btn, lv_fit_t fit)
 3510              		.loc 6 144 20 view .LVU1009
 3511              	.LBE198:
 145:lvgl/src/lv_widgets/lv_btn.h **** {
 146:lvgl/src/lv_widgets/lv_btn.h ****     lv_cont_set_fit(btn, fit);
 3512              		.loc 6 146 5 view .LVU1010
 3513              	.LBB201:
 3514              	.LBB199:
 3515              	.LBI199:
 160:lvgl/src/lv_widgets/lv_cont.h **** }
 161:lvgl/src/lv_widgets/lv_cont.h **** 
 162:lvgl/src/lv_widgets/lv_cont.h **** /**
 163:lvgl/src/lv_widgets/lv_cont.h ****  * Set the fit policy in all 4 direction at once.
 164:lvgl/src/lv_widgets/lv_cont.h ****  * It tells how to change the container's size automatically.
 165:lvgl/src/lv_widgets/lv_cont.h ****  * @param cont pointer to a container object
 166:lvgl/src/lv_widgets/lv_cont.h ****  * @param fit fit policy from `lv_fit_t`
 167:lvgl/src/lv_widgets/lv_cont.h ****  */
 168:lvgl/src/lv_widgets/lv_cont.h **** static inline void lv_cont_set_fit(lv_obj_t * cont, lv_fit_t fit)
 3516              		.loc 7 168 20 view .LVU1011
 3517              	.LBB200:
 169:lvgl/src/lv_widgets/lv_cont.h **** {
 170:lvgl/src/lv_widgets/lv_cont.h ****     lv_cont_set_fit4(cont, fit, fit, fit, fit);
 3518              		.loc 7 170 5 view .LVU1012
 3519 005a 0121     		movs	r1, #1
 3520 005c 0091     		str	r1, [sp]
 3521 005e 0B46     		mov	r3, r1
 3522 0060 0A46     		mov	r2, r1
 3523 0062 3046     		mov	r0, r6
 3524              		.loc 7 170 5 is_stmt 0 view .LVU1013
 3525 0064 FFF7FEFF 		bl	lv_cont_set_fit4
 3526              	.LVL438:
 3527              		.loc 7 170 5 view .LVU1014
 3528 0068 E9E7     		b	.L270
 3529              	.LVL439:
 3530              	.L275:
 3531              		.loc 7 170 5 view .LVU1015
 3532              	.LBE200:
 3533              	.LBE199:
 3534              	.LBE201:
 335:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrollable_fit2(list, LV_FIT_PARENT, LV_FIT_TIGHT);
 3535              		.loc 1 335 5 is_stmt 1 view .LVU1016
 335:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrollable_fit2(list, LV_FIT_PARENT, LV_FIT_TIGHT);
 3536              		.loc 1 335 74 is_stmt 0 view .LVU1017
 3537 006a AB1E     		subs	r3, r5, #2
ARM GAS  D:\Temp\cc6WWuOg.s 			page 115


 3538 006c DBB2     		uxtb	r3, r3
 335:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrollable_fit2(list, LV_FIT_PARENT, LV_FIT_TIGHT);
 3539              		.loc 1 335 7 view .LVU1018
 3540 006e 022B     		cmp	r3, #2
 3541 0070 0BD9     		bls	.L277
 338:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrollable_fit2(list, LV_FIT_TIGHT, LV_FIT_TIGHT);
 3542              		.loc 1 338 10 is_stmt 1 view .LVU1019
 338:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrollable_fit2(list, LV_FIT_TIGHT, LV_FIT_TIGHT);
 3543              		.loc 1 338 72 is_stmt 0 view .LVU1020
 3544 0072 6B1F     		subs	r3, r5, #5
 3545 0074 DBB2     		uxtb	r3, r3
 338:lvgl/src/lv_widgets/lv_list.c ****         lv_page_set_scrollable_fit2(list, LV_FIT_TIGHT, LV_FIT_TIGHT);
 3546              		.loc 1 338 12 view .LVU1021
 3547 0076 022B     		cmp	r3, #2
 3548 0078 11D9     		bls	.L278
 3549              	.LVL440:
 3550              	.L273:
 343:lvgl/src/lv_widgets/lv_list.c **** }
 3551              		.loc 1 343 5 is_stmt 1 view .LVU1022
 3552              	.LBB202:
 3553              	.LBI202:
 227:lvgl/src/lv_widgets/lv_page.h **** {
 3554              		.loc 5 227 20 view .LVU1023
 3555              	.LBB203:
 229:lvgl/src/lv_widgets/lv_page.h **** }
 3556              		.loc 5 229 5 view .LVU1024
 3557 007a 2046     		mov	r0, r4
 3558 007c FFF7FEFF 		bl	lv_page_get_scrollable
 3559              	.LVL441:
 3560 0080 2946     		mov	r1, r5
 3561 0082 FFF7FEFF 		bl	lv_cont_set_layout
 3562              	.LVL442:
 3563              	.L264:
 229:lvgl/src/lv_widgets/lv_page.h **** }
 3564              		.loc 5 229 5 is_stmt 0 view .LVU1025
 3565              	.LBE203:
 3566              	.LBE202:
 344:lvgl/src/lv_widgets/lv_list.c **** 
 3567              		.loc 1 344 1 view .LVU1026
 3568 0086 02B0     		add	sp, sp, #8
 3569              	.LCFI36:
 3570              		.cfi_remember_state
 3571              		.cfi_def_cfa_offset 16
 3572              		@ sp needed
 3573 0088 70BD     		pop	{r4, r5, r6, pc}
 3574              	.LVL443:
 3575              	.L277:
 3576              	.LCFI37:
 3577              		.cfi_restore_state
 336:lvgl/src/lv_widgets/lv_list.c ****     }
 3578              		.loc 1 336 9 is_stmt 1 view .LVU1027
 3579              	.LBB204:
 3580              	.LBI204:
 186:lvgl/src/lv_widgets/lv_page.h **** {
 3581              		.loc 5 186 20 view .LVU1028
 3582              	.LBB205:
 188:lvgl/src/lv_widgets/lv_page.h **** }
ARM GAS  D:\Temp\cc6WWuOg.s 			page 116


 3583              		.loc 5 188 5 view .LVU1029
 3584 008a 2046     		mov	r0, r4
 3585              	.LVL444:
 188:lvgl/src/lv_widgets/lv_page.h **** }
 3586              		.loc 5 188 5 is_stmt 0 view .LVU1030
 3587 008c FFF7FEFF 		bl	lv_page_get_scrollable
 3588              	.LVL445:
 3589              	.LBB206:
 3590              	.LBI206:
 157:lvgl/src/lv_widgets/lv_cont.h **** {
 3591              		.loc 7 157 20 is_stmt 1 view .LVU1031
 3592              	.LBB207:
 159:lvgl/src/lv_widgets/lv_cont.h **** }
 3593              		.loc 7 159 5 view .LVU1032
 3594 0090 0123     		movs	r3, #1
 3595 0092 0093     		str	r3, [sp]
 3596 0094 0222     		movs	r2, #2
 3597 0096 1146     		mov	r1, r2
 3598 0098 FFF7FEFF 		bl	lv_cont_set_fit4
 3599              	.LVL446:
 159:lvgl/src/lv_widgets/lv_cont.h **** }
 3600              		.loc 7 159 5 is_stmt 0 view .LVU1033
 3601 009c EDE7     		b	.L273
 3602              	.LVL447:
 3603              	.L278:
 159:lvgl/src/lv_widgets/lv_cont.h **** }
 3604              		.loc 7 159 5 view .LVU1034
 3605              	.LBE207:
 3606              	.LBE206:
 3607              	.LBE205:
 3608              	.LBE204:
 339:lvgl/src/lv_widgets/lv_list.c ****         lv_cont_set_fit2(list, LV_FIT_NONE, LV_FIT_TIGHT);
 3609              		.loc 1 339 9 is_stmt 1 view .LVU1035
 3610              	.LBB208:
 3611              	.LBI208:
 186:lvgl/src/lv_widgets/lv_page.h **** {
 3612              		.loc 5 186 20 view .LVU1036
 3613              	.LBB209:
 188:lvgl/src/lv_widgets/lv_page.h **** }
 3614              		.loc 5 188 5 view .LVU1037
 3615 009e 2046     		mov	r0, r4
 3616              	.LVL448:
 188:lvgl/src/lv_widgets/lv_page.h **** }
 3617              		.loc 5 188 5 is_stmt 0 view .LVU1038
 3618 00a0 FFF7FEFF 		bl	lv_page_get_scrollable
 3619              	.LVL449:
 3620              	.LBB210:
 3621              	.LBI210:
 157:lvgl/src/lv_widgets/lv_cont.h **** {
 3622              		.loc 7 157 20 is_stmt 1 view .LVU1039
 3623              	.LBB211:
 159:lvgl/src/lv_widgets/lv_cont.h **** }
 3624              		.loc 7 159 5 view .LVU1040
 3625 00a4 0126     		movs	r6, #1
 3626              	.LVL450:
 159:lvgl/src/lv_widgets/lv_cont.h **** }
 3627              		.loc 7 159 5 is_stmt 0 view .LVU1041
ARM GAS  D:\Temp\cc6WWuOg.s 			page 117


 3628 00a6 0096     		str	r6, [sp]
 3629 00a8 3346     		mov	r3, r6
 3630 00aa 3246     		mov	r2, r6
 3631 00ac 3146     		mov	r1, r6
 3632 00ae FFF7FEFF 		bl	lv_cont_set_fit4
 3633              	.LVL451:
 159:lvgl/src/lv_widgets/lv_cont.h **** }
 3634              		.loc 7 159 5 view .LVU1042
 3635              	.LBE211:
 3636              	.LBE210:
 3637              	.LBE209:
 3638              	.LBE208:
 340:lvgl/src/lv_widgets/lv_list.c ****     }
 3639              		.loc 1 340 9 is_stmt 1 view .LVU1043
 3640              	.LBB212:
 3641              	.LBI212:
 157:lvgl/src/lv_widgets/lv_cont.h **** {
 3642              		.loc 7 157 20 view .LVU1044
 3643              	.LBB213:
 159:lvgl/src/lv_widgets/lv_cont.h **** }
 3644              		.loc 7 159 5 view .LVU1045
 3645 00b2 0096     		str	r6, [sp]
 3646 00b4 3346     		mov	r3, r6
 3647 00b6 0022     		movs	r2, #0
 3648 00b8 1146     		mov	r1, r2
 3649 00ba 2046     		mov	r0, r4
 3650 00bc FFF7FEFF 		bl	lv_cont_set_fit4
 3651              	.LVL452:
 3652 00c0 DBE7     		b	.L273
 3653              	.L280:
 3654 00c2 00BF     		.align	2
 3655              	.L279:
 3656 00c4 00000000 		.word	.LC0
 3657              	.LBE213:
 3658              	.LBE212:
 3659              		.cfi_endproc
 3660              	.LFE495:
 3662              		.section	.text.lv_list_up,"ax",%progbits
 3663              		.align	1
 3664              		.global	lv_list_up
 3665              		.syntax unified
 3666              		.thumb
 3667              		.thumb_func
 3668              		.fpu fpv4-sp-d16
 3670              	lv_list_up:
 3671              	.LVL453:
 3672              	.LFB505:
 544:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 3673              		.loc 1 544 1 view -0
 3674              		.cfi_startproc
 3675              		@ args = 0, pretend = 0, frame = 72
 3676              		@ frame_needed = 0, uses_anonymous_args = 0
 544:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 3677              		.loc 1 544 1 is_stmt 0 view .LVU1047
 3678 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3679              	.LCFI38:
 3680              		.cfi_def_cfa_offset 24
ARM GAS  D:\Temp\cc6WWuOg.s 			page 118


 3681              		.cfi_offset 4, -24
 3682              		.cfi_offset 5, -20
 3683              		.cfi_offset 6, -16
 3684              		.cfi_offset 7, -12
 3685              		.cfi_offset 8, -8
 3686              		.cfi_offset 14, -4
 3687 0004 92B0     		sub	sp, sp, #72
 3688              	.LCFI39:
 3689              		.cfi_def_cfa_offset 96
 3690 0006 0446     		mov	r4, r0
 545:lvgl/src/lv_widgets/lv_list.c **** 
 3691              		.loc 1 545 5 is_stmt 1 view .LVU1048
 545:lvgl/src/lv_widgets/lv_list.c **** 
 3692              		.loc 1 545 5 view .LVU1049
 3693 0008 FFF7FEFF 		bl	lv_debug_check_null
 3694              	.LVL454:
 545:lvgl/src/lv_widgets/lv_list.c **** 
 3695              		.loc 1 545 5 is_stmt 0 view .LVU1050
 3696 000c 28B9     		cbnz	r0, .L282
 545:lvgl/src/lv_widgets/lv_list.c **** 
 3697              		.loc 1 545 5 is_stmt 1 discriminator 1 view .LVU1051
 545:lvgl/src/lv_widgets/lv_list.c **** 
 3698              		.loc 1 545 5 discriminator 1 view .LVU1052
 3699 000e 2246     		mov	r2, r4
 3700 0010 0023     		movs	r3, #0
 3701 0012 2648     		ldr	r0, .L291
 3702 0014 FFF7FEFF 		bl	lv_debug_log_error
 3703              	.LVL455:
 3704              	.L283:
 545:lvgl/src/lv_widgets/lv_list.c **** 
 3705              		.loc 1 545 5 discriminator 1 view .LVU1053
 545:lvgl/src/lv_widgets/lv_list.c **** 
 3706              		.loc 1 545 5 discriminator 1 view .LVU1054
 3707 0018 FEE7     		b	.L283
 3708              	.L282:
 545:lvgl/src/lv_widgets/lv_list.c **** 
 3709              		.loc 1 545 38 discriminator 2 view .LVU1055
 549:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e;
 3710              		.loc 1 549 5 discriminator 2 view .LVU1056
 549:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e;
 3711              		.loc 1 549 23 is_stmt 0 discriminator 2 view .LVU1057
 3712 001a 2046     		mov	r0, r4
 3713 001c FFF7FEFF 		bl	lv_page_get_scrollable
 3714              	.LVL456:
 3715 0020 0746     		mov	r7, r0
 3716              	.LVL457:
 550:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e_prev = NULL;
 3717              		.loc 1 550 5 is_stmt 1 discriminator 2 view .LVU1058
 551:lvgl/src/lv_widgets/lv_list.c **** 
 3718              		.loc 1 551 5 discriminator 2 view .LVU1059
 553:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 3719              		.loc 1 553 5 discriminator 2 view .LVU1060
 553:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 3720              		.loc 1 553 25 is_stmt 0 discriminator 2 view .LVU1061
 3721 0022 0021     		movs	r1, #0
 3722 0024 2046     		mov	r0, r4
 3723              	.LVL458:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 119


 553:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 3724              		.loc 1 553 25 discriminator 2 view .LVU1062
 3725 0026 FFF7FEFF 		bl	lv_list_get_prev_btn
 3726              	.LVL459:
 3727 002a 0546     		mov	r5, r0
 3728              	.LVL460:
 554:lvgl/src/lv_widgets/lv_list.c ****         if(e->coords.y2 <= list->coords.y2) {
 3729              		.loc 1 554 5 is_stmt 1 discriminator 2 view .LVU1063
 551:lvgl/src/lv_widgets/lv_list.c **** 
 3730              		.loc 1 551 16 is_stmt 0 discriminator 2 view .LVU1064
 3731 002c 4FF00008 		mov	r8, #0
 3732              	.LVL461:
 3733              	.L284:
 554:lvgl/src/lv_widgets/lv_list.c ****         if(e->coords.y2 <= list->coords.y2) {
 3734              		.loc 1 554 10 view .LVU1065
 3735 0030 3DB3     		cbz	r5, .L281
 555:lvgl/src/lv_widgets/lv_list.c ****             if(e_prev != NULL) {
 3736              		.loc 1 555 9 is_stmt 1 view .LVU1066
 555:lvgl/src/lv_widgets/lv_list.c ****             if(e_prev != NULL) {
 3737              		.loc 1 555 21 is_stmt 0 view .LVU1067
 3738 0032 B5F91620 		ldrsh	r2, [r5, #22]
 555:lvgl/src/lv_widgets/lv_list.c ****             if(e_prev != NULL) {
 3739              		.loc 1 555 40 view .LVU1068
 3740 0036 B4F91630 		ldrsh	r3, [r4, #22]
 555:lvgl/src/lv_widgets/lv_list.c ****             if(e_prev != NULL) {
 3741              		.loc 1 555 11 view .LVU1069
 3742 003a 9A42     		cmp	r2, r3
 3743 003c 06DD     		ble	.L290
 575:lvgl/src/lv_widgets/lv_list.c ****         e      = lv_list_get_prev_btn(list, e);
 3744              		.loc 1 575 9 is_stmt 1 view .LVU1070
 3745              	.LVL462:
 576:lvgl/src/lv_widgets/lv_list.c ****     }
 3746              		.loc 1 576 9 view .LVU1071
 576:lvgl/src/lv_widgets/lv_list.c ****     }
 3747              		.loc 1 576 18 is_stmt 0 view .LVU1072
 3748 003e 2946     		mov	r1, r5
 3749 0040 2046     		mov	r0, r4
 3750              	.LVL463:
 576:lvgl/src/lv_widgets/lv_list.c ****     }
 3751              		.loc 1 576 18 view .LVU1073
 3752 0042 FFF7FEFF 		bl	lv_list_get_prev_btn
 3753              	.LVL464:
 575:lvgl/src/lv_widgets/lv_list.c ****         e      = lv_list_get_prev_btn(list, e);
 3754              		.loc 1 575 16 view .LVU1074
 3755 0046 A846     		mov	r8, r5
 576:lvgl/src/lv_widgets/lv_list.c ****     }
 3756              		.loc 1 576 18 view .LVU1075
 3757 0048 0546     		mov	r5, r0
 3758              	.LVL465:
 576:lvgl/src/lv_widgets/lv_list.c ****     }
 3759              		.loc 1 576 18 view .LVU1076
 3760 004a F1E7     		b	.L284
 3761              	.L290:
 556:lvgl/src/lv_widgets/lv_list.c ****                 lv_coord_t new_y = lv_obj_get_height(list) - (lv_obj_get_y(e_prev) + lv_obj_get_hei
 3762              		.loc 1 556 13 is_stmt 1 view .LVU1077
 556:lvgl/src/lv_widgets/lv_list.c ****                 lv_coord_t new_y = lv_obj_get_height(list) - (lv_obj_get_y(e_prev) + lv_obj_get_hei
 3763              		.loc 1 556 15 is_stmt 0 view .LVU1078
ARM GAS  D:\Temp\cc6WWuOg.s 			page 120


 3764 004c B8F1000F 		cmp	r8, #0
 3765 0050 17D0     		beq	.L281
 3766              	.LBB214:
 557:lvgl/src/lv_widgets/lv_list.c ****                 if(lv_list_get_anim_time(list) == 0) {
 3767              		.loc 1 557 17 is_stmt 1 view .LVU1079
 557:lvgl/src/lv_widgets/lv_list.c ****                 if(lv_list_get_anim_time(list) == 0) {
 3768              		.loc 1 557 36 is_stmt 0 view .LVU1080
 3769 0052 2046     		mov	r0, r4
 3770              	.LVL466:
 557:lvgl/src/lv_widgets/lv_list.c ****                 if(lv_list_get_anim_time(list) == 0) {
 3771              		.loc 1 557 36 view .LVU1081
 3772 0054 FFF7FEFF 		bl	lv_obj_get_height
 3773              	.LVL467:
 3774 0058 85B2     		uxth	r5, r0
 3775              	.LVL468:
 557:lvgl/src/lv_widgets/lv_list.c ****                 if(lv_list_get_anim_time(list) == 0) {
 3776              		.loc 1 557 63 view .LVU1082
 3777 005a 4046     		mov	r0, r8
 3778 005c FFF7FEFF 		bl	lv_obj_get_y
 3779              	.LVL469:
 3780 0060 86B2     		uxth	r6, r0
 557:lvgl/src/lv_widgets/lv_list.c ****                 if(lv_list_get_anim_time(list) == 0) {
 3781              		.loc 1 557 86 view .LVU1083
 3782 0062 4046     		mov	r0, r8
 3783 0064 FFF7FEFF 		bl	lv_obj_get_height
 3784              	.LVL470:
 557:lvgl/src/lv_widgets/lv_list.c ****                 if(lv_list_get_anim_time(list) == 0) {
 3785              		.loc 1 557 84 view .LVU1084
 3786 0068 16FA80F3 		uxtah	r3, r6, r0
 3787 006c 9BB2     		uxth	r3, r3
 557:lvgl/src/lv_widgets/lv_list.c ****                 if(lv_list_get_anim_time(list) == 0) {
 3788              		.loc 1 557 60 view .LVU1085
 3789 006e ED1A     		subs	r5, r5, r3
 557:lvgl/src/lv_widgets/lv_list.c ****                 if(lv_list_get_anim_time(list) == 0) {
 3790              		.loc 1 557 28 view .LVU1086
 3791 0070 2DB2     		sxth	r5, r5
 3792              	.LVL471:
 558:lvgl/src/lv_widgets/lv_list.c ****                     lv_obj_set_y(scrl, new_y);
 3793              		.loc 1 558 17 is_stmt 1 view .LVU1087
 3794              	.LBB215:
 3795              	.LBI215:
 128:lvgl/src/lv_widgets/lv_list.h **** }
 129:lvgl/src/lv_widgets/lv_list.h **** 
 130:lvgl/src/lv_widgets/lv_list.h **** /**
 131:lvgl/src/lv_widgets/lv_list.h ****  * Enable the scroll propagation feature. If enabled then the List will move its parent if there is
 132:lvgl/src/lv_widgets/lv_list.h ****  * no more space to scroll.
 133:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a List
 134:lvgl/src/lv_widgets/lv_list.h ****  * @param en true or false to enable/disable scroll propagation
 135:lvgl/src/lv_widgets/lv_list.h ****  */
 136:lvgl/src/lv_widgets/lv_list.h **** static inline void lv_list_set_scroll_propagation(lv_obj_t * list, bool en)
 137:lvgl/src/lv_widgets/lv_list.h **** {
 138:lvgl/src/lv_widgets/lv_list.h ****     lv_page_set_scroll_propagation(list, en);
 139:lvgl/src/lv_widgets/lv_list.h **** }
 140:lvgl/src/lv_widgets/lv_list.h **** 
 141:lvgl/src/lv_widgets/lv_list.h **** /**
 142:lvgl/src/lv_widgets/lv_list.h ****  * Enable the edge flash effect. (Show an arc when the an edge is reached)
 143:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a List
ARM GAS  D:\Temp\cc6WWuOg.s 			page 121


 144:lvgl/src/lv_widgets/lv_list.h ****  * @param en true or false to enable/disable end flash
 145:lvgl/src/lv_widgets/lv_list.h ****  */
 146:lvgl/src/lv_widgets/lv_list.h **** static inline void lv_list_set_edge_flash(lv_obj_t * list, bool en)
 147:lvgl/src/lv_widgets/lv_list.h **** {
 148:lvgl/src/lv_widgets/lv_list.h ****     lv_page_set_edge_flash(list, en);
 149:lvgl/src/lv_widgets/lv_list.h **** }
 150:lvgl/src/lv_widgets/lv_list.h **** 
 151:lvgl/src/lv_widgets/lv_list.h **** /**
 152:lvgl/src/lv_widgets/lv_list.h ****  * Set scroll animation duration on 'list_up()' 'list_down()' 'list_focus()'
 153:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 154:lvgl/src/lv_widgets/lv_list.h ****  * @param anim_time duration of animation [ms]
 155:lvgl/src/lv_widgets/lv_list.h ****  */
 156:lvgl/src/lv_widgets/lv_list.h **** static inline void lv_list_set_anim_time(lv_obj_t * list, uint16_t anim_time)
 157:lvgl/src/lv_widgets/lv_list.h **** {
 158:lvgl/src/lv_widgets/lv_list.h ****     lv_page_set_anim_time(list, anim_time);
 159:lvgl/src/lv_widgets/lv_list.h **** }
 160:lvgl/src/lv_widgets/lv_list.h **** 
 161:lvgl/src/lv_widgets/lv_list.h **** /**
 162:lvgl/src/lv_widgets/lv_list.h ****  * Set layout of a list
 163:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 164:lvgl/src/lv_widgets/lv_list.h ****  * @param layout which layout should be used
 165:lvgl/src/lv_widgets/lv_list.h ****  */
 166:lvgl/src/lv_widgets/lv_list.h **** void lv_list_set_layout(lv_obj_t * list, lv_layout_t layout);
 167:lvgl/src/lv_widgets/lv_list.h **** 
 168:lvgl/src/lv_widgets/lv_list.h **** /*=====================
 169:lvgl/src/lv_widgets/lv_list.h ****  * Getter functions
 170:lvgl/src/lv_widgets/lv_list.h ****  *====================*/
 171:lvgl/src/lv_widgets/lv_list.h **** 
 172:lvgl/src/lv_widgets/lv_list.h **** /**
 173:lvgl/src/lv_widgets/lv_list.h ****  * Get the text of a list element
 174:lvgl/src/lv_widgets/lv_list.h ****  * @param btn pointer to list element
 175:lvgl/src/lv_widgets/lv_list.h ****  * @return pointer to the text
 176:lvgl/src/lv_widgets/lv_list.h ****  */
 177:lvgl/src/lv_widgets/lv_list.h **** const char * lv_list_get_btn_text(const lv_obj_t * btn);
 178:lvgl/src/lv_widgets/lv_list.h **** /**
 179:lvgl/src/lv_widgets/lv_list.h ****  * Get the label object from a list element
 180:lvgl/src/lv_widgets/lv_list.h ****  * @param btn pointer to a list element (button)
 181:lvgl/src/lv_widgets/lv_list.h ****  * @return pointer to the label from the list element or NULL if not found
 182:lvgl/src/lv_widgets/lv_list.h ****  */
 183:lvgl/src/lv_widgets/lv_list.h **** lv_obj_t * lv_list_get_btn_label(const lv_obj_t * btn);
 184:lvgl/src/lv_widgets/lv_list.h **** 
 185:lvgl/src/lv_widgets/lv_list.h **** /**
 186:lvgl/src/lv_widgets/lv_list.h ****  * Get the image object from a list element
 187:lvgl/src/lv_widgets/lv_list.h ****  * @param btn pointer to a list element (button)
 188:lvgl/src/lv_widgets/lv_list.h ****  * @return pointer to the image from the list element or NULL if not found
 189:lvgl/src/lv_widgets/lv_list.h ****  */
 190:lvgl/src/lv_widgets/lv_list.h **** lv_obj_t * lv_list_get_btn_img(const lv_obj_t * btn);
 191:lvgl/src/lv_widgets/lv_list.h **** 
 192:lvgl/src/lv_widgets/lv_list.h **** /**
 193:lvgl/src/lv_widgets/lv_list.h ****  * Get the next button from list. (Starts from the bottom button)
 194:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 195:lvgl/src/lv_widgets/lv_list.h ****  * @param prev_btn pointer to button. Search the next after it.
 196:lvgl/src/lv_widgets/lv_list.h ****  * @return pointer to the next button or NULL when no more buttons
 197:lvgl/src/lv_widgets/lv_list.h ****  */
 198:lvgl/src/lv_widgets/lv_list.h **** lv_obj_t * lv_list_get_prev_btn(const lv_obj_t * list, lv_obj_t * prev_btn);
 199:lvgl/src/lv_widgets/lv_list.h **** 
 200:lvgl/src/lv_widgets/lv_list.h **** /**
ARM GAS  D:\Temp\cc6WWuOg.s 			page 122


 201:lvgl/src/lv_widgets/lv_list.h ****  * Get the previous button from list. (Starts from the top button)
 202:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 203:lvgl/src/lv_widgets/lv_list.h ****  * @param prev_btn pointer to button. Search the previous before it.
 204:lvgl/src/lv_widgets/lv_list.h ****  * @return pointer to the previous button or NULL when no more buttons
 205:lvgl/src/lv_widgets/lv_list.h ****  */
 206:lvgl/src/lv_widgets/lv_list.h **** lv_obj_t * lv_list_get_next_btn(const lv_obj_t * list, lv_obj_t * prev_btn);
 207:lvgl/src/lv_widgets/lv_list.h **** 
 208:lvgl/src/lv_widgets/lv_list.h **** /**
 209:lvgl/src/lv_widgets/lv_list.h ****  * Get the index of the button in the list
 210:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object. If NULL, assumes btn is part of a list.
 211:lvgl/src/lv_widgets/lv_list.h ****  * @param btn pointer to a list element (button)
 212:lvgl/src/lv_widgets/lv_list.h ****  * @return the index of the button in the list, or -1 of the button not in this list
 213:lvgl/src/lv_widgets/lv_list.h ****  */
 214:lvgl/src/lv_widgets/lv_list.h **** int32_t lv_list_get_btn_index(const lv_obj_t * list, const lv_obj_t * btn);
 215:lvgl/src/lv_widgets/lv_list.h **** 
 216:lvgl/src/lv_widgets/lv_list.h **** /**
 217:lvgl/src/lv_widgets/lv_list.h ****  * Get the number of buttons in the list
 218:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 219:lvgl/src/lv_widgets/lv_list.h ****  * @return the number of buttons in the list
 220:lvgl/src/lv_widgets/lv_list.h ****  */
 221:lvgl/src/lv_widgets/lv_list.h **** uint16_t lv_list_get_size(const lv_obj_t * list);
 222:lvgl/src/lv_widgets/lv_list.h **** 
 223:lvgl/src/lv_widgets/lv_list.h **** #if LV_USE_GROUP
 224:lvgl/src/lv_widgets/lv_list.h **** /**
 225:lvgl/src/lv_widgets/lv_list.h ****  * Get the currently selected button. Can be used while navigating in the list with a keypad.
 226:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 227:lvgl/src/lv_widgets/lv_list.h ****  * @return pointer to the selected button
 228:lvgl/src/lv_widgets/lv_list.h ****  */
 229:lvgl/src/lv_widgets/lv_list.h **** lv_obj_t * lv_list_get_btn_selected(const lv_obj_t * list);
 230:lvgl/src/lv_widgets/lv_list.h **** #endif
 231:lvgl/src/lv_widgets/lv_list.h **** 
 232:lvgl/src/lv_widgets/lv_list.h **** /**
 233:lvgl/src/lv_widgets/lv_list.h ****  * Get layout of a list
 234:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 235:lvgl/src/lv_widgets/lv_list.h ****  * @return layout of the list object
 236:lvgl/src/lv_widgets/lv_list.h ****  */
 237:lvgl/src/lv_widgets/lv_list.h **** lv_layout_t lv_list_get_layout(lv_obj_t * list);
 238:lvgl/src/lv_widgets/lv_list.h **** 
 239:lvgl/src/lv_widgets/lv_list.h **** /**
 240:lvgl/src/lv_widgets/lv_list.h ****  * Get the scroll bar mode of a list
 241:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 242:lvgl/src/lv_widgets/lv_list.h ****  * @return scrollbar mode from 'lv_scrollbar_mode_t' enum
 243:lvgl/src/lv_widgets/lv_list.h ****  */
 244:lvgl/src/lv_widgets/lv_list.h **** static inline lv_scrollbar_mode_t lv_list_get_scrollbar_mode(const lv_obj_t * list)
 245:lvgl/src/lv_widgets/lv_list.h **** {
 246:lvgl/src/lv_widgets/lv_list.h ****     return lv_page_get_scrollbar_mode(list);
 247:lvgl/src/lv_widgets/lv_list.h **** }
 248:lvgl/src/lv_widgets/lv_list.h **** 
 249:lvgl/src/lv_widgets/lv_list.h **** /**
 250:lvgl/src/lv_widgets/lv_list.h ****  * Get the scroll propagation property
 251:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a List
 252:lvgl/src/lv_widgets/lv_list.h ****  * @return true or false
 253:lvgl/src/lv_widgets/lv_list.h ****  */
 254:lvgl/src/lv_widgets/lv_list.h **** static inline bool lv_list_get_scroll_propagation(lv_obj_t * list)
 255:lvgl/src/lv_widgets/lv_list.h **** {
 256:lvgl/src/lv_widgets/lv_list.h ****     return lv_page_get_scroll_propagation(list);
 257:lvgl/src/lv_widgets/lv_list.h **** }
ARM GAS  D:\Temp\cc6WWuOg.s 			page 123


 258:lvgl/src/lv_widgets/lv_list.h **** 
 259:lvgl/src/lv_widgets/lv_list.h **** /**
 260:lvgl/src/lv_widgets/lv_list.h ****  * Get the scroll propagation property
 261:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a List
 262:lvgl/src/lv_widgets/lv_list.h ****  * @return true or false
 263:lvgl/src/lv_widgets/lv_list.h ****  */
 264:lvgl/src/lv_widgets/lv_list.h **** static inline bool lv_list_get_edge_flash(lv_obj_t * list)
 265:lvgl/src/lv_widgets/lv_list.h **** {
 266:lvgl/src/lv_widgets/lv_list.h ****     return lv_page_get_edge_flash(list);
 267:lvgl/src/lv_widgets/lv_list.h **** }
 268:lvgl/src/lv_widgets/lv_list.h **** 
 269:lvgl/src/lv_widgets/lv_list.h **** /**
 270:lvgl/src/lv_widgets/lv_list.h ****  * Get scroll animation duration
 271:lvgl/src/lv_widgets/lv_list.h ****  * @param list pointer to a list object
 272:lvgl/src/lv_widgets/lv_list.h ****  * @return duration of animation [ms]
 273:lvgl/src/lv_widgets/lv_list.h ****  */
 274:lvgl/src/lv_widgets/lv_list.h **** static inline uint16_t lv_list_get_anim_time(const lv_obj_t * list)
 3796              		.loc 8 274 24 view .LVU1088
 3797              	.LBB216:
 275:lvgl/src/lv_widgets/lv_list.h **** {
 276:lvgl/src/lv_widgets/lv_list.h ****     return lv_page_get_anim_time(list);
 3798              		.loc 8 276 5 view .LVU1089
 3799              		.loc 8 276 12 is_stmt 0 view .LVU1090
 3800 0072 2046     		mov	r0, r4
 3801 0074 FFF7FEFF 		bl	lv_page_get_anim_time
 3802              	.LVL472:
 3803              		.loc 8 276 12 view .LVU1091
 3804              	.LBE216:
 3805              	.LBE215:
 558:lvgl/src/lv_widgets/lv_list.c ****                     lv_obj_set_y(scrl, new_y);
 3806              		.loc 1 558 19 view .LVU1092
 3807 0078 30B9     		cbnz	r0, .L287
 559:lvgl/src/lv_widgets/lv_list.c ****                 }
 3808              		.loc 1 559 21 is_stmt 1 view .LVU1093
 3809 007a 2946     		mov	r1, r5
 3810 007c 3846     		mov	r0, r7
 3811 007e FFF7FEFF 		bl	lv_obj_set_y
 3812              	.LVL473:
 3813              	.L281:
 559:lvgl/src/lv_widgets/lv_list.c ****                 }
 3814              		.loc 1 559 21 is_stmt 0 view .LVU1094
 3815              	.LBE214:
 578:lvgl/src/lv_widgets/lv_list.c **** 
 3816              		.loc 1 578 1 view .LVU1095
 3817 0082 12B0     		add	sp, sp, #72
 3818              	.LCFI40:
 3819              		.cfi_remember_state
 3820              		.cfi_def_cfa_offset 24
 3821              		@ sp needed
 3822 0084 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3823              	.LVL474:
 3824              	.L287:
 3825              	.LCFI41:
 3826              		.cfi_restore_state
 3827              	.LBB226:
 3828              	.LBB217:
 563:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_init(&a);
ARM GAS  D:\Temp\cc6WWuOg.s 			page 124


 3829              		.loc 1 563 21 is_stmt 1 view .LVU1096
 564:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_set_var(&a, scrl);
 3830              		.loc 1 564 21 view .LVU1097
 3831 0088 01A8     		add	r0, sp, #4
 3832 008a FFF7FEFF 		bl	lv_anim_init
 3833              	.LVL475:
 565:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)lv_obj_set_y);
 3834              		.loc 1 565 21 view .LVU1098
 3835              	.LBB218:
 3836              	.LBI218:
 3837              		.file 9 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h"
   1:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
   2:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @file anim.h
   3:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *
   4:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
   5:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
   6:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #ifndef ANIM_H
   7:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #define ANIM_H
   8:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
   9:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** extern "C" {
  11:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #endif
  12:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  13:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /*********************
  14:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *********************/
  16:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  18:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include <stdint.h>
  19:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include <stdbool.h>
  20:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include <string.h>
  21:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include "lv_mem.h"
  22:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  23:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /*********************
  24:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *      DEFINES
  25:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *********************/
  26:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  27:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**********************
  28:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *      TYPEDEFS
  29:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  **********************/
  30:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  31:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Can be used to indicate if animations are enabled or disabled in a case*/
  32:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** enum {
  33:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     LV_ANIM_OFF,
  34:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     LV_ANIM_ON,
  35:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** };
  36:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  37:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef uint8_t lv_anim_enable_t;
  38:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  39:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Type of the animated value*/
  40:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef lv_coord_t lv_anim_value_t;
  41:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  42:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #if LV_USE_ANIMATION
  43:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  44:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #define LV_ANIM_REPEAT_INFINITE      0xFFFF
  45:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  46:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** struct _lv_anim_t;
ARM GAS  D:\Temp\cc6WWuOg.s 			page 125


  47:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** struct _lv_anim_path_t;
  48:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Get the current value during an animation*/
  49:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef lv_anim_value_t (*lv_anim_path_cb_t)(const struct _lv_anim_path_t *, const struct _lv_anim_
  50:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  51:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef struct _lv_anim_path_t {
  52:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_path_cb_t cb;
  53:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     void * user_data;
  54:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** } lv_anim_path_t;
  55:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  56:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Generic prototype of "animator" functions.
  57:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * First parameter is the variable to animate.
  58:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Second parameter is the value to set.
  59:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Compatible with `lv_xxx_set_yyy(obj, value)` functions
  60:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * The `x` in `_xcb_t` means its not a fully generic prototype because
  61:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * it doesn't receive `lv_anim_t *` as its first argument*/
  62:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_exec_xcb_t)(void *, lv_anim_value_t);
  63:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  64:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Same as `lv_anim_exec_xcb_t` but receives `lv_anim_t *` as the first parameter.
  65:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * It's more consistent but less convenient. Might be used by binding generator functions.*/
  66:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_custom_exec_cb_t)(struct _lv_anim_t *, lv_anim_value_t);
  67:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  68:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Callback to call when the animation is ready*/
  69:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_ready_cb_t)(struct _lv_anim_t *);
  70:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  71:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Callback to call when the animation really stars (considering `delay`)*/
  72:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_start_cb_t)(struct _lv_anim_t *);
  73:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  74:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Describes an animation*/
  75:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef struct _lv_anim_t {
  76:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     void * var;                  /**<Variable to animate*/
  77:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_exec_xcb_t exec_cb;   /**< Function to execute to animate*/
  78:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_start_cb_t start_cb; /**< Call it when the animation is starts (considering `delay`)*/
  79:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_ready_cb_t ready_cb; /**< Call it when the animation is ready*/
  80:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_path_t path;         /**< Describe the path (curve) of animations*/
  81:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t start;               /**< Start value*/
  82:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t current;             /**< Current value */
  83:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t end;                 /**< End value*/
  84:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t time;               /**< Animation time in ms*/
  85:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t act_time;            /**< Current time in animation. Set to negative to make delay.*/
  86:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t playback_delay;     /**< Wait before play back*/
  87:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t playback_time;      /**< Duration of playback animation*/
  88:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t repeat_delay;       /**< Wait before repeat*/
  89:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint16_t repeat_cnt;         /**< Repeat count for the animation*/
  90:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint8_t early_apply  : 1;    /**< 1: Apply start value immediately even is there is `delay` */
  91:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #if LV_USE_USER_DATA
  92:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_user_data_t user_data; /**< Custom user data*/
  93:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #endif
  94:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  95:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     /*Animation system use these - user shouldn't set*/
  96:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t time_orig;
  97:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint8_t playback_now : 1; /**< Play back is in progress*/
  98:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t has_run : 1;     /**< Indicates the animation has run in this round*/
  99:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** } lv_anim_t;
 100:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 101:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**********************
 102:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * GLOBAL PROTOTYPES
 103:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  **********************/
ARM GAS  D:\Temp\cc6WWuOg.s 			page 126


 104:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 105:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 106:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Init. the animation module
 107:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 108:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** void _lv_anim_core_init(void);
 109:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 110:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 111:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Initialize an animation variable.
 112:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * E.g.:
 113:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * lv_anim_t a;
 114:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * lv_anim_init(&a);
 115:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * lv_anim_set_...(&a);
 116:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an `lv_anim_t` variable to initialize
 117:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 118:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** void lv_anim_init(lv_anim_t * a);
 119:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 120:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 121:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a variable to animate
 122:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 123:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param var pointer to a variable to animate
 124:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 125:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_var(lv_anim_t * a, void * var)
 3838              		.loc 9 125 20 view .LVU1099
 3839              	.LBB219:
 126:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 127:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->var     = var;
 3840              		.loc 9 127 5 view .LVU1100
 3841              		.loc 9 127 16 is_stmt 0 view .LVU1101
 3842 008e 0197     		str	r7, [sp, #4]
 3843              	.LVL476:
 3844              		.loc 9 127 16 view .LVU1102
 3845              	.LBE219:
 3846              	.LBE218:
 566:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_set_values(&a, lv_obj_get_y(scrl), new_y);
 3847              		.loc 1 566 21 is_stmt 1 view .LVU1103
 3848              	.LBB220:
 3849              	.LBI220:
 128:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 129:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 130:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 131:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a function to animate `var`
 132:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 133:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param exec_cb a function to execute during animation
 134:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *                LittelvGL's built-in functions can be used.
 135:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *                E.g. lv_obj_set_x
 136:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 137:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_exec_cb(lv_anim_t * a, lv_anim_exec_xcb_t exec_cb)
 3850              		.loc 9 137 20 view .LVU1104
 3851              	.LBB221:
 138:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->exec_cb = exec_cb;
 3852              		.loc 9 139 5 view .LVU1105
 3853              		.loc 9 139 16 is_stmt 0 view .LVU1106
 3854 0090 074B     		ldr	r3, .L291+4
 3855 0092 0293     		str	r3, [sp, #8]
 3856              	.LVL477:
 3857              		.loc 9 139 16 view .LVU1107
ARM GAS  D:\Temp\cc6WWuOg.s 			page 127


 3858              	.LBE221:
 3859              	.LBE220:
 567:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_set_time(&a, LV_LIST_DEF_ANIM_TIME);
 3860              		.loc 1 567 21 is_stmt 1 view .LVU1108
 3861 0094 3846     		mov	r0, r7
 3862 0096 FFF7FEFF 		bl	lv_obj_get_y
 3863              	.LVL478:
 3864              	.LBB222:
 3865              	.LBI222:
 140:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 141:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 142:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 143:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set the duration of an animation
 144:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 145:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param duration duration of the animation in milliseconds
 146:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 147:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_time(lv_anim_t * a, uint32_t duration)
 148:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->time     = duration;
 150:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 151:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 152:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 153:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a delay before starting the animation
 154:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 155:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param delay delay before the animation in milliseconds
 156:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 157:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_delay(lv_anim_t * a, uint32_t delay)
 158:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->act_time = -(int32_t)(delay);
 160:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 161:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 162:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 163:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set the start and end values of an animation
 164:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 165:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param start the start value
 166:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param end the end value
 167:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 168:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_values(lv_anim_t * a, lv_anim_value_t start, lv_anim_value_t end)
 3866              		.loc 9 168 20 view .LVU1109
 3867              	.LBB223:
 169:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 170:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->start = start;
 3868              		.loc 9 170 5 view .LVU1110
 3869              		.loc 9 170 14 is_stmt 0 view .LVU1111
 3870 009a 0790     		str	r0, [sp, #28]
 171:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->current = start;
 3871              		.loc 9 171 5 is_stmt 1 view .LVU1112
 3872              		.loc 9 171 16 is_stmt 0 view .LVU1113
 3873 009c 0890     		str	r0, [sp, #32]
 172:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->end   = end;
 3874              		.loc 9 172 5 is_stmt 1 view .LVU1114
 3875              		.loc 9 172 14 is_stmt 0 view .LVU1115
 3876 009e 0995     		str	r5, [sp, #36]
 3877              	.LVL479:
 3878              		.loc 9 172 14 view .LVU1116
 3879              	.LBE223:
 3880              	.LBE222:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 128


 568:lvgl/src/lv_widgets/lv_list.c ****                     lv_anim_start(&a);
 3881              		.loc 1 568 21 is_stmt 1 view .LVU1117
 3882              	.LBB224:
 3883              	.LBI224:
 147:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 3884              		.loc 9 147 20 view .LVU1118
 3885              	.LBB225:
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 3886              		.loc 9 149 5 view .LVU1119
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 3887              		.loc 9 149 17 is_stmt 0 view .LVU1120
 3888 00a0 6423     		movs	r3, #100
 3889 00a2 0A93     		str	r3, [sp, #40]
 3890              	.LVL480:
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 3891              		.loc 9 149 17 view .LVU1121
 3892              	.LBE225:
 3893              	.LBE224:
 569:lvgl/src/lv_widgets/lv_list.c **** #endif
 3894              		.loc 1 569 21 is_stmt 1 view .LVU1122
 3895 00a4 01A8     		add	r0, sp, #4
 3896 00a6 FFF7FEFF 		bl	lv_anim_start
 3897              	.LVL481:
 3898 00aa EAE7     		b	.L281
 3899              	.L292:
 3900              		.align	2
 3901              	.L291:
 3902 00ac 00000000 		.word	.LC0
 3903 00b0 00000000 		.word	lv_obj_set_y
 3904              	.LBE217:
 3905              	.LBE226:
 3906              		.cfi_endproc
 3907              	.LFE505:
 3909              		.section	.text.lv_list_down,"ax",%progbits
 3910              		.align	1
 3911              		.global	lv_list_down
 3912              		.syntax unified
 3913              		.thumb
 3914              		.thumb_func
 3915              		.fpu fpv4-sp-d16
 3917              	lv_list_down:
 3918              	.LVL482:
 3919              	.LFB506:
 585:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 3920              		.loc 1 585 1 view -0
 3921              		.cfi_startproc
 3922              		@ args = 0, pretend = 0, frame = 72
 3923              		@ frame_needed = 0, uses_anonymous_args = 0
 585:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(list, LV_OBJX_NAME);
 3924              		.loc 1 585 1 is_stmt 0 view .LVU1124
 3925 0000 70B5     		push	{r4, r5, r6, lr}
 3926              	.LCFI42:
 3927              		.cfi_def_cfa_offset 16
 3928              		.cfi_offset 4, -16
 3929              		.cfi_offset 5, -12
 3930              		.cfi_offset 6, -8
 3931              		.cfi_offset 14, -4
ARM GAS  D:\Temp\cc6WWuOg.s 			page 129


 3932 0002 92B0     		sub	sp, sp, #72
 3933              	.LCFI43:
 3934              		.cfi_def_cfa_offset 88
 3935 0004 0546     		mov	r5, r0
 586:lvgl/src/lv_widgets/lv_list.c **** 
 3936              		.loc 1 586 5 is_stmt 1 view .LVU1125
 586:lvgl/src/lv_widgets/lv_list.c **** 
 3937              		.loc 1 586 5 view .LVU1126
 3938 0006 FFF7FEFF 		bl	lv_debug_check_null
 3939              	.LVL483:
 586:lvgl/src/lv_widgets/lv_list.c **** 
 3940              		.loc 1 586 5 is_stmt 0 view .LVU1127
 3941 000a 28B9     		cbnz	r0, .L294
 586:lvgl/src/lv_widgets/lv_list.c **** 
 3942              		.loc 1 586 5 is_stmt 1 discriminator 1 view .LVU1128
 586:lvgl/src/lv_widgets/lv_list.c **** 
 3943              		.loc 1 586 5 discriminator 1 view .LVU1129
 3944 000c 2A46     		mov	r2, r5
 3945 000e 0023     		movs	r3, #0
 3946 0010 1C48     		ldr	r0, .L303
 3947 0012 FFF7FEFF 		bl	lv_debug_log_error
 3948              	.LVL484:
 3949              	.L295:
 586:lvgl/src/lv_widgets/lv_list.c **** 
 3950              		.loc 1 586 5 discriminator 1 view .LVU1130
 586:lvgl/src/lv_widgets/lv_list.c **** 
 3951              		.loc 1 586 5 discriminator 1 view .LVU1131
 3952 0016 FEE7     		b	.L295
 3953              	.L294:
 586:lvgl/src/lv_widgets/lv_list.c **** 
 3954              		.loc 1 586 38 discriminator 2 view .LVU1132
 590:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e;
 3955              		.loc 1 590 5 discriminator 2 view .LVU1133
 590:lvgl/src/lv_widgets/lv_list.c ****     lv_obj_t * e;
 3956              		.loc 1 590 23 is_stmt 0 discriminator 2 view .LVU1134
 3957 0018 2846     		mov	r0, r5
 3958 001a FFF7FEFF 		bl	lv_page_get_scrollable
 3959              	.LVL485:
 3960 001e 0646     		mov	r6, r0
 3961              	.LVL486:
 591:lvgl/src/lv_widgets/lv_list.c ****     e = lv_list_get_prev_btn(list, NULL);
 3962              		.loc 1 591 5 is_stmt 1 discriminator 2 view .LVU1135
 592:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 3963              		.loc 1 592 5 discriminator 2 view .LVU1136
 592:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 3964              		.loc 1 592 9 is_stmt 0 discriminator 2 view .LVU1137
 3965 0020 0021     		movs	r1, #0
 3966 0022 2846     		mov	r0, r5
 3967              	.LVL487:
 592:lvgl/src/lv_widgets/lv_list.c ****     while(e != NULL) {
 3968              		.loc 1 592 9 discriminator 2 view .LVU1138
 3969 0024 FFF7FEFF 		bl	lv_list_get_prev_btn
 3970              	.LVL488:
 593:lvgl/src/lv_widgets/lv_list.c ****         if(e->coords.y1 < list->coords.y1) {
 3971              		.loc 1 593 5 is_stmt 1 discriminator 2 view .LVU1139
 3972              	.L296:
 593:lvgl/src/lv_widgets/lv_list.c ****         if(e->coords.y1 < list->coords.y1) {
ARM GAS  D:\Temp\cc6WWuOg.s 			page 130


 3973              		.loc 1 593 10 is_stmt 0 view .LVU1140
 3974 0028 B8B1     		cbz	r0, .L293
 594:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t new_y = -lv_obj_get_y(e);
 3975              		.loc 1 594 9 is_stmt 1 view .LVU1141
 594:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t new_y = -lv_obj_get_y(e);
 3976              		.loc 1 594 21 is_stmt 0 view .LVU1142
 3977 002a B0F91220 		ldrsh	r2, [r0, #18]
 594:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t new_y = -lv_obj_get_y(e);
 3978              		.loc 1 594 39 view .LVU1143
 3979 002e B5F91230 		ldrsh	r3, [r5, #18]
 594:lvgl/src/lv_widgets/lv_list.c ****             lv_coord_t new_y = -lv_obj_get_y(e);
 3980              		.loc 1 594 11 view .LVU1144
 3981 0032 9A42     		cmp	r2, r3
 3982 0034 04DB     		blt	.L302
 612:lvgl/src/lv_widgets/lv_list.c ****     }
 3983              		.loc 1 612 9 is_stmt 1 view .LVU1145
 612:lvgl/src/lv_widgets/lv_list.c ****     }
 3984              		.loc 1 612 13 is_stmt 0 view .LVU1146
 3985 0036 0146     		mov	r1, r0
 3986 0038 2846     		mov	r0, r5
 3987              	.LVL489:
 612:lvgl/src/lv_widgets/lv_list.c ****     }
 3988              		.loc 1 612 13 view .LVU1147
 3989 003a FFF7FEFF 		bl	lv_list_get_prev_btn
 3990              	.LVL490:
 612:lvgl/src/lv_widgets/lv_list.c ****     }
 3991              		.loc 1 612 13 view .LVU1148
 3992 003e F3E7     		b	.L296
 3993              	.L302:
 3994              	.LBB227:
 595:lvgl/src/lv_widgets/lv_list.c ****             if(lv_list_get_anim_time(list) == 0) {
 3995              		.loc 1 595 13 is_stmt 1 view .LVU1149
 595:lvgl/src/lv_widgets/lv_list.c ****             if(lv_list_get_anim_time(list) == 0) {
 3996              		.loc 1 595 33 is_stmt 0 view .LVU1150
 3997 0040 FFF7FEFF 		bl	lv_obj_get_y
 3998              	.LVL491:
 595:lvgl/src/lv_widgets/lv_list.c ****             if(lv_list_get_anim_time(list) == 0) {
 3999              		.loc 1 595 33 view .LVU1151
 4000 0044 84B2     		uxth	r4, r0
 595:lvgl/src/lv_widgets/lv_list.c ****             if(lv_list_get_anim_time(list) == 0) {
 4001              		.loc 1 595 24 view .LVU1152
 4002 0046 6442     		rsbs	r4, r4, #0
 4003 0048 24B2     		sxth	r4, r4
 4004              	.LVL492:
 596:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_set_y(scrl, new_y);
 4005              		.loc 1 596 13 is_stmt 1 view .LVU1153
 4006              	.LBB228:
 4007              	.LBI228:
 274:lvgl/src/lv_widgets/lv_list.h **** {
 4008              		.loc 8 274 24 view .LVU1154
 4009              	.LBB229:
 4010              		.loc 8 276 5 view .LVU1155
 4011              		.loc 8 276 12 is_stmt 0 view .LVU1156
 4012 004a 2846     		mov	r0, r5
 4013 004c FFF7FEFF 		bl	lv_page_get_anim_time
 4014              	.LVL493:
 4015              		.loc 8 276 12 view .LVU1157
ARM GAS  D:\Temp\cc6WWuOg.s 			page 131


 4016              	.LBE229:
 4017              	.LBE228:
 596:lvgl/src/lv_widgets/lv_list.c ****                 lv_obj_set_y(scrl, new_y);
 4018              		.loc 1 596 15 view .LVU1158
 4019 0050 28B9     		cbnz	r0, .L298
 597:lvgl/src/lv_widgets/lv_list.c ****             }
 4020              		.loc 1 597 17 is_stmt 1 view .LVU1159
 4021 0052 2146     		mov	r1, r4
 4022 0054 3046     		mov	r0, r6
 4023 0056 FFF7FEFF 		bl	lv_obj_set_y
 4024              	.LVL494:
 4025              	.L293:
 597:lvgl/src/lv_widgets/lv_list.c ****             }
 4026              		.loc 1 597 17 is_stmt 0 view .LVU1160
 4027              	.LBE227:
 614:lvgl/src/lv_widgets/lv_list.c **** 
 4028              		.loc 1 614 1 view .LVU1161
 4029 005a 12B0     		add	sp, sp, #72
 4030              	.LCFI44:
 4031              		.cfi_remember_state
 4032              		.cfi_def_cfa_offset 16
 4033              		@ sp needed
 4034 005c 70BD     		pop	{r4, r5, r6, pc}
 4035              	.LVL495:
 4036              	.L298:
 4037              	.LCFI45:
 4038              		.cfi_restore_state
 4039              	.LBB239:
 4040              	.LBB230:
 601:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_init(&a);
 4041              		.loc 1 601 17 is_stmt 1 view .LVU1162
 602:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_set_var(&a, scrl);
 4042              		.loc 1 602 17 view .LVU1163
 4043 005e 01A8     		add	r0, sp, #4
 4044 0060 FFF7FEFF 		bl	lv_anim_init
 4045              	.LVL496:
 603:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)lv_obj_set_y);
 4046              		.loc 1 603 17 view .LVU1164
 4047              	.LBB231:
 4048              	.LBI231:
 125:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 4049              		.loc 9 125 20 view .LVU1165
 4050              	.LBB232:
 127:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 4051              		.loc 9 127 5 view .LVU1166
 127:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 4052              		.loc 9 127 16 is_stmt 0 view .LVU1167
 4053 0064 0196     		str	r6, [sp, #4]
 4054              	.LVL497:
 127:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 4055              		.loc 9 127 16 view .LVU1168
 4056              	.LBE232:
 4057              	.LBE231:
 604:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_set_values(&a, lv_obj_get_y(scrl), new_y);
 4058              		.loc 1 604 17 is_stmt 1 view .LVU1169
 4059              	.LBB233:
 4060              	.LBI233:
ARM GAS  D:\Temp\cc6WWuOg.s 			page 132


 137:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 4061              		.loc 9 137 20 view .LVU1170
 4062              	.LBB234:
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 4063              		.loc 9 139 5 view .LVU1171
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 4064              		.loc 9 139 16 is_stmt 0 view .LVU1172
 4065 0066 084B     		ldr	r3, .L303+4
 4066 0068 0293     		str	r3, [sp, #8]
 4067              	.LVL498:
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 4068              		.loc 9 139 16 view .LVU1173
 4069              	.LBE234:
 4070              	.LBE233:
 605:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_set_time(&a, LV_LIST_DEF_ANIM_TIME);
 4071              		.loc 1 605 17 is_stmt 1 view .LVU1174
 4072 006a 3046     		mov	r0, r6
 4073 006c FFF7FEFF 		bl	lv_obj_get_y
 4074              	.LVL499:
 4075              	.LBB235:
 4076              	.LBI235:
 168:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 4077              		.loc 9 168 20 view .LVU1175
 4078              	.LBB236:
 170:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->current = start;
 4079              		.loc 9 170 5 view .LVU1176
 170:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->current = start;
 4080              		.loc 9 170 14 is_stmt 0 view .LVU1177
 4081 0070 0790     		str	r0, [sp, #28]
 171:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->end   = end;
 4082              		.loc 9 171 5 is_stmt 1 view .LVU1178
 171:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->end   = end;
 4083              		.loc 9 171 16 is_stmt 0 view .LVU1179
 4084 0072 0890     		str	r0, [sp, #32]
 4085              		.loc 9 172 5 is_stmt 1 view .LVU1180
 4086              		.loc 9 172 14 is_stmt 0 view .LVU1181
 4087 0074 0994     		str	r4, [sp, #36]
 4088              	.LVL500:
 4089              		.loc 9 172 14 view .LVU1182
 4090              	.LBE236:
 4091              	.LBE235:
 606:lvgl/src/lv_widgets/lv_list.c ****                 lv_anim_start(&a);
 4092              		.loc 1 606 17 is_stmt 1 view .LVU1183
 4093              	.LBB237:
 4094              	.LBI237:
 147:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 4095              		.loc 9 147 20 view .LVU1184
 4096              	.LBB238:
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 4097              		.loc 9 149 5 view .LVU1185
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 4098              		.loc 9 149 17 is_stmt 0 view .LVU1186
 4099 0076 6423     		movs	r3, #100
 4100 0078 0A93     		str	r3, [sp, #40]
 4101              	.LVL501:
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 4102              		.loc 9 149 17 view .LVU1187
ARM GAS  D:\Temp\cc6WWuOg.s 			page 133


 4103              	.LBE238:
 4104              	.LBE237:
 607:lvgl/src/lv_widgets/lv_list.c **** #endif
 4105              		.loc 1 607 17 is_stmt 1 view .LVU1188
 4106 007a 01A8     		add	r0, sp, #4
 4107 007c FFF7FEFF 		bl	lv_anim_start
 4108              	.LVL502:
 4109 0080 EBE7     		b	.L293
 4110              	.L304:
 4111 0082 00BF     		.align	2
 4112              	.L303:
 4113 0084 00000000 		.word	.LC0
 4114 0088 00000000 		.word	lv_obj_set_y
 4115              	.LBE230:
 4116              	.LBE239:
 4117              		.cfi_endproc
 4118              	.LFE506:
 4120              		.section	.text.lv_list_focus,"ax",%progbits
 4121              		.align	1
 4122              		.global	lv_list_focus
 4123              		.syntax unified
 4124              		.thumb
 4125              		.thumb_func
 4126              		.fpu fpv4-sp-d16
 4128              	lv_list_focus:
 4129              	.LVL503:
 4130              	.LFB507:
 622:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "");
 4131              		.loc 1 622 1 view -0
 4132              		.cfi_startproc
 4133              		@ args = 0, pretend = 0, frame = 0
 4134              		@ frame_needed = 0, uses_anonymous_args = 0
 622:lvgl/src/lv_widgets/lv_list.c ****     LV_ASSERT_OBJ(btn, "");
 4135              		.loc 1 622 1 is_stmt 0 view .LVU1190
 4136 0000 70B5     		push	{r4, r5, r6, lr}
 4137              	.LCFI46:
 4138              		.cfi_def_cfa_offset 16
 4139              		.cfi_offset 4, -16
 4140              		.cfi_offset 5, -12
 4141              		.cfi_offset 6, -8
 4142              		.cfi_offset 14, -4
 4143 0002 0446     		mov	r4, r0
 4144 0004 0D46     		mov	r5, r1
 623:lvgl/src/lv_widgets/lv_list.c **** 
 4145              		.loc 1 623 5 is_stmt 1 view .LVU1191
 623:lvgl/src/lv_widgets/lv_list.c **** 
 4146              		.loc 1 623 5 view .LVU1192
 4147 0006 FFF7FEFF 		bl	lv_debug_check_null
 4148              	.LVL504:
 623:lvgl/src/lv_widgets/lv_list.c **** 
 4149              		.loc 1 623 5 is_stmt 0 view .LVU1193
 4150 000a 28B9     		cbnz	r0, .L306
 623:lvgl/src/lv_widgets/lv_list.c **** 
 4151              		.loc 1 623 5 is_stmt 1 discriminator 1 view .LVU1194
 623:lvgl/src/lv_widgets/lv_list.c **** 
 4152              		.loc 1 623 5 discriminator 1 view .LVU1195
 4153 000c 2246     		mov	r2, r4
ARM GAS  D:\Temp\cc6WWuOg.s 			page 134


 4154 000e 0023     		movs	r3, #0
 4155 0010 0A48     		ldr	r0, .L311
 4156 0012 FFF7FEFF 		bl	lv_debug_log_error
 4157              	.LVL505:
 4158              	.L307:
 623:lvgl/src/lv_widgets/lv_list.c **** 
 4159              		.loc 1 623 5 discriminator 1 view .LVU1196
 623:lvgl/src/lv_widgets/lv_list.c **** 
 4160              		.loc 1 623 5 discriminator 1 view .LVU1197
 4161 0016 FEE7     		b	.L307
 4162              	.L306:
 623:lvgl/src/lv_widgets/lv_list.c **** 
 4163              		.loc 1 623 27 discriminator 2 view .LVU1198
 629:lvgl/src/lv_widgets/lv_list.c **** 
 4164              		.loc 1 629 5 discriminator 2 view .LVU1199
 629:lvgl/src/lv_widgets/lv_list.c **** 
 4165              		.loc 1 629 41 is_stmt 0 discriminator 2 view .LVU1200
 4166 0018 2046     		mov	r0, r4
 4167 001a FFF7FEFF 		bl	lv_obj_get_parent
 4168              	.LVL506:
 629:lvgl/src/lv_widgets/lv_list.c **** 
 4169              		.loc 1 629 23 discriminator 2 view .LVU1201
 4170 001e FFF7FEFF 		bl	lv_obj_get_parent
 4171              	.LVL507:
 4172 0022 0646     		mov	r6, r0
 4173              	.LVL508:
 631:lvgl/src/lv_widgets/lv_list.c **** }
 4174              		.loc 1 631 5 is_stmt 1 discriminator 2 view .LVU1202
 4175 0024 2DB9     		cbnz	r5, .L310
 4176              	.LVL509:
 4177              	.L308:
 631:lvgl/src/lv_widgets/lv_list.c **** }
 4178              		.loc 1 631 5 is_stmt 0 discriminator 4 view .LVU1203
 4179 0026 2A46     		mov	r2, r5
 4180 0028 2146     		mov	r1, r4
 4181 002a 3046     		mov	r0, r6
 4182 002c FFF7FEFF 		bl	lv_page_focus
 4183              	.LVL510:
 632:lvgl/src/lv_widgets/lv_list.c **** 
 4184              		.loc 1 632 1 discriminator 4 view .LVU1204
 4185 0030 70BD     		pop	{r4, r5, r6, pc}
 4186              	.LVL511:
 4187              	.L310:
 4188              	.LBB240:
 4189              	.LBI240:
 274:lvgl/src/lv_widgets/lv_list.h **** {
 4190              		.loc 8 274 24 is_stmt 1 view .LVU1205
 4191              	.LBB241:
 4192              		.loc 8 276 5 view .LVU1206
 4193              		.loc 8 276 12 is_stmt 0 view .LVU1207
 4194 0032 FFF7FEFF 		bl	lv_page_get_anim_time
 4195              	.LVL512:
 4196              		.loc 8 276 12 view .LVU1208
 4197              	.LBE241:
 4198              	.LBE240:
 631:lvgl/src/lv_widgets/lv_list.c **** }
 4199              		.loc 1 631 5 view .LVU1209
ARM GAS  D:\Temp\cc6WWuOg.s 			page 135


 4200 0036 C5B2     		uxtb	r5, r0
 4201 0038 F5E7     		b	.L308
 4202              	.L312:
 4203 003a 00BF     		.align	2
 4204              	.L311:
 4205 003c 00000000 		.word	.LC0
 4206              		.cfi_endproc
 4207              	.LFE507:
 4209              		.section	.bss.ancestor_btn_signal,"aw",%nobits
 4210              		.align	2
 4211              		.set	.LANCHOR1,. + 0
 4214              	ancestor_btn_signal:
 4215 0000 00000000 		.space	4
 4216              		.section	.bss.ancestor_page_signal,"aw",%nobits
 4217              		.align	2
 4218              		.set	.LANCHOR0,. + 0
 4221              	ancestor_page_signal:
 4222 0000 00000000 		.space	4
 4223              		.section	.bss.img_signal,"aw",%nobits
 4224              		.align	2
 4225              		.set	.LANCHOR2,. + 0
 4228              	img_signal:
 4229 0000 00000000 		.space	4
 4230              		.section	.bss.label_signal,"aw",%nobits
 4231              		.align	2
 4232              		.set	.LANCHOR3,. + 0
 4235              	label_signal:
 4236 0000 00000000 		.space	4
 4237              		.section	.rodata.lv_list_create.str1.4,"aMS",%progbits,1
 4238              		.align	2
 4239              	.LC6:
 4240 0000 4F757420 		.ascii	"Out of memory\000"
 4240      6F66206D 
 4240      656D6F72 
 4240      7900
 4241              		.section	.rodata.lv_list_get_btn_text.str1.4,"aMS",%progbits,1
 4242              		.align	2
 4243              	.LC4:
 4244 0000 00       		.ascii	"\000"
 4245              		.section	.rodata.lv_list_get_style.str1.4,"aMS",%progbits,1
 4246              		.align	2
 4247              	.LC0:
 4248 0000 4E554C4C 		.ascii	"NULL pointer\000"
 4248      20706F69 
 4248      6E746572 
 4248      00
 4249              		.section	.rodata.lv_list_is_list_btn.str1.4,"aMS",%progbits,1
 4250              		.align	2
 4251              	.LC3:
 4252 0000 6C765F62 		.ascii	"lv_btn\000"
 4252      746E00
 4253              		.section	.rodata.lv_list_is_list_img.str1.4,"aMS",%progbits,1
 4254              		.align	2
 4255              	.LC2:
 4256 0000 6C765F69 		.ascii	"lv_img\000"
 4256      6D6700
 4257              		.section	.rodata.lv_list_is_list_label.str1.4,"aMS",%progbits,1
ARM GAS  D:\Temp\cc6WWuOg.s 			page 136


 4258              		.align	2
 4259              	.LC1:
 4260 0000 6C765F6C 		.ascii	"lv_label\000"
 4260      6162656C 
 4260      00
 4261              		.section	.rodata.lv_list_signal.str1.4,"aMS",%progbits,1
 4262              		.align	2
 4263              	.LC5:
 4264 0000 6C765F6C 		.ascii	"lv_list\000"
 4264      69737400 
 4265              		.text
 4266              	.Letext0:
 4267              		.file 10 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4268              		.file 11 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4269              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 4270              		.file 13 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 4271              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 4272              		.file 15 "lvgl/lv_conf.h"
 4273              		.file 16 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4274              		.file 17 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4275              		.file 18 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 4276              		.file 19 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4277              		.file 20 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_types.h"
 4278              		.file 21 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_mem.h"
 4279              		.file 22 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h"
 4280              		.file 23 "lvgl/src/lv_widgets/../lv_core/lv_style.h"
 4281              		.file 24 "lvgl/src/lv_widgets/../lv_core/../lv_hal/../lv_misc/lv_ll.h"
 4282              		.file 25 "lvgl/src/lv_widgets/../lv_core/../lv_hal/../lv_misc/lv_task.h"
 4283              		.file 26 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_disp.h"
 4284              		.file 27 "lvgl/src/lv_widgets/../lv_core/lv_obj.h"
 4285              		.file 28 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_indev.h"
 4286              		.file 29 "lvgl/src/lv_widgets/../lv_core/../lv_core/lv_group.h"
 4287              		.file 30 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_bidi.h"
 4288              		.file 31 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_txt.h"
 4289              		.file 32 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_label.h"
 4290              		.file 33 "lvgl/src/lv_widgets/lv_label.h"
 4291              		.file 34 "lvgl/src/lv_widgets/../lv_themes/lv_theme.h"
 4292              		.file 35 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4293              		.file 36 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_debug.h"
 4294              		.file 37 "lvgl/src/lv_widgets/../lv_core/lv_indev.h"
 4295              		.file 38 "lvgl/src/lv_widgets/lv_img.h"
ARM GAS  D:\Temp\cc6WWuOg.s 			page 137


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_list.c
  D:\Temp\cc6WWuOg.s:18     .text.lv_list_get_style:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:25     .text.lv_list_get_style:0000000000000000 lv_list_get_style
  D:\Temp\cc6WWuOg.s:124    .text.lv_list_get_style:0000000000000048 $d
  D:\Temp\cc6WWuOg.s:129    .text.lv_list_is_list_label:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:135    .text.lv_list_is_list_label:0000000000000000 lv_list_is_list_label
  D:\Temp\cc6WWuOg.s:213    .text.lv_list_is_list_label:000000000000003c $d
  D:\Temp\cc6WWuOg.s:218    .text.lv_list_is_list_img:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:224    .text.lv_list_is_list_img:0000000000000000 lv_list_is_list_img
  D:\Temp\cc6WWuOg.s:302    .text.lv_list_is_list_img:000000000000003c $d
  D:\Temp\cc6WWuOg.s:307    .text.lv_list_is_list_btn:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:313    .text.lv_list_is_list_btn:0000000000000000 lv_list_is_list_btn
  D:\Temp\cc6WWuOg.s:391    .text.lv_list_is_list_btn:000000000000003c $d
  D:\Temp\cc6WWuOg.s:396    .text.lv_list_clean:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:403    .text.lv_list_clean:0000000000000000 lv_list_clean
  D:\Temp\cc6WWuOg.s:451    .text.lv_list_clean:0000000000000024 $d
  D:\Temp\cc6WWuOg.s:456    .text.lv_list_focus_btn:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:463    .text.lv_list_focus_btn:0000000000000000 lv_list_focus_btn
  D:\Temp\cc6WWuOg.s:571    .text.lv_list_focus_btn:000000000000005c $d
  D:\Temp\cc6WWuOg.s:576    .text.lv_list_get_btn_label:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:583    .text.lv_list_get_btn_label:0000000000000000 lv_list_get_btn_label
  D:\Temp\cc6WWuOg.s:657    .text.lv_list_get_btn_label:000000000000003c $d
  D:\Temp\cc6WWuOg.s:662    .text.lv_list_get_btn_text:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:669    .text.lv_list_get_btn_text:0000000000000000 lv_list_get_btn_text
  D:\Temp\cc6WWuOg.s:727    .text.lv_list_get_btn_text:0000000000000028 $d
  D:\Temp\cc6WWuOg.s:733    .text.lv_list_get_btn_img:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:740    .text.lv_list_get_btn_img:0000000000000000 lv_list_get_btn_img
  D:\Temp\cc6WWuOg.s:814    .text.lv_list_get_btn_img:000000000000003c $d
  D:\Temp\cc6WWuOg.s:819    .text.lv_list_get_prev_btn:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:826    .text.lv_list_get_prev_btn:0000000000000000 lv_list_get_prev_btn
  D:\Temp\cc6WWuOg.s:910    .text.lv_list_get_prev_btn:0000000000000044 $d
  D:\Temp\cc6WWuOg.s:915    .text.lv_list_get_next_btn:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:922    .text.lv_list_get_next_btn:0000000000000000 lv_list_get_next_btn
  D:\Temp\cc6WWuOg.s:1006   .text.lv_list_get_next_btn:0000000000000044 $d
  D:\Temp\cc6WWuOg.s:1011   .text.lv_list_signal:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:1017   .text.lv_list_signal:0000000000000000 lv_list_signal
  D:\Temp\cc6WWuOg.s:1671   .text.lv_list_signal:0000000000000270 $d
  D:\Temp\cc6WWuOg.s:1680   .text.lv_list_remove:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:1687   .text.lv_list_remove:0000000000000000 lv_list_remove
  D:\Temp\cc6WWuOg.s:1817   .text.lv_list_remove:0000000000000068 $d
  D:\Temp\cc6WWuOg.s:1822   .text.lv_list_get_btn_index:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:1829   .text.lv_list_get_btn_index:0000000000000000 lv_list_get_btn_index
  D:\Temp\cc6WWuOg.s:1955   .text.lv_list_get_btn_index:0000000000000064 $d
  D:\Temp\cc6WWuOg.s:1960   .text.lv_list_get_size:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:1967   .text.lv_list_get_size:0000000000000000 lv_list_get_size
  D:\Temp\cc6WWuOg.s:2047   .text.lv_list_get_size:0000000000000038 $d
  D:\Temp\cc6WWuOg.s:2052   .text.lv_list_get_btn_selected:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:2059   .text.lv_list_get_btn_selected:0000000000000000 lv_list_get_btn_selected
  D:\Temp\cc6WWuOg.s:2108   .text.lv_list_get_btn_selected:0000000000000020 $d
  D:\Temp\cc6WWuOg.s:2113   .text.lv_list_btn_signal:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:2119   .text.lv_list_btn_signal:0000000000000000 lv_list_btn_signal
  D:\Temp\cc6WWuOg.s:2491   .text.lv_list_btn_signal:0000000000000138 $d
  D:\Temp\cc6WWuOg.s:2498   .text.lv_list_get_layout:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:2505   .text.lv_list_get_layout:0000000000000000 lv_list_get_layout
  D:\Temp\cc6WWuOg.s:2563   .text.lv_list_get_layout:0000000000000024 $d
  D:\Temp\cc6WWuOg.s:2568   .text.lv_list_add_btn:0000000000000000 $t
ARM GAS  D:\Temp\cc6WWuOg.s 			page 138


  D:\Temp\cc6WWuOg.s:2575   .text.lv_list_add_btn:0000000000000000 lv_list_add_btn
  D:\Temp\cc6WWuOg.s:3072   .text.lv_list_add_btn:00000000000001dc $d
  D:\Temp\cc6WWuOg.s:3082   .text.lv_list_create:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:3089   .text.lv_list_create:0000000000000000 lv_list_create
  D:\Temp\cc6WWuOg.s:3381   .text.lv_list_create:00000000000000fc $d
  D:\Temp\cc6WWuOg.s:3388   .text.lv_list_set_layout:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:3395   .text.lv_list_set_layout:0000000000000000 lv_list_set_layout
  D:\Temp\cc6WWuOg.s:3656   .text.lv_list_set_layout:00000000000000c4 $d
  D:\Temp\cc6WWuOg.s:3663   .text.lv_list_up:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:3670   .text.lv_list_up:0000000000000000 lv_list_up
  D:\Temp\cc6WWuOg.s:3902   .text.lv_list_up:00000000000000ac $d
  D:\Temp\cc6WWuOg.s:3910   .text.lv_list_down:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:3917   .text.lv_list_down:0000000000000000 lv_list_down
  D:\Temp\cc6WWuOg.s:4113   .text.lv_list_down:0000000000000084 $d
  D:\Temp\cc6WWuOg.s:4121   .text.lv_list_focus:0000000000000000 $t
  D:\Temp\cc6WWuOg.s:4128   .text.lv_list_focus:0000000000000000 lv_list_focus
  D:\Temp\cc6WWuOg.s:4205   .text.lv_list_focus:000000000000003c $d
  D:\Temp\cc6WWuOg.s:4210   .bss.ancestor_btn_signal:0000000000000000 $d
  D:\Temp\cc6WWuOg.s:4214   .bss.ancestor_btn_signal:0000000000000000 ancestor_btn_signal
  D:\Temp\cc6WWuOg.s:4217   .bss.ancestor_page_signal:0000000000000000 $d
  D:\Temp\cc6WWuOg.s:4221   .bss.ancestor_page_signal:0000000000000000 ancestor_page_signal
  D:\Temp\cc6WWuOg.s:4224   .bss.img_signal:0000000000000000 $d
  D:\Temp\cc6WWuOg.s:4228   .bss.img_signal:0000000000000000 img_signal
  D:\Temp\cc6WWuOg.s:4231   .bss.label_signal:0000000000000000 $d
  D:\Temp\cc6WWuOg.s:4235   .bss.label_signal:0000000000000000 label_signal
  D:\Temp\cc6WWuOg.s:4238   .rodata.lv_list_create.str1.4:0000000000000000 $d
  D:\Temp\cc6WWuOg.s:4242   .rodata.lv_list_get_btn_text.str1.4:0000000000000000 $d
  D:\Temp\cc6WWuOg.s:4246   .rodata.lv_list_get_style.str1.4:0000000000000000 $d
  D:\Temp\cc6WWuOg.s:4250   .rodata.lv_list_is_list_btn.str1.4:0000000000000000 $d
  D:\Temp\cc6WWuOg.s:4254   .rodata.lv_list_is_list_img.str1.4:0000000000000000 $d
  D:\Temp\cc6WWuOg.s:4258   .rodata.lv_list_is_list_label.str1.4:0000000000000000 $d
  D:\Temp\cc6WWuOg.s:4262   .rodata.lv_list_signal.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
lv_debug_check_null
lv_debug_log_error
lv_obj_get_ext_attr
lv_obj_get_type
strcmp
lv_page_get_scrollable
lv_obj_clean
lv_obj_clear_state
lv_obj_add_state
lv_page_focus
lv_obj_get_child_back
lv_label_get_text
lv_obj_get_child
lv_event_send
lv_obj_handle_get_type_signal
lv_indev_get_act
lv_indev_get_type
lv_obj_get_group
lv_group_get_editing
lv_signal_send
lv_indev_is_dragging
lv_obj_del
lv_obj_get_parent
ARM GAS  D:\Temp\cc6WWuOg.s 			page 139


lv_obj_get_width
_lv_obj_get_style_ptr
lv_obj_get_base_dir
_lv_obj_get_style_int
lv_obj_set_size
lv_obj_get_height
lv_group_focus_obj
lv_cont_get_layout
lv_obj_get_x
lv_obj_get_y
lv_obj_add_protect
lv_btn_create
lv_theme_apply
lv_page_glue_obj
lv_cont_set_layout
lv_cont_set_fit4
lv_obj_set_width
lv_obj_set_signal_cb
lv_img_create
lv_img_set_src
lv_obj_set_click
lv_label_create
lv_label_set_text
lv_label_set_long_mode
lv_obj_clear_protect
lv_obj_set_pos
lv_obj_get_signal_cb
lv_group_get_focused
lv_page_create
lv_obj_allocate_ext_attr
lv_page_set_anim_time
lv_page_set_scrollbar_mode
lv_img_get_src
lv_obj_refresh_style
lv_page_get_anim_time
lv_obj_set_y
lv_anim_init
lv_anim_start
