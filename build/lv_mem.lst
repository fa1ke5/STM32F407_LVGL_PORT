ARM GAS  D:\Temp\ccGtTw4W.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_mem.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ent_get_next,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	ent_get_next:
  26              	.LVL0:
  27              	.LFB183:
  28              		.file 1 "lvgl/src/lv_misc/lv_mem.c"
   1:lvgl/src/lv_misc/lv_mem.c **** /**
   2:lvgl/src/lv_misc/lv_mem.c ****  * @file lv_mem.c
   3:lvgl/src/lv_misc/lv_mem.c ****  * General and portable implementation of malloc and free.
   4:lvgl/src/lv_misc/lv_mem.c ****  * The dynamic memory monitoring is also supported.
   5:lvgl/src/lv_misc/lv_mem.c ****  */
   6:lvgl/src/lv_misc/lv_mem.c **** 
   7:lvgl/src/lv_misc/lv_mem.c **** /*********************
   8:lvgl/src/lv_misc/lv_mem.c ****  *      INCLUDES
   9:lvgl/src/lv_misc/lv_mem.c ****  *********************/
  10:lvgl/src/lv_misc/lv_mem.c **** #include "lv_mem.h"
  11:lvgl/src/lv_misc/lv_mem.c **** #include "lv_math.h"
  12:lvgl/src/lv_misc/lv_mem.c **** #include "lv_gc.h"
  13:lvgl/src/lv_misc/lv_mem.c **** #include <string.h>
  14:lvgl/src/lv_misc/lv_mem.c **** 
  15:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM != 0
  16:lvgl/src/lv_misc/lv_mem.c ****     #include LV_MEM_CUSTOM_INCLUDE
  17:lvgl/src/lv_misc/lv_mem.c **** #endif
  18:lvgl/src/lv_misc/lv_mem.c **** 
  19:lvgl/src/lv_misc/lv_mem.c **** /*********************
  20:lvgl/src/lv_misc/lv_mem.c ****  *      DEFINES
  21:lvgl/src/lv_misc/lv_mem.c ****  *********************/
  22:lvgl/src/lv_misc/lv_mem.c **** /*Add memory junk on alloc (0xaa) and free(0xbb) (just for testing purposes)*/
  23:lvgl/src/lv_misc/lv_mem.c **** #ifndef LV_MEM_ADD_JUNK
  24:lvgl/src/lv_misc/lv_mem.c ****     #define LV_MEM_ADD_JUNK 0
  25:lvgl/src/lv_misc/lv_mem.c **** #endif
  26:lvgl/src/lv_misc/lv_mem.c **** 
  27:lvgl/src/lv_misc/lv_mem.c **** #ifndef LV_MEM_FULL_DEFRAG_CNT
  28:lvgl/src/lv_misc/lv_mem.c ****     #define LV_MEM_FULL_DEFRAG_CNT 16
  29:lvgl/src/lv_misc/lv_mem.c **** #endif
  30:lvgl/src/lv_misc/lv_mem.c **** 
ARM GAS  D:\Temp\ccGtTw4W.s 			page 2


  31:lvgl/src/lv_misc/lv_mem.c **** #ifdef LV_ARCH_64
  32:lvgl/src/lv_misc/lv_mem.c ****     #define MEM_UNIT uint64_t
  33:lvgl/src/lv_misc/lv_mem.c **** #else
  34:lvgl/src/lv_misc/lv_mem.c ****     #define MEM_UNIT uint32_t
  35:lvgl/src/lv_misc/lv_mem.c **** #endif
  36:lvgl/src/lv_misc/lv_mem.c **** 
  37:lvgl/src/lv_misc/lv_mem.c **** /**********************
  38:lvgl/src/lv_misc/lv_mem.c ****  *      TYPEDEFS
  39:lvgl/src/lv_misc/lv_mem.c ****  **********************/
  40:lvgl/src/lv_misc/lv_mem.c **** 
  41:lvgl/src/lv_misc/lv_mem.c **** #if LV_ENABLE_GC == 0 /*gc custom allocations must not include header*/
  42:lvgl/src/lv_misc/lv_mem.c **** 
  43:lvgl/src/lv_misc/lv_mem.c **** /*The size of this union must be 4/8 bytes (uint32_t/uint64_t)*/
  44:lvgl/src/lv_misc/lv_mem.c **** typedef union {
  45:lvgl/src/lv_misc/lv_mem.c ****     struct {
  46:lvgl/src/lv_misc/lv_mem.c ****         MEM_UNIT used : 1;    /* 1: if the entry is used*/
  47:lvgl/src/lv_misc/lv_mem.c ****         MEM_UNIT d_size : 31; /* Size of the data*/
  48:lvgl/src/lv_misc/lv_mem.c ****     } s;
  49:lvgl/src/lv_misc/lv_mem.c ****     MEM_UNIT header; /* The header (used + d_size)*/
  50:lvgl/src/lv_misc/lv_mem.c **** } lv_mem_header_t;
  51:lvgl/src/lv_misc/lv_mem.c **** 
  52:lvgl/src/lv_misc/lv_mem.c **** typedef struct {
  53:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_header_t header;
  54:lvgl/src/lv_misc/lv_mem.c ****     uint8_t first_data; /*First data byte in the allocated data (Just for easily create a pointer)*
  55:lvgl/src/lv_misc/lv_mem.c **** } lv_mem_ent_t;
  56:lvgl/src/lv_misc/lv_mem.c **** 
  57:lvgl/src/lv_misc/lv_mem.c **** #endif /* LV_ENABLE_GC */
  58:lvgl/src/lv_misc/lv_mem.c **** 
  59:lvgl/src/lv_misc/lv_mem.c **** #ifdef LV_ARCH_64
  60:lvgl/src/lv_misc/lv_mem.c ****     #define ALIGN_MASK 0x7
  61:lvgl/src/lv_misc/lv_mem.c **** #else
  62:lvgl/src/lv_misc/lv_mem.c ****     #define ALIGN_MASK 0x3
  63:lvgl/src/lv_misc/lv_mem.c **** #endif
  64:lvgl/src/lv_misc/lv_mem.c **** 
  65:lvgl/src/lv_misc/lv_mem.c **** #define MEM_BUF_SMALL_SIZE 16
  66:lvgl/src/lv_misc/lv_mem.c **** 
  67:lvgl/src/lv_misc/lv_mem.c **** /**********************
  68:lvgl/src/lv_misc/lv_mem.c ****  *  STATIC PROTOTYPES
  69:lvgl/src/lv_misc/lv_mem.c ****  **********************/
  70:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
  71:lvgl/src/lv_misc/lv_mem.c ****     static lv_mem_ent_t * ent_get_next(lv_mem_ent_t * act_e);
  72:lvgl/src/lv_misc/lv_mem.c ****     static void * ent_alloc(lv_mem_ent_t * e, size_t size);
  73:lvgl/src/lv_misc/lv_mem.c ****     static void ent_trunc(lv_mem_ent_t * e, size_t size);
  74:lvgl/src/lv_misc/lv_mem.c **** #endif
  75:lvgl/src/lv_misc/lv_mem.c **** 
  76:lvgl/src/lv_misc/lv_mem.c **** /**********************
  77:lvgl/src/lv_misc/lv_mem.c ****  *  STATIC VARIABLES
  78:lvgl/src/lv_misc/lv_mem.c ****  **********************/
  79:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
  80:lvgl/src/lv_misc/lv_mem.c ****     static uint8_t * work_mem;
  81:lvgl/src/lv_misc/lv_mem.c **** #endif
  82:lvgl/src/lv_misc/lv_mem.c **** 
  83:lvgl/src/lv_misc/lv_mem.c **** static uint32_t zero_mem; /*Give the address of this variable if 0 byte should be allocated*/
  84:lvgl/src/lv_misc/lv_mem.c **** 
  85:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
  86:lvgl/src/lv_misc/lv_mem.c ****     static uint32_t mem_max_size; /*Tracks the maximum total size of memory ever used from the inte
  87:lvgl/src/lv_misc/lv_mem.c **** #endif
ARM GAS  D:\Temp\ccGtTw4W.s 			page 3


  88:lvgl/src/lv_misc/lv_mem.c **** 
  89:lvgl/src/lv_misc/lv_mem.c **** static uint8_t mem_buf1_32[MEM_BUF_SMALL_SIZE];
  90:lvgl/src/lv_misc/lv_mem.c **** static uint8_t mem_buf2_32[MEM_BUF_SMALL_SIZE];
  91:lvgl/src/lv_misc/lv_mem.c **** 
  92:lvgl/src/lv_misc/lv_mem.c **** static lv_mem_buf_t mem_buf_small[] = {{.p = mem_buf1_32, .size = MEM_BUF_SMALL_SIZE, .used = 0},
  93:lvgl/src/lv_misc/lv_mem.c ****     {.p = mem_buf2_32, .size = MEM_BUF_SMALL_SIZE, .used = 0}
  94:lvgl/src/lv_misc/lv_mem.c **** };
  95:lvgl/src/lv_misc/lv_mem.c **** 
  96:lvgl/src/lv_misc/lv_mem.c **** /**********************
  97:lvgl/src/lv_misc/lv_mem.c ****  *      MACROS
  98:lvgl/src/lv_misc/lv_mem.c ****  **********************/
  99:lvgl/src/lv_misc/lv_mem.c **** 
 100:lvgl/src/lv_misc/lv_mem.c **** #define COPY32 *d32 = *s32; d32++; s32++;
 101:lvgl/src/lv_misc/lv_mem.c **** #define COPY8 *d8 = *s8; d8++; s8++;
 102:lvgl/src/lv_misc/lv_mem.c **** #define SET32(x) *d32 = x; d32++;
 103:lvgl/src/lv_misc/lv_mem.c **** #define SET8(x) *d8 = x; d8++;
 104:lvgl/src/lv_misc/lv_mem.c **** #define REPEAT8(expr) expr expr expr expr expr expr expr expr
 105:lvgl/src/lv_misc/lv_mem.c **** 
 106:lvgl/src/lv_misc/lv_mem.c **** /**********************
 107:lvgl/src/lv_misc/lv_mem.c ****  *   GLOBAL FUNCTIONS
 108:lvgl/src/lv_misc/lv_mem.c ****  **********************/
 109:lvgl/src/lv_misc/lv_mem.c **** 
 110:lvgl/src/lv_misc/lv_mem.c **** /**
 111:lvgl/src/lv_misc/lv_mem.c ****  * Initialize the dyn_mem module (work memory and other variables)
 112:lvgl/src/lv_misc/lv_mem.c ****  */
 113:lvgl/src/lv_misc/lv_mem.c **** void _lv_mem_init(void)
 114:lvgl/src/lv_misc/lv_mem.c **** {
 115:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 116:lvgl/src/lv_misc/lv_mem.c **** 
 117:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_ADR == 0
 118:lvgl/src/lv_misc/lv_mem.c ****     /*Allocate a large array to store the dynamically allocated data*/
 119:lvgl/src/lv_misc/lv_mem.c ****     static LV_MEM_ATTR MEM_UNIT work_mem_int[LV_MEM_SIZE / sizeof(MEM_UNIT)];
 120:lvgl/src/lv_misc/lv_mem.c ****     work_mem = (uint8_t *)work_mem_int;
 121:lvgl/src/lv_misc/lv_mem.c **** #else
 122:lvgl/src/lv_misc/lv_mem.c ****     work_mem = (uint8_t *)LV_MEM_ADR;
 123:lvgl/src/lv_misc/lv_mem.c **** #endif
 124:lvgl/src/lv_misc/lv_mem.c **** 
 125:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_ent_t * full = (lv_mem_ent_t *)work_mem;
 126:lvgl/src/lv_misc/lv_mem.c ****     full->header.s.used = 0;
 127:lvgl/src/lv_misc/lv_mem.c ****     /*The total mem size reduced by the first header and the close patterns */
 128:lvgl/src/lv_misc/lv_mem.c ****     full->header.s.d_size = LV_MEM_SIZE - sizeof(lv_mem_header_t);
 129:lvgl/src/lv_misc/lv_mem.c **** #endif
 130:lvgl/src/lv_misc/lv_mem.c **** }
 131:lvgl/src/lv_misc/lv_mem.c **** 
 132:lvgl/src/lv_misc/lv_mem.c **** /**
 133:lvgl/src/lv_misc/lv_mem.c ****  * Clean up the memory buffer which frees all the allocated memories.
 134:lvgl/src/lv_misc/lv_mem.c ****  * @note It work only if `LV_MEM_CUSTOM == 0`
 135:lvgl/src/lv_misc/lv_mem.c ****  */
 136:lvgl/src/lv_misc/lv_mem.c **** void _lv_mem_deinit(void)
 137:lvgl/src/lv_misc/lv_mem.c **** {
 138:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 139:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_ent_t * full = (lv_mem_ent_t *)work_mem;
 140:lvgl/src/lv_misc/lv_mem.c ****     full->header.s.used = 0;
 141:lvgl/src/lv_misc/lv_mem.c ****     /*The total mem size reduced by the first header and the close patterns */
 142:lvgl/src/lv_misc/lv_mem.c ****     full->header.s.d_size = LV_MEM_SIZE - sizeof(lv_mem_header_t);
 143:lvgl/src/lv_misc/lv_mem.c **** #endif
 144:lvgl/src/lv_misc/lv_mem.c **** }
ARM GAS  D:\Temp\ccGtTw4W.s 			page 4


 145:lvgl/src/lv_misc/lv_mem.c **** 
 146:lvgl/src/lv_misc/lv_mem.c **** /**
 147:lvgl/src/lv_misc/lv_mem.c ****  * Allocate a memory dynamically
 148:lvgl/src/lv_misc/lv_mem.c ****  * @param size size of the memory to allocate in bytes
 149:lvgl/src/lv_misc/lv_mem.c ****  * @return pointer to the allocated memory
 150:lvgl/src/lv_misc/lv_mem.c ****  */
 151:lvgl/src/lv_misc/lv_mem.c **** void * lv_mem_alloc(size_t size)
 152:lvgl/src/lv_misc/lv_mem.c **** {
 153:lvgl/src/lv_misc/lv_mem.c ****     if(size == 0) {
 154:lvgl/src/lv_misc/lv_mem.c ****         return &zero_mem;
 155:lvgl/src/lv_misc/lv_mem.c ****     }
 156:lvgl/src/lv_misc/lv_mem.c **** 
 157:lvgl/src/lv_misc/lv_mem.c ****     /*Round the size up to ALIGN_MASK*/
 158:lvgl/src/lv_misc/lv_mem.c ****     size = (size + ALIGN_MASK) & (~ALIGN_MASK);
 159:lvgl/src/lv_misc/lv_mem.c ****     void * alloc = NULL;
 160:lvgl/src/lv_misc/lv_mem.c **** 
 161:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 162:lvgl/src/lv_misc/lv_mem.c ****     /*Use the built-in allocators*/
 163:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_ent_t * e = NULL;
 164:lvgl/src/lv_misc/lv_mem.c **** 
 165:lvgl/src/lv_misc/lv_mem.c ****     /* Search for a appropriate entry*/
 166:lvgl/src/lv_misc/lv_mem.c ****     do {
 167:lvgl/src/lv_misc/lv_mem.c ****         /* Get the next entry*/
 168:lvgl/src/lv_misc/lv_mem.c ****         e = ent_get_next(e);
 169:lvgl/src/lv_misc/lv_mem.c **** 
 170:lvgl/src/lv_misc/lv_mem.c ****         /*If there is next entry then try to allocate there*/
 171:lvgl/src/lv_misc/lv_mem.c ****         if(e != NULL) {
 172:lvgl/src/lv_misc/lv_mem.c ****             alloc = ent_alloc(e, size);
 173:lvgl/src/lv_misc/lv_mem.c ****         }
 174:lvgl/src/lv_misc/lv_mem.c ****         /* End if there is not next entry OR the alloc. is successful*/
 175:lvgl/src/lv_misc/lv_mem.c ****     } while(e != NULL && alloc == NULL);
 176:lvgl/src/lv_misc/lv_mem.c **** 
 177:lvgl/src/lv_misc/lv_mem.c **** #else
 178:lvgl/src/lv_misc/lv_mem.c ****     /*Use custom, user defined malloc function*/
 179:lvgl/src/lv_misc/lv_mem.c **** #if LV_ENABLE_GC == 1 /*gc must not include header*/
 180:lvgl/src/lv_misc/lv_mem.c ****     alloc = LV_MEM_CUSTOM_ALLOC(size);
 181:lvgl/src/lv_misc/lv_mem.c **** #else                 /* LV_ENABLE_GC */
 182:lvgl/src/lv_misc/lv_mem.c ****     /*Allocate a header too to store the size*/
 183:lvgl/src/lv_misc/lv_mem.c ****     alloc = LV_MEM_CUSTOM_ALLOC(size + sizeof(lv_mem_header_t));
 184:lvgl/src/lv_misc/lv_mem.c ****     if(alloc != NULL) {
 185:lvgl/src/lv_misc/lv_mem.c ****         ((lv_mem_ent_t *)alloc)->header.s.d_size = size;
 186:lvgl/src/lv_misc/lv_mem.c ****         ((lv_mem_ent_t *)alloc)->header.s.used   = 1;
 187:lvgl/src/lv_misc/lv_mem.c **** 
 188:lvgl/src/lv_misc/lv_mem.c ****         alloc = &((lv_mem_ent_t *)alloc)->first_data;
 189:lvgl/src/lv_misc/lv_mem.c ****     }
 190:lvgl/src/lv_misc/lv_mem.c **** #endif                /* LV_ENABLE_GC */
 191:lvgl/src/lv_misc/lv_mem.c **** #endif                /* LV_MEM_CUSTOM */
 192:lvgl/src/lv_misc/lv_mem.c **** 
 193:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_ADD_JUNK
 194:lvgl/src/lv_misc/lv_mem.c ****     if(alloc != NULL) _lv_memset(alloc, 0xaa, size);
 195:lvgl/src/lv_misc/lv_mem.c **** #endif
 196:lvgl/src/lv_misc/lv_mem.c **** 
 197:lvgl/src/lv_misc/lv_mem.c ****     if(alloc == NULL) {
 198:lvgl/src/lv_misc/lv_mem.c ****         LV_LOG_WARN("Couldn't allocate memory");
 199:lvgl/src/lv_misc/lv_mem.c ****     }
 200:lvgl/src/lv_misc/lv_mem.c ****     else {
 201:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
ARM GAS  D:\Temp\ccGtTw4W.s 			page 5


 202:lvgl/src/lv_misc/lv_mem.c ****         /* just a safety check, should always be true */
 203:lvgl/src/lv_misc/lv_mem.c ****         if((uintptr_t) alloc > (uintptr_t) work_mem) {
 204:lvgl/src/lv_misc/lv_mem.c ****             if((((uintptr_t) alloc - (uintptr_t) work_mem) + size) > mem_max_size) {
 205:lvgl/src/lv_misc/lv_mem.c ****                 mem_max_size = ((uintptr_t) alloc - (uintptr_t) work_mem) + size;
 206:lvgl/src/lv_misc/lv_mem.c ****             }
 207:lvgl/src/lv_misc/lv_mem.c ****         }
 208:lvgl/src/lv_misc/lv_mem.c **** #endif
 209:lvgl/src/lv_misc/lv_mem.c ****     }
 210:lvgl/src/lv_misc/lv_mem.c **** 
 211:lvgl/src/lv_misc/lv_mem.c ****     return alloc;
 212:lvgl/src/lv_misc/lv_mem.c **** }
 213:lvgl/src/lv_misc/lv_mem.c **** 
 214:lvgl/src/lv_misc/lv_mem.c **** /**
 215:lvgl/src/lv_misc/lv_mem.c ****  * Free an allocated data
 216:lvgl/src/lv_misc/lv_mem.c ****  * @param data pointer to an allocated memory
 217:lvgl/src/lv_misc/lv_mem.c ****  */
 218:lvgl/src/lv_misc/lv_mem.c **** void lv_mem_free(const void * data)
 219:lvgl/src/lv_misc/lv_mem.c **** {
 220:lvgl/src/lv_misc/lv_mem.c ****     if(data == &zero_mem) return;
 221:lvgl/src/lv_misc/lv_mem.c ****     if(data == NULL) return;
 222:lvgl/src/lv_misc/lv_mem.c **** 
 223:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_ADD_JUNK
 224:lvgl/src/lv_misc/lv_mem.c ****     _lv_memset((void *)data, 0xbb, _lv_mem_get_size(data));
 225:lvgl/src/lv_misc/lv_mem.c **** #endif
 226:lvgl/src/lv_misc/lv_mem.c **** 
 227:lvgl/src/lv_misc/lv_mem.c **** #if LV_ENABLE_GC == 0
 228:lvgl/src/lv_misc/lv_mem.c ****     /*e points to the header*/
 229:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_ent_t * e = (lv_mem_ent_t *)((uint8_t *)data - sizeof(lv_mem_header_t));
 230:lvgl/src/lv_misc/lv_mem.c ****     e->header.s.used = 0;
 231:lvgl/src/lv_misc/lv_mem.c **** #endif
 232:lvgl/src/lv_misc/lv_mem.c **** 
 233:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 234:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_AUTO_DEFRAG
 235:lvgl/src/lv_misc/lv_mem.c ****     static uint16_t full_defrag_cnt = 0;
 236:lvgl/src/lv_misc/lv_mem.c ****     full_defrag_cnt++;
 237:lvgl/src/lv_misc/lv_mem.c ****     if(full_defrag_cnt < LV_MEM_FULL_DEFRAG_CNT) {
 238:lvgl/src/lv_misc/lv_mem.c ****         /* Make a simple defrag.
 239:lvgl/src/lv_misc/lv_mem.c ****          * Join the following free entries after this*/
 240:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_ent_t * e_next;
 241:lvgl/src/lv_misc/lv_mem.c ****         e_next = ent_get_next(e);
 242:lvgl/src/lv_misc/lv_mem.c ****         while(e_next != NULL) {
 243:lvgl/src/lv_misc/lv_mem.c ****             if(e_next->header.s.used == 0) {
 244:lvgl/src/lv_misc/lv_mem.c ****                 e->header.s.d_size += e_next->header.s.d_size + sizeof(e->header);
 245:lvgl/src/lv_misc/lv_mem.c ****             }
 246:lvgl/src/lv_misc/lv_mem.c ****             else {
 247:lvgl/src/lv_misc/lv_mem.c ****                 break;
 248:lvgl/src/lv_misc/lv_mem.c ****             }
 249:lvgl/src/lv_misc/lv_mem.c ****             e_next = ent_get_next(e_next);
 250:lvgl/src/lv_misc/lv_mem.c ****         }
 251:lvgl/src/lv_misc/lv_mem.c ****     }
 252:lvgl/src/lv_misc/lv_mem.c ****     else {
 253:lvgl/src/lv_misc/lv_mem.c ****         full_defrag_cnt = 0;
 254:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_defrag();
 255:lvgl/src/lv_misc/lv_mem.c **** 
 256:lvgl/src/lv_misc/lv_mem.c ****     }
 257:lvgl/src/lv_misc/lv_mem.c **** #endif /*LV_MEM_AUTO_DEFRAG*/
 258:lvgl/src/lv_misc/lv_mem.c **** #else /*Use custom, user defined free function*/
ARM GAS  D:\Temp\ccGtTw4W.s 			page 6


 259:lvgl/src/lv_misc/lv_mem.c **** #if LV_ENABLE_GC == 0
 260:lvgl/src/lv_misc/lv_mem.c ****     LV_MEM_CUSTOM_FREE(e);
 261:lvgl/src/lv_misc/lv_mem.c **** #else
 262:lvgl/src/lv_misc/lv_mem.c ****     LV_MEM_CUSTOM_FREE((void *)data);
 263:lvgl/src/lv_misc/lv_mem.c **** #endif /*LV_ENABLE_GC*/
 264:lvgl/src/lv_misc/lv_mem.c **** #endif
 265:lvgl/src/lv_misc/lv_mem.c **** }
 266:lvgl/src/lv_misc/lv_mem.c **** 
 267:lvgl/src/lv_misc/lv_mem.c **** /**
 268:lvgl/src/lv_misc/lv_mem.c ****  * Reallocate a memory with a new size. The old content will be kept.
 269:lvgl/src/lv_misc/lv_mem.c ****  * @param data pointer to an allocated memory.
 270:lvgl/src/lv_misc/lv_mem.c ****  * Its content will be copied to the new memory block and freed
 271:lvgl/src/lv_misc/lv_mem.c ****  * @param new_size the desired new size in byte
 272:lvgl/src/lv_misc/lv_mem.c ****  * @return pointer to the new memory
 273:lvgl/src/lv_misc/lv_mem.c ****  */
 274:lvgl/src/lv_misc/lv_mem.c **** 
 275:lvgl/src/lv_misc/lv_mem.c **** #if LV_ENABLE_GC == 0
 276:lvgl/src/lv_misc/lv_mem.c **** 
 277:lvgl/src/lv_misc/lv_mem.c **** void * lv_mem_realloc(void * data_p, size_t new_size)
 278:lvgl/src/lv_misc/lv_mem.c **** {
 279:lvgl/src/lv_misc/lv_mem.c ****     /*Round the size up to ALIGN_MASK*/
 280:lvgl/src/lv_misc/lv_mem.c ****     new_size = (new_size + ALIGN_MASK) & (~ALIGN_MASK);
 281:lvgl/src/lv_misc/lv_mem.c **** 
 282:lvgl/src/lv_misc/lv_mem.c ****     /*data_p could be previously freed pointer (in this case it is invalid)*/
 283:lvgl/src/lv_misc/lv_mem.c ****     if(data_p != NULL) {
 284:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_ent_t * e = (lv_mem_ent_t *)((uint8_t *)data_p - sizeof(lv_mem_header_t));
 285:lvgl/src/lv_misc/lv_mem.c ****         if(e->header.s.used == 0) {
 286:lvgl/src/lv_misc/lv_mem.c ****             data_p = NULL;
 287:lvgl/src/lv_misc/lv_mem.c ****         }
 288:lvgl/src/lv_misc/lv_mem.c ****     }
 289:lvgl/src/lv_misc/lv_mem.c **** 
 290:lvgl/src/lv_misc/lv_mem.c ****     uint32_t old_size = _lv_mem_get_size(data_p);
 291:lvgl/src/lv_misc/lv_mem.c ****     if(old_size == new_size) return data_p; /*Also avoid reallocating the same memory*/
 292:lvgl/src/lv_misc/lv_mem.c **** 
 293:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 294:lvgl/src/lv_misc/lv_mem.c ****     /* Truncate the memory if the new size is smaller. */
 295:lvgl/src/lv_misc/lv_mem.c ****     if(new_size < old_size) {
 296:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_ent_t * e = (lv_mem_ent_t *)((uint8_t *)data_p - sizeof(lv_mem_header_t));
 297:lvgl/src/lv_misc/lv_mem.c ****         ent_trunc(e, new_size);
 298:lvgl/src/lv_misc/lv_mem.c ****         return &e->first_data;
 299:lvgl/src/lv_misc/lv_mem.c ****     }
 300:lvgl/src/lv_misc/lv_mem.c **** #endif
 301:lvgl/src/lv_misc/lv_mem.c **** 
 302:lvgl/src/lv_misc/lv_mem.c ****     void * new_p;
 303:lvgl/src/lv_misc/lv_mem.c ****     new_p = lv_mem_alloc(new_size);
 304:lvgl/src/lv_misc/lv_mem.c ****     if(new_p == NULL) {
 305:lvgl/src/lv_misc/lv_mem.c ****         LV_LOG_WARN("Couldn't allocate memory");
 306:lvgl/src/lv_misc/lv_mem.c ****         return NULL;
 307:lvgl/src/lv_misc/lv_mem.c ****     }
 308:lvgl/src/lv_misc/lv_mem.c **** 
 309:lvgl/src/lv_misc/lv_mem.c ****     if(data_p != NULL) {
 310:lvgl/src/lv_misc/lv_mem.c ****         /*Copy the old data to the new. Use the smaller size*/
 311:lvgl/src/lv_misc/lv_mem.c ****         if(old_size != 0 && new_size != 0) {
 312:lvgl/src/lv_misc/lv_mem.c ****             _lv_memcpy(new_p, data_p, LV_MATH_MIN(new_size, old_size));
 313:lvgl/src/lv_misc/lv_mem.c ****         }
 314:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_free(data_p);
 315:lvgl/src/lv_misc/lv_mem.c ****     }
ARM GAS  D:\Temp\ccGtTw4W.s 			page 7


 316:lvgl/src/lv_misc/lv_mem.c **** 
 317:lvgl/src/lv_misc/lv_mem.c ****     return new_p;
 318:lvgl/src/lv_misc/lv_mem.c **** }
 319:lvgl/src/lv_misc/lv_mem.c **** 
 320:lvgl/src/lv_misc/lv_mem.c **** #else /* LV_ENABLE_GC */
 321:lvgl/src/lv_misc/lv_mem.c **** 
 322:lvgl/src/lv_misc/lv_mem.c **** void * lv_mem_realloc(void * data_p, size_t new_size)
 323:lvgl/src/lv_misc/lv_mem.c **** {
 324:lvgl/src/lv_misc/lv_mem.c ****     void * new_p = LV_MEM_CUSTOM_REALLOC(data_p, new_size);
 325:lvgl/src/lv_misc/lv_mem.c ****     if(new_p == NULL) LV_LOG_WARN("Couldn't allocate memory");
 326:lvgl/src/lv_misc/lv_mem.c ****     return new_p;
 327:lvgl/src/lv_misc/lv_mem.c **** }
 328:lvgl/src/lv_misc/lv_mem.c **** 
 329:lvgl/src/lv_misc/lv_mem.c **** #endif /* lv_enable_gc */
 330:lvgl/src/lv_misc/lv_mem.c **** 
 331:lvgl/src/lv_misc/lv_mem.c **** /**
 332:lvgl/src/lv_misc/lv_mem.c ****  * Join the adjacent free memory blocks
 333:lvgl/src/lv_misc/lv_mem.c ****  */
 334:lvgl/src/lv_misc/lv_mem.c **** void lv_mem_defrag(void)
 335:lvgl/src/lv_misc/lv_mem.c **** {
 336:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 337:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_ent_t * e_free;
 338:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_ent_t * e_next;
 339:lvgl/src/lv_misc/lv_mem.c ****     e_free = ent_get_next(NULL);
 340:lvgl/src/lv_misc/lv_mem.c **** 
 341:lvgl/src/lv_misc/lv_mem.c ****     while(1) {
 342:lvgl/src/lv_misc/lv_mem.c ****         /*Search the next free entry*/
 343:lvgl/src/lv_misc/lv_mem.c ****         while(e_free != NULL) {
 344:lvgl/src/lv_misc/lv_mem.c ****             if(e_free->header.s.used != 0) {
 345:lvgl/src/lv_misc/lv_mem.c ****                 e_free = ent_get_next(e_free);
 346:lvgl/src/lv_misc/lv_mem.c ****             }
 347:lvgl/src/lv_misc/lv_mem.c ****             else {
 348:lvgl/src/lv_misc/lv_mem.c ****                 break;
 349:lvgl/src/lv_misc/lv_mem.c ****             }
 350:lvgl/src/lv_misc/lv_mem.c ****         }
 351:lvgl/src/lv_misc/lv_mem.c **** 
 352:lvgl/src/lv_misc/lv_mem.c ****         if(e_free == NULL) return;
 353:lvgl/src/lv_misc/lv_mem.c **** 
 354:lvgl/src/lv_misc/lv_mem.c ****         /*Joint the following free entries to the free*/
 355:lvgl/src/lv_misc/lv_mem.c ****         e_next = ent_get_next(e_free);
 356:lvgl/src/lv_misc/lv_mem.c ****         while(e_next != NULL) {
 357:lvgl/src/lv_misc/lv_mem.c ****             if(e_next->header.s.used == 0) {
 358:lvgl/src/lv_misc/lv_mem.c ****                 e_free->header.s.d_size += e_next->header.s.d_size + sizeof(e_next->header);
 359:lvgl/src/lv_misc/lv_mem.c ****             }
 360:lvgl/src/lv_misc/lv_mem.c ****             else {
 361:lvgl/src/lv_misc/lv_mem.c ****                 break;
 362:lvgl/src/lv_misc/lv_mem.c ****             }
 363:lvgl/src/lv_misc/lv_mem.c **** 
 364:lvgl/src/lv_misc/lv_mem.c ****             e_next = ent_get_next(e_next);
 365:lvgl/src/lv_misc/lv_mem.c ****         }
 366:lvgl/src/lv_misc/lv_mem.c **** 
 367:lvgl/src/lv_misc/lv_mem.c ****         if(e_next == NULL) return;
 368:lvgl/src/lv_misc/lv_mem.c **** 
 369:lvgl/src/lv_misc/lv_mem.c ****         /*Continue from the lastly checked entry*/
 370:lvgl/src/lv_misc/lv_mem.c ****         e_free = e_next;
 371:lvgl/src/lv_misc/lv_mem.c ****     }
 372:lvgl/src/lv_misc/lv_mem.c **** #endif
ARM GAS  D:\Temp\ccGtTw4W.s 			page 8


 373:lvgl/src/lv_misc/lv_mem.c **** }
 374:lvgl/src/lv_misc/lv_mem.c **** 
 375:lvgl/src/lv_misc/lv_mem.c **** lv_res_t lv_mem_test(void)
 376:lvgl/src/lv_misc/lv_mem.c **** {
 377:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 378:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_ent_t * e;
 379:lvgl/src/lv_misc/lv_mem.c ****     e = ent_get_next(NULL);
 380:lvgl/src/lv_misc/lv_mem.c ****     while(e) {
 381:lvgl/src/lv_misc/lv_mem.c ****         if(e->header.s.d_size > LV_MEM_SIZE) {
 382:lvgl/src/lv_misc/lv_mem.c ****             return LV_RES_INV;
 383:lvgl/src/lv_misc/lv_mem.c ****         }
 384:lvgl/src/lv_misc/lv_mem.c ****         uint8_t * e8 = (uint8_t *) e;
 385:lvgl/src/lv_misc/lv_mem.c ****         if(e8 + e->header.s.d_size > work_mem + LV_MEM_SIZE) {
 386:lvgl/src/lv_misc/lv_mem.c ****             return LV_RES_INV;
 387:lvgl/src/lv_misc/lv_mem.c ****         }
 388:lvgl/src/lv_misc/lv_mem.c ****         e = ent_get_next(e);
 389:lvgl/src/lv_misc/lv_mem.c ****     }
 390:lvgl/src/lv_misc/lv_mem.c **** #endif
 391:lvgl/src/lv_misc/lv_mem.c ****     return LV_RES_OK;
 392:lvgl/src/lv_misc/lv_mem.c **** }
 393:lvgl/src/lv_misc/lv_mem.c **** 
 394:lvgl/src/lv_misc/lv_mem.c **** /**
 395:lvgl/src/lv_misc/lv_mem.c ****  * Give information about the work memory of dynamic allocation
 396:lvgl/src/lv_misc/lv_mem.c ****  * @param mon_p pointer to a dm_mon_p variable,
 397:lvgl/src/lv_misc/lv_mem.c ****  *              the result of the analysis will be stored here
 398:lvgl/src/lv_misc/lv_mem.c ****  */
 399:lvgl/src/lv_misc/lv_mem.c **** void lv_mem_monitor(lv_mem_monitor_t * mon_p)
 400:lvgl/src/lv_misc/lv_mem.c **** {
 401:lvgl/src/lv_misc/lv_mem.c ****     /*Init the data*/
 402:lvgl/src/lv_misc/lv_mem.c ****     _lv_memset(mon_p, 0, sizeof(lv_mem_monitor_t));
 403:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 404:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_ent_t * e;
 405:lvgl/src/lv_misc/lv_mem.c **** 
 406:lvgl/src/lv_misc/lv_mem.c ****     e = ent_get_next(NULL);
 407:lvgl/src/lv_misc/lv_mem.c **** 
 408:lvgl/src/lv_misc/lv_mem.c ****     while(e != NULL) {
 409:lvgl/src/lv_misc/lv_mem.c ****         if(e->header.s.used == 0) {
 410:lvgl/src/lv_misc/lv_mem.c ****             mon_p->free_cnt++;
 411:lvgl/src/lv_misc/lv_mem.c ****             mon_p->free_size += e->header.s.d_size;
 412:lvgl/src/lv_misc/lv_mem.c ****             if(e->header.s.d_size > mon_p->free_biggest_size) {
 413:lvgl/src/lv_misc/lv_mem.c ****                 mon_p->free_biggest_size = e->header.s.d_size;
 414:lvgl/src/lv_misc/lv_mem.c ****             }
 415:lvgl/src/lv_misc/lv_mem.c ****         }
 416:lvgl/src/lv_misc/lv_mem.c ****         else {
 417:lvgl/src/lv_misc/lv_mem.c ****             mon_p->used_cnt++;
 418:lvgl/src/lv_misc/lv_mem.c ****         }
 419:lvgl/src/lv_misc/lv_mem.c **** 
 420:lvgl/src/lv_misc/lv_mem.c ****         e = ent_get_next(e);
 421:lvgl/src/lv_misc/lv_mem.c ****     }
 422:lvgl/src/lv_misc/lv_mem.c ****     mon_p->total_size = LV_MEM_SIZE;
 423:lvgl/src/lv_misc/lv_mem.c ****     mon_p->max_used = mem_max_size;
 424:lvgl/src/lv_misc/lv_mem.c ****     mon_p->used_pct = 100 - (100U * mon_p->free_size) / mon_p->total_size;
 425:lvgl/src/lv_misc/lv_mem.c ****     if(mon_p->free_size > 0) {
 426:lvgl/src/lv_misc/lv_mem.c ****         mon_p->frag_pct = mon_p->free_biggest_size * 100U / mon_p->free_size;
 427:lvgl/src/lv_misc/lv_mem.c ****         mon_p->frag_pct = 100 - mon_p->frag_pct;
 428:lvgl/src/lv_misc/lv_mem.c ****     }
 429:lvgl/src/lv_misc/lv_mem.c ****     else {
ARM GAS  D:\Temp\ccGtTw4W.s 			page 9


 430:lvgl/src/lv_misc/lv_mem.c ****         mon_p->frag_pct = 0; /*no fragmentation if all the RAM is used*/
 431:lvgl/src/lv_misc/lv_mem.c ****     }
 432:lvgl/src/lv_misc/lv_mem.c **** #endif
 433:lvgl/src/lv_misc/lv_mem.c **** }
 434:lvgl/src/lv_misc/lv_mem.c **** 
 435:lvgl/src/lv_misc/lv_mem.c **** /**
 436:lvgl/src/lv_misc/lv_mem.c ****  * Give the size of an allocated memory
 437:lvgl/src/lv_misc/lv_mem.c ****  * @param data pointer to an allocated memory
 438:lvgl/src/lv_misc/lv_mem.c ****  * @return the size of data memory in bytes
 439:lvgl/src/lv_misc/lv_mem.c ****  */
 440:lvgl/src/lv_misc/lv_mem.c **** 
 441:lvgl/src/lv_misc/lv_mem.c **** #if LV_ENABLE_GC == 0
 442:lvgl/src/lv_misc/lv_mem.c **** 
 443:lvgl/src/lv_misc/lv_mem.c **** uint32_t _lv_mem_get_size(const void * data)
 444:lvgl/src/lv_misc/lv_mem.c **** {
 445:lvgl/src/lv_misc/lv_mem.c ****     if(data == NULL) return 0;
 446:lvgl/src/lv_misc/lv_mem.c ****     if(data == &zero_mem) return 0;
 447:lvgl/src/lv_misc/lv_mem.c **** 
 448:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_ent_t * e = (lv_mem_ent_t *)((uint8_t *)data - sizeof(lv_mem_header_t));
 449:lvgl/src/lv_misc/lv_mem.c **** 
 450:lvgl/src/lv_misc/lv_mem.c ****     return e->header.s.d_size;
 451:lvgl/src/lv_misc/lv_mem.c **** }
 452:lvgl/src/lv_misc/lv_mem.c **** 
 453:lvgl/src/lv_misc/lv_mem.c **** #else /* LV_ENABLE_GC */
 454:lvgl/src/lv_misc/lv_mem.c **** 
 455:lvgl/src/lv_misc/lv_mem.c **** uint32_t _lv_mem_get_size(const void * data)
 456:lvgl/src/lv_misc/lv_mem.c **** {
 457:lvgl/src/lv_misc/lv_mem.c ****     return LV_MEM_CUSTOM_GET_SIZE(data);
 458:lvgl/src/lv_misc/lv_mem.c **** }
 459:lvgl/src/lv_misc/lv_mem.c **** 
 460:lvgl/src/lv_misc/lv_mem.c **** #endif /*LV_ENABLE_GC*/
 461:lvgl/src/lv_misc/lv_mem.c **** 
 462:lvgl/src/lv_misc/lv_mem.c **** /**
 463:lvgl/src/lv_misc/lv_mem.c ****  * Get a temporal buffer with the given size.
 464:lvgl/src/lv_misc/lv_mem.c ****  * @param size the required size
 465:lvgl/src/lv_misc/lv_mem.c ****  */
 466:lvgl/src/lv_misc/lv_mem.c **** void * _lv_mem_buf_get(uint32_t size)
 467:lvgl/src/lv_misc/lv_mem.c **** {
 468:lvgl/src/lv_misc/lv_mem.c ****     if(size == 0) return NULL;
 469:lvgl/src/lv_misc/lv_mem.c **** 
 470:lvgl/src/lv_misc/lv_mem.c ****     /*Try small static buffers first*/
 471:lvgl/src/lv_misc/lv_mem.c ****     uint8_t i;
 472:lvgl/src/lv_misc/lv_mem.c ****     if(size <= MEM_BUF_SMALL_SIZE) {
 473:lvgl/src/lv_misc/lv_mem.c ****         for(i = 0; i < sizeof(mem_buf_small) / sizeof(mem_buf_small[0]); i++) {
 474:lvgl/src/lv_misc/lv_mem.c ****             if(mem_buf_small[i].used == 0) {
 475:lvgl/src/lv_misc/lv_mem.c ****                 mem_buf_small[i].used = 1;
 476:lvgl/src/lv_misc/lv_mem.c ****                 return mem_buf_small[i].p;
 477:lvgl/src/lv_misc/lv_mem.c ****             }
 478:lvgl/src/lv_misc/lv_mem.c ****         }
 479:lvgl/src/lv_misc/lv_mem.c ****     }
 480:lvgl/src/lv_misc/lv_mem.c **** 
 481:lvgl/src/lv_misc/lv_mem.c ****     /*Try to find a free buffer with suitable size */
 482:lvgl/src/lv_misc/lv_mem.c ****     int8_t i_guess = -1;
 483:lvgl/src/lv_misc/lv_mem.c ****     for(i = 0; i < LV_MEM_BUF_MAX_NUM; i++) {
 484:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).used == 0 && LV_GC_ROOT(_lv_mem_buf[i]).size >= size) {
 485:lvgl/src/lv_misc/lv_mem.c ****             if(LV_GC_ROOT(_lv_mem_buf[i]).size == size) {
 486:lvgl/src/lv_misc/lv_mem.c ****                 LV_GC_ROOT(_lv_mem_buf[i]).used = 1;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 10


 487:lvgl/src/lv_misc/lv_mem.c ****                 return LV_GC_ROOT(_lv_mem_buf[i]).p;
 488:lvgl/src/lv_misc/lv_mem.c ****             }
 489:lvgl/src/lv_misc/lv_mem.c ****             else if(i_guess < 0) {
 490:lvgl/src/lv_misc/lv_mem.c ****                 i_guess = i;
 491:lvgl/src/lv_misc/lv_mem.c ****             }
 492:lvgl/src/lv_misc/lv_mem.c ****             /*If size of `i` is closer to `size` prefer it*/
 493:lvgl/src/lv_misc/lv_mem.c ****             else if(LV_GC_ROOT(_lv_mem_buf[i]).size < LV_GC_ROOT(_lv_mem_buf[i_guess]).size) {
 494:lvgl/src/lv_misc/lv_mem.c ****                 i_guess = i;
 495:lvgl/src/lv_misc/lv_mem.c ****             }
 496:lvgl/src/lv_misc/lv_mem.c ****         }
 497:lvgl/src/lv_misc/lv_mem.c ****     }
 498:lvgl/src/lv_misc/lv_mem.c **** 
 499:lvgl/src/lv_misc/lv_mem.c ****     if(i_guess >= 0) {
 500:lvgl/src/lv_misc/lv_mem.c ****         LV_GC_ROOT(_lv_mem_buf[i_guess]).used = 1;
 501:lvgl/src/lv_misc/lv_mem.c ****         return LV_GC_ROOT(_lv_mem_buf[i_guess]).p;
 502:lvgl/src/lv_misc/lv_mem.c ****     }
 503:lvgl/src/lv_misc/lv_mem.c **** 
 504:lvgl/src/lv_misc/lv_mem.c ****     /*Reallocate a free buffer*/
 505:lvgl/src/lv_misc/lv_mem.c ****     for(i = 0; i < LV_MEM_BUF_MAX_NUM; i++) {
 506:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).used == 0) {
 507:lvgl/src/lv_misc/lv_mem.c ****             /*if this fails you probably need to increase your LV_MEM_SIZE/heap size*/
 508:lvgl/src/lv_misc/lv_mem.c ****             void * buf = lv_mem_realloc(LV_GC_ROOT(_lv_mem_buf[i]).p, size);
 509:lvgl/src/lv_misc/lv_mem.c ****             if(buf == NULL) {
 510:lvgl/src/lv_misc/lv_mem.c ****                 LV_DEBUG_ASSERT(false, "Out of memory, can't allocate a new buffer (increase your L
 511:lvgl/src/lv_misc/lv_mem.c ****                 return NULL;
 512:lvgl/src/lv_misc/lv_mem.c ****             }
 513:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).used = 1;
 514:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).size = size;
 515:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).p    = buf;
 516:lvgl/src/lv_misc/lv_mem.c ****             return LV_GC_ROOT(_lv_mem_buf[i]).p;
 517:lvgl/src/lv_misc/lv_mem.c ****         }
 518:lvgl/src/lv_misc/lv_mem.c ****     }
 519:lvgl/src/lv_misc/lv_mem.c **** 
 520:lvgl/src/lv_misc/lv_mem.c ****     LV_DEBUG_ASSERT(false, "No free buffer. Increase LV_MEM_BUF_MAX_NUM.", 0x00);
 521:lvgl/src/lv_misc/lv_mem.c ****     return NULL;
 522:lvgl/src/lv_misc/lv_mem.c **** }
 523:lvgl/src/lv_misc/lv_mem.c **** 
 524:lvgl/src/lv_misc/lv_mem.c **** /**
 525:lvgl/src/lv_misc/lv_mem.c ****  * Release a memory buffer
 526:lvgl/src/lv_misc/lv_mem.c ****  * @param p buffer to release
 527:lvgl/src/lv_misc/lv_mem.c ****  */
 528:lvgl/src/lv_misc/lv_mem.c **** void _lv_mem_buf_release(void * p)
 529:lvgl/src/lv_misc/lv_mem.c **** {
 530:lvgl/src/lv_misc/lv_mem.c ****     uint8_t i;
 531:lvgl/src/lv_misc/lv_mem.c **** 
 532:lvgl/src/lv_misc/lv_mem.c ****     /*Try small static buffers first*/
 533:lvgl/src/lv_misc/lv_mem.c ****     for(i = 0; i < sizeof(mem_buf_small) / sizeof(mem_buf_small[0]); i++) {
 534:lvgl/src/lv_misc/lv_mem.c ****         if(mem_buf_small[i].p == p) {
 535:lvgl/src/lv_misc/lv_mem.c ****             mem_buf_small[i].used = 0;
 536:lvgl/src/lv_misc/lv_mem.c ****             return;
 537:lvgl/src/lv_misc/lv_mem.c ****         }
 538:lvgl/src/lv_misc/lv_mem.c ****     }
 539:lvgl/src/lv_misc/lv_mem.c **** 
 540:lvgl/src/lv_misc/lv_mem.c ****     for(i = 0; i < LV_MEM_BUF_MAX_NUM; i++) {
 541:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).p == p) {
 542:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).used = 0;
 543:lvgl/src/lv_misc/lv_mem.c ****             return;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 11


 544:lvgl/src/lv_misc/lv_mem.c ****         }
 545:lvgl/src/lv_misc/lv_mem.c ****     }
 546:lvgl/src/lv_misc/lv_mem.c **** 
 547:lvgl/src/lv_misc/lv_mem.c ****     LV_LOG_ERROR("lv_mem_buf_release: p is not a known buffer")
 548:lvgl/src/lv_misc/lv_mem.c **** }
 549:lvgl/src/lv_misc/lv_mem.c **** 
 550:lvgl/src/lv_misc/lv_mem.c **** /**
 551:lvgl/src/lv_misc/lv_mem.c ****  * Free all memory buffers
 552:lvgl/src/lv_misc/lv_mem.c ****  */
 553:lvgl/src/lv_misc/lv_mem.c **** void _lv_mem_buf_free_all(void)
 554:lvgl/src/lv_misc/lv_mem.c **** {
 555:lvgl/src/lv_misc/lv_mem.c ****     uint8_t i;
 556:lvgl/src/lv_misc/lv_mem.c ****     for(i = 0; i < sizeof(mem_buf_small) / sizeof(mem_buf_small[0]); i++) {
 557:lvgl/src/lv_misc/lv_mem.c ****         mem_buf_small[i].used = 0;
 558:lvgl/src/lv_misc/lv_mem.c ****     }
 559:lvgl/src/lv_misc/lv_mem.c **** 
 560:lvgl/src/lv_misc/lv_mem.c ****     for(i = 0; i < LV_MEM_BUF_MAX_NUM; i++) {
 561:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).p) {
 562:lvgl/src/lv_misc/lv_mem.c ****             lv_mem_free(LV_GC_ROOT(_lv_mem_buf[i]).p);
 563:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).p = NULL;
 564:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).used = 0;
 565:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).size = 0;
 566:lvgl/src/lv_misc/lv_mem.c ****         }
 567:lvgl/src/lv_misc/lv_mem.c ****     }
 568:lvgl/src/lv_misc/lv_mem.c **** }
 569:lvgl/src/lv_misc/lv_mem.c **** 
 570:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEMCPY_MEMSET_STD == 0
 571:lvgl/src/lv_misc/lv_mem.c **** /**
 572:lvgl/src/lv_misc/lv_mem.c ****  * Same as `memcpy` but optimized for 4 byte operation.
 573:lvgl/src/lv_misc/lv_mem.c ****  * @param dst pointer to the destination buffer
 574:lvgl/src/lv_misc/lv_mem.c ****  * @param src pointer to the source buffer
 575:lvgl/src/lv_misc/lv_mem.c ****  * @param len number of byte to copy
 576:lvgl/src/lv_misc/lv_mem.c ****  */
 577:lvgl/src/lv_misc/lv_mem.c **** LV_ATTRIBUTE_FAST_MEM void * _lv_memcpy(void * dst, const void * src, size_t len)
 578:lvgl/src/lv_misc/lv_mem.c **** {
 579:lvgl/src/lv_misc/lv_mem.c ****     uint8_t * d8 = dst;
 580:lvgl/src/lv_misc/lv_mem.c ****     const uint8_t * s8 = src;
 581:lvgl/src/lv_misc/lv_mem.c **** 
 582:lvgl/src/lv_misc/lv_mem.c ****     lv_uintptr_t d_align = (lv_uintptr_t)d8 & ALIGN_MASK;
 583:lvgl/src/lv_misc/lv_mem.c ****     lv_uintptr_t s_align = (lv_uintptr_t)s8 & ALIGN_MASK;
 584:lvgl/src/lv_misc/lv_mem.c **** 
 585:lvgl/src/lv_misc/lv_mem.c ****     /*Byte copy for unaligned memories*/
 586:lvgl/src/lv_misc/lv_mem.c ****     if(s_align != d_align) {
 587:lvgl/src/lv_misc/lv_mem.c ****         while(len > 32) {
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 591:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 592:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 593:lvgl/src/lv_misc/lv_mem.c ****         }
 594:lvgl/src/lv_misc/lv_mem.c ****         while(len) {
 595:lvgl/src/lv_misc/lv_mem.c ****             COPY8
 596:lvgl/src/lv_misc/lv_mem.c ****             len--;
 597:lvgl/src/lv_misc/lv_mem.c ****         }
 598:lvgl/src/lv_misc/lv_mem.c ****         return dst;
 599:lvgl/src/lv_misc/lv_mem.c ****     }
 600:lvgl/src/lv_misc/lv_mem.c **** 
ARM GAS  D:\Temp\ccGtTw4W.s 			page 12


 601:lvgl/src/lv_misc/lv_mem.c ****     /*Make the memories aligned*/
 602:lvgl/src/lv_misc/lv_mem.c ****     if(d_align) {
 603:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 604:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
 605:lvgl/src/lv_misc/lv_mem.c ****             COPY8;
 606:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 607:lvgl/src/lv_misc/lv_mem.c ****             len--;
 608:lvgl/src/lv_misc/lv_mem.c ****         }
 609:lvgl/src/lv_misc/lv_mem.c ****     }
 610:lvgl/src/lv_misc/lv_mem.c **** 
 611:lvgl/src/lv_misc/lv_mem.c ****     uint32_t * d32 = (uint32_t *)d8;
 612:lvgl/src/lv_misc/lv_mem.c ****     const uint32_t * s32 = (uint32_t *)s8;
 613:lvgl/src/lv_misc/lv_mem.c ****     while(len > 32) {
 614:lvgl/src/lv_misc/lv_mem.c ****         REPEAT8(COPY32)
 615:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 616:lvgl/src/lv_misc/lv_mem.c ****     }
 617:lvgl/src/lv_misc/lv_mem.c **** 
 618:lvgl/src/lv_misc/lv_mem.c ****     while(len > 4) {
 619:lvgl/src/lv_misc/lv_mem.c ****         COPY32;
 620:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 621:lvgl/src/lv_misc/lv_mem.c ****     }
 622:lvgl/src/lv_misc/lv_mem.c **** 
 623:lvgl/src/lv_misc/lv_mem.c ****     d8 = (uint8_t *)d32;
 624:lvgl/src/lv_misc/lv_mem.c ****     s8 = (const uint8_t *)s32;
 625:lvgl/src/lv_misc/lv_mem.c ****     while(len) {
 626:lvgl/src/lv_misc/lv_mem.c ****         COPY8
 627:lvgl/src/lv_misc/lv_mem.c ****         len--;
 628:lvgl/src/lv_misc/lv_mem.c ****     }
 629:lvgl/src/lv_misc/lv_mem.c **** 
 630:lvgl/src/lv_misc/lv_mem.c ****     return dst;
 631:lvgl/src/lv_misc/lv_mem.c **** }
 632:lvgl/src/lv_misc/lv_mem.c **** 
 633:lvgl/src/lv_misc/lv_mem.c **** /**
 634:lvgl/src/lv_misc/lv_mem.c ****  * Same as `memset` but optimized for 4 byte operation.
 635:lvgl/src/lv_misc/lv_mem.c ****  * @param dst pointer to the destination buffer
 636:lvgl/src/lv_misc/lv_mem.c ****  * @param v value to set [0..255]
 637:lvgl/src/lv_misc/lv_mem.c ****  * @param len number of byte to set
 638:lvgl/src/lv_misc/lv_mem.c ****  */
 639:lvgl/src/lv_misc/lv_mem.c **** LV_ATTRIBUTE_FAST_MEM void _lv_memset(void * dst, uint8_t v, size_t len)
 640:lvgl/src/lv_misc/lv_mem.c **** {
 641:lvgl/src/lv_misc/lv_mem.c **** 
 642:lvgl/src/lv_misc/lv_mem.c ****     uint8_t * d8 = (uint8_t *) dst;
 643:lvgl/src/lv_misc/lv_mem.c **** 
 644:lvgl/src/lv_misc/lv_mem.c ****     uintptr_t d_align = (lv_uintptr_t) d8 & ALIGN_MASK;
 645:lvgl/src/lv_misc/lv_mem.c **** 
 646:lvgl/src/lv_misc/lv_mem.c ****     /*Make the address aligned*/
 647:lvgl/src/lv_misc/lv_mem.c ****     if(d_align) {
 648:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 649:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
 650:lvgl/src/lv_misc/lv_mem.c ****             SET8(v);
 651:lvgl/src/lv_misc/lv_mem.c ****             len--;
 652:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 653:lvgl/src/lv_misc/lv_mem.c ****         }
 654:lvgl/src/lv_misc/lv_mem.c ****     }
 655:lvgl/src/lv_misc/lv_mem.c **** 
 656:lvgl/src/lv_misc/lv_mem.c ****     uint32_t v32 = v + (v << 8) + (v << 16) + (v << 24);
 657:lvgl/src/lv_misc/lv_mem.c **** 
ARM GAS  D:\Temp\ccGtTw4W.s 			page 13


 658:lvgl/src/lv_misc/lv_mem.c ****     uint32_t * d32 = (uint32_t *)d8;
 659:lvgl/src/lv_misc/lv_mem.c **** 
 660:lvgl/src/lv_misc/lv_mem.c ****     while(len > 32) {
 661:lvgl/src/lv_misc/lv_mem.c ****         REPEAT8(SET32(v32));
 662:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 663:lvgl/src/lv_misc/lv_mem.c ****     }
 664:lvgl/src/lv_misc/lv_mem.c **** 
 665:lvgl/src/lv_misc/lv_mem.c ****     while(len > 4) {
 666:lvgl/src/lv_misc/lv_mem.c ****         SET32(v32);
 667:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 668:lvgl/src/lv_misc/lv_mem.c ****     }
 669:lvgl/src/lv_misc/lv_mem.c **** 
 670:lvgl/src/lv_misc/lv_mem.c ****     d8 = (uint8_t *)d32;
 671:lvgl/src/lv_misc/lv_mem.c ****     while(len) {
 672:lvgl/src/lv_misc/lv_mem.c ****         SET8(v);
 673:lvgl/src/lv_misc/lv_mem.c ****         len--;
 674:lvgl/src/lv_misc/lv_mem.c ****     }
 675:lvgl/src/lv_misc/lv_mem.c **** }
 676:lvgl/src/lv_misc/lv_mem.c **** 
 677:lvgl/src/lv_misc/lv_mem.c **** /**
 678:lvgl/src/lv_misc/lv_mem.c ****  * Same as `memset(dst, 0x00, len)` but optimized for 4 byte operation.
 679:lvgl/src/lv_misc/lv_mem.c ****  * @param dst pointer to the destination buffer
 680:lvgl/src/lv_misc/lv_mem.c ****  * @param len number of byte to set
 681:lvgl/src/lv_misc/lv_mem.c ****  */
 682:lvgl/src/lv_misc/lv_mem.c **** LV_ATTRIBUTE_FAST_MEM void _lv_memset_00(void * dst, size_t len)
 683:lvgl/src/lv_misc/lv_mem.c **** {
 684:lvgl/src/lv_misc/lv_mem.c ****     uint8_t * d8 = (uint8_t *) dst;
 685:lvgl/src/lv_misc/lv_mem.c ****     uintptr_t d_align = (lv_uintptr_t) d8 & ALIGN_MASK;
 686:lvgl/src/lv_misc/lv_mem.c **** 
 687:lvgl/src/lv_misc/lv_mem.c ****     /*Make the address aligned*/
 688:lvgl/src/lv_misc/lv_mem.c ****     if(d_align) {
 689:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 690:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
 691:lvgl/src/lv_misc/lv_mem.c ****             SET8(0);
 692:lvgl/src/lv_misc/lv_mem.c ****             len--;
 693:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 694:lvgl/src/lv_misc/lv_mem.c ****         }
 695:lvgl/src/lv_misc/lv_mem.c ****     }
 696:lvgl/src/lv_misc/lv_mem.c **** 
 697:lvgl/src/lv_misc/lv_mem.c ****     uint32_t * d32 = (uint32_t *)d8;
 698:lvgl/src/lv_misc/lv_mem.c ****     while(len > 32) {
 699:lvgl/src/lv_misc/lv_mem.c ****         REPEAT8(SET32(0));
 700:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 701:lvgl/src/lv_misc/lv_mem.c ****     }
 702:lvgl/src/lv_misc/lv_mem.c **** 
 703:lvgl/src/lv_misc/lv_mem.c ****     while(len > 4) {
 704:lvgl/src/lv_misc/lv_mem.c ****         SET32(0);
 705:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 706:lvgl/src/lv_misc/lv_mem.c ****     }
 707:lvgl/src/lv_misc/lv_mem.c **** 
 708:lvgl/src/lv_misc/lv_mem.c ****     d8 = (uint8_t *)d32;
 709:lvgl/src/lv_misc/lv_mem.c ****     while(len) {
 710:lvgl/src/lv_misc/lv_mem.c ****         SET8(0);
 711:lvgl/src/lv_misc/lv_mem.c ****         len--;
 712:lvgl/src/lv_misc/lv_mem.c ****     }
 713:lvgl/src/lv_misc/lv_mem.c **** }
 714:lvgl/src/lv_misc/lv_mem.c **** 
ARM GAS  D:\Temp\ccGtTw4W.s 			page 14


 715:lvgl/src/lv_misc/lv_mem.c **** /**
 716:lvgl/src/lv_misc/lv_mem.c ****  * Same as `memset(dst, 0xFF, len)` but optimized for 4 byte operation.
 717:lvgl/src/lv_misc/lv_mem.c ****  * @param dst pointer to the destination buffer
 718:lvgl/src/lv_misc/lv_mem.c ****  * @param len number of byte to set
 719:lvgl/src/lv_misc/lv_mem.c ****  */
 720:lvgl/src/lv_misc/lv_mem.c **** LV_ATTRIBUTE_FAST_MEM void _lv_memset_ff(void * dst, size_t len)
 721:lvgl/src/lv_misc/lv_mem.c **** {
 722:lvgl/src/lv_misc/lv_mem.c ****     uint8_t * d8 = (uint8_t *) dst;
 723:lvgl/src/lv_misc/lv_mem.c ****     uintptr_t d_align = (lv_uintptr_t) d8 & ALIGN_MASK;
 724:lvgl/src/lv_misc/lv_mem.c **** 
 725:lvgl/src/lv_misc/lv_mem.c ****     /*Make the address aligned*/
 726:lvgl/src/lv_misc/lv_mem.c ****     if(d_align) {
 727:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 728:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
 729:lvgl/src/lv_misc/lv_mem.c ****             SET8(0xFF);
 730:lvgl/src/lv_misc/lv_mem.c ****             len--;
 731:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 732:lvgl/src/lv_misc/lv_mem.c ****         }
 733:lvgl/src/lv_misc/lv_mem.c ****     }
 734:lvgl/src/lv_misc/lv_mem.c **** 
 735:lvgl/src/lv_misc/lv_mem.c ****     uint32_t * d32 = (uint32_t *)d8;
 736:lvgl/src/lv_misc/lv_mem.c ****     while(len > 32) {
 737:lvgl/src/lv_misc/lv_mem.c ****         REPEAT8(SET32(0xFFFFFFFF));
 738:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 739:lvgl/src/lv_misc/lv_mem.c ****     }
 740:lvgl/src/lv_misc/lv_mem.c **** 
 741:lvgl/src/lv_misc/lv_mem.c ****     while(len > 4) {
 742:lvgl/src/lv_misc/lv_mem.c ****         SET32(0xFFFFFFFF);
 743:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 744:lvgl/src/lv_misc/lv_mem.c ****     }
 745:lvgl/src/lv_misc/lv_mem.c **** 
 746:lvgl/src/lv_misc/lv_mem.c ****     d8 = (uint8_t *)d32;
 747:lvgl/src/lv_misc/lv_mem.c ****     while(len) {
 748:lvgl/src/lv_misc/lv_mem.c ****         SET8(0xFF);
 749:lvgl/src/lv_misc/lv_mem.c ****         len--;
 750:lvgl/src/lv_misc/lv_mem.c ****     }
 751:lvgl/src/lv_misc/lv_mem.c **** }
 752:lvgl/src/lv_misc/lv_mem.c **** 
 753:lvgl/src/lv_misc/lv_mem.c **** #endif /*LV_MEMCPY_MEMSET_STD*/
 754:lvgl/src/lv_misc/lv_mem.c **** 
 755:lvgl/src/lv_misc/lv_mem.c **** /**********************
 756:lvgl/src/lv_misc/lv_mem.c ****  *   STATIC FUNCTIONS
 757:lvgl/src/lv_misc/lv_mem.c ****  **********************/
 758:lvgl/src/lv_misc/lv_mem.c **** 
 759:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 760:lvgl/src/lv_misc/lv_mem.c **** /**
 761:lvgl/src/lv_misc/lv_mem.c ****  * Give the next entry after 'act_e'
 762:lvgl/src/lv_misc/lv_mem.c ****  * @param act_e pointer to an entry
 763:lvgl/src/lv_misc/lv_mem.c ****  * @return pointer to an entry after 'act_e'
 764:lvgl/src/lv_misc/lv_mem.c ****  */
 765:lvgl/src/lv_misc/lv_mem.c **** static lv_mem_ent_t * ent_get_next(lv_mem_ent_t * act_e)
 766:lvgl/src/lv_misc/lv_mem.c **** {
  29              		.loc 1 766 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
ARM GAS  D:\Temp\ccGtTw4W.s 			page 15


 767:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_ent_t * next_e = NULL;
  34              		.loc 1 767 5 view .LVU1
 768:lvgl/src/lv_misc/lv_mem.c **** 
 769:lvgl/src/lv_misc/lv_mem.c ****     if(act_e == NULL) { /*NULL means: get the first entry*/
  35              		.loc 1 769 5 view .LVU2
  36              		.loc 1 769 7 is_stmt 0 view .LVU3
  37 0000 58B1     		cbz	r0, .L5
  38              	.LBB2:
 770:lvgl/src/lv_misc/lv_mem.c ****         next_e = (lv_mem_ent_t *)work_mem;
 771:lvgl/src/lv_misc/lv_mem.c ****     }
 772:lvgl/src/lv_misc/lv_mem.c ****     else {   /*Get the next entry */
 773:lvgl/src/lv_misc/lv_mem.c ****         uint8_t * data = &act_e->first_data;
  39              		.loc 1 773 9 is_stmt 1 view .LVU4
  40              	.LVL1:
 774:lvgl/src/lv_misc/lv_mem.c ****         next_e         = (lv_mem_ent_t *)&data[act_e->header.s.d_size];
  41              		.loc 1 774 9 view .LVU5
  42              		.loc 1 774 63 is_stmt 0 view .LVU6
  43 0002 50F8043B 		ldr	r3, [r0], #4
  44              	.LVL2:
  45              		.loc 1 774 24 view .LVU7
  46 0006 00EB5300 		add	r0, r0, r3, lsr #1
  47              	.LVL3:
 775:lvgl/src/lv_misc/lv_mem.c **** 
 776:lvgl/src/lv_misc/lv_mem.c ****         if(&next_e->first_data >= &work_mem[LV_MEM_SIZE]) next_e = NULL;
  48              		.loc 1 776 9 is_stmt 1 view .LVU8
  49              		.loc 1 776 12 is_stmt 0 view .LVU9
  50 000a 021D     		adds	r2, r0, #4
  51              		.loc 1 776 35 view .LVU10
  52 000c 054B     		ldr	r3, .L7
  53 000e 1B68     		ldr	r3, [r3]
  54 0010 03F50043 		add	r3, r3, #32768
  55              		.loc 1 776 11 view .LVU11
  56 0014 9A42     		cmp	r2, r3
  57 0016 03D2     		bcs	.L6
  58              	.LVL4:
  59              	.L1:
  60              		.loc 1 776 11 view .LVU12
  61              	.LBE2:
 777:lvgl/src/lv_misc/lv_mem.c ****     }
 778:lvgl/src/lv_misc/lv_mem.c **** 
 779:lvgl/src/lv_misc/lv_mem.c ****     return next_e;
 780:lvgl/src/lv_misc/lv_mem.c **** }
  62              		.loc 1 780 1 view .LVU13
  63 0018 7047     		bx	lr
  64              	.LVL5:
  65              	.L5:
 770:lvgl/src/lv_misc/lv_mem.c ****     }
  66              		.loc 1 770 9 is_stmt 1 view .LVU14
 770:lvgl/src/lv_misc/lv_mem.c ****     }
  67              		.loc 1 770 16 is_stmt 0 view .LVU15
  68 001a 024B     		ldr	r3, .L7
  69 001c 1868     		ldr	r0, [r3]
  70              	.LVL6:
 770:lvgl/src/lv_misc/lv_mem.c ****     }
  71              		.loc 1 770 16 view .LVU16
  72 001e 7047     		bx	lr
  73              	.LVL7:
ARM GAS  D:\Temp\ccGtTw4W.s 			page 16


  74              	.L6:
  75              	.LBB3:
 776:lvgl/src/lv_misc/lv_mem.c ****     }
  76              		.loc 1 776 66 view .LVU17
  77 0020 0020     		movs	r0, #0
  78              	.LVL8:
 776:lvgl/src/lv_misc/lv_mem.c ****     }
  79              		.loc 1 776 66 view .LVU18
  80              	.LBE3:
 779:lvgl/src/lv_misc/lv_mem.c **** }
  81              		.loc 1 779 5 is_stmt 1 view .LVU19
 779:lvgl/src/lv_misc/lv_mem.c **** }
  82              		.loc 1 779 12 is_stmt 0 view .LVU20
  83 0022 F9E7     		b	.L1
  84              	.L8:
  85              		.align	2
  86              	.L7:
  87 0024 00000000 		.word	.LANCHOR0
  88              		.cfi_endproc
  89              	.LFE183:
  91              		.section	.text.ent_trunc,"ax",%progbits
  92              		.align	1
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	ent_trunc:
  99              	.LVL9:
 100              	.LFB185:
 781:lvgl/src/lv_misc/lv_mem.c **** 
 782:lvgl/src/lv_misc/lv_mem.c **** /**
 783:lvgl/src/lv_misc/lv_mem.c ****  * Try to do the real allocation with a given size
 784:lvgl/src/lv_misc/lv_mem.c ****  * @param e try to allocate to this entry
 785:lvgl/src/lv_misc/lv_mem.c ****  * @param size size of the new memory in bytes
 786:lvgl/src/lv_misc/lv_mem.c ****  * @return pointer to the allocated memory or NULL if not enough memory in the entry
 787:lvgl/src/lv_misc/lv_mem.c ****  */
 788:lvgl/src/lv_misc/lv_mem.c **** static void * ent_alloc(lv_mem_ent_t * e, size_t size)
 789:lvgl/src/lv_misc/lv_mem.c **** {
 790:lvgl/src/lv_misc/lv_mem.c ****     void * alloc = NULL;
 791:lvgl/src/lv_misc/lv_mem.c ****     /*If the memory is free and big enough then use it */
 792:lvgl/src/lv_misc/lv_mem.c ****     if(e->header.s.used == 0 && e->header.s.d_size >= size) {
 793:lvgl/src/lv_misc/lv_mem.c ****         /*Truncate the entry to the desired size */
 794:lvgl/src/lv_misc/lv_mem.c ****         ent_trunc(e, size);
 795:lvgl/src/lv_misc/lv_mem.c ****         e->header.s.used = 1;
 796:lvgl/src/lv_misc/lv_mem.c **** 
 797:lvgl/src/lv_misc/lv_mem.c ****         /*Save the allocated data*/
 798:lvgl/src/lv_misc/lv_mem.c ****         alloc = &e->first_data;
 799:lvgl/src/lv_misc/lv_mem.c ****     }
 800:lvgl/src/lv_misc/lv_mem.c **** 
 801:lvgl/src/lv_misc/lv_mem.c ****     return alloc;
 802:lvgl/src/lv_misc/lv_mem.c **** }
 803:lvgl/src/lv_misc/lv_mem.c **** 
 804:lvgl/src/lv_misc/lv_mem.c **** /**
 805:lvgl/src/lv_misc/lv_mem.c ****  * Truncate the data of entry to the given size
 806:lvgl/src/lv_misc/lv_mem.c ****  * @param e Pointer to an entry
 807:lvgl/src/lv_misc/lv_mem.c ****  * @param size new size in bytes
 808:lvgl/src/lv_misc/lv_mem.c ****  */
ARM GAS  D:\Temp\ccGtTw4W.s 			page 17


 809:lvgl/src/lv_misc/lv_mem.c **** static void ent_trunc(lv_mem_ent_t * e, size_t size)
 810:lvgl/src/lv_misc/lv_mem.c **** {
 101              		.loc 1 810 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 811:lvgl/src/lv_misc/lv_mem.c ****     /*Round the size up to ALIGN_MASK*/
 812:lvgl/src/lv_misc/lv_mem.c ****     size = (size + ALIGN_MASK) & (~ALIGN_MASK);
 106              		.loc 1 812 5 view .LVU22
 107              		.loc 1 812 18 is_stmt 0 view .LVU23
 108 0000 0331     		adds	r1, r1, #3
 109              	.LVL10:
 110              		.loc 1 812 10 view .LVU24
 111 0002 21F00301 		bic	r1, r1, #3
 112              	.LVL11:
 813:lvgl/src/lv_misc/lv_mem.c **** 
 814:lvgl/src/lv_misc/lv_mem.c ****     /*Don't let empty space only for a header without data*/
 815:lvgl/src/lv_misc/lv_mem.c ****     if(e->header.s.d_size == size + sizeof(lv_mem_header_t)) {
 113              		.loc 1 815 5 is_stmt 1 view .LVU25
 114              		.loc 1 815 19 is_stmt 0 view .LVU26
 115 0006 0368     		ldr	r3, [r0]
 116 0008 C3F35E03 		ubfx	r3, r3, #1, #31
 117              		.loc 1 815 35 view .LVU27
 118 000c 0A1D     		adds	r2, r1, #4
 119              		.loc 1 815 7 view .LVU28
 120 000e 9342     		cmp	r3, r2
 121 0010 16D0     		beq	.L17
 122              	.LVL12:
 123              	.L10:
 816:lvgl/src/lv_misc/lv_mem.c ****         size = e->header.s.d_size;
 817:lvgl/src/lv_misc/lv_mem.c ****     }
 818:lvgl/src/lv_misc/lv_mem.c **** 
 819:lvgl/src/lv_misc/lv_mem.c ****     /* Create the new entry after the current if there is space for it */
 820:lvgl/src/lv_misc/lv_mem.c ****     if(e->header.s.d_size != size) {
 124              		.loc 1 820 5 is_stmt 1 view .LVU29
 125              		.loc 1 820 7 is_stmt 0 view .LVU30
 126 0012 8B42     		cmp	r3, r1
 127 0014 16D0     		beq	.L14
 810:lvgl/src/lv_misc/lv_mem.c ****     /*Round the size up to ALIGN_MASK*/
 128              		.loc 1 810 1 view .LVU31
 129 0016 10B4     		push	{r4}
 130              	.LCFI0:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 4, -4
 133              	.LBB4:
 821:lvgl/src/lv_misc/lv_mem.c ****         uint8_t * e_data             = &e->first_data;
 134              		.loc 1 821 9 is_stmt 1 view .LVU32
 135              		.loc 1 821 19 is_stmt 0 view .LVU33
 136 0018 021D     		adds	r2, r0, #4
 137              	.LVL13:
 822:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_ent_t * after_new_e   = (lv_mem_ent_t *)&e_data[size];
 138              		.loc 1 822 9 is_stmt 1 view .LVU34
 823:lvgl/src/lv_misc/lv_mem.c ****         after_new_e->header.s.used   = 0;
 139              		.loc 1 823 9 view .LVU35
 140              		.loc 1 823 38 is_stmt 0 view .LVU36
 141 001a 535C     		ldrb	r3, [r2, r1]	@ zero_extendqisi2
ARM GAS  D:\Temp\ccGtTw4W.s 			page 18


 142 001c 6FF30003 		bfc	r3, #0, #1
 143 0020 5354     		strb	r3, [r2, r1]
 824:lvgl/src/lv_misc/lv_mem.c ****         after_new_e->header.s.d_size = (uint32_t)e->header.s.d_size - size - sizeof(lv_mem_header_t
 144              		.loc 1 824 9 is_stmt 1 view .LVU37
 145              		.loc 1 824 61 is_stmt 0 view .LVU38
 146 0022 0368     		ldr	r3, [r0]
 147              		.loc 1 824 69 view .LVU39
 148 0024 C1EB5303 		rsb	r3, r1, r3, lsr #1
 149              		.loc 1 824 76 view .LVU40
 150 0028 043B     		subs	r3, r3, #4
 151              		.loc 1 824 38 view .LVU41
 152 002a 5458     		ldr	r4, [r2, r1]
 153 002c 63F35F04 		bfi	r4, r3, #1, #31
 154 0030 5450     		str	r4, [r2, r1]
 825:lvgl/src/lv_misc/lv_mem.c **** 
 826:lvgl/src/lv_misc/lv_mem.c ****         /* Set the new size for the original entry */
 827:lvgl/src/lv_misc/lv_mem.c ****         e->header.s.d_size = (uint32_t)size;
 155              		.loc 1 827 9 is_stmt 1 view .LVU42
 156              		.loc 1 827 28 is_stmt 0 view .LVU43
 157 0032 0368     		ldr	r3, [r0]
 158 0034 61F35F03 		bfi	r3, r1, #1, #31
 159 0038 0360     		str	r3, [r0]
 160              	.LBE4:
 828:lvgl/src/lv_misc/lv_mem.c ****     }
 829:lvgl/src/lv_misc/lv_mem.c **** }
 161              		.loc 1 829 1 view .LVU44
 162 003a 5DF8044B 		ldr	r4, [sp], #4
 163              	.LCFI1:
 164              		.cfi_restore 4
 165              		.cfi_def_cfa_offset 0
 166 003e 7047     		bx	lr
 167              	.LVL14:
 168              	.L17:
 816:lvgl/src/lv_misc/lv_mem.c ****     }
 169              		.loc 1 816 14 view .LVU45
 170 0040 1946     		mov	r1, r3
 171              	.LVL15:
 816:lvgl/src/lv_misc/lv_mem.c ****     }
 172              		.loc 1 816 14 view .LVU46
 173 0042 E6E7     		b	.L10
 174              	.LVL16:
 175              	.L14:
 816:lvgl/src/lv_misc/lv_mem.c ****     }
 176              		.loc 1 816 14 view .LVU47
 177 0044 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE185:
 181              		.section	.text.ent_alloc,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	ent_alloc:
 189              	.LVL17:
 190              	.LFB184:
 789:lvgl/src/lv_misc/lv_mem.c ****     void * alloc = NULL;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 19


 191              		.loc 1 789 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 790:lvgl/src/lv_misc/lv_mem.c ****     /*If the memory is free and big enough then use it */
 195              		.loc 1 790 5 view .LVU49
 792:lvgl/src/lv_misc/lv_mem.c ****         /*Truncate the entry to the desired size */
 196              		.loc 1 792 5 view .LVU50
 792:lvgl/src/lv_misc/lv_mem.c ****         /*Truncate the entry to the desired size */
 197              		.loc 1 792 25 is_stmt 0 view .LVU51
 198 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 792:lvgl/src/lv_misc/lv_mem.c ****         /*Truncate the entry to the desired size */
 199              		.loc 1 792 7 view .LVU52
 200 0002 13F0010F 		tst	r3, #1
 201 0006 0FD1     		bne	.L20
 792:lvgl/src/lv_misc/lv_mem.c ****         /*Truncate the entry to the desired size */
 202              		.loc 1 792 44 discriminator 1 view .LVU53
 203 0008 0368     		ldr	r3, [r0]
 204 000a C3F35E03 		ubfx	r3, r3, #1, #31
 792:lvgl/src/lv_misc/lv_mem.c ****         /*Truncate the entry to the desired size */
 205              		.loc 1 792 30 discriminator 1 view .LVU54
 206 000e 8B42     		cmp	r3, r1
 207 0010 0CD3     		bcc	.L21
 789:lvgl/src/lv_misc/lv_mem.c ****     void * alloc = NULL;
 208              		.loc 1 789 1 view .LVU55
 209 0012 10B5     		push	{r4, lr}
 210              	.LCFI2:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 4, -8
 213              		.cfi_offset 14, -4
 214 0014 0446     		mov	r4, r0
 794:lvgl/src/lv_misc/lv_mem.c ****         e->header.s.used = 1;
 215              		.loc 1 794 9 is_stmt 1 view .LVU56
 216 0016 FFF7FEFF 		bl	ent_trunc
 217              	.LVL18:
 795:lvgl/src/lv_misc/lv_mem.c **** 
 218              		.loc 1 795 9 view .LVU57
 795:lvgl/src/lv_misc/lv_mem.c **** 
 219              		.loc 1 795 26 is_stmt 0 view .LVU58
 220 001a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 221 001c 43F00103 		orr	r3, r3, #1
 222 0020 2046     		mov	r0, r4
 223 0022 00F8043B 		strb	r3, [r0], #4
 798:lvgl/src/lv_misc/lv_mem.c ****     }
 224              		.loc 1 798 9 is_stmt 1 view .LVU59
 225              	.LVL19:
 802:lvgl/src/lv_misc/lv_mem.c **** 
 226              		.loc 1 802 1 is_stmt 0 view .LVU60
 227 0026 10BD     		pop	{r4, pc}
 228              	.LVL20:
 229              	.L20:
 230              	.LCFI3:
 231              		.cfi_def_cfa_offset 0
 232              		.cfi_restore 4
 233              		.cfi_restore 14
 790:lvgl/src/lv_misc/lv_mem.c ****     /*If the memory is free and big enough then use it */
 234              		.loc 1 790 12 view .LVU61
ARM GAS  D:\Temp\ccGtTw4W.s 			page 20


 235 0028 0020     		movs	r0, #0
 236              	.LVL21:
 790:lvgl/src/lv_misc/lv_mem.c ****     /*If the memory is free and big enough then use it */
 237              		.loc 1 790 12 view .LVU62
 238 002a 7047     		bx	lr
 239              	.LVL22:
 240              	.L21:
 790:lvgl/src/lv_misc/lv_mem.c ****     /*If the memory is free and big enough then use it */
 241              		.loc 1 790 12 view .LVU63
 242 002c 0020     		movs	r0, #0
 243              	.LVL23:
 801:lvgl/src/lv_misc/lv_mem.c **** }
 244              		.loc 1 801 5 is_stmt 1 view .LVU64
 802:lvgl/src/lv_misc/lv_mem.c **** 
 245              		.loc 1 802 1 is_stmt 0 view .LVU65
 246 002e 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE184:
 250              		.section	.text._lv_mem_init,"ax",%progbits
 251              		.align	1
 252              		.global	_lv_mem_init
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	_lv_mem_init:
 259              	.LFB167:
 114:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 260              		.loc 1 114 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 119:lvgl/src/lv_misc/lv_mem.c ****     work_mem = (uint8_t *)work_mem_int;
 265              		.loc 1 119 5 view .LVU67
 120:lvgl/src/lv_misc/lv_mem.c **** #else
 266              		.loc 1 120 5 view .LVU68
 120:lvgl/src/lv_misc/lv_mem.c **** #else
 267              		.loc 1 120 14 is_stmt 0 view .LVU69
 268 0000 064B     		ldr	r3, .L27
 269 0002 074A     		ldr	r2, .L27+4
 270 0004 1360     		str	r3, [r2]
 125:lvgl/src/lv_misc/lv_mem.c ****     full->header.s.used = 0;
 271              		.loc 1 125 5 is_stmt 1 view .LVU70
 272              	.LVL24:
 126:lvgl/src/lv_misc/lv_mem.c ****     /*The total mem size reduced by the first header and the close patterns */
 273              		.loc 1 126 5 view .LVU71
 126:lvgl/src/lv_misc/lv_mem.c ****     /*The total mem size reduced by the first header and the close patterns */
 274              		.loc 1 126 25 is_stmt 0 view .LVU72
 275 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 276 0008 6FF30002 		bfc	r2, #0, #1
 277 000c 1A70     		strb	r2, [r3]
 128:lvgl/src/lv_misc/lv_mem.c **** #endif
 278              		.loc 1 128 5 is_stmt 1 view .LVU73
 128:lvgl/src/lv_misc/lv_mem.c **** #endif
 279              		.loc 1 128 27 is_stmt 0 view .LVU74
 280 000e 1A68     		ldr	r2, [r3]
ARM GAS  D:\Temp\ccGtTw4W.s 			page 21


 281 0010 47F6FC71 		movw	r1, #32764
 282 0014 61F35F02 		bfi	r2, r1, #1, #31
 283 0018 1A60     		str	r2, [r3]
 130:lvgl/src/lv_misc/lv_mem.c **** 
 284              		.loc 1 130 1 view .LVU75
 285 001a 7047     		bx	lr
 286              	.L28:
 287              		.align	2
 288              	.L27:
 289 001c 00000000 		.word	work_mem_int.10348
 290 0020 00000000 		.word	.LANCHOR0
 291              		.cfi_endproc
 292              	.LFE167:
 294              		.section	.text._lv_mem_deinit,"ax",%progbits
 295              		.align	1
 296              		.global	_lv_mem_deinit
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	_lv_mem_deinit:
 303              	.LFB168:
 137:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 304              		.loc 1 137 1 is_stmt 1 view -0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 139:lvgl/src/lv_misc/lv_mem.c ****     full->header.s.used = 0;
 309              		.loc 1 139 5 view .LVU77
 139:lvgl/src/lv_misc/lv_mem.c ****     full->header.s.used = 0;
 310              		.loc 1 139 20 is_stmt 0 view .LVU78
 311 0000 064B     		ldr	r3, .L30
 312 0002 1B68     		ldr	r3, [r3]
 313              	.LVL25:
 140:lvgl/src/lv_misc/lv_mem.c ****     /*The total mem size reduced by the first header and the close patterns */
 314              		.loc 1 140 5 is_stmt 1 view .LVU79
 140:lvgl/src/lv_misc/lv_mem.c ****     /*The total mem size reduced by the first header and the close patterns */
 315              		.loc 1 140 25 is_stmt 0 view .LVU80
 316 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 317 0006 6FF30002 		bfc	r2, #0, #1
 318 000a 1A70     		strb	r2, [r3]
 142:lvgl/src/lv_misc/lv_mem.c **** #endif
 319              		.loc 1 142 5 is_stmt 1 view .LVU81
 142:lvgl/src/lv_misc/lv_mem.c **** #endif
 320              		.loc 1 142 27 is_stmt 0 view .LVU82
 321 000c 1A68     		ldr	r2, [r3]
 322 000e 47F6FC71 		movw	r1, #32764
 323 0012 61F35F02 		bfi	r2, r1, #1, #31
 324 0016 1A60     		str	r2, [r3]
 144:lvgl/src/lv_misc/lv_mem.c **** 
 325              		.loc 1 144 1 view .LVU83
 326 0018 7047     		bx	lr
 327              	.L31:
 328 001a 00BF     		.align	2
 329              	.L30:
 330 001c 00000000 		.word	.LANCHOR0
ARM GAS  D:\Temp\ccGtTw4W.s 			page 22


 331              		.cfi_endproc
 332              	.LFE168:
 334              		.section	.text.lv_mem_alloc,"ax",%progbits
 335              		.align	1
 336              		.global	lv_mem_alloc
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv4-sp-d16
 342              	lv_mem_alloc:
 343              	.LVL26:
 344              	.LFB169:
 152:lvgl/src/lv_misc/lv_mem.c ****     if(size == 0) {
 345              		.loc 1 152 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 152:lvgl/src/lv_misc/lv_mem.c ****     if(size == 0) {
 349              		.loc 1 152 1 is_stmt 0 view .LVU85
 350 0000 70B5     		push	{r4, r5, r6, lr}
 351              	.LCFI4:
 352              		.cfi_def_cfa_offset 16
 353              		.cfi_offset 4, -16
 354              		.cfi_offset 5, -12
 355              		.cfi_offset 6, -8
 356              		.cfi_offset 14, -4
 153:lvgl/src/lv_misc/lv_mem.c ****         return &zero_mem;
 357              		.loc 1 153 5 is_stmt 1 view .LVU86
 153:lvgl/src/lv_misc/lv_mem.c ****         return &zero_mem;
 358              		.loc 1 153 7 is_stmt 0 view .LVU87
 359 0002 08B3     		cbz	r0, .L37
 360 0004 0646     		mov	r6, r0
 158:lvgl/src/lv_misc/lv_mem.c ****     void * alloc = NULL;
 361              		.loc 1 158 5 is_stmt 1 view .LVU88
 158:lvgl/src/lv_misc/lv_mem.c ****     void * alloc = NULL;
 362              		.loc 1 158 18 is_stmt 0 view .LVU89
 363 0006 0336     		adds	r6, r6, #3
 158:lvgl/src/lv_misc/lv_mem.c ****     void * alloc = NULL;
 364              		.loc 1 158 10 view .LVU90
 365 0008 26F00306 		bic	r6, r6, #3
 366              	.LVL27:
 159:lvgl/src/lv_misc/lv_mem.c **** 
 367              		.loc 1 159 5 is_stmt 1 view .LVU91
 163:lvgl/src/lv_misc/lv_mem.c **** 
 368              		.loc 1 163 5 view .LVU92
 163:lvgl/src/lv_misc/lv_mem.c **** 
 369              		.loc 1 163 20 is_stmt 0 view .LVU93
 370 000c 0024     		movs	r4, #0
 159:lvgl/src/lv_misc/lv_mem.c **** 
 371              		.loc 1 159 12 view .LVU94
 372 000e 2546     		mov	r5, r4
 373 0010 05E0     		b	.L36
 374              	.LVL28:
 375              	.L39:
 172:lvgl/src/lv_misc/lv_mem.c ****         }
 376              		.loc 1 172 13 is_stmt 1 view .LVU95
 172:lvgl/src/lv_misc/lv_mem.c ****         }
ARM GAS  D:\Temp\ccGtTw4W.s 			page 23


 377              		.loc 1 172 21 is_stmt 0 view .LVU96
 378 0012 3146     		mov	r1, r6
 379 0014 FFF7FEFF 		bl	ent_alloc
 380              	.LVL29:
 172:lvgl/src/lv_misc/lv_mem.c ****         }
 381              		.loc 1 172 21 view .LVU97
 382 0018 0546     		mov	r5, r0
 383              	.LVL30:
 384              	.L34:
 175:lvgl/src/lv_misc/lv_mem.c **** 
 385              		.loc 1 175 5 view .LVU98
 386 001a 3CB1     		cbz	r4, .L35
 175:lvgl/src/lv_misc/lv_mem.c **** 
 387              		.loc 1 175 23 discriminator 1 view .LVU99
 388 001c 35B9     		cbnz	r5, .L35
 389              	.LVL31:
 390              	.L36:
 166:lvgl/src/lv_misc/lv_mem.c ****         /* Get the next entry*/
 391              		.loc 1 166 5 is_stmt 1 view .LVU100
 168:lvgl/src/lv_misc/lv_mem.c **** 
 392              		.loc 1 168 9 view .LVU101
 168:lvgl/src/lv_misc/lv_mem.c **** 
 393              		.loc 1 168 13 is_stmt 0 view .LVU102
 394 001e 2046     		mov	r0, r4
 395 0020 FFF7FEFF 		bl	ent_get_next
 396              	.LVL32:
 171:lvgl/src/lv_misc/lv_mem.c ****             alloc = ent_alloc(e, size);
 397              		.loc 1 171 9 is_stmt 1 view .LVU103
 171:lvgl/src/lv_misc/lv_mem.c ****             alloc = ent_alloc(e, size);
 398              		.loc 1 171 11 is_stmt 0 view .LVU104
 399 0024 0446     		mov	r4, r0
 400 0026 0028     		cmp	r0, #0
 401 0028 F3D1     		bne	.L39
 402 002a F6E7     		b	.L34
 403              	.LVL33:
 404              	.L35:
 197:lvgl/src/lv_misc/lv_mem.c ****         LV_LOG_WARN("Couldn't allocate memory");
 405              		.loc 1 197 5 is_stmt 1 view .LVU105
 197:lvgl/src/lv_misc/lv_mem.c ****         LV_LOG_WARN("Couldn't allocate memory");
 406              		.loc 1 197 7 is_stmt 0 view .LVU106
 407 002c 6DB1     		cbz	r5, .L32
 203:lvgl/src/lv_misc/lv_mem.c ****             if((((uintptr_t) alloc - (uintptr_t) work_mem) + size) > mem_max_size) {
 408              		.loc 1 203 9 is_stmt 1 view .LVU107
 203:lvgl/src/lv_misc/lv_mem.c ****             if((((uintptr_t) alloc - (uintptr_t) work_mem) + size) > mem_max_size) {
 409              		.loc 1 203 32 is_stmt 0 view .LVU108
 410 002e 084B     		ldr	r3, .L40
 411 0030 1B68     		ldr	r3, [r3]
 203:lvgl/src/lv_misc/lv_mem.c ****             if((((uintptr_t) alloc - (uintptr_t) work_mem) + size) > mem_max_size) {
 412              		.loc 1 203 11 view .LVU109
 413 0032 9D42     		cmp	r5, r3
 414 0034 09D9     		bls	.L32
 204:lvgl/src/lv_misc/lv_mem.c ****                 mem_max_size = ((uintptr_t) alloc - (uintptr_t) work_mem) + size;
 415              		.loc 1 204 13 is_stmt 1 view .LVU110
 204:lvgl/src/lv_misc/lv_mem.c ****                 mem_max_size = ((uintptr_t) alloc - (uintptr_t) work_mem) + size;
 416              		.loc 1 204 36 is_stmt 0 view .LVU111
 417 0036 EB1A     		subs	r3, r5, r3
 204:lvgl/src/lv_misc/lv_mem.c ****                 mem_max_size = ((uintptr_t) alloc - (uintptr_t) work_mem) + size;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 24


 418              		.loc 1 204 60 view .LVU112
 419 0038 1E44     		add	r6, r6, r3
 420              	.LVL34:
 204:lvgl/src/lv_misc/lv_mem.c ****                 mem_max_size = ((uintptr_t) alloc - (uintptr_t) work_mem) + size;
 421              		.loc 1 204 68 view .LVU113
 422 003a 064B     		ldr	r3, .L40+4
 423 003c 1B68     		ldr	r3, [r3]
 204:lvgl/src/lv_misc/lv_mem.c ****                 mem_max_size = ((uintptr_t) alloc - (uintptr_t) work_mem) + size;
 424              		.loc 1 204 15 view .LVU114
 425 003e 9E42     		cmp	r6, r3
 426 0040 03D9     		bls	.L32
 205:lvgl/src/lv_misc/lv_mem.c ****             }
 427              		.loc 1 205 17 is_stmt 1 view .LVU115
 205:lvgl/src/lv_misc/lv_mem.c ****             }
 428              		.loc 1 205 30 is_stmt 0 view .LVU116
 429 0042 044B     		ldr	r3, .L40+4
 430 0044 1E60     		str	r6, [r3]
 431 0046 00E0     		b	.L32
 432              	.LVL35:
 433              	.L37:
 154:lvgl/src/lv_misc/lv_mem.c ****     }
 434              		.loc 1 154 16 view .LVU117
 435 0048 034D     		ldr	r5, .L40+8
 436              	.LVL36:
 437              	.L32:
 212:lvgl/src/lv_misc/lv_mem.c **** 
 438              		.loc 1 212 1 view .LVU118
 439 004a 2846     		mov	r0, r5
 440 004c 70BD     		pop	{r4, r5, r6, pc}
 441              	.L41:
 442 004e 00BF     		.align	2
 443              	.L40:
 444 0050 00000000 		.word	.LANCHOR0
 445 0054 00000000 		.word	.LANCHOR2
 446 0058 00000000 		.word	.LANCHOR1
 447              		.cfi_endproc
 448              	.LFE169:
 450              		.section	.text.lv_mem_defrag,"ax",%progbits
 451              		.align	1
 452              		.global	lv_mem_defrag
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu fpv4-sp-d16
 458              	lv_mem_defrag:
 459              	.LFB172:
 335:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 460              		.loc 1 335 1 is_stmt 1 view -0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464 0000 10B5     		push	{r4, lr}
 465              	.LCFI5:
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 4, -8
 468              		.cfi_offset 14, -4
 337:lvgl/src/lv_misc/lv_mem.c ****     lv_mem_ent_t * e_next;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 25


 469              		.loc 1 337 5 view .LVU120
 338:lvgl/src/lv_misc/lv_mem.c ****     e_free = ent_get_next(NULL);
 470              		.loc 1 338 5 view .LVU121
 339:lvgl/src/lv_misc/lv_mem.c **** 
 471              		.loc 1 339 5 view .LVU122
 339:lvgl/src/lv_misc/lv_mem.c **** 
 472              		.loc 1 339 14 is_stmt 0 view .LVU123
 473 0002 0020     		movs	r0, #0
 474 0004 FFF7FEFF 		bl	ent_get_next
 475              	.LVL37:
 476 0008 0446     		mov	r4, r0
 477              	.LVL38:
 339:lvgl/src/lv_misc/lv_mem.c **** 
 478              		.loc 1 339 14 view .LVU124
 479 000a 17E0     		b	.L43
 480              	.LVL39:
 481              	.L44:
 352:lvgl/src/lv_misc/lv_mem.c **** 
 482              		.loc 1 352 9 is_stmt 1 view .LVU125
 352:lvgl/src/lv_misc/lv_mem.c **** 
 483              		.loc 1 352 11 is_stmt 0 view .LVU126
 484 000c 04B3     		cbz	r4, .L42
 355:lvgl/src/lv_misc/lv_mem.c ****         while(e_next != NULL) {
 485              		.loc 1 355 9 is_stmt 1 view .LVU127
 355:lvgl/src/lv_misc/lv_mem.c ****         while(e_next != NULL) {
 486              		.loc 1 355 18 is_stmt 0 view .LVU128
 487 000e 2046     		mov	r0, r4
 488 0010 FFF7FEFF 		bl	ent_get_next
 489              	.LVL40:
 356:lvgl/src/lv_misc/lv_mem.c ****             if(e_next->header.s.used == 0) {
 490              		.loc 1 356 9 is_stmt 1 view .LVU129
 491              	.L47:
 356:lvgl/src/lv_misc/lv_mem.c ****             if(e_next->header.s.used == 0) {
 492              		.loc 1 356 14 is_stmt 0 view .LVU130
 493 0014 80B1     		cbz	r0, .L48
 357:lvgl/src/lv_misc/lv_mem.c ****                 e_free->header.s.d_size += e_next->header.s.d_size + sizeof(e_next->header);
 494              		.loc 1 357 13 is_stmt 1 view .LVU131
 357:lvgl/src/lv_misc/lv_mem.c ****                 e_free->header.s.d_size += e_next->header.s.d_size + sizeof(e_next->header);
 495              		.loc 1 357 38 is_stmt 0 view .LVU132
 496 0016 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 357:lvgl/src/lv_misc/lv_mem.c ****                 e_free->header.s.d_size += e_next->header.s.d_size + sizeof(e_next->header);
 497              		.loc 1 357 15 view .LVU133
 498 0018 13F0010F 		tst	r3, #1
 499 001c 0CD1     		bne	.L48
 358:lvgl/src/lv_misc/lv_mem.c ****             }
 500              		.loc 1 358 17 is_stmt 1 view .LVU134
 358:lvgl/src/lv_misc/lv_mem.c ****             }
 501              		.loc 1 358 60 is_stmt 0 view .LVU135
 502 001e 0168     		ldr	r1, [r0]
 358:lvgl/src/lv_misc/lv_mem.c ****             }
 503              		.loc 1 358 41 view .LVU136
 504 0020 2368     		ldr	r3, [r4]
 505 0022 C3F35E02 		ubfx	r2, r3, #1, #31
 506 0026 02EB5102 		add	r2, r2, r1, lsr #1
 507 002a 0432     		adds	r2, r2, #4
 508 002c 62F35F03 		bfi	r3, r2, #1, #31
 509 0030 2360     		str	r3, [r4]
ARM GAS  D:\Temp\ccGtTw4W.s 			page 26


 364:lvgl/src/lv_misc/lv_mem.c ****         }
 510              		.loc 1 364 13 is_stmt 1 view .LVU137
 364:lvgl/src/lv_misc/lv_mem.c ****         }
 511              		.loc 1 364 22 is_stmt 0 view .LVU138
 512 0032 FFF7FEFF 		bl	ent_get_next
 513              	.LVL41:
 364:lvgl/src/lv_misc/lv_mem.c ****         }
 514              		.loc 1 364 22 view .LVU139
 515 0036 EDE7     		b	.L47
 516              	.L48:
 367:lvgl/src/lv_misc/lv_mem.c **** 
 517              		.loc 1 367 9 is_stmt 1 view .LVU140
 367:lvgl/src/lv_misc/lv_mem.c **** 
 518              		.loc 1 367 11 is_stmt 0 view .LVU141
 519 0038 50B1     		cbz	r0, .L42
 520              	.LVL42:
 521              	.L50:
 335:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 522              		.loc 1 335 1 view .LVU142
 523 003a 0446     		mov	r4, r0
 524              	.L43:
 525              	.LVL43:
 343:lvgl/src/lv_misc/lv_mem.c ****             if(e_free->header.s.used != 0) {
 526              		.loc 1 343 14 view .LVU143
 527 003c 002C     		cmp	r4, #0
 528 003e E5D0     		beq	.L44
 344:lvgl/src/lv_misc/lv_mem.c ****                 e_free = ent_get_next(e_free);
 529              		.loc 1 344 13 is_stmt 1 view .LVU144
 344:lvgl/src/lv_misc/lv_mem.c ****                 e_free = ent_get_next(e_free);
 530              		.loc 1 344 38 is_stmt 0 view .LVU145
 531 0040 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 344:lvgl/src/lv_misc/lv_mem.c ****                 e_free = ent_get_next(e_free);
 532              		.loc 1 344 15 view .LVU146
 533 0042 13F0010F 		tst	r3, #1
 534 0046 E1D0     		beq	.L44
 345:lvgl/src/lv_misc/lv_mem.c ****             }
 535              		.loc 1 345 17 is_stmt 1 view .LVU147
 345:lvgl/src/lv_misc/lv_mem.c ****             }
 536              		.loc 1 345 26 is_stmt 0 view .LVU148
 537 0048 2046     		mov	r0, r4
 538 004a FFF7FEFF 		bl	ent_get_next
 539              	.LVL44:
 345:lvgl/src/lv_misc/lv_mem.c ****             }
 540              		.loc 1 345 26 view .LVU149
 541 004e F4E7     		b	.L50
 542              	.LVL45:
 543              	.L42:
 373:lvgl/src/lv_misc/lv_mem.c **** 
 544              		.loc 1 373 1 view .LVU150
 545 0050 10BD     		pop	{r4, pc}
 373:lvgl/src/lv_misc/lv_mem.c **** 
 546              		.loc 1 373 1 view .LVU151
 547              		.cfi_endproc
 548              	.LFE172:
 550              		.section	.text.lv_mem_free,"ax",%progbits
 551              		.align	1
 552              		.global	lv_mem_free
ARM GAS  D:\Temp\ccGtTw4W.s 			page 27


 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu fpv4-sp-d16
 558              	lv_mem_free:
 559              	.LVL46:
 560              	.LFB170:
 219:lvgl/src/lv_misc/lv_mem.c ****     if(data == &zero_mem) return;
 561              		.loc 1 219 1 is_stmt 1 view -0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 220:lvgl/src/lv_misc/lv_mem.c ****     if(data == NULL) return;
 565              		.loc 1 220 5 view .LVU153
 220:lvgl/src/lv_misc/lv_mem.c ****     if(data == NULL) return;
 566              		.loc 1 220 7 is_stmt 0 view .LVU154
 567 0000 184B     		ldr	r3, .L61
 568 0002 9842     		cmp	r0, r3
 569 0004 2CD0     		beq	.L58
 221:lvgl/src/lv_misc/lv_mem.c **** 
 570              		.loc 1 221 5 is_stmt 1 view .LVU155
 221:lvgl/src/lv_misc/lv_mem.c **** 
 571              		.loc 1 221 7 is_stmt 0 view .LVU156
 572 0006 58B3     		cbz	r0, .L58
 219:lvgl/src/lv_misc/lv_mem.c ****     if(data == &zero_mem) return;
 573              		.loc 1 219 1 view .LVU157
 574 0008 10B5     		push	{r4, lr}
 575              	.LCFI6:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 4, -8
 578              		.cfi_offset 14, -4
 579 000a 0446     		mov	r4, r0
 229:lvgl/src/lv_misc/lv_mem.c ****     e->header.s.used = 0;
 580              		.loc 1 229 5 is_stmt 1 view .LVU158
 229:lvgl/src/lv_misc/lv_mem.c ****     e->header.s.used = 0;
 581              		.loc 1 229 20 is_stmt 0 view .LVU159
 582 000c 0438     		subs	r0, r0, #4
 583              	.LVL47:
 230:lvgl/src/lv_misc/lv_mem.c **** #endif
 584              		.loc 1 230 5 is_stmt 1 view .LVU160
 230:lvgl/src/lv_misc/lv_mem.c **** #endif
 585              		.loc 1 230 22 is_stmt 0 view .LVU161
 586 000e 14F8043C 		ldrb	r3, [r4, #-4]	@ zero_extendqisi2
 587 0012 6FF30003 		bfc	r3, #0, #1
 588 0016 04F8043C 		strb	r3, [r4, #-4]
 235:lvgl/src/lv_misc/lv_mem.c ****     full_defrag_cnt++;
 589              		.loc 1 235 5 is_stmt 1 view .LVU162
 236:lvgl/src/lv_misc/lv_mem.c ****     if(full_defrag_cnt < LV_MEM_FULL_DEFRAG_CNT) {
 590              		.loc 1 236 5 view .LVU163
 236:lvgl/src/lv_misc/lv_mem.c ****     if(full_defrag_cnt < LV_MEM_FULL_DEFRAG_CNT) {
 591              		.loc 1 236 20 is_stmt 0 view .LVU164
 592 001a 134A     		ldr	r2, .L61+4
 593 001c 1388     		ldrh	r3, [r2]
 594 001e 0133     		adds	r3, r3, #1
 595 0020 9BB2     		uxth	r3, r3
 596 0022 1380     		strh	r3, [r2]	@ movhi
 237:lvgl/src/lv_misc/lv_mem.c ****         /* Make a simple defrag.
ARM GAS  D:\Temp\ccGtTw4W.s 			page 28


 597              		.loc 1 237 5 is_stmt 1 view .LVU165
 237:lvgl/src/lv_misc/lv_mem.c ****         /* Make a simple defrag.
 598              		.loc 1 237 7 is_stmt 0 view .LVU166
 599 0024 0F2B     		cmp	r3, #15
 600 0026 15D8     		bhi	.L54
 601              	.LBB5:
 240:lvgl/src/lv_misc/lv_mem.c ****         e_next = ent_get_next(e);
 602              		.loc 1 240 9 is_stmt 1 view .LVU167
 241:lvgl/src/lv_misc/lv_mem.c ****         while(e_next != NULL) {
 603              		.loc 1 241 9 view .LVU168
 241:lvgl/src/lv_misc/lv_mem.c ****         while(e_next != NULL) {
 604              		.loc 1 241 18 is_stmt 0 view .LVU169
 605 0028 FFF7FEFF 		bl	ent_get_next
 606              	.LVL48:
 242:lvgl/src/lv_misc/lv_mem.c ****             if(e_next->header.s.used == 0) {
 607              		.loc 1 242 9 is_stmt 1 view .LVU170
 608              	.L55:
 242:lvgl/src/lv_misc/lv_mem.c ****             if(e_next->header.s.used == 0) {
 609              		.loc 1 242 14 is_stmt 0 view .LVU171
 610 002c B8B1     		cbz	r0, .L52
 243:lvgl/src/lv_misc/lv_mem.c ****                 e->header.s.d_size += e_next->header.s.d_size + sizeof(e->header);
 611              		.loc 1 243 13 is_stmt 1 view .LVU172
 243:lvgl/src/lv_misc/lv_mem.c ****                 e->header.s.d_size += e_next->header.s.d_size + sizeof(e->header);
 612              		.loc 1 243 38 is_stmt 0 view .LVU173
 613 002e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 243:lvgl/src/lv_misc/lv_mem.c ****                 e->header.s.d_size += e_next->header.s.d_size + sizeof(e->header);
 614              		.loc 1 243 15 view .LVU174
 615 0030 13F0010F 		tst	r3, #1
 616 0034 13D1     		bne	.L52
 244:lvgl/src/lv_misc/lv_mem.c ****             }
 617              		.loc 1 244 17 is_stmt 1 view .LVU175
 244:lvgl/src/lv_misc/lv_mem.c ****             }
 618              		.loc 1 244 55 is_stmt 0 view .LVU176
 619 0036 0168     		ldr	r1, [r0]
 244:lvgl/src/lv_misc/lv_mem.c ****             }
 620              		.loc 1 244 36 view .LVU177
 621 0038 54F8043C 		ldr	r3, [r4, #-4]
 622 003c C3F35E02 		ubfx	r2, r3, #1, #31
 623 0040 02EB5102 		add	r2, r2, r1, lsr #1
 624 0044 0432     		adds	r2, r2, #4
 625 0046 62F35F03 		bfi	r3, r2, #1, #31
 626 004a 44F8043C 		str	r3, [r4, #-4]
 249:lvgl/src/lv_misc/lv_mem.c ****         }
 627              		.loc 1 249 13 is_stmt 1 view .LVU178
 249:lvgl/src/lv_misc/lv_mem.c ****         }
 628              		.loc 1 249 22 is_stmt 0 view .LVU179
 629 004e FFF7FEFF 		bl	ent_get_next
 630              	.LVL49:
 249:lvgl/src/lv_misc/lv_mem.c ****         }
 631              		.loc 1 249 22 view .LVU180
 632 0052 EBE7     		b	.L55
 633              	.LVL50:
 634              	.L54:
 249:lvgl/src/lv_misc/lv_mem.c ****         }
 635              		.loc 1 249 22 view .LVU181
 636              	.LBE5:
 253:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_defrag();
ARM GAS  D:\Temp\ccGtTw4W.s 			page 29


 637              		.loc 1 253 9 is_stmt 1 view .LVU182
 253:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_defrag();
 638              		.loc 1 253 25 is_stmt 0 view .LVU183
 639 0054 044B     		ldr	r3, .L61+4
 640 0056 0022     		movs	r2, #0
 641 0058 1A80     		strh	r2, [r3]	@ movhi
 254:lvgl/src/lv_misc/lv_mem.c **** 
 642              		.loc 1 254 9 is_stmt 1 view .LVU184
 643 005a FFF7FEFF 		bl	lv_mem_defrag
 644              	.LVL51:
 645              	.L52:
 265:lvgl/src/lv_misc/lv_mem.c **** 
 646              		.loc 1 265 1 is_stmt 0 view .LVU185
 647 005e 10BD     		pop	{r4, pc}
 648              	.LVL52:
 649              	.L58:
 650              	.LCFI7:
 651              		.cfi_def_cfa_offset 0
 652              		.cfi_restore 4
 653              		.cfi_restore 14
 265:lvgl/src/lv_misc/lv_mem.c **** 
 654              		.loc 1 265 1 view .LVU186
 655 0060 7047     		bx	lr
 656              	.L62:
 657 0062 00BF     		.align	2
 658              	.L61:
 659 0064 00000000 		.word	.LANCHOR1
 660 0068 00000000 		.word	.LANCHOR3
 661              		.cfi_endproc
 662              	.LFE170:
 664              		.section	.text.lv_mem_test,"ax",%progbits
 665              		.align	1
 666              		.global	lv_mem_test
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu fpv4-sp-d16
 672              	lv_mem_test:
 673              	.LFB173:
 376:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 674              		.loc 1 376 1 is_stmt 1 view -0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678 0000 08B5     		push	{r3, lr}
 679              	.LCFI8:
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 3, -8
 682              		.cfi_offset 14, -4
 378:lvgl/src/lv_misc/lv_mem.c ****     e = ent_get_next(NULL);
 683              		.loc 1 378 5 view .LVU188
 379:lvgl/src/lv_misc/lv_mem.c ****     while(e) {
 684              		.loc 1 379 5 view .LVU189
 379:lvgl/src/lv_misc/lv_mem.c ****     while(e) {
 685              		.loc 1 379 9 is_stmt 0 view .LVU190
 686 0002 0020     		movs	r0, #0
 687 0004 FFF7FEFF 		bl	ent_get_next
ARM GAS  D:\Temp\ccGtTw4W.s 			page 30


 688              	.LVL53:
 380:lvgl/src/lv_misc/lv_mem.c ****         if(e->header.s.d_size > LV_MEM_SIZE) {
 689              		.loc 1 380 5 is_stmt 1 view .LVU191
 690              	.L64:
 380:lvgl/src/lv_misc/lv_mem.c ****         if(e->header.s.d_size > LV_MEM_SIZE) {
 691              		.loc 1 380 10 is_stmt 0 view .LVU192
 692 0008 78B1     		cbz	r0, .L70
 693              	.LBB6:
 381:lvgl/src/lv_misc/lv_mem.c ****             return LV_RES_INV;
 694              		.loc 1 381 9 is_stmt 1 view .LVU193
 381:lvgl/src/lv_misc/lv_mem.c ****             return LV_RES_INV;
 695              		.loc 1 381 23 is_stmt 0 view .LVU194
 696 000a 0368     		ldr	r3, [r0]
 697 000c C3F35E03 		ubfx	r3, r3, #1, #31
 381:lvgl/src/lv_misc/lv_mem.c ****             return LV_RES_INV;
 698              		.loc 1 381 11 view .LVU195
 699 0010 B3F5004F 		cmp	r3, #32768
 700 0014 0BD8     		bhi	.L67
 384:lvgl/src/lv_misc/lv_mem.c ****         if(e8 + e->header.s.d_size > work_mem + LV_MEM_SIZE) {
 701              		.loc 1 384 9 is_stmt 1 view .LVU196
 702              	.LVL54:
 385:lvgl/src/lv_misc/lv_mem.c ****             return LV_RES_INV;
 703              		.loc 1 385 9 view .LVU197
 385:lvgl/src/lv_misc/lv_mem.c ****             return LV_RES_INV;
 704              		.loc 1 385 15 is_stmt 0 view .LVU198
 705 0016 0344     		add	r3, r3, r0
 385:lvgl/src/lv_misc/lv_mem.c ****             return LV_RES_INV;
 706              		.loc 1 385 47 view .LVU199
 707 0018 074A     		ldr	r2, .L71
 708 001a 1268     		ldr	r2, [r2]
 709 001c 02F50042 		add	r2, r2, #32768
 385:lvgl/src/lv_misc/lv_mem.c ****             return LV_RES_INV;
 710              		.loc 1 385 11 view .LVU200
 711 0020 9342     		cmp	r3, r2
 712 0022 06D8     		bhi	.L68
 388:lvgl/src/lv_misc/lv_mem.c ****     }
 713              		.loc 1 388 9 is_stmt 1 view .LVU201
 388:lvgl/src/lv_misc/lv_mem.c ****     }
 714              		.loc 1 388 13 is_stmt 0 view .LVU202
 715 0024 FFF7FEFF 		bl	ent_get_next
 716              	.LVL55:
 388:lvgl/src/lv_misc/lv_mem.c ****     }
 717              		.loc 1 388 13 view .LVU203
 718 0028 EEE7     		b	.L64
 719              	.L70:
 388:lvgl/src/lv_misc/lv_mem.c ****     }
 720              		.loc 1 388 13 view .LVU204
 721              	.LBE6:
 391:lvgl/src/lv_misc/lv_mem.c **** }
 722              		.loc 1 391 12 view .LVU205
 723 002a 0120     		movs	r0, #1
 724              	.LVL56:
 725              	.L65:
 392:lvgl/src/lv_misc/lv_mem.c **** 
 726              		.loc 1 392 1 view .LVU206
 727 002c 08BD     		pop	{r3, pc}
 728              	.LVL57:
ARM GAS  D:\Temp\ccGtTw4W.s 			page 31


 729              	.L67:
 730              	.LBB7:
 382:lvgl/src/lv_misc/lv_mem.c ****         }
 731              		.loc 1 382 20 view .LVU207
 732 002e 0020     		movs	r0, #0
 733              	.LVL58:
 382:lvgl/src/lv_misc/lv_mem.c ****         }
 734              		.loc 1 382 20 view .LVU208
 735 0030 FCE7     		b	.L65
 736              	.LVL59:
 737              	.L68:
 386:lvgl/src/lv_misc/lv_mem.c ****         }
 738              		.loc 1 386 20 view .LVU209
 739 0032 0020     		movs	r0, #0
 740              	.LVL60:
 386:lvgl/src/lv_misc/lv_mem.c ****         }
 741              		.loc 1 386 20 view .LVU210
 742 0034 FAE7     		b	.L65
 743              	.L72:
 744 0036 00BF     		.align	2
 745              	.L71:
 746 0038 00000000 		.word	.LANCHOR0
 747              	.LBE7:
 748              		.cfi_endproc
 749              	.LFE173:
 751              		.section	.text._lv_mem_get_size,"ax",%progbits
 752              		.align	1
 753              		.global	_lv_mem_get_size
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 757              		.fpu fpv4-sp-d16
 759              	_lv_mem_get_size:
 760              	.LVL61:
 761              	.LFB175:
 444:lvgl/src/lv_misc/lv_mem.c ****     if(data == NULL) return 0;
 762              		.loc 1 444 1 is_stmt 1 view -0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 445:lvgl/src/lv_misc/lv_mem.c ****     if(data == &zero_mem) return 0;
 767              		.loc 1 445 5 view .LVU212
 445:lvgl/src/lv_misc/lv_mem.c ****     if(data == &zero_mem) return 0;
 768              		.loc 1 445 7 is_stmt 0 view .LVU213
 769 0000 38B1     		cbz	r0, .L75
 446:lvgl/src/lv_misc/lv_mem.c **** 
 770              		.loc 1 446 5 is_stmt 1 view .LVU214
 446:lvgl/src/lv_misc/lv_mem.c **** 
 771              		.loc 1 446 7 is_stmt 0 view .LVU215
 772 0002 064A     		ldr	r2, .L77
 773 0004 9042     		cmp	r0, r2
 774 0006 06D0     		beq	.L76
 448:lvgl/src/lv_misc/lv_mem.c **** 
 775              		.loc 1 448 5 is_stmt 1 view .LVU216
 776              	.LVL62:
 450:lvgl/src/lv_misc/lv_mem.c **** }
ARM GAS  D:\Temp\ccGtTw4W.s 			page 32


 777              		.loc 1 450 5 view .LVU217
 450:lvgl/src/lv_misc/lv_mem.c **** }
 778              		.loc 1 450 23 is_stmt 0 view .LVU218
 779 0008 50F8040C 		ldr	r0, [r0, #-4]
 780              	.LVL63:
 450:lvgl/src/lv_misc/lv_mem.c **** }
 781              		.loc 1 450 23 view .LVU219
 782 000c C0F35E00 		ubfx	r0, r0, #1, #31
 783 0010 7047     		bx	lr
 784              	.LVL64:
 785              	.L75:
 445:lvgl/src/lv_misc/lv_mem.c ****     if(data == &zero_mem) return 0;
 786              		.loc 1 445 29 view .LVU220
 787 0012 0020     		movs	r0, #0
 788              	.LVL65:
 445:lvgl/src/lv_misc/lv_mem.c ****     if(data == &zero_mem) return 0;
 789              		.loc 1 445 29 view .LVU221
 790 0014 7047     		bx	lr
 791              	.LVL66:
 792              	.L76:
 446:lvgl/src/lv_misc/lv_mem.c **** 
 793              		.loc 1 446 34 view .LVU222
 794 0016 0020     		movs	r0, #0
 795              	.LVL67:
 451:lvgl/src/lv_misc/lv_mem.c **** 
 796              		.loc 1 451 1 view .LVU223
 797 0018 7047     		bx	lr
 798              	.L78:
 799 001a 00BF     		.align	2
 800              	.L77:
 801 001c 00000000 		.word	.LANCHOR1
 802              		.cfi_endproc
 803              	.LFE175:
 805              		.section	.text._lv_mem_buf_release,"ax",%progbits
 806              		.align	1
 807              		.global	_lv_mem_buf_release
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 811              		.fpu fpv4-sp-d16
 813              	_lv_mem_buf_release:
 814              	.LVL68:
 815              	.LFB177:
 529:lvgl/src/lv_misc/lv_mem.c ****     uint8_t i;
 816              		.loc 1 529 1 is_stmt 1 view -0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 530:lvgl/src/lv_misc/lv_mem.c **** 
 821              		.loc 1 530 5 view .LVU225
 533:lvgl/src/lv_misc/lv_mem.c ****         if(mem_buf_small[i].p == p) {
 822              		.loc 1 533 5 view .LVU226
 533:lvgl/src/lv_misc/lv_mem.c ****         if(mem_buf_small[i].p == p) {
 823              		.loc 1 533 11 is_stmt 0 view .LVU227
 824 0000 0023     		movs	r3, #0
 825              	.LVL69:
ARM GAS  D:\Temp\ccGtTw4W.s 			page 33


 826              	.L80:
 533:lvgl/src/lv_misc/lv_mem.c ****         if(mem_buf_small[i].p == p) {
 827              		.loc 1 533 5 discriminator 1 view .LVU228
 828 0002 012B     		cmp	r3, #1
 829 0004 10D8     		bhi	.L87
 534:lvgl/src/lv_misc/lv_mem.c ****             mem_buf_small[i].used = 0;
 830              		.loc 1 534 9 is_stmt 1 view .LVU229
 534:lvgl/src/lv_misc/lv_mem.c ****             mem_buf_small[i].used = 0;
 831              		.loc 1 534 28 is_stmt 0 view .LVU230
 832 0006 1946     		mov	r1, r3
 833 0008 124A     		ldr	r2, .L91
 834 000a 52F83320 		ldr	r2, [r2, r3, lsl #3]
 534:lvgl/src/lv_misc/lv_mem.c ****             mem_buf_small[i].used = 0;
 835              		.loc 1 534 11 view .LVU231
 836 000e 8242     		cmp	r2, r0
 837 0010 02D0     		beq	.L88
 533:lvgl/src/lv_misc/lv_mem.c ****         if(mem_buf_small[i].p == p) {
 838              		.loc 1 533 71 discriminator 2 view .LVU232
 839 0012 0133     		adds	r3, r3, #1
 840              	.LVL70:
 533:lvgl/src/lv_misc/lv_mem.c ****         if(mem_buf_small[i].p == p) {
 841              		.loc 1 533 71 discriminator 2 view .LVU233
 842 0014 DBB2     		uxtb	r3, r3
 843              	.LVL71:
 533:lvgl/src/lv_misc/lv_mem.c ****         if(mem_buf_small[i].p == p) {
 844              		.loc 1 533 71 discriminator 2 view .LVU234
 845 0016 F4E7     		b	.L80
 846              	.L88:
 535:lvgl/src/lv_misc/lv_mem.c ****             return;
 847              		.loc 1 535 13 is_stmt 1 view .LVU235
 535:lvgl/src/lv_misc/lv_mem.c ****             return;
 848              		.loc 1 535 35 is_stmt 0 view .LVU236
 849 0018 0E4B     		ldr	r3, .L91
 850              	.LVL72:
 535:lvgl/src/lv_misc/lv_mem.c ****             return;
 851              		.loc 1 535 35 view .LVU237
 852 001a 03EBC101 		add	r1, r3, r1, lsl #3
 853 001e 8B79     		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 854 0020 6FF30003 		bfc	r3, #0, #1
 855 0024 8B71     		strb	r3, [r1, #6]
 536:lvgl/src/lv_misc/lv_mem.c ****         }
 856              		.loc 1 536 13 is_stmt 1 view .LVU238
 857 0026 7047     		bx	lr
 858              	.LVL73:
 859              	.L87:
 540:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).p == p) {
 860              		.loc 1 540 11 is_stmt 0 view .LVU239
 861 0028 0023     		movs	r3, #0
 862              	.LVL74:
 863              	.L84:
 540:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).p == p) {
 864              		.loc 1 540 5 discriminator 1 view .LVU240
 865 002a 0F2B     		cmp	r3, #15
 866 002c 10D8     		bhi	.L89
 541:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).used = 0;
 867              		.loc 1 541 9 is_stmt 1 view .LVU241
 541:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).used = 0;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 34


 868              		.loc 1 541 38 is_stmt 0 view .LVU242
 869 002e 1946     		mov	r1, r3
 870 0030 094A     		ldr	r2, .L91+4
 871 0032 52F83320 		ldr	r2, [r2, r3, lsl #3]
 541:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).used = 0;
 872              		.loc 1 541 11 view .LVU243
 873 0036 8242     		cmp	r2, r0
 874 0038 02D0     		beq	.L90
 540:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).p == p) {
 875              		.loc 1 540 41 discriminator 2 view .LVU244
 876 003a 0133     		adds	r3, r3, #1
 877              	.LVL75:
 540:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).p == p) {
 878              		.loc 1 540 41 discriminator 2 view .LVU245
 879 003c DBB2     		uxtb	r3, r3
 880              	.LVL76:
 540:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).p == p) {
 881              		.loc 1 540 41 discriminator 2 view .LVU246
 882 003e F4E7     		b	.L84
 883              	.L90:
 542:lvgl/src/lv_misc/lv_mem.c ****             return;
 884              		.loc 1 542 13 is_stmt 1 view .LVU247
 542:lvgl/src/lv_misc/lv_mem.c ****             return;
 885              		.loc 1 542 45 is_stmt 0 view .LVU248
 886 0040 054B     		ldr	r3, .L91+4
 887              	.LVL77:
 542:lvgl/src/lv_misc/lv_mem.c ****             return;
 888              		.loc 1 542 45 view .LVU249
 889 0042 03EBC101 		add	r1, r3, r1, lsl #3
 890 0046 8B79     		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 891 0048 6FF30003 		bfc	r3, #0, #1
 892 004c 8B71     		strb	r3, [r1, #6]
 543:lvgl/src/lv_misc/lv_mem.c ****         }
 893              		.loc 1 543 13 is_stmt 1 view .LVU250
 894 004e 7047     		bx	lr
 895              	.LVL78:
 896              	.L89:
 548:lvgl/src/lv_misc/lv_mem.c **** 
 897              		.loc 1 548 1 is_stmt 0 view .LVU251
 898 0050 7047     		bx	lr
 899              	.L92:
 900 0052 00BF     		.align	2
 901              	.L91:
 902 0054 00000000 		.word	.LANCHOR4
 903 0058 00000000 		.word	_lv_mem_buf
 904              		.cfi_endproc
 905              	.LFE177:
 907              		.section	.text._lv_mem_buf_free_all,"ax",%progbits
 908              		.align	1
 909              		.global	_lv_mem_buf_free_all
 910              		.syntax unified
 911              		.thumb
 912              		.thumb_func
 913              		.fpu fpv4-sp-d16
 915              	_lv_mem_buf_free_all:
 916              	.LFB178:
 554:lvgl/src/lv_misc/lv_mem.c ****     uint8_t i;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 35


 917              		.loc 1 554 1 is_stmt 1 view -0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 0
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921 0000 10B5     		push	{r4, lr}
 922              	.LCFI9:
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 4, -8
 925              		.cfi_offset 14, -4
 555:lvgl/src/lv_misc/lv_mem.c ****     for(i = 0; i < sizeof(mem_buf_small) / sizeof(mem_buf_small[0]); i++) {
 926              		.loc 1 555 5 view .LVU253
 556:lvgl/src/lv_misc/lv_mem.c ****         mem_buf_small[i].used = 0;
 927              		.loc 1 556 5 view .LVU254
 928              	.LVL79:
 556:lvgl/src/lv_misc/lv_mem.c ****         mem_buf_small[i].used = 0;
 929              		.loc 1 556 11 is_stmt 0 view .LVU255
 930 0002 0023     		movs	r3, #0
 556:lvgl/src/lv_misc/lv_mem.c ****         mem_buf_small[i].used = 0;
 931              		.loc 1 556 5 view .LVU256
 932 0004 08E0     		b	.L94
 933              	.LVL80:
 934              	.L95:
 557:lvgl/src/lv_misc/lv_mem.c ****     }
 935              		.loc 1 557 9 is_stmt 1 discriminator 3 view .LVU257
 557:lvgl/src/lv_misc/lv_mem.c ****     }
 936              		.loc 1 557 31 is_stmt 0 discriminator 3 view .LVU258
 937 0006 124A     		ldr	r2, .L102
 938 0008 02EBC302 		add	r2, r2, r3, lsl #3
 939 000c 9179     		ldrb	r1, [r2, #6]	@ zero_extendqisi2
 940 000e 6FF30001 		bfc	r1, #0, #1
 941 0012 9171     		strb	r1, [r2, #6]
 556:lvgl/src/lv_misc/lv_mem.c ****         mem_buf_small[i].used = 0;
 942              		.loc 1 556 71 discriminator 3 view .LVU259
 943 0014 0133     		adds	r3, r3, #1
 944              	.LVL81:
 556:lvgl/src/lv_misc/lv_mem.c ****         mem_buf_small[i].used = 0;
 945              		.loc 1 556 71 discriminator 3 view .LVU260
 946 0016 DBB2     		uxtb	r3, r3
 947              	.LVL82:
 948              	.L94:
 556:lvgl/src/lv_misc/lv_mem.c ****         mem_buf_small[i].used = 0;
 949              		.loc 1 556 5 discriminator 1 view .LVU261
 950 0018 012B     		cmp	r3, #1
 951 001a F4D9     		bls	.L95
 560:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).p) {
 952              		.loc 1 560 11 view .LVU262
 953 001c 0024     		movs	r4, #0
 954 001e 0EE0     		b	.L96
 955              	.LVL83:
 956              	.L101:
 562:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).p = NULL;
 957              		.loc 1 562 13 is_stmt 1 view .LVU263
 958 0020 FFF7FEFF 		bl	lv_mem_free
 959              	.LVL84:
 563:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).used = 0;
 960              		.loc 1 563 13 view .LVU264
 563:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).used = 0;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 36


 961              		.loc 1 563 42 is_stmt 0 view .LVU265
 962 0024 0B4B     		ldr	r3, .L102+4
 963 0026 0022     		movs	r2, #0
 964 0028 43F83420 		str	r2, [r3, r4, lsl #3]
 564:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).size = 0;
 965              		.loc 1 564 13 is_stmt 1 view .LVU266
 564:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).size = 0;
 966              		.loc 1 564 45 is_stmt 0 view .LVU267
 967 002c 03EBC403 		add	r3, r3, r4, lsl #3
 968 0030 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 969 0032 62F30001 		bfi	r1, r2, #0, #1
 970 0036 9971     		strb	r1, [r3, #6]
 565:lvgl/src/lv_misc/lv_mem.c ****         }
 971              		.loc 1 565 13 is_stmt 1 view .LVU268
 565:lvgl/src/lv_misc/lv_mem.c ****         }
 972              		.loc 1 565 45 is_stmt 0 view .LVU269
 973 0038 9A80     		strh	r2, [r3, #4]	@ movhi
 974              	.L97:
 560:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).p) {
 975              		.loc 1 560 41 discriminator 2 view .LVU270
 976 003a 0134     		adds	r4, r4, #1
 977              	.LVL85:
 560:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).p) {
 978              		.loc 1 560 41 discriminator 2 view .LVU271
 979 003c E4B2     		uxtb	r4, r4
 980              	.LVL86:
 981              	.L96:
 560:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).p) {
 982              		.loc 1 560 5 discriminator 1 view .LVU272
 983 003e 0F2C     		cmp	r4, #15
 984 0040 05D8     		bhi	.L100
 561:lvgl/src/lv_misc/lv_mem.c ****             lv_mem_free(LV_GC_ROOT(_lv_mem_buf[i]).p);
 985              		.loc 1 561 9 is_stmt 1 view .LVU273
 561:lvgl/src/lv_misc/lv_mem.c ****             lv_mem_free(LV_GC_ROOT(_lv_mem_buf[i]).p);
 986              		.loc 1 561 38 is_stmt 0 view .LVU274
 987 0042 044B     		ldr	r3, .L102+4
 988 0044 53F83400 		ldr	r0, [r3, r4, lsl #3]
 561:lvgl/src/lv_misc/lv_mem.c ****             lv_mem_free(LV_GC_ROOT(_lv_mem_buf[i]).p);
 989              		.loc 1 561 11 view .LVU275
 990 0048 0028     		cmp	r0, #0
 991 004a E9D1     		bne	.L101
 992 004c F5E7     		b	.L97
 993              	.L100:
 568:lvgl/src/lv_misc/lv_mem.c **** 
 994              		.loc 1 568 1 view .LVU276
 995 004e 10BD     		pop	{r4, pc}
 996              	.LVL87:
 997              	.L103:
 568:lvgl/src/lv_misc/lv_mem.c **** 
 998              		.loc 1 568 1 view .LVU277
 999              		.align	2
 1000              	.L102:
 1001 0050 00000000 		.word	.LANCHOR4
 1002 0054 00000000 		.word	_lv_mem_buf
 1003              		.cfi_endproc
 1004              	.LFE178:
 1006              		.section	.text._lv_memcpy,"ax",%progbits
ARM GAS  D:\Temp\ccGtTw4W.s 			page 37


 1007              		.align	1
 1008              		.global	_lv_memcpy
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu fpv4-sp-d16
 1014              	_lv_memcpy:
 1015              	.LVL88:
 1016              	.LFB179:
 578:lvgl/src/lv_misc/lv_mem.c ****     uint8_t * d8 = dst;
 1017              		.loc 1 578 1 is_stmt 1 view -0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              		@ link register save eliminated.
 578:lvgl/src/lv_misc/lv_mem.c ****     uint8_t * d8 = dst;
 1022              		.loc 1 578 1 is_stmt 0 view .LVU279
 1023 0000 30B4     		push	{r4, r5}
 1024              	.LCFI10:
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 4, -8
 1027              		.cfi_offset 5, -4
 579:lvgl/src/lv_misc/lv_mem.c ****     const uint8_t * s8 = src;
 1028              		.loc 1 579 5 is_stmt 1 view .LVU280
 1029              	.LVL89:
 580:lvgl/src/lv_misc/lv_mem.c **** 
 1030              		.loc 1 580 5 view .LVU281
 582:lvgl/src/lv_misc/lv_mem.c ****     lv_uintptr_t s_align = (lv_uintptr_t)s8 & ALIGN_MASK;
 1031              		.loc 1 582 5 view .LVU282
 582:lvgl/src/lv_misc/lv_mem.c ****     lv_uintptr_t s_align = (lv_uintptr_t)s8 & ALIGN_MASK;
 1032              		.loc 1 582 18 is_stmt 0 view .LVU283
 1033 0002 00F00304 		and	r4, r0, #3
 1034              	.LVL90:
 583:lvgl/src/lv_misc/lv_mem.c **** 
 1035              		.loc 1 583 5 is_stmt 1 view .LVU284
 583:lvgl/src/lv_misc/lv_mem.c **** 
 1036              		.loc 1 583 18 is_stmt 0 view .LVU285
 1037 0006 01F00303 		and	r3, r1, #3
 1038              	.LVL91:
 586:lvgl/src/lv_misc/lv_mem.c ****         while(len > 32) {
 1039              		.loc 1 586 5 is_stmt 1 view .LVU286
 586:lvgl/src/lv_misc/lv_mem.c ****         while(len > 32) {
 1040              		.loc 1 586 7 is_stmt 0 view .LVU287
 1041 000a 9C42     		cmp	r4, r3
 1042 000c 05D1     		bne	.L120
 602:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 1043              		.loc 1 602 5 is_stmt 1 view .LVU288
 602:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 1044              		.loc 1 602 7 is_stmt 0 view .LVU289
 1045 000e 002C     		cmp	r4, #0
 1046 0010 5CD0     		beq	.L121
 603:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
 1047              		.loc 1 603 9 is_stmt 1 view .LVU290
 603:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
 1048              		.loc 1 603 17 is_stmt 0 view .LVU291
 1049 0012 C4F10404 		rsb	r4, r4, #4
 1050              	.LVL92:
ARM GAS  D:\Temp\ccGtTw4W.s 			page 38


 604:lvgl/src/lv_misc/lv_mem.c ****             COPY8;
 1051              		.loc 1 604 9 is_stmt 1 view .LVU292
 579:lvgl/src/lv_misc/lv_mem.c ****     const uint8_t * s8 = src;
 1052              		.loc 1 579 15 is_stmt 0 view .LVU293
 1053 0016 0346     		mov	r3, r0
 1054              	.LVL93:
 604:lvgl/src/lv_misc/lv_mem.c ****             COPY8;
 1055              		.loc 1 604 14 view .LVU294
 1056 0018 54E0     		b	.L112
 1057              	.LVL94:
 1058              	.L120:
 579:lvgl/src/lv_misc/lv_mem.c ****     const uint8_t * s8 = src;
 1059              		.loc 1 579 15 view .LVU295
 1060 001a 0346     		mov	r3, r0
 1061              	.LVL95:
 1062              	.L105:
 587:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1063              		.loc 1 587 14 view .LVU296
 1064 001c 202A     		cmp	r2, #32
 1065 001e 48D9     		bls	.L108
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1066              		.loc 1 588 13 is_stmt 1 view .LVU297
 1067 0020 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1068 0022 1C70     		strb	r4, [r3]
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1069              		.loc 1 588 13 view .LVU298
 1070              	.LVL96:
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1071              		.loc 1 588 13 view .LVU299
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1072              		.loc 1 588 13 view .LVU300
 1073 0024 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 1074 0026 5C70     		strb	r4, [r3, #1]
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1075              		.loc 1 588 13 view .LVU301
 1076              	.LVL97:
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1077              		.loc 1 588 13 view .LVU302
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1078              		.loc 1 588 13 view .LVU303
 1079 0028 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 1080 002a 9C70     		strb	r4, [r3, #2]
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1081              		.loc 1 588 13 view .LVU304
 1082              	.LVL98:
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1083              		.loc 1 588 13 view .LVU305
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1084              		.loc 1 588 13 view .LVU306
 1085 002c CC78     		ldrb	r4, [r1, #3]	@ zero_extendqisi2
 1086 002e DC70     		strb	r4, [r3, #3]
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1087              		.loc 1 588 13 view .LVU307
 1088              	.LVL99:
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1089              		.loc 1 588 13 view .LVU308
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
ARM GAS  D:\Temp\ccGtTw4W.s 			page 39


 1090              		.loc 1 588 13 view .LVU309
 1091 0030 0C79     		ldrb	r4, [r1, #4]	@ zero_extendqisi2
 1092 0032 1C71     		strb	r4, [r3, #4]
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1093              		.loc 1 588 13 view .LVU310
 1094              	.LVL100:
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1095              		.loc 1 588 13 view .LVU311
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1096              		.loc 1 588 13 view .LVU312
 1097 0034 4C79     		ldrb	r4, [r1, #5]	@ zero_extendqisi2
 1098 0036 5C71     		strb	r4, [r3, #5]
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1099              		.loc 1 588 13 view .LVU313
 1100              	.LVL101:
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1101              		.loc 1 588 13 view .LVU314
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1102              		.loc 1 588 13 view .LVU315
 1103 0038 8C79     		ldrb	r4, [r1, #6]	@ zero_extendqisi2
 1104 003a 9C71     		strb	r4, [r3, #6]
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1105              		.loc 1 588 13 view .LVU316
 1106              	.LVL102:
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1107              		.loc 1 588 13 view .LVU317
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1108              		.loc 1 588 13 view .LVU318
 1109 003c CC79     		ldrb	r4, [r1, #7]	@ zero_extendqisi2
 1110 003e DC71     		strb	r4, [r3, #7]
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1111              		.loc 1 588 13 view .LVU319
 1112              	.LVL103:
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1113              		.loc 1 588 13 view .LVU320
 588:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1114              		.loc 1 588 27 view .LVU321
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1115              		.loc 1 589 13 view .LVU322
 1116 0040 0C7A     		ldrb	r4, [r1, #8]	@ zero_extendqisi2
 1117 0042 1C72     		strb	r4, [r3, #8]
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1118              		.loc 1 589 13 view .LVU323
 1119              	.LVL104:
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1120              		.loc 1 589 13 view .LVU324
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1121              		.loc 1 589 13 view .LVU325
 1122 0044 4C7A     		ldrb	r4, [r1, #9]	@ zero_extendqisi2
 1123 0046 5C72     		strb	r4, [r3, #9]
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1124              		.loc 1 589 13 view .LVU326
 1125              	.LVL105:
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1126              		.loc 1 589 13 view .LVU327
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1127              		.loc 1 589 13 view .LVU328
ARM GAS  D:\Temp\ccGtTw4W.s 			page 40


 1128 0048 8C7A     		ldrb	r4, [r1, #10]	@ zero_extendqisi2
 1129 004a 9C72     		strb	r4, [r3, #10]
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1130              		.loc 1 589 13 view .LVU329
 1131              	.LVL106:
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1132              		.loc 1 589 13 view .LVU330
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1133              		.loc 1 589 13 view .LVU331
 1134 004c CC7A     		ldrb	r4, [r1, #11]	@ zero_extendqisi2
 1135 004e DC72     		strb	r4, [r3, #11]
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1136              		.loc 1 589 13 view .LVU332
 1137              	.LVL107:
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1138              		.loc 1 589 13 view .LVU333
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1139              		.loc 1 589 13 view .LVU334
 1140 0050 0C7B     		ldrb	r4, [r1, #12]	@ zero_extendqisi2
 1141 0052 1C73     		strb	r4, [r3, #12]
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1142              		.loc 1 589 13 view .LVU335
 1143              	.LVL108:
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1144              		.loc 1 589 13 view .LVU336
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1145              		.loc 1 589 13 view .LVU337
 1146 0054 4C7B     		ldrb	r4, [r1, #13]	@ zero_extendqisi2
 1147 0056 5C73     		strb	r4, [r3, #13]
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1148              		.loc 1 589 13 view .LVU338
 1149              	.LVL109:
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1150              		.loc 1 589 13 view .LVU339
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1151              		.loc 1 589 13 view .LVU340
 1152 0058 8C7B     		ldrb	r4, [r1, #14]	@ zero_extendqisi2
 1153 005a 9C73     		strb	r4, [r3, #14]
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1154              		.loc 1 589 13 view .LVU341
 1155              	.LVL110:
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1156              		.loc 1 589 13 view .LVU342
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1157              		.loc 1 589 13 view .LVU343
 1158 005c CC7B     		ldrb	r4, [r1, #15]	@ zero_extendqisi2
 1159 005e DC73     		strb	r4, [r3, #15]
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1160              		.loc 1 589 13 view .LVU344
 1161              	.LVL111:
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1162              		.loc 1 589 13 view .LVU345
 589:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1163              		.loc 1 589 27 view .LVU346
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1164              		.loc 1 590 13 view .LVU347
 1165 0060 0C7C     		ldrb	r4, [r1, #16]	@ zero_extendqisi2
ARM GAS  D:\Temp\ccGtTw4W.s 			page 41


 1166 0062 1C74     		strb	r4, [r3, #16]
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1167              		.loc 1 590 13 view .LVU348
 1168              	.LVL112:
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1169              		.loc 1 590 13 view .LVU349
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1170              		.loc 1 590 13 view .LVU350
 1171 0064 4C7C     		ldrb	r4, [r1, #17]	@ zero_extendqisi2
 1172 0066 5C74     		strb	r4, [r3, #17]
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1173              		.loc 1 590 13 view .LVU351
 1174              	.LVL113:
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1175              		.loc 1 590 13 view .LVU352
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1176              		.loc 1 590 13 view .LVU353
 1177 0068 8C7C     		ldrb	r4, [r1, #18]	@ zero_extendqisi2
 1178 006a 9C74     		strb	r4, [r3, #18]
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1179              		.loc 1 590 13 view .LVU354
 1180              	.LVL114:
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1181              		.loc 1 590 13 view .LVU355
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1182              		.loc 1 590 13 view .LVU356
 1183 006c CC7C     		ldrb	r4, [r1, #19]	@ zero_extendqisi2
 1184 006e DC74     		strb	r4, [r3, #19]
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1185              		.loc 1 590 13 view .LVU357
 1186              	.LVL115:
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1187              		.loc 1 590 13 view .LVU358
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1188              		.loc 1 590 13 view .LVU359
 1189 0070 0C7D     		ldrb	r4, [r1, #20]	@ zero_extendqisi2
 1190 0072 1C75     		strb	r4, [r3, #20]
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1191              		.loc 1 590 13 view .LVU360
 1192              	.LVL116:
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1193              		.loc 1 590 13 view .LVU361
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1194              		.loc 1 590 13 view .LVU362
 1195 0074 4C7D     		ldrb	r4, [r1, #21]	@ zero_extendqisi2
 1196 0076 5C75     		strb	r4, [r3, #21]
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1197              		.loc 1 590 13 view .LVU363
 1198              	.LVL117:
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1199              		.loc 1 590 13 view .LVU364
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1200              		.loc 1 590 13 view .LVU365
 1201 0078 8C7D     		ldrb	r4, [r1, #22]	@ zero_extendqisi2
 1202 007a 9C75     		strb	r4, [r3, #22]
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1203              		.loc 1 590 13 view .LVU366
ARM GAS  D:\Temp\ccGtTw4W.s 			page 42


 1204              	.LVL118:
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1205              		.loc 1 590 13 view .LVU367
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1206              		.loc 1 590 13 view .LVU368
 1207 007c CC7D     		ldrb	r4, [r1, #23]	@ zero_extendqisi2
 1208 007e DC75     		strb	r4, [r3, #23]
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1209              		.loc 1 590 13 view .LVU369
 1210              	.LVL119:
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1211              		.loc 1 590 13 view .LVU370
 590:lvgl/src/lv_misc/lv_mem.c ****             REPEAT8(COPY8);
 1212              		.loc 1 590 27 view .LVU371
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1213              		.loc 1 591 13 view .LVU372
 1214 0080 0C7E     		ldrb	r4, [r1, #24]	@ zero_extendqisi2
 1215 0082 1C76     		strb	r4, [r3, #24]
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1216              		.loc 1 591 13 view .LVU373
 1217              	.LVL120:
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1218              		.loc 1 591 13 view .LVU374
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1219              		.loc 1 591 13 view .LVU375
 1220 0084 4C7E     		ldrb	r4, [r1, #25]	@ zero_extendqisi2
 1221 0086 5C76     		strb	r4, [r3, #25]
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1222              		.loc 1 591 13 view .LVU376
 1223              	.LVL121:
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1224              		.loc 1 591 13 view .LVU377
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1225              		.loc 1 591 13 view .LVU378
 1226 0088 8C7E     		ldrb	r4, [r1, #26]	@ zero_extendqisi2
 1227 008a 9C76     		strb	r4, [r3, #26]
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1228              		.loc 1 591 13 view .LVU379
 1229              	.LVL122:
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1230              		.loc 1 591 13 view .LVU380
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1231              		.loc 1 591 13 view .LVU381
 1232 008c CC7E     		ldrb	r4, [r1, #27]	@ zero_extendqisi2
 1233 008e DC76     		strb	r4, [r3, #27]
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1234              		.loc 1 591 13 view .LVU382
 1235              	.LVL123:
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1236              		.loc 1 591 13 view .LVU383
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1237              		.loc 1 591 13 view .LVU384
 1238 0090 0C7F     		ldrb	r4, [r1, #28]	@ zero_extendqisi2
 1239 0092 1C77     		strb	r4, [r3, #28]
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1240              		.loc 1 591 13 view .LVU385
 1241              	.LVL124:
ARM GAS  D:\Temp\ccGtTw4W.s 			page 43


 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1242              		.loc 1 591 13 view .LVU386
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1243              		.loc 1 591 13 view .LVU387
 1244 0094 4C7F     		ldrb	r4, [r1, #29]	@ zero_extendqisi2
 1245 0096 5C77     		strb	r4, [r3, #29]
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1246              		.loc 1 591 13 view .LVU388
 1247              	.LVL125:
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1248              		.loc 1 591 13 view .LVU389
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1249              		.loc 1 591 13 view .LVU390
 1250 0098 8C7F     		ldrb	r4, [r1, #30]	@ zero_extendqisi2
 1251 009a 9C77     		strb	r4, [r3, #30]
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1252              		.loc 1 591 13 view .LVU391
 1253              	.LVL126:
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1254              		.loc 1 591 13 view .LVU392
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1255              		.loc 1 591 13 view .LVU393
 1256 009c CC7F     		ldrb	r4, [r1, #31]	@ zero_extendqisi2
 1257 009e DC77     		strb	r4, [r3, #31]
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1258              		.loc 1 591 13 view .LVU394
 1259 00a0 2033     		adds	r3, r3, #32
 1260              	.LVL127:
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1261              		.loc 1 591 13 view .LVU395
 1262 00a2 2031     		adds	r1, r1, #32
 1263              	.LVL128:
 591:lvgl/src/lv_misc/lv_mem.c ****             len -= 32;
 1264              		.loc 1 591 27 view .LVU396
 592:lvgl/src/lv_misc/lv_mem.c ****         }
 1265              		.loc 1 592 13 view .LVU397
 592:lvgl/src/lv_misc/lv_mem.c ****         }
 1266              		.loc 1 592 17 is_stmt 0 view .LVU398
 1267 00a4 203A     		subs	r2, r2, #32
 1268              	.LVL129:
 592:lvgl/src/lv_misc/lv_mem.c ****         }
 1269              		.loc 1 592 17 view .LVU399
 1270 00a6 B9E7     		b	.L105
 1271              	.L109:
 595:lvgl/src/lv_misc/lv_mem.c ****             len--;
 1272              		.loc 1 595 13 is_stmt 1 view .LVU400
 1273 00a8 11F8014B 		ldrb	r4, [r1], #1	@ zero_extendqisi2
 1274              	.LVL130:
 595:lvgl/src/lv_misc/lv_mem.c ****             len--;
 1275              		.loc 1 595 13 is_stmt 0 view .LVU401
 1276 00ac 03F8014B 		strb	r4, [r3], #1
 1277              	.LVL131:
 595:lvgl/src/lv_misc/lv_mem.c ****             len--;
 1278              		.loc 1 595 13 is_stmt 1 view .LVU402
 595:lvgl/src/lv_misc/lv_mem.c ****             len--;
 1279              		.loc 1 595 13 view .LVU403
 596:lvgl/src/lv_misc/lv_mem.c ****         }
ARM GAS  D:\Temp\ccGtTw4W.s 			page 44


 1280              		.loc 1 596 13 view .LVU404
 596:lvgl/src/lv_misc/lv_mem.c ****         }
 1281              		.loc 1 596 16 is_stmt 0 view .LVU405
 1282 00b0 013A     		subs	r2, r2, #1
 1283              	.LVL132:
 1284              	.L108:
 594:lvgl/src/lv_misc/lv_mem.c ****             COPY8
 1285              		.loc 1 594 14 view .LVU406
 1286 00b2 002A     		cmp	r2, #0
 1287 00b4 F8D1     		bne	.L109
 594:lvgl/src/lv_misc/lv_mem.c ****             COPY8
 1288              		.loc 1 594 14 view .LVU407
 1289 00b6 2FE0     		b	.L110
 1290              	.LVL133:
 1291              	.L113:
 605:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 1292              		.loc 1 605 13 is_stmt 1 view .LVU408
 1293 00b8 11F8015B 		ldrb	r5, [r1], #1	@ zero_extendqisi2
 1294              	.LVL134:
 605:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 1295              		.loc 1 605 13 is_stmt 0 view .LVU409
 1296 00bc 03F8015B 		strb	r5, [r3], #1
 1297              	.LVL135:
 605:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 1298              		.loc 1 605 13 is_stmt 1 view .LVU410
 605:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 1299              		.loc 1 605 13 view .LVU411
 605:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 1300              		.loc 1 605 18 view .LVU412
 606:lvgl/src/lv_misc/lv_mem.c ****             len--;
 1301              		.loc 1 606 13 view .LVU413
 606:lvgl/src/lv_misc/lv_mem.c ****             len--;
 1302              		.loc 1 606 20 is_stmt 0 view .LVU414
 1303 00c0 013C     		subs	r4, r4, #1
 1304              	.LVL136:
 607:lvgl/src/lv_misc/lv_mem.c ****         }
 1305              		.loc 1 607 13 is_stmt 1 view .LVU415
 607:lvgl/src/lv_misc/lv_mem.c ****         }
 1306              		.loc 1 607 16 is_stmt 0 view .LVU416
 1307 00c2 013A     		subs	r2, r2, #1
 1308              	.LVL137:
 1309              	.L112:
 604:lvgl/src/lv_misc/lv_mem.c ****             COPY8;
 1310              		.loc 1 604 14 view .LVU417
 1311 00c4 1CB1     		cbz	r4, .L114
 604:lvgl/src/lv_misc/lv_mem.c ****             COPY8;
 1312              		.loc 1 604 23 discriminator 1 view .LVU418
 1313 00c6 002A     		cmp	r2, #0
 1314 00c8 F6D1     		bne	.L113
 1315 00ca 00E0     		b	.L114
 1316              	.LVL138:
 1317              	.L121:
 579:lvgl/src/lv_misc/lv_mem.c ****     const uint8_t * s8 = src;
 1318              		.loc 1 579 15 view .LVU419
 1319 00cc 0346     		mov	r3, r0
 1320              	.LVL139:
 1321              	.L114:
ARM GAS  D:\Temp\ccGtTw4W.s 			page 45


 613:lvgl/src/lv_misc/lv_mem.c ****         REPEAT8(COPY32)
 1322              		.loc 1 613 10 view .LVU420
 1323 00ce 202A     		cmp	r2, #32
 1324 00d0 18D9     		bls	.L116
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1325              		.loc 1 614 9 is_stmt 1 view .LVU421
 1326 00d2 0C68     		ldr	r4, [r1]
 1327 00d4 1C60     		str	r4, [r3]
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1328              		.loc 1 614 9 view .LVU422
 1329              	.LVL140:
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1330              		.loc 1 614 9 view .LVU423
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1331              		.loc 1 614 9 view .LVU424
 1332 00d6 4C68     		ldr	r4, [r1, #4]
 1333 00d8 5C60     		str	r4, [r3, #4]
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1334              		.loc 1 614 9 view .LVU425
 1335              	.LVL141:
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1336              		.loc 1 614 9 view .LVU426
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1337              		.loc 1 614 9 view .LVU427
 1338 00da 8C68     		ldr	r4, [r1, #8]
 1339 00dc 9C60     		str	r4, [r3, #8]
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1340              		.loc 1 614 9 view .LVU428
 1341              	.LVL142:
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1342              		.loc 1 614 9 view .LVU429
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1343              		.loc 1 614 9 view .LVU430
 1344 00de CC68     		ldr	r4, [r1, #12]
 1345 00e0 DC60     		str	r4, [r3, #12]
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1346              		.loc 1 614 9 view .LVU431
 1347              	.LVL143:
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1348              		.loc 1 614 9 view .LVU432
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1349              		.loc 1 614 9 view .LVU433
 1350 00e2 0C69     		ldr	r4, [r1, #16]
 1351 00e4 1C61     		str	r4, [r3, #16]
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1352              		.loc 1 614 9 view .LVU434
 1353              	.LVL144:
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1354              		.loc 1 614 9 view .LVU435
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1355              		.loc 1 614 9 view .LVU436
 1356 00e6 4C69     		ldr	r4, [r1, #20]
 1357 00e8 5C61     		str	r4, [r3, #20]
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1358              		.loc 1 614 9 view .LVU437
 1359              	.LVL145:
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 46


 1360              		.loc 1 614 9 view .LVU438
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1361              		.loc 1 614 9 view .LVU439
 1362 00ea 8C69     		ldr	r4, [r1, #24]
 1363 00ec 9C61     		str	r4, [r3, #24]
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1364              		.loc 1 614 9 view .LVU440
 1365              	.LVL146:
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1366              		.loc 1 614 9 view .LVU441
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1367              		.loc 1 614 9 view .LVU442
 1368 00ee CC69     		ldr	r4, [r1, #28]
 1369 00f0 DC61     		str	r4, [r3, #28]
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1370              		.loc 1 614 9 view .LVU443
 1371 00f2 2033     		adds	r3, r3, #32
 1372              	.LVL147:
 614:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1373              		.loc 1 614 9 view .LVU444
 1374 00f4 2031     		adds	r1, r1, #32
 1375              	.LVL148:
 615:lvgl/src/lv_misc/lv_mem.c ****     }
 1376              		.loc 1 615 9 view .LVU445
 615:lvgl/src/lv_misc/lv_mem.c ****     }
 1377              		.loc 1 615 13 is_stmt 0 view .LVU446
 1378 00f6 203A     		subs	r2, r2, #32
 1379              	.LVL149:
 615:lvgl/src/lv_misc/lv_mem.c ****     }
 1380              		.loc 1 615 13 view .LVU447
 1381 00f8 E9E7     		b	.L114
 1382              	.L117:
 619:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 1383              		.loc 1 619 9 is_stmt 1 view .LVU448
 1384 00fa 51F8044B 		ldr	r4, [r1], #4
 1385              	.LVL150:
 619:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 1386              		.loc 1 619 9 is_stmt 0 view .LVU449
 1387 00fe 43F8044B 		str	r4, [r3], #4
 1388              	.LVL151:
 619:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 1389              		.loc 1 619 9 is_stmt 1 view .LVU450
 619:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 1390              		.loc 1 619 9 view .LVU451
 619:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 1391              		.loc 1 619 15 view .LVU452
 620:lvgl/src/lv_misc/lv_mem.c ****     }
 1392              		.loc 1 620 9 view .LVU453
 620:lvgl/src/lv_misc/lv_mem.c ****     }
 1393              		.loc 1 620 13 is_stmt 0 view .LVU454
 1394 0102 043A     		subs	r2, r2, #4
 1395              	.LVL152:
 1396              	.L116:
 618:lvgl/src/lv_misc/lv_mem.c ****         COPY32;
 1397              		.loc 1 618 10 view .LVU455
 1398 0104 042A     		cmp	r2, #4
 1399 0106 F8D8     		bhi	.L117
ARM GAS  D:\Temp\ccGtTw4W.s 			page 47


 618:lvgl/src/lv_misc/lv_mem.c ****         COPY32;
 1400              		.loc 1 618 10 view .LVU456
 1401 0108 04E0     		b	.L118
 1402              	.LVL153:
 1403              	.L119:
 626:lvgl/src/lv_misc/lv_mem.c ****         len--;
 1404              		.loc 1 626 9 is_stmt 1 view .LVU457
 1405 010a 11F8014B 		ldrb	r4, [r1], #1	@ zero_extendqisi2
 1406              	.LVL154:
 626:lvgl/src/lv_misc/lv_mem.c ****         len--;
 1407              		.loc 1 626 9 is_stmt 0 view .LVU458
 1408 010e 03F8014B 		strb	r4, [r3], #1
 1409              	.LVL155:
 626:lvgl/src/lv_misc/lv_mem.c ****         len--;
 1410              		.loc 1 626 9 is_stmt 1 view .LVU459
 626:lvgl/src/lv_misc/lv_mem.c ****         len--;
 1411              		.loc 1 626 9 view .LVU460
 627:lvgl/src/lv_misc/lv_mem.c ****     }
 1412              		.loc 1 627 9 view .LVU461
 627:lvgl/src/lv_misc/lv_mem.c ****     }
 1413              		.loc 1 627 12 is_stmt 0 view .LVU462
 1414 0112 013A     		subs	r2, r2, #1
 1415              	.LVL156:
 1416              	.L118:
 625:lvgl/src/lv_misc/lv_mem.c ****         COPY8
 1417              		.loc 1 625 10 view .LVU463
 1418 0114 002A     		cmp	r2, #0
 1419 0116 F8D1     		bne	.L119
 1420              	.L110:
 631:lvgl/src/lv_misc/lv_mem.c **** 
 1421              		.loc 1 631 1 view .LVU464
 1422 0118 30BC     		pop	{r4, r5}
 1423              	.LCFI11:
 1424              		.cfi_restore 5
 1425              		.cfi_restore 4
 1426              		.cfi_def_cfa_offset 0
 1427 011a 7047     		bx	lr
 1428              		.cfi_endproc
 1429              	.LFE179:
 1431              		.section	.text.lv_mem_realloc,"ax",%progbits
 1432              		.align	1
 1433              		.global	lv_mem_realloc
 1434              		.syntax unified
 1435              		.thumb
 1436              		.thumb_func
 1437              		.fpu fpv4-sp-d16
 1439              	lv_mem_realloc:
 1440              	.LVL157:
 1441              	.LFB171:
 278:lvgl/src/lv_misc/lv_mem.c ****     /*Round the size up to ALIGN_MASK*/
 1442              		.loc 1 278 1 is_stmt 1 view -0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 0
 1445              		@ frame_needed = 0, uses_anonymous_args = 0
 278:lvgl/src/lv_misc/lv_mem.c ****     /*Round the size up to ALIGN_MASK*/
 1446              		.loc 1 278 1 is_stmt 0 view .LVU466
 1447 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  D:\Temp\ccGtTw4W.s 			page 48


 1448              	.LCFI12:
 1449              		.cfi_def_cfa_offset 24
 1450              		.cfi_offset 3, -24
 1451              		.cfi_offset 4, -20
 1452              		.cfi_offset 5, -16
 1453              		.cfi_offset 6, -12
 1454              		.cfi_offset 7, -8
 1455              		.cfi_offset 14, -4
 280:lvgl/src/lv_misc/lv_mem.c **** 
 1456              		.loc 1 280 5 is_stmt 1 view .LVU467
 280:lvgl/src/lv_misc/lv_mem.c **** 
 1457              		.loc 1 280 26 is_stmt 0 view .LVU468
 1458 0002 0331     		adds	r1, r1, #3
 1459              	.LVL158:
 280:lvgl/src/lv_misc/lv_mem.c **** 
 1460              		.loc 1 280 14 view .LVU469
 1461 0004 21F00304 		bic	r4, r1, #3
 1462              	.LVL159:
 283:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_ent_t * e = (lv_mem_ent_t *)((uint8_t *)data_p - sizeof(lv_mem_header_t));
 1463              		.loc 1 283 5 is_stmt 1 view .LVU470
 283:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_ent_t * e = (lv_mem_ent_t *)((uint8_t *)data_p - sizeof(lv_mem_header_t));
 1464              		.loc 1 283 7 is_stmt 0 view .LVU471
 1465 0008 0546     		mov	r5, r0
 1466 000a 28B1     		cbz	r0, .L125
 1467              	.LBB8:
 284:lvgl/src/lv_misc/lv_mem.c ****         if(e->header.s.used == 0) {
 1468              		.loc 1 284 9 is_stmt 1 view .LVU472
 1469              	.LVL160:
 285:lvgl/src/lv_misc/lv_mem.c ****             data_p = NULL;
 1470              		.loc 1 285 9 view .LVU473
 285:lvgl/src/lv_misc/lv_mem.c ****             data_p = NULL;
 1471              		.loc 1 285 29 is_stmt 0 view .LVU474
 1472 000c 10F8043C 		ldrb	r3, [r0, #-4]	@ zero_extendqisi2
 285:lvgl/src/lv_misc/lv_mem.c ****             data_p = NULL;
 1473              		.loc 1 285 11 view .LVU475
 1474 0010 13F0010F 		tst	r3, #1
 1475 0014 00D1     		bne	.L125
 286:lvgl/src/lv_misc/lv_mem.c ****         }
 1476              		.loc 1 286 20 view .LVU476
 1477 0016 0025     		movs	r5, #0
 1478              	.LVL161:
 1479              	.L125:
 286:lvgl/src/lv_misc/lv_mem.c ****         }
 1480              		.loc 1 286 20 view .LVU477
 1481              	.LBE8:
 290:lvgl/src/lv_misc/lv_mem.c ****     if(old_size == new_size) return data_p; /*Also avoid reallocating the same memory*/
 1482              		.loc 1 290 5 is_stmt 1 view .LVU478
 290:lvgl/src/lv_misc/lv_mem.c ****     if(old_size == new_size) return data_p; /*Also avoid reallocating the same memory*/
 1483              		.loc 1 290 25 is_stmt 0 view .LVU479
 1484 0018 2846     		mov	r0, r5
 1485 001a FFF7FEFF 		bl	_lv_mem_get_size
 1486              	.LVL162:
 1487 001e 0646     		mov	r6, r0
 1488              	.LVL163:
 291:lvgl/src/lv_misc/lv_mem.c **** 
 1489              		.loc 1 291 5 is_stmt 1 view .LVU480
 291:lvgl/src/lv_misc/lv_mem.c **** 
ARM GAS  D:\Temp\ccGtTw4W.s 			page 49


 1490              		.loc 1 291 7 is_stmt 0 view .LVU481
 1491 0020 8442     		cmp	r4, r0
 1492 0022 1BD0     		beq	.L130
 295:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_ent_t * e = (lv_mem_ent_t *)((uint8_t *)data_p - sizeof(lv_mem_header_t));
 1493              		.loc 1 295 5 is_stmt 1 view .LVU482
 295:lvgl/src/lv_misc/lv_mem.c ****         lv_mem_ent_t * e = (lv_mem_ent_t *)((uint8_t *)data_p - sizeof(lv_mem_header_t));
 1494              		.loc 1 295 7 is_stmt 0 view .LVU483
 1495 0024 0CD3     		bcc	.L132
 302:lvgl/src/lv_misc/lv_mem.c ****     new_p = lv_mem_alloc(new_size);
 1496              		.loc 1 302 5 is_stmt 1 view .LVU484
 303:lvgl/src/lv_misc/lv_mem.c ****     if(new_p == NULL) {
 1497              		.loc 1 303 5 view .LVU485
 303:lvgl/src/lv_misc/lv_mem.c ****     if(new_p == NULL) {
 1498              		.loc 1 303 13 is_stmt 0 view .LVU486
 1499 0026 2046     		mov	r0, r4
 1500              	.LVL164:
 303:lvgl/src/lv_misc/lv_mem.c ****     if(new_p == NULL) {
 1501              		.loc 1 303 13 view .LVU487
 1502 0028 FFF7FEFF 		bl	lv_mem_alloc
 1503              	.LVL165:
 304:lvgl/src/lv_misc/lv_mem.c ****         LV_LOG_WARN("Couldn't allocate memory");
 1504              		.loc 1 304 5 is_stmt 1 view .LVU488
 304:lvgl/src/lv_misc/lv_mem.c ****         LV_LOG_WARN("Couldn't allocate memory");
 1505              		.loc 1 304 7 is_stmt 0 view .LVU489
 1506 002c 0746     		mov	r7, r0
 1507 002e 28B1     		cbz	r0, .L124
 309:lvgl/src/lv_misc/lv_mem.c ****         /*Copy the old data to the new. Use the smaller size*/
 1508              		.loc 1 309 5 is_stmt 1 view .LVU490
 309:lvgl/src/lv_misc/lv_mem.c ****         /*Copy the old data to the new. Use the smaller size*/
 1509              		.loc 1 309 7 is_stmt 0 view .LVU491
 1510 0030 25B1     		cbz	r5, .L124
 311:lvgl/src/lv_misc/lv_mem.c ****             _lv_memcpy(new_p, data_p, LV_MATH_MIN(new_size, old_size));
 1511              		.loc 1 311 9 is_stmt 1 view .LVU492
 311:lvgl/src/lv_misc/lv_mem.c ****             _lv_memcpy(new_p, data_p, LV_MATH_MIN(new_size, old_size));
 1512              		.loc 1 311 11 is_stmt 0 view .LVU493
 1513 0032 06B1     		cbz	r6, .L128
 311:lvgl/src/lv_misc/lv_mem.c ****             _lv_memcpy(new_p, data_p, LV_MATH_MIN(new_size, old_size));
 1514              		.loc 1 311 26 discriminator 1 view .LVU494
 1515 0034 54B9     		cbnz	r4, .L133
 1516              	.LVL166:
 1517              	.L128:
 314:lvgl/src/lv_misc/lv_mem.c ****     }
 1518              		.loc 1 314 9 is_stmt 1 view .LVU495
 1519 0036 2846     		mov	r0, r5
 1520 0038 FFF7FEFF 		bl	lv_mem_free
 1521              	.LVL167:
 1522              	.L124:
 318:lvgl/src/lv_misc/lv_mem.c **** 
 1523              		.loc 1 318 1 is_stmt 0 view .LVU496
 1524 003c 3846     		mov	r0, r7
 1525 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1526              	.LVL168:
 1527              	.L132:
 1528              	.LBB9:
 296:lvgl/src/lv_misc/lv_mem.c ****         ent_trunc(e, new_size);
 1529              		.loc 1 296 9 is_stmt 1 view .LVU497
 297:lvgl/src/lv_misc/lv_mem.c ****         return &e->first_data;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 50


 1530              		.loc 1 297 9 view .LVU498
 1531 0040 2146     		mov	r1, r4
 1532 0042 281F     		subs	r0, r5, #4
 1533              	.LVL169:
 297:lvgl/src/lv_misc/lv_mem.c ****         return &e->first_data;
 1534              		.loc 1 297 9 is_stmt 0 view .LVU499
 1535 0044 FFF7FEFF 		bl	ent_trunc
 1536              	.LVL170:
 298:lvgl/src/lv_misc/lv_mem.c ****     }
 1537              		.loc 1 298 9 is_stmt 1 view .LVU500
 298:lvgl/src/lv_misc/lv_mem.c ****     }
 1538              		.loc 1 298 16 is_stmt 0 view .LVU501
 1539 0048 2F46     		mov	r7, r5
 1540 004a F7E7     		b	.L124
 1541              	.LVL171:
 1542              	.L133:
 298:lvgl/src/lv_misc/lv_mem.c ****     }
 1543              		.loc 1 298 16 view .LVU502
 1544              	.LBE9:
 312:lvgl/src/lv_misc/lv_mem.c ****         }
 1545              		.loc 1 312 13 is_stmt 1 view .LVU503
 1546 004c 2246     		mov	r2, r4
 1547 004e B442     		cmp	r4, r6
 1548 0050 28BF     		it	cs
 1549 0052 3246     		movcs	r2, r6
 1550 0054 2946     		mov	r1, r5
 1551 0056 FFF7FEFF 		bl	_lv_memcpy
 1552              	.LVL172:
 312:lvgl/src/lv_misc/lv_mem.c ****         }
 1553              		.loc 1 312 13 is_stmt 0 view .LVU504
 1554 005a ECE7     		b	.L128
 1555              	.LVL173:
 1556              	.L130:
 291:lvgl/src/lv_misc/lv_mem.c **** 
 1557              		.loc 1 291 37 view .LVU505
 1558 005c 2F46     		mov	r7, r5
 1559 005e EDE7     		b	.L124
 1560              		.cfi_endproc
 1561              	.LFE171:
 1563              		.section	.text._lv_mem_buf_get,"ax",%progbits
 1564              		.align	1
 1565              		.global	_lv_mem_buf_get
 1566              		.syntax unified
 1567              		.thumb
 1568              		.thumb_func
 1569              		.fpu fpv4-sp-d16
 1571              	_lv_mem_buf_get:
 1572              	.LVL174:
 1573              	.LFB176:
 467:lvgl/src/lv_misc/lv_mem.c ****     if(size == 0) return NULL;
 1574              		.loc 1 467 1 is_stmt 1 view -0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 467:lvgl/src/lv_misc/lv_mem.c ****     if(size == 0) return NULL;
 1578              		.loc 1 467 1 is_stmt 0 view .LVU507
 1579 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  D:\Temp\ccGtTw4W.s 			page 51


 1580              	.LCFI13:
 1581              		.cfi_def_cfa_offset 16
 1582              		.cfi_offset 3, -16
 1583              		.cfi_offset 4, -12
 1584              		.cfi_offset 5, -8
 1585              		.cfi_offset 14, -4
 468:lvgl/src/lv_misc/lv_mem.c **** 
 1586              		.loc 1 468 5 is_stmt 1 view .LVU508
 468:lvgl/src/lv_misc/lv_mem.c **** 
 1587              		.loc 1 468 7 is_stmt 0 view .LVU509
 1588 0002 0028     		cmp	r0, #0
 1589 0004 00F08580 		beq	.L151
 1590 0008 0446     		mov	r4, r0
 471:lvgl/src/lv_misc/lv_mem.c ****     if(size <= MEM_BUF_SMALL_SIZE) {
 1591              		.loc 1 471 5 is_stmt 1 view .LVU510
 472:lvgl/src/lv_misc/lv_mem.c ****         for(i = 0; i < sizeof(mem_buf_small) / sizeof(mem_buf_small[0]); i++) {
 1592              		.loc 1 472 5 view .LVU511
 472:lvgl/src/lv_misc/lv_mem.c ****         for(i = 0; i < sizeof(mem_buf_small) / sizeof(mem_buf_small[0]); i++) {
 1593              		.loc 1 472 7 is_stmt 0 view .LVU512
 1594 000a 1028     		cmp	r0, #16
 1595 000c 0DD9     		bls	.L152
 1596 000e 4FF0FF31 		mov	r1, #-1
 1597 0012 0023     		movs	r3, #0
 1598 0014 28E0     		b	.L143
 1599              	.LVL175:
 1600              	.L156:
 475:lvgl/src/lv_misc/lv_mem.c ****                 return mem_buf_small[i].p;
 1601              		.loc 1 475 17 is_stmt 1 view .LVU513
 475:lvgl/src/lv_misc/lv_mem.c ****                 return mem_buf_small[i].p;
 1602              		.loc 1 475 39 is_stmt 0 view .LVU514
 1603 0016 404A     		ldr	r2, .L164
 1604 0018 02EBC300 		add	r0, r2, r3, lsl #3
 1605              	.LVL176:
 475:lvgl/src/lv_misc/lv_mem.c ****                 return mem_buf_small[i].p;
 1606              		.loc 1 475 39 view .LVU515
 1607 001c 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 1608              	.LVL177:
 475:lvgl/src/lv_misc/lv_mem.c ****                 return mem_buf_small[i].p;
 1609              		.loc 1 475 39 view .LVU516
 1610 001e 43F00103 		orr	r3, r3, #1
 1611 0022 8371     		strb	r3, [r0, #6]
 476:lvgl/src/lv_misc/lv_mem.c ****             }
 1612              		.loc 1 476 17 is_stmt 1 view .LVU517
 476:lvgl/src/lv_misc/lv_mem.c ****             }
 1613              		.loc 1 476 40 is_stmt 0 view .LVU518
 1614 0024 52F83130 		ldr	r3, [r2, r1, lsl #3]
 1615 0028 52E0     		b	.L134
 1616              	.LVL178:
 1617              	.L152:
 473:lvgl/src/lv_misc/lv_mem.c ****             if(mem_buf_small[i].used == 0) {
 1618              		.loc 1 473 15 view .LVU519
 1619 002a 0023     		movs	r3, #0
 1620              	.L136:
 1621              	.LVL179:
 473:lvgl/src/lv_misc/lv_mem.c ****             if(mem_buf_small[i].used == 0) {
 1622              		.loc 1 473 9 discriminator 1 view .LVU520
 1623 002c 012B     		cmp	r3, #1
ARM GAS  D:\Temp\ccGtTw4W.s 			page 52


 1624 002e 0AD8     		bhi	.L155
 474:lvgl/src/lv_misc/lv_mem.c ****                 mem_buf_small[i].used = 1;
 1625              		.loc 1 474 13 is_stmt 1 view .LVU521
 474:lvgl/src/lv_misc/lv_mem.c ****                 mem_buf_small[i].used = 1;
 1626              		.loc 1 474 32 is_stmt 0 view .LVU522
 1627 0030 1946     		mov	r1, r3
 1628 0032 394A     		ldr	r2, .L164
 1629 0034 02EBC302 		add	r2, r2, r3, lsl #3
 1630 0038 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 474:lvgl/src/lv_misc/lv_mem.c ****                 mem_buf_small[i].used = 1;
 1631              		.loc 1 474 15 view .LVU523
 1632 003a 12F0010F 		tst	r2, #1
 1633 003e EAD0     		beq	.L156
 473:lvgl/src/lv_misc/lv_mem.c ****             if(mem_buf_small[i].used == 0) {
 1634              		.loc 1 473 75 discriminator 2 view .LVU524
 1635 0040 0133     		adds	r3, r3, #1
 1636              	.LVL180:
 473:lvgl/src/lv_misc/lv_mem.c ****             if(mem_buf_small[i].used == 0) {
 1637              		.loc 1 473 75 discriminator 2 view .LVU525
 1638 0042 DBB2     		uxtb	r3, r3
 1639              	.LVL181:
 473:lvgl/src/lv_misc/lv_mem.c ****             if(mem_buf_small[i].used == 0) {
 1640              		.loc 1 473 75 discriminator 2 view .LVU526
 1641 0044 F2E7     		b	.L136
 1642              	.L155:
 473:lvgl/src/lv_misc/lv_mem.c ****             if(mem_buf_small[i].used == 0) {
 1643              		.loc 1 473 75 discriminator 2 view .LVU527
 1644 0046 4FF0FF31 		mov	r1, #-1
 1645 004a 0023     		movs	r3, #0
 1646              	.LVL182:
 473:lvgl/src/lv_misc/lv_mem.c ****             if(mem_buf_small[i].used == 0) {
 1647              		.loc 1 473 75 discriminator 2 view .LVU528
 1648 004c 0CE0     		b	.L143
 1649              	.LVL183:
 1650              	.L158:
 486:lvgl/src/lv_misc/lv_mem.c ****                 return LV_GC_ROOT(_lv_mem_buf[i]).p;
 1651              		.loc 1 486 17 is_stmt 1 view .LVU529
 486:lvgl/src/lv_misc/lv_mem.c ****                 return LV_GC_ROOT(_lv_mem_buf[i]).p;
 1652              		.loc 1 486 49 is_stmt 0 view .LVU530
 1653 004e 334A     		ldr	r2, .L164+4
 1654 0050 02EBC301 		add	r1, r2, r3, lsl #3
 1655              	.LVL184:
 486:lvgl/src/lv_misc/lv_mem.c ****                 return LV_GC_ROOT(_lv_mem_buf[i]).p;
 1656              		.loc 1 486 49 view .LVU531
 1657 0054 8B79     		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 1658              	.LVL185:
 486:lvgl/src/lv_misc/lv_mem.c ****                 return LV_GC_ROOT(_lv_mem_buf[i]).p;
 1659              		.loc 1 486 49 view .LVU532
 1660 0056 43F00103 		orr	r3, r3, #1
 1661 005a 8B71     		strb	r3, [r1, #6]
 487:lvgl/src/lv_misc/lv_mem.c ****             }
 1662              		.loc 1 487 17 is_stmt 1 view .LVU533
 487:lvgl/src/lv_misc/lv_mem.c ****             }
 1663              		.loc 1 487 50 is_stmt 0 view .LVU534
 1664 005c 52F83030 		ldr	r3, [r2, r0, lsl #3]
 1665 0060 36E0     		b	.L134
 1666              	.LVL186:
ARM GAS  D:\Temp\ccGtTw4W.s 			page 53


 1667              	.L159:
 490:lvgl/src/lv_misc/lv_mem.c ****             }
 1668              		.loc 1 490 17 is_stmt 1 view .LVU535
 490:lvgl/src/lv_misc/lv_mem.c ****             }
 1669              		.loc 1 490 25 is_stmt 0 view .LVU536
 1670 0062 59B2     		sxtb	r1, r3
 1671              	.LVL187:
 1672              	.L140:
 483:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).used == 0 && LV_GC_ROOT(_lv_mem_buf[i]).size >= size) {
 1673              		.loc 1 483 41 discriminator 2 view .LVU537
 1674 0064 0133     		adds	r3, r3, #1
 1675              	.LVL188:
 483:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).used == 0 && LV_GC_ROOT(_lv_mem_buf[i]).size >= size) {
 1676              		.loc 1 483 41 discriminator 2 view .LVU538
 1677 0066 DBB2     		uxtb	r3, r3
 1678              	.LVL189:
 1679              	.L143:
 483:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).used == 0 && LV_GC_ROOT(_lv_mem_buf[i]).size >= size) {
 1680              		.loc 1 483 5 discriminator 1 view .LVU539
 1681 0068 0F2B     		cmp	r3, #15
 1682 006a 18D8     		bhi	.L157
 484:lvgl/src/lv_misc/lv_mem.c ****             if(LV_GC_ROOT(_lv_mem_buf[i]).size == size) {
 1683              		.loc 1 484 9 is_stmt 1 view .LVU540
 484:lvgl/src/lv_misc/lv_mem.c ****             if(LV_GC_ROOT(_lv_mem_buf[i]).size == size) {
 1684              		.loc 1 484 38 is_stmt 0 view .LVU541
 1685 006c 1846     		mov	r0, r3
 1686 006e 2B4A     		ldr	r2, .L164+4
 1687 0070 02EBC302 		add	r2, r2, r3, lsl #3
 1688 0074 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 484:lvgl/src/lv_misc/lv_mem.c ****             if(LV_GC_ROOT(_lv_mem_buf[i]).size == size) {
 1689              		.loc 1 484 11 view .LVU542
 1690 0076 12F0010F 		tst	r2, #1
 1691 007a F3D1     		bne	.L140
 484:lvgl/src/lv_misc/lv_mem.c ****             if(LV_GC_ROOT(_lv_mem_buf[i]).size == size) {
 1692              		.loc 1 484 78 discriminator 1 view .LVU543
 1693 007c 274A     		ldr	r2, .L164+4
 1694 007e 02EBC302 		add	r2, r2, r3, lsl #3
 1695 0082 9288     		ldrh	r2, [r2, #4]
 484:lvgl/src/lv_misc/lv_mem.c ****             if(LV_GC_ROOT(_lv_mem_buf[i]).size == size) {
 1696              		.loc 1 484 49 discriminator 1 view .LVU544
 1697 0084 A242     		cmp	r2, r4
 1698 0086 EDD3     		bcc	.L140
 485:lvgl/src/lv_misc/lv_mem.c ****                 LV_GC_ROOT(_lv_mem_buf[i]).used = 1;
 1699              		.loc 1 485 13 is_stmt 1 view .LVU545
 485:lvgl/src/lv_misc/lv_mem.c ****                 LV_GC_ROOT(_lv_mem_buf[i]).used = 1;
 1700              		.loc 1 485 15 is_stmt 0 view .LVU546
 1701 0088 E1D0     		beq	.L158
 489:lvgl/src/lv_misc/lv_mem.c ****                 i_guess = i;
 1702              		.loc 1 489 18 is_stmt 1 view .LVU547
 489:lvgl/src/lv_misc/lv_mem.c ****                 i_guess = i;
 1703              		.loc 1 489 20 is_stmt 0 view .LVU548
 1704 008a 0029     		cmp	r1, #0
 1705 008c E9DB     		blt	.L159
 493:lvgl/src/lv_misc/lv_mem.c ****                 i_guess = i;
 1706              		.loc 1 493 18 is_stmt 1 view .LVU549
 493:lvgl/src/lv_misc/lv_mem.c ****                 i_guess = i;
 1707              		.loc 1 493 87 is_stmt 0 view .LVU550
ARM GAS  D:\Temp\ccGtTw4W.s 			page 54


 1708 008e 2348     		ldr	r0, .L164+4
 1709 0090 00EBC100 		add	r0, r0, r1, lsl #3
 1710 0094 8088     		ldrh	r0, [r0, #4]
 493:lvgl/src/lv_misc/lv_mem.c ****                 i_guess = i;
 1711              		.loc 1 493 20 view .LVU551
 1712 0096 8242     		cmp	r2, r0
 1713 0098 E4D2     		bcs	.L140
 494:lvgl/src/lv_misc/lv_mem.c ****             }
 1714              		.loc 1 494 17 is_stmt 1 view .LVU552
 494:lvgl/src/lv_misc/lv_mem.c ****             }
 1715              		.loc 1 494 25 is_stmt 0 view .LVU553
 1716 009a 59B2     		sxtb	r1, r3
 1717              	.LVL190:
 494:lvgl/src/lv_misc/lv_mem.c ****             }
 1718              		.loc 1 494 25 view .LVU554
 1719 009c E2E7     		b	.L140
 1720              	.L157:
 499:lvgl/src/lv_misc/lv_mem.c ****         LV_GC_ROOT(_lv_mem_buf[i_guess]).used = 1;
 1721              		.loc 1 499 5 is_stmt 1 view .LVU555
 499:lvgl/src/lv_misc/lv_mem.c ****         LV_GC_ROOT(_lv_mem_buf[i_guess]).used = 1;
 1722              		.loc 1 499 7 is_stmt 0 view .LVU556
 1723 009e 0029     		cmp	r1, #0
 1724 00a0 0DDA     		bge	.L160
 505:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).used == 0) {
 1725              		.loc 1 505 11 view .LVU557
 1726 00a2 0023     		movs	r3, #0
 1727              	.LVL191:
 1728              	.L145:
 505:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).used == 0) {
 1729              		.loc 1 505 5 discriminator 1 view .LVU558
 1730 00a4 0F2B     		cmp	r3, #15
 1731 00a6 2ED8     		bhi	.L161
 506:lvgl/src/lv_misc/lv_mem.c ****             /*if this fails you probably need to increase your LV_MEM_SIZE/heap size*/
 1732              		.loc 1 506 9 is_stmt 1 view .LVU559
 506:lvgl/src/lv_misc/lv_mem.c ****             /*if this fails you probably need to increase your LV_MEM_SIZE/heap size*/
 1733              		.loc 1 506 38 is_stmt 0 view .LVU560
 1734 00a8 1D46     		mov	r5, r3
 1735 00aa 1C4A     		ldr	r2, .L164+4
 1736 00ac 02EBC302 		add	r2, r2, r3, lsl #3
 1737 00b0 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 506:lvgl/src/lv_misc/lv_mem.c ****             /*if this fails you probably need to increase your LV_MEM_SIZE/heap size*/
 1738              		.loc 1 506 11 view .LVU561
 1739 00b2 12F0010F 		tst	r2, #1
 1740 00b6 0DD0     		beq	.L162
 505:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).used == 0) {
 1741              		.loc 1 505 41 discriminator 2 view .LVU562
 1742 00b8 0133     		adds	r3, r3, #1
 1743              	.LVL192:
 505:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).used == 0) {
 1744              		.loc 1 505 41 discriminator 2 view .LVU563
 1745 00ba DBB2     		uxtb	r3, r3
 1746              	.LVL193:
 505:lvgl/src/lv_misc/lv_mem.c ****         if(LV_GC_ROOT(_lv_mem_buf[i]).used == 0) {
 1747              		.loc 1 505 41 discriminator 2 view .LVU564
 1748 00bc F2E7     		b	.L145
 1749              	.L160:
 500:lvgl/src/lv_misc/lv_mem.c ****         return LV_GC_ROOT(_lv_mem_buf[i_guess]).p;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 55


 1750              		.loc 1 500 9 is_stmt 1 view .LVU565
 500:lvgl/src/lv_misc/lv_mem.c ****         return LV_GC_ROOT(_lv_mem_buf[i_guess]).p;
 1751              		.loc 1 500 47 is_stmt 0 view .LVU566
 1752 00be 174A     		ldr	r2, .L164+4
 1753 00c0 02EBC100 		add	r0, r2, r1, lsl #3
 1754 00c4 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 1755              	.LVL194:
 500:lvgl/src/lv_misc/lv_mem.c ****         return LV_GC_ROOT(_lv_mem_buf[i_guess]).p;
 1756              		.loc 1 500 47 view .LVU567
 1757 00c6 43F00103 		orr	r3, r3, #1
 1758 00ca 8371     		strb	r3, [r0, #6]
 501:lvgl/src/lv_misc/lv_mem.c ****     }
 1759              		.loc 1 501 9 is_stmt 1 view .LVU568
 501:lvgl/src/lv_misc/lv_mem.c ****     }
 1760              		.loc 1 501 48 is_stmt 0 view .LVU569
 1761 00cc 52F83130 		ldr	r3, [r2, r1, lsl #3]
 1762              	.LVL195:
 1763              	.L134:
 522:lvgl/src/lv_misc/lv_mem.c **** 
 1764              		.loc 1 522 1 view .LVU570
 1765 00d0 1846     		mov	r0, r3
 1766 00d2 38BD     		pop	{r3, r4, r5, pc}
 1767              	.LVL196:
 1768              	.L162:
 1769              	.LBB10:
 508:lvgl/src/lv_misc/lv_mem.c ****             if(buf == NULL) {
 1770              		.loc 1 508 13 is_stmt 1 view .LVU571
 508:lvgl/src/lv_misc/lv_mem.c ****             if(buf == NULL) {
 1771              		.loc 1 508 26 is_stmt 0 view .LVU572
 1772 00d4 2146     		mov	r1, r4
 1773              	.LVL197:
 508:lvgl/src/lv_misc/lv_mem.c ****             if(buf == NULL) {
 1774              		.loc 1 508 26 view .LVU573
 1775 00d6 114B     		ldr	r3, .L164+4
 1776              	.LVL198:
 508:lvgl/src/lv_misc/lv_mem.c ****             if(buf == NULL) {
 1777              		.loc 1 508 26 view .LVU574
 1778 00d8 53F83500 		ldr	r0, [r3, r5, lsl #3]
 1779 00dc FFF7FEFF 		bl	lv_mem_realloc
 1780              	.LVL199:
 509:lvgl/src/lv_misc/lv_mem.c ****                 LV_DEBUG_ASSERT(false, "Out of memory, can't allocate a new buffer (increase your L
 1781              		.loc 1 509 13 is_stmt 1 view .LVU575
 509:lvgl/src/lv_misc/lv_mem.c ****                 LV_DEBUG_ASSERT(false, "Out of memory, can't allocate a new buffer (increase your L
 1782              		.loc 1 509 15 is_stmt 0 view .LVU576
 1783 00e0 0346     		mov	r3, r0
 1784 00e2 50B1     		cbz	r0, .L163
 513:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).size = size;
 1785              		.loc 1 513 13 is_stmt 1 view .LVU577
 513:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).size = size;
 1786              		.loc 1 513 45 is_stmt 0 view .LVU578
 1787 00e4 0D48     		ldr	r0, .L164+4
 1788              	.LVL200:
 513:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).size = size;
 1789              		.loc 1 513 45 view .LVU579
 1790 00e6 00EBC502 		add	r2, r0, r5, lsl #3
 1791 00ea 9179     		ldrb	r1, [r2, #6]	@ zero_extendqisi2
 1792 00ec 41F00101 		orr	r1, r1, #1
ARM GAS  D:\Temp\ccGtTw4W.s 			page 56


 1793 00f0 9171     		strb	r1, [r2, #6]
 514:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).p    = buf;
 1794              		.loc 1 514 13 is_stmt 1 view .LVU580
 514:lvgl/src/lv_misc/lv_mem.c ****             LV_GC_ROOT(_lv_mem_buf[i]).p    = buf;
 1795              		.loc 1 514 45 is_stmt 0 view .LVU581
 1796 00f2 9480     		strh	r4, [r2, #4]	@ movhi
 515:lvgl/src/lv_misc/lv_mem.c ****             return LV_GC_ROOT(_lv_mem_buf[i]).p;
 1797              		.loc 1 515 13 is_stmt 1 view .LVU582
 515:lvgl/src/lv_misc/lv_mem.c ****             return LV_GC_ROOT(_lv_mem_buf[i]).p;
 1798              		.loc 1 515 45 is_stmt 0 view .LVU583
 1799 00f4 40F83530 		str	r3, [r0, r5, lsl #3]
 516:lvgl/src/lv_misc/lv_mem.c ****         }
 1800              		.loc 1 516 13 is_stmt 1 view .LVU584
 516:lvgl/src/lv_misc/lv_mem.c ****         }
 1801              		.loc 1 516 46 is_stmt 0 view .LVU585
 1802 00f8 EAE7     		b	.L134
 1803              	.LVL201:
 1804              	.L163:
 510:lvgl/src/lv_misc/lv_mem.c ****                 return NULL;
 1805              		.loc 1 510 17 is_stmt 1 discriminator 1 view .LVU586
 510:lvgl/src/lv_misc/lv_mem.c ****                 return NULL;
 1806              		.loc 1 510 17 discriminator 1 view .LVU587
 510:lvgl/src/lv_misc/lv_mem.c ****                 return NULL;
 1807              		.loc 1 510 17 discriminator 1 view .LVU588
 510:lvgl/src/lv_misc/lv_mem.c ****                 return NULL;
 1808              		.loc 1 510 17 discriminator 1 view .LVU589
 1809 00fa 0022     		movs	r2, #0
 1810 00fc 0023     		movs	r3, #0
 1811 00fe 0848     		ldr	r0, .L164+8
 1812              	.LVL202:
 510:lvgl/src/lv_misc/lv_mem.c ****                 return NULL;
 1813              		.loc 1 510 17 is_stmt 0 discriminator 1 view .LVU590
 1814 0100 FFF7FEFF 		bl	lv_debug_log_error
 1815              	.LVL203:
 1816              	.L148:
 510:lvgl/src/lv_misc/lv_mem.c ****                 return NULL;
 1817              		.loc 1 510 17 is_stmt 1 discriminator 1 view .LVU591
 510:lvgl/src/lv_misc/lv_mem.c ****                 return NULL;
 1818              		.loc 1 510 17 discriminator 1 view .LVU592
 1819 0104 FEE7     		b	.L148
 1820              	.LVL204:
 1821              	.L161:
 510:lvgl/src/lv_misc/lv_mem.c ****                 return NULL;
 1822              		.loc 1 510 17 is_stmt 0 discriminator 1 view .LVU593
 1823              	.LBE10:
 520:lvgl/src/lv_misc/lv_mem.c ****     return NULL;
 1824              		.loc 1 520 5 is_stmt 1 discriminator 1 view .LVU594
 520:lvgl/src/lv_misc/lv_mem.c ****     return NULL;
 1825              		.loc 1 520 5 discriminator 1 view .LVU595
 520:lvgl/src/lv_misc/lv_mem.c ****     return NULL;
 1826              		.loc 1 520 5 discriminator 1 view .LVU596
 520:lvgl/src/lv_misc/lv_mem.c ****     return NULL;
 1827              		.loc 1 520 5 discriminator 1 view .LVU597
 1828 0106 0022     		movs	r2, #0
 1829 0108 0023     		movs	r3, #0
 1830              	.LVL205:
 520:lvgl/src/lv_misc/lv_mem.c ****     return NULL;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 57


 1831              		.loc 1 520 5 is_stmt 0 discriminator 1 view .LVU598
 1832 010a 0648     		ldr	r0, .L164+12
 1833 010c FFF7FEFF 		bl	lv_debug_log_error
 1834              	.LVL206:
 1835              	.L150:
 520:lvgl/src/lv_misc/lv_mem.c ****     return NULL;
 1836              		.loc 1 520 5 is_stmt 1 discriminator 2 view .LVU599
 520:lvgl/src/lv_misc/lv_mem.c ****     return NULL;
 1837              		.loc 1 520 5 discriminator 2 view .LVU600
 1838 0110 FEE7     		b	.L150
 1839              	.LVL207:
 1840              	.L151:
 468:lvgl/src/lv_misc/lv_mem.c **** 
 1841              		.loc 1 468 26 is_stmt 0 view .LVU601
 1842 0112 0023     		movs	r3, #0
 1843 0114 DCE7     		b	.L134
 1844              	.L165:
 1845 0116 00BF     		.align	2
 1846              	.L164:
 1847 0118 00000000 		.word	.LANCHOR4
 1848 011c 00000000 		.word	_lv_mem_buf
 1849 0120 00000000 		.word	.LC0
 1850 0124 54000000 		.word	.LC1
 1851              		.cfi_endproc
 1852              	.LFE176:
 1854              		.section	.text._lv_memset,"ax",%progbits
 1855              		.align	1
 1856              		.global	_lv_memset
 1857              		.syntax unified
 1858              		.thumb
 1859              		.thumb_func
 1860              		.fpu fpv4-sp-d16
 1862              	_lv_memset:
 1863              	.LVL208:
 1864              	.LFB180:
 640:lvgl/src/lv_misc/lv_mem.c **** 
 1865              		.loc 1 640 1 is_stmt 1 view -0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 0
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 1869              		@ link register save eliminated.
 642:lvgl/src/lv_misc/lv_mem.c **** 
 1870              		.loc 1 642 5 view .LVU603
 644:lvgl/src/lv_misc/lv_mem.c **** 
 1871              		.loc 1 644 5 view .LVU604
 647:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 1872              		.loc 1 647 5 view .LVU605
 647:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 1873              		.loc 1 647 7 is_stmt 0 view .LVU606
 1874 0000 10F00303 		ands	r3, r0, #3
 1875              	.LVL209:
 647:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 1876              		.loc 1 647 7 view .LVU607
 1877 0004 09D0     		beq	.L167
 648:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
 1878              		.loc 1 648 9 is_stmt 1 view .LVU608
 648:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
ARM GAS  D:\Temp\ccGtTw4W.s 			page 58


 1879              		.loc 1 648 17 is_stmt 0 view .LVU609
 1880 0006 C3F10403 		rsb	r3, r3, #4
 1881              	.LVL210:
 649:lvgl/src/lv_misc/lv_mem.c ****             SET8(v);
 1882              		.loc 1 649 9 is_stmt 1 view .LVU610
 649:lvgl/src/lv_misc/lv_mem.c ****             SET8(v);
 1883              		.loc 1 649 14 is_stmt 0 view .LVU611
 1884 000a 03E0     		b	.L168
 1885              	.LVL211:
 1886              	.L169:
 650:lvgl/src/lv_misc/lv_mem.c ****             len--;
 1887              		.loc 1 650 13 is_stmt 1 view .LVU612
 1888 000c 00F8011B 		strb	r1, [r0], #1
 1889              	.LVL212:
 650:lvgl/src/lv_misc/lv_mem.c ****             len--;
 1890              		.loc 1 650 13 view .LVU613
 650:lvgl/src/lv_misc/lv_mem.c ****             len--;
 1891              		.loc 1 650 20 view .LVU614
 651:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 1892              		.loc 1 651 13 view .LVU615
 651:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 1893              		.loc 1 651 16 is_stmt 0 view .LVU616
 1894 0010 013A     		subs	r2, r2, #1
 1895              	.LVL213:
 652:lvgl/src/lv_misc/lv_mem.c ****         }
 1896              		.loc 1 652 13 is_stmt 1 view .LVU617
 652:lvgl/src/lv_misc/lv_mem.c ****         }
 1897              		.loc 1 652 20 is_stmt 0 view .LVU618
 1898 0012 013B     		subs	r3, r3, #1
 1899              	.LVL214:
 1900              	.L168:
 649:lvgl/src/lv_misc/lv_mem.c ****             SET8(v);
 1901              		.loc 1 649 14 view .LVU619
 1902 0014 0BB1     		cbz	r3, .L167
 649:lvgl/src/lv_misc/lv_mem.c ****             SET8(v);
 1903              		.loc 1 649 23 discriminator 1 view .LVU620
 1904 0016 002A     		cmp	r2, #0
 1905 0018 F8D1     		bne	.L169
 1906              	.L167:
 656:lvgl/src/lv_misc/lv_mem.c **** 
 1907              		.loc 1 656 5 is_stmt 1 view .LVU621
 656:lvgl/src/lv_misc/lv_mem.c **** 
 1908              		.loc 1 656 22 is_stmt 0 view .LVU622
 1909 001a 01EB0123 		add	r3, r1, r1, lsl #8
 1910              	.LVL215:
 656:lvgl/src/lv_misc/lv_mem.c **** 
 1911              		.loc 1 656 33 view .LVU623
 1912 001e 03EB0143 		add	r3, r3, r1, lsl #16
 656:lvgl/src/lv_misc/lv_mem.c **** 
 1913              		.loc 1 656 45 view .LVU624
 1914 0022 03EB0163 		add	r3, r3, r1, lsl #24
 1915              	.LVL216:
 658:lvgl/src/lv_misc/lv_mem.c **** 
 1916              		.loc 1 658 5 is_stmt 1 view .LVU625
 660:lvgl/src/lv_misc/lv_mem.c ****         REPEAT8(SET32(v32));
 1917              		.loc 1 660 5 view .LVU626
 1918              	.L170:
ARM GAS  D:\Temp\ccGtTw4W.s 			page 59


 660:lvgl/src/lv_misc/lv_mem.c ****         REPEAT8(SET32(v32));
 1919              		.loc 1 660 10 is_stmt 0 view .LVU627
 1920 0026 202A     		cmp	r2, #32
 1921 0028 0DD9     		bls	.L172
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1922              		.loc 1 661 9 is_stmt 1 view .LVU628
 1923 002a 0360     		str	r3, [r0]
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1924              		.loc 1 661 9 view .LVU629
 1925              	.LVL217:
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1926              		.loc 1 661 9 view .LVU630
 1927 002c 4360     		str	r3, [r0, #4]
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1928              		.loc 1 661 9 view .LVU631
 1929              	.LVL218:
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1930              		.loc 1 661 9 view .LVU632
 1931 002e 8360     		str	r3, [r0, #8]
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1932              		.loc 1 661 9 view .LVU633
 1933              	.LVL219:
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1934              		.loc 1 661 9 view .LVU634
 1935 0030 C360     		str	r3, [r0, #12]
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1936              		.loc 1 661 9 view .LVU635
 1937              	.LVL220:
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1938              		.loc 1 661 9 view .LVU636
 1939 0032 0361     		str	r3, [r0, #16]
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1940              		.loc 1 661 9 view .LVU637
 1941              	.LVL221:
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1942              		.loc 1 661 9 view .LVU638
 1943 0034 4361     		str	r3, [r0, #20]
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1944              		.loc 1 661 9 view .LVU639
 1945              	.LVL222:
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1946              		.loc 1 661 9 view .LVU640
 1947 0036 8361     		str	r3, [r0, #24]
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1948              		.loc 1 661 9 view .LVU641
 1949              	.LVL223:
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1950              		.loc 1 661 9 view .LVU642
 1951 0038 C361     		str	r3, [r0, #28]
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1952              		.loc 1 661 9 view .LVU643
 1953 003a 2030     		adds	r0, r0, #32
 1954              	.LVL224:
 661:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 1955              		.loc 1 661 28 view .LVU644
 662:lvgl/src/lv_misc/lv_mem.c ****     }
 1956              		.loc 1 662 9 view .LVU645
ARM GAS  D:\Temp\ccGtTw4W.s 			page 60


 662:lvgl/src/lv_misc/lv_mem.c ****     }
 1957              		.loc 1 662 13 is_stmt 0 view .LVU646
 1958 003c 203A     		subs	r2, r2, #32
 1959              	.LVL225:
 662:lvgl/src/lv_misc/lv_mem.c ****     }
 1960              		.loc 1 662 13 view .LVU647
 1961 003e F2E7     		b	.L170
 1962              	.L173:
 666:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 1963              		.loc 1 666 9 is_stmt 1 view .LVU648
 1964 0040 40F8043B 		str	r3, [r0], #4
 1965              	.LVL226:
 666:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 1966              		.loc 1 666 9 view .LVU649
 666:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 1967              		.loc 1 666 19 view .LVU650
 667:lvgl/src/lv_misc/lv_mem.c ****     }
 1968              		.loc 1 667 9 view .LVU651
 667:lvgl/src/lv_misc/lv_mem.c ****     }
 1969              		.loc 1 667 13 is_stmt 0 view .LVU652
 1970 0044 043A     		subs	r2, r2, #4
 1971              	.LVL227:
 1972              	.L172:
 665:lvgl/src/lv_misc/lv_mem.c ****         SET32(v32);
 1973              		.loc 1 665 10 view .LVU653
 1974 0046 042A     		cmp	r2, #4
 1975 0048 FAD8     		bhi	.L173
 665:lvgl/src/lv_misc/lv_mem.c ****         SET32(v32);
 1976              		.loc 1 665 10 view .LVU654
 1977 004a 02E0     		b	.L174
 1978              	.LVL228:
 1979              	.L175:
 672:lvgl/src/lv_misc/lv_mem.c ****         len--;
 1980              		.loc 1 672 9 is_stmt 1 view .LVU655
 1981 004c 00F8011B 		strb	r1, [r0], #1
 1982              	.LVL229:
 672:lvgl/src/lv_misc/lv_mem.c ****         len--;
 1983              		.loc 1 672 9 view .LVU656
 672:lvgl/src/lv_misc/lv_mem.c ****         len--;
 1984              		.loc 1 672 16 view .LVU657
 673:lvgl/src/lv_misc/lv_mem.c ****     }
 1985              		.loc 1 673 9 view .LVU658
 673:lvgl/src/lv_misc/lv_mem.c ****     }
 1986              		.loc 1 673 12 is_stmt 0 view .LVU659
 1987 0050 013A     		subs	r2, r2, #1
 1988              	.LVL230:
 1989              	.L174:
 671:lvgl/src/lv_misc/lv_mem.c ****         SET8(v);
 1990              		.loc 1 671 10 view .LVU660
 1991 0052 002A     		cmp	r2, #0
 1992 0054 FAD1     		bne	.L175
 675:lvgl/src/lv_misc/lv_mem.c **** 
 1993              		.loc 1 675 1 view .LVU661
 1994 0056 7047     		bx	lr
 1995              		.cfi_endproc
 1996              	.LFE180:
 1998              		.section	.text.lv_mem_monitor,"ax",%progbits
ARM GAS  D:\Temp\ccGtTw4W.s 			page 61


 1999              		.align	1
 2000              		.global	lv_mem_monitor
 2001              		.syntax unified
 2002              		.thumb
 2003              		.thumb_func
 2004              		.fpu fpv4-sp-d16
 2006              	lv_mem_monitor:
 2007              	.LVL231:
 2008              	.LFB174:
 400:lvgl/src/lv_misc/lv_mem.c ****     /*Init the data*/
 2009              		.loc 1 400 1 is_stmt 1 view -0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 0
 2012              		@ frame_needed = 0, uses_anonymous_args = 0
 400:lvgl/src/lv_misc/lv_mem.c ****     /*Init the data*/
 2013              		.loc 1 400 1 is_stmt 0 view .LVU663
 2014 0000 10B5     		push	{r4, lr}
 2015              	.LCFI14:
 2016              		.cfi_def_cfa_offset 8
 2017              		.cfi_offset 4, -8
 2018              		.cfi_offset 14, -4
 2019 0002 0446     		mov	r4, r0
 402:lvgl/src/lv_misc/lv_mem.c **** #if LV_MEM_CUSTOM == 0
 2020              		.loc 1 402 5 is_stmt 1 view .LVU664
 2021 0004 1C22     		movs	r2, #28
 2022 0006 0021     		movs	r1, #0
 2023 0008 FFF7FEFF 		bl	_lv_memset
 2024              	.LVL232:
 404:lvgl/src/lv_misc/lv_mem.c **** 
 2025              		.loc 1 404 5 view .LVU665
 406:lvgl/src/lv_misc/lv_mem.c **** 
 2026              		.loc 1 406 5 view .LVU666
 406:lvgl/src/lv_misc/lv_mem.c **** 
 2027              		.loc 1 406 9 is_stmt 0 view .LVU667
 2028 000c 0020     		movs	r0, #0
 2029 000e FFF7FEFF 		bl	ent_get_next
 2030              	.LVL233:
 408:lvgl/src/lv_misc/lv_mem.c ****         if(e->header.s.used == 0) {
 2031              		.loc 1 408 5 is_stmt 1 view .LVU668
 408:lvgl/src/lv_misc/lv_mem.c ****         if(e->header.s.used == 0) {
 2032              		.loc 1 408 10 is_stmt 0 view .LVU669
 2033 0012 04E0     		b	.L177
 2034              	.L178:
 417:lvgl/src/lv_misc/lv_mem.c ****         }
 2035              		.loc 1 417 13 is_stmt 1 view .LVU670
 417:lvgl/src/lv_misc/lv_mem.c ****         }
 2036              		.loc 1 417 18 is_stmt 0 view .LVU671
 2037 0014 2369     		ldr	r3, [r4, #16]
 417:lvgl/src/lv_misc/lv_mem.c ****         }
 2038              		.loc 1 417 28 view .LVU672
 2039 0016 0133     		adds	r3, r3, #1
 2040 0018 2361     		str	r3, [r4, #16]
 2041              	.L179:
 420:lvgl/src/lv_misc/lv_mem.c ****     }
 2042              		.loc 1 420 9 is_stmt 1 view .LVU673
 420:lvgl/src/lv_misc/lv_mem.c ****     }
 2043              		.loc 1 420 13 is_stmt 0 view .LVU674
ARM GAS  D:\Temp\ccGtTw4W.s 			page 62


 2044 001a FFF7FEFF 		bl	ent_get_next
 2045              	.LVL234:
 2046              	.L177:
 408:lvgl/src/lv_misc/lv_mem.c ****         if(e->header.s.used == 0) {
 2047              		.loc 1 408 10 view .LVU675
 2048 001e 98B1     		cbz	r0, .L184
 409:lvgl/src/lv_misc/lv_mem.c ****             mon_p->free_cnt++;
 2049              		.loc 1 409 9 is_stmt 1 view .LVU676
 409:lvgl/src/lv_misc/lv_mem.c ****             mon_p->free_cnt++;
 2050              		.loc 1 409 29 is_stmt 0 view .LVU677
 2051 0020 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 409:lvgl/src/lv_misc/lv_mem.c ****             mon_p->free_cnt++;
 2052              		.loc 1 409 11 view .LVU678
 2053 0022 13F0010F 		tst	r3, #1
 2054 0026 F5D1     		bne	.L178
 410:lvgl/src/lv_misc/lv_mem.c ****             mon_p->free_size += e->header.s.d_size;
 2055              		.loc 1 410 13 is_stmt 1 view .LVU679
 410:lvgl/src/lv_misc/lv_mem.c ****             mon_p->free_size += e->header.s.d_size;
 2056              		.loc 1 410 18 is_stmt 0 view .LVU680
 2057 0028 6368     		ldr	r3, [r4, #4]
 410:lvgl/src/lv_misc/lv_mem.c ****             mon_p->free_size += e->header.s.d_size;
 2058              		.loc 1 410 28 view .LVU681
 2059 002a 0133     		adds	r3, r3, #1
 2060 002c 6360     		str	r3, [r4, #4]
 411:lvgl/src/lv_misc/lv_mem.c ****             if(e->header.s.d_size > mon_p->free_biggest_size) {
 2061              		.loc 1 411 13 is_stmt 1 view .LVU682
 411:lvgl/src/lv_misc/lv_mem.c ****             if(e->header.s.d_size > mon_p->free_biggest_size) {
 2062              		.loc 1 411 44 is_stmt 0 view .LVU683
 2063 002e 0268     		ldr	r2, [r0]
 411:lvgl/src/lv_misc/lv_mem.c ****             if(e->header.s.d_size > mon_p->free_biggest_size) {
 2064              		.loc 1 411 30 view .LVU684
 2065 0030 A368     		ldr	r3, [r4, #8]
 2066 0032 03EB5203 		add	r3, r3, r2, lsr #1
 2067 0036 A360     		str	r3, [r4, #8]
 412:lvgl/src/lv_misc/lv_mem.c ****                 mon_p->free_biggest_size = e->header.s.d_size;
 2068              		.loc 1 412 13 is_stmt 1 view .LVU685
 412:lvgl/src/lv_misc/lv_mem.c ****                 mon_p->free_biggest_size = e->header.s.d_size;
 2069              		.loc 1 412 27 is_stmt 0 view .LVU686
 2070 0038 0368     		ldr	r3, [r0]
 2071 003a C3F35E03 		ubfx	r3, r3, #1, #31
 412:lvgl/src/lv_misc/lv_mem.c ****                 mon_p->free_biggest_size = e->header.s.d_size;
 2072              		.loc 1 412 42 view .LVU687
 2073 003e E268     		ldr	r2, [r4, #12]
 412:lvgl/src/lv_misc/lv_mem.c ****                 mon_p->free_biggest_size = e->header.s.d_size;
 2074              		.loc 1 412 15 view .LVU688
 2075 0040 9342     		cmp	r3, r2
 2076 0042 EAD9     		bls	.L179
 413:lvgl/src/lv_misc/lv_mem.c ****             }
 2077              		.loc 1 413 17 is_stmt 1 view .LVU689
 413:lvgl/src/lv_misc/lv_mem.c ****             }
 2078              		.loc 1 413 42 is_stmt 0 view .LVU690
 2079 0044 E360     		str	r3, [r4, #12]
 2080 0046 E8E7     		b	.L179
 2081              	.L184:
 422:lvgl/src/lv_misc/lv_mem.c ****     mon_p->max_used = mem_max_size;
 2082              		.loc 1 422 5 is_stmt 1 view .LVU691
 422:lvgl/src/lv_misc/lv_mem.c ****     mon_p->max_used = mem_max_size;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 63


 2083              		.loc 1 422 23 is_stmt 0 view .LVU692
 2084 0048 4FF40043 		mov	r3, #32768
 2085 004c 2360     		str	r3, [r4]
 423:lvgl/src/lv_misc/lv_mem.c ****     mon_p->used_pct = 100 - (100U * mon_p->free_size) / mon_p->total_size;
 2086              		.loc 1 423 5 is_stmt 1 view .LVU693
 423:lvgl/src/lv_misc/lv_mem.c ****     mon_p->used_pct = 100 - (100U * mon_p->free_size) / mon_p->total_size;
 2087              		.loc 1 423 21 is_stmt 0 view .LVU694
 2088 004e 0D4B     		ldr	r3, .L185
 2089 0050 1B68     		ldr	r3, [r3]
 2090 0052 6361     		str	r3, [r4, #20]
 424:lvgl/src/lv_misc/lv_mem.c ****     if(mon_p->free_size > 0) {
 2091              		.loc 1 424 5 is_stmt 1 view .LVU695
 424:lvgl/src/lv_misc/lv_mem.c ****     if(mon_p->free_size > 0) {
 2092              		.loc 1 424 42 is_stmt 0 view .LVU696
 2093 0054 A268     		ldr	r2, [r4, #8]
 424:lvgl/src/lv_misc/lv_mem.c ****     if(mon_p->free_size > 0) {
 2094              		.loc 1 424 35 view .LVU697
 2095 0056 6423     		movs	r3, #100
 2096 0058 03FB02F3 		mul	r3, r3, r2
 424:lvgl/src/lv_misc/lv_mem.c ****     if(mon_p->free_size > 0) {
 2097              		.loc 1 424 55 view .LVU698
 2098 005c DB0B     		lsrs	r3, r3, #15
 424:lvgl/src/lv_misc/lv_mem.c ****     if(mon_p->free_size > 0) {
 2099              		.loc 1 424 27 view .LVU699
 2100 005e C3F16403 		rsb	r3, r3, #100
 424:lvgl/src/lv_misc/lv_mem.c ****     if(mon_p->free_size > 0) {
 2101              		.loc 1 424 21 view .LVU700
 2102 0062 2376     		strb	r3, [r4, #24]
 425:lvgl/src/lv_misc/lv_mem.c ****         mon_p->frag_pct = mon_p->free_biggest_size * 100U / mon_p->free_size;
 2103              		.loc 1 425 5 is_stmt 1 view .LVU701
 425:lvgl/src/lv_misc/lv_mem.c ****         mon_p->frag_pct = mon_p->free_biggest_size * 100U / mon_p->free_size;
 2104              		.loc 1 425 7 is_stmt 0 view .LVU702
 2105 0064 52B1     		cbz	r2, .L181
 426:lvgl/src/lv_misc/lv_mem.c ****         mon_p->frag_pct = 100 - mon_p->frag_pct;
 2106              		.loc 1 426 9 is_stmt 1 view .LVU703
 426:lvgl/src/lv_misc/lv_mem.c ****         mon_p->frag_pct = 100 - mon_p->frag_pct;
 2107              		.loc 1 426 32 is_stmt 0 view .LVU704
 2108 0066 E168     		ldr	r1, [r4, #12]
 426:lvgl/src/lv_misc/lv_mem.c ****         mon_p->frag_pct = 100 - mon_p->frag_pct;
 2109              		.loc 1 426 52 view .LVU705
 2110 0068 6423     		movs	r3, #100
 2111 006a 03FB01F3 		mul	r3, r3, r1
 426:lvgl/src/lv_misc/lv_mem.c ****         mon_p->frag_pct = 100 - mon_p->frag_pct;
 2112              		.loc 1 426 59 view .LVU706
 2113 006e B3FBF2F3 		udiv	r3, r3, r2
 426:lvgl/src/lv_misc/lv_mem.c ****         mon_p->frag_pct = 100 - mon_p->frag_pct;
 2114              		.loc 1 426 25 view .LVU707
 2115 0072 DBB2     		uxtb	r3, r3
 427:lvgl/src/lv_misc/lv_mem.c ****     }
 2116              		.loc 1 427 9 is_stmt 1 view .LVU708
 427:lvgl/src/lv_misc/lv_mem.c ****     }
 2117              		.loc 1 427 31 is_stmt 0 view .LVU709
 2118 0074 C3F16403 		rsb	r3, r3, #100
 427:lvgl/src/lv_misc/lv_mem.c ****     }
 2119              		.loc 1 427 25 view .LVU710
 2120 0078 6376     		strb	r3, [r4, #25]
 2121              	.L176:
ARM GAS  D:\Temp\ccGtTw4W.s 			page 64


 433:lvgl/src/lv_misc/lv_mem.c **** 
 2122              		.loc 1 433 1 view .LVU711
 2123 007a 10BD     		pop	{r4, pc}
 2124              	.LVL235:
 2125              	.L181:
 430:lvgl/src/lv_misc/lv_mem.c ****     }
 2126              		.loc 1 430 9 is_stmt 1 view .LVU712
 430:lvgl/src/lv_misc/lv_mem.c ****     }
 2127              		.loc 1 430 25 is_stmt 0 view .LVU713
 2128 007c 0023     		movs	r3, #0
 2129 007e 6376     		strb	r3, [r4, #25]
 433:lvgl/src/lv_misc/lv_mem.c **** 
 2130              		.loc 1 433 1 view .LVU714
 2131 0080 FBE7     		b	.L176
 2132              	.L186:
 2133 0082 00BF     		.align	2
 2134              	.L185:
 2135 0084 00000000 		.word	.LANCHOR2
 2136              		.cfi_endproc
 2137              	.LFE174:
 2139              		.section	.text._lv_memset_00,"ax",%progbits
 2140              		.align	1
 2141              		.global	_lv_memset_00
 2142              		.syntax unified
 2143              		.thumb
 2144              		.thumb_func
 2145              		.fpu fpv4-sp-d16
 2147              	_lv_memset_00:
 2148              	.LVL236:
 2149              	.LFB181:
 683:lvgl/src/lv_misc/lv_mem.c ****     uint8_t * d8 = (uint8_t *) dst;
 2150              		.loc 1 683 1 is_stmt 1 view -0
 2151              		.cfi_startproc
 2152              		@ args = 0, pretend = 0, frame = 0
 2153              		@ frame_needed = 0, uses_anonymous_args = 0
 2154              		@ link register save eliminated.
 684:lvgl/src/lv_misc/lv_mem.c ****     uintptr_t d_align = (lv_uintptr_t) d8 & ALIGN_MASK;
 2155              		.loc 1 684 5 view .LVU716
 685:lvgl/src/lv_misc/lv_mem.c **** 
 2156              		.loc 1 685 5 view .LVU717
 688:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 2157              		.loc 1 688 5 view .LVU718
 688:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 2158              		.loc 1 688 7 is_stmt 0 view .LVU719
 2159 0000 10F00303 		ands	r3, r0, #3
 2160              	.LVL237:
 688:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 2161              		.loc 1 688 7 view .LVU720
 2162 0004 0AD0     		beq	.L191
 689:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
 2163              		.loc 1 689 9 is_stmt 1 view .LVU721
 689:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
 2164              		.loc 1 689 17 is_stmt 0 view .LVU722
 2165 0006 C3F10403 		rsb	r3, r3, #4
 2166              	.LVL238:
 690:lvgl/src/lv_misc/lv_mem.c ****             SET8(0);
 2167              		.loc 1 690 9 is_stmt 1 view .LVU723
ARM GAS  D:\Temp\ccGtTw4W.s 			page 65


 690:lvgl/src/lv_misc/lv_mem.c ****             SET8(0);
 2168              		.loc 1 690 14 is_stmt 0 view .LVU724
 2169 000a 04E0     		b	.L189
 2170              	.LVL239:
 2171              	.L190:
 691:lvgl/src/lv_misc/lv_mem.c ****             len--;
 2172              		.loc 1 691 13 is_stmt 1 view .LVU725
 2173 000c 0022     		movs	r2, #0
 2174 000e 00F8012B 		strb	r2, [r0], #1
 2175              	.LVL240:
 691:lvgl/src/lv_misc/lv_mem.c ****             len--;
 2176              		.loc 1 691 13 view .LVU726
 691:lvgl/src/lv_misc/lv_mem.c ****             len--;
 2177              		.loc 1 691 20 view .LVU727
 692:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 2178              		.loc 1 692 13 view .LVU728
 692:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 2179              		.loc 1 692 16 is_stmt 0 view .LVU729
 2180 0012 0139     		subs	r1, r1, #1
 2181              	.LVL241:
 693:lvgl/src/lv_misc/lv_mem.c ****         }
 2182              		.loc 1 693 13 is_stmt 1 view .LVU730
 693:lvgl/src/lv_misc/lv_mem.c ****         }
 2183              		.loc 1 693 20 is_stmt 0 view .LVU731
 2184 0014 013B     		subs	r3, r3, #1
 2185              	.LVL242:
 2186              	.L189:
 690:lvgl/src/lv_misc/lv_mem.c ****             SET8(0);
 2187              		.loc 1 690 14 view .LVU732
 2188 0016 0BB1     		cbz	r3, .L191
 690:lvgl/src/lv_misc/lv_mem.c ****             SET8(0);
 2189              		.loc 1 690 23 discriminator 1 view .LVU733
 2190 0018 0029     		cmp	r1, #0
 2191 001a F7D1     		bne	.L190
 2192              	.LVL243:
 2193              	.L191:
 698:lvgl/src/lv_misc/lv_mem.c ****         REPEAT8(SET32(0));
 2194              		.loc 1 698 10 view .LVU734
 2195 001c 2029     		cmp	r1, #32
 2196 001e 0FD9     		bls	.L193
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2197              		.loc 1 699 9 is_stmt 1 view .LVU735
 2198 0020 0023     		movs	r3, #0
 2199 0022 0360     		str	r3, [r0]
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2200              		.loc 1 699 9 view .LVU736
 2201              	.LVL244:
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2202              		.loc 1 699 9 view .LVU737
 2203 0024 4360     		str	r3, [r0, #4]
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2204              		.loc 1 699 9 view .LVU738
 2205              	.LVL245:
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2206              		.loc 1 699 9 view .LVU739
 2207 0026 8360     		str	r3, [r0, #8]
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
ARM GAS  D:\Temp\ccGtTw4W.s 			page 66


 2208              		.loc 1 699 9 view .LVU740
 2209              	.LVL246:
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2210              		.loc 1 699 9 view .LVU741
 2211 0028 C360     		str	r3, [r0, #12]
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2212              		.loc 1 699 9 view .LVU742
 2213              	.LVL247:
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2214              		.loc 1 699 9 view .LVU743
 2215 002a 0361     		str	r3, [r0, #16]
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2216              		.loc 1 699 9 view .LVU744
 2217              	.LVL248:
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2218              		.loc 1 699 9 view .LVU745
 2219 002c 4361     		str	r3, [r0, #20]
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2220              		.loc 1 699 9 view .LVU746
 2221              	.LVL249:
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2222              		.loc 1 699 9 view .LVU747
 2223 002e 8361     		str	r3, [r0, #24]
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2224              		.loc 1 699 9 view .LVU748
 2225              	.LVL250:
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2226              		.loc 1 699 9 view .LVU749
 2227 0030 C361     		str	r3, [r0, #28]
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2228              		.loc 1 699 9 view .LVU750
 2229 0032 2030     		adds	r0, r0, #32
 2230              	.LVL251:
 699:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2231              		.loc 1 699 26 view .LVU751
 700:lvgl/src/lv_misc/lv_mem.c ****     }
 2232              		.loc 1 700 9 view .LVU752
 700:lvgl/src/lv_misc/lv_mem.c ****     }
 2233              		.loc 1 700 13 is_stmt 0 view .LVU753
 2234 0034 2039     		subs	r1, r1, #32
 2235              	.LVL252:
 700:lvgl/src/lv_misc/lv_mem.c ****     }
 2236              		.loc 1 700 13 view .LVU754
 2237 0036 F1E7     		b	.L191
 2238              	.L194:
 704:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 2239              		.loc 1 704 9 is_stmt 1 view .LVU755
 2240 0038 0023     		movs	r3, #0
 2241 003a 40F8043B 		str	r3, [r0], #4
 2242              	.LVL253:
 704:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 2243              		.loc 1 704 9 view .LVU756
 704:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 2244              		.loc 1 704 17 view .LVU757
 705:lvgl/src/lv_misc/lv_mem.c ****     }
 2245              		.loc 1 705 9 view .LVU758
 705:lvgl/src/lv_misc/lv_mem.c ****     }
ARM GAS  D:\Temp\ccGtTw4W.s 			page 67


 2246              		.loc 1 705 13 is_stmt 0 view .LVU759
 2247 003e 0439     		subs	r1, r1, #4
 2248              	.LVL254:
 2249              	.L193:
 703:lvgl/src/lv_misc/lv_mem.c ****         SET32(0);
 2250              		.loc 1 703 10 view .LVU760
 2251 0040 0429     		cmp	r1, #4
 2252 0042 F9D8     		bhi	.L194
 703:lvgl/src/lv_misc/lv_mem.c ****         SET32(0);
 2253              		.loc 1 703 10 view .LVU761
 2254 0044 03E0     		b	.L195
 2255              	.LVL255:
 2256              	.L196:
 710:lvgl/src/lv_misc/lv_mem.c ****         len--;
 2257              		.loc 1 710 9 is_stmt 1 view .LVU762
 2258 0046 0023     		movs	r3, #0
 2259 0048 00F8013B 		strb	r3, [r0], #1
 2260              	.LVL256:
 710:lvgl/src/lv_misc/lv_mem.c ****         len--;
 2261              		.loc 1 710 9 view .LVU763
 710:lvgl/src/lv_misc/lv_mem.c ****         len--;
 2262              		.loc 1 710 16 view .LVU764
 711:lvgl/src/lv_misc/lv_mem.c ****     }
 2263              		.loc 1 711 9 view .LVU765
 711:lvgl/src/lv_misc/lv_mem.c ****     }
 2264              		.loc 1 711 12 is_stmt 0 view .LVU766
 2265 004c 0139     		subs	r1, r1, #1
 2266              	.LVL257:
 2267              	.L195:
 709:lvgl/src/lv_misc/lv_mem.c ****         SET8(0);
 2268              		.loc 1 709 10 view .LVU767
 2269 004e 0029     		cmp	r1, #0
 2270 0050 F9D1     		bne	.L196
 713:lvgl/src/lv_misc/lv_mem.c **** 
 2271              		.loc 1 713 1 view .LVU768
 2272 0052 7047     		bx	lr
 2273              		.cfi_endproc
 2274              	.LFE181:
 2276              		.section	.text._lv_memset_ff,"ax",%progbits
 2277              		.align	1
 2278              		.global	_lv_memset_ff
 2279              		.syntax unified
 2280              		.thumb
 2281              		.thumb_func
 2282              		.fpu fpv4-sp-d16
 2284              	_lv_memset_ff:
 2285              	.LVL258:
 2286              	.LFB182:
 721:lvgl/src/lv_misc/lv_mem.c ****     uint8_t * d8 = (uint8_t *) dst;
 2287              		.loc 1 721 1 is_stmt 1 view -0
 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 0
 2290              		@ frame_needed = 0, uses_anonymous_args = 0
 2291              		@ link register save eliminated.
 722:lvgl/src/lv_misc/lv_mem.c ****     uintptr_t d_align = (lv_uintptr_t) d8 & ALIGN_MASK;
 2292              		.loc 1 722 5 view .LVU770
 723:lvgl/src/lv_misc/lv_mem.c **** 
ARM GAS  D:\Temp\ccGtTw4W.s 			page 68


 2293              		.loc 1 723 5 view .LVU771
 726:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 2294              		.loc 1 726 5 view .LVU772
 726:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 2295              		.loc 1 726 7 is_stmt 0 view .LVU773
 2296 0000 10F00303 		ands	r3, r0, #3
 2297              	.LVL259:
 726:lvgl/src/lv_misc/lv_mem.c ****         d_align = ALIGN_MASK + 1 - d_align;
 2298              		.loc 1 726 7 view .LVU774
 2299 0004 0AD0     		beq	.L201
 727:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
 2300              		.loc 1 727 9 is_stmt 1 view .LVU775
 727:lvgl/src/lv_misc/lv_mem.c ****         while(d_align && len) {
 2301              		.loc 1 727 17 is_stmt 0 view .LVU776
 2302 0006 C3F10403 		rsb	r3, r3, #4
 2303              	.LVL260:
 728:lvgl/src/lv_misc/lv_mem.c ****             SET8(0xFF);
 2304              		.loc 1 728 9 is_stmt 1 view .LVU777
 728:lvgl/src/lv_misc/lv_mem.c ****             SET8(0xFF);
 2305              		.loc 1 728 14 is_stmt 0 view .LVU778
 2306 000a 04E0     		b	.L199
 2307              	.LVL261:
 2308              	.L200:
 729:lvgl/src/lv_misc/lv_mem.c ****             len--;
 2309              		.loc 1 729 13 is_stmt 1 view .LVU779
 2310 000c FF22     		movs	r2, #255
 2311 000e 00F8012B 		strb	r2, [r0], #1
 2312              	.LVL262:
 729:lvgl/src/lv_misc/lv_mem.c ****             len--;
 2313              		.loc 1 729 13 view .LVU780
 729:lvgl/src/lv_misc/lv_mem.c ****             len--;
 2314              		.loc 1 729 23 view .LVU781
 730:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 2315              		.loc 1 730 13 view .LVU782
 730:lvgl/src/lv_misc/lv_mem.c ****             d_align--;
 2316              		.loc 1 730 16 is_stmt 0 view .LVU783
 2317 0012 0139     		subs	r1, r1, #1
 2318              	.LVL263:
 731:lvgl/src/lv_misc/lv_mem.c ****         }
 2319              		.loc 1 731 13 is_stmt 1 view .LVU784
 731:lvgl/src/lv_misc/lv_mem.c ****         }
 2320              		.loc 1 731 20 is_stmt 0 view .LVU785
 2321 0014 013B     		subs	r3, r3, #1
 2322              	.LVL264:
 2323              	.L199:
 728:lvgl/src/lv_misc/lv_mem.c ****             SET8(0xFF);
 2324              		.loc 1 728 14 view .LVU786
 2325 0016 0BB1     		cbz	r3, .L201
 728:lvgl/src/lv_misc/lv_mem.c ****             SET8(0xFF);
 2326              		.loc 1 728 23 discriminator 1 view .LVU787
 2327 0018 0029     		cmp	r1, #0
 2328 001a F7D1     		bne	.L200
 2329              	.LVL265:
 2330              	.L201:
 736:lvgl/src/lv_misc/lv_mem.c ****         REPEAT8(SET32(0xFFFFFFFF));
 2331              		.loc 1 736 10 view .LVU788
 2332 001c 2029     		cmp	r1, #32
ARM GAS  D:\Temp\ccGtTw4W.s 			page 69


 2333 001e 11D9     		bls	.L203
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2334              		.loc 1 737 9 is_stmt 1 view .LVU789
 2335 0020 4FF0FF33 		mov	r3, #-1
 2336 0024 0360     		str	r3, [r0]
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2337              		.loc 1 737 9 view .LVU790
 2338              	.LVL266:
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2339              		.loc 1 737 9 view .LVU791
 2340 0026 4360     		str	r3, [r0, #4]
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2341              		.loc 1 737 9 view .LVU792
 2342              	.LVL267:
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2343              		.loc 1 737 9 view .LVU793
 2344 0028 8360     		str	r3, [r0, #8]
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2345              		.loc 1 737 9 view .LVU794
 2346              	.LVL268:
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2347              		.loc 1 737 9 view .LVU795
 2348 002a C360     		str	r3, [r0, #12]
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2349              		.loc 1 737 9 view .LVU796
 2350              	.LVL269:
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2351              		.loc 1 737 9 view .LVU797
 2352 002c 0361     		str	r3, [r0, #16]
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2353              		.loc 1 737 9 view .LVU798
 2354              	.LVL270:
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2355              		.loc 1 737 9 view .LVU799
 2356 002e 4361     		str	r3, [r0, #20]
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2357              		.loc 1 737 9 view .LVU800
 2358              	.LVL271:
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2359              		.loc 1 737 9 view .LVU801
 2360 0030 8361     		str	r3, [r0, #24]
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2361              		.loc 1 737 9 view .LVU802
 2362              	.LVL272:
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2363              		.loc 1 737 9 view .LVU803
 2364 0032 C361     		str	r3, [r0, #28]
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2365              		.loc 1 737 9 view .LVU804
 2366 0034 2030     		adds	r0, r0, #32
 2367              	.LVL273:
 737:lvgl/src/lv_misc/lv_mem.c ****         len -= 32;
 2368              		.loc 1 737 35 view .LVU805
 738:lvgl/src/lv_misc/lv_mem.c ****     }
 2369              		.loc 1 738 9 view .LVU806
 738:lvgl/src/lv_misc/lv_mem.c ****     }
 2370              		.loc 1 738 13 is_stmt 0 view .LVU807
ARM GAS  D:\Temp\ccGtTw4W.s 			page 70


 2371 0036 2039     		subs	r1, r1, #32
 2372              	.LVL274:
 738:lvgl/src/lv_misc/lv_mem.c ****     }
 2373              		.loc 1 738 13 view .LVU808
 2374 0038 F0E7     		b	.L201
 2375              	.L204:
 742:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 2376              		.loc 1 742 9 is_stmt 1 view .LVU809
 2377 003a 4FF0FF33 		mov	r3, #-1
 2378 003e 40F8043B 		str	r3, [r0], #4
 2379              	.LVL275:
 742:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 2380              		.loc 1 742 9 view .LVU810
 742:lvgl/src/lv_misc/lv_mem.c ****         len -= 4;
 2381              		.loc 1 742 26 view .LVU811
 743:lvgl/src/lv_misc/lv_mem.c ****     }
 2382              		.loc 1 743 9 view .LVU812
 743:lvgl/src/lv_misc/lv_mem.c ****     }
 2383              		.loc 1 743 13 is_stmt 0 view .LVU813
 2384 0042 0439     		subs	r1, r1, #4
 2385              	.LVL276:
 2386              	.L203:
 741:lvgl/src/lv_misc/lv_mem.c ****         SET32(0xFFFFFFFF);
 2387              		.loc 1 741 10 view .LVU814
 2388 0044 0429     		cmp	r1, #4
 2389 0046 F8D8     		bhi	.L204
 741:lvgl/src/lv_misc/lv_mem.c ****         SET32(0xFFFFFFFF);
 2390              		.loc 1 741 10 view .LVU815
 2391 0048 03E0     		b	.L205
 2392              	.LVL277:
 2393              	.L206:
 748:lvgl/src/lv_misc/lv_mem.c ****         len--;
 2394              		.loc 1 748 9 is_stmt 1 view .LVU816
 2395 004a FF23     		movs	r3, #255
 2396 004c 00F8013B 		strb	r3, [r0], #1
 2397              	.LVL278:
 748:lvgl/src/lv_misc/lv_mem.c ****         len--;
 2398              		.loc 1 748 9 view .LVU817
 748:lvgl/src/lv_misc/lv_mem.c ****         len--;
 2399              		.loc 1 748 19 view .LVU818
 749:lvgl/src/lv_misc/lv_mem.c ****     }
 2400              		.loc 1 749 9 view .LVU819
 749:lvgl/src/lv_misc/lv_mem.c ****     }
 2401              		.loc 1 749 12 is_stmt 0 view .LVU820
 2402 0050 0139     		subs	r1, r1, #1
 2403              	.LVL279:
 2404              	.L205:
 747:lvgl/src/lv_misc/lv_mem.c ****         SET8(0xFF);
 2405              		.loc 1 747 10 view .LVU821
 2406 0052 0029     		cmp	r1, #0
 2407 0054 F9D1     		bne	.L206
 751:lvgl/src/lv_misc/lv_mem.c **** 
 2408              		.loc 1 751 1 view .LVU822
 2409 0056 7047     		bx	lr
 2410              		.cfi_endproc
 2411              	.LFE182:
 2413              		.section	.bss.full_defrag_cnt.10365,"aw",%nobits
ARM GAS  D:\Temp\ccGtTw4W.s 			page 71


 2414              		.align	1
 2415              		.set	.LANCHOR3,. + 0
 2418              	full_defrag_cnt.10365:
 2419 0000 0000     		.space	2
 2420              		.section	.bss.mem_buf1_32,"aw",%nobits
 2421              		.align	2
 2424              	mem_buf1_32:
 2425 0000 00000000 		.space	16
 2425      00000000 
 2425      00000000 
 2425      00000000 
 2426              		.section	.bss.mem_buf2_32,"aw",%nobits
 2427              		.align	2
 2430              	mem_buf2_32:
 2431 0000 00000000 		.space	16
 2431      00000000 
 2431      00000000 
 2431      00000000 
 2432              		.section	.bss.mem_max_size,"aw",%nobits
 2433              		.align	2
 2434              		.set	.LANCHOR2,. + 0
 2437              	mem_max_size:
 2438 0000 00000000 		.space	4
 2439              		.section	.bss.work_mem,"aw",%nobits
 2440              		.align	2
 2441              		.set	.LANCHOR0,. + 0
 2444              	work_mem:
 2445 0000 00000000 		.space	4
 2446              		.section	.bss.zero_mem,"aw",%nobits
 2447              		.align	2
 2448              		.set	.LANCHOR1,. + 0
 2451              	zero_mem:
 2452 0000 00000000 		.space	4
 2453              		.section	.ccmram-data,"aw"
 2454              		.align	2
 2457              	work_mem_int.10348:
 2458 0000 00000000 		.space	32768
 2458      00000000 
 2458      00000000 
 2458      00000000 
 2458      00000000 
 2459              		.section	.data.mem_buf_small,"aw"
 2460              		.align	2
 2461              		.set	.LANCHOR4,. + 0
 2464              	mem_buf_small:
 2465 0000 00000000 		.word	mem_buf1_32
 2466 0004 1000     		.short	16
 2467 0006 00       		.byte	0
 2468 0007 00       		.space	1
 2469 0008 00000000 		.word	mem_buf2_32
 2470 000c 1000     		.short	16
 2471 000e 00       		.byte	0
 2472 000f 00       		.space	1
 2473              		.section	.rodata._lv_mem_buf_get.str1.4,"aMS",%progbits,1
 2474              		.align	2
 2475              	.LC0:
 2476 0000 4F757420 		.ascii	"Out of memory, can't allocate a new buffer (increas"
ARM GAS  D:\Temp\ccGtTw4W.s 			page 72


 2476      6F66206D 
 2476      656D6F72 
 2476      792C2063 
 2476      616E2774 
 2477 0033 6520796F 		.ascii	"e your LV_MEM_SIZE/heap size)\000"
 2477      7572204C 
 2477      565F4D45 
 2477      4D5F5349 
 2477      5A452F68 
 2478 0051 000000   		.space	3
 2479              	.LC1:
 2480 0054 4E6F2066 		.ascii	"No free buffer. Increase LV_MEM_BUF_MAX_NUM.\000"
 2480      72656520 
 2480      62756666 
 2480      65722E20 
 2480      496E6372 
 2481              		.text
 2482              	.Letext0:
 2483              		.file 2 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 2484              		.file 3 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 2485              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2486              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2487              		.file 6 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-none
 2488              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2489              		.file 8 "lvgl/lv_conf.h"
 2490              		.file 9 "lvgl/src/lv_misc/lv_types.h"
 2491              		.file 10 "lvgl/src/lv_misc/lv_mem.h"
 2492              		.file 11 "lvgl/src/lv_misc/lv_ll.h"
 2493              		.file 12 "lvgl/src/lv_misc/lv_task.h"
 2494              		.file 13 "lvgl/src/lv_misc/../lv_draw/../lv_misc/lv_color.h"
 2495              		.file 14 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2496              		.file 15 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2497              		.file 16 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2498              		.file 17 "lvgl/src/lv_misc/../lv_draw/lv_img_buf.h"
 2499              		.file 18 "lvgl/src/lv_misc/../lv_draw/../lv_core/../lv_font/lv_font.h"
 2500              		.file 19 "lvgl/src/lv_misc/../lv_draw/../lv_core/../lv_misc/lv_anim.h"
 2501              		.file 20 "lvgl/src/lv_misc/../lv_draw/../lv_core/../lv_draw/lv_draw_mask.h"
 2502              		.file 21 "lvgl/src/lv_misc/../lv_draw/lv_img_decoder.h"
 2503              		.file 22 "lvgl/src/lv_misc/../lv_draw/lv_img_cache.h"
 2504              		.file 23 "lvgl/src/lv_misc/lv_gc.h"
 2505              		.file 24 "lvgl/src/lv_misc/../lv_draw/../lv_core/../lv_misc/lv_debug.h"
ARM GAS  D:\Temp\ccGtTw4W.s 			page 73


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_mem.c
  D:\Temp\ccGtTw4W.s:18     .text.ent_get_next:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:25     .text.ent_get_next:0000000000000000 ent_get_next
  D:\Temp\ccGtTw4W.s:87     .text.ent_get_next:0000000000000024 $d
  D:\Temp\ccGtTw4W.s:92     .text.ent_trunc:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:98     .text.ent_trunc:0000000000000000 ent_trunc
  D:\Temp\ccGtTw4W.s:182    .text.ent_alloc:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:188    .text.ent_alloc:0000000000000000 ent_alloc
  D:\Temp\ccGtTw4W.s:251    .text._lv_mem_init:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:258    .text._lv_mem_init:0000000000000000 _lv_mem_init
  D:\Temp\ccGtTw4W.s:289    .text._lv_mem_init:000000000000001c $d
  D:\Temp\ccGtTw4W.s:2457   .ccmram-data:0000000000000000 work_mem_int.10348
  D:\Temp\ccGtTw4W.s:295    .text._lv_mem_deinit:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:302    .text._lv_mem_deinit:0000000000000000 _lv_mem_deinit
  D:\Temp\ccGtTw4W.s:330    .text._lv_mem_deinit:000000000000001c $d
  D:\Temp\ccGtTw4W.s:335    .text.lv_mem_alloc:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:342    .text.lv_mem_alloc:0000000000000000 lv_mem_alloc
  D:\Temp\ccGtTw4W.s:444    .text.lv_mem_alloc:0000000000000050 $d
  D:\Temp\ccGtTw4W.s:451    .text.lv_mem_defrag:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:458    .text.lv_mem_defrag:0000000000000000 lv_mem_defrag
  D:\Temp\ccGtTw4W.s:551    .text.lv_mem_free:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:558    .text.lv_mem_free:0000000000000000 lv_mem_free
  D:\Temp\ccGtTw4W.s:659    .text.lv_mem_free:0000000000000064 $d
  D:\Temp\ccGtTw4W.s:665    .text.lv_mem_test:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:672    .text.lv_mem_test:0000000000000000 lv_mem_test
  D:\Temp\ccGtTw4W.s:746    .text.lv_mem_test:0000000000000038 $d
  D:\Temp\ccGtTw4W.s:752    .text._lv_mem_get_size:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:759    .text._lv_mem_get_size:0000000000000000 _lv_mem_get_size
  D:\Temp\ccGtTw4W.s:801    .text._lv_mem_get_size:000000000000001c $d
  D:\Temp\ccGtTw4W.s:806    .text._lv_mem_buf_release:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:813    .text._lv_mem_buf_release:0000000000000000 _lv_mem_buf_release
  D:\Temp\ccGtTw4W.s:902    .text._lv_mem_buf_release:0000000000000054 $d
  D:\Temp\ccGtTw4W.s:908    .text._lv_mem_buf_free_all:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:915    .text._lv_mem_buf_free_all:0000000000000000 _lv_mem_buf_free_all
  D:\Temp\ccGtTw4W.s:1001   .text._lv_mem_buf_free_all:0000000000000050 $d
  D:\Temp\ccGtTw4W.s:1007   .text._lv_memcpy:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:1014   .text._lv_memcpy:0000000000000000 _lv_memcpy
  D:\Temp\ccGtTw4W.s:1432   .text.lv_mem_realloc:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:1439   .text.lv_mem_realloc:0000000000000000 lv_mem_realloc
  D:\Temp\ccGtTw4W.s:1564   .text._lv_mem_buf_get:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:1571   .text._lv_mem_buf_get:0000000000000000 _lv_mem_buf_get
  D:\Temp\ccGtTw4W.s:1847   .text._lv_mem_buf_get:0000000000000118 $d
  D:\Temp\ccGtTw4W.s:1855   .text._lv_memset:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:1862   .text._lv_memset:0000000000000000 _lv_memset
  D:\Temp\ccGtTw4W.s:1999   .text.lv_mem_monitor:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:2006   .text.lv_mem_monitor:0000000000000000 lv_mem_monitor
  D:\Temp\ccGtTw4W.s:2135   .text.lv_mem_monitor:0000000000000084 $d
  D:\Temp\ccGtTw4W.s:2140   .text._lv_memset_00:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:2147   .text._lv_memset_00:0000000000000000 _lv_memset_00
  D:\Temp\ccGtTw4W.s:2277   .text._lv_memset_ff:0000000000000000 $t
  D:\Temp\ccGtTw4W.s:2284   .text._lv_memset_ff:0000000000000000 _lv_memset_ff
  D:\Temp\ccGtTw4W.s:2414   .bss.full_defrag_cnt.10365:0000000000000000 $d
  D:\Temp\ccGtTw4W.s:2418   .bss.full_defrag_cnt.10365:0000000000000000 full_defrag_cnt.10365
  D:\Temp\ccGtTw4W.s:2421   .bss.mem_buf1_32:0000000000000000 $d
  D:\Temp\ccGtTw4W.s:2424   .bss.mem_buf1_32:0000000000000000 mem_buf1_32
  D:\Temp\ccGtTw4W.s:2427   .bss.mem_buf2_32:0000000000000000 $d
ARM GAS  D:\Temp\ccGtTw4W.s 			page 74


  D:\Temp\ccGtTw4W.s:2430   .bss.mem_buf2_32:0000000000000000 mem_buf2_32
  D:\Temp\ccGtTw4W.s:2433   .bss.mem_max_size:0000000000000000 $d
  D:\Temp\ccGtTw4W.s:2437   .bss.mem_max_size:0000000000000000 mem_max_size
  D:\Temp\ccGtTw4W.s:2440   .bss.work_mem:0000000000000000 $d
  D:\Temp\ccGtTw4W.s:2444   .bss.work_mem:0000000000000000 work_mem
  D:\Temp\ccGtTw4W.s:2447   .bss.zero_mem:0000000000000000 $d
  D:\Temp\ccGtTw4W.s:2451   .bss.zero_mem:0000000000000000 zero_mem
  D:\Temp\ccGtTw4W.s:2454   .ccmram-data:0000000000000000 $d
  D:\Temp\ccGtTw4W.s:2460   .data.mem_buf_small:0000000000000000 $d
  D:\Temp\ccGtTw4W.s:2464   .data.mem_buf_small:0000000000000000 mem_buf_small
  D:\Temp\ccGtTw4W.s:2474   .rodata._lv_mem_buf_get.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
_lv_mem_buf
lv_debug_log_error
