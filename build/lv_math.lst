ARM GAS  D:\Temp\cc5vwzCD.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_math.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._lv_trigo_sin,"ax",%progbits
  18              		.align	1
  19              		.global	_lv_trigo_sin
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_lv_trigo_sin:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "lvgl/src/lv_misc/lv_math.c"
   1:lvgl/src/lv_misc/lv_math.c **** /**
   2:lvgl/src/lv_misc/lv_math.c ****  * @file lv_math.c
   3:lvgl/src/lv_misc/lv_math.c ****  *
   4:lvgl/src/lv_misc/lv_math.c ****  */
   5:lvgl/src/lv_misc/lv_math.c **** 
   6:lvgl/src/lv_misc/lv_math.c **** /*********************
   7:lvgl/src/lv_misc/lv_math.c ****  *      INCLUDES
   8:lvgl/src/lv_misc/lv_math.c ****  *********************/
   9:lvgl/src/lv_misc/lv_math.c **** #include "lv_math.h"
  10:lvgl/src/lv_misc/lv_math.c **** #include <stdbool.h>
  11:lvgl/src/lv_misc/lv_math.c **** #include <stdlib.h>
  12:lvgl/src/lv_misc/lv_math.c **** #include <string.h>
  13:lvgl/src/lv_misc/lv_math.c **** 
  14:lvgl/src/lv_misc/lv_math.c **** /*********************
  15:lvgl/src/lv_misc/lv_math.c ****  *      DEFINES
  16:lvgl/src/lv_misc/lv_math.c ****  *********************/
  17:lvgl/src/lv_misc/lv_math.c **** 
  18:lvgl/src/lv_misc/lv_math.c **** /**********************
  19:lvgl/src/lv_misc/lv_math.c ****  *      TYPEDEFS
  20:lvgl/src/lv_misc/lv_math.c ****  **********************/
  21:lvgl/src/lv_misc/lv_math.c **** 
  22:lvgl/src/lv_misc/lv_math.c **** /**********************
  23:lvgl/src/lv_misc/lv_math.c ****  *  STATIC PROTOTYPES
  24:lvgl/src/lv_misc/lv_math.c ****  **********************/
  25:lvgl/src/lv_misc/lv_math.c **** 
  26:lvgl/src/lv_misc/lv_math.c **** /**********************
  27:lvgl/src/lv_misc/lv_math.c ****  *  STATIC VARIABLES
  28:lvgl/src/lv_misc/lv_math.c ****  **********************/
  29:lvgl/src/lv_misc/lv_math.c **** static const int16_t sin0_90_table[] = {
ARM GAS  D:\Temp\cc5vwzCD.s 			page 2


  30:lvgl/src/lv_misc/lv_math.c ****     0,     572,   1144,  1715,  2286,  2856,  3425,  3993,  4560,  5126,  5690,  6252,  6813,  7371
  31:lvgl/src/lv_misc/lv_math.c ****     9032,  9580,  10126, 10668, 11207, 11743, 12275, 12803, 13328, 13848, 14364, 14876, 15383, 1588
  32:lvgl/src/lv_misc/lv_math.c ****     17364, 17846, 18323, 18794, 19260, 19720, 20173, 20621, 21062, 21497, 21925, 22347, 22762, 2317
  33:lvgl/src/lv_misc/lv_math.c ****     24351, 24730, 25101, 25465, 25821, 26169, 26509, 26841, 27165, 27481, 27788, 28087, 28377, 2865
  34:lvgl/src/lv_misc/lv_math.c ****     29451, 29697, 29934, 30162, 30381, 30591, 30791, 30982, 31163, 31335, 31498, 31650, 31794, 3192
  35:lvgl/src/lv_misc/lv_math.c ****     32269, 32364, 32448, 32523, 32587, 32642, 32687, 32722, 32747, 32762, 32767
  36:lvgl/src/lv_misc/lv_math.c **** };
  37:lvgl/src/lv_misc/lv_math.c **** 
  38:lvgl/src/lv_misc/lv_math.c **** /**********************
  39:lvgl/src/lv_misc/lv_math.c ****  *      MACROS
  40:lvgl/src/lv_misc/lv_math.c ****  **********************/
  41:lvgl/src/lv_misc/lv_math.c **** 
  42:lvgl/src/lv_misc/lv_math.c **** /**********************
  43:lvgl/src/lv_misc/lv_math.c ****  *   GLOBAL FUNCTIONS
  44:lvgl/src/lv_misc/lv_math.c ****  **********************/
  45:lvgl/src/lv_misc/lv_math.c **** 
  46:lvgl/src/lv_misc/lv_math.c **** /**
  47:lvgl/src/lv_misc/lv_math.c ****  * Return with sinus of an angle
  48:lvgl/src/lv_misc/lv_math.c ****  * @param angle
  49:lvgl/src/lv_misc/lv_math.c ****  * @return sinus of 'angle'. sin(-90) = -32767, sin(90) = 32767
  50:lvgl/src/lv_misc/lv_math.c ****  */
  51:lvgl/src/lv_misc/lv_math.c **** LV_ATTRIBUTE_FAST_MEM int16_t _lv_trigo_sin(int16_t angle)
  52:lvgl/src/lv_misc/lv_math.c **** {
  30              		.loc 1 52 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  53:lvgl/src/lv_misc/lv_math.c ****     int16_t ret = 0;
  35              		.loc 1 53 5 view .LVU1
  54:lvgl/src/lv_misc/lv_math.c ****     angle       = angle % 360;
  36              		.loc 1 54 5 view .LVU2
  37              		.loc 1 54 17 is_stmt 0 view .LVU3
  38 0000 1C4A     		ldr	r2, .L8
  39 0002 82FB0032 		smull	r3, r2, r2, r0
  40 0006 0244     		add	r2, r2, r0
  41 0008 C317     		asrs	r3, r0, #31
  42 000a C3EB2223 		rsb	r3, r3, r2, asr #8
  43 000e 4FF4B472 		mov	r2, #360
  44 0012 02FB1300 		mls	r0, r2, r3, r0
  45              	.LVL1:
  46              		.loc 1 54 17 view .LVU4
  47 0016 00B2     		sxth	r0, r0
  48              	.LVL2:
  55:lvgl/src/lv_misc/lv_math.c **** 
  56:lvgl/src/lv_misc/lv_math.c ****     if(angle < 0) angle = 360 + angle;
  49              		.loc 1 56 5 is_stmt 1 view .LVU5
  50              		.loc 1 56 7 is_stmt 0 view .LVU6
  51 0018 0028     		cmp	r0, #0
  52 001a 05DB     		blt	.L7
  53              	.L2:
  57:lvgl/src/lv_misc/lv_math.c **** 
  58:lvgl/src/lv_misc/lv_math.c ****     if(angle < 90) {
  54              		.loc 1 58 5 is_stmt 1 view .LVU7
  55              		.loc 1 58 7 is_stmt 0 view .LVU8
  56 001c 5928     		cmp	r0, #89
  57 001e 06DC     		bgt	.L3
ARM GAS  D:\Temp\cc5vwzCD.s 			page 3


  59:lvgl/src/lv_misc/lv_math.c ****         ret = sin0_90_table[angle];
  58              		.loc 1 59 9 is_stmt 1 view .LVU9
  59              		.loc 1 59 13 is_stmt 0 view .LVU10
  60 0020 154B     		ldr	r3, .L8+4
  61 0022 33F91000 		ldrsh	r0, [r3, r0, lsl #1]
  62              	.LVL3:
  63              		.loc 1 59 13 view .LVU11
  64 0026 7047     		bx	lr
  65              	.LVL4:
  66              	.L7:
  56:lvgl/src/lv_misc/lv_math.c **** 
  67              		.loc 1 56 19 is_stmt 1 discriminator 1 view .LVU12
  56:lvgl/src/lv_misc/lv_math.c **** 
  68              		.loc 1 56 31 is_stmt 0 discriminator 1 view .LVU13
  69 0028 1044     		add	r0, r0, r2
  70              	.LVL5:
  56:lvgl/src/lv_misc/lv_math.c **** 
  71              		.loc 1 56 25 discriminator 1 view .LVU14
  72 002a 00B2     		sxth	r0, r0
  73              	.LVL6:
  56:lvgl/src/lv_misc/lv_math.c **** 
  74              		.loc 1 56 25 discriminator 1 view .LVU15
  75 002c F6E7     		b	.L2
  76              	.L3:
  60:lvgl/src/lv_misc/lv_math.c ****     }
  61:lvgl/src/lv_misc/lv_math.c ****     else if(angle >= 90 && angle < 180) {
  77              		.loc 1 61 10 is_stmt 1 view .LVU16
  78              		.loc 1 61 25 is_stmt 0 view .LVU17
  79 002e 80B2     		uxth	r0, r0
  80              		.loc 1 61 25 view .LVU18
  81 0030 A0F15A03 		sub	r3, r0, #90
  82 0034 9BB2     		uxth	r3, r3
  83              		.loc 1 61 12 view .LVU19
  84 0036 592B     		cmp	r3, #89
  85 0038 06D8     		bhi	.L5
  62:lvgl/src/lv_misc/lv_math.c ****         angle = 180 - angle;
  86              		.loc 1 62 9 is_stmt 1 view .LVU20
  87              		.loc 1 62 21 is_stmt 0 view .LVU21
  88 003a C0F1B400 		rsb	r0, r0, #180
  89              	.LVL7:
  90              		.loc 1 62 15 view .LVU22
  91 003e 00B2     		sxth	r0, r0
  92              	.LVL8:
  63:lvgl/src/lv_misc/lv_math.c ****         ret   = sin0_90_table[angle];
  93              		.loc 1 63 9 is_stmt 1 view .LVU23
  94              		.loc 1 63 15 is_stmt 0 view .LVU24
  95 0040 0D4B     		ldr	r3, .L8+4
  96 0042 33F91000 		ldrsh	r0, [r3, r0, lsl #1]
  97              	.LVL9:
  98              		.loc 1 63 15 view .LVU25
  99 0046 7047     		bx	lr
 100              	.LVL10:
 101              	.L5:
  64:lvgl/src/lv_misc/lv_math.c ****     }
  65:lvgl/src/lv_misc/lv_math.c ****     else if(angle >= 180 && angle < 270) {
 102              		.loc 1 65 10 is_stmt 1 view .LVU26
 103              		.loc 1 65 26 is_stmt 0 view .LVU27
ARM GAS  D:\Temp\cc5vwzCD.s 			page 4


 104 0048 A0F1B403 		sub	r3, r0, #180
 105 004c 9BB2     		uxth	r3, r3
 106              		.loc 1 65 12 view .LVU28
 107 004e 592B     		cmp	r3, #89
 108 0050 06D8     		bhi	.L6
  66:lvgl/src/lv_misc/lv_math.c ****         angle = angle - 180;
 109              		.loc 1 66 9 is_stmt 1 view .LVU29
 110              		.loc 1 66 15 is_stmt 0 view .LVU30
 111 0052 1BB2     		sxth	r3, r3
 112              	.LVL11:
  67:lvgl/src/lv_misc/lv_math.c ****         ret   = -sin0_90_table[angle];
 113              		.loc 1 67 9 is_stmt 1 view .LVU31
 114              		.loc 1 67 31 is_stmt 0 view .LVU32
 115 0054 084A     		ldr	r2, .L8+4
 116 0056 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 117              		.loc 1 67 15 view .LVU33
 118 005a 4042     		rsbs	r0, r0, #0
 119 005c 00B2     		sxth	r0, r0
 120              	.LVL12:
 121              		.loc 1 67 15 view .LVU34
 122 005e 7047     		bx	lr
 123              	.LVL13:
 124              	.L6:
  68:lvgl/src/lv_misc/lv_math.c ****     }
  69:lvgl/src/lv_misc/lv_math.c ****     else {   /*angle >=270*/
  70:lvgl/src/lv_misc/lv_math.c ****         angle = 360 - angle;
 125              		.loc 1 70 9 is_stmt 1 view .LVU35
 126              		.loc 1 70 21 is_stmt 0 view .LVU36
 127 0060 C0F5B470 		rsb	r0, r0, #360
 128              	.LVL14:
 129              		.loc 1 70 15 view .LVU37
 130 0064 00B2     		sxth	r0, r0
 131              	.LVL15:
  71:lvgl/src/lv_misc/lv_math.c ****         ret   = -sin0_90_table[angle];
 132              		.loc 1 71 9 is_stmt 1 view .LVU38
 133              		.loc 1 71 31 is_stmt 0 view .LVU39
 134 0066 044B     		ldr	r3, .L8+4
 135 0068 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 136              	.LVL16:
 137              		.loc 1 71 15 view .LVU40
 138 006c 4042     		rsbs	r0, r0, #0
 139 006e 00B2     		sxth	r0, r0
 140              	.LVL17:
  72:lvgl/src/lv_misc/lv_math.c ****     }
  73:lvgl/src/lv_misc/lv_math.c **** 
  74:lvgl/src/lv_misc/lv_math.c ****     return ret;
 141              		.loc 1 74 5 is_stmt 1 view .LVU41
  75:lvgl/src/lv_misc/lv_math.c **** }
 142              		.loc 1 75 1 is_stmt 0 view .LVU42
 143 0070 7047     		bx	lr
 144              	.L9:
 145 0072 00BF     		.align	2
 146              	.L8:
 147 0074 B7600BB6 		.word	-1240768329
 148 0078 00000000 		.word	.LANCHOR0
 149              		.cfi_endproc
 150              	.LFE130:
ARM GAS  D:\Temp\cc5vwzCD.s 			page 5


 152              		.section	.text._lv_bezier3,"ax",%progbits
 153              		.align	1
 154              		.global	_lv_bezier3
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv4-sp-d16
 160              	_lv_bezier3:
 161              	.LVL18:
 162              	.LFB131:
  76:lvgl/src/lv_misc/lv_math.c **** 
  77:lvgl/src/lv_misc/lv_math.c **** /**
  78:lvgl/src/lv_misc/lv_math.c ****  * Calculate a value of a Cubic Bezier function.
  79:lvgl/src/lv_misc/lv_math.c ****  * @param t time in range of [0..LV_BEZIER_VAL_MAX]
  80:lvgl/src/lv_misc/lv_math.c ****  * @param u0 start values in range of [0..LV_BEZIER_VAL_MAX]
  81:lvgl/src/lv_misc/lv_math.c ****  * @param u1 control value 1 values in range of [0..LV_BEZIER_VAL_MAX]
  82:lvgl/src/lv_misc/lv_math.c ****  * @param u2 control value 2 in range of [0..LV_BEZIER_VAL_MAX]
  83:lvgl/src/lv_misc/lv_math.c ****  * @param u3 end values in range of [0..LV_BEZIER_VAL_MAX]
  84:lvgl/src/lv_misc/lv_math.c ****  * @return the value calculated from the given parameters in range of [0..LV_BEZIER_VAL_MAX]
  85:lvgl/src/lv_misc/lv_math.c ****  */
  86:lvgl/src/lv_misc/lv_math.c **** uint32_t _lv_bezier3(uint32_t t, uint32_t u0, uint32_t u1, uint32_t u2, uint32_t u3)
  87:lvgl/src/lv_misc/lv_math.c **** {
 163              		.loc 1 87 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 4, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168              		.loc 1 87 1 is_stmt 0 view .LVU44
 169 0000 F0B4     		push	{r4, r5, r6, r7}
 170              	.LCFI0:
 171              		.cfi_def_cfa_offset 16
 172              		.cfi_offset 4, -16
 173              		.cfi_offset 5, -12
 174              		.cfi_offset 6, -8
 175              		.cfi_offset 7, -4
  88:lvgl/src/lv_misc/lv_math.c ****     uint32_t t_rem  = 1024 - t;
 176              		.loc 1 88 5 is_stmt 1 view .LVU45
 177              		.loc 1 88 14 is_stmt 0 view .LVU46
 178 0002 C0F58067 		rsb	r7, r0, #1024
 179              	.LVL19:
  89:lvgl/src/lv_misc/lv_math.c ****     uint32_t t_rem2 = (t_rem * t_rem) >> 10;
 180              		.loc 1 89 5 is_stmt 1 view .LVU47
 181              		.loc 1 89 30 is_stmt 0 view .LVU48
 182 0006 07FB07F4 		mul	r4, r7, r7
 183              		.loc 1 89 14 view .LVU49
 184 000a A40A     		lsrs	r4, r4, #10
 185              	.LVL20:
  90:lvgl/src/lv_misc/lv_math.c ****     uint32_t t_rem3 = (t_rem2 * t_rem) >> 10;
 186              		.loc 1 90 5 is_stmt 1 view .LVU50
 187              		.loc 1 90 31 is_stmt 0 view .LVU51
 188 000c 04FB07FC 		mul	ip, r4, r7
 189              		.loc 1 90 14 view .LVU52
 190 0010 4FEA9C2C 		lsr	ip, ip, #10
 191              	.LVL21:
  91:lvgl/src/lv_misc/lv_math.c ****     uint32_t t2     = (t * t) >> 10;
 192              		.loc 1 91 5 is_stmt 1 view .LVU53
 193              		.loc 1 91 26 is_stmt 0 view .LVU54
ARM GAS  D:\Temp\cc5vwzCD.s 			page 6


 194 0014 00FB00F5 		mul	r5, r0, r0
 195              		.loc 1 91 14 view .LVU55
 196 0018 AD0A     		lsrs	r5, r5, #10
 197              	.LVL22:
  92:lvgl/src/lv_misc/lv_math.c ****     uint32_t t3     = (t2 * t) >> 10;
 198              		.loc 1 92 5 is_stmt 1 view .LVU56
 199              		.loc 1 92 27 is_stmt 0 view .LVU57
 200 001a 05FB00F6 		mul	r6, r5, r0
 201              		.loc 1 92 14 view .LVU58
 202 001e B60A     		lsrs	r6, r6, #10
 203              	.LVL23:
  93:lvgl/src/lv_misc/lv_math.c **** 
  94:lvgl/src/lv_misc/lv_math.c ****     uint32_t v1 = (t_rem3 * u0) >> 10;
 204              		.loc 1 94 5 is_stmt 1 view .LVU59
 205              		.loc 1 94 27 is_stmt 0 view .LVU60
 206 0020 01FB0CF1 		mul	r1, r1, ip
 207              	.LVL24:
  95:lvgl/src/lv_misc/lv_math.c ****     uint32_t v2 = (3 * t_rem2 * t * u1) >> 20;
 208              		.loc 1 95 5 is_stmt 1 view .LVU61
 209              		.loc 1 95 31 is_stmt 0 view .LVU62
 210 0024 04FB00F4 		mul	r4, r4, r0
 211              	.LVL25:
 212              		.loc 1 95 35 view .LVU63
 213 0028 02FB04F2 		mul	r2, r2, r4
 214              	.LVL26:
 215              		.loc 1 95 35 view .LVU64
 216 002c 02EB4202 		add	r2, r2, r2, lsl #1
 217              		.loc 1 95 14 view .LVU65
 218 0030 120D     		lsrs	r2, r2, #20
 219              	.LVL27:
  96:lvgl/src/lv_misc/lv_math.c ****     uint32_t v3 = (3 * t_rem * t2 * u2) >> 20;
 220              		.loc 1 96 5 is_stmt 1 view .LVU66
 221              		.loc 1 96 30 is_stmt 0 view .LVU67
 222 0032 05FB07F5 		mul	r5, r5, r7
 223              	.LVL28:
 224              		.loc 1 96 35 view .LVU68
 225 0036 03FB05F3 		mul	r3, r3, r5
 226              	.LVL29:
 227              		.loc 1 96 35 view .LVU69
 228 003a 03EB4303 		add	r3, r3, r3, lsl #1
 229              	.LVL30:
  97:lvgl/src/lv_misc/lv_math.c ****     uint32_t v4 = (t3 * u3) >> 10;
 230              		.loc 1 97 5 is_stmt 1 view .LVU70
 231              		.loc 1 97 23 is_stmt 0 view .LVU71
 232 003e 0498     		ldr	r0, [sp, #16]
 233              	.LVL31:
 234              		.loc 1 97 23 view .LVU72
 235 0040 00FB06F0 		mul	r0, r0, r6
 236              	.LVL32:
  98:lvgl/src/lv_misc/lv_math.c **** 
  99:lvgl/src/lv_misc/lv_math.c ****     return v1 + v2 + v3 + v4;
 237              		.loc 1 99 5 is_stmt 1 view .LVU73
 238              		.loc 1 99 15 is_stmt 0 view .LVU74
 239 0044 02EB9122 		add	r2, r2, r1, lsr #10
 240              	.LVL33:
 241              		.loc 1 99 20 view .LVU75
 242 0048 02EB1352 		add	r2, r2, r3, lsr #20
ARM GAS  D:\Temp\cc5vwzCD.s 			page 7


 100:lvgl/src/lv_misc/lv_math.c **** }
 243              		.loc 1 100 1 view .LVU76
 244 004c 02EB9020 		add	r0, r2, r0, lsr #10
 245              	.LVL34:
 246              		.loc 1 100 1 view .LVU77
 247 0050 F0BC     		pop	{r4, r5, r6, r7}
 248              	.LCFI1:
 249              		.cfi_restore 7
 250              		.cfi_restore 6
 251              		.cfi_restore 5
 252              		.cfi_restore 4
 253              		.cfi_def_cfa_offset 0
 254              	.LVL35:
 255              		.loc 1 100 1 view .LVU78
 256 0052 7047     		bx	lr
 257              		.cfi_endproc
 258              	.LFE131:
 260              		.section	.text._lv_sqrt,"ax",%progbits
 261              		.align	1
 262              		.global	_lv_sqrt
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu fpv4-sp-d16
 268              	_lv_sqrt:
 269              	.LVL36:
 270              	.LFB132:
 101:lvgl/src/lv_misc/lv_math.c **** 
 102:lvgl/src/lv_misc/lv_math.c **** /**
 103:lvgl/src/lv_misc/lv_math.c ****  * Get the square root of a number
 104:lvgl/src/lv_misc/lv_math.c ****  * @param x integer which square root should be calculated
 105:lvgl/src/lv_misc/lv_math.c ****  * @param q store the result here. q->i: integer part, q->f: fractional part in 1/256 unit
 106:lvgl/src/lv_misc/lv_math.c ****  * @param mask: optional to skip some iterations if the magnitude of the root is known.
 107:lvgl/src/lv_misc/lv_math.c ****  * Set to 0x8000 by default.
 108:lvgl/src/lv_misc/lv_math.c ****  * If root < 16: mask = 0x80
 109:lvgl/src/lv_misc/lv_math.c ****  * If root < 256: mask = 0x800
 110:lvgl/src/lv_misc/lv_math.c ****  * Else: mask = 0x8000
 111:lvgl/src/lv_misc/lv_math.c ****  */
 112:lvgl/src/lv_misc/lv_math.c **** LV_ATTRIBUTE_FAST_MEM void _lv_sqrt(uint32_t x, lv_sqrt_res_t * q, uint32_t mask)
 113:lvgl/src/lv_misc/lv_math.c **** {
 271              		.loc 1 113 1 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276              		.loc 1 113 1 is_stmt 0 view .LVU80
 277 0000 30B4     		push	{r4, r5}
 278              	.LCFI2:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 4, -8
 281              		.cfi_offset 5, -4
 114:lvgl/src/lv_misc/lv_math.c ****     x = x << 8; /*To get 4 bit precision. (sqrt(256) = 16 = 4 bit)*/
 282              		.loc 1 114 5 is_stmt 1 view .LVU81
 283              		.loc 1 114 7 is_stmt 0 view .LVU82
 284 0002 0002     		lsls	r0, r0, #8
 285              	.LVL37:
 115:lvgl/src/lv_misc/lv_math.c **** 
ARM GAS  D:\Temp\cc5vwzCD.s 			page 8


 116:lvgl/src/lv_misc/lv_math.c ****     uint32_t root = 0;
 286              		.loc 1 116 5 is_stmt 1 view .LVU83
 287              		.loc 1 116 14 is_stmt 0 view .LVU84
 288 0004 0024     		movs	r4, #0
 289 0006 01E0     		b	.L14
 290              	.LVL38:
 291              	.L13:
 117:lvgl/src/lv_misc/lv_math.c ****     uint32_t trial;
 118:lvgl/src/lv_misc/lv_math.c ****     // http://ww1.microchip.com/...en/AppNotes/91040a.pdf
 119:lvgl/src/lv_misc/lv_math.c ****     do {
 120:lvgl/src/lv_misc/lv_math.c ****         trial = root + mask;
 121:lvgl/src/lv_misc/lv_math.c ****         if(trial * trial <= x) root = trial;
 122:lvgl/src/lv_misc/lv_math.c ****         mask = mask >> 1;
 292              		.loc 1 122 9 is_stmt 1 view .LVU85
 123:lvgl/src/lv_misc/lv_math.c ****     } while(mask);
 293              		.loc 1 123 5 is_stmt 0 view .LVU86
 294 0008 5208     		lsrs	r2, r2, #1
 295              	.LVL39:
 296              		.loc 1 123 5 view .LVU87
 297 000a 06D0     		beq	.L17
 298              	.LVL40:
 299              	.L14:
 117:lvgl/src/lv_misc/lv_math.c ****     uint32_t trial;
 300              		.loc 1 117 5 is_stmt 1 view .LVU88
 119:lvgl/src/lv_misc/lv_math.c ****         trial = root + mask;
 301              		.loc 1 119 5 view .LVU89
 120:lvgl/src/lv_misc/lv_math.c ****         if(trial * trial <= x) root = trial;
 302              		.loc 1 120 9 view .LVU90
 120:lvgl/src/lv_misc/lv_math.c ****         if(trial * trial <= x) root = trial;
 303              		.loc 1 120 15 is_stmt 0 view .LVU91
 304 000c 1319     		adds	r3, r2, r4
 305              	.LVL41:
 121:lvgl/src/lv_misc/lv_math.c ****         mask = mask >> 1;
 306              		.loc 1 121 9 is_stmt 1 view .LVU92
 121:lvgl/src/lv_misc/lv_math.c ****         mask = mask >> 1;
 307              		.loc 1 121 18 is_stmt 0 view .LVU93
 308 000e 03FB03F5 		mul	r5, r3, r3
 121:lvgl/src/lv_misc/lv_math.c ****         mask = mask >> 1;
 309              		.loc 1 121 11 view .LVU94
 310 0012 8542     		cmp	r5, r0
 311 0014 F8D8     		bhi	.L13
 121:lvgl/src/lv_misc/lv_math.c ****         mask = mask >> 1;
 312              		.loc 1 121 37 view .LVU95
 313 0016 1C46     		mov	r4, r3
 314              	.LVL42:
 121:lvgl/src/lv_misc/lv_math.c ****         mask = mask >> 1;
 315              		.loc 1 121 37 view .LVU96
 316 0018 F6E7     		b	.L13
 317              	.LVL43:
 318              	.L17:
 124:lvgl/src/lv_misc/lv_math.c **** 
 125:lvgl/src/lv_misc/lv_math.c ****     q->i = root >> 4;
 319              		.loc 1 125 5 is_stmt 1 view .LVU97
 320              		.loc 1 125 17 is_stmt 0 view .LVU98
 321 001a 2309     		lsrs	r3, r4, #4
 322              	.LVL44:
 323              		.loc 1 125 10 view .LVU99
ARM GAS  D:\Temp\cc5vwzCD.s 			page 9


 324 001c 0B80     		strh	r3, [r1]	@ movhi
 126:lvgl/src/lv_misc/lv_math.c ****     q->f = (root & 0xf) << 4;
 325              		.loc 1 126 5 is_stmt 1 view .LVU100
 326              		.loc 1 126 25 is_stmt 0 view .LVU101
 327 001e 2401     		lsls	r4, r4, #4
 328              	.LVL45:
 329              		.loc 1 126 25 view .LVU102
 330 0020 04F0F004 		and	r4, r4, #240
 331              		.loc 1 126 10 view .LVU103
 332 0024 4C80     		strh	r4, [r1, #2]	@ movhi
 127:lvgl/src/lv_misc/lv_math.c **** }
 333              		.loc 1 127 1 view .LVU104
 334 0026 30BC     		pop	{r4, r5}
 335              	.LCFI3:
 336              		.cfi_restore 5
 337              		.cfi_restore 4
 338              		.cfi_def_cfa_offset 0
 339 0028 7047     		bx	lr
 340              		.cfi_endproc
 341              	.LFE132:
 343              		.section	.text._lv_atan2,"ax",%progbits
 344              		.align	1
 345              		.global	_lv_atan2
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 349              		.fpu fpv4-sp-d16
 351              	_lv_atan2:
 352              	.LVL46:
 353              	.LFB133:
 128:lvgl/src/lv_misc/lv_math.c **** 
 129:lvgl/src/lv_misc/lv_math.c **** /**
 130:lvgl/src/lv_misc/lv_math.c ****  * Calculate the atan2 of a vector.
 131:lvgl/src/lv_misc/lv_math.c ****  * @param x
 132:lvgl/src/lv_misc/lv_math.c ****  * @param y
 133:lvgl/src/lv_misc/lv_math.c ****  * @return the angle in degree calculated from the given parameters in range of [0..360]
 134:lvgl/src/lv_misc/lv_math.c ****  */
 135:lvgl/src/lv_misc/lv_math.c **** uint16_t _lv_atan2(int x, int y)
 136:lvgl/src/lv_misc/lv_math.c **** {
 354              		.loc 1 136 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 137:lvgl/src/lv_misc/lv_math.c ****     // Fast XY vector to integer degree algorithm - Jan 2011 www.RomanBlack.com
 138:lvgl/src/lv_misc/lv_math.c ****     // Converts any XY values including 0 to a degree value that should be
 139:lvgl/src/lv_misc/lv_math.c ****     // within +/- 1 degree of the accurate value without needing
 140:lvgl/src/lv_misc/lv_math.c ****     // large slow trig functions like ArcTan() or ArcCos().
 141:lvgl/src/lv_misc/lv_math.c ****     // NOTE! at least one of the X or Y values must be non-zero!
 142:lvgl/src/lv_misc/lv_math.c ****     // This is the full version, for all 4 quadrants and will generate
 143:lvgl/src/lv_misc/lv_math.c ****     // the angle in integer degrees from 0-360.
 144:lvgl/src/lv_misc/lv_math.c ****     // Any values of X and Y are usable including negative values provided
 145:lvgl/src/lv_misc/lv_math.c ****     // they are between -1456 and 1456 so the 16bit multiply does not overflow.
 146:lvgl/src/lv_misc/lv_math.c **** 
 147:lvgl/src/lv_misc/lv_math.c ****     unsigned char negflag;
 359              		.loc 1 147 5 view .LVU106
 148:lvgl/src/lv_misc/lv_math.c ****     unsigned char tempdegree;
ARM GAS  D:\Temp\cc5vwzCD.s 			page 10


 360              		.loc 1 148 5 view .LVU107
 149:lvgl/src/lv_misc/lv_math.c ****     unsigned char comp;
 361              		.loc 1 149 5 view .LVU108
 150:lvgl/src/lv_misc/lv_math.c ****     unsigned int degree;     // this will hold the result
 362              		.loc 1 150 5 view .LVU109
 151:lvgl/src/lv_misc/lv_math.c ****     //signed int x;            // these hold the XY vector at the start
 152:lvgl/src/lv_misc/lv_math.c ****     //signed int y;            // (and they will be destroyed)
 153:lvgl/src/lv_misc/lv_math.c ****     unsigned int ux;
 363              		.loc 1 153 5 view .LVU110
 154:lvgl/src/lv_misc/lv_math.c ****     unsigned int uy;
 364              		.loc 1 154 5 view .LVU111
 155:lvgl/src/lv_misc/lv_math.c **** 
 156:lvgl/src/lv_misc/lv_math.c ****     // Save the sign flags then remove signs and get XY as unsigned ints
 157:lvgl/src/lv_misc/lv_math.c ****     negflag = 0;
 365              		.loc 1 157 5 view .LVU112
 158:lvgl/src/lv_misc/lv_math.c ****     if(x < 0) {
 366              		.loc 1 158 5 view .LVU113
 367              		.loc 1 158 7 is_stmt 0 view .LVU114
 368 0000 0028     		cmp	r0, #0
 369              		.loc 1 158 7 view .LVU115
 370 0002 2DDB     		blt	.L38
 157:lvgl/src/lv_misc/lv_math.c ****     if(x < 0) {
 371              		.loc 1 157 13 view .LVU116
 372 0004 0023     		movs	r3, #0
 373              	.LVL47:
 374              	.L19:
 159:lvgl/src/lv_misc/lv_math.c ****         negflag += 0x01;    // x flag bit
 160:lvgl/src/lv_misc/lv_math.c ****         x = (0 - x);        // is now +
 161:lvgl/src/lv_misc/lv_math.c ****     }
 162:lvgl/src/lv_misc/lv_math.c ****     ux = x;                // copy to unsigned var before multiply
 375              		.loc 1 162 5 is_stmt 1 view .LVU117
 163:lvgl/src/lv_misc/lv_math.c ****     if(y < 0) {
 376              		.loc 1 163 5 view .LVU118
 377              		.loc 1 163 7 is_stmt 0 view .LVU119
 378 0006 0029     		cmp	r1, #0
 379 0008 2DDB     		blt	.L39
 380              	.L20:
 164:lvgl/src/lv_misc/lv_math.c ****         negflag += 0x02;    // y flag bit
 165:lvgl/src/lv_misc/lv_math.c ****         y = (0 - y);        // is now +
 166:lvgl/src/lv_misc/lv_math.c ****     }
 167:lvgl/src/lv_misc/lv_math.c ****     uy = y;                // copy to unsigned var before multiply
 381              		.loc 1 167 5 is_stmt 1 view .LVU120
 382              	.LVL48:
 168:lvgl/src/lv_misc/lv_math.c **** 
 169:lvgl/src/lv_misc/lv_math.c ****     // 1. Calc the scaled "degrees"
 170:lvgl/src/lv_misc/lv_math.c ****     if(ux > uy) {
 383              		.loc 1 170 5 view .LVU121
 384              		.loc 1 170 7 is_stmt 0 view .LVU122
 385 000a 8842     		cmp	r0, r1
 386 000c 2FD9     		bls	.L21
 171:lvgl/src/lv_misc/lv_math.c ****         degree = (uy * 45) / ux;   // degree result will be 0-45 range
 387              		.loc 1 171 9 is_stmt 1 view .LVU123
 388              		.loc 1 171 22 is_stmt 0 view .LVU124
 389 000e 01EB4101 		add	r1, r1, r1, lsl #1
 390              	.LVL49:
 391              		.loc 1 171 22 view .LVU125
 392 0012 C1EB0111 		rsb	r1, r1, r1, lsl #4
ARM GAS  D:\Temp\cc5vwzCD.s 			page 11


 393              		.loc 1 171 16 view .LVU126
 394 0016 B1FBF0F1 		udiv	r1, r1, r0
 395              	.LVL50:
 172:lvgl/src/lv_misc/lv_math.c ****         negflag += 0x10;    // octant flag bit
 396              		.loc 1 172 9 is_stmt 1 view .LVU127
 397              		.loc 1 172 17 is_stmt 0 view .LVU128
 398 001a 1033     		adds	r3, r3, #16
 399              	.LVL51:
 400              		.loc 1 172 17 view .LVU129
 401 001c DBB2     		uxtb	r3, r3
 402              	.LVL52:
 403              	.L22:
 173:lvgl/src/lv_misc/lv_math.c ****     }
 174:lvgl/src/lv_misc/lv_math.c ****     else {
 175:lvgl/src/lv_misc/lv_math.c ****         degree = (ux * 45) / uy;   // degree result will be 0-45 range
 176:lvgl/src/lv_misc/lv_math.c ****     }
 177:lvgl/src/lv_misc/lv_math.c **** 
 178:lvgl/src/lv_misc/lv_math.c ****     // 2. Compensate for the 4 degree error curve
 179:lvgl/src/lv_misc/lv_math.c ****     comp = 0;
 404              		.loc 1 179 5 is_stmt 1 view .LVU130
 180:lvgl/src/lv_misc/lv_math.c ****     tempdegree = degree;    // use an unsigned char for speed!
 405              		.loc 1 180 5 view .LVU131
 406              		.loc 1 180 16 is_stmt 0 view .LVU132
 407 001e CAB2     		uxtb	r2, r1
 408              	.LVL53:
 181:lvgl/src/lv_misc/lv_math.c ****     if(tempdegree > 22) {    // if top half of range
 409              		.loc 1 181 5 is_stmt 1 view .LVU133
 410              		.loc 1 181 7 is_stmt 0 view .LVU134
 411 0020 162A     		cmp	r2, #22
 412 0022 2DD9     		bls	.L23
 182:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree <= 44) comp++;
 413              		.loc 1 182 9 is_stmt 1 view .LVU135
 414              		.loc 1 182 11 is_stmt 0 view .LVU136
 415 0024 2C2A     		cmp	r2, #44
 416 0026 29D9     		bls	.L36
 179:lvgl/src/lv_misc/lv_math.c ****     tempdegree = degree;    // use an unsigned char for speed!
 417              		.loc 1 179 10 view .LVU137
 418 0028 0020     		movs	r0, #0
 419              	.L24:
 420              	.LVL54:
 183:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree <= 41) comp++;
 421              		.loc 1 183 9 is_stmt 1 view .LVU138
 422              		.loc 1 183 11 is_stmt 0 view .LVU139
 423 002a 292A     		cmp	r2, #41
 424 002c 01D8     		bhi	.L25
 425              		.loc 1 183 30 is_stmt 1 discriminator 1 view .LVU140
 426              		.loc 1 183 34 is_stmt 0 discriminator 1 view .LVU141
 427 002e 0130     		adds	r0, r0, #1
 428              	.LVL55:
 429              		.loc 1 183 34 discriminator 1 view .LVU142
 430 0030 C0B2     		uxtb	r0, r0
 431              	.LVL56:
 432              	.L25:
 184:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree <= 37) comp++;
 433              		.loc 1 184 9 is_stmt 1 view .LVU143
 434              		.loc 1 184 11 is_stmt 0 view .LVU144
 435 0032 252A     		cmp	r2, #37
ARM GAS  D:\Temp\cc5vwzCD.s 			page 12


 436 0034 01D8     		bhi	.L26
 437              		.loc 1 184 30 is_stmt 1 discriminator 1 view .LVU145
 438              		.loc 1 184 34 is_stmt 0 discriminator 1 view .LVU146
 439 0036 0130     		adds	r0, r0, #1
 440              	.LVL57:
 441              		.loc 1 184 34 discriminator 1 view .LVU147
 442 0038 C0B2     		uxtb	r0, r0
 443              	.LVL58:
 444              	.L26:
 185:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree <= 32) comp++;  // max is 4 degrees compensated
 445              		.loc 1 185 9 is_stmt 1 view .LVU148
 446              		.loc 1 185 11 is_stmt 0 view .LVU149
 447 003a 202A     		cmp	r2, #32
 448 003c 01D8     		bhi	.L27
 449              		.loc 1 185 30 is_stmt 1 discriminator 1 view .LVU150
 450              		.loc 1 185 34 is_stmt 0 discriminator 1 view .LVU151
 451 003e 0130     		adds	r0, r0, #1
 452              	.LVL59:
 453              		.loc 1 185 34 discriminator 1 view .LVU152
 454 0040 C0B2     		uxtb	r0, r0
 455              	.LVL60:
 456              	.L27:
 186:lvgl/src/lv_misc/lv_math.c ****     }
 187:lvgl/src/lv_misc/lv_math.c ****     else {   // else is lower half of range
 188:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 2) comp++;
 189:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 6) comp++;
 190:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 191:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
 192:lvgl/src/lv_misc/lv_math.c ****     }
 193:lvgl/src/lv_misc/lv_math.c ****     degree += comp;   // degree is now accurate to +/- 1 degree!
 457              		.loc 1 193 5 is_stmt 1 view .LVU153
 458              		.loc 1 193 12 is_stmt 0 view .LVU154
 459 0042 0844     		add	r0, r0, r1
 460              	.LVL61:
 194:lvgl/src/lv_misc/lv_math.c **** 
 195:lvgl/src/lv_misc/lv_math.c ****     // Invert degree if it was X>Y octant, makes 0-45 into 90-45
 196:lvgl/src/lv_misc/lv_math.c ****     if(negflag & 0x10) degree = (90 - degree);
 461              		.loc 1 196 5 is_stmt 1 view .LVU155
 462              		.loc 1 196 7 is_stmt 0 view .LVU156
 463 0044 13F0100F 		tst	r3, #16
 464 0048 01D0     		beq	.L31
 465              		.loc 1 196 24 is_stmt 1 discriminator 1 view .LVU157
 466              		.loc 1 196 31 is_stmt 0 discriminator 1 view .LVU158
 467 004a C0F15A00 		rsb	r0, r0, #90
 468              	.LVL62:
 469              	.L31:
 197:lvgl/src/lv_misc/lv_math.c **** 
 198:lvgl/src/lv_misc/lv_math.c ****     // 3. Degree is now 0-90 range for this quadrant,
 199:lvgl/src/lv_misc/lv_math.c ****     // need to invert it for whichever quadrant it was in
 200:lvgl/src/lv_misc/lv_math.c ****     if(negflag & 0x02) { // if -Y
 470              		.loc 1 200 5 is_stmt 1 view .LVU159
 471              		.loc 1 200 7 is_stmt 0 view .LVU160
 472 004e 13F0020F 		tst	r3, #2
 473 0052 2AD0     		beq	.L32
 201:lvgl/src/lv_misc/lv_math.c ****         if(negflag & 0x01)   // if -Y -X
 474              		.loc 1 201 9 is_stmt 1 view .LVU161
 475              		.loc 1 201 11 is_stmt 0 view .LVU162
ARM GAS  D:\Temp\cc5vwzCD.s 			page 13


 476 0054 13F0010F 		tst	r3, #1
 477 0058 24D0     		beq	.L33
 202:lvgl/src/lv_misc/lv_math.c ****             degree = (180 + degree);
 478              		.loc 1 202 13 is_stmt 1 view .LVU163
 479              		.loc 1 202 20 is_stmt 0 view .LVU164
 480 005a B430     		adds	r0, r0, #180
 481              	.LVL63:
 482              	.L34:
 203:lvgl/src/lv_misc/lv_math.c ****         else        // else is -Y +X
 204:lvgl/src/lv_misc/lv_math.c ****             degree = (180 - degree);
 205:lvgl/src/lv_misc/lv_math.c ****     }
 206:lvgl/src/lv_misc/lv_math.c ****     else {   // else is +Y
 207:lvgl/src/lv_misc/lv_math.c ****         if(negflag & 0x01)   // if +Y -X
 208:lvgl/src/lv_misc/lv_math.c ****             degree = (360 - degree);
 209:lvgl/src/lv_misc/lv_math.c ****     }
 210:lvgl/src/lv_misc/lv_math.c ****     return degree;
 483              		.loc 1 210 5 is_stmt 1 view .LVU165
 211:lvgl/src/lv_misc/lv_math.c **** }
 484              		.loc 1 211 1 is_stmt 0 view .LVU166
 485 005c 80B2     		uxth	r0, r0
 486              	.LVL64:
 487              		.loc 1 211 1 view .LVU167
 488 005e 7047     		bx	lr
 489              	.LVL65:
 490              	.L38:
 159:lvgl/src/lv_misc/lv_math.c ****         x = (0 - x);        // is now +
 491              		.loc 1 159 9 is_stmt 1 view .LVU168
 160:lvgl/src/lv_misc/lv_math.c ****     }
 492              		.loc 1 160 9 view .LVU169
 160:lvgl/src/lv_misc/lv_math.c ****     }
 493              		.loc 1 160 11 is_stmt 0 view .LVU170
 494 0060 4042     		rsbs	r0, r0, #0
 495              	.LVL66:
 159:lvgl/src/lv_misc/lv_math.c ****         x = (0 - x);        // is now +
 496              		.loc 1 159 17 view .LVU171
 497 0062 0123     		movs	r3, #1
 498 0064 CFE7     		b	.L19
 499              	.LVL67:
 500              	.L39:
 164:lvgl/src/lv_misc/lv_math.c ****         y = (0 - y);        // is now +
 501              		.loc 1 164 9 is_stmt 1 view .LVU172
 164:lvgl/src/lv_misc/lv_math.c ****         y = (0 - y);        // is now +
 502              		.loc 1 164 17 is_stmt 0 view .LVU173
 503 0066 0233     		adds	r3, r3, #2
 504              	.LVL68:
 164:lvgl/src/lv_misc/lv_math.c ****         y = (0 - y);        // is now +
 505              		.loc 1 164 17 view .LVU174
 506 0068 DBB2     		uxtb	r3, r3
 507              	.LVL69:
 165:lvgl/src/lv_misc/lv_math.c ****     }
 508              		.loc 1 165 9 is_stmt 1 view .LVU175
 165:lvgl/src/lv_misc/lv_math.c ****     }
 509              		.loc 1 165 11 is_stmt 0 view .LVU176
 510 006a 4942     		rsbs	r1, r1, #0
 511              	.LVL70:
 165:lvgl/src/lv_misc/lv_math.c ****     }
 512              		.loc 1 165 11 view .LVU177
ARM GAS  D:\Temp\cc5vwzCD.s 			page 14


 513 006c CDE7     		b	.L20
 514              	.LVL71:
 515              	.L21:
 175:lvgl/src/lv_misc/lv_math.c ****     }
 516              		.loc 1 175 9 is_stmt 1 view .LVU178
 175:lvgl/src/lv_misc/lv_math.c ****     }
 517              		.loc 1 175 22 is_stmt 0 view .LVU179
 518 006e 00EB4000 		add	r0, r0, r0, lsl #1
 519              	.LVL72:
 175:lvgl/src/lv_misc/lv_math.c ****     }
 520              		.loc 1 175 22 view .LVU180
 521 0072 C0EB0010 		rsb	r0, r0, r0, lsl #4
 175:lvgl/src/lv_misc/lv_math.c ****     }
 522              		.loc 1 175 16 view .LVU181
 523 0076 B0FBF1F1 		udiv	r1, r0, r1
 524              	.LVL73:
 175:lvgl/src/lv_misc/lv_math.c ****     }
 525              		.loc 1 175 16 view .LVU182
 526 007a D0E7     		b	.L22
 527              	.LVL74:
 528              	.L36:
 182:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree <= 41) comp++;
 529              		.loc 1 182 34 view .LVU183
 530 007c 0120     		movs	r0, #1
 531 007e D4E7     		b	.L24
 532              	.L23:
 188:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 6) comp++;
 533              		.loc 1 188 9 is_stmt 1 view .LVU184
 188:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 6) comp++;
 534              		.loc 1 188 11 is_stmt 0 view .LVU185
 535 0080 012A     		cmp	r2, #1
 536 0082 0DD9     		bls	.L40
 188:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 6) comp++;
 537              		.loc 1 188 33 view .LVU186
 538 0084 0120     		movs	r0, #1
 539              	.L28:
 540              	.LVL75:
 189:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 541              		.loc 1 189 9 is_stmt 1 view .LVU187
 189:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 542              		.loc 1 189 11 is_stmt 0 view .LVU188
 543 0086 052A     		cmp	r2, #5
 544 0088 01D9     		bls	.L29
 189:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 545              		.loc 1 189 29 is_stmt 1 discriminator 1 view .LVU189
 189:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 546              		.loc 1 189 33 is_stmt 0 discriminator 1 view .LVU190
 547 008a 0130     		adds	r0, r0, #1
 548              	.LVL76:
 189:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 549              		.loc 1 189 33 discriminator 1 view .LVU191
 550 008c C0B2     		uxtb	r0, r0
 551              	.LVL77:
 552              	.L29:
 190:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
 553              		.loc 1 190 9 is_stmt 1 view .LVU192
 190:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
ARM GAS  D:\Temp\cc5vwzCD.s 			page 15


 554              		.loc 1 190 11 is_stmt 0 view .LVU193
 555 008e 092A     		cmp	r2, #9
 556 0090 01D9     		bls	.L30
 190:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
 557              		.loc 1 190 30 is_stmt 1 discriminator 1 view .LVU194
 190:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
 558              		.loc 1 190 34 is_stmt 0 discriminator 1 view .LVU195
 559 0092 0130     		adds	r0, r0, #1
 560              	.LVL78:
 190:lvgl/src/lv_misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
 561              		.loc 1 190 34 discriminator 1 view .LVU196
 562 0094 C0B2     		uxtb	r0, r0
 563              	.LVL79:
 564              	.L30:
 191:lvgl/src/lv_misc/lv_math.c ****     }
 565              		.loc 1 191 9 is_stmt 1 view .LVU197
 191:lvgl/src/lv_misc/lv_math.c ****     }
 566              		.loc 1 191 11 is_stmt 0 view .LVU198
 567 0096 0E2A     		cmp	r2, #14
 568 0098 D3D9     		bls	.L27
 191:lvgl/src/lv_misc/lv_math.c ****     }
 569              		.loc 1 191 30 is_stmt 1 discriminator 1 view .LVU199
 191:lvgl/src/lv_misc/lv_math.c ****     }
 570              		.loc 1 191 34 is_stmt 0 discriminator 1 view .LVU200
 571 009a 0130     		adds	r0, r0, #1
 572              	.LVL80:
 191:lvgl/src/lv_misc/lv_math.c ****     }
 573              		.loc 1 191 34 discriminator 1 view .LVU201
 574 009c C0B2     		uxtb	r0, r0
 575              	.LVL81:
 191:lvgl/src/lv_misc/lv_math.c ****     }
 576              		.loc 1 191 34 discriminator 1 view .LVU202
 577 009e D0E7     		b	.L27
 578              	.LVL82:
 579              	.L40:
 179:lvgl/src/lv_misc/lv_math.c ****     tempdegree = degree;    // use an unsigned char for speed!
 580              		.loc 1 179 10 view .LVU203
 581 00a0 0020     		movs	r0, #0
 582 00a2 F0E7     		b	.L28
 583              	.LVL83:
 584              	.L33:
 204:lvgl/src/lv_misc/lv_math.c ****     }
 585              		.loc 1 204 13 is_stmt 1 view .LVU204
 204:lvgl/src/lv_misc/lv_math.c ****     }
 586              		.loc 1 204 20 is_stmt 0 view .LVU205
 587 00a4 C0F1B400 		rsb	r0, r0, #180
 588              	.LVL84:
 204:lvgl/src/lv_misc/lv_math.c ****     }
 589              		.loc 1 204 20 view .LVU206
 590 00a8 D8E7     		b	.L34
 591              	.L32:
 207:lvgl/src/lv_misc/lv_math.c ****             degree = (360 - degree);
 592              		.loc 1 207 9 is_stmt 1 view .LVU207
 207:lvgl/src/lv_misc/lv_math.c ****             degree = (360 - degree);
 593              		.loc 1 207 11 is_stmt 0 view .LVU208
 594 00aa 13F0010F 		tst	r3, #1
 595 00ae D5D0     		beq	.L34
ARM GAS  D:\Temp\cc5vwzCD.s 			page 16


 208:lvgl/src/lv_misc/lv_math.c ****     }
 596              		.loc 1 208 13 is_stmt 1 view .LVU209
 208:lvgl/src/lv_misc/lv_math.c ****     }
 597              		.loc 1 208 20 is_stmt 0 view .LVU210
 598 00b0 C0F5B470 		rsb	r0, r0, #360
 599              	.LVL85:
 208:lvgl/src/lv_misc/lv_math.c ****     }
 600              		.loc 1 208 20 view .LVU211
 601 00b4 D2E7     		b	.L34
 602              		.cfi_endproc
 603              	.LFE133:
 605              		.section	.text._lv_pow,"ax",%progbits
 606              		.align	1
 607              		.global	_lv_pow
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu fpv4-sp-d16
 613              	_lv_pow:
 614              	.LVL86:
 615              	.LFB134:
 212:lvgl/src/lv_misc/lv_math.c **** 
 213:lvgl/src/lv_misc/lv_math.c **** /**
 214:lvgl/src/lv_misc/lv_math.c ****  * Calculate the integer exponents.
 215:lvgl/src/lv_misc/lv_math.c ****  * @param base
 216:lvgl/src/lv_misc/lv_math.c ****  * @param power
 217:lvgl/src/lv_misc/lv_math.c ****  * @return base raised to the power exponent
 218:lvgl/src/lv_misc/lv_math.c ****  */
 219:lvgl/src/lv_misc/lv_math.c **** int64_t _lv_pow(int64_t base, int8_t exp)
 220:lvgl/src/lv_misc/lv_math.c **** {
 616              		.loc 1 220 1 is_stmt 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621              		.loc 1 220 1 is_stmt 0 view .LVU213
 622 0000 30B4     		push	{r4, r5}
 623              	.LCFI4:
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 4, -8
 626              		.cfi_offset 5, -4
 221:lvgl/src/lv_misc/lv_math.c ****     int64_t result = 1;
 627              		.loc 1 221 5 is_stmt 1 view .LVU214
 628              	.LVL87:
 222:lvgl/src/lv_misc/lv_math.c ****     while(exp) {
 629              		.loc 1 222 5 view .LVU215
 221:lvgl/src/lv_misc/lv_math.c ****     int64_t result = 1;
 630              		.loc 1 221 13 is_stmt 0 view .LVU216
 631 0002 0124     		movs	r4, #1
 632 0004 0025     		movs	r5, #0
 633              		.loc 1 222 10 view .LVU217
 634 0006 06E0     		b	.L42
 635              	.LVL88:
 636              	.L43:
 223:lvgl/src/lv_misc/lv_math.c ****         if(exp & 1)
 224:lvgl/src/lv_misc/lv_math.c ****             result *= base;
 225:lvgl/src/lv_misc/lv_math.c ****         exp >>= 1;
ARM GAS  D:\Temp\cc5vwzCD.s 			page 17


 637              		.loc 1 225 9 is_stmt 1 view .LVU218
 638              		.loc 1 225 13 is_stmt 0 view .LVU219
 639 0008 5210     		asrs	r2, r2, #1
 640              	.LVL89:
 226:lvgl/src/lv_misc/lv_math.c ****         base *= base;
 641              		.loc 1 226 9 is_stmt 1 view .LVU220
 642              		.loc 1 226 14 is_stmt 0 view .LVU221
 643 000a 00FB01F3 		mul	r3, r0, r1
 644 000e A0FB0001 		umull	r0, r1, r0, r0
 645              	.LVL90:
 646              		.loc 1 226 14 view .LVU222
 647 0012 01EB4301 		add	r1, r1, r3, lsl #1
 648              	.LVL91:
 649              	.L42:
 222:lvgl/src/lv_misc/lv_math.c ****     while(exp) {
 650              		.loc 1 222 10 view .LVU223
 651 0016 52B1     		cbz	r2, .L46
 223:lvgl/src/lv_misc/lv_math.c ****         if(exp & 1)
 652              		.loc 1 223 9 is_stmt 1 view .LVU224
 223:lvgl/src/lv_misc/lv_math.c ****         if(exp & 1)
 653              		.loc 1 223 11 is_stmt 0 view .LVU225
 654 0018 12F0010F 		tst	r2, #1
 655 001c F4D0     		beq	.L43
 224:lvgl/src/lv_misc/lv_math.c ****         exp >>= 1;
 656              		.loc 1 224 13 is_stmt 1 view .LVU226
 224:lvgl/src/lv_misc/lv_math.c ****         exp >>= 1;
 657              		.loc 1 224 20 is_stmt 0 view .LVU227
 658 001e 04FB01F3 		mul	r3, r4, r1
 659 0022 00FB0533 		mla	r3, r0, r5, r3
 660 0026 A4FB0045 		umull	r4, r5, r4, r0
 661              	.LVL92:
 224:lvgl/src/lv_misc/lv_math.c ****         exp >>= 1;
 662              		.loc 1 224 20 view .LVU228
 663 002a 1D44     		add	r5, r5, r3
 664              	.LVL93:
 224:lvgl/src/lv_misc/lv_math.c ****         exp >>= 1;
 665              		.loc 1 224 20 view .LVU229
 666 002c ECE7     		b	.L43
 667              	.L46:
 227:lvgl/src/lv_misc/lv_math.c ****     }
 228:lvgl/src/lv_misc/lv_math.c **** 
 229:lvgl/src/lv_misc/lv_math.c ****     return result;
 668              		.loc 1 229 5 is_stmt 1 view .LVU230
 230:lvgl/src/lv_misc/lv_math.c **** }
 669              		.loc 1 230 1 is_stmt 0 view .LVU231
 670 002e 2046     		mov	r0, r4
 671              	.LVL94:
 672              		.loc 1 230 1 view .LVU232
 673 0030 2946     		mov	r1, r5
 674 0032 30BC     		pop	{r4, r5}
 675              	.LCFI5:
 676              		.cfi_restore 5
 677              		.cfi_restore 4
 678              		.cfi_def_cfa_offset 0
 679              	.LVL95:
 680              		.loc 1 230 1 view .LVU233
 681 0034 7047     		bx	lr
ARM GAS  D:\Temp\cc5vwzCD.s 			page 18


 682              		.cfi_endproc
 683              	.LFE134:
 685              		.section	.text._lv_map,"ax",%progbits
 686              		.align	1
 687              		.global	_lv_map
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	_lv_map:
 694              	.LVL96:
 695              	.LFB135:
 231:lvgl/src/lv_misc/lv_math.c **** 
 232:lvgl/src/lv_misc/lv_math.c **** /**
 233:lvgl/src/lv_misc/lv_math.c ****  * Get the mapped of a number given an input and output range
 234:lvgl/src/lv_misc/lv_math.c ****  * @param x integer which mapped value should be calculated
 235:lvgl/src/lv_misc/lv_math.c ****  * @param min_in min input range
 236:lvgl/src/lv_misc/lv_math.c ****  * @param max_in max input range
 237:lvgl/src/lv_misc/lv_math.c ****  * @param min_out max output range
 238:lvgl/src/lv_misc/lv_math.c ****  * @param max_out max output range
 239:lvgl/src/lv_misc/lv_math.c ****  * @return the mapped number
 240:lvgl/src/lv_misc/lv_math.c ****  */
 241:lvgl/src/lv_misc/lv_math.c **** int32_t _lv_map(int32_t x, int32_t min_in, int32_t max_in, int32_t min_out, int32_t max_out)
 242:lvgl/src/lv_misc/lv_math.c **** {
 696              		.loc 1 242 1 is_stmt 1 view -0
 697              		.cfi_startproc
 698              		@ args = 4, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 243:lvgl/src/lv_misc/lv_math.c ****     if(x <= min_in) return min_out;
 701              		.loc 1 243 5 view .LVU235
 702              		.loc 1 243 7 is_stmt 0 view .LVU236
 703 0000 8842     		cmp	r0, r1
 704 0002 0EDD     		ble	.L49
 242:lvgl/src/lv_misc/lv_math.c ****     if(x <= min_in) return min_out;
 705              		.loc 1 242 1 view .LVU237
 706 0004 10B4     		push	{r4}
 707              	.LCFI6:
 708              		.cfi_def_cfa_offset 4
 709              		.cfi_offset 4, -4
 244:lvgl/src/lv_misc/lv_math.c ****     if(x >= max_in) return max_out;
 710              		.loc 1 244 5 is_stmt 1 view .LVU238
 711              		.loc 1 244 7 is_stmt 0 view .LVU239
 712 0006 9042     		cmp	r0, r2
 713 0008 0DDA     		bge	.L50
 245:lvgl/src/lv_misc/lv_math.c **** 
 246:lvgl/src/lv_misc/lv_math.c ****     /* The equation should be:
 247:lvgl/src/lv_misc/lv_math.c ****      *   ((x - min_in) / delta in) * delta_out + min_out
 248:lvgl/src/lv_misc/lv_math.c ****      * To avoid rounding error reorder the operations:
 249:lvgl/src/lv_misc/lv_math.c ****      *   (((x - min_in) * delta_out) / delta in) + min_out
 250:lvgl/src/lv_misc/lv_math.c ****      */
 251:lvgl/src/lv_misc/lv_math.c **** 
 252:lvgl/src/lv_misc/lv_math.c ****     int32_t delta_in = max_in - min_in;
 714              		.loc 1 252 5 is_stmt 1 view .LVU240
 715              		.loc 1 252 13 is_stmt 0 view .LVU241
 716 000a 521A     		subs	r2, r2, r1
 717              	.LVL97:
ARM GAS  D:\Temp\cc5vwzCD.s 			page 19


 253:lvgl/src/lv_misc/lv_math.c ****     int32_t delta_out = max_out - min_out;
 718              		.loc 1 253 5 is_stmt 1 view .LVU242
 719              		.loc 1 253 13 is_stmt 0 view .LVU243
 720 000c 019C     		ldr	r4, [sp, #4]
 721 000e E41A     		subs	r4, r4, r3
 722              	.LVL98:
 254:lvgl/src/lv_misc/lv_math.c **** 
 255:lvgl/src/lv_misc/lv_math.c ****     return ((x - min_in) * delta_out) / delta_in + min_out;
 723              		.loc 1 255 5 is_stmt 1 view .LVU244
 724              		.loc 1 255 16 is_stmt 0 view .LVU245
 725 0010 401A     		subs	r0, r0, r1
 726              	.LVL99:
 727              		.loc 1 255 26 view .LVU246
 728 0012 04FB00F0 		mul	r0, r4, r0
 729              		.loc 1 255 39 view .LVU247
 730 0016 90FBF2F2 		sdiv	r2, r0, r2
 731              	.LVL100:
 732              		.loc 1 255 50 view .LVU248
 733 001a D018     		adds	r0, r2, r3
 734              	.LVL101:
 735              	.L47:
 256:lvgl/src/lv_misc/lv_math.c **** }
 736              		.loc 1 256 1 view .LVU249
 737 001c 5DF8044B 		ldr	r4, [sp], #4
 738              	.LCFI7:
 739              		.cfi_restore 4
 740              		.cfi_def_cfa_offset 0
 741              	.LVL102:
 742              		.loc 1 256 1 view .LVU250
 743 0020 7047     		bx	lr
 744              	.LVL103:
 745              	.L49:
 243:lvgl/src/lv_misc/lv_math.c ****     if(x >= max_in) return max_out;
 746              		.loc 1 243 28 view .LVU251
 747 0022 1846     		mov	r0, r3
 748              	.LVL104:
 749              		.loc 1 256 1 view .LVU252
 750 0024 7047     		bx	lr
 751              	.LVL105:
 752              	.L50:
 753              	.LCFI8:
 754              		.cfi_def_cfa_offset 4
 755              		.cfi_offset 4, -4
 244:lvgl/src/lv_misc/lv_math.c **** 
 756              		.loc 1 244 28 view .LVU253
 757 0026 0198     		ldr	r0, [sp, #4]
 758              	.LVL106:
 244:lvgl/src/lv_misc/lv_math.c **** 
 759              		.loc 1 244 28 view .LVU254
 760 0028 F8E7     		b	.L47
 761              		.cfi_endproc
 762              	.LFE135:
 764              		.section	.rodata.sin0_90_table,"a"
 765              		.align	2
 766              		.set	.LANCHOR0,. + 0
 769              	sin0_90_table:
 770 0000 0000     		.short	0
ARM GAS  D:\Temp\cc5vwzCD.s 			page 20


 771 0002 3C02     		.short	572
 772 0004 7804     		.short	1144
 773 0006 B306     		.short	1715
 774 0008 EE08     		.short	2286
 775 000a 280B     		.short	2856
 776 000c 610D     		.short	3425
 777 000e 990F     		.short	3993
 778 0010 D011     		.short	4560
 779 0012 0614     		.short	5126
 780 0014 3A16     		.short	5690
 781 0016 6C18     		.short	6252
 782 0018 9D1A     		.short	6813
 783 001a CB1C     		.short	7371
 784 001c F71E     		.short	7927
 785 001e 2121     		.short	8481
 786 0020 4823     		.short	9032
 787 0022 6C25     		.short	9580
 788 0024 8E27     		.short	10126
 789 0026 AC29     		.short	10668
 790 0028 C72B     		.short	11207
 791 002a DF2D     		.short	11743
 792 002c F32F     		.short	12275
 793 002e 0332     		.short	12803
 794 0030 1034     		.short	13328
 795 0032 1836     		.short	13848
 796 0034 1C38     		.short	14364
 797 0036 1C3A     		.short	14876
 798 0038 173C     		.short	15383
 799 003a 0E3E     		.short	15886
 800 003c FF3F     		.short	16383
 801 003e EC41     		.short	16876
 802 0040 D443     		.short	17364
 803 0042 B645     		.short	17846
 804 0044 9347     		.short	18323
 805 0046 6A49     		.short	18794
 806 0048 3C4B     		.short	19260
 807 004a 084D     		.short	19720
 808 004c CD4E     		.short	20173
 809 004e 8D50     		.short	20621
 810 0050 4652     		.short	21062
 811 0052 F953     		.short	21497
 812 0054 A555     		.short	21925
 813 0056 4B57     		.short	22347
 814 0058 EA58     		.short	22762
 815 005a 825A     		.short	23170
 816 005c 135C     		.short	23571
 817 005e 9C5D     		.short	23964
 818 0060 1F5F     		.short	24351
 819 0062 9A60     		.short	24730
 820 0064 0D62     		.short	25101
 821 0066 7963     		.short	25465
 822 0068 DD64     		.short	25821
 823 006a 3966     		.short	26169
 824 006c 8D67     		.short	26509
 825 006e D968     		.short	26841
 826 0070 1D6A     		.short	27165
 827 0072 596B     		.short	27481
ARM GAS  D:\Temp\cc5vwzCD.s 			page 21


 828 0074 8C6C     		.short	27788
 829 0076 B76D     		.short	28087
 830 0078 D96E     		.short	28377
 831 007a F36F     		.short	28659
 832 007c 0471     		.short	28932
 833 007e 0C72     		.short	29196
 834 0080 0B73     		.short	29451
 835 0082 0174     		.short	29697
 836 0084 EE74     		.short	29934
 837 0086 D275     		.short	30162
 838 0088 AD76     		.short	30381
 839 008a 7F77     		.short	30591
 840 008c 4778     		.short	30791
 841 008e 0679     		.short	30982
 842 0090 BB79     		.short	31163
 843 0092 677A     		.short	31335
 844 0094 0A7B     		.short	31498
 845 0096 A27B     		.short	31650
 846 0098 327C     		.short	31794
 847 009a B77C     		.short	31927
 848 009c 337D     		.short	32051
 849 009e A57D     		.short	32165
 850 00a0 0D7E     		.short	32269
 851 00a2 6C7E     		.short	32364
 852 00a4 C07E     		.short	32448
 853 00a6 0B7F     		.short	32523
 854 00a8 4B7F     		.short	32587
 855 00aa 827F     		.short	32642
 856 00ac AF7F     		.short	32687
 857 00ae D27F     		.short	32722
 858 00b0 EB7F     		.short	32747
 859 00b2 FA7F     		.short	32762
 860 00b4 FF7F     		.short	32767
 861              		.text
 862              	.Letext0:
 863              		.file 2 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 864              		.file 3 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 865              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 866              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 867              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 868              		.file 7 "lvgl/src/lv_misc/lv_math.h"
 869              		.file 8 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 870              		.file 9 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 871              		.file 10 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 872              		.file 11 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 873              		.file 12 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
ARM GAS  D:\Temp\cc5vwzCD.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_math.c
  D:\Temp\cc5vwzCD.s:18     .text._lv_trigo_sin:0000000000000000 $t
  D:\Temp\cc5vwzCD.s:26     .text._lv_trigo_sin:0000000000000000 _lv_trigo_sin
  D:\Temp\cc5vwzCD.s:147    .text._lv_trigo_sin:0000000000000074 $d
  D:\Temp\cc5vwzCD.s:153    .text._lv_bezier3:0000000000000000 $t
  D:\Temp\cc5vwzCD.s:160    .text._lv_bezier3:0000000000000000 _lv_bezier3
  D:\Temp\cc5vwzCD.s:261    .text._lv_sqrt:0000000000000000 $t
  D:\Temp\cc5vwzCD.s:268    .text._lv_sqrt:0000000000000000 _lv_sqrt
  D:\Temp\cc5vwzCD.s:344    .text._lv_atan2:0000000000000000 $t
  D:\Temp\cc5vwzCD.s:351    .text._lv_atan2:0000000000000000 _lv_atan2
  D:\Temp\cc5vwzCD.s:606    .text._lv_pow:0000000000000000 $t
  D:\Temp\cc5vwzCD.s:613    .text._lv_pow:0000000000000000 _lv_pow
  D:\Temp\cc5vwzCD.s:686    .text._lv_map:0000000000000000 $t
  D:\Temp\cc5vwzCD.s:693    .text._lv_map:0000000000000000 _lv_map
  D:\Temp\cc5vwzCD.s:765    .rodata.sin0_90_table:0000000000000000 $d
  D:\Temp\cc5vwzCD.s:769    .rodata.sin0_90_table:0000000000000000 sin0_90_table

NO UNDEFINED SYMBOLS
