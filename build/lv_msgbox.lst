ARM GAS  D:\Temp\ccdKFHIm.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_msgbox.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_msgbox_close_ready_cb,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	lv_msgbox_close_ready_cb:
  26              	.LVL0:
  27              	.LFB491:
  28              		.file 1 "lvgl/src/lv_widgets/lv_msgbox.c"
   1:lvgl/src/lv_widgets/lv_msgbox.c **** /**
   2:lvgl/src/lv_widgets/lv_msgbox.c ****  * @file lv_msgbox.c
   3:lvgl/src/lv_widgets/lv_msgbox.c ****  *
   4:lvgl/src/lv_widgets/lv_msgbox.c ****  */
   5:lvgl/src/lv_widgets/lv_msgbox.c **** 
   6:lvgl/src/lv_widgets/lv_msgbox.c **** /*********************
   7:lvgl/src/lv_widgets/lv_msgbox.c ****  *      INCLUDES
   8:lvgl/src/lv_widgets/lv_msgbox.c ****  *********************/
   9:lvgl/src/lv_widgets/lv_msgbox.c **** #include "lv_msgbox.h"
  10:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_MSGBOX != 0
  11:lvgl/src/lv_widgets/lv_msgbox.c **** 
  12:lvgl/src/lv_widgets/lv_msgbox.c **** #include "../lv_misc/lv_debug.h"
  13:lvgl/src/lv_widgets/lv_msgbox.c **** #include "../lv_core/lv_group.h"
  14:lvgl/src/lv_widgets/lv_msgbox.c **** #include "../lv_core/lv_disp.h"
  15:lvgl/src/lv_widgets/lv_msgbox.c **** #include "../lv_themes/lv_theme.h"
  16:lvgl/src/lv_widgets/lv_msgbox.c **** #include "../lv_misc/lv_anim.h"
  17:lvgl/src/lv_widgets/lv_msgbox.c **** #include "../lv_misc/lv_math.h"
  18:lvgl/src/lv_widgets/lv_msgbox.c **** 
  19:lvgl/src/lv_widgets/lv_msgbox.c **** /*********************
  20:lvgl/src/lv_widgets/lv_msgbox.c ****  *      DEFINES
  21:lvgl/src/lv_widgets/lv_msgbox.c ****  *********************/
  22:lvgl/src/lv_widgets/lv_msgbox.c **** #define LV_OBJX_NAME "lv_msgbox"
  23:lvgl/src/lv_widgets/lv_msgbox.c **** 
  24:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_ANIMATION
  25:lvgl/src/lv_widgets/lv_msgbox.c ****     #ifndef LV_MSGBOX_CLOSE_ANIM_TIME
  26:lvgl/src/lv_widgets/lv_msgbox.c ****         #define LV_MSGBOX_CLOSE_ANIM_TIME 200 /*List close animation time)  */
  27:lvgl/src/lv_widgets/lv_msgbox.c ****     #endif
  28:lvgl/src/lv_widgets/lv_msgbox.c **** #else
  29:lvgl/src/lv_widgets/lv_msgbox.c ****     #undef LV_MSGBOX_CLOSE_ANIM_TIME
  30:lvgl/src/lv_widgets/lv_msgbox.c ****     #define LV_MSGBOX_CLOSE_ANIM_TIME 0 /*No animations*/
ARM GAS  D:\Temp\ccdKFHIm.s 			page 2


  31:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
  32:lvgl/src/lv_widgets/lv_msgbox.c **** 
  33:lvgl/src/lv_widgets/lv_msgbox.c **** /**********************
  34:lvgl/src/lv_widgets/lv_msgbox.c ****  *      TYPEDEFS
  35:lvgl/src/lv_widgets/lv_msgbox.c ****  **********************/
  36:lvgl/src/lv_widgets/lv_msgbox.c **** 
  37:lvgl/src/lv_widgets/lv_msgbox.c **** /**********************
  38:lvgl/src/lv_widgets/lv_msgbox.c ****  *  STATIC PROTOTYPES
  39:lvgl/src/lv_widgets/lv_msgbox.c ****  **********************/
  40:lvgl/src/lv_widgets/lv_msgbox.c **** static lv_res_t lv_msgbox_signal(lv_obj_t * mbox, lv_signal_t sign, void * param);
  41:lvgl/src/lv_widgets/lv_msgbox.c **** static void mbox_realign(lv_obj_t * mbox);
  42:lvgl/src/lv_widgets/lv_msgbox.c **** static lv_style_list_t * lv_msgbox_get_style(lv_obj_t * mbox, uint8_t part);
  43:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_ANIMATION
  44:lvgl/src/lv_widgets/lv_msgbox.c ****     static void lv_msgbox_close_ready_cb(lv_anim_t * a);
  45:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
  46:lvgl/src/lv_widgets/lv_msgbox.c **** static void lv_msgbox_default_event_cb(lv_obj_t * mbox, lv_event_t event);
  47:lvgl/src/lv_widgets/lv_msgbox.c **** static void lv_msgbox_btnm_event_cb(lv_obj_t * btnm, lv_event_t event);
  48:lvgl/src/lv_widgets/lv_msgbox.c **** 
  49:lvgl/src/lv_widgets/lv_msgbox.c **** /**********************
  50:lvgl/src/lv_widgets/lv_msgbox.c ****  *  STATIC VARIABLES
  51:lvgl/src/lv_widgets/lv_msgbox.c ****  **********************/
  52:lvgl/src/lv_widgets/lv_msgbox.c **** static lv_signal_cb_t ancestor_signal;
  53:lvgl/src/lv_widgets/lv_msgbox.c **** 
  54:lvgl/src/lv_widgets/lv_msgbox.c **** /**********************
  55:lvgl/src/lv_widgets/lv_msgbox.c ****  *      MACROS
  56:lvgl/src/lv_widgets/lv_msgbox.c ****  **********************/
  57:lvgl/src/lv_widgets/lv_msgbox.c **** 
  58:lvgl/src/lv_widgets/lv_msgbox.c **** /**********************
  59:lvgl/src/lv_widgets/lv_msgbox.c ****  *   GLOBAL FUNCTIONS
  60:lvgl/src/lv_widgets/lv_msgbox.c ****  **********************/
  61:lvgl/src/lv_widgets/lv_msgbox.c **** 
  62:lvgl/src/lv_widgets/lv_msgbox.c **** /**
  63:lvgl/src/lv_widgets/lv_msgbox.c ****  * Create a message box objects
  64:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param par pointer to an object, it will be the parent of the new message box
  65:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param copy pointer to a message box object, if not NULL then the new object will be copied from
  66:lvgl/src/lv_widgets/lv_msgbox.c ****  * it
  67:lvgl/src/lv_widgets/lv_msgbox.c ****  * @return pointer to the created message box
  68:lvgl/src/lv_widgets/lv_msgbox.c ****  */
  69:lvgl/src/lv_widgets/lv_msgbox.c **** lv_obj_t * lv_msgbox_create(lv_obj_t * par, const lv_obj_t * copy)
  70:lvgl/src/lv_widgets/lv_msgbox.c **** {
  71:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_LOG_TRACE("message box create started");
  72:lvgl/src/lv_widgets/lv_msgbox.c **** 
  73:lvgl/src/lv_widgets/lv_msgbox.c ****     /*Create the ancestor message box*/
  74:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_obj_t * mbox = lv_cont_create(par, copy);
  75:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_MEM(mbox);
  76:lvgl/src/lv_widgets/lv_msgbox.c ****     if(mbox == NULL) return NULL;
  77:lvgl/src/lv_widgets/lv_msgbox.c **** 
  78:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(mbox);
  79:lvgl/src/lv_widgets/lv_msgbox.c **** 
  80:lvgl/src/lv_widgets/lv_msgbox.c ****     /*Allocate the message box type specific extended data*/
  81:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_allocate_ext_attr(mbox, sizeof(lv_msgbox_ext_t));
  82:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_MEM(ext);
  83:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext == NULL) {
  84:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_del(mbox);
  85:lvgl/src/lv_widgets/lv_msgbox.c ****         return NULL;
  86:lvgl/src/lv_widgets/lv_msgbox.c ****     }
  87:lvgl/src/lv_widgets/lv_msgbox.c **** 
ARM GAS  D:\Temp\ccdKFHIm.s 			page 3


  88:lvgl/src/lv_widgets/lv_msgbox.c ****     ext->text = NULL;
  89:lvgl/src/lv_widgets/lv_msgbox.c ****     ext->btnm = NULL;
  90:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_ANIMATION
  91:lvgl/src/lv_widgets/lv_msgbox.c ****     ext->anim_time = LV_MSGBOX_CLOSE_ANIM_TIME;
  92:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
  93:lvgl/src/lv_widgets/lv_msgbox.c **** 
  94:lvgl/src/lv_widgets/lv_msgbox.c ****     /*The signal and design functions are not copied so set them here*/
  95:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_obj_set_signal_cb(mbox, lv_msgbox_signal);
  96:lvgl/src/lv_widgets/lv_msgbox.c **** 
  97:lvgl/src/lv_widgets/lv_msgbox.c ****     /*Init the new message box message box*/
  98:lvgl/src/lv_widgets/lv_msgbox.c ****     if(copy == NULL) {
  99:lvgl/src/lv_widgets/lv_msgbox.c ****         ext->text = lv_label_create(mbox, NULL);
 100:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_label_set_align(ext->text, LV_LABEL_ALIGN_CENTER);
 101:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_label_set_long_mode(ext->text, LV_LABEL_LONG_BREAK);
 102:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_label_set_text(ext->text, "Message");
 103:lvgl/src/lv_widgets/lv_msgbox.c **** 
 104:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_cont_set_layout(mbox, LV_LAYOUT_COLUMN_MID);
 105:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_cont_set_fit2(mbox, LV_FIT_NONE, LV_FIT_TIGHT);
 106:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_coord_t fit_w = lv_obj_get_width_fit(par);
 107:lvgl/src/lv_widgets/lv_msgbox.c ****         if(lv_disp_get_size_category(NULL) <= LV_DISP_SIZE_SMALL) {
 108:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_obj_set_width(mbox, fit_w);
 109:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 110:lvgl/src/lv_widgets/lv_msgbox.c ****         else {
 111:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_obj_set_width(mbox, LV_MATH_MIN(fit_w, LV_DPX(400)));
 112:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 113:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_align(mbox, NULL, LV_ALIGN_CENTER, 0, 0);
 114:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_set_event_cb(mbox, lv_msgbox_default_event_cb);
 115:lvgl/src/lv_widgets/lv_msgbox.c **** 
 116:lvgl/src/lv_widgets/lv_msgbox.c ****         /*Set the default styles*/
 117:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_theme_apply(mbox, LV_THEME_MSGBOX);
 118:lvgl/src/lv_widgets/lv_msgbox.c **** 
 119:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 120:lvgl/src/lv_widgets/lv_msgbox.c ****     /*Copy an existing message box*/
 121:lvgl/src/lv_widgets/lv_msgbox.c ****     else {
 122:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_msgbox_ext_t * copy_ext = lv_obj_get_ext_attr(copy);
 123:lvgl/src/lv_widgets/lv_msgbox.c **** 
 124:lvgl/src/lv_widgets/lv_msgbox.c ****         ext->text = lv_label_create(mbox, copy_ext->text);
 125:lvgl/src/lv_widgets/lv_msgbox.c **** 
 126:lvgl/src/lv_widgets/lv_msgbox.c ****         /*Copy the buttons and the label on them*/
 127:lvgl/src/lv_widgets/lv_msgbox.c ****         if(copy_ext->btnm) ext->btnm = lv_btnmatrix_create(mbox, copy_ext->btnm);
 128:lvgl/src/lv_widgets/lv_msgbox.c **** 
 129:lvgl/src/lv_widgets/lv_msgbox.c ****         /*Refresh the style with new signal function*/
 130:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_refresh_style(mbox, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);
 131:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 132:lvgl/src/lv_widgets/lv_msgbox.c **** 
 133:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_LOG_INFO("message box created");
 134:lvgl/src/lv_widgets/lv_msgbox.c **** 
 135:lvgl/src/lv_widgets/lv_msgbox.c ****     return mbox;
 136:lvgl/src/lv_widgets/lv_msgbox.c **** }
 137:lvgl/src/lv_widgets/lv_msgbox.c **** 
 138:lvgl/src/lv_widgets/lv_msgbox.c **** /*======================
 139:lvgl/src/lv_widgets/lv_msgbox.c ****  * Add/remove functions
 140:lvgl/src/lv_widgets/lv_msgbox.c ****  *=====================*/
 141:lvgl/src/lv_widgets/lv_msgbox.c **** 
 142:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 143:lvgl/src/lv_widgets/lv_msgbox.c ****  * Add button to the message box
 144:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to message box object
ARM GAS  D:\Temp\ccdKFHIm.s 			page 4


 145:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param btn_map button descriptor (button matrix map).
 146:lvgl/src/lv_widgets/lv_msgbox.c ****  *                E.g.  a const char *txt[] = {"ok", "close", ""} (Can not be local variable)
 147:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 148:lvgl/src/lv_widgets/lv_msgbox.c **** void lv_msgbox_add_btns(lv_obj_t * mbox, const char * btn_map[])
 149:lvgl/src/lv_widgets/lv_msgbox.c **** {
 150:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 151:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_NULL(btn_map);
 152:lvgl/src/lv_widgets/lv_msgbox.c **** 
 153:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 154:lvgl/src/lv_widgets/lv_msgbox.c **** 
 155:lvgl/src/lv_widgets/lv_msgbox.c ****     /*Create a button matrix if not exists yet*/
 156:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext->btnm == NULL) {
 157:lvgl/src/lv_widgets/lv_msgbox.c ****         ext->btnm = lv_btnmatrix_create(mbox, NULL);
 158:lvgl/src/lv_widgets/lv_msgbox.c **** 
 159:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_theme_apply(mbox, LV_THEME_MSGBOX_BTNS);
 160:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 161:lvgl/src/lv_widgets/lv_msgbox.c **** 
 162:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_btnmatrix_set_map(ext->btnm, btn_map);
 163:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_btnmatrix_set_btn_ctrl_all(ext->btnm, LV_BTNMATRIX_CTRL_CLICK_TRIG | LV_BTNMATRIX_CTRL_NO_RE
 164:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_obj_set_event_cb(ext->btnm, lv_msgbox_btnm_event_cb);
 165:lvgl/src/lv_widgets/lv_msgbox.c **** 
 166:lvgl/src/lv_widgets/lv_msgbox.c ****     if(lv_obj_is_focused(mbox)) {
 167:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_state_t state = lv_obj_get_state(mbox, LV_MSGBOX_PART_BG);
 168:lvgl/src/lv_widgets/lv_msgbox.c ****         if(state & LV_STATE_EDITED) {
 169:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_obj_set_state(ext->btnm, LV_STATE_FOCUSED | LV_STATE_EDITED);
 170:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 171:lvgl/src/lv_widgets/lv_msgbox.c ****         else {
 172:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_obj_set_state(ext->btnm, LV_STATE_FOCUSED);
 173:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 174:lvgl/src/lv_widgets/lv_msgbox.c **** 
 175:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_btnmatrix_set_focused_btn(ext->btnm, 0);
 176:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 177:lvgl/src/lv_widgets/lv_msgbox.c **** 
 178:lvgl/src/lv_widgets/lv_msgbox.c ****     mbox_realign(mbox);
 179:lvgl/src/lv_widgets/lv_msgbox.c **** }
 180:lvgl/src/lv_widgets/lv_msgbox.c **** 
 181:lvgl/src/lv_widgets/lv_msgbox.c **** /*=====================
 182:lvgl/src/lv_widgets/lv_msgbox.c ****  * Setter functions
 183:lvgl/src/lv_widgets/lv_msgbox.c ****  *====================*/
 184:lvgl/src/lv_widgets/lv_msgbox.c **** 
 185:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 186:lvgl/src/lv_widgets/lv_msgbox.c ****  * Set the text of the message box
 187:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to a message box
 188:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param txt a '\0' terminated character string which will be the message box text
 189:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 190:lvgl/src/lv_widgets/lv_msgbox.c **** void lv_msgbox_set_text(lv_obj_t * mbox, const char * txt)
 191:lvgl/src/lv_widgets/lv_msgbox.c **** {
 192:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 193:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(txt);
 194:lvgl/src/lv_widgets/lv_msgbox.c **** 
 195:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 196:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_label_set_text(ext->text, txt);
 197:lvgl/src/lv_widgets/lv_msgbox.c **** 
 198:lvgl/src/lv_widgets/lv_msgbox.c ****     mbox_realign(mbox);
 199:lvgl/src/lv_widgets/lv_msgbox.c **** }
 200:lvgl/src/lv_widgets/lv_msgbox.c **** 
 201:lvgl/src/lv_widgets/lv_msgbox.c **** /**
ARM GAS  D:\Temp\ccdKFHIm.s 			page 5


 202:lvgl/src/lv_widgets/lv_msgbox.c ****  * Set a formatted text for the message box
 203:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to a message box
 204:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param fmt `printf`-like format
 205:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 206:lvgl/src/lv_widgets/lv_msgbox.c **** void lv_msgbox_set_text_fmt(lv_obj_t * mbox, const char * fmt, ...)
 207:lvgl/src/lv_widgets/lv_msgbox.c **** {
 208:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 209:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(fmt);
 210:lvgl/src/lv_widgets/lv_msgbox.c **** 
 211:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * msgbox_ext = lv_obj_get_ext_attr(mbox);
 212:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_label_ext_t * label_ext = lv_obj_get_ext_attr(msgbox_ext->text);
 213:lvgl/src/lv_widgets/lv_msgbox.c **** 
 214:lvgl/src/lv_widgets/lv_msgbox.c ****     /*If text is NULL then refresh */
 215:lvgl/src/lv_widgets/lv_msgbox.c ****     if(fmt == NULL) {
 216:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_label_refr_text(msgbox_ext->text);
 217:lvgl/src/lv_widgets/lv_msgbox.c ****         return;
 218:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 219:lvgl/src/lv_widgets/lv_msgbox.c **** 
 220:lvgl/src/lv_widgets/lv_msgbox.c ****     if(label_ext->text != NULL) {
 221:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_mem_free(label_ext->text);
 222:lvgl/src/lv_widgets/lv_msgbox.c ****         label_ext->text = NULL;
 223:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 224:lvgl/src/lv_widgets/lv_msgbox.c **** 
 225:lvgl/src/lv_widgets/lv_msgbox.c ****     va_list args;
 226:lvgl/src/lv_widgets/lv_msgbox.c ****     va_start(args, fmt);
 227:lvgl/src/lv_widgets/lv_msgbox.c ****     label_ext->text = _lv_txt_set_text_vfmt(fmt, args);
 228:lvgl/src/lv_widgets/lv_msgbox.c ****     va_end(args);
 229:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_label_refr_text(msgbox_ext->text);
 230:lvgl/src/lv_widgets/lv_msgbox.c ****     mbox_realign(mbox);
 231:lvgl/src/lv_widgets/lv_msgbox.c **** }
 232:lvgl/src/lv_widgets/lv_msgbox.c **** 
 233:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 234:lvgl/src/lv_widgets/lv_msgbox.c ****  * Set animation duration
 235:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to a message box object
 236:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param anim_time animation length in milliseconds (0: no animation)
 237:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 238:lvgl/src/lv_widgets/lv_msgbox.c **** void lv_msgbox_set_anim_time(lv_obj_t * mbox, uint16_t anim_time)
 239:lvgl/src/lv_widgets/lv_msgbox.c **** {
 240:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 241:lvgl/src/lv_widgets/lv_msgbox.c **** 
 242:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_ANIMATION
 243:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 244:lvgl/src/lv_widgets/lv_msgbox.c ****     ext->anim_time      = anim_time;
 245:lvgl/src/lv_widgets/lv_msgbox.c **** #else
 246:lvgl/src/lv_widgets/lv_msgbox.c ****     (void)mbox;
 247:lvgl/src/lv_widgets/lv_msgbox.c ****     (void)anim_time;
 248:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 249:lvgl/src/lv_widgets/lv_msgbox.c **** }
 250:lvgl/src/lv_widgets/lv_msgbox.c **** 
 251:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 252:lvgl/src/lv_widgets/lv_msgbox.c ****  * Automatically delete the message box after a given time
 253:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to a message box object
 254:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param delay a time (in milliseconds) to wait before delete the message box
 255:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 256:lvgl/src/lv_widgets/lv_msgbox.c **** void lv_msgbox_start_auto_close(lv_obj_t * mbox, uint16_t delay)
 257:lvgl/src/lv_widgets/lv_msgbox.c **** {
 258:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
ARM GAS  D:\Temp\ccdKFHIm.s 			page 6


 259:lvgl/src/lv_widgets/lv_msgbox.c **** 
 260:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_ANIMATION
 261:lvgl/src/lv_widgets/lv_msgbox.c ****     if(lv_msgbox_get_anim_time(mbox) != 0) {
 262:lvgl/src/lv_widgets/lv_msgbox.c ****         /*Add shrinking animations*/
 263:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_t a;
 264:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_init(&a);
 265:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_var(&a, mbox);
 266:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)lv_obj_set_height);
 267:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_values(&a, lv_obj_get_height(mbox), 0);
 268:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_time(&a, lv_msgbox_get_anim_time(mbox));
 269:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_delay(&a, delay);
 270:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_start(&a);
 271:lvgl/src/lv_widgets/lv_msgbox.c **** 
 272:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)lv_obj_set_width);
 273:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_values(&a, lv_obj_get_width(mbox), 0);
 274:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_ready_cb(&a, lv_msgbox_close_ready_cb);
 275:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_start(&a);
 276:lvgl/src/lv_widgets/lv_msgbox.c **** 
 277:lvgl/src/lv_widgets/lv_msgbox.c ****         /*Disable fit to let shrinking work*/
 278:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_cont_set_fit(mbox, LV_FIT_NONE);
 279:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 280:lvgl/src/lv_widgets/lv_msgbox.c ****     else {
 281:lvgl/src/lv_widgets/lv_msgbox.c ****         /*Create an animation to delete the mbox `delay` ms later*/
 282:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_t a;
 283:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_init(&a);
 284:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_var(&a, mbox);
 285:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)NULL);
 286:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_values(&a, 0, 1);
 287:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_ready_cb(&a, lv_msgbox_close_ready_cb);
 288:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_time(&a, lv_msgbox_get_anim_time(mbox));
 289:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_delay(&a, delay);
 290:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_start(&a);
 291:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 292:lvgl/src/lv_widgets/lv_msgbox.c **** #else
 293:lvgl/src/lv_widgets/lv_msgbox.c ****     (void)delay; /*Unused*/
 294:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_obj_del(mbox);
 295:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 296:lvgl/src/lv_widgets/lv_msgbox.c **** }
 297:lvgl/src/lv_widgets/lv_msgbox.c **** 
 298:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 299:lvgl/src/lv_widgets/lv_msgbox.c ****  * Stop the auto. closing of message box
 300:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to a message box object
 301:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 302:lvgl/src/lv_widgets/lv_msgbox.c **** void lv_msgbox_stop_auto_close(lv_obj_t * mbox)
 303:lvgl/src/lv_widgets/lv_msgbox.c **** {
 304:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 305:lvgl/src/lv_widgets/lv_msgbox.c **** 
 306:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_ANIMATION
 307:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_anim_del(mbox, NULL);
 308:lvgl/src/lv_widgets/lv_msgbox.c **** #else
 309:lvgl/src/lv_widgets/lv_msgbox.c ****     (void)mbox; /*Unused*/
 310:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 311:lvgl/src/lv_widgets/lv_msgbox.c **** }
 312:lvgl/src/lv_widgets/lv_msgbox.c **** 
 313:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 314:lvgl/src/lv_widgets/lv_msgbox.c ****  * Set whether recoloring is enabled
 315:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to message box object
ARM GAS  D:\Temp\ccdKFHIm.s 			page 7


 316:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param en whether recoloring is enabled
 317:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 318:lvgl/src/lv_widgets/lv_msgbox.c **** void lv_msgbox_set_recolor(lv_obj_t * mbox, bool en)
 319:lvgl/src/lv_widgets/lv_msgbox.c **** {
 320:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 321:lvgl/src/lv_widgets/lv_msgbox.c **** 
 322:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 323:lvgl/src/lv_widgets/lv_msgbox.c **** 
 324:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext->btnm) lv_btnmatrix_set_recolor(ext->btnm, en);
 325:lvgl/src/lv_widgets/lv_msgbox.c **** }
 326:lvgl/src/lv_widgets/lv_msgbox.c **** 
 327:lvgl/src/lv_widgets/lv_msgbox.c **** /*=====================
 328:lvgl/src/lv_widgets/lv_msgbox.c ****  * Getter functions
 329:lvgl/src/lv_widgets/lv_msgbox.c ****  *====================*/
 330:lvgl/src/lv_widgets/lv_msgbox.c **** 
 331:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 332:lvgl/src/lv_widgets/lv_msgbox.c ****  * Get the text of the message box
 333:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to a message box object
 334:lvgl/src/lv_widgets/lv_msgbox.c ****  * @return pointer to the text of the message box
 335:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 336:lvgl/src/lv_widgets/lv_msgbox.c **** const char * lv_msgbox_get_text(const lv_obj_t * mbox)
 337:lvgl/src/lv_widgets/lv_msgbox.c **** {
 338:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 339:lvgl/src/lv_widgets/lv_msgbox.c **** 
 340:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 341:lvgl/src/lv_widgets/lv_msgbox.c **** 
 342:lvgl/src/lv_widgets/lv_msgbox.c ****     return lv_label_get_text(ext->text);
 343:lvgl/src/lv_widgets/lv_msgbox.c **** }
 344:lvgl/src/lv_widgets/lv_msgbox.c **** 
 345:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 346:lvgl/src/lv_widgets/lv_msgbox.c ****  * Get the index of the lastly "activated" button by the user (pressed, released etc)
 347:lvgl/src/lv_widgets/lv_msgbox.c ****  * Useful in the `event_cb`.
 348:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to message box object
 349:lvgl/src/lv_widgets/lv_msgbox.c ****  * @return index of the last released button (LV_BTNMATRIX_BTN_NONE: if unset)
 350:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 351:lvgl/src/lv_widgets/lv_msgbox.c **** uint16_t lv_msgbox_get_active_btn(lv_obj_t * mbox)
 352:lvgl/src/lv_widgets/lv_msgbox.c **** {
 353:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 354:lvgl/src/lv_widgets/lv_msgbox.c **** 
 355:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 356:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext->btnm == NULL) return LV_BTNMATRIX_BTN_NONE;
 357:lvgl/src/lv_widgets/lv_msgbox.c **** 
 358:lvgl/src/lv_widgets/lv_msgbox.c ****     uint16_t id = lv_btnmatrix_get_active_btn(ext->btnm);
 359:lvgl/src/lv_widgets/lv_msgbox.c ****     if(id == LV_BTNMATRIX_BTN_NONE) {
 360:lvgl/src/lv_widgets/lv_msgbox.c ****         id = lv_btnmatrix_get_focused_btn(ext->btnm);
 361:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 362:lvgl/src/lv_widgets/lv_msgbox.c **** 
 363:lvgl/src/lv_widgets/lv_msgbox.c ****     return id;
 364:lvgl/src/lv_widgets/lv_msgbox.c **** }
 365:lvgl/src/lv_widgets/lv_msgbox.c **** 
 366:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 367:lvgl/src/lv_widgets/lv_msgbox.c ****  * Get the text of the lastly "activated" button by the user (pressed, released etc)
 368:lvgl/src/lv_widgets/lv_msgbox.c ****  * Useful in the `event_cb`.
 369:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to message box object
 370:lvgl/src/lv_widgets/lv_msgbox.c ****  * @return text of the last released button (NULL: if unset)
 371:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 372:lvgl/src/lv_widgets/lv_msgbox.c **** const char * lv_msgbox_get_active_btn_text(lv_obj_t * mbox)
ARM GAS  D:\Temp\ccdKFHIm.s 			page 8


 373:lvgl/src/lv_widgets/lv_msgbox.c **** {
 374:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 375:lvgl/src/lv_widgets/lv_msgbox.c **** 
 376:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 377:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext->btnm)
 378:lvgl/src/lv_widgets/lv_msgbox.c ****         return lv_btnmatrix_get_active_btn_text(ext->btnm);
 379:lvgl/src/lv_widgets/lv_msgbox.c ****     else
 380:lvgl/src/lv_widgets/lv_msgbox.c ****         return NULL;
 381:lvgl/src/lv_widgets/lv_msgbox.c **** }
 382:lvgl/src/lv_widgets/lv_msgbox.c **** 
 383:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 384:lvgl/src/lv_widgets/lv_msgbox.c ****  * Get the animation duration (close animation time)
 385:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to a message box object
 386:lvgl/src/lv_widgets/lv_msgbox.c ****  * @return animation length in milliseconds (0: no animation)
 387:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 388:lvgl/src/lv_widgets/lv_msgbox.c **** uint16_t lv_msgbox_get_anim_time(const lv_obj_t * mbox)
 389:lvgl/src/lv_widgets/lv_msgbox.c **** {
 390:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 391:lvgl/src/lv_widgets/lv_msgbox.c **** 
 392:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_ANIMATION
 393:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 394:lvgl/src/lv_widgets/lv_msgbox.c ****     return ext->anim_time;
 395:lvgl/src/lv_widgets/lv_msgbox.c **** #else
 396:lvgl/src/lv_widgets/lv_msgbox.c ****     (void)mbox;
 397:lvgl/src/lv_widgets/lv_msgbox.c ****     return 0;
 398:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 399:lvgl/src/lv_widgets/lv_msgbox.c **** }
 400:lvgl/src/lv_widgets/lv_msgbox.c **** 
 401:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 402:lvgl/src/lv_widgets/lv_msgbox.c ****  * Get whether recoloring is enabled
 403:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to a message box object
 404:lvgl/src/lv_widgets/lv_msgbox.c ****  * @return whether recoloring is enabled
 405:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 406:lvgl/src/lv_widgets/lv_msgbox.c **** bool lv_msgbox_get_recolor(const lv_obj_t * mbox)
 407:lvgl/src/lv_widgets/lv_msgbox.c **** {
 408:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 409:lvgl/src/lv_widgets/lv_msgbox.c **** 
 410:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 411:lvgl/src/lv_widgets/lv_msgbox.c **** 
 412:lvgl/src/lv_widgets/lv_msgbox.c ****     if(!ext->btnm) return false;
 413:lvgl/src/lv_widgets/lv_msgbox.c **** 
 414:lvgl/src/lv_widgets/lv_msgbox.c ****     return lv_btnmatrix_get_recolor(ext->btnm);
 415:lvgl/src/lv_widgets/lv_msgbox.c **** }
 416:lvgl/src/lv_widgets/lv_msgbox.c **** 
 417:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 418:lvgl/src/lv_widgets/lv_msgbox.c ****  * Get message box button matrix
 419:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to a message box object
 420:lvgl/src/lv_widgets/lv_msgbox.c ****  * @return pointer to button matrix object
 421:lvgl/src/lv_widgets/lv_msgbox.c ****  * @remarks return value will be NULL unless `lv_msgbox_add_btns` has been already called
 422:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 423:lvgl/src/lv_widgets/lv_msgbox.c **** lv_obj_t * lv_msgbox_get_btnmatrix(lv_obj_t * mbox)
 424:lvgl/src/lv_widgets/lv_msgbox.c **** {
 425:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 426:lvgl/src/lv_widgets/lv_msgbox.c **** 
 427:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 428:lvgl/src/lv_widgets/lv_msgbox.c ****     return ext->btnm;
 429:lvgl/src/lv_widgets/lv_msgbox.c **** }
ARM GAS  D:\Temp\ccdKFHIm.s 			page 9


 430:lvgl/src/lv_widgets/lv_msgbox.c **** 
 431:lvgl/src/lv_widgets/lv_msgbox.c **** /**********************
 432:lvgl/src/lv_widgets/lv_msgbox.c ****  *   STATIC FUNCTIONS
 433:lvgl/src/lv_widgets/lv_msgbox.c ****  **********************/
 434:lvgl/src/lv_widgets/lv_msgbox.c **** 
 435:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 436:lvgl/src/lv_widgets/lv_msgbox.c ****  * Signal function of the message box
 437:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to a message box object
 438:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param sign a signal type from lv_signal_t enum
 439:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param param pointer to a signal specific variable
 440:lvgl/src/lv_widgets/lv_msgbox.c ****  * @return LV_RES_OK: the object is not deleted in the function; LV_RES_INV: the object is deleted
 441:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 442:lvgl/src/lv_widgets/lv_msgbox.c **** static lv_res_t lv_msgbox_signal(lv_obj_t * mbox, lv_signal_t sign, void * param)
 443:lvgl/src/lv_widgets/lv_msgbox.c **** {
 444:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_res_t res;
 445:lvgl/src/lv_widgets/lv_msgbox.c **** 
 446:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_GROUP
 447:lvgl/src/lv_widgets/lv_msgbox.c ****     /*Translate LV_KEY_UP/DOWN to LV_KEY_LEFT/RIGHT */
 448:lvgl/src/lv_widgets/lv_msgbox.c ****     char c_trans = 0;
 449:lvgl/src/lv_widgets/lv_msgbox.c ****     if(sign == LV_SIGNAL_CONTROL) {
 450:lvgl/src/lv_widgets/lv_msgbox.c ****         c_trans = *((char *)param);
 451:lvgl/src/lv_widgets/lv_msgbox.c ****         if(c_trans == LV_KEY_DOWN) c_trans = LV_KEY_LEFT;
 452:lvgl/src/lv_widgets/lv_msgbox.c ****         if(c_trans == LV_KEY_UP) c_trans = LV_KEY_RIGHT;
 453:lvgl/src/lv_widgets/lv_msgbox.c **** 
 454:lvgl/src/lv_widgets/lv_msgbox.c ****         param = &c_trans;
 455:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 456:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 457:lvgl/src/lv_widgets/lv_msgbox.c **** 
 458:lvgl/src/lv_widgets/lv_msgbox.c ****     if(sign == LV_SIGNAL_GET_STYLE) {
 459:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_get_style_info_t * info = param;
 460:lvgl/src/lv_widgets/lv_msgbox.c ****         info->result = lv_msgbox_get_style(mbox, info->part);
 461:lvgl/src/lv_widgets/lv_msgbox.c ****         if(info->result != NULL) return LV_RES_OK;
 462:lvgl/src/lv_widgets/lv_msgbox.c ****         else return ancestor_signal(mbox, sign, param);
 463:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 464:lvgl/src/lv_widgets/lv_msgbox.c ****     else if(sign == LV_SIGNAL_GET_STATE_DSC) {
 465:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_get_state_info_t * info = param;
 466:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 467:lvgl/src/lv_widgets/lv_msgbox.c ****         if(ext->btnm && info->part == LV_MSGBOX_PART_BTN_BG) {
 468:lvgl/src/lv_widgets/lv_msgbox.c ****             info->result = lv_obj_get_state(ext->btnm, LV_BTNMATRIX_PART_BG);
 469:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 470:lvgl/src/lv_widgets/lv_msgbox.c ****         else if(ext->btnm && info->part == LV_MSGBOX_PART_BTN) {
 471:lvgl/src/lv_widgets/lv_msgbox.c ****             info->result = lv_obj_get_state(ext->btnm, LV_BTNMATRIX_PART_BTN);
 472:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 473:lvgl/src/lv_widgets/lv_msgbox.c ****         return LV_RES_OK;
 474:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 475:lvgl/src/lv_widgets/lv_msgbox.c **** 
 476:lvgl/src/lv_widgets/lv_msgbox.c ****     /* Include the ancient signal function */
 477:lvgl/src/lv_widgets/lv_msgbox.c ****     res = ancestor_signal(mbox, sign, param);
 478:lvgl/src/lv_widgets/lv_msgbox.c ****     if(res != LV_RES_OK) return res;
 479:lvgl/src/lv_widgets/lv_msgbox.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 480:lvgl/src/lv_widgets/lv_msgbox.c **** 
 481:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 482:lvgl/src/lv_widgets/lv_msgbox.c ****     if(sign == LV_SIGNAL_COORD_CHG) {
 483:lvgl/src/lv_widgets/lv_msgbox.c ****         if(lv_obj_get_width(mbox) != lv_area_get_width(param)) {
 484:lvgl/src/lv_widgets/lv_msgbox.c ****             mbox_realign(mbox);
 485:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 486:lvgl/src/lv_widgets/lv_msgbox.c ****     }
ARM GAS  D:\Temp\ccdKFHIm.s 			page 10


 487:lvgl/src/lv_widgets/lv_msgbox.c ****     else if(sign == LV_SIGNAL_STYLE_CHG) {
 488:lvgl/src/lv_widgets/lv_msgbox.c ****         mbox_realign(mbox);
 489:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 490:lvgl/src/lv_widgets/lv_msgbox.c ****     else if(sign == LV_SIGNAL_RELEASED) {
 491:lvgl/src/lv_widgets/lv_msgbox.c ****         if(ext->btnm) {
 492:lvgl/src/lv_widgets/lv_msgbox.c ****             uint32_t btn_id = lv_btnmatrix_get_focused_btn(ext->btnm);
 493:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btn_id != LV_BTNMATRIX_BTN_NONE) lv_event_send(mbox, LV_EVENT_VALUE_CHANGED, &btn_id
 494:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 495:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 496:lvgl/src/lv_widgets/lv_msgbox.c ****     else if(
 497:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_GROUP
 498:lvgl/src/lv_widgets/lv_msgbox.c ****         sign == LV_SIGNAL_CONTROL || sign == LV_SIGNAL_GET_EDITABLE ||
 499:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 500:lvgl/src/lv_widgets/lv_msgbox.c ****         sign == LV_SIGNAL_FOCUS || sign == LV_SIGNAL_DEFOCUS) {
 501:lvgl/src/lv_widgets/lv_msgbox.c ****         if(ext->btnm) {
 502:lvgl/src/lv_widgets/lv_msgbox.c ****             ext->btnm->signal_cb(ext->btnm, sign, param);
 503:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 504:lvgl/src/lv_widgets/lv_msgbox.c **** 
 505:lvgl/src/lv_widgets/lv_msgbox.c ****         /* The button matrix with ENCODER input supposes it's in a group but in this case it isn't
 506:lvgl/src/lv_widgets/lv_msgbox.c ****          * (Only the message box's container) So so some actions here instead*/
 507:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_GROUP
 508:lvgl/src/lv_widgets/lv_msgbox.c ****         if(sign == LV_SIGNAL_FOCUS) {
 509:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_indev_t * indev         = lv_indev_get_act();
 510:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_indev_type_t indev_type = lv_indev_get_type(indev);
 511:lvgl/src/lv_widgets/lv_msgbox.c ****             if(indev_type == LV_INDEV_TYPE_ENCODER) {
 512:lvgl/src/lv_widgets/lv_msgbox.c ****                 /*In navigation mode don't select any button but in edit mode select the fist*/
 513:lvgl/src/lv_widgets/lv_msgbox.c ****                 if(lv_group_get_editing(lv_obj_get_group(mbox))) lv_btnmatrix_set_focused_btn(ext->
 514:lvgl/src/lv_widgets/lv_msgbox.c ****                 else lv_btnmatrix_set_focused_btn(ext->btnm, LV_BTNMATRIX_BTN_NONE);
 515:lvgl/src/lv_widgets/lv_msgbox.c ****             }
 516:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 517:lvgl/src/lv_widgets/lv_msgbox.c **** 
 518:lvgl/src/lv_widgets/lv_msgbox.c ****         if(ext->btnm && (sign == LV_SIGNAL_FOCUS || sign == LV_SIGNAL_DEFOCUS)) {
 519:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_state_t state = lv_obj_get_state(mbox, LV_MSGBOX_PART_BG);
 520:lvgl/src/lv_widgets/lv_msgbox.c ****             if(state & LV_STATE_FOCUSED) {
 521:lvgl/src/lv_widgets/lv_msgbox.c ****                 lv_obj_set_state(ext->btnm, LV_STATE_FOCUSED);
 522:lvgl/src/lv_widgets/lv_msgbox.c ****             }
 523:lvgl/src/lv_widgets/lv_msgbox.c ****             else {
 524:lvgl/src/lv_widgets/lv_msgbox.c ****                 lv_obj_clear_state(ext->btnm, LV_STATE_FOCUSED);
 525:lvgl/src/lv_widgets/lv_msgbox.c **** 
 526:lvgl/src/lv_widgets/lv_msgbox.c ****             }
 527:lvgl/src/lv_widgets/lv_msgbox.c ****             if(state & LV_STATE_EDITED) {
 528:lvgl/src/lv_widgets/lv_msgbox.c ****                 lv_obj_set_state(ext->btnm, LV_STATE_EDITED);
 529:lvgl/src/lv_widgets/lv_msgbox.c ****             }
 530:lvgl/src/lv_widgets/lv_msgbox.c ****             else {
 531:lvgl/src/lv_widgets/lv_msgbox.c ****                 lv_obj_clear_state(ext->btnm, LV_STATE_EDITED);
 532:lvgl/src/lv_widgets/lv_msgbox.c **** 
 533:lvgl/src/lv_widgets/lv_msgbox.c ****             }
 534:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 535:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 536:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 537:lvgl/src/lv_widgets/lv_msgbox.c **** 
 538:lvgl/src/lv_widgets/lv_msgbox.c ****     return res;
 539:lvgl/src/lv_widgets/lv_msgbox.c **** }
 540:lvgl/src/lv_widgets/lv_msgbox.c **** 
 541:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 542:lvgl/src/lv_widgets/lv_msgbox.c ****  * Get the style descriptor of a part of the object
 543:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer the object
ARM GAS  D:\Temp\ccdKFHIm.s 			page 11


 544:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param part the part from `lv_msgbox_part_t`. (LV_MSGBOX_PART_...)
 545:lvgl/src/lv_widgets/lv_msgbox.c ****  * @return pointer to the style descriptor of the specified part
 546:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 547:lvgl/src/lv_widgets/lv_msgbox.c **** static lv_style_list_t * lv_msgbox_get_style(lv_obj_t * mbox, uint8_t part)
 548:lvgl/src/lv_widgets/lv_msgbox.c **** {
 549:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 550:lvgl/src/lv_widgets/lv_msgbox.c **** 
 551:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 552:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_style_list_t * style_dsc_p;
 553:lvgl/src/lv_widgets/lv_msgbox.c **** 
 554:lvgl/src/lv_widgets/lv_msgbox.c ****     switch(part) {
 555:lvgl/src/lv_widgets/lv_msgbox.c ****         case LV_MSGBOX_PART_BG:
 556:lvgl/src/lv_widgets/lv_msgbox.c ****             style_dsc_p = &mbox->style_list;
 557:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 558:lvgl/src/lv_widgets/lv_msgbox.c ****         case LV_MSGBOX_PART_BTN_BG:
 559:lvgl/src/lv_widgets/lv_msgbox.c ****             style_dsc_p = ext->btnm ? lv_obj_get_style_list(ext->btnm, LV_BTNMATRIX_PART_BG) : NULL
 560:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 561:lvgl/src/lv_widgets/lv_msgbox.c ****         case LV_MSGBOX_PART_BTN:
 562:lvgl/src/lv_widgets/lv_msgbox.c ****             style_dsc_p = ext->btnm ? lv_obj_get_style_list(ext->btnm, LV_BTNMATRIX_PART_BTN) : NUL
 563:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 564:lvgl/src/lv_widgets/lv_msgbox.c ****         default:
 565:lvgl/src/lv_widgets/lv_msgbox.c ****             style_dsc_p = NULL;
 566:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 567:lvgl/src/lv_widgets/lv_msgbox.c **** 
 568:lvgl/src/lv_widgets/lv_msgbox.c ****     return style_dsc_p;
 569:lvgl/src/lv_widgets/lv_msgbox.c **** }
 570:lvgl/src/lv_widgets/lv_msgbox.c **** 
 571:lvgl/src/lv_widgets/lv_msgbox.c **** /**
 572:lvgl/src/lv_widgets/lv_msgbox.c ****  * Resize the button holder to fit
 573:lvgl/src/lv_widgets/lv_msgbox.c ****  * @param mbox pointer to message box object
 574:lvgl/src/lv_widgets/lv_msgbox.c ****  */
 575:lvgl/src/lv_widgets/lv_msgbox.c **** static void mbox_realign(lv_obj_t * mbox)
 576:lvgl/src/lv_widgets/lv_msgbox.c **** {
 577:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 578:lvgl/src/lv_widgets/lv_msgbox.c **** 
 579:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_coord_t w = lv_obj_get_width_fit(mbox);
 580:lvgl/src/lv_widgets/lv_msgbox.c **** 
 581:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext->text) {
 582:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_set_width(ext->text, w);
 583:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 584:lvgl/src/lv_widgets/lv_msgbox.c **** 
 585:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext->btnm) {
 586:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t bg_top = lv_obj_get_style_pad_top(mbox, LV_MSGBOX_PART_BTN_BG);
 587:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t bg_bottom = lv_obj_get_style_pad_bottom(mbox, LV_MSGBOX_PART_BTN_BG);
 588:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t bg_inner = lv_obj_get_style_pad_inner(mbox, LV_MSGBOX_PART_BTN_BG);
 589:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t btn_top = lv_obj_get_style_pad_top(mbox, LV_MSGBOX_PART_BTN);
 590:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t btn_bottom = lv_obj_get_style_pad_bottom(mbox, LV_MSGBOX_PART_BTN);
 591:lvgl/src/lv_widgets/lv_msgbox.c ****         const lv_font_t * font = lv_obj_get_style_text_font(mbox, LV_MSGBOX_PART_BTN);
 592:lvgl/src/lv_widgets/lv_msgbox.c **** 
 593:lvgl/src/lv_widgets/lv_msgbox.c ****         uint16_t btnm_lines = 1;
 594:lvgl/src/lv_widgets/lv_msgbox.c ****         const char ** btnm_map = lv_btnmatrix_get_map_array(ext->btnm);
 595:lvgl/src/lv_widgets/lv_msgbox.c ****         uint16_t i;
 596:lvgl/src/lv_widgets/lv_msgbox.c ****         for(i = 0; btnm_map[i][0] != '\0'; i++) {
 597:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btnm_map[i][0] == '\n') btnm_lines++;
 598:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 599:lvgl/src/lv_widgets/lv_msgbox.c **** 
 600:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_coord_t font_h = lv_font_get_line_height(font);
ARM GAS  D:\Temp\ccdKFHIm.s 			page 12


 601:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_coord_t btn_h = font_h + btn_top + btn_bottom;
 602:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_set_size(ext->btnm, w, btn_h * btnm_lines + bg_inner * (btnm_lines - 1) + bg_top + b
 603:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 604:lvgl/src/lv_widgets/lv_msgbox.c **** }
 605:lvgl/src/lv_widgets/lv_msgbox.c **** 
 606:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_ANIMATION
 607:lvgl/src/lv_widgets/lv_msgbox.c **** static void lv_msgbox_close_ready_cb(lv_anim_t * a)
 608:lvgl/src/lv_widgets/lv_msgbox.c **** {
  29              		.loc 1 608 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 608 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 609:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_obj_del(a->var);
  39              		.loc 1 609 5 is_stmt 1 view .LVU2
  40 0002 0068     		ldr	r0, [r0]
  41              	.LVL1:
  42              		.loc 1 609 5 is_stmt 0 view .LVU3
  43 0004 FFF7FEFF 		bl	lv_obj_del
  44              	.LVL2:
 610:lvgl/src/lv_widgets/lv_msgbox.c **** }
  45              		.loc 1 610 1 view .LVU4
  46 0008 08BD     		pop	{r3, pc}
  47              		.cfi_endproc
  48              	.LFE491:
  50              		.section	.text.lv_msgbox_get_style,"ax",%progbits
  51              		.align	1
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv4-sp-d16
  57              	lv_msgbox_get_style:
  58              	.LVL3:
  59              	.LFB489:
 548:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
  60              		.loc 1 548 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
 548:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
  64              		.loc 1 548 1 is_stmt 0 view .LVU6
  65 0000 38B5     		push	{r3, r4, r5, lr}
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 16
  68              		.cfi_offset 3, -16
  69              		.cfi_offset 4, -12
  70              		.cfi_offset 5, -8
  71              		.cfi_offset 14, -4
  72 0002 0446     		mov	r4, r0
  73 0004 0D46     		mov	r5, r1
 549:lvgl/src/lv_widgets/lv_msgbox.c **** 
  74              		.loc 1 549 5 is_stmt 1 view .LVU7
ARM GAS  D:\Temp\ccdKFHIm.s 			page 13


 549:lvgl/src/lv_widgets/lv_msgbox.c **** 
  75              		.loc 1 549 5 view .LVU8
  76 0006 FFF7FEFF 		bl	lv_debug_check_null
  77              	.LVL4:
 549:lvgl/src/lv_widgets/lv_msgbox.c **** 
  78              		.loc 1 549 5 is_stmt 0 view .LVU9
  79 000a 28B9     		cbnz	r0, .L4
 549:lvgl/src/lv_widgets/lv_msgbox.c **** 
  80              		.loc 1 549 5 is_stmt 1 discriminator 1 view .LVU10
 549:lvgl/src/lv_widgets/lv_msgbox.c **** 
  81              		.loc 1 549 5 discriminator 1 view .LVU11
  82 000c 2246     		mov	r2, r4
  83 000e 0023     		movs	r3, #0
  84 0010 1048     		ldr	r0, .L14
  85 0012 FFF7FEFF 		bl	lv_debug_log_error
  86              	.LVL5:
  87              	.L5:
 549:lvgl/src/lv_widgets/lv_msgbox.c **** 
  88              		.loc 1 549 5 discriminator 1 view .LVU12
 549:lvgl/src/lv_widgets/lv_msgbox.c **** 
  89              		.loc 1 549 5 discriminator 1 view .LVU13
  90 0016 FEE7     		b	.L5
  91              	.L4:
 549:lvgl/src/lv_widgets/lv_msgbox.c **** 
  92              		.loc 1 549 38 discriminator 2 view .LVU14
 551:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_style_list_t * style_dsc_p;
  93              		.loc 1 551 5 discriminator 2 view .LVU15
 551:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_style_list_t * style_dsc_p;
  94              		.loc 1 551 29 is_stmt 0 discriminator 2 view .LVU16
  95 0018 2046     		mov	r0, r4
  96 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
  97              	.LVL6:
 552:lvgl/src/lv_widgets/lv_msgbox.c **** 
  98              		.loc 1 552 5 is_stmt 1 discriminator 2 view .LVU17
 554:lvgl/src/lv_widgets/lv_msgbox.c ****         case LV_MSGBOX_PART_BG:
  99              		.loc 1 554 5 discriminator 2 view .LVU18
 100 001e 402D     		cmp	r5, #64
 101 0020 07D0     		beq	.L6
 554:lvgl/src/lv_widgets/lv_msgbox.c ****         case LV_MSGBOX_PART_BG:
 102              		.loc 1 554 5 is_stmt 0 view .LVU19
 103 0022 412D     		cmp	r5, #65
 104 0024 0BD0     		beq	.L7
 105 0026 0DB1     		cbz	r5, .L13
 565:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 106              		.loc 1 565 25 view .LVU20
 107 0028 0020     		movs	r0, #0
 108              	.LVL7:
 109              	.L3:
 569:lvgl/src/lv_widgets/lv_msgbox.c **** 
 110              		.loc 1 569 1 view .LVU21
 111 002a 38BD     		pop	{r3, r4, r5, pc}
 112              	.LVL8:
 113              	.L13:
 556:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 114              		.loc 1 556 13 is_stmt 1 view .LVU22
 556:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 115              		.loc 1 556 25 is_stmt 0 view .LVU23
ARM GAS  D:\Temp\ccdKFHIm.s 			page 14


 116 002c 04F12800 		add	r0, r4, #40
 117              	.LVL9:
 557:lvgl/src/lv_widgets/lv_msgbox.c ****         case LV_MSGBOX_PART_BTN_BG:
 118              		.loc 1 557 13 is_stmt 1 view .LVU24
 119 0030 FBE7     		b	.L3
 120              	.LVL10:
 121              	.L6:
 559:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 122              		.loc 1 559 13 view .LVU25
 559:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 123              		.loc 1 559 30 is_stmt 0 view .LVU26
 124 0032 8068     		ldr	r0, [r0, #8]
 125              	.LVL11:
 559:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 126              		.loc 1 559 94 view .LVU27
 127 0034 48B1     		cbz	r0, .L10
 559:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 128              		.loc 1 559 39 discriminator 1 view .LVU28
 129 0036 0021     		movs	r1, #0
 130 0038 FFF7FEFF 		bl	lv_obj_get_style_list
 131              	.LVL12:
 132 003c F5E7     		b	.L3
 133              	.LVL13:
 134              	.L7:
 562:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 135              		.loc 1 562 13 is_stmt 1 view .LVU29
 562:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 136              		.loc 1 562 30 is_stmt 0 view .LVU30
 137 003e 8068     		ldr	r0, [r0, #8]
 138              	.LVL14:
 562:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 139              		.loc 1 562 95 view .LVU31
 140 0040 28B1     		cbz	r0, .L11
 562:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 141              		.loc 1 562 39 discriminator 1 view .LVU32
 142 0042 0121     		movs	r1, #1
 143 0044 FFF7FEFF 		bl	lv_obj_get_style_list
 144              	.LVL15:
 145 0048 EFE7     		b	.L3
 146              	.L10:
 559:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 147              		.loc 1 559 94 view .LVU33
 148 004a 0020     		movs	r0, #0
 149 004c EDE7     		b	.L3
 150              	.L11:
 562:lvgl/src/lv_widgets/lv_msgbox.c ****             break;
 151              		.loc 1 562 95 view .LVU34
 152 004e 0020     		movs	r0, #0
 153              	.LVL16:
 568:lvgl/src/lv_widgets/lv_msgbox.c **** }
 154              		.loc 1 568 5 is_stmt 1 view .LVU35
 568:lvgl/src/lv_widgets/lv_msgbox.c **** }
 155              		.loc 1 568 12 is_stmt 0 view .LVU36
 156 0050 EBE7     		b	.L3
 157              	.L15:
 158 0052 00BF     		.align	2
 159              	.L14:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 15


 160 0054 00000000 		.word	.LC0
 161              		.cfi_endproc
 162              	.LFE489:
 164              		.section	.text.mbox_realign,"ax",%progbits
 165              		.align	1
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	mbox_realign:
 172              	.LVL17:
 173              	.LFB490:
 576:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 174              		.loc 1 576 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 576:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 178              		.loc 1 576 1 is_stmt 0 view .LVU38
 179 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 180              	.LCFI2:
 181              		.cfi_def_cfa_offset 40
 182              		.cfi_offset 3, -40
 183              		.cfi_offset 4, -36
 184              		.cfi_offset 5, -32
 185              		.cfi_offset 6, -28
 186              		.cfi_offset 7, -24
 187              		.cfi_offset 8, -20
 188              		.cfi_offset 9, -16
 189              		.cfi_offset 10, -12
 190              		.cfi_offset 11, -8
 191              		.cfi_offset 14, -4
 192 0004 8346     		mov	fp, r0
 577:lvgl/src/lv_widgets/lv_msgbox.c **** 
 193              		.loc 1 577 5 is_stmt 1 view .LVU39
 577:lvgl/src/lv_widgets/lv_msgbox.c **** 
 194              		.loc 1 577 29 is_stmt 0 view .LVU40
 195 0006 FFF7FEFF 		bl	lv_obj_get_ext_attr
 196              	.LVL18:
 577:lvgl/src/lv_widgets/lv_msgbox.c **** 
 197              		.loc 1 577 29 view .LVU41
 198 000a 0446     		mov	r4, r0
 199              	.LVL19:
 579:lvgl/src/lv_widgets/lv_msgbox.c **** 
 200              		.loc 1 579 5 is_stmt 1 view .LVU42
 579:lvgl/src/lv_widgets/lv_msgbox.c **** 
 201              		.loc 1 579 20 is_stmt 0 view .LVU43
 202 000c 5846     		mov	r0, fp
 203              	.LVL20:
 579:lvgl/src/lv_widgets/lv_msgbox.c **** 
 204              		.loc 1 579 20 view .LVU44
 205 000e FFF7FEFF 		bl	lv_obj_get_width_fit
 206              	.LVL21:
 207 0012 0546     		mov	r5, r0
 208              	.LVL22:
 581:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_set_width(ext->text, w);
 209              		.loc 1 581 5 is_stmt 1 view .LVU45
ARM GAS  D:\Temp\ccdKFHIm.s 			page 16


 581:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_set_width(ext->text, w);
 210              		.loc 1 581 11 is_stmt 0 view .LVU46
 211 0014 6068     		ldr	r0, [r4, #4]
 581:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_set_width(ext->text, w);
 212              		.loc 1 581 7 view .LVU47
 213 0016 10B1     		cbz	r0, .L17
 582:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 214              		.loc 1 582 9 is_stmt 1 view .LVU48
 215 0018 2946     		mov	r1, r5
 216 001a FFF7FEFF 		bl	lv_obj_set_width
 217              	.LVL23:
 218              	.L17:
 585:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t bg_top = lv_obj_get_style_pad_top(mbox, LV_MSGBOX_PART_BTN_BG);
 219              		.loc 1 585 5 view .LVU49
 585:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t bg_top = lv_obj_get_style_pad_top(mbox, LV_MSGBOX_PART_BTN_BG);
 220              		.loc 1 585 11 is_stmt 0 view .LVU50
 221 001e A368     		ldr	r3, [r4, #8]
 585:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t bg_top = lv_obj_get_style_pad_top(mbox, LV_MSGBOX_PART_BTN_BG);
 222              		.loc 1 585 7 view .LVU51
 223 0020 002B     		cmp	r3, #0
 224 0022 48D0     		beq	.L16
 225              	.LBB60:
 586:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t bg_bottom = lv_obj_get_style_pad_bottom(mbox, LV_MSGBOX_PART_BTN_BG);
 226              		.loc 1 586 9 is_stmt 1 view .LVU52
 227              	.LVL24:
 228              	.LBB61:
 229              	.LBI61:
 230              		.file 2 "lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h"
   1:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   2:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
   3:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * @file lv_obj_style_dec.h
   4:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
   5:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
   6:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   7:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifndef LV_OBJ_STYLE_DEC_H
   8:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define LV_OBJ_STYLE_DEC_H
   9:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  10:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifdef __cplusplus
  11:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** extern "C" {
  12:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #endif
  13:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  14:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /*********************
  15:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      DEFINES
  16:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *********************/
  17:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  18:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
  19:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Macro to declare the most important style set/get API functions.
  20:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  21:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value of a style property from an object in the object's current state
  22:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -----------------------------------------------------------------------------
  23:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Get the value of a style property from an object in the object's current state.
  24:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Transition animation is taken into account.
  25:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not set in the object's styles check the parent(s) if the property can be 
  26:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If still not found return a default value.
  27:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  28:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t w = lv_obj_get_style_border_width(btn1, LV_BTN_PART_MAIN);`
  29:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
ARM GAS  D:\Temp\ccdKFHIm.s 			page 17


  30:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a local style property for an object in a given state
  31:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------------------------
  32:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  33:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_set_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, 2);`
  34:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  35:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get a local style property's value of an object in a given state
  36:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ----------------------------------------------------------------
  37:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Return the best matching property in the given state.
  38:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - E.g. if `state` parameter is LV_STATE_PRESSED | LV_STATE_CHECKED` but the property defined on
  39:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    `LV_STATE_PRESSED` and `LV_STATE_DEFAULT` the best matching state is `LV_STATE_PRESSED`
  40:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    (because it has higher precedence) and it will be returned.
  41:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not found even in `LV_STATE_DEFAULT` `-1` is returned.
  42:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  43:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `//Type of result should be lv_style_int_t/lv_opa_t/lv_color_t/const void * according to th
  44:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t result;`
  45:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_get_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, &result);`
  46:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  47:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  48:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value from a style in a given state
  49:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -------------------------------------------
  50:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - The same rules applies to the return value then for "lv_obj_get_style_local_...()" above
  51:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  52:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `int16_t weight = lv_style_get_border_width(&style1, LV_STATE_PRESSED, &result);`
  53:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  54:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  55:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a value in a style in a given state
  56:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------
  57:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  58:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_set_border_width(&style1, LV_STATE_PRESSED, 2);`
  59:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
  60:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  61:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  62:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  63:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  64:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return (value_type) _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);       
  65:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  66:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  67:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  68:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  69:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  70:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);                    
  71:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  72:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  73:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_scalar(prop_name, func_name, value_type, style_type)                  
  74:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  75:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  76:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  77:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  78:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  79:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_nonscalar(prop_name, func_name, value_type, style_type)               
  80:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  81:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  82:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  83:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  84:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  85:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  86:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
ARM GAS  D:\Temp\ccdKFHIm.s 			page 18


  87:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  88:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  89:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  90:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  91:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  92:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  93:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  94:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  95:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  96:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  97:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _LV_OBJ_STYLE_SET_GET_DECLARE(prop_name, func_name, value_type, style_type, scalar)        
  98:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_GET_STYLE_##scalar(prop_name, func_name, value_type, style_type)                          
  99:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_LOCAL_##scalar(prop_name, func_name, value_type, style_type)                    
 100:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_##scalar(prop_name, func_name, value_type, style_type)
 101:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
 102:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(RADIUS, radius, lv_style_int_t, _int, scalar)
 103:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 104:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 105:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_WIDTH, transform_width, lv_style_int_t, _int, scalar)
 106:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_HEIGHT, transform_height, lv_style_int_t, _int, scalar)
 107:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ANGLE, transform_angle, lv_style_int_t, _int, scalar)
 108:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ZOOM, transform_zoom, lv_style_int_t, _int, scalar)
 109:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OPA_SCALE, opa_scale, lv_opa_t, _opa, scalar)
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_TOP, pad_top, lv_style_int_t, _int, scalar)
 231              		.loc 2 110 1 view .LVU53
 232              	.LBB62:
 233              		.loc 2 110 1 view .LVU54
 234 0024 1022     		movs	r2, #16
 235 0026 4021     		movs	r1, #64
 236 0028 5846     		mov	r0, fp
 237 002a FFF7FEFF 		bl	_lv_obj_get_style_int
 238              	.LVL25:
 239 002e 0746     		mov	r7, r0
 240              	.LVL26:
 241              		.loc 2 110 1 is_stmt 0 view .LVU55
 242              	.LBE62:
 243              	.LBE61:
 587:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t bg_inner = lv_obj_get_style_pad_inner(mbox, LV_MSGBOX_PART_BTN_BG);
 244              		.loc 1 587 9 is_stmt 1 view .LVU56
 245              	.LBB63:
 246              	.LBI63:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 247              		.loc 2 111 1 view .LVU57
 248              	.LBB64:
 249              		.loc 2 111 1 view .LVU58
 250 0030 1122     		movs	r2, #17
 251 0032 4021     		movs	r1, #64
 252 0034 5846     		mov	r0, fp
 253 0036 FFF7FEFF 		bl	_lv_obj_get_style_int
 254              	.LVL27:
 255 003a 0646     		mov	r6, r0
 256              	.LVL28:
 257              		.loc 2 111 1 is_stmt 0 view .LVU59
 258              	.LBE64:
 259              	.LBE63:
 588:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t btn_top = lv_obj_get_style_pad_top(mbox, LV_MSGBOX_PART_BTN);
 260              		.loc 1 588 9 is_stmt 1 view .LVU60
ARM GAS  D:\Temp\ccdKFHIm.s 			page 19


 261              	.LBB65:
 262              	.LBI65:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 263              		.loc 2 114 1 view .LVU61
 264              	.LBB66:
 265              		.loc 2 114 1 view .LVU62
 266 003c 1422     		movs	r2, #20
 267 003e 4021     		movs	r1, #64
 268 0040 5846     		mov	r0, fp
 269 0042 FFF7FEFF 		bl	_lv_obj_get_style_int
 270              	.LVL29:
 271 0046 8046     		mov	r8, r0
 272              	.LVL30:
 273              		.loc 2 114 1 is_stmt 0 view .LVU63
 274              	.LBE66:
 275              	.LBE65:
 589:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_style_int_t btn_bottom = lv_obj_get_style_pad_bottom(mbox, LV_MSGBOX_PART_BTN);
 276              		.loc 1 589 9 is_stmt 1 view .LVU64
 277              	.LBB67:
 278              	.LBI67:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 279              		.loc 2 110 1 view .LVU65
 280              	.LBB68:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 281              		.loc 2 110 1 view .LVU66
 282 0048 1022     		movs	r2, #16
 283 004a 4121     		movs	r1, #65
 284 004c 5846     		mov	r0, fp
 285 004e FFF7FEFF 		bl	_lv_obj_get_style_int
 286              	.LVL31:
 287 0052 8246     		mov	r10, r0
 288              	.LVL32:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 289              		.loc 2 110 1 is_stmt 0 view .LVU67
 290              	.LBE68:
 291              	.LBE67:
 590:lvgl/src/lv_widgets/lv_msgbox.c ****         const lv_font_t * font = lv_obj_get_style_text_font(mbox, LV_MSGBOX_PART_BTN);
 292              		.loc 1 590 9 is_stmt 1 view .LVU68
 293              	.LBB69:
 294              	.LBI69:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 295              		.loc 2 111 1 view .LVU69
 296              	.LBB70:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 297              		.loc 2 111 1 view .LVU70
 298 0054 1122     		movs	r2, #17
 299 0056 4121     		movs	r1, #65
 300 0058 5846     		mov	r0, fp
 301 005a FFF7FEFF 		bl	_lv_obj_get_style_int
 302              	.LVL33:
 303 005e 8146     		mov	r9, r0
 304              	.LVL34:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 305              		.loc 2 111 1 is_stmt 0 view .LVU71
 306              	.LBE70:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 20


 307              	.LBE69:
 591:lvgl/src/lv_widgets/lv_msgbox.c **** 
 308              		.loc 1 591 9 is_stmt 1 view .LVU72
 309              	.LBB71:
 310              	.LBI71:
 115:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 116:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_BOTTOM, margin_bottom, lv_style_int_t, _int, scalar)
 117:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_LEFT, margin_left, lv_style_int_t, _int, scalar)
 118:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_RIGHT, margin_right, lv_style_int_t, _int, scalar)
 119:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_BLEND_MODE, bg_blend_mode, lv_blend_mode_t, _int, scalar)
 120:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_MAIN_STOP, bg_main_stop, lv_style_int_t, _int, scalar)
 121:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_STOP, bg_grad_stop, lv_style_int_t, _int, scalar)
 122:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_DIR, bg_grad_dir, lv_grad_dir_t, _int, scalar)
 123:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_COLOR, bg_color, lv_color_t, _color, nonscalar)
 124:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_COLOR, bg_grad_color, lv_color_t, _color, nonscalar)
 125:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_OPA, bg_opa, lv_opa_t, _opa, scalar)
 126:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_WIDTH, border_width, lv_style_int_t, _int, scalar)
 127:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_SIDE, border_side, lv_border_side_t, _int, scalar)
 128:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_BLEND_MODE, border_blend_mode, lv_blend_mode_t, _int, scalar)
 129:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_POST, border_post, bool, _int, scalar)
 130:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_COLOR, border_color, lv_color_t, _color, nonscalar)
 131:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_OPA, border_opa, lv_opa_t, _opa, scalar)
 132:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_WIDTH, outline_width, lv_style_int_t, _int, scalar)
 133:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_PAD, outline_pad, lv_style_int_t, _int, scalar)
 134:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_BLEND_MODE, outline_blend_mode, lv_blend_mode_t, _int, scalar
 135:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_COLOR, outline_color, lv_color_t, _color, nonscalar)
 136:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_OPA, outline_opa, lv_opa_t, _opa, scalar)
 137:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_WIDTH, shadow_width, lv_style_int_t, _int, scalar)
 138:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_X, shadow_ofs_x, lv_style_int_t, _int, scalar)
 139:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_Y, shadow_ofs_y, lv_style_int_t, _int, scalar)
 140:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_SPREAD, shadow_spread, lv_style_int_t, _int, scalar)
 141:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_BLEND_MODE, shadow_blend_mode, lv_blend_mode_t, _int, scalar)
 142:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_COLOR, shadow_color, lv_color_t, _color, nonscalar)
 143:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OPA, shadow_opa, lv_opa_t, _opa, scalar)
 144:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_REPEAT, pattern_repeat, bool, _int, scalar)
 145:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_BLEND_MODE, pattern_blend_mode, lv_blend_mode_t, _int, scalar
 146:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR, pattern_recolor, lv_color_t, _color, nonscalar)
 147:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_OPA, pattern_opa, lv_opa_t, _opa, scalar)
 148:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR_OPA, pattern_recolor_opa, lv_opa_t, _opa, scalar)
 149:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_IMAGE, pattern_image, const void *, _ptr, scalar)
 150:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LETTER_SPACE, value_letter_space, lv_style_int_t, _int, scalar)
 151:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LINE_SPACE, value_line_space, lv_style_int_t, _int, scalar)
 152:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_BLEND_MODE, value_blend_mode, lv_blend_mode_t, _int, scalar)
 153:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_X, value_ofs_x, lv_style_int_t, _int, scalar)
 154:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_Y, value_ofs_y, lv_style_int_t, _int, scalar)
 155:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_ALIGN, value_align, lv_align_t, _int, scalar)
 156:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_COLOR, value_color, lv_color_t, _color, nonscalar)
 157:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OPA, value_opa, lv_opa_t, _opa, scalar)
 158:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_FONT, value_font, const lv_font_t *, _ptr, scalar)
 159:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_STR, value_str, const char *, _ptr, scalar)
 160:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LETTER_SPACE, text_letter_space, lv_style_int_t, _int, scalar)
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LINE_SPACE, text_line_space, lv_style_int_t, _int, scalar)
 162:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 163:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_BLEND_MODE, text_blend_mode, lv_blend_mode_t, _int, scalar)
 164:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_COLOR, text_color, lv_color_t, _color, nonscalar)
 165:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_SEL_COLOR, text_sel_color, lv_color_t, _color, nonscalar)
 166:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_SEL_BG_COLOR, text_sel_bg_color, lv_color_t, _color, nonscalar)
ARM GAS  D:\Temp\ccdKFHIm.s 			page 21


 167:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_OPA, text_opa, lv_opa_t, _opa, scalar)
 168:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_FONT, text_font, const lv_font_t *, _ptr, scalar)
 311              		.loc 2 168 1 view .LVU73
 312              	.LBB72:
 313              		.loc 2 168 1 view .LVU74
 314 0060 48F28E02 		movw	r2, #32910
 315 0064 4121     		movs	r1, #65
 316 0066 5846     		mov	r0, fp
 317 0068 FFF7FEFF 		bl	_lv_obj_get_style_ptr
 318              	.LVL35:
 319 006c 8346     		mov	fp, r0
 320              	.LVL36:
 321              		.loc 2 168 1 is_stmt 0 view .LVU75
 322              	.LBE72:
 323              	.LBE71:
 593:lvgl/src/lv_widgets/lv_msgbox.c ****         const char ** btnm_map = lv_btnmatrix_get_map_array(ext->btnm);
 324              		.loc 1 593 9 is_stmt 1 view .LVU76
 594:lvgl/src/lv_widgets/lv_msgbox.c ****         uint16_t i;
 325              		.loc 1 594 9 view .LVU77
 594:lvgl/src/lv_widgets/lv_msgbox.c ****         uint16_t i;
 326              		.loc 1 594 34 is_stmt 0 view .LVU78
 327 006e A068     		ldr	r0, [r4, #8]
 328              	.LVL37:
 594:lvgl/src/lv_widgets/lv_msgbox.c ****         uint16_t i;
 329              		.loc 1 594 34 view .LVU79
 330 0070 FFF7FEFF 		bl	lv_btnmatrix_get_map_array
 331              	.LVL38:
 595:lvgl/src/lv_widgets/lv_msgbox.c ****         for(i = 0; btnm_map[i][0] != '\0'; i++) {
 332              		.loc 1 595 9 is_stmt 1 view .LVU80
 596:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btnm_map[i][0] == '\n') btnm_lines++;
 333              		.loc 1 596 9 view .LVU81
 596:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btnm_map[i][0] == '\n') btnm_lines++;
 334              		.loc 1 596 15 is_stmt 0 view .LVU82
 335 0074 0023     		movs	r3, #0
 593:lvgl/src/lv_widgets/lv_msgbox.c ****         const char ** btnm_map = lv_btnmatrix_get_map_array(ext->btnm);
 336              		.loc 1 593 18 view .LVU83
 337 0076 0121     		movs	r1, #1
 596:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btnm_map[i][0] == '\n') btnm_lines++;
 338              		.loc 1 596 9 view .LVU84
 339 0078 01E0     		b	.L19
 340              	.LVL39:
 341              	.L20:
 596:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btnm_map[i][0] == '\n') btnm_lines++;
 342              		.loc 1 596 45 discriminator 2 view .LVU85
 343 007a 0133     		adds	r3, r3, #1
 344              	.LVL40:
 596:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btnm_map[i][0] == '\n') btnm_lines++;
 345              		.loc 1 596 45 discriminator 2 view .LVU86
 346 007c 9BB2     		uxth	r3, r3
 347              	.LVL41:
 348              	.L19:
 596:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btnm_map[i][0] == '\n') btnm_lines++;
 349              		.loc 1 596 28 discriminator 1 view .LVU87
 350 007e 50F82320 		ldr	r2, [r0, r3, lsl #2]
 596:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btnm_map[i][0] == '\n') btnm_lines++;
 351              		.loc 1 596 31 discriminator 1 view .LVU88
 352 0082 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  D:\Temp\ccdKFHIm.s 			page 22


 596:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btnm_map[i][0] == '\n') btnm_lines++;
 353              		.loc 1 596 9 discriminator 1 view .LVU89
 354 0084 22B1     		cbz	r2, .L23
 597:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 355              		.loc 1 597 13 is_stmt 1 view .LVU90
 597:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 356              		.loc 1 597 15 is_stmt 0 view .LVU91
 357 0086 0A2A     		cmp	r2, #10
 358 0088 F7D1     		bne	.L20
 597:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 359              		.loc 1 597 40 is_stmt 1 discriminator 1 view .LVU92
 597:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 360              		.loc 1 597 50 is_stmt 0 discriminator 1 view .LVU93
 361 008a 0131     		adds	r1, r1, #1
 362              	.LVL42:
 597:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 363              		.loc 1 597 50 discriminator 1 view .LVU94
 364 008c 89B2     		uxth	r1, r1
 365              	.LVL43:
 597:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 366              		.loc 1 597 50 discriminator 1 view .LVU95
 367 008e F4E7     		b	.L20
 368              	.L23:
 600:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_coord_t btn_h = font_h + btn_top + btn_bottom;
 369              		.loc 1 600 9 is_stmt 1 view .LVU96
 370              	.LVL44:
 371              	.LBB73:
 372              	.LBI73:
 373              		.file 3 "lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h"
   1:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
   2:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @file lv_font.h
   3:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *
   4:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
   5:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
   6:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #ifndef LV_FONT_H
   7:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #define LV_FONT_H
   8:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
   9:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** extern "C" {
  11:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #endif
  12:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  13:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /*********************
  14:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *********************/
  16:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include <stdint.h>
  18:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include <stddef.h>
  19:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include <stdbool.h>
  20:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  21:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include "lv_symbol_def.h"
  22:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include "../lv_misc/lv_area.h"
  23:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  24:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /*********************
  25:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *      DEFINES
  26:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *********************/
  27:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  28:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**********************
ARM GAS  D:\Temp\ccdKFHIm.s 			page 23


  29:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *      TYPEDEFS
  30:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  **********************/
  31:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  32:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /*------------------
  33:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * General types
  34:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *-----------------*/
  35:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  36:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /** Describes the properties of a glyph. */
  37:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** typedef struct {
  38:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint16_t adv_w; /**< The glyph needs this space. Draw the next glyph after this width. 8 bit in
  39:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint16_t box_w;  /**< Width of the glyph's bounding box*/
  40:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint16_t box_h;  /**< Height of the glyph's bounding box*/
  41:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int16_t ofs_x;   /**< x offset of the bounding box*/
  42:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int16_t ofs_y;  /**< y offset of the bounding box*/
  43:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint8_t bpp;   /**< Bit-per-pixel: 1, 2, 4, 8*/
  44:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** } lv_font_glyph_dsc_t;
  45:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  46:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /** The bitmaps might be upscaled by 3 to achieve subpixel rendering. */
  47:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** enum {
  48:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_NONE,
  49:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_HOR,
  50:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_VER,
  51:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_BOTH,
  52:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** };
  53:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  54:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** typedef uint8_t lv_font_subpx_t;
  55:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  56:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /** Describe the properties of a font*/
  57:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** typedef struct _lv_font_struct {
  58:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     /** Get a glyph's descriptor from a font*/
  59:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     bool (*get_glyph_dsc)(const struct _lv_font_struct *, lv_font_glyph_dsc_t *, uint32_t letter, u
  60:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  61:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     /** Get a glyph's bitmap from a font*/
  62:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     const uint8_t * (*get_glyph_bitmap)(const struct _lv_font_struct *, uint32_t);
  63:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  64:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     /*Pointer to the font in a font pack (must have the same line height)*/
  65:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     lv_coord_t line_height;         /**< The real line height where any text fits*/
  66:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     lv_coord_t base_line;           /**< Base line measured from the top of the line_height*/
  67:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint8_t subpx  : 2;             /**< An element of `lv_font_subpx_t`*/
  68:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  69:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int8_t underline_position;      /**< Distance between the top of the underline and base line (<
  70:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int8_t underline_thickness;     /**< Thickness of the underline*/
  71:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  72:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     void * dsc;                     /**< Store implementation specific or run_time data or caching 
  73:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #if LV_USE_USER_DATA
  74:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     lv_font_user_data_t user_data;  /**< Custom user data for font. */
  75:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #endif
  76:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  77:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** } lv_font_t;
  78:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  79:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**********************
  80:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * GLOBAL PROTOTYPES
  81:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  **********************/
  82:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  83:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
  84:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Return with the bitmap of a font.
  85:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font_p pointer to a font
ARM GAS  D:\Temp\ccdKFHIm.s 			page 24


  86:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter an UNICODE character code
  87:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return pointer to the bitmap of the letter
  88:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
  89:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** const uint8_t * lv_font_get_glyph_bitmap(const lv_font_t * font_p, uint32_t letter);
  90:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  91:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
  92:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Get the descriptor of a glyph
  93:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font_p pointer to font
  94:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param dsc_out store the result descriptor here
  95:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter an UNICODE letter code
  96:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return true: descriptor is successfully loaded into `dsc_out`.
  97:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *         false: the letter was not found, no data is loaded to `dsc_out`
  98:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
  99:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** bool lv_font_get_glyph_dsc(const lv_font_t * font_p, lv_font_glyph_dsc_t * dsc_out, uint32_t letter
 100:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****                            uint32_t letter_next);
 101:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
 102:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
 103:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Get the width of a glyph with kerning
 104:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font pointer to a font
 105:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter an UNICODE letter
 106:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter_next the next letter after `letter`. Used for kerning
 107:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return the width of the glyph
 108:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
 109:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** uint16_t lv_font_get_glyph_width(const lv_font_t * font, uint32_t letter, uint32_t letter_next);
 110:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
 111:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
 112:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Get the line height of a font. All characters fit into this height
 113:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font_p pointer to a font
 114:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return the height of a font
 115:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
 116:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** static inline lv_coord_t lv_font_get_line_height(const lv_font_t * font_p)
 374              		.loc 3 116 26 view .LVU97
 375              	.LBB74:
 117:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** {
 118:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     return font_p->line_height;
 376              		.loc 3 118 5 view .LVU98
 377              		.loc 3 118 18 is_stmt 0 view .LVU99
 378 0090 BBF90820 		ldrsh	r2, [fp, #8]
 379              	.LVL45:
 380              		.loc 3 118 18 view .LVU100
 381              	.LBE74:
 382              	.LBE73:
 601:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_set_size(ext->btnm, w, btn_h * btnm_lines + bg_inner * (btnm_lines - 1) + bg_top + b
 383              		.loc 1 601 9 is_stmt 1 view .LVU101
 601:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_set_size(ext->btnm, w, btn_h * btnm_lines + bg_inner * (btnm_lines - 1) + bg_top + b
 384              		.loc 1 601 35 is_stmt 0 view .LVU102
 385 0094 9244     		add	r10, r10, r2
 386              	.LVL46:
 601:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_set_size(ext->btnm, w, btn_h * btnm_lines + bg_inner * (btnm_lines - 1) + bg_top + b
 387              		.loc 1 601 45 view .LVU103
 388 0096 19FA8AF9 		uxtah	r9, r9, r10
 389              	.LVL47:
 602:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 390              		.loc 1 602 9 is_stmt 1 view .LVU104
 602:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 391              		.loc 1 602 58 is_stmt 0 view .LVU105
 392 009a 4A1E     		subs	r2, r1, #1
ARM GAS  D:\Temp\ccdKFHIm.s 			page 25


 393              	.LVL48:
 602:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 394              		.loc 1 602 58 view .LVU106
 395 009c 19FB01F1 		smulbb	r1, r9, r1
 396              	.LVL49:
 602:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 397              		.loc 1 602 58 view .LVU107
 398 00a0 12FB0812 		smlabb	r2, r2, r8, r1
 399              	.LVL50:
 602:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 400              		.loc 1 602 88 view .LVU108
 401 00a4 17FA82F2 		uxtah	r2, r7, r2
 602:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 402              		.loc 1 602 97 view .LVU109
 403 00a8 16FA82F2 		uxtah	r2, r6, r2
 602:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 404              		.loc 1 602 9 view .LVU110
 405 00ac 12B2     		sxth	r2, r2
 406 00ae 2946     		mov	r1, r5
 407 00b0 A068     		ldr	r0, [r4, #8]
 408              	.LVL51:
 602:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 409              		.loc 1 602 9 view .LVU111
 410 00b2 FFF7FEFF 		bl	lv_obj_set_size
 411              	.LVL52:
 412              	.L16:
 602:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 413              		.loc 1 602 9 view .LVU112
 414              	.LBE60:
 604:lvgl/src/lv_widgets/lv_msgbox.c **** 
 415              		.loc 1 604 1 view .LVU113
 416 00b6 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 604:lvgl/src/lv_widgets/lv_msgbox.c **** 
 417              		.loc 1 604 1 view .LVU114
 418              		.cfi_endproc
 419              	.LFE490:
 421              		.section	.text.lv_msgbox_signal,"ax",%progbits
 422              		.align	1
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	lv_msgbox_signal:
 429              	.LVL53:
 430              	.LFB488:
 443:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_res_t res;
 431              		.loc 1 443 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 443:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_res_t res;
 435              		.loc 1 443 1 is_stmt 0 view .LVU116
 436 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 437              	.LCFI3:
 438              		.cfi_def_cfa_offset 24
 439              		.cfi_offset 4, -24
 440              		.cfi_offset 5, -20
ARM GAS  D:\Temp\ccdKFHIm.s 			page 26


 441              		.cfi_offset 6, -16
 442              		.cfi_offset 7, -12
 443              		.cfi_offset 8, -8
 444              		.cfi_offset 14, -4
 445 0004 82B0     		sub	sp, sp, #8
 446              	.LCFI4:
 447              		.cfi_def_cfa_offset 32
 448 0006 0746     		mov	r7, r0
 449 0008 0C46     		mov	r4, r1
 450 000a 1546     		mov	r5, r2
 444:lvgl/src/lv_widgets/lv_msgbox.c **** 
 451              		.loc 1 444 5 is_stmt 1 view .LVU117
 448:lvgl/src/lv_widgets/lv_msgbox.c ****     if(sign == LV_SIGNAL_CONTROL) {
 452              		.loc 1 448 5 view .LVU118
 448:lvgl/src/lv_widgets/lv_msgbox.c ****     if(sign == LV_SIGNAL_CONTROL) {
 453              		.loc 1 448 10 is_stmt 0 view .LVU119
 454 000c 0023     		movs	r3, #0
 455 000e 8DF80730 		strb	r3, [sp, #7]
 449:lvgl/src/lv_widgets/lv_msgbox.c ****         c_trans = *((char *)param);
 456              		.loc 1 449 5 is_stmt 1 view .LVU120
 449:lvgl/src/lv_widgets/lv_msgbox.c ****         c_trans = *((char *)param);
 457              		.loc 1 449 7 is_stmt 0 view .LVU121
 458 0012 1829     		cmp	r1, #24
 459 0014 4CD0     		beq	.L47
 460              	.L25:
 461              	.LVL54:
 458:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_get_style_info_t * info = param;
 462              		.loc 1 458 5 is_stmt 1 view .LVU122
 458:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_get_style_info_t * info = param;
 463              		.loc 1 458 7 is_stmt 0 view .LVU123
 464 0016 082C     		cmp	r4, #8
 465 0018 60D0     		beq	.L48
 464:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_get_state_info_t * info = param;
 466              		.loc 1 464 10 is_stmt 1 view .LVU124
 464:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_get_state_info_t * info = param;
 467              		.loc 1 464 12 is_stmt 0 view .LVU125
 468 001a 092C     		cmp	r4, #9
 469 001c 71D0     		beq	.L49
 477:lvgl/src/lv_widgets/lv_msgbox.c ****     if(res != LV_RES_OK) return res;
 470              		.loc 1 477 5 is_stmt 1 view .LVU126
 477:lvgl/src/lv_widgets/lv_msgbox.c ****     if(res != LV_RES_OK) return res;
 471              		.loc 1 477 11 is_stmt 0 view .LVU127
 472 001e 6C4B     		ldr	r3, .L60
 473 0020 1B68     		ldr	r3, [r3]
 474 0022 2A46     		mov	r2, r5
 475 0024 2146     		mov	r1, r4
 476              	.LVL55:
 477:lvgl/src/lv_widgets/lv_msgbox.c ****     if(res != LV_RES_OK) return res;
 477              		.loc 1 477 11 view .LVU128
 478 0026 3846     		mov	r0, r7
 479              	.LVL56:
 477:lvgl/src/lv_widgets/lv_msgbox.c ****     if(res != LV_RES_OK) return res;
 480              		.loc 1 477 11 view .LVU129
 481 0028 9847     		blx	r3
 482              	.LVL57:
 483 002a 0646     		mov	r6, r0
 484              	.LVL58:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 27


 478:lvgl/src/lv_widgets/lv_msgbox.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 485              		.loc 1 478 5 is_stmt 1 view .LVU130
 478:lvgl/src/lv_widgets/lv_msgbox.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 486              		.loc 1 478 7 is_stmt 0 view .LVU131
 487 002c 0128     		cmp	r0, #1
 488 002e 5CD1     		bne	.L28
 479:lvgl/src/lv_widgets/lv_msgbox.c **** 
 489              		.loc 1 479 5 is_stmt 1 view .LVU132
 479:lvgl/src/lv_widgets/lv_msgbox.c **** 
 490              		.loc 1 479 7 is_stmt 0 view .LVU133
 491 0030 072C     		cmp	r4, #7
 492 0032 7ED0     		beq	.L50
 481:lvgl/src/lv_widgets/lv_msgbox.c ****     if(sign == LV_SIGNAL_COORD_CHG) {
 493              		.loc 1 481 5 is_stmt 1 view .LVU134
 481:lvgl/src/lv_widgets/lv_msgbox.c ****     if(sign == LV_SIGNAL_COORD_CHG) {
 494              		.loc 1 481 29 is_stmt 0 view .LVU135
 495 0034 3846     		mov	r0, r7
 496              	.LVL59:
 481:lvgl/src/lv_widgets/lv_msgbox.c ****     if(sign == LV_SIGNAL_COORD_CHG) {
 497              		.loc 1 481 29 view .LVU136
 498 0036 FFF7FEFF 		bl	lv_obj_get_ext_attr
 499              	.LVL60:
 500 003a 8046     		mov	r8, r0
 501              	.LVL61:
 482:lvgl/src/lv_widgets/lv_msgbox.c ****         if(lv_obj_get_width(mbox) != lv_area_get_width(param)) {
 502              		.loc 1 482 5 is_stmt 1 view .LVU137
 482:lvgl/src/lv_widgets/lv_msgbox.c ****         if(lv_obj_get_width(mbox) != lv_area_get_width(param)) {
 503              		.loc 1 482 7 is_stmt 0 view .LVU138
 504 003c 022C     		cmp	r4, #2
 505 003e 7ED0     		beq	.L51
 487:lvgl/src/lv_widgets/lv_msgbox.c ****         mbox_realign(mbox);
 506              		.loc 1 487 10 is_stmt 1 view .LVU139
 487:lvgl/src/lv_widgets/lv_msgbox.c ****         mbox_realign(mbox);
 507              		.loc 1 487 12 is_stmt 0 view .LVU140
 508 0040 042C     		cmp	r4, #4
 509 0042 00F08B80 		beq	.L52
 490:lvgl/src/lv_widgets/lv_msgbox.c ****         if(ext->btnm) {
 510              		.loc 1 490 10 is_stmt 1 view .LVU141
 490:lvgl/src/lv_widgets/lv_msgbox.c ****         if(ext->btnm) {
 511              		.loc 1 490 12 is_stmt 0 view .LVU142
 512 0046 0E2C     		cmp	r4, #14
 513 0048 00F08C80 		beq	.L53
 496:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_GROUP
 514              		.loc 1 496 10 is_stmt 1 view .LVU143
 498:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 515              		.loc 1 498 35 is_stmt 0 view .LVU144
 516 004c A4F11803 		sub	r3, r4, #24
 517 0050 DBB2     		uxtb	r3, r3
 496:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_GROUP
 518              		.loc 1 496 12 view .LVU145
 519 0052 012B     		cmp	r3, #1
 520 0054 03D9     		bls	.L37
 498:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 521              		.loc 1 498 69 view .LVU146
 522 0056 162C     		cmp	r4, #22
 523 0058 01D0     		beq	.L37
 500:lvgl/src/lv_widgets/lv_msgbox.c ****         if(ext->btnm) {
ARM GAS  D:\Temp\ccdKFHIm.s 			page 28


 524              		.loc 1 500 33 view .LVU147
 525 005a 172C     		cmp	r4, #23
 526 005c 45D1     		bne	.L28
 527              	.L37:
 501:lvgl/src/lv_widgets/lv_msgbox.c ****             ext->btnm->signal_cb(ext->btnm, sign, param);
 528              		.loc 1 501 9 is_stmt 1 view .LVU148
 501:lvgl/src/lv_widgets/lv_msgbox.c ****             ext->btnm->signal_cb(ext->btnm, sign, param);
 529              		.loc 1 501 15 is_stmt 0 view .LVU149
 530 005e D8F80800 		ldr	r0, [r8, #8]
 531              	.LVL62:
 501:lvgl/src/lv_widgets/lv_msgbox.c ****             ext->btnm->signal_cb(ext->btnm, sign, param);
 532              		.loc 1 501 11 view .LVU150
 533 0062 18B1     		cbz	r0, .L38
 502:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 534              		.loc 1 502 13 is_stmt 1 view .LVU151
 502:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 535              		.loc 1 502 22 is_stmt 0 view .LVU152
 536 0064 C369     		ldr	r3, [r0, #28]
 502:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 537              		.loc 1 502 13 view .LVU153
 538 0066 2A46     		mov	r2, r5
 539 0068 2146     		mov	r1, r4
 540 006a 9847     		blx	r3
 541              	.LVL63:
 542              	.L38:
 508:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_indev_t * indev         = lv_indev_get_act();
 543              		.loc 1 508 9 is_stmt 1 view .LVU154
 508:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_indev_t * indev         = lv_indev_get_act();
 544              		.loc 1 508 11 is_stmt 0 view .LVU155
 545 006c 162C     		cmp	r4, #22
 546 006e 00F08980 		beq	.L54
 547              	.L39:
 518:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_state_t state = lv_obj_get_state(mbox, LV_MSGBOX_PART_BG);
 548              		.loc 1 518 9 is_stmt 1 view .LVU156
 518:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_state_t state = lv_obj_get_state(mbox, LV_MSGBOX_PART_BG);
 549              		.loc 1 518 15 is_stmt 0 view .LVU157
 550 0072 D8F80830 		ldr	r3, [r8, #8]
 518:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_state_t state = lv_obj_get_state(mbox, LV_MSGBOX_PART_BG);
 551              		.loc 1 518 11 view .LVU158
 552 0076 C3B3     		cbz	r3, .L28
 518:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_state_t state = lv_obj_get_state(mbox, LV_MSGBOX_PART_BG);
 553              		.loc 1 518 50 discriminator 1 view .LVU159
 554 0078 163C     		subs	r4, r4, #22
 555 007a E4B2     		uxtb	r4, r4
 518:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_state_t state = lv_obj_get_state(mbox, LV_MSGBOX_PART_BG);
 556              		.loc 1 518 22 discriminator 1 view .LVU160
 557 007c 012C     		cmp	r4, #1
 558 007e 34D8     		bhi	.L28
 559              	.LBB75:
 519:lvgl/src/lv_widgets/lv_msgbox.c ****             if(state & LV_STATE_FOCUSED) {
 560              		.loc 1 519 13 is_stmt 1 view .LVU161
 519:lvgl/src/lv_widgets/lv_msgbox.c ****             if(state & LV_STATE_FOCUSED) {
 561              		.loc 1 519 32 is_stmt 0 view .LVU162
 562 0080 0021     		movs	r1, #0
 563 0082 3846     		mov	r0, r7
 564 0084 FFF7FEFF 		bl	lv_obj_get_state
 565              	.LVL64:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 29


 566 0088 0446     		mov	r4, r0
 567              	.LVL65:
 520:lvgl/src/lv_widgets/lv_msgbox.c ****                 lv_obj_set_state(ext->btnm, LV_STATE_FOCUSED);
 568              		.loc 1 520 13 is_stmt 1 view .LVU163
 520:lvgl/src/lv_widgets/lv_msgbox.c ****                 lv_obj_set_state(ext->btnm, LV_STATE_FOCUSED);
 569              		.loc 1 520 15 is_stmt 0 view .LVU164
 570 008a 10F0020F 		tst	r0, #2
 571 008e 00F09380 		beq	.L41
 521:lvgl/src/lv_widgets/lv_msgbox.c ****             }
 572              		.loc 1 521 17 is_stmt 1 view .LVU165
 573 0092 0221     		movs	r1, #2
 574 0094 D8F80800 		ldr	r0, [r8, #8]
 575              	.LVL66:
 521:lvgl/src/lv_widgets/lv_msgbox.c ****             }
 576              		.loc 1 521 17 is_stmt 0 view .LVU166
 577 0098 FFF7FEFF 		bl	lv_obj_set_state
 578              	.LVL67:
 579              	.L42:
 527:lvgl/src/lv_widgets/lv_msgbox.c ****                 lv_obj_set_state(ext->btnm, LV_STATE_EDITED);
 580              		.loc 1 527 13 is_stmt 1 view .LVU167
 527:lvgl/src/lv_widgets/lv_msgbox.c ****                 lv_obj_set_state(ext->btnm, LV_STATE_EDITED);
 581              		.loc 1 527 15 is_stmt 0 view .LVU168
 582 009c 14F0040F 		tst	r4, #4
 583 00a0 00F09080 		beq	.L43
 528:lvgl/src/lv_widgets/lv_msgbox.c ****             }
 584              		.loc 1 528 17 is_stmt 1 view .LVU169
 585 00a4 0421     		movs	r1, #4
 586 00a6 D8F80800 		ldr	r0, [r8, #8]
 587 00aa FFF7FEFF 		bl	lv_obj_set_state
 588              	.LVL68:
 589 00ae 1CE0     		b	.L28
 590              	.LVL69:
 591              	.L47:
 528:lvgl/src/lv_widgets/lv_msgbox.c ****             }
 592              		.loc 1 528 17 is_stmt 0 view .LVU170
 593              	.LBE75:
 450:lvgl/src/lv_widgets/lv_msgbox.c ****         if(c_trans == LV_KEY_DOWN) c_trans = LV_KEY_LEFT;
 594              		.loc 1 450 9 is_stmt 1 view .LVU171
 450:lvgl/src/lv_widgets/lv_msgbox.c ****         if(c_trans == LV_KEY_DOWN) c_trans = LV_KEY_LEFT;
 595              		.loc 1 450 19 is_stmt 0 view .LVU172
 596 00b0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 450:lvgl/src/lv_widgets/lv_msgbox.c ****         if(c_trans == LV_KEY_DOWN) c_trans = LV_KEY_LEFT;
 597              		.loc 1 450 17 view .LVU173
 598 00b2 8DF80730 		strb	r3, [sp, #7]
 451:lvgl/src/lv_widgets/lv_msgbox.c ****         if(c_trans == LV_KEY_UP) c_trans = LV_KEY_RIGHT;
 599              		.loc 1 451 9 is_stmt 1 view .LVU174
 451:lvgl/src/lv_widgets/lv_msgbox.c ****         if(c_trans == LV_KEY_UP) c_trans = LV_KEY_RIGHT;
 600              		.loc 1 451 11 is_stmt 0 view .LVU175
 601 00b6 122B     		cmp	r3, #18
 602 00b8 06D0     		beq	.L55
 603              	.L26:
 452:lvgl/src/lv_widgets/lv_msgbox.c **** 
 604              		.loc 1 452 9 is_stmt 1 view .LVU176
 452:lvgl/src/lv_widgets/lv_msgbox.c **** 
 605              		.loc 1 452 20 is_stmt 0 view .LVU177
 606 00ba 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 452:lvgl/src/lv_widgets/lv_msgbox.c **** 
ARM GAS  D:\Temp\ccdKFHIm.s 			page 30


 607              		.loc 1 452 11 view .LVU178
 608 00be 112B     		cmp	r3, #17
 609 00c0 06D0     		beq	.L56
 454:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 610              		.loc 1 454 15 view .LVU179
 611 00c2 0DF10705 		add	r5, sp, #7
 612 00c6 A6E7     		b	.L25
 613              	.L55:
 451:lvgl/src/lv_widgets/lv_msgbox.c ****         if(c_trans == LV_KEY_UP) c_trans = LV_KEY_RIGHT;
 614              		.loc 1 451 36 is_stmt 1 discriminator 1 view .LVU180
 451:lvgl/src/lv_widgets/lv_msgbox.c ****         if(c_trans == LV_KEY_UP) c_trans = LV_KEY_RIGHT;
 615              		.loc 1 451 44 is_stmt 0 discriminator 1 view .LVU181
 616 00c8 1423     		movs	r3, #20
 617 00ca 8DF80730 		strb	r3, [sp, #7]
 618 00ce F4E7     		b	.L26
 619              	.L56:
 452:lvgl/src/lv_widgets/lv_msgbox.c **** 
 620              		.loc 1 452 34 is_stmt 1 discriminator 1 view .LVU182
 452:lvgl/src/lv_widgets/lv_msgbox.c **** 
 621              		.loc 1 452 42 is_stmt 0 discriminator 1 view .LVU183
 622 00d0 1323     		movs	r3, #19
 623 00d2 8DF80730 		strb	r3, [sp, #7]
 454:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 624              		.loc 1 454 15 discriminator 1 view .LVU184
 625 00d6 0DF10705 		add	r5, sp, #7
 626 00da 9CE7     		b	.L25
 627              	.LVL70:
 628              	.L48:
 629              	.LBB76:
 459:lvgl/src/lv_widgets/lv_msgbox.c ****         info->result = lv_msgbox_get_style(mbox, info->part);
 630              		.loc 1 459 9 is_stmt 1 view .LVU185
 460:lvgl/src/lv_widgets/lv_msgbox.c ****         if(info->result != NULL) return LV_RES_OK;
 631              		.loc 1 460 9 view .LVU186
 460:lvgl/src/lv_widgets/lv_msgbox.c ****         if(info->result != NULL) return LV_RES_OK;
 632              		.loc 1 460 24 is_stmt 0 view .LVU187
 633 00dc 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 634              	.LVL71:
 460:lvgl/src/lv_widgets/lv_msgbox.c ****         if(info->result != NULL) return LV_RES_OK;
 635              		.loc 1 460 24 view .LVU188
 636 00de 3846     		mov	r0, r7
 637              	.LVL72:
 460:lvgl/src/lv_widgets/lv_msgbox.c ****         if(info->result != NULL) return LV_RES_OK;
 638              		.loc 1 460 24 view .LVU189
 639 00e0 FFF7FEFF 		bl	lv_msgbox_get_style
 640              	.LVL73:
 460:lvgl/src/lv_widgets/lv_msgbox.c ****         if(info->result != NULL) return LV_RES_OK;
 641              		.loc 1 460 22 view .LVU190
 642 00e4 6860     		str	r0, [r5, #4]
 461:lvgl/src/lv_widgets/lv_msgbox.c ****         else return ancestor_signal(mbox, sign, param);
 643              		.loc 1 461 9 is_stmt 1 view .LVU191
 461:lvgl/src/lv_widgets/lv_msgbox.c ****         else return ancestor_signal(mbox, sign, param);
 644              		.loc 1 461 11 is_stmt 0 view .LVU192
 645 00e6 20B1     		cbz	r0, .L57
 461:lvgl/src/lv_widgets/lv_msgbox.c ****         else return ancestor_signal(mbox, sign, param);
 646              		.loc 1 461 41 view .LVU193
 647 00e8 0126     		movs	r6, #1
 648              	.LVL74:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 31


 649              	.L28:
 461:lvgl/src/lv_widgets/lv_msgbox.c ****         else return ancestor_signal(mbox, sign, param);
 650              		.loc 1 461 41 view .LVU194
 651              	.LBE76:
 539:lvgl/src/lv_widgets/lv_msgbox.c **** 
 652              		.loc 1 539 1 view .LVU195
 653 00ea 3046     		mov	r0, r6
 654 00ec 02B0     		add	sp, sp, #8
 655              	.LCFI5:
 656              		.cfi_remember_state
 657              		.cfi_def_cfa_offset 24
 658              		@ sp needed
 659 00ee BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 660              	.LVL75:
 661              	.L57:
 662              	.LCFI6:
 663              		.cfi_restore_state
 664              	.LBB77:
 462:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 665              		.loc 1 462 14 is_stmt 1 view .LVU196
 462:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 666              		.loc 1 462 21 is_stmt 0 view .LVU197
 667 00f2 374B     		ldr	r3, .L60
 668 00f4 1B68     		ldr	r3, [r3]
 669 00f6 2A46     		mov	r2, r5
 670 00f8 2146     		mov	r1, r4
 671 00fa 3846     		mov	r0, r7
 672 00fc 9847     		blx	r3
 673              	.LVL76:
 674 00fe 0646     		mov	r6, r0
 675 0100 F3E7     		b	.L28
 676              	.LVL77:
 677              	.L49:
 462:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 678              		.loc 1 462 21 view .LVU198
 679              	.LBE77:
 680              	.LBB78:
 465:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_msgbox_ext_t * ext = lv_obj_get_ext_attr(mbox);
 681              		.loc 1 465 9 is_stmt 1 view .LVU199
 466:lvgl/src/lv_widgets/lv_msgbox.c ****         if(ext->btnm && info->part == LV_MSGBOX_PART_BTN_BG) {
 682              		.loc 1 466 9 view .LVU200
 466:lvgl/src/lv_widgets/lv_msgbox.c ****         if(ext->btnm && info->part == LV_MSGBOX_PART_BTN_BG) {
 683              		.loc 1 466 33 is_stmt 0 view .LVU201
 684 0102 3846     		mov	r0, r7
 685              	.LVL78:
 466:lvgl/src/lv_widgets/lv_msgbox.c ****         if(ext->btnm && info->part == LV_MSGBOX_PART_BTN_BG) {
 686              		.loc 1 466 33 view .LVU202
 687 0104 FFF7FEFF 		bl	lv_obj_get_ext_attr
 688              	.LVL79:
 467:lvgl/src/lv_widgets/lv_msgbox.c ****             info->result = lv_obj_get_state(ext->btnm, LV_BTNMATRIX_PART_BG);
 689              		.loc 1 467 9 is_stmt 1 view .LVU203
 467:lvgl/src/lv_widgets/lv_msgbox.c ****             info->result = lv_obj_get_state(ext->btnm, LV_BTNMATRIX_PART_BG);
 690              		.loc 1 467 15 is_stmt 0 view .LVU204
 691 0108 8068     		ldr	r0, [r0, #8]
 692              	.LVL80:
 467:lvgl/src/lv_widgets/lv_msgbox.c ****             info->result = lv_obj_get_state(ext->btnm, LV_BTNMATRIX_PART_BG);
 693              		.loc 1 467 11 view .LVU205
ARM GAS  D:\Temp\ccdKFHIm.s 			page 32


 694 010a 10B1     		cbz	r0, .L30
 467:lvgl/src/lv_widgets/lv_msgbox.c ****             info->result = lv_obj_get_state(ext->btnm, LV_BTNMATRIX_PART_BG);
 695              		.loc 1 467 29 discriminator 1 view .LVU206
 696 010c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 467:lvgl/src/lv_widgets/lv_msgbox.c ****             info->result = lv_obj_get_state(ext->btnm, LV_BTNMATRIX_PART_BG);
 697              		.loc 1 467 22 discriminator 1 view .LVU207
 698 010e 402B     		cmp	r3, #64
 699 0110 05D0     		beq	.L58
 700              	.L30:
 470:lvgl/src/lv_widgets/lv_msgbox.c ****             info->result = lv_obj_get_state(ext->btnm, LV_BTNMATRIX_PART_BTN);
 701              		.loc 1 470 14 is_stmt 1 view .LVU208
 470:lvgl/src/lv_widgets/lv_msgbox.c ****             info->result = lv_obj_get_state(ext->btnm, LV_BTNMATRIX_PART_BTN);
 702              		.loc 1 470 16 is_stmt 0 view .LVU209
 703 0112 10B1     		cbz	r0, .L31
 470:lvgl/src/lv_widgets/lv_msgbox.c ****             info->result = lv_obj_get_state(ext->btnm, LV_BTNMATRIX_PART_BTN);
 704              		.loc 1 470 34 discriminator 1 view .LVU210
 705 0114 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 470:lvgl/src/lv_widgets/lv_msgbox.c ****             info->result = lv_obj_get_state(ext->btnm, LV_BTNMATRIX_PART_BTN);
 706              		.loc 1 470 27 discriminator 1 view .LVU211
 707 0116 412B     		cmp	r3, #65
 708 0118 06D0     		beq	.L59
 709              	.L31:
 473:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 710              		.loc 1 473 9 is_stmt 1 view .LVU212
 473:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 711              		.loc 1 473 16 is_stmt 0 view .LVU213
 712 011a 0126     		movs	r6, #1
 713 011c E5E7     		b	.L28
 714              	.L58:
 468:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 715              		.loc 1 468 13 is_stmt 1 view .LVU214
 468:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 716              		.loc 1 468 28 is_stmt 0 view .LVU215
 717 011e 0021     		movs	r1, #0
 718 0120 FFF7FEFF 		bl	lv_obj_get_state
 719              	.LVL81:
 468:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 720              		.loc 1 468 26 view .LVU216
 721 0124 6870     		strb	r0, [r5, #1]
 722 0126 F8E7     		b	.L31
 723              	.L59:
 471:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 724              		.loc 1 471 13 is_stmt 1 view .LVU217
 471:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 725              		.loc 1 471 28 is_stmt 0 view .LVU218
 726 0128 0121     		movs	r1, #1
 727 012a FFF7FEFF 		bl	lv_obj_get_state
 728              	.LVL82:
 471:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 729              		.loc 1 471 26 view .LVU219
 730 012e 6870     		strb	r0, [r5, #1]
 731 0130 F3E7     		b	.L31
 732              	.LVL83:
 733              	.L50:
 471:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 734              		.loc 1 471 26 view .LVU220
 735              	.LBE78:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 33


 479:lvgl/src/lv_widgets/lv_msgbox.c **** 
 736              		.loc 1 479 36 is_stmt 1 discriminator 1 view .LVU221
 479:lvgl/src/lv_widgets/lv_msgbox.c **** 
 737              		.loc 1 479 43 is_stmt 0 discriminator 1 view .LVU222
 738 0132 2849     		ldr	r1, .L60+4
 739 0134 2846     		mov	r0, r5
 740              	.LVL84:
 479:lvgl/src/lv_widgets/lv_msgbox.c **** 
 741              		.loc 1 479 43 discriminator 1 view .LVU223
 742 0136 FFF7FEFF 		bl	lv_obj_handle_get_type_signal
 743              	.LVL85:
 744 013a 0646     		mov	r6, r0
 745 013c D5E7     		b	.L28
 746              	.LVL86:
 747              	.L51:
 483:lvgl/src/lv_widgets/lv_msgbox.c ****             mbox_realign(mbox);
 748              		.loc 1 483 9 is_stmt 1 view .LVU224
 483:lvgl/src/lv_widgets/lv_msgbox.c ****             mbox_realign(mbox);
 749              		.loc 1 483 12 is_stmt 0 view .LVU225
 750 013e 3846     		mov	r0, r7
 751              	.LVL87:
 483:lvgl/src/lv_widgets/lv_msgbox.c ****             mbox_realign(mbox);
 752              		.loc 1 483 12 view .LVU226
 753 0140 FFF7FEFF 		bl	lv_obj_get_width
 754              	.LVL88:
 755              	.LBB79:
 756              	.LBI79:
 757              		.file 4 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_area.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @file lv_area.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_AREA_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <string.h>
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdbool.h>
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdint.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "lv_mem.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      DEFINES
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*To avoid overflow don't let the max ranges (reduce with 1000) */
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - 1000))
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
ARM GAS  D:\Temp\ccdKFHIm.s 			page 34


  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      TYPEDEFS
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Represents a point on the screen.
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x;
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y;
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_point_t;
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Represents an area of the screen. */
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x1;
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y1;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x2;
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y2;
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_area_t;
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Alignments */
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** enum {
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_CENTER = 0,
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_LEFT,
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_MID,
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_RIGHT,
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_LEFT,
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_MID,
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_RIGHT,
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_LEFT_MID,
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_RIGHT_MID,
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** };
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef uint8_t lv_align_t;
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * GLOBAL PROTOTYPES
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Initialize an area
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x1 left coordinate of the area
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y1 top coordinate of the area
ARM GAS  D:\Temp\ccdKFHIm.s 			page 35


  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x2 right coordinate of the area
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y2 bottom coordinate of the area
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Copy an area
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param dest pointer to the destination area
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param src pointer to the source area
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     _lv_memcpy_small(dest, src, sizeof(lv_area_t));
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** }
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Get the width of an area
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 758              		.loc 4 107 26 is_stmt 1 view .LVU227
 759              	.LBB80:
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 760              		.loc 4 109 5 view .LVU228
 761              		.loc 4 109 31 is_stmt 0 view .LVU229
 762 0144 AB88     		ldrh	r3, [r5, #4]
 763              		.loc 4 109 44 view .LVU230
 764 0146 2A88     		ldrh	r2, [r5]
 765              		.loc 4 109 36 view .LVU231
 766 0148 9B1A     		subs	r3, r3, r2
 767 014a 9BB2     		uxth	r3, r3
 768              		.loc 4 109 49 view .LVU232
 769 014c 0133     		adds	r3, r3, #1
 770              		.loc 4 109 12 view .LVU233
 771 014e 1BB2     		sxth	r3, r3
 772              	.LVL89:
 773              		.loc 4 109 12 view .LVU234
 774              	.LBE80:
 775              	.LBE79:
 483:lvgl/src/lv_widgets/lv_msgbox.c ****             mbox_realign(mbox);
 776              		.loc 1 483 11 view .LVU235
 777 0150 9842     		cmp	r0, r3
 778 0152 CAD0     		beq	.L28
 484:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 779              		.loc 1 484 13 is_stmt 1 view .LVU236
 780 0154 3846     		mov	r0, r7
 781 0156 FFF7FEFF 		bl	mbox_realign
 782              	.LVL90:
 783 015a C6E7     		b	.L28
 784              	.LVL91:
 785              	.L52:
 488:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 786              		.loc 1 488 9 view .LVU237
 787 015c 3846     		mov	r0, r7
 788              	.LVL92:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 36


 488:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 789              		.loc 1 488 9 is_stmt 0 view .LVU238
 790 015e FFF7FEFF 		bl	mbox_realign
 791              	.LVL93:
 792 0162 C2E7     		b	.L28
 793              	.LVL94:
 794              	.L53:
 491:lvgl/src/lv_widgets/lv_msgbox.c ****             uint32_t btn_id = lv_btnmatrix_get_focused_btn(ext->btnm);
 795              		.loc 1 491 9 is_stmt 1 view .LVU239
 491:lvgl/src/lv_widgets/lv_msgbox.c ****             uint32_t btn_id = lv_btnmatrix_get_focused_btn(ext->btnm);
 796              		.loc 1 491 15 is_stmt 0 view .LVU240
 797 0164 8068     		ldr	r0, [r0, #8]
 798              	.LVL95:
 491:lvgl/src/lv_widgets/lv_msgbox.c ****             uint32_t btn_id = lv_btnmatrix_get_focused_btn(ext->btnm);
 799              		.loc 1 491 11 view .LVU241
 800 0166 0028     		cmp	r0, #0
 801 0168 BFD0     		beq	.L28
 802              	.LBB81:
 492:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btn_id != LV_BTNMATRIX_BTN_NONE) lv_event_send(mbox, LV_EVENT_VALUE_CHANGED, &btn_id
 803              		.loc 1 492 13 is_stmt 1 view .LVU242
 492:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btn_id != LV_BTNMATRIX_BTN_NONE) lv_event_send(mbox, LV_EVENT_VALUE_CHANGED, &btn_id
 804              		.loc 1 492 31 is_stmt 0 view .LVU243
 805 016a FFF7FEFF 		bl	lv_btnmatrix_get_focused_btn
 806              	.LVL96:
 492:lvgl/src/lv_widgets/lv_msgbox.c ****             if(btn_id != LV_BTNMATRIX_BTN_NONE) lv_event_send(mbox, LV_EVENT_VALUE_CHANGED, &btn_id
 807              		.loc 1 492 22 view .LVU244
 808 016e 0090     		str	r0, [sp]
 493:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 809              		.loc 1 493 13 is_stmt 1 view .LVU245
 493:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 810              		.loc 1 493 15 is_stmt 0 view .LVU246
 811 0170 4FF6FF73 		movw	r3, #65535
 812 0174 9842     		cmp	r0, r3
 813 0176 B8D0     		beq	.L28
 493:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 814              		.loc 1 493 49 is_stmt 1 discriminator 1 view .LVU247
 815 0178 6A46     		mov	r2, sp
 816 017a 1021     		movs	r1, #16
 817 017c 3846     		mov	r0, r7
 818 017e FFF7FEFF 		bl	lv_event_send
 819              	.LVL97:
 820 0182 B2E7     		b	.L28
 821              	.L54:
 493:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 822              		.loc 1 493 49 is_stmt 0 discriminator 1 view .LVU248
 823              	.LBE81:
 824              	.LBB82:
 509:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_indev_type_t indev_type = lv_indev_get_type(indev);
 825              		.loc 1 509 13 is_stmt 1 view .LVU249
 509:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_indev_type_t indev_type = lv_indev_get_type(indev);
 826              		.loc 1 509 42 is_stmt 0 view .LVU250
 827 0184 FFF7FEFF 		bl	lv_indev_get_act
 828              	.LVL98:
 510:lvgl/src/lv_widgets/lv_msgbox.c ****             if(indev_type == LV_INDEV_TYPE_ENCODER) {
 829              		.loc 1 510 13 is_stmt 1 view .LVU251
 510:lvgl/src/lv_widgets/lv_msgbox.c ****             if(indev_type == LV_INDEV_TYPE_ENCODER) {
 830              		.loc 1 510 42 is_stmt 0 view .LVU252
ARM GAS  D:\Temp\ccdKFHIm.s 			page 37


 831 0188 FFF7FEFF 		bl	lv_indev_get_type
 832              	.LVL99:
 511:lvgl/src/lv_widgets/lv_msgbox.c ****                 /*In navigation mode don't select any button but in edit mode select the fist*/
 833              		.loc 1 511 13 is_stmt 1 view .LVU253
 511:lvgl/src/lv_widgets/lv_msgbox.c ****                 /*In navigation mode don't select any button but in edit mode select the fist*/
 834              		.loc 1 511 15 is_stmt 0 view .LVU254
 835 018c 0428     		cmp	r0, #4
 836 018e 7FF470AF 		bne	.L39
 513:lvgl/src/lv_widgets/lv_msgbox.c ****                 else lv_btnmatrix_set_focused_btn(ext->btnm, LV_BTNMATRIX_BTN_NONE);
 837              		.loc 1 513 17 is_stmt 1 view .LVU255
 513:lvgl/src/lv_widgets/lv_msgbox.c ****                 else lv_btnmatrix_set_focused_btn(ext->btnm, LV_BTNMATRIX_BTN_NONE);
 838              		.loc 1 513 41 is_stmt 0 view .LVU256
 839 0192 3846     		mov	r0, r7
 840              	.LVL100:
 513:lvgl/src/lv_widgets/lv_msgbox.c ****                 else lv_btnmatrix_set_focused_btn(ext->btnm, LV_BTNMATRIX_BTN_NONE);
 841              		.loc 1 513 41 view .LVU257
 842 0194 FFF7FEFF 		bl	lv_obj_get_group
 843              	.LVL101:
 513:lvgl/src/lv_widgets/lv_msgbox.c ****                 else lv_btnmatrix_set_focused_btn(ext->btnm, LV_BTNMATRIX_BTN_NONE);
 844              		.loc 1 513 20 view .LVU258
 845 0198 FFF7FEFF 		bl	lv_group_get_editing
 846              	.LVL102:
 513:lvgl/src/lv_widgets/lv_msgbox.c ****                 else lv_btnmatrix_set_focused_btn(ext->btnm, LV_BTNMATRIX_BTN_NONE);
 847              		.loc 1 513 19 view .LVU259
 848 019c 28B1     		cbz	r0, .L40
 513:lvgl/src/lv_widgets/lv_msgbox.c ****                 else lv_btnmatrix_set_focused_btn(ext->btnm, LV_BTNMATRIX_BTN_NONE);
 849              		.loc 1 513 66 is_stmt 1 discriminator 1 view .LVU260
 850 019e 0021     		movs	r1, #0
 851 01a0 D8F80800 		ldr	r0, [r8, #8]
 852 01a4 FFF7FEFF 		bl	lv_btnmatrix_set_focused_btn
 853              	.LVL103:
 854 01a8 63E7     		b	.L39
 855              	.L40:
 514:lvgl/src/lv_widgets/lv_msgbox.c ****             }
 856              		.loc 1 514 22 view .LVU261
 857 01aa 4FF6FF71 		movw	r1, #65535
 858 01ae D8F80800 		ldr	r0, [r8, #8]
 859 01b2 FFF7FEFF 		bl	lv_btnmatrix_set_focused_btn
 860              	.LVL104:
 861 01b6 5CE7     		b	.L39
 862              	.LVL105:
 863              	.L41:
 514:lvgl/src/lv_widgets/lv_msgbox.c ****             }
 864              		.loc 1 514 22 is_stmt 0 view .LVU262
 865              	.LBE82:
 866              	.LBB83:
 524:lvgl/src/lv_widgets/lv_msgbox.c **** 
 867              		.loc 1 524 17 is_stmt 1 view .LVU263
 868 01b8 0221     		movs	r1, #2
 869 01ba D8F80800 		ldr	r0, [r8, #8]
 870              	.LVL106:
 524:lvgl/src/lv_widgets/lv_msgbox.c **** 
 871              		.loc 1 524 17 is_stmt 0 view .LVU264
 872 01be FFF7FEFF 		bl	lv_obj_clear_state
 873              	.LVL107:
 874 01c2 6BE7     		b	.L42
 875              	.L43:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 38


 531:lvgl/src/lv_widgets/lv_msgbox.c **** 
 876              		.loc 1 531 17 is_stmt 1 view .LVU265
 877 01c4 0421     		movs	r1, #4
 878 01c6 D8F80800 		ldr	r0, [r8, #8]
 879 01ca FFF7FEFF 		bl	lv_obj_clear_state
 880              	.LVL108:
 881 01ce 8CE7     		b	.L28
 882              	.L61:
 883              		.align	2
 884              	.L60:
 885 01d0 00000000 		.word	.LANCHOR0
 886 01d4 00000000 		.word	.LC1
 887              	.LBE83:
 888              		.cfi_endproc
 889              	.LFE488:
 891              		.section	.text.lv_msgbox_btnm_event_cb,"ax",%progbits
 892              		.align	1
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 896              		.fpu fpv4-sp-d16
 898              	lv_msgbox_btnm_event_cb:
 899              	.LVL109:
 900              	.LFB493:
 611:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 612:lvgl/src/lv_widgets/lv_msgbox.c **** 
 613:lvgl/src/lv_widgets/lv_msgbox.c **** static void lv_msgbox_default_event_cb(lv_obj_t * mbox, lv_event_t event)
 614:lvgl/src/lv_widgets/lv_msgbox.c **** {
 615:lvgl/src/lv_widgets/lv_msgbox.c ****     if(event != LV_EVENT_VALUE_CHANGED) return;
 616:lvgl/src/lv_widgets/lv_msgbox.c **** 
 617:lvgl/src/lv_widgets/lv_msgbox.c ****     uint32_t btn_id = lv_msgbox_get_active_btn(mbox);
 618:lvgl/src/lv_widgets/lv_msgbox.c ****     if(btn_id == LV_BTNMATRIX_BTN_NONE) return;
 619:lvgl/src/lv_widgets/lv_msgbox.c **** 
 620:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_msgbox_start_auto_close(mbox, 0);
 621:lvgl/src/lv_widgets/lv_msgbox.c **** }
 622:lvgl/src/lv_widgets/lv_msgbox.c **** 
 623:lvgl/src/lv_widgets/lv_msgbox.c **** static void lv_msgbox_btnm_event_cb(lv_obj_t * btnm, lv_event_t event)
 624:lvgl/src/lv_widgets/lv_msgbox.c **** {
 901              		.loc 1 624 1 view -0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		.loc 1 624 1 is_stmt 0 view .LVU267
 906 0000 38B5     		push	{r3, r4, r5, lr}
 907              	.LCFI7:
 908              		.cfi_def_cfa_offset 16
 909              		.cfi_offset 3, -16
 910              		.cfi_offset 4, -12
 911              		.cfi_offset 5, -8
 912              		.cfi_offset 14, -4
 913 0002 0C46     		mov	r4, r1
 625:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_obj_t * mbox = lv_obj_get_parent(btnm);
 914              		.loc 1 625 5 is_stmt 1 view .LVU268
 915              		.loc 1 625 23 is_stmt 0 view .LVU269
 916 0004 FFF7FEFF 		bl	lv_obj_get_parent
 917              	.LVL110:
 918              		.loc 1 625 23 view .LVU270
ARM GAS  D:\Temp\ccdKFHIm.s 			page 39


 919 0008 0546     		mov	r5, r0
 920              	.LVL111:
 626:lvgl/src/lv_widgets/lv_msgbox.c **** 
 627:lvgl/src/lv_widgets/lv_msgbox.c ****     /*clang-format off*/
 628:lvgl/src/lv_widgets/lv_msgbox.c ****     if(event == LV_EVENT_PRESSED || event == LV_EVENT_PRESSING || event == LV_EVENT_PRESS_LOST ||
 921              		.loc 1 628 5 is_stmt 1 view .LVU271
 922              		.loc 1 628 7 is_stmt 0 view .LVU272
 923 000a 022C     		cmp	r4, #2
 924 000c 0BD9     		bls	.L63
 925              		.loc 1 628 96 discriminator 1 view .LVU273
 926 000e 072C     		cmp	r4, #7
 927 0010 09D0     		beq	.L63
 629:lvgl/src/lv_widgets/lv_msgbox.c ****        event == LV_EVENT_RELEASED || event == LV_EVENT_SHORT_CLICKED || event == LV_EVENT_CLICKED |
 928              		.loc 1 629 35 view .LVU274
 929 0012 032C     		cmp	r4, #3
 930 0014 07D0     		beq	.L63
 931              		.loc 1 629 70 discriminator 1 view .LVU275
 932 0016 062C     		cmp	r4, #6
 933 0018 05D0     		beq	.L63
 934              		.loc 1 629 99 discriminator 2 view .LVU276
 935 001a 042C     		cmp	r4, #4
 936 001c 03D0     		beq	.L63
 630:lvgl/src/lv_widgets/lv_msgbox.c ****        event == LV_EVENT_LONG_PRESSED || event == LV_EVENT_LONG_PRESSED_REPEAT ||
 937              		.loc 1 630 39 view .LVU277
 938 001e 052C     		cmp	r4, #5
 939 0020 01D0     		beq	.L63
 940              		.loc 1 630 80 discriminator 1 view .LVU278
 941 0022 102C     		cmp	r4, #16
 942 0024 06D1     		bne	.L62
 943              	.L63:
 631:lvgl/src/lv_widgets/lv_msgbox.c ****        event == LV_EVENT_VALUE_CHANGED) {
 632:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_event_send(mbox, event, lv_event_get_data());
 944              		.loc 1 632 9 is_stmt 1 view .LVU279
 945 0026 FFF7FEFF 		bl	lv_event_get_data
 946              	.LVL112:
 947              		.loc 1 632 9 is_stmt 0 view .LVU280
 948 002a 0246     		mov	r2, r0
 949 002c 2146     		mov	r1, r4
 950 002e 2846     		mov	r0, r5
 951 0030 FFF7FEFF 		bl	lv_event_send
 952              	.LVL113:
 953              	.L62:
 633:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 634:lvgl/src/lv_widgets/lv_msgbox.c ****     /*clang-format on*/
 635:lvgl/src/lv_widgets/lv_msgbox.c **** }
 954              		.loc 1 635 1 view .LVU281
 955 0034 38BD     		pop	{r3, r4, r5, pc}
 956              		.loc 1 635 1 view .LVU282
 957              		.cfi_endproc
 958              	.LFE493:
 960              		.section	.text.lv_msgbox_create,"ax",%progbits
 961              		.align	1
 962              		.global	lv_msgbox_create
 963              		.syntax unified
 964              		.thumb
 965              		.thumb_func
 966              		.fpu fpv4-sp-d16
ARM GAS  D:\Temp\ccdKFHIm.s 			page 40


 968              	lv_msgbox_create:
 969              	.LVL114:
 970              	.LFB474:
  70:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_LOG_TRACE("message box create started");
 971              		.loc 1 70 1 is_stmt 1 view -0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
  70:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_LOG_TRACE("message box create started");
 975              		.loc 1 70 1 is_stmt 0 view .LVU284
 976 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 977              	.LCFI8:
 978              		.cfi_def_cfa_offset 20
 979              		.cfi_offset 4, -20
 980              		.cfi_offset 5, -16
 981              		.cfi_offset 6, -12
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 83B0     		sub	sp, sp, #12
 985              	.LCFI9:
 986              		.cfi_def_cfa_offset 32
 987 0004 0746     		mov	r7, r0
 988 0006 0E46     		mov	r6, r1
  71:lvgl/src/lv_widgets/lv_msgbox.c **** 
 989              		.loc 1 71 47 is_stmt 1 view .LVU285
  74:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_MEM(mbox);
 990              		.loc 1 74 5 view .LVU286
  74:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_MEM(mbox);
 991              		.loc 1 74 23 is_stmt 0 view .LVU287
 992 0008 FFF7FEFF 		bl	lv_cont_create
 993              	.LVL115:
  74:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_MEM(mbox);
 994              		.loc 1 74 23 view .LVU288
 995 000c 0446     		mov	r4, r0
 996              	.LVL116:
  75:lvgl/src/lv_widgets/lv_msgbox.c ****     if(mbox == NULL) return NULL;
 997              		.loc 1 75 5 is_stmt 1 view .LVU289
  75:lvgl/src/lv_widgets/lv_msgbox.c ****     if(mbox == NULL) return NULL;
 998              		.loc 1 75 5 view .LVU290
 999 000e FFF7FEFF 		bl	lv_debug_check_null
 1000              	.LVL117:
  75:lvgl/src/lv_widgets/lv_msgbox.c ****     if(mbox == NULL) return NULL;
 1001              		.loc 1 75 5 is_stmt 0 view .LVU291
 1002 0012 68B3     		cbz	r0, .L83
  75:lvgl/src/lv_widgets/lv_msgbox.c ****     if(mbox == NULL) return NULL;
 1003              		.loc 1 75 24 is_stmt 1 discriminator 2 view .LVU292
  76:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1004              		.loc 1 76 5 discriminator 2 view .LVU293
  76:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1005              		.loc 1 76 7 is_stmt 0 discriminator 2 view .LVU294
 1006 0014 4CB3     		cbz	r4, .L66
  78:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1007              		.loc 1 78 5 is_stmt 1 view .LVU295
  78:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1008              		.loc 1 78 24 is_stmt 0 view .LVU296
 1009 0016 5B4B     		ldr	r3, .L91
 1010 0018 1B68     		ldr	r3, [r3]
ARM GAS  D:\Temp\ccdKFHIm.s 			page 41


  78:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1011              		.loc 1 78 7 view .LVU297
 1012 001a 7BB3     		cbz	r3, .L84
 1013              	.L70:
  81:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_MEM(ext);
 1014              		.loc 1 81 5 is_stmt 1 view .LVU298
  81:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_MEM(ext);
 1015              		.loc 1 81 29 is_stmt 0 view .LVU299
 1016 001c 1021     		movs	r1, #16
 1017 001e 2046     		mov	r0, r4
 1018 0020 FFF7FEFF 		bl	lv_obj_allocate_ext_attr
 1019              	.LVL118:
 1020 0024 0546     		mov	r5, r0
 1021              	.LVL119:
  82:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext == NULL) {
 1022              		.loc 1 82 5 is_stmt 1 view .LVU300
  82:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext == NULL) {
 1023              		.loc 1 82 5 view .LVU301
 1024 0026 FFF7FEFF 		bl	lv_debug_check_null
 1025              	.LVL120:
  82:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext == NULL) {
 1026              		.loc 1 82 5 is_stmt 0 view .LVU302
 1027 002a 68B3     		cbz	r0, .L85
  82:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext == NULL) {
 1028              		.loc 1 82 23 is_stmt 1 discriminator 2 view .LVU303
  83:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_del(mbox);
 1029              		.loc 1 83 5 discriminator 2 view .LVU304
  83:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_del(mbox);
 1030              		.loc 1 83 7 is_stmt 0 discriminator 2 view .LVU305
 1031 002c 95B3     		cbz	r5, .L86
  88:lvgl/src/lv_widgets/lv_msgbox.c ****     ext->btnm = NULL;
 1032              		.loc 1 88 5 is_stmt 1 view .LVU306
  88:lvgl/src/lv_widgets/lv_msgbox.c ****     ext->btnm = NULL;
 1033              		.loc 1 88 15 is_stmt 0 view .LVU307
 1034 002e 0023     		movs	r3, #0
 1035 0030 6B60     		str	r3, [r5, #4]
  89:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_ANIMATION
 1036              		.loc 1 89 5 is_stmt 1 view .LVU308
  89:lvgl/src/lv_widgets/lv_msgbox.c **** #if LV_USE_ANIMATION
 1037              		.loc 1 89 15 is_stmt 0 view .LVU309
 1038 0032 AB60     		str	r3, [r5, #8]
  91:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 1039              		.loc 1 91 5 is_stmt 1 view .LVU310
  91:lvgl/src/lv_widgets/lv_msgbox.c **** #endif
 1040              		.loc 1 91 20 is_stmt 0 view .LVU311
 1041 0034 C823     		movs	r3, #200
 1042 0036 AB81     		strh	r3, [r5, #12]	@ movhi
  95:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1043              		.loc 1 95 5 is_stmt 1 view .LVU312
 1044 0038 5349     		ldr	r1, .L91+4
 1045 003a 2046     		mov	r0, r4
 1046 003c FFF7FEFF 		bl	lv_obj_set_signal_cb
 1047              	.LVL121:
  98:lvgl/src/lv_widgets/lv_msgbox.c ****         ext->text = lv_label_create(mbox, NULL);
 1048              		.loc 1 98 5 view .LVU313
  98:lvgl/src/lv_widgets/lv_msgbox.c ****         ext->text = lv_label_create(mbox, NULL);
 1049              		.loc 1 98 7 is_stmt 0 view .LVU314
ARM GAS  D:\Temp\ccdKFHIm.s 			page 42


 1050 0040 6EB3     		cbz	r6, .L87
 1051              	.LBB84:
 122:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1052              		.loc 1 122 9 is_stmt 1 view .LVU315
 122:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1053              		.loc 1 122 38 is_stmt 0 view .LVU316
 1054 0042 3046     		mov	r0, r6
 1055 0044 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1056              	.LVL122:
 1057 0048 0646     		mov	r6, r0
 1058              	.LVL123:
 124:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1059              		.loc 1 124 9 is_stmt 1 view .LVU317
 124:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1060              		.loc 1 124 21 is_stmt 0 view .LVU318
 1061 004a 4168     		ldr	r1, [r0, #4]
 1062 004c 2046     		mov	r0, r4
 1063              	.LVL124:
 124:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1064              		.loc 1 124 21 view .LVU319
 1065 004e FFF7FEFF 		bl	lv_label_create
 1066              	.LVL125:
 124:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1067              		.loc 1 124 19 view .LVU320
 1068 0052 6860     		str	r0, [r5, #4]
 127:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1069              		.loc 1 127 9 is_stmt 1 view .LVU321
 127:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1070              		.loc 1 127 20 is_stmt 0 view .LVU322
 1071 0054 B168     		ldr	r1, [r6, #8]
 127:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1072              		.loc 1 127 11 view .LVU323
 1073 0056 19B1     		cbz	r1, .L79
 127:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1074              		.loc 1 127 28 is_stmt 1 discriminator 1 view .LVU324
 127:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1075              		.loc 1 127 40 is_stmt 0 discriminator 1 view .LVU325
 1076 0058 2046     		mov	r0, r4
 1077 005a FFF7FEFF 		bl	lv_btnmatrix_create
 1078              	.LVL126:
 127:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1079              		.loc 1 127 38 discriminator 1 view .LVU326
 1080 005e A860     		str	r0, [r5, #8]
 1081              	.L79:
 130:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 1082              		.loc 1 130 9 is_stmt 1 view .LVU327
 1083 0060 FF22     		movs	r2, #255
 1084 0062 1146     		mov	r1, r2
 1085 0064 2046     		mov	r0, r4
 1086 0066 FFF7FEFF 		bl	lv_obj_refresh_style
 1087              	.LVL127:
 1088              	.L66:
 130:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 1089              		.loc 1 130 9 is_stmt 0 view .LVU328
 1090              	.LBE84:
 136:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1091              		.loc 1 136 1 view .LVU329
ARM GAS  D:\Temp\ccdKFHIm.s 			page 43


 1092 006a 2046     		mov	r0, r4
 1093 006c 03B0     		add	sp, sp, #12
 1094              	.LCFI10:
 1095              		.cfi_remember_state
 1096              		.cfi_def_cfa_offset 20
 1097              		@ sp needed
 1098 006e F0BD     		pop	{r4, r5, r6, r7, pc}
 1099              	.LVL128:
 1100              	.L83:
 1101              	.LCFI11:
 1102              		.cfi_restore_state
  75:lvgl/src/lv_widgets/lv_msgbox.c ****     if(mbox == NULL) return NULL;
 1103              		.loc 1 75 5 is_stmt 1 discriminator 1 view .LVU330
  75:lvgl/src/lv_widgets/lv_msgbox.c ****     if(mbox == NULL) return NULL;
 1104              		.loc 1 75 5 discriminator 1 view .LVU331
 1105 0070 2246     		mov	r2, r4
 1106 0072 0023     		movs	r3, #0
 1107 0074 4548     		ldr	r0, .L91+8
 1108 0076 FFF7FEFF 		bl	lv_debug_log_error
 1109              	.LVL129:
 1110              	.L68:
  75:lvgl/src/lv_widgets/lv_msgbox.c ****     if(mbox == NULL) return NULL;
 1111              		.loc 1 75 5 discriminator 1 view .LVU332
  75:lvgl/src/lv_widgets/lv_msgbox.c ****     if(mbox == NULL) return NULL;
 1112              		.loc 1 75 5 discriminator 1 view .LVU333
 1113 007a FEE7     		b	.L68
 1114              	.L84:
  78:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1115              		.loc 1 78 33 discriminator 1 view .LVU334
  78:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1116              		.loc 1 78 51 is_stmt 0 discriminator 1 view .LVU335
 1117 007c 2046     		mov	r0, r4
 1118 007e FFF7FEFF 		bl	lv_obj_get_signal_cb
 1119              	.LVL130:
  78:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1120              		.loc 1 78 49 discriminator 1 view .LVU336
 1121 0082 404B     		ldr	r3, .L91
 1122 0084 1860     		str	r0, [r3]
 1123 0086 C9E7     		b	.L70
 1124              	.LVL131:
 1125              	.L85:
  82:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext == NULL) {
 1126              		.loc 1 82 5 is_stmt 1 discriminator 1 view .LVU337
  82:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext == NULL) {
 1127              		.loc 1 82 5 discriminator 1 view .LVU338
 1128 0088 2A46     		mov	r2, r5
 1129 008a 0023     		movs	r3, #0
 1130 008c 3F48     		ldr	r0, .L91+8
 1131 008e FFF7FEFF 		bl	lv_debug_log_error
 1132              	.LVL132:
 1133              	.L72:
  82:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext == NULL) {
 1134              		.loc 1 82 5 discriminator 2 view .LVU339
  82:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext == NULL) {
 1135              		.loc 1 82 5 discriminator 2 view .LVU340
 1136 0092 FEE7     		b	.L72
 1137              	.L86:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 44


  84:lvgl/src/lv_widgets/lv_msgbox.c ****         return NULL;
 1138              		.loc 1 84 9 view .LVU341
 1139 0094 2046     		mov	r0, r4
 1140 0096 FFF7FEFF 		bl	lv_obj_del
 1141              	.LVL133:
  85:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 1142              		.loc 1 85 9 view .LVU342
  85:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 1143              		.loc 1 85 16 is_stmt 0 view .LVU343
 1144 009a 0024     		movs	r4, #0
 1145              	.LVL134:
  85:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 1146              		.loc 1 85 16 view .LVU344
 1147 009c E5E7     		b	.L66
 1148              	.LVL135:
 1149              	.L87:
 1150              	.LBB85:
  99:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_label_set_align(ext->text, LV_LABEL_ALIGN_CENTER);
 1151              		.loc 1 99 9 is_stmt 1 view .LVU345
  99:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_label_set_align(ext->text, LV_LABEL_ALIGN_CENTER);
 1152              		.loc 1 99 21 is_stmt 0 view .LVU346
 1153 009e 0021     		movs	r1, #0
 1154 00a0 2046     		mov	r0, r4
 1155 00a2 FFF7FEFF 		bl	lv_label_create
 1156              	.LVL136:
  99:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_label_set_align(ext->text, LV_LABEL_ALIGN_CENTER);
 1157              		.loc 1 99 19 view .LVU347
 1158 00a6 6860     		str	r0, [r5, #4]
 100:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_label_set_long_mode(ext->text, LV_LABEL_LONG_BREAK);
 1159              		.loc 1 100 9 is_stmt 1 view .LVU348
 1160 00a8 0121     		movs	r1, #1
 1161 00aa FFF7FEFF 		bl	lv_label_set_align
 1162              	.LVL137:
 101:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_label_set_text(ext->text, "Message");
 1163              		.loc 1 101 9 view .LVU349
 1164 00ae 0121     		movs	r1, #1
 1165 00b0 6868     		ldr	r0, [r5, #4]
 1166 00b2 FFF7FEFF 		bl	lv_label_set_long_mode
 1167              	.LVL138:
 102:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1168              		.loc 1 102 9 view .LVU350
 1169 00b6 3649     		ldr	r1, .L91+12
 1170 00b8 6868     		ldr	r0, [r5, #4]
 1171 00ba FFF7FEFF 		bl	lv_label_set_text
 1172              	.LVL139:
 104:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_cont_set_fit2(mbox, LV_FIT_NONE, LV_FIT_TIGHT);
 1173              		.loc 1 104 9 view .LVU351
 1174 00be 0321     		movs	r1, #3
 1175 00c0 2046     		mov	r0, r4
 1176 00c2 FFF7FEFF 		bl	lv_cont_set_layout
 1177              	.LVL140:
 105:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_coord_t fit_w = lv_obj_get_width_fit(par);
 1178              		.loc 1 105 9 view .LVU352
 1179              	.LBB86:
 1180              	.LBI86:
 1181              		.file 5 "lvgl/src/lv_widgets/lv_cont.h"
   1:lvgl/src/lv_widgets/lv_cont.h **** /**
ARM GAS  D:\Temp\ccdKFHIm.s 			page 45


   2:lvgl/src/lv_widgets/lv_cont.h ****  * @file lv_cont.h
   3:lvgl/src/lv_widgets/lv_cont.h ****  *
   4:lvgl/src/lv_widgets/lv_cont.h ****  */
   5:lvgl/src/lv_widgets/lv_cont.h **** 
   6:lvgl/src/lv_widgets/lv_cont.h **** #ifndef LV_CONT_H
   7:lvgl/src/lv_widgets/lv_cont.h **** #define LV_CONT_H
   8:lvgl/src/lv_widgets/lv_cont.h **** 
   9:lvgl/src/lv_widgets/lv_cont.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/lv_cont.h **** extern "C" {
  11:lvgl/src/lv_widgets/lv_cont.h **** #endif
  12:lvgl/src/lv_widgets/lv_cont.h **** 
  13:lvgl/src/lv_widgets/lv_cont.h **** /*********************
  14:lvgl/src/lv_widgets/lv_cont.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/lv_cont.h ****  *********************/
  16:lvgl/src/lv_widgets/lv_cont.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/lv_cont.h **** 
  18:lvgl/src/lv_widgets/lv_cont.h **** #if LV_USE_CONT != 0
  19:lvgl/src/lv_widgets/lv_cont.h **** 
  20:lvgl/src/lv_widgets/lv_cont.h **** #include "../lv_core/lv_obj.h"
  21:lvgl/src/lv_widgets/lv_cont.h **** 
  22:lvgl/src/lv_widgets/lv_cont.h **** /*********************
  23:lvgl/src/lv_widgets/lv_cont.h ****  *      DEFINES
  24:lvgl/src/lv_widgets/lv_cont.h ****  *********************/
  25:lvgl/src/lv_widgets/lv_cont.h **** 
  26:lvgl/src/lv_widgets/lv_cont.h **** /**********************
  27:lvgl/src/lv_widgets/lv_cont.h ****  *      TYPEDEFS
  28:lvgl/src/lv_widgets/lv_cont.h ****  **********************/
  29:lvgl/src/lv_widgets/lv_cont.h **** 
  30:lvgl/src/lv_widgets/lv_cont.h **** /** Container layout options*/
  31:lvgl/src/lv_widgets/lv_cont.h **** enum {
  32:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_OFF = 0, /**< No layout */
  33:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_CENTER, /**< Center objects */
  34:lvgl/src/lv_widgets/lv_cont.h **** 
  35:lvgl/src/lv_widgets/lv_cont.h ****     /**
  36:lvgl/src/lv_widgets/lv_cont.h ****      * COLUMN:
  37:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object below each other
  38:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_top` space on the top
  39:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects
  40:lvgl/src/lv_widgets/lv_cont.h ****      */
  41:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_COLUMN_LEFT,      /**< Column left align*/
  42:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_COLUMN_MID,       /**< Column middle align*/
  43:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_COLUMN_RIGHT,     /**< Column right align*/
  44:lvgl/src/lv_widgets/lv_cont.h **** 
  45:lvgl/src/lv_widgets/lv_cont.h ****     /**
  46:lvgl/src/lv_widgets/lv_cont.h ****      * ROW:
  47:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object next to each other
  48:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_left` space on the left
  49:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects
  50:lvgl/src/lv_widgets/lv_cont.h ****      * - If the object which applies the layout has `base_dir == LV_BIDI_DIR_RTL`
  51:lvgl/src/lv_widgets/lv_cont.h ****      *   the row will start from the right applying `pad.right` space
  52:lvgl/src/lv_widgets/lv_cont.h ****      */
  53:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_ROW_TOP,          /**< Row top align*/
  54:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_ROW_MID,          /**< Row middle align*/
  55:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_ROW_BOTTOM,       /**< Row bottom align*/
  56:lvgl/src/lv_widgets/lv_cont.h **** 
  57:lvgl/src/lv_widgets/lv_cont.h ****     /**
  58:lvgl/src/lv_widgets/lv_cont.h ****      * PRETTY:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 46


  59:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object next to each other
  60:lvgl/src/lv_widgets/lv_cont.h ****      * - If there is no more space start a new row
  61:lvgl/src/lv_widgets/lv_cont.h ****      * - Respect `pad_left` and `pad_right` when determining the available space in a row
  62:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in the same row
  63:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in rows
  64:lvgl/src/lv_widgets/lv_cont.h ****      * - Divide the remaining horizontal space equally
  65:lvgl/src/lv_widgets/lv_cont.h ****      */
  66:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_PRETTY_TOP,       /**< Row top align*/
  67:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_PRETTY_MID,       /**< Row middle align*/
  68:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_PRETTY_BOTTOM,    /**< Row bottom align*/
  69:lvgl/src/lv_widgets/lv_cont.h **** 
  70:lvgl/src/lv_widgets/lv_cont.h ****     /**
  71:lvgl/src/lv_widgets/lv_cont.h ****      * GRID
  72:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object next to each other
  73:lvgl/src/lv_widgets/lv_cont.h ****      * - If there is no more space start a new row
  74:lvgl/src/lv_widgets/lv_cont.h ****      * - Respect `pad_left` and `pad_right` when determining the available space in a row
  75:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in the same row
  76:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in rows
  77:lvgl/src/lv_widgets/lv_cont.h ****      * - Unlike `PRETTY`, `GRID` always keep `pad_inner` space horizontally between objects
  78:lvgl/src/lv_widgets/lv_cont.h ****      *   so it doesn't divide the remaining horizontal space equally
  79:lvgl/src/lv_widgets/lv_cont.h ****      */
  80:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_GRID,   /**< Align same-sized object into a grid*/
  81:lvgl/src/lv_widgets/lv_cont.h **** 
  82:lvgl/src/lv_widgets/lv_cont.h ****     _LV_LAYOUT_LAST
  83:lvgl/src/lv_widgets/lv_cont.h **** };
  84:lvgl/src/lv_widgets/lv_cont.h **** typedef uint8_t lv_layout_t;
  85:lvgl/src/lv_widgets/lv_cont.h **** 
  86:lvgl/src/lv_widgets/lv_cont.h **** /**
  87:lvgl/src/lv_widgets/lv_cont.h ****  * How to resize the container around the children.
  88:lvgl/src/lv_widgets/lv_cont.h ****  */
  89:lvgl/src/lv_widgets/lv_cont.h **** enum {
  90:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_NONE,  /**< Do not change the size automatically*/
  91:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_TIGHT, /**< Shrink wrap around the children */
  92:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_PARENT, /**< Align the size to the parent's edge*/
  93:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_MAX,  /**< Align the size to the parent's edge first but if there is an object out of it
  94:lvgl/src/lv_widgets/lv_cont.h ****                      then get larger */
  95:lvgl/src/lv_widgets/lv_cont.h ****     _LV_FIT_LAST
  96:lvgl/src/lv_widgets/lv_cont.h **** };
  97:lvgl/src/lv_widgets/lv_cont.h **** typedef uint8_t lv_fit_t;
  98:lvgl/src/lv_widgets/lv_cont.h **** 
  99:lvgl/src/lv_widgets/lv_cont.h **** typedef struct {
 100:lvgl/src/lv_widgets/lv_cont.h ****     /*Inherited from 'base_obj' so no inherited ext. */ /*Ext. of ancestor*/
 101:lvgl/src/lv_widgets/lv_cont.h ****     /*New data for this type */
 102:lvgl/src/lv_widgets/lv_cont.h ****     lv_layout_t layout : 4;     /*A layout from 'lv_layout_t' enum*/
 103:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_left : 2;   /*A fit type from `lv_fit_t` enum */
 104:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_right : 2;  /*A fit type from `lv_fit_t` enum */
 105:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_top : 2;    /*A fit type from `lv_fit_t` enum */
 106:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_bottom : 2; /*A fit type from `lv_fit_t` enum */
 107:lvgl/src/lv_widgets/lv_cont.h **** } lv_cont_ext_t;
 108:lvgl/src/lv_widgets/lv_cont.h **** 
 109:lvgl/src/lv_widgets/lv_cont.h **** /*Part of the container*/
 110:lvgl/src/lv_widgets/lv_cont.h **** enum {
 111:lvgl/src/lv_widgets/lv_cont.h ****     LV_CONT_PART_MAIN = LV_OBJ_PART_MAIN,
 112:lvgl/src/lv_widgets/lv_cont.h ****     _LV_CONT_PART_VIRTUAL_LAST = _LV_OBJ_PART_VIRTUAL_LAST,
 113:lvgl/src/lv_widgets/lv_cont.h ****     _LV_CONT_PART_REAL_LAST = _LV_OBJ_PART_REAL_LAST,
 114:lvgl/src/lv_widgets/lv_cont.h **** };
 115:lvgl/src/lv_widgets/lv_cont.h **** 
ARM GAS  D:\Temp\ccdKFHIm.s 			page 47


 116:lvgl/src/lv_widgets/lv_cont.h **** /**********************
 117:lvgl/src/lv_widgets/lv_cont.h ****  * GLOBAL PROTOTYPES
 118:lvgl/src/lv_widgets/lv_cont.h ****  **********************/
 119:lvgl/src/lv_widgets/lv_cont.h **** 
 120:lvgl/src/lv_widgets/lv_cont.h **** /**
 121:lvgl/src/lv_widgets/lv_cont.h ****  * Create a container objects
 122:lvgl/src/lv_widgets/lv_cont.h ****  * @param par pointer to an object, it will be the parent of the new container
 123:lvgl/src/lv_widgets/lv_cont.h ****  * @param copy pointer to a container object, if not NULL then the new object will be copied from i
 124:lvgl/src/lv_widgets/lv_cont.h ****  * @return pointer to the created container
 125:lvgl/src/lv_widgets/lv_cont.h ****  */
 126:lvgl/src/lv_widgets/lv_cont.h **** lv_obj_t * lv_cont_create(lv_obj_t * par, const lv_obj_t * copy);
 127:lvgl/src/lv_widgets/lv_cont.h **** 
 128:lvgl/src/lv_widgets/lv_cont.h **** /*=====================
 129:lvgl/src/lv_widgets/lv_cont.h ****  * Setter functions
 130:lvgl/src/lv_widgets/lv_cont.h ****  *====================*/
 131:lvgl/src/lv_widgets/lv_cont.h **** 
 132:lvgl/src/lv_widgets/lv_cont.h **** /**
 133:lvgl/src/lv_widgets/lv_cont.h ****  * Set a layout on a container
 134:lvgl/src/lv_widgets/lv_cont.h ****  * @param cont pointer to a container object
 135:lvgl/src/lv_widgets/lv_cont.h ****  * @param layout a layout from 'lv_cont_layout_t'
 136:lvgl/src/lv_widgets/lv_cont.h ****  */
 137:lvgl/src/lv_widgets/lv_cont.h **** void lv_cont_set_layout(lv_obj_t * cont, lv_layout_t layout);
 138:lvgl/src/lv_widgets/lv_cont.h **** 
 139:lvgl/src/lv_widgets/lv_cont.h **** /**
 140:lvgl/src/lv_widgets/lv_cont.h ****  * Set the fit policy in all 4 directions separately.
 141:lvgl/src/lv_widgets/lv_cont.h ****  * It tell how to change the container's size automatically.
 142:lvgl/src/lv_widgets/lv_cont.h ****  * @param cont pointer to a container object
 143:lvgl/src/lv_widgets/lv_cont.h ****  * @param left left fit policy from `lv_fit_t`
 144:lvgl/src/lv_widgets/lv_cont.h ****  * @param right right fit policy from `lv_fit_t`
 145:lvgl/src/lv_widgets/lv_cont.h ****  * @param top top fit policy from `lv_fit_t`
 146:lvgl/src/lv_widgets/lv_cont.h ****  * @param bottom bottom fit policy from `lv_fit_t`
 147:lvgl/src/lv_widgets/lv_cont.h ****  */
 148:lvgl/src/lv_widgets/lv_cont.h **** void lv_cont_set_fit4(lv_obj_t * cont, lv_fit_t left, lv_fit_t right, lv_fit_t top, lv_fit_t bottom
 149:lvgl/src/lv_widgets/lv_cont.h **** 
 150:lvgl/src/lv_widgets/lv_cont.h **** /**
 151:lvgl/src/lv_widgets/lv_cont.h ****  * Set the fit policy horizontally and vertically separately.
 152:lvgl/src/lv_widgets/lv_cont.h ****  * It tells how to change the container's size automatically.
 153:lvgl/src/lv_widgets/lv_cont.h ****  * @param cont pointer to a container object
 154:lvgl/src/lv_widgets/lv_cont.h ****  * @param hor horizontal fit policy from `lv_fit_t`
 155:lvgl/src/lv_widgets/lv_cont.h ****  * @param ver vertical fit policy from `lv_fit_t`
 156:lvgl/src/lv_widgets/lv_cont.h ****  */
 157:lvgl/src/lv_widgets/lv_cont.h **** static inline void lv_cont_set_fit2(lv_obj_t * cont, lv_fit_t hor, lv_fit_t ver)
 1182              		.loc 5 157 20 view .LVU353
 1183              	.LBB87:
 158:lvgl/src/lv_widgets/lv_cont.h **** {
 159:lvgl/src/lv_widgets/lv_cont.h ****     lv_cont_set_fit4(cont, hor, hor, ver, ver);
 1184              		.loc 5 159 5 view .LVU354
 1185 00c6 0123     		movs	r3, #1
 1186 00c8 0093     		str	r3, [sp]
 1187 00ca 0022     		movs	r2, #0
 1188 00cc 1146     		mov	r1, r2
 1189 00ce 2046     		mov	r0, r4
 1190 00d0 FFF7FEFF 		bl	lv_cont_set_fit4
 1191              	.LVL141:
 1192              		.loc 5 159 5 is_stmt 0 view .LVU355
 1193              	.LBE87:
 1194              	.LBE86:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 48


 106:lvgl/src/lv_widgets/lv_msgbox.c ****         if(lv_disp_get_size_category(NULL) <= LV_DISP_SIZE_SMALL) {
 1195              		.loc 1 106 9 is_stmt 1 view .LVU356
 106:lvgl/src/lv_widgets/lv_msgbox.c ****         if(lv_disp_get_size_category(NULL) <= LV_DISP_SIZE_SMALL) {
 1196              		.loc 1 106 28 is_stmt 0 view .LVU357
 1197 00d4 3846     		mov	r0, r7
 1198 00d6 FFF7FEFF 		bl	lv_obj_get_width_fit
 1199              	.LVL142:
 1200 00da 0546     		mov	r5, r0
 1201              	.LVL143:
 107:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_obj_set_width(mbox, fit_w);
 1202              		.loc 1 107 9 is_stmt 1 view .LVU358
 107:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_obj_set_width(mbox, fit_w);
 1203              		.loc 1 107 12 is_stmt 0 view .LVU359
 1204 00dc 0020     		movs	r0, #0
 1205 00de FFF7FEFF 		bl	lv_disp_get_size_category
 1206              	.LVL144:
 107:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_obj_set_width(mbox, fit_w);
 1207              		.loc 1 107 11 view .LVU360
 1208 00e2 98B9     		cbnz	r0, .L75
 108:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1209              		.loc 1 108 13 is_stmt 1 view .LVU361
 1210 00e4 2946     		mov	r1, r5
 1211 00e6 2046     		mov	r0, r4
 1212 00e8 FFF7FEFF 		bl	lv_obj_set_width
 1213              	.LVL145:
 1214              	.L76:
 113:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_obj_set_event_cb(mbox, lv_msgbox_default_event_cb);
 1215              		.loc 1 113 9 view .LVU362
 1216 00ec 0021     		movs	r1, #0
 1217 00ee 0091     		str	r1, [sp]
 1218 00f0 0B46     		mov	r3, r1
 1219 00f2 0A46     		mov	r2, r1
 1220 00f4 2046     		mov	r0, r4
 1221 00f6 FFF7FEFF 		bl	lv_obj_align
 1222              	.LVL146:
 114:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1223              		.loc 1 114 9 view .LVU363
 1224 00fa 2649     		ldr	r1, .L91+16
 1225 00fc 2046     		mov	r0, r4
 1226 00fe FFF7FEFF 		bl	lv_obj_set_event_cb
 1227              	.LVL147:
 117:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1228              		.loc 1 117 9 view .LVU364
 1229 0102 1821     		movs	r1, #24
 1230 0104 2046     		mov	r0, r4
 1231 0106 FFF7FEFF 		bl	lv_theme_apply
 1232              	.LVL148:
 1233              	.LBE85:
 1234 010a AEE7     		b	.L66
 1235              	.LVL149:
 1236              	.L75:
 1237              	.LBB88:
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1238              		.loc 1 111 13 view .LVU365
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1239              		.loc 1 111 36 is_stmt 0 view .LVU366
 1240 010c 2E46     		mov	r6, r5
ARM GAS  D:\Temp\ccdKFHIm.s 			page 49


 1241              	.LVL150:
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1242              		.loc 1 111 36 view .LVU367
 1243 010e 0020     		movs	r0, #0
 1244 0110 FFF7FEFF 		bl	lv_disp_get_dpi
 1245              	.LVL151:
 1246 0114 4FF4C873 		mov	r3, #400
 1247 0118 03FB00F3 		mul	r3, r3, r0
 1248 011c EF2B     		cmp	r3, #239
 1249 011e 07DC     		bgt	.L88
 1250 0120 0123     		movs	r3, #1
 1251              	.L77:
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1252              		.loc 1 111 13 discriminator 4 view .LVU368
 1253 0122 9E42     		cmp	r6, r3
 1254 0124 13DA     		bge	.L89
 1255              	.LVL152:
 1256              	.L78:
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1257              		.loc 1 111 13 discriminator 12 view .LVU369
 1258 0126 2946     		mov	r1, r5
 1259 0128 2046     		mov	r0, r4
 1260 012a FFF7FEFF 		bl	lv_obj_set_width
 1261              	.LVL153:
 1262 012e DDE7     		b	.L76
 1263              	.LVL154:
 1264              	.L88:
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1265              		.loc 1 111 36 discriminator 1 view .LVU370
 1266 0130 0020     		movs	r0, #0
 1267 0132 FFF7FEFF 		bl	lv_disp_get_dpi
 1268              	.LVL155:
 1269 0136 4FF4C873 		mov	r3, #400
 1270 013a 03FB00F3 		mul	r3, r3, r0
 1271 013e 5033     		adds	r3, r3, #80
 1272 0140 154A     		ldr	r2, .L91+20
 1273 0142 82FB0312 		smull	r1, r2, r2, r3
 1274 0146 DB17     		asrs	r3, r3, #31
 1275 0148 C3EBA213 		rsb	r3, r3, r2, asr #6
 1276 014c E9E7     		b	.L77
 1277              	.L89:
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1278              		.loc 1 111 36 discriminator 5 view .LVU371
 1279 014e 0020     		movs	r0, #0
 1280 0150 FFF7FEFF 		bl	lv_disp_get_dpi
 1281              	.LVL156:
 1282 0154 4FF4C873 		mov	r3, #400
 1283 0158 03FB00F3 		mul	r3, r3, r0
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1284              		.loc 1 111 13 discriminator 5 view .LVU372
 1285 015c EF2B     		cmp	r3, #239
 1286 015e 01DC     		bgt	.L90
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1287              		.loc 1 111 13 view .LVU373
 1288 0160 0125     		movs	r5, #1
 1289              	.LVL157:
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
ARM GAS  D:\Temp\ccdKFHIm.s 			page 50


 1290              		.loc 1 111 13 view .LVU374
 1291 0162 E0E7     		b	.L78
 1292              	.LVL158:
 1293              	.L90:
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1294              		.loc 1 111 36 discriminator 7 view .LVU375
 1295 0164 0020     		movs	r0, #0
 1296 0166 FFF7FEFF 		bl	lv_disp_get_dpi
 1297              	.LVL159:
 1298 016a 4FF4C873 		mov	r3, #400
 1299 016e 03FB00F3 		mul	r3, r3, r0
 1300 0172 5033     		adds	r3, r3, #80
 1301 0174 084A     		ldr	r2, .L91+20
 1302 0176 82FB0312 		smull	r1, r2, r2, r3
 1303 017a DD17     		asrs	r5, r3, #31
 1304              	.LVL160:
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1305              		.loc 1 111 36 discriminator 7 view .LVU376
 1306 017c C5EBA215 		rsb	r5, r5, r2, asr #6
 111:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1307              		.loc 1 111 13 discriminator 7 view .LVU377
 1308 0180 2DB2     		sxth	r5, r5
 1309 0182 D0E7     		b	.L78
 1310              	.L92:
 1311              		.align	2
 1312              	.L91:
 1313 0184 00000000 		.word	.LANCHOR0
 1314 0188 00000000 		.word	lv_msgbox_signal
 1315 018c 00000000 		.word	.LC2
 1316 0190 10000000 		.word	.LC3
 1317 0194 00000000 		.word	lv_msgbox_default_event_cb
 1318 0198 67666666 		.word	1717986919
 1319              	.LBE88:
 1320              		.cfi_endproc
 1321              	.LFE474:
 1323              		.section	.text.lv_msgbox_add_btns,"ax",%progbits
 1324              		.align	1
 1325              		.global	lv_msgbox_add_btns
 1326              		.syntax unified
 1327              		.thumb
 1328              		.thumb_func
 1329              		.fpu fpv4-sp-d16
 1331              	lv_msgbox_add_btns:
 1332              	.LVL161:
 1333              	.LFB475:
 149:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1334              		.loc 1 149 1 is_stmt 1 view -0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 149:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1338              		.loc 1 149 1 is_stmt 0 view .LVU379
 1339 0000 70B5     		push	{r4, r5, r6, lr}
 1340              	.LCFI12:
 1341              		.cfi_def_cfa_offset 16
 1342              		.cfi_offset 4, -16
 1343              		.cfi_offset 5, -12
ARM GAS  D:\Temp\ccdKFHIm.s 			page 51


 1344              		.cfi_offset 6, -8
 1345              		.cfi_offset 14, -4
 1346 0002 0546     		mov	r5, r0
 1347 0004 0E46     		mov	r6, r1
 150:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_NULL(btn_map);
 1348              		.loc 1 150 5 is_stmt 1 view .LVU380
 150:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_NULL(btn_map);
 1349              		.loc 1 150 5 view .LVU381
 1350 0006 FFF7FEFF 		bl	lv_debug_check_null
 1351              	.LVL162:
 150:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_NULL(btn_map);
 1352              		.loc 1 150 5 is_stmt 0 view .LVU382
 1353 000a 28B9     		cbnz	r0, .L94
 150:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_NULL(btn_map);
 1354              		.loc 1 150 5 is_stmt 1 discriminator 1 view .LVU383
 150:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_NULL(btn_map);
 1355              		.loc 1 150 5 discriminator 1 view .LVU384
 1356 000c 2A46     		mov	r2, r5
 1357 000e 0023     		movs	r3, #0
 1358 0010 2348     		ldr	r0, .L105
 1359 0012 FFF7FEFF 		bl	lv_debug_log_error
 1360              	.LVL163:
 1361              	.L95:
 150:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_NULL(btn_map);
 1362              		.loc 1 150 5 discriminator 1 view .LVU385
 150:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_NULL(btn_map);
 1363              		.loc 1 150 5 discriminator 1 view .LVU386
 1364 0016 FEE7     		b	.L95
 1365              	.L94:
 150:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_NULL(btn_map);
 1366              		.loc 1 150 38 discriminator 2 view .LVU387
 151:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1367              		.loc 1 151 5 discriminator 2 view .LVU388
 151:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1368              		.loc 1 151 5 discriminator 2 view .LVU389
 1369 0018 3046     		mov	r0, r6
 1370 001a FFF7FEFF 		bl	lv_debug_check_null
 1371              	.LVL164:
 1372 001e 28B9     		cbnz	r0, .L96
 151:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1373              		.loc 1 151 5 discriminator 1 view .LVU390
 151:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1374              		.loc 1 151 5 discriminator 1 view .LVU391
 1375 0020 3246     		mov	r2, r6
 1376 0022 0023     		movs	r3, #0
 1377 0024 1E48     		ldr	r0, .L105
 1378 0026 FFF7FEFF 		bl	lv_debug_log_error
 1379              	.LVL165:
 1380              	.L97:
 151:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1381              		.loc 1 151 5 discriminator 2 view .LVU392
 151:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1382              		.loc 1 151 5 discriminator 2 view .LVU393
 1383 002a FEE7     		b	.L97
 1384              	.L96:
 151:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1385              		.loc 1 151 28 discriminator 2 view .LVU394
ARM GAS  D:\Temp\ccdKFHIm.s 			page 52


 153:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1386              		.loc 1 153 5 discriminator 2 view .LVU395
 153:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1387              		.loc 1 153 29 is_stmt 0 discriminator 2 view .LVU396
 1388 002c 2846     		mov	r0, r5
 1389 002e FFF7FEFF 		bl	lv_obj_get_ext_attr
 1390              	.LVL166:
 1391 0032 0446     		mov	r4, r0
 1392              	.LVL167:
 156:lvgl/src/lv_widgets/lv_msgbox.c ****         ext->btnm = lv_btnmatrix_create(mbox, NULL);
 1393              		.loc 1 156 5 is_stmt 1 discriminator 2 view .LVU397
 156:lvgl/src/lv_widgets/lv_msgbox.c ****         ext->btnm = lv_btnmatrix_create(mbox, NULL);
 1394              		.loc 1 156 11 is_stmt 0 discriminator 2 view .LVU398
 1395 0034 8368     		ldr	r3, [r0, #8]
 156:lvgl/src/lv_widgets/lv_msgbox.c ****         ext->btnm = lv_btnmatrix_create(mbox, NULL);
 1396              		.loc 1 156 7 discriminator 2 view .LVU399
 1397 0036 A3B1     		cbz	r3, .L103
 1398              	.LVL168:
 1399              	.L98:
 162:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_btnmatrix_set_btn_ctrl_all(ext->btnm, LV_BTNMATRIX_CTRL_CLICK_TRIG | LV_BTNMATRIX_CTRL_NO_RE
 1400              		.loc 1 162 5 is_stmt 1 view .LVU400
 1401 0038 3146     		mov	r1, r6
 1402 003a A068     		ldr	r0, [r4, #8]
 1403 003c FFF7FEFF 		bl	lv_btnmatrix_set_map
 1404              	.LVL169:
 163:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_obj_set_event_cb(ext->btnm, lv_msgbox_btnm_event_cb);
 1405              		.loc 1 163 5 view .LVU401
 1406 0040 4FF48871 		mov	r1, #272
 1407 0044 A068     		ldr	r0, [r4, #8]
 1408 0046 FFF7FEFF 		bl	lv_btnmatrix_set_btn_ctrl_all
 1409              	.LVL170:
 164:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1410              		.loc 1 164 5 view .LVU402
 1411 004a 1649     		ldr	r1, .L105+4
 1412 004c A068     		ldr	r0, [r4, #8]
 1413 004e FFF7FEFF 		bl	lv_obj_set_event_cb
 1414              	.LVL171:
 166:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_state_t state = lv_obj_get_state(mbox, LV_MSGBOX_PART_BG);
 1415              		.loc 1 166 5 view .LVU403
 166:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_state_t state = lv_obj_get_state(mbox, LV_MSGBOX_PART_BG);
 1416              		.loc 1 166 8 is_stmt 0 view .LVU404
 1417 0052 2846     		mov	r0, r5
 1418 0054 FFF7FEFF 		bl	lv_obj_is_focused
 1419              	.LVL172:
 166:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_state_t state = lv_obj_get_state(mbox, LV_MSGBOX_PART_BG);
 1420              		.loc 1 166 7 view .LVU405
 1421 0058 68B9     		cbnz	r0, .L104
 1422              	.L99:
 178:lvgl/src/lv_widgets/lv_msgbox.c **** }
 1423              		.loc 1 178 5 is_stmt 1 view .LVU406
 1424 005a 2846     		mov	r0, r5
 1425 005c FFF7FEFF 		bl	mbox_realign
 1426              	.LVL173:
 179:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1427              		.loc 1 179 1 is_stmt 0 view .LVU407
 1428 0060 70BD     		pop	{r4, r5, r6, pc}
 1429              	.LVL174:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 53


 1430              	.L103:
 157:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1431              		.loc 1 157 9 is_stmt 1 view .LVU408
 157:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1432              		.loc 1 157 21 is_stmt 0 view .LVU409
 1433 0062 0021     		movs	r1, #0
 1434 0064 2846     		mov	r0, r5
 1435              	.LVL175:
 157:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1436              		.loc 1 157 21 view .LVU410
 1437 0066 FFF7FEFF 		bl	lv_btnmatrix_create
 1438              	.LVL176:
 157:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1439              		.loc 1 157 19 view .LVU411
 1440 006a A060     		str	r0, [r4, #8]
 159:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 1441              		.loc 1 159 9 is_stmt 1 view .LVU412
 1442 006c 1921     		movs	r1, #25
 1443 006e 2846     		mov	r0, r5
 1444 0070 FFF7FEFF 		bl	lv_theme_apply
 1445              	.LVL177:
 1446 0074 E0E7     		b	.L98
 1447              	.L104:
 1448              	.LBB89:
 167:lvgl/src/lv_widgets/lv_msgbox.c ****         if(state & LV_STATE_EDITED) {
 1449              		.loc 1 167 9 view .LVU413
 167:lvgl/src/lv_widgets/lv_msgbox.c ****         if(state & LV_STATE_EDITED) {
 1450              		.loc 1 167 28 is_stmt 0 view .LVU414
 1451 0076 0021     		movs	r1, #0
 1452 0078 2846     		mov	r0, r5
 1453 007a FFF7FEFF 		bl	lv_obj_get_state
 1454              	.LVL178:
 168:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_obj_set_state(ext->btnm, LV_STATE_FOCUSED | LV_STATE_EDITED);
 1455              		.loc 1 168 9 is_stmt 1 view .LVU415
 168:lvgl/src/lv_widgets/lv_msgbox.c ****             lv_obj_set_state(ext->btnm, LV_STATE_FOCUSED | LV_STATE_EDITED);
 1456              		.loc 1 168 11 is_stmt 0 view .LVU416
 1457 007e 10F0040F 		tst	r0, #4
 1458 0082 08D0     		beq	.L100
 169:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1459              		.loc 1 169 13 is_stmt 1 view .LVU417
 1460 0084 0621     		movs	r1, #6
 1461 0086 A068     		ldr	r0, [r4, #8]
 1462              	.LVL179:
 169:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1463              		.loc 1 169 13 is_stmt 0 view .LVU418
 1464 0088 FFF7FEFF 		bl	lv_obj_set_state
 1465              	.LVL180:
 1466              	.L101:
 175:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 1467              		.loc 1 175 9 is_stmt 1 view .LVU419
 1468 008c 0021     		movs	r1, #0
 1469 008e A068     		ldr	r0, [r4, #8]
 1470 0090 FFF7FEFF 		bl	lv_btnmatrix_set_focused_btn
 1471              	.LVL181:
 1472 0094 E1E7     		b	.L99
 1473              	.LVL182:
 1474              	.L100:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 54


 172:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1475              		.loc 1 172 13 view .LVU420
 1476 0096 0221     		movs	r1, #2
 1477 0098 A068     		ldr	r0, [r4, #8]
 1478              	.LVL183:
 172:lvgl/src/lv_widgets/lv_msgbox.c ****         }
 1479              		.loc 1 172 13 is_stmt 0 view .LVU421
 1480 009a FFF7FEFF 		bl	lv_obj_set_state
 1481              	.LVL184:
 1482 009e F5E7     		b	.L101
 1483              	.L106:
 1484              		.align	2
 1485              	.L105:
 1486 00a0 00000000 		.word	.LC0
 1487 00a4 00000000 		.word	lv_msgbox_btnm_event_cb
 1488              	.LBE89:
 1489              		.cfi_endproc
 1490              	.LFE475:
 1492              		.section	.text.lv_msgbox_set_text,"ax",%progbits
 1493              		.align	1
 1494              		.global	lv_msgbox_set_text
 1495              		.syntax unified
 1496              		.thumb
 1497              		.thumb_func
 1498              		.fpu fpv4-sp-d16
 1500              	lv_msgbox_set_text:
 1501              	.LVL185:
 1502              	.LFB476:
 191:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1503              		.loc 1 191 1 is_stmt 1 view -0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 0
 1506              		@ frame_needed = 0, uses_anonymous_args = 0
 191:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1507              		.loc 1 191 1 is_stmt 0 view .LVU423
 1508 0000 38B5     		push	{r3, r4, r5, lr}
 1509              	.LCFI13:
 1510              		.cfi_def_cfa_offset 16
 1511              		.cfi_offset 3, -16
 1512              		.cfi_offset 4, -12
 1513              		.cfi_offset 5, -8
 1514              		.cfi_offset 14, -4
 1515 0002 0446     		mov	r4, r0
 1516 0004 0D46     		mov	r5, r1
 192:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(txt);
 1517              		.loc 1 192 5 is_stmt 1 view .LVU424
 192:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(txt);
 1518              		.loc 1 192 5 view .LVU425
 1519 0006 FFF7FEFF 		bl	lv_debug_check_null
 1520              	.LVL186:
 192:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(txt);
 1521              		.loc 1 192 5 is_stmt 0 view .LVU426
 1522 000a 28B9     		cbnz	r0, .L108
 192:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(txt);
 1523              		.loc 1 192 5 is_stmt 1 discriminator 1 view .LVU427
 192:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(txt);
 1524              		.loc 1 192 5 discriminator 1 view .LVU428
ARM GAS  D:\Temp\ccdKFHIm.s 			page 55


 1525 000c 2246     		mov	r2, r4
 1526 000e 0023     		movs	r3, #0
 1527 0010 0C48     		ldr	r0, .L113
 1528 0012 FFF7FEFF 		bl	lv_debug_log_error
 1529              	.LVL187:
 1530              	.L109:
 192:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(txt);
 1531              		.loc 1 192 5 discriminator 1 view .LVU429
 192:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(txt);
 1532              		.loc 1 192 5 discriminator 1 view .LVU430
 1533 0016 FEE7     		b	.L109
 1534              	.L108:
 192:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(txt);
 1535              		.loc 1 192 38 discriminator 2 view .LVU431
 193:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1536              		.loc 1 193 5 discriminator 2 view .LVU432
 193:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1537              		.loc 1 193 5 discriminator 2 view .LVU433
 1538 0018 2846     		mov	r0, r5
 1539 001a FFF7FEFF 		bl	lv_debug_check_null
 1540              	.LVL188:
 1541 001e 28B9     		cbnz	r0, .L110
 193:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1542              		.loc 1 193 5 discriminator 1 view .LVU434
 193:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1543              		.loc 1 193 5 discriminator 1 view .LVU435
 1544 0020 2A46     		mov	r2, r5
 1545 0022 0023     		movs	r3, #0
 1546 0024 0748     		ldr	r0, .L113
 1547 0026 FFF7FEFF 		bl	lv_debug_log_error
 1548              	.LVL189:
 1549              	.L111:
 193:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1550              		.loc 1 193 5 discriminator 2 view .LVU436
 193:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1551              		.loc 1 193 5 discriminator 2 view .LVU437
 1552 002a FEE7     		b	.L111
 1553              	.L110:
 193:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1554              		.loc 1 193 23 discriminator 2 view .LVU438
 195:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_label_set_text(ext->text, txt);
 1555              		.loc 1 195 5 discriminator 2 view .LVU439
 195:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_label_set_text(ext->text, txt);
 1556              		.loc 1 195 29 is_stmt 0 discriminator 2 view .LVU440
 1557 002c 2046     		mov	r0, r4
 1558 002e FFF7FEFF 		bl	lv_obj_get_ext_attr
 1559              	.LVL190:
 196:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1560              		.loc 1 196 5 is_stmt 1 discriminator 2 view .LVU441
 1561 0032 2946     		mov	r1, r5
 1562 0034 4068     		ldr	r0, [r0, #4]
 1563              	.LVL191:
 196:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1564              		.loc 1 196 5 is_stmt 0 discriminator 2 view .LVU442
 1565 0036 FFF7FEFF 		bl	lv_label_set_text
 1566              	.LVL192:
 198:lvgl/src/lv_widgets/lv_msgbox.c **** }
ARM GAS  D:\Temp\ccdKFHIm.s 			page 56


 1567              		.loc 1 198 5 is_stmt 1 discriminator 2 view .LVU443
 1568 003a 2046     		mov	r0, r4
 1569 003c FFF7FEFF 		bl	mbox_realign
 1570              	.LVL193:
 199:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1571              		.loc 1 199 1 is_stmt 0 discriminator 2 view .LVU444
 1572 0040 38BD     		pop	{r3, r4, r5, pc}
 1573              	.LVL194:
 1574              	.L114:
 199:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1575              		.loc 1 199 1 discriminator 2 view .LVU445
 1576 0042 00BF     		.align	2
 1577              	.L113:
 1578 0044 00000000 		.word	.LC0
 1579              		.cfi_endproc
 1580              	.LFE476:
 1582              		.section	.text.lv_msgbox_set_text_fmt,"ax",%progbits
 1583              		.align	1
 1584              		.global	lv_msgbox_set_text_fmt
 1585              		.syntax unified
 1586              		.thumb
 1587              		.thumb_func
 1588              		.fpu fpv4-sp-d16
 1590              	lv_msgbox_set_text_fmt:
 1591              	.LVL195:
 1592              	.LFB477:
 207:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1593              		.loc 1 207 1 is_stmt 1 view -0
 1594              		.cfi_startproc
 1595              		@ args = 4, pretend = 12, frame = 8
 1596              		@ frame_needed = 0, uses_anonymous_args = 1
 207:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1597              		.loc 1 207 1 is_stmt 0 view .LVU447
 1598 0000 0EB4     		push	{r1, r2, r3}
 1599              	.LCFI14:
 1600              		.cfi_def_cfa_offset 12
 1601              		.cfi_offset 1, -12
 1602              		.cfi_offset 2, -8
 1603              		.cfi_offset 3, -4
 1604 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1605              	.LCFI15:
 1606              		.cfi_def_cfa_offset 32
 1607              		.cfi_offset 4, -32
 1608              		.cfi_offset 5, -28
 1609              		.cfi_offset 6, -24
 1610              		.cfi_offset 7, -20
 1611              		.cfi_offset 14, -16
 1612 0004 82B0     		sub	sp, sp, #8
 1613              	.LCFI16:
 1614              		.cfi_def_cfa_offset 40
 1615 0006 0546     		mov	r5, r0
 1616 0008 079C     		ldr	r4, [sp, #28]
 208:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(fmt);
 1617              		.loc 1 208 5 is_stmt 1 view .LVU448
 208:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(fmt);
 1618              		.loc 1 208 5 view .LVU449
 1619 000a FFF7FEFF 		bl	lv_debug_check_null
ARM GAS  D:\Temp\ccdKFHIm.s 			page 57


 1620              	.LVL196:
 208:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(fmt);
 1621              		.loc 1 208 5 is_stmt 0 view .LVU450
 1622 000e 28B9     		cbnz	r0, .L116
 208:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(fmt);
 1623              		.loc 1 208 5 is_stmt 1 discriminator 1 view .LVU451
 208:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(fmt);
 1624              		.loc 1 208 5 discriminator 1 view .LVU452
 1625 0010 2A46     		mov	r2, r5
 1626 0012 0023     		movs	r3, #0
 1627 0014 1848     		ldr	r0, .L125
 1628 0016 FFF7FEFF 		bl	lv_debug_log_error
 1629              	.LVL197:
 1630              	.L117:
 208:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(fmt);
 1631              		.loc 1 208 5 discriminator 1 view .LVU453
 208:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(fmt);
 1632              		.loc 1 208 5 discriminator 1 view .LVU454
 1633 001a FEE7     		b	.L117
 1634              	.L116:
 208:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_STR(fmt);
 1635              		.loc 1 208 38 discriminator 2 view .LVU455
 209:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1636              		.loc 1 209 5 discriminator 2 view .LVU456
 209:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1637              		.loc 1 209 5 discriminator 2 view .LVU457
 1638 001c 2046     		mov	r0, r4
 1639 001e FFF7FEFF 		bl	lv_debug_check_null
 1640              	.LVL198:
 1641 0022 28B9     		cbnz	r0, .L118
 209:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1642              		.loc 1 209 5 discriminator 1 view .LVU458
 209:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1643              		.loc 1 209 5 discriminator 1 view .LVU459
 1644 0024 2246     		mov	r2, r4
 1645 0026 0023     		movs	r3, #0
 1646 0028 1348     		ldr	r0, .L125
 1647 002a FFF7FEFF 		bl	lv_debug_log_error
 1648              	.LVL199:
 1649              	.L119:
 209:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1650              		.loc 1 209 5 discriminator 2 view .LVU460
 209:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1651              		.loc 1 209 5 discriminator 2 view .LVU461
 1652 002e FEE7     		b	.L119
 1653              	.L118:
 209:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1654              		.loc 1 209 23 discriminator 2 view .LVU462
 211:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_label_ext_t * label_ext = lv_obj_get_ext_attr(msgbox_ext->text);
 1655              		.loc 1 211 5 discriminator 2 view .LVU463
 211:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_label_ext_t * label_ext = lv_obj_get_ext_attr(msgbox_ext->text);
 1656              		.loc 1 211 36 is_stmt 0 discriminator 2 view .LVU464
 1657 0030 2846     		mov	r0, r5
 1658 0032 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1659              	.LVL200:
 1660 0036 0646     		mov	r6, r0
 1661              	.LVL201:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 58


 212:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1662              		.loc 1 212 5 is_stmt 1 discriminator 2 view .LVU465
 212:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1663              		.loc 1 212 34 is_stmt 0 discriminator 2 view .LVU466
 1664 0038 4068     		ldr	r0, [r0, #4]
 1665              	.LVL202:
 212:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1666              		.loc 1 212 34 discriminator 2 view .LVU467
 1667 003a FFF7FEFF 		bl	lv_obj_get_ext_attr
 1668              	.LVL203:
 1669 003e 0746     		mov	r7, r0
 1670              	.LVL204:
 215:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_label_refr_text(msgbox_ext->text);
 1671              		.loc 1 215 5 is_stmt 1 discriminator 2 view .LVU468
 215:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_label_refr_text(msgbox_ext->text);
 1672              		.loc 1 215 7 is_stmt 0 discriminator 2 view .LVU469
 1673 0040 B4B1     		cbz	r4, .L124
 220:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_mem_free(label_ext->text);
 1674              		.loc 1 220 5 is_stmt 1 view .LVU470
 220:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_mem_free(label_ext->text);
 1675              		.loc 1 220 17 is_stmt 0 view .LVU471
 1676 0042 0068     		ldr	r0, [r0]
 1677              	.LVL205:
 220:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_mem_free(label_ext->text);
 1678              		.loc 1 220 7 view .LVU472
 1679 0044 18B1     		cbz	r0, .L122
 221:lvgl/src/lv_widgets/lv_msgbox.c ****         label_ext->text = NULL;
 1680              		.loc 1 221 9 is_stmt 1 view .LVU473
 1681 0046 FFF7FEFF 		bl	lv_mem_free
 1682              	.LVL206:
 222:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 1683              		.loc 1 222 9 view .LVU474
 222:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 1684              		.loc 1 222 25 is_stmt 0 view .LVU475
 1685 004a 0023     		movs	r3, #0
 1686 004c 3B60     		str	r3, [r7]
 1687              	.L122:
 225:lvgl/src/lv_widgets/lv_msgbox.c ****     va_start(args, fmt);
 1688              		.loc 1 225 5 is_stmt 1 view .LVU476
 226:lvgl/src/lv_widgets/lv_msgbox.c ****     label_ext->text = _lv_txt_set_text_vfmt(fmt, args);
 1689              		.loc 1 226 5 view .LVU477
 1690 004e 08A9     		add	r1, sp, #32
 1691 0050 0191     		str	r1, [sp, #4]
 227:lvgl/src/lv_widgets/lv_msgbox.c ****     va_end(args);
 1692              		.loc 1 227 5 view .LVU478
 227:lvgl/src/lv_widgets/lv_msgbox.c ****     va_end(args);
 1693              		.loc 1 227 23 is_stmt 0 view .LVU479
 1694 0052 2046     		mov	r0, r4
 1695 0054 FFF7FEFF 		bl	_lv_txt_set_text_vfmt
 1696              	.LVL207:
 227:lvgl/src/lv_widgets/lv_msgbox.c ****     va_end(args);
 1697              		.loc 1 227 21 view .LVU480
 1698 0058 3860     		str	r0, [r7]
 228:lvgl/src/lv_widgets/lv_msgbox.c ****     lv_label_refr_text(msgbox_ext->text);
 1699              		.loc 1 228 5 is_stmt 1 view .LVU481
 229:lvgl/src/lv_widgets/lv_msgbox.c ****     mbox_realign(mbox);
 1700              		.loc 1 229 5 view .LVU482
ARM GAS  D:\Temp\ccdKFHIm.s 			page 59


 1701 005a 7068     		ldr	r0, [r6, #4]
 1702 005c FFF7FEFF 		bl	lv_label_refr_text
 1703              	.LVL208:
 230:lvgl/src/lv_widgets/lv_msgbox.c **** }
 1704              		.loc 1 230 5 view .LVU483
 1705 0060 2846     		mov	r0, r5
 1706 0062 FFF7FEFF 		bl	mbox_realign
 1707              	.LVL209:
 1708              	.L115:
 231:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1709              		.loc 1 231 1 is_stmt 0 view .LVU484
 1710 0066 02B0     		add	sp, sp, #8
 1711              	.LCFI17:
 1712              		.cfi_remember_state
 1713              		.cfi_def_cfa_offset 32
 1714              		@ sp needed
 1715 0068 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1716              	.LCFI18:
 1717              		.cfi_restore 14
 1718              		.cfi_restore 7
 1719              		.cfi_restore 6
 1720              		.cfi_restore 5
 1721              		.cfi_restore 4
 1722              		.cfi_def_cfa_offset 12
 1723              	.LVL210:
 231:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1724              		.loc 1 231 1 view .LVU485
 1725 006c 03B0     		add	sp, sp, #12
 1726              	.LCFI19:
 1727              		.cfi_restore 3
 1728              		.cfi_restore 2
 1729              		.cfi_restore 1
 1730              		.cfi_def_cfa_offset 0
 1731 006e 7047     		bx	lr
 1732              	.LVL211:
 1733              	.L124:
 1734              	.LCFI20:
 1735              		.cfi_restore_state
 216:lvgl/src/lv_widgets/lv_msgbox.c ****         return;
 1736              		.loc 1 216 9 is_stmt 1 view .LVU486
 1737 0070 7068     		ldr	r0, [r6, #4]
 1738              	.LVL212:
 216:lvgl/src/lv_widgets/lv_msgbox.c ****         return;
 1739              		.loc 1 216 9 is_stmt 0 view .LVU487
 1740 0072 FFF7FEFF 		bl	lv_label_refr_text
 1741              	.LVL213:
 217:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 1742              		.loc 1 217 9 is_stmt 1 view .LVU488
 1743 0076 F6E7     		b	.L115
 1744              	.L126:
 1745              		.align	2
 1746              	.L125:
 1747 0078 00000000 		.word	.LC0
 1748              		.cfi_endproc
 1749              	.LFE477:
 1751              		.section	.text.lv_msgbox_set_anim_time,"ax",%progbits
 1752              		.align	1
ARM GAS  D:\Temp\ccdKFHIm.s 			page 60


 1753              		.global	lv_msgbox_set_anim_time
 1754              		.syntax unified
 1755              		.thumb
 1756              		.thumb_func
 1757              		.fpu fpv4-sp-d16
 1759              	lv_msgbox_set_anim_time:
 1760              	.LVL214:
 1761              	.LFB478:
 239:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1762              		.loc 1 239 1 view -0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
 239:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1766              		.loc 1 239 1 is_stmt 0 view .LVU490
 1767 0000 38B5     		push	{r3, r4, r5, lr}
 1768              	.LCFI21:
 1769              		.cfi_def_cfa_offset 16
 1770              		.cfi_offset 3, -16
 1771              		.cfi_offset 4, -12
 1772              		.cfi_offset 5, -8
 1773              		.cfi_offset 14, -4
 1774 0002 0446     		mov	r4, r0
 1775 0004 0D46     		mov	r5, r1
 240:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1776              		.loc 1 240 5 is_stmt 1 view .LVU491
 240:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1777              		.loc 1 240 5 view .LVU492
 1778 0006 FFF7FEFF 		bl	lv_debug_check_null
 1779              	.LVL215:
 240:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1780              		.loc 1 240 5 is_stmt 0 view .LVU493
 1781 000a 28B9     		cbnz	r0, .L128
 240:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1782              		.loc 1 240 5 is_stmt 1 discriminator 1 view .LVU494
 240:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1783              		.loc 1 240 5 discriminator 1 view .LVU495
 1784 000c 2246     		mov	r2, r4
 1785 000e 0023     		movs	r3, #0
 1786 0010 0448     		ldr	r0, .L131
 1787 0012 FFF7FEFF 		bl	lv_debug_log_error
 1788              	.LVL216:
 1789              	.L129:
 240:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1790              		.loc 1 240 5 discriminator 1 view .LVU496
 240:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1791              		.loc 1 240 5 discriminator 1 view .LVU497
 1792 0016 FEE7     		b	.L129
 1793              	.L128:
 240:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1794              		.loc 1 240 38 discriminator 2 view .LVU498
 243:lvgl/src/lv_widgets/lv_msgbox.c ****     ext->anim_time      = anim_time;
 1795              		.loc 1 243 5 discriminator 2 view .LVU499
 243:lvgl/src/lv_widgets/lv_msgbox.c ****     ext->anim_time      = anim_time;
 1796              		.loc 1 243 29 is_stmt 0 discriminator 2 view .LVU500
 1797 0018 2046     		mov	r0, r4
 1798 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
ARM GAS  D:\Temp\ccdKFHIm.s 			page 61


 1799              	.LVL217:
 244:lvgl/src/lv_widgets/lv_msgbox.c **** #else
 1800              		.loc 1 244 5 is_stmt 1 discriminator 2 view .LVU501
 244:lvgl/src/lv_widgets/lv_msgbox.c **** #else
 1801              		.loc 1 244 25 is_stmt 0 discriminator 2 view .LVU502
 1802 001e 8581     		strh	r5, [r0, #12]	@ movhi
 249:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1803              		.loc 1 249 1 discriminator 2 view .LVU503
 1804 0020 38BD     		pop	{r3, r4, r5, pc}
 1805              	.LVL218:
 1806              	.L132:
 249:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1807              		.loc 1 249 1 discriminator 2 view .LVU504
 1808 0022 00BF     		.align	2
 1809              	.L131:
 1810 0024 00000000 		.word	.LC0
 1811              		.cfi_endproc
 1812              	.LFE478:
 1814              		.section	.text.lv_msgbox_stop_auto_close,"ax",%progbits
 1815              		.align	1
 1816              		.global	lv_msgbox_stop_auto_close
 1817              		.syntax unified
 1818              		.thumb
 1819              		.thumb_func
 1820              		.fpu fpv4-sp-d16
 1822              	lv_msgbox_stop_auto_close:
 1823              	.LVL219:
 1824              	.LFB480:
 303:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1825              		.loc 1 303 1 is_stmt 1 view -0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 0
 1828              		@ frame_needed = 0, uses_anonymous_args = 0
 303:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1829              		.loc 1 303 1 is_stmt 0 view .LVU506
 1830 0000 10B5     		push	{r4, lr}
 1831              	.LCFI22:
 1832              		.cfi_def_cfa_offset 8
 1833              		.cfi_offset 4, -8
 1834              		.cfi_offset 14, -4
 1835 0002 0446     		mov	r4, r0
 304:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1836              		.loc 1 304 5 is_stmt 1 view .LVU507
 304:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1837              		.loc 1 304 5 view .LVU508
 1838 0004 FFF7FEFF 		bl	lv_debug_check_null
 1839              	.LVL220:
 304:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1840              		.loc 1 304 5 is_stmt 0 view .LVU509
 1841 0008 28B9     		cbnz	r0, .L134
 304:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1842              		.loc 1 304 5 is_stmt 1 discriminator 1 view .LVU510
 304:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1843              		.loc 1 304 5 discriminator 1 view .LVU511
 1844 000a 2246     		mov	r2, r4
 1845 000c 0023     		movs	r3, #0
 1846 000e 0448     		ldr	r0, .L137
ARM GAS  D:\Temp\ccdKFHIm.s 			page 62


 1847 0010 FFF7FEFF 		bl	lv_debug_log_error
 1848              	.LVL221:
 1849              	.L135:
 304:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1850              		.loc 1 304 5 discriminator 1 view .LVU512
 304:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1851              		.loc 1 304 5 discriminator 1 view .LVU513
 1852 0014 FEE7     		b	.L135
 1853              	.L134:
 304:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1854              		.loc 1 304 38 discriminator 2 view .LVU514
 307:lvgl/src/lv_widgets/lv_msgbox.c **** #else
 1855              		.loc 1 307 5 discriminator 2 view .LVU515
 1856 0016 0021     		movs	r1, #0
 1857 0018 2046     		mov	r0, r4
 1858 001a FFF7FEFF 		bl	lv_anim_del
 1859              	.LVL222:
 311:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1860              		.loc 1 311 1 is_stmt 0 discriminator 2 view .LVU516
 1861 001e 10BD     		pop	{r4, pc}
 1862              	.LVL223:
 1863              	.L138:
 311:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1864              		.loc 1 311 1 discriminator 2 view .LVU517
 1865              		.align	2
 1866              	.L137:
 1867 0020 00000000 		.word	.LC0
 1868              		.cfi_endproc
 1869              	.LFE480:
 1871              		.section	.text.lv_msgbox_set_recolor,"ax",%progbits
 1872              		.align	1
 1873              		.global	lv_msgbox_set_recolor
 1874              		.syntax unified
 1875              		.thumb
 1876              		.thumb_func
 1877              		.fpu fpv4-sp-d16
 1879              	lv_msgbox_set_recolor:
 1880              	.LVL224:
 1881              	.LFB481:
 319:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1882              		.loc 1 319 1 is_stmt 1 view -0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 0
 1885              		@ frame_needed = 0, uses_anonymous_args = 0
 319:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1886              		.loc 1 319 1 is_stmt 0 view .LVU519
 1887 0000 38B5     		push	{r3, r4, r5, lr}
 1888              	.LCFI23:
 1889              		.cfi_def_cfa_offset 16
 1890              		.cfi_offset 3, -16
 1891              		.cfi_offset 4, -12
 1892              		.cfi_offset 5, -8
 1893              		.cfi_offset 14, -4
 1894 0002 0446     		mov	r4, r0
 1895 0004 0D46     		mov	r5, r1
 320:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1896              		.loc 1 320 5 is_stmt 1 view .LVU520
ARM GAS  D:\Temp\ccdKFHIm.s 			page 63


 320:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1897              		.loc 1 320 5 view .LVU521
 1898 0006 FFF7FEFF 		bl	lv_debug_check_null
 1899              	.LVL225:
 320:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1900              		.loc 1 320 5 is_stmt 0 view .LVU522
 1901 000a 28B9     		cbnz	r0, .L140
 320:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1902              		.loc 1 320 5 is_stmt 1 discriminator 1 view .LVU523
 320:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1903              		.loc 1 320 5 discriminator 1 view .LVU524
 1904 000c 2246     		mov	r2, r4
 1905 000e 0023     		movs	r3, #0
 1906 0010 0648     		ldr	r0, .L144
 1907 0012 FFF7FEFF 		bl	lv_debug_log_error
 1908              	.LVL226:
 1909              	.L141:
 320:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1910              		.loc 1 320 5 discriminator 1 view .LVU525
 320:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1911              		.loc 1 320 5 discriminator 1 view .LVU526
 1912 0016 FEE7     		b	.L141
 1913              	.L140:
 320:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1914              		.loc 1 320 38 discriminator 2 view .LVU527
 322:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1915              		.loc 1 322 5 discriminator 2 view .LVU528
 322:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1916              		.loc 1 322 29 is_stmt 0 discriminator 2 view .LVU529
 1917 0018 2046     		mov	r0, r4
 1918 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
 1919              	.LVL227:
 324:lvgl/src/lv_widgets/lv_msgbox.c **** }
 1920              		.loc 1 324 5 is_stmt 1 discriminator 2 view .LVU530
 324:lvgl/src/lv_widgets/lv_msgbox.c **** }
 1921              		.loc 1 324 11 is_stmt 0 discriminator 2 view .LVU531
 1922 001e 8068     		ldr	r0, [r0, #8]
 1923              	.LVL228:
 324:lvgl/src/lv_widgets/lv_msgbox.c **** }
 1924              		.loc 1 324 7 discriminator 2 view .LVU532
 1925 0020 10B1     		cbz	r0, .L139
 324:lvgl/src/lv_widgets/lv_msgbox.c **** }
 1926              		.loc 1 324 19 is_stmt 1 discriminator 1 view .LVU533
 1927 0022 2946     		mov	r1, r5
 1928 0024 FFF7FEFF 		bl	lv_btnmatrix_set_recolor
 1929              	.LVL229:
 1930              	.L139:
 325:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1931              		.loc 1 325 1 is_stmt 0 view .LVU534
 1932 0028 38BD     		pop	{r3, r4, r5, pc}
 1933              	.LVL230:
 1934              	.L145:
 325:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1935              		.loc 1 325 1 view .LVU535
 1936 002a 00BF     		.align	2
 1937              	.L144:
 1938 002c 00000000 		.word	.LC0
ARM GAS  D:\Temp\ccdKFHIm.s 			page 64


 1939              		.cfi_endproc
 1940              	.LFE481:
 1942              		.section	.text.lv_msgbox_get_text,"ax",%progbits
 1943              		.align	1
 1944              		.global	lv_msgbox_get_text
 1945              		.syntax unified
 1946              		.thumb
 1947              		.thumb_func
 1948              		.fpu fpv4-sp-d16
 1950              	lv_msgbox_get_text:
 1951              	.LVL231:
 1952              	.LFB482:
 337:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1953              		.loc 1 337 1 is_stmt 1 view -0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 0
 1956              		@ frame_needed = 0, uses_anonymous_args = 0
 337:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 1957              		.loc 1 337 1 is_stmt 0 view .LVU537
 1958 0000 10B5     		push	{r4, lr}
 1959              	.LCFI24:
 1960              		.cfi_def_cfa_offset 8
 1961              		.cfi_offset 4, -8
 1962              		.cfi_offset 14, -4
 1963 0002 0446     		mov	r4, r0
 338:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1964              		.loc 1 338 5 is_stmt 1 view .LVU538
 338:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1965              		.loc 1 338 5 view .LVU539
 1966 0004 FFF7FEFF 		bl	lv_debug_check_null
 1967              	.LVL232:
 338:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1968              		.loc 1 338 5 is_stmt 0 view .LVU540
 1969 0008 28B9     		cbnz	r0, .L147
 338:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1970              		.loc 1 338 5 is_stmt 1 discriminator 1 view .LVU541
 338:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1971              		.loc 1 338 5 discriminator 1 view .LVU542
 1972 000a 2246     		mov	r2, r4
 1973 000c 0023     		movs	r3, #0
 1974 000e 0548     		ldr	r0, .L150
 1975 0010 FFF7FEFF 		bl	lv_debug_log_error
 1976              	.LVL233:
 1977              	.L148:
 338:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1978              		.loc 1 338 5 discriminator 1 view .LVU543
 338:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1979              		.loc 1 338 5 discriminator 1 view .LVU544
 1980 0014 FEE7     		b	.L148
 1981              	.L147:
 338:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1982              		.loc 1 338 38 discriminator 2 view .LVU545
 340:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1983              		.loc 1 340 5 discriminator 2 view .LVU546
 340:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1984              		.loc 1 340 29 is_stmt 0 discriminator 2 view .LVU547
 1985 0016 2046     		mov	r0, r4
ARM GAS  D:\Temp\ccdKFHIm.s 			page 65


 1986 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1987              	.LVL234:
 342:lvgl/src/lv_widgets/lv_msgbox.c **** }
 1988              		.loc 1 342 5 is_stmt 1 discriminator 2 view .LVU548
 342:lvgl/src/lv_widgets/lv_msgbox.c **** }
 1989              		.loc 1 342 12 is_stmt 0 discriminator 2 view .LVU549
 1990 001c 4068     		ldr	r0, [r0, #4]
 1991              	.LVL235:
 342:lvgl/src/lv_widgets/lv_msgbox.c **** }
 1992              		.loc 1 342 12 discriminator 2 view .LVU550
 1993 001e FFF7FEFF 		bl	lv_label_get_text
 1994              	.LVL236:
 343:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1995              		.loc 1 343 1 discriminator 2 view .LVU551
 1996 0022 10BD     		pop	{r4, pc}
 1997              	.LVL237:
 1998              	.L151:
 343:lvgl/src/lv_widgets/lv_msgbox.c **** 
 1999              		.loc 1 343 1 discriminator 2 view .LVU552
 2000              		.align	2
 2001              	.L150:
 2002 0024 00000000 		.word	.LC0
 2003              		.cfi_endproc
 2004              	.LFE482:
 2006              		.section	.text.lv_msgbox_get_active_btn,"ax",%progbits
 2007              		.align	1
 2008              		.global	lv_msgbox_get_active_btn
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2012              		.fpu fpv4-sp-d16
 2014              	lv_msgbox_get_active_btn:
 2015              	.LVL238:
 2016              	.LFB483:
 352:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2017              		.loc 1 352 1 is_stmt 1 view -0
 2018              		.cfi_startproc
 2019              		@ args = 0, pretend = 0, frame = 0
 2020              		@ frame_needed = 0, uses_anonymous_args = 0
 352:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2021              		.loc 1 352 1 is_stmt 0 view .LVU554
 2022 0000 10B5     		push	{r4, lr}
 2023              	.LCFI25:
 2024              		.cfi_def_cfa_offset 8
 2025              		.cfi_offset 4, -8
 2026              		.cfi_offset 14, -4
 2027 0002 0446     		mov	r4, r0
 353:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2028              		.loc 1 353 5 is_stmt 1 view .LVU555
 353:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2029              		.loc 1 353 5 view .LVU556
 2030 0004 FFF7FEFF 		bl	lv_debug_check_null
 2031              	.LVL239:
 353:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2032              		.loc 1 353 5 is_stmt 0 view .LVU557
 2033 0008 28B9     		cbnz	r0, .L153
 353:lvgl/src/lv_widgets/lv_msgbox.c **** 
ARM GAS  D:\Temp\ccdKFHIm.s 			page 66


 2034              		.loc 1 353 5 is_stmt 1 discriminator 1 view .LVU558
 353:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2035              		.loc 1 353 5 discriminator 1 view .LVU559
 2036 000a 2246     		mov	r2, r4
 2037 000c 0023     		movs	r3, #0
 2038 000e 0C48     		ldr	r0, .L159
 2039 0010 FFF7FEFF 		bl	lv_debug_log_error
 2040              	.LVL240:
 2041              	.L154:
 353:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2042              		.loc 1 353 5 discriminator 1 view .LVU560
 353:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2043              		.loc 1 353 5 discriminator 1 view .LVU561
 2044 0014 FEE7     		b	.L154
 2045              	.L153:
 353:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2046              		.loc 1 353 38 discriminator 2 view .LVU562
 355:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext->btnm == NULL) return LV_BTNMATRIX_BTN_NONE;
 2047              		.loc 1 355 5 discriminator 2 view .LVU563
 355:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext->btnm == NULL) return LV_BTNMATRIX_BTN_NONE;
 2048              		.loc 1 355 29 is_stmt 0 discriminator 2 view .LVU564
 2049 0016 2046     		mov	r0, r4
 2050 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 2051              	.LVL241:
 2052 001c 0446     		mov	r4, r0
 2053              	.LVL242:
 356:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2054              		.loc 1 356 5 is_stmt 1 discriminator 2 view .LVU565
 356:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2055              		.loc 1 356 11 is_stmt 0 discriminator 2 view .LVU566
 2056 001e 8068     		ldr	r0, [r0, #8]
 2057              	.LVL243:
 356:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2058              		.loc 1 356 7 discriminator 2 view .LVU567
 2059 0020 50B1     		cbz	r0, .L156
 358:lvgl/src/lv_widgets/lv_msgbox.c ****     if(id == LV_BTNMATRIX_BTN_NONE) {
 2060              		.loc 1 358 5 is_stmt 1 view .LVU568
 358:lvgl/src/lv_widgets/lv_msgbox.c ****     if(id == LV_BTNMATRIX_BTN_NONE) {
 2061              		.loc 1 358 19 is_stmt 0 view .LVU569
 2062 0022 FFF7FEFF 		bl	lv_btnmatrix_get_active_btn
 2063              	.LVL244:
 359:lvgl/src/lv_widgets/lv_msgbox.c ****         id = lv_btnmatrix_get_focused_btn(ext->btnm);
 2064              		.loc 1 359 5 is_stmt 1 view .LVU570
 359:lvgl/src/lv_widgets/lv_msgbox.c ****         id = lv_btnmatrix_get_focused_btn(ext->btnm);
 2065              		.loc 1 359 7 is_stmt 0 view .LVU571
 2066 0026 4FF6FF73 		movw	r3, #65535
 2067 002a 9842     		cmp	r0, r3
 2068 002c 00D0     		beq	.L158
 2069              	.LVL245:
 2070              	.L155:
 364:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2071              		.loc 1 364 1 view .LVU572
 2072 002e 10BD     		pop	{r4, pc}
 2073              	.LVL246:
 2074              	.L158:
 360:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 2075              		.loc 1 360 9 is_stmt 1 view .LVU573
ARM GAS  D:\Temp\ccdKFHIm.s 			page 67


 360:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 2076              		.loc 1 360 14 is_stmt 0 view .LVU574
 2077 0030 A068     		ldr	r0, [r4, #8]
 2078              	.LVL247:
 360:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 2079              		.loc 1 360 14 view .LVU575
 2080 0032 FFF7FEFF 		bl	lv_btnmatrix_get_focused_btn
 2081              	.LVL248:
 360:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 2082              		.loc 1 360 14 view .LVU576
 2083 0036 FAE7     		b	.L155
 2084              	.LVL249:
 2085              	.L156:
 356:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2086              		.loc 1 356 34 view .LVU577
 2087 0038 4FF6FF70 		movw	r0, #65535
 2088 003c F7E7     		b	.L155
 2089              	.L160:
 2090 003e 00BF     		.align	2
 2091              	.L159:
 2092 0040 00000000 		.word	.LC0
 2093              		.cfi_endproc
 2094              	.LFE483:
 2096              		.section	.text.lv_msgbox_get_active_btn_text,"ax",%progbits
 2097              		.align	1
 2098              		.global	lv_msgbox_get_active_btn_text
 2099              		.syntax unified
 2100              		.thumb
 2101              		.thumb_func
 2102              		.fpu fpv4-sp-d16
 2104              	lv_msgbox_get_active_btn_text:
 2105              	.LVL250:
 2106              	.LFB484:
 373:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2107              		.loc 1 373 1 is_stmt 1 view -0
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 0
 2110              		@ frame_needed = 0, uses_anonymous_args = 0
 373:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2111              		.loc 1 373 1 is_stmt 0 view .LVU579
 2112 0000 10B5     		push	{r4, lr}
 2113              	.LCFI26:
 2114              		.cfi_def_cfa_offset 8
 2115              		.cfi_offset 4, -8
 2116              		.cfi_offset 14, -4
 2117 0002 0446     		mov	r4, r0
 374:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2118              		.loc 1 374 5 is_stmt 1 view .LVU580
 374:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2119              		.loc 1 374 5 view .LVU581
 2120 0004 FFF7FEFF 		bl	lv_debug_check_null
 2121              	.LVL251:
 374:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2122              		.loc 1 374 5 is_stmt 0 view .LVU582
 2123 0008 28B9     		cbnz	r0, .L162
 374:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2124              		.loc 1 374 5 is_stmt 1 discriminator 1 view .LVU583
ARM GAS  D:\Temp\ccdKFHIm.s 			page 68


 374:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2125              		.loc 1 374 5 discriminator 1 view .LVU584
 2126 000a 2246     		mov	r2, r4
 2127 000c 0023     		movs	r3, #0
 2128 000e 0748     		ldr	r0, .L167
 2129 0010 FFF7FEFF 		bl	lv_debug_log_error
 2130              	.LVL252:
 2131              	.L163:
 374:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2132              		.loc 1 374 5 discriminator 1 view .LVU585
 374:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2133              		.loc 1 374 5 discriminator 1 view .LVU586
 2134 0014 FEE7     		b	.L163
 2135              	.L162:
 374:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2136              		.loc 1 374 38 discriminator 2 view .LVU587
 376:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext->btnm)
 2137              		.loc 1 376 5 discriminator 2 view .LVU588
 376:lvgl/src/lv_widgets/lv_msgbox.c ****     if(ext->btnm)
 2138              		.loc 1 376 29 is_stmt 0 discriminator 2 view .LVU589
 2139 0016 2046     		mov	r0, r4
 2140 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 2141              	.LVL253:
 377:lvgl/src/lv_widgets/lv_msgbox.c ****         return lv_btnmatrix_get_active_btn_text(ext->btnm);
 2142              		.loc 1 377 5 is_stmt 1 discriminator 2 view .LVU590
 377:lvgl/src/lv_widgets/lv_msgbox.c ****         return lv_btnmatrix_get_active_btn_text(ext->btnm);
 2143              		.loc 1 377 11 is_stmt 0 discriminator 2 view .LVU591
 2144 001c 8068     		ldr	r0, [r0, #8]
 2145              	.LVL254:
 377:lvgl/src/lv_widgets/lv_msgbox.c ****         return lv_btnmatrix_get_active_btn_text(ext->btnm);
 2146              		.loc 1 377 7 discriminator 2 view .LVU592
 2147 001e 10B1     		cbz	r0, .L165
 378:lvgl/src/lv_widgets/lv_msgbox.c ****     else
 2148              		.loc 1 378 9 is_stmt 1 view .LVU593
 378:lvgl/src/lv_widgets/lv_msgbox.c ****     else
 2149              		.loc 1 378 16 is_stmt 0 view .LVU594
 2150 0020 FFF7FEFF 		bl	lv_btnmatrix_get_active_btn_text
 2151              	.LVL255:
 2152              	.L161:
 381:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2153              		.loc 1 381 1 view .LVU595
 2154 0024 10BD     		pop	{r4, pc}
 2155              	.LVL256:
 2156              	.L165:
 380:lvgl/src/lv_widgets/lv_msgbox.c **** }
 2157              		.loc 1 380 16 view .LVU596
 2158 0026 0020     		movs	r0, #0
 2159 0028 FCE7     		b	.L161
 2160              	.L168:
 2161 002a 00BF     		.align	2
 2162              	.L167:
 2163 002c 00000000 		.word	.LC0
 2164              		.cfi_endproc
 2165              	.LFE484:
 2167              		.section	.text.lv_msgbox_get_anim_time,"ax",%progbits
 2168              		.align	1
 2169              		.global	lv_msgbox_get_anim_time
ARM GAS  D:\Temp\ccdKFHIm.s 			page 69


 2170              		.syntax unified
 2171              		.thumb
 2172              		.thumb_func
 2173              		.fpu fpv4-sp-d16
 2175              	lv_msgbox_get_anim_time:
 2176              	.LVL257:
 2177              	.LFB485:
 389:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2178              		.loc 1 389 1 is_stmt 1 view -0
 2179              		.cfi_startproc
 2180              		@ args = 0, pretend = 0, frame = 0
 2181              		@ frame_needed = 0, uses_anonymous_args = 0
 389:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2182              		.loc 1 389 1 is_stmt 0 view .LVU598
 2183 0000 10B5     		push	{r4, lr}
 2184              	.LCFI27:
 2185              		.cfi_def_cfa_offset 8
 2186              		.cfi_offset 4, -8
 2187              		.cfi_offset 14, -4
 2188 0002 0446     		mov	r4, r0
 390:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2189              		.loc 1 390 5 is_stmt 1 view .LVU599
 390:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2190              		.loc 1 390 5 view .LVU600
 2191 0004 FFF7FEFF 		bl	lv_debug_check_null
 2192              	.LVL258:
 390:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2193              		.loc 1 390 5 is_stmt 0 view .LVU601
 2194 0008 28B9     		cbnz	r0, .L170
 390:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2195              		.loc 1 390 5 is_stmt 1 discriminator 1 view .LVU602
 390:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2196              		.loc 1 390 5 discriminator 1 view .LVU603
 2197 000a 2246     		mov	r2, r4
 2198 000c 0023     		movs	r3, #0
 2199 000e 0448     		ldr	r0, .L173
 2200 0010 FFF7FEFF 		bl	lv_debug_log_error
 2201              	.LVL259:
 2202              	.L171:
 390:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2203              		.loc 1 390 5 discriminator 1 view .LVU604
 390:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2204              		.loc 1 390 5 discriminator 1 view .LVU605
 2205 0014 FEE7     		b	.L171
 2206              	.L170:
 390:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2207              		.loc 1 390 38 discriminator 2 view .LVU606
 393:lvgl/src/lv_widgets/lv_msgbox.c ****     return ext->anim_time;
 2208              		.loc 1 393 5 discriminator 2 view .LVU607
 393:lvgl/src/lv_widgets/lv_msgbox.c ****     return ext->anim_time;
 2209              		.loc 1 393 29 is_stmt 0 discriminator 2 view .LVU608
 2210 0016 2046     		mov	r0, r4
 2211 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 2212              	.LVL260:
 394:lvgl/src/lv_widgets/lv_msgbox.c **** #else
 2213              		.loc 1 394 5 is_stmt 1 discriminator 2 view .LVU609
 399:lvgl/src/lv_widgets/lv_msgbox.c **** 
ARM GAS  D:\Temp\ccdKFHIm.s 			page 70


 2214              		.loc 1 399 1 is_stmt 0 discriminator 2 view .LVU610
 2215 001c 8089     		ldrh	r0, [r0, #12]
 2216              	.LVL261:
 399:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2217              		.loc 1 399 1 discriminator 2 view .LVU611
 2218 001e 10BD     		pop	{r4, pc}
 2219              	.LVL262:
 2220              	.L174:
 399:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2221              		.loc 1 399 1 discriminator 2 view .LVU612
 2222              		.align	2
 2223              	.L173:
 2224 0020 00000000 		.word	.LC0
 2225              		.cfi_endproc
 2226              	.LFE485:
 2228              		.section	.text.lv_msgbox_start_auto_close,"ax",%progbits
 2229              		.align	1
 2230              		.global	lv_msgbox_start_auto_close
 2231              		.syntax unified
 2232              		.thumb
 2233              		.thumb_func
 2234              		.fpu fpv4-sp-d16
 2236              	lv_msgbox_start_auto_close:
 2237              	.LVL263:
 2238              	.LFB479:
 257:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2239              		.loc 1 257 1 is_stmt 1 view -0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 72
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
 257:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2243              		.loc 1 257 1 is_stmt 0 view .LVU614
 2244 0000 70B5     		push	{r4, r5, r6, lr}
 2245              	.LCFI28:
 2246              		.cfi_def_cfa_offset 16
 2247              		.cfi_offset 4, -16
 2248              		.cfi_offset 5, -12
 2249              		.cfi_offset 6, -8
 2250              		.cfi_offset 14, -4
 2251 0002 94B0     		sub	sp, sp, #80
 2252              	.LCFI29:
 2253              		.cfi_def_cfa_offset 96
 2254 0004 0446     		mov	r4, r0
 2255 0006 0D46     		mov	r5, r1
 258:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2256              		.loc 1 258 5 is_stmt 1 view .LVU615
 258:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2257              		.loc 1 258 5 view .LVU616
 2258 0008 FFF7FEFF 		bl	lv_debug_check_null
 2259              	.LVL264:
 258:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2260              		.loc 1 258 5 is_stmt 0 view .LVU617
 2261 000c 28B9     		cbnz	r0, .L176
 258:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2262              		.loc 1 258 5 is_stmt 1 discriminator 1 view .LVU618
 258:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2263              		.loc 1 258 5 discriminator 1 view .LVU619
ARM GAS  D:\Temp\ccdKFHIm.s 			page 71


 2264 000e 2246     		mov	r2, r4
 2265 0010 0023     		movs	r3, #0
 2266 0012 2548     		ldr	r0, .L181
 2267 0014 FFF7FEFF 		bl	lv_debug_log_error
 2268              	.LVL265:
 2269              	.L177:
 258:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2270              		.loc 1 258 5 discriminator 1 view .LVU620
 258:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2271              		.loc 1 258 5 discriminator 1 view .LVU621
 2272 0018 FEE7     		b	.L177
 2273              	.L176:
 258:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2274              		.loc 1 258 38 discriminator 2 view .LVU622
 261:lvgl/src/lv_widgets/lv_msgbox.c ****         /*Add shrinking animations*/
 2275              		.loc 1 261 5 discriminator 2 view .LVU623
 261:lvgl/src/lv_widgets/lv_msgbox.c ****         /*Add shrinking animations*/
 2276              		.loc 1 261 8 is_stmt 0 discriminator 2 view .LVU624
 2277 001a 2046     		mov	r0, r4
 2278 001c FFF7FEFF 		bl	lv_msgbox_get_anim_time
 2279              	.LVL266:
 261:lvgl/src/lv_widgets/lv_msgbox.c ****         /*Add shrinking animations*/
 2280              		.loc 1 261 7 discriminator 2 view .LVU625
 2281 0020 58B3     		cbz	r0, .L178
 2282              	.LBB90:
 263:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_init(&a);
 2283              		.loc 1 263 9 is_stmt 1 view .LVU626
 264:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_var(&a, mbox);
 2284              		.loc 1 264 9 view .LVU627
 2285 0022 03A8     		add	r0, sp, #12
 2286 0024 FFF7FEFF 		bl	lv_anim_init
 2287              	.LVL267:
 265:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)lv_obj_set_height);
 2288              		.loc 1 265 9 view .LVU628
 2289              	.LBB91:
 2290              	.LBI91:
 2291              		.file 6 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h"
   1:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
   2:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @file anim.h
   3:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *
   4:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
   5:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
   6:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #ifndef ANIM_H
   7:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #define ANIM_H
   8:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
   9:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** extern "C" {
  11:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #endif
  12:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  13:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /*********************
  14:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *********************/
  16:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  18:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include <stdint.h>
  19:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include <stdbool.h>
  20:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include <string.h>
ARM GAS  D:\Temp\ccdKFHIm.s 			page 72


  21:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include "lv_mem.h"
  22:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  23:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /*********************
  24:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *      DEFINES
  25:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *********************/
  26:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  27:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**********************
  28:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *      TYPEDEFS
  29:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  **********************/
  30:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  31:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Can be used to indicate if animations are enabled or disabled in a case*/
  32:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** enum {
  33:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     LV_ANIM_OFF,
  34:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     LV_ANIM_ON,
  35:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** };
  36:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  37:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef uint8_t lv_anim_enable_t;
  38:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  39:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Type of the animated value*/
  40:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef lv_coord_t lv_anim_value_t;
  41:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  42:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #if LV_USE_ANIMATION
  43:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  44:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #define LV_ANIM_REPEAT_INFINITE      0xFFFF
  45:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  46:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** struct _lv_anim_t;
  47:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** struct _lv_anim_path_t;
  48:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Get the current value during an animation*/
  49:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef lv_anim_value_t (*lv_anim_path_cb_t)(const struct _lv_anim_path_t *, const struct _lv_anim_
  50:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  51:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef struct _lv_anim_path_t {
  52:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_path_cb_t cb;
  53:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     void * user_data;
  54:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** } lv_anim_path_t;
  55:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  56:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Generic prototype of "animator" functions.
  57:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * First parameter is the variable to animate.
  58:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Second parameter is the value to set.
  59:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Compatible with `lv_xxx_set_yyy(obj, value)` functions
  60:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * The `x` in `_xcb_t` means its not a fully generic prototype because
  61:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * it doesn't receive `lv_anim_t *` as its first argument*/
  62:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_exec_xcb_t)(void *, lv_anim_value_t);
  63:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  64:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Same as `lv_anim_exec_xcb_t` but receives `lv_anim_t *` as the first parameter.
  65:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * It's more consistent but less convenient. Might be used by binding generator functions.*/
  66:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_custom_exec_cb_t)(struct _lv_anim_t *, lv_anim_value_t);
  67:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  68:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Callback to call when the animation is ready*/
  69:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_ready_cb_t)(struct _lv_anim_t *);
  70:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  71:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Callback to call when the animation really stars (considering `delay`)*/
  72:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_start_cb_t)(struct _lv_anim_t *);
  73:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  74:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Describes an animation*/
  75:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef struct _lv_anim_t {
  76:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     void * var;                  /**<Variable to animate*/
  77:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_exec_xcb_t exec_cb;   /**< Function to execute to animate*/
ARM GAS  D:\Temp\ccdKFHIm.s 			page 73


  78:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_start_cb_t start_cb; /**< Call it when the animation is starts (considering `delay`)*/
  79:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_ready_cb_t ready_cb; /**< Call it when the animation is ready*/
  80:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_path_t path;         /**< Describe the path (curve) of animations*/
  81:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t start;               /**< Start value*/
  82:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t current;             /**< Current value */
  83:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t end;                 /**< End value*/
  84:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t time;               /**< Animation time in ms*/
  85:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t act_time;            /**< Current time in animation. Set to negative to make delay.*/
  86:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t playback_delay;     /**< Wait before play back*/
  87:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t playback_time;      /**< Duration of playback animation*/
  88:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t repeat_delay;       /**< Wait before repeat*/
  89:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint16_t repeat_cnt;         /**< Repeat count for the animation*/
  90:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint8_t early_apply  : 1;    /**< 1: Apply start value immediately even is there is `delay` */
  91:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #if LV_USE_USER_DATA
  92:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_user_data_t user_data; /**< Custom user data*/
  93:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #endif
  94:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  95:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     /*Animation system use these - user shouldn't set*/
  96:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t time_orig;
  97:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint8_t playback_now : 1; /**< Play back is in progress*/
  98:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t has_run : 1;     /**< Indicates the animation has run in this round*/
  99:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** } lv_anim_t;
 100:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 101:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**********************
 102:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * GLOBAL PROTOTYPES
 103:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  **********************/
 104:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 105:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 106:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Init. the animation module
 107:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 108:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** void _lv_anim_core_init(void);
 109:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 110:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 111:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Initialize an animation variable.
 112:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * E.g.:
 113:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * lv_anim_t a;
 114:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * lv_anim_init(&a);
 115:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * lv_anim_set_...(&a);
 116:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an `lv_anim_t` variable to initialize
 117:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 118:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** void lv_anim_init(lv_anim_t * a);
 119:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 120:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 121:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a variable to animate
 122:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 123:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param var pointer to a variable to animate
 124:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 125:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_var(lv_anim_t * a, void * var)
 2292              		.loc 6 125 20 view .LVU629
 2293              	.LBB92:
 126:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 127:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->var     = var;
 2294              		.loc 6 127 5 view .LVU630
 2295              		.loc 6 127 16 is_stmt 0 view .LVU631
 2296 0028 0394     		str	r4, [sp, #12]
 2297              	.LVL268:
 2298              		.loc 6 127 16 view .LVU632
ARM GAS  D:\Temp\ccdKFHIm.s 			page 74


 2299              	.LBE92:
 2300              	.LBE91:
 266:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_values(&a, lv_obj_get_height(mbox), 0);
 2301              		.loc 1 266 9 is_stmt 1 view .LVU633
 2302              	.LBB93:
 2303              	.LBI93:
 128:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 129:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 130:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 131:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a function to animate `var`
 132:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 133:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param exec_cb a function to execute during animation
 134:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *                LittelvGL's built-in functions can be used.
 135:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *                E.g. lv_obj_set_x
 136:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 137:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_exec_cb(lv_anim_t * a, lv_anim_exec_xcb_t exec_cb)
 2304              		.loc 6 137 20 view .LVU634
 2305              	.LBB94:
 138:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->exec_cb = exec_cb;
 2306              		.loc 6 139 5 view .LVU635
 2307              		.loc 6 139 16 is_stmt 0 view .LVU636
 2308 002a 204B     		ldr	r3, .L181+4
 2309 002c 0493     		str	r3, [sp, #16]
 2310              	.LVL269:
 2311              		.loc 6 139 16 view .LVU637
 2312              	.LBE94:
 2313              	.LBE93:
 267:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_time(&a, lv_msgbox_get_anim_time(mbox));
 2314              		.loc 1 267 9 is_stmt 1 view .LVU638
 2315 002e 2046     		mov	r0, r4
 2316 0030 FFF7FEFF 		bl	lv_obj_get_height
 2317              	.LVL270:
 2318              	.LBB95:
 2319              	.LBI95:
 140:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 141:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 142:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 143:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set the duration of an animation
 144:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 145:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param duration duration of the animation in milliseconds
 146:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 147:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_time(lv_anim_t * a, uint32_t duration)
 148:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->time     = duration;
 150:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 151:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 152:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 153:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a delay before starting the animation
 154:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 155:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param delay delay before the animation in milliseconds
 156:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 157:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_delay(lv_anim_t * a, uint32_t delay)
 158:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->act_time = -(int32_t)(delay);
 160:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 161:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
ARM GAS  D:\Temp\ccdKFHIm.s 			page 75


 162:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 163:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set the start and end values of an animation
 164:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 165:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param start the start value
 166:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param end the end value
 167:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 168:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_values(lv_anim_t * a, lv_anim_value_t start, lv_anim_value_t end)
 2320              		.loc 6 168 20 view .LVU639
 2321              	.LBB96:
 169:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 170:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->start = start;
 2322              		.loc 6 170 5 view .LVU640
 2323              		.loc 6 170 14 is_stmt 0 view .LVU641
 2324 0034 0990     		str	r0, [sp, #36]
 171:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->current = start;
 2325              		.loc 6 171 5 is_stmt 1 view .LVU642
 2326              		.loc 6 171 16 is_stmt 0 view .LVU643
 2327 0036 0A90     		str	r0, [sp, #40]
 172:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->end   = end;
 2328              		.loc 6 172 5 is_stmt 1 view .LVU644
 2329              		.loc 6 172 14 is_stmt 0 view .LVU645
 2330 0038 0026     		movs	r6, #0
 2331 003a 0B96     		str	r6, [sp, #44]
 2332              	.LVL271:
 2333              		.loc 6 172 14 view .LVU646
 2334              	.LBE96:
 2335              	.LBE95:
 268:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_delay(&a, delay);
 2336              		.loc 1 268 9 is_stmt 1 view .LVU647
 268:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_delay(&a, delay);
 2337              		.loc 1 268 30 is_stmt 0 view .LVU648
 2338 003c 2046     		mov	r0, r4
 2339 003e FFF7FEFF 		bl	lv_msgbox_get_anim_time
 2340              	.LVL272:
 2341              	.LBB97:
 2342              	.LBI97:
 147:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 2343              		.loc 6 147 20 is_stmt 1 view .LVU649
 2344              	.LBB98:
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2345              		.loc 6 149 5 view .LVU650
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2346              		.loc 6 149 17 is_stmt 0 view .LVU651
 2347 0042 0C90     		str	r0, [sp, #48]
 2348              	.LVL273:
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2349              		.loc 6 149 17 view .LVU652
 2350              	.LBE98:
 2351              	.LBE97:
 269:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_start(&a);
 2352              		.loc 1 269 9 is_stmt 1 view .LVU653
 2353              	.LBB99:
 2354              	.LBI99:
 157:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 2355              		.loc 6 157 20 view .LVU654
 2356              	.LBB100:
 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
ARM GAS  D:\Temp\ccdKFHIm.s 			page 76


 2357              		.loc 6 159 5 view .LVU655
 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2358              		.loc 6 159 19 is_stmt 0 view .LVU656
 2359 0044 6D42     		rsbs	r5, r5, #0
 2360              	.LVL274:
 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2361              		.loc 6 159 17 view .LVU657
 2362 0046 0D95     		str	r5, [sp, #52]
 2363              	.LVL275:
 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2364              		.loc 6 159 17 view .LVU658
 2365              	.LBE100:
 2366              	.LBE99:
 270:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2367              		.loc 1 270 9 is_stmt 1 view .LVU659
 2368 0048 03A8     		add	r0, sp, #12
 2369 004a FFF7FEFF 		bl	lv_anim_start
 2370              	.LVL276:
 272:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_values(&a, lv_obj_get_width(mbox), 0);
 2371              		.loc 1 272 9 view .LVU660
 2372              	.LBB101:
 2373              	.LBI101:
 137:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 2374              		.loc 6 137 20 view .LVU661
 2375              	.LBB102:
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2376              		.loc 6 139 5 view .LVU662
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2377              		.loc 6 139 16 is_stmt 0 view .LVU663
 2378 004e 184B     		ldr	r3, .L181+8
 2379 0050 0493     		str	r3, [sp, #16]
 2380              	.LVL277:
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2381              		.loc 6 139 16 view .LVU664
 2382              	.LBE102:
 2383              	.LBE101:
 273:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_ready_cb(&a, lv_msgbox_close_ready_cb);
 2384              		.loc 1 273 9 is_stmt 1 view .LVU665
 2385 0052 2046     		mov	r0, r4
 2386 0054 FFF7FEFF 		bl	lv_obj_get_width
 2387              	.LVL278:
 2388              	.LBB103:
 2389              	.LBI103:
 168:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 2390              		.loc 6 168 20 view .LVU666
 2391              	.LBB104:
 170:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->current = start;
 2392              		.loc 6 170 5 view .LVU667
 170:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->current = start;
 2393              		.loc 6 170 14 is_stmt 0 view .LVU668
 2394 0058 0990     		str	r0, [sp, #36]
 171:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->end   = end;
 2395              		.loc 6 171 5 is_stmt 1 view .LVU669
 171:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->end   = end;
 2396              		.loc 6 171 16 is_stmt 0 view .LVU670
 2397 005a 0A90     		str	r0, [sp, #40]
 2398              		.loc 6 172 5 is_stmt 1 view .LVU671
ARM GAS  D:\Temp\ccdKFHIm.s 			page 77


 2399              		.loc 6 172 14 is_stmt 0 view .LVU672
 2400 005c 0B96     		str	r6, [sp, #44]
 2401              	.LVL279:
 2402              		.loc 6 172 14 view .LVU673
 2403              	.LBE104:
 2404              	.LBE103:
 274:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_start(&a);
 2405              		.loc 1 274 9 is_stmt 1 view .LVU674
 2406              	.LBB105:
 2407              	.LBI105:
 173:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 174:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 175:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 176:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Similar to `lv_anim_set_exec_cb` but `lv_anim_custom_exec_cb_t` receives
 177:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * `lv_anim_t * ` as its first parameter instead of `void *`.
 178:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * This function might be used when LVGL is binded to other languages because
 179:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * it's more consistent to have `lv_anim_t *` as first parameter.
 180:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * The variable to animate can be stored in the animation's `user_sata`
 181:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 182:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param exec_cb a function to execute.
 183:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 184:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_custom_exec_cb(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)
 185:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 186:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->var     = a;
 187:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->exec_cb = (lv_anim_exec_xcb_t)exec_cb;
 188:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 189:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 190:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 191:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set the path (curve) of the animation.
 192:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 193:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param path_cb a function the get the current value of the animation.
 194:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *                The built in functions starts with `lv_anim_path_...`
 195:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 196:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_path(lv_anim_t * a, const lv_anim_path_t * path)
 197:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 198:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     _lv_memcpy_small(&a->path, path, sizeof(lv_anim_path_t));
 199:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 200:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 201:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 202:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a function call when the animation really starts (considering `delay`)
 203:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 204:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param start_cb a function call when the animation starts
 205:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 206:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_start_cb(lv_anim_t * a, lv_anim_ready_cb_t start_cb)
 207:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 208:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->start_cb = start_cb;
 209:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 210:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 211:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 212:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a function call when the animation is ready
 213:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 214:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param ready_cb a function call when the animation is ready
 215:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 216:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_ready_cb(lv_anim_t * a, lv_anim_ready_cb_t ready_cb)
 2408              		.loc 6 216 20 view .LVU675
 2409              	.LBB106:
 217:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
ARM GAS  D:\Temp\ccdKFHIm.s 			page 78


 218:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->ready_cb = ready_cb;
 2410              		.loc 6 218 5 view .LVU676
 2411              		.loc 6 218 17 is_stmt 0 view .LVU677
 2412 005e 154B     		ldr	r3, .L181+12
 2413 0060 0693     		str	r3, [sp, #24]
 2414              	.LVL280:
 2415              		.loc 6 218 17 view .LVU678
 2416              	.LBE106:
 2417              	.LBE105:
 275:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2418              		.loc 1 275 9 is_stmt 1 view .LVU679
 2419 0062 03A8     		add	r0, sp, #12
 2420 0064 FFF7FEFF 		bl	lv_anim_start
 2421              	.LVL281:
 278:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 2422              		.loc 1 278 9 view .LVU680
 2423              	.LBB107:
 2424              	.LBI107:
 160:lvgl/src/lv_widgets/lv_cont.h **** }
 161:lvgl/src/lv_widgets/lv_cont.h **** 
 162:lvgl/src/lv_widgets/lv_cont.h **** /**
 163:lvgl/src/lv_widgets/lv_cont.h ****  * Set the fit policy in all 4 direction at once.
 164:lvgl/src/lv_widgets/lv_cont.h ****  * It tells how to change the container's size automatically.
 165:lvgl/src/lv_widgets/lv_cont.h ****  * @param cont pointer to a container object
 166:lvgl/src/lv_widgets/lv_cont.h ****  * @param fit fit policy from `lv_fit_t`
 167:lvgl/src/lv_widgets/lv_cont.h ****  */
 168:lvgl/src/lv_widgets/lv_cont.h **** static inline void lv_cont_set_fit(lv_obj_t * cont, lv_fit_t fit)
 2425              		.loc 5 168 20 view .LVU681
 2426              	.LBB108:
 169:lvgl/src/lv_widgets/lv_cont.h **** {
 170:lvgl/src/lv_widgets/lv_cont.h ****     lv_cont_set_fit4(cont, fit, fit, fit, fit);
 2427              		.loc 5 170 5 view .LVU682
 2428 0068 0096     		str	r6, [sp]
 2429 006a 3346     		mov	r3, r6
 2430 006c 3246     		mov	r2, r6
 2431 006e 3146     		mov	r1, r6
 2432 0070 2046     		mov	r0, r4
 2433 0072 FFF7FEFF 		bl	lv_cont_set_fit4
 2434              	.LVL282:
 2435              	.L175:
 2436              		.loc 5 170 5 is_stmt 0 view .LVU683
 2437              	.LBE108:
 2438              	.LBE107:
 2439              	.LBE90:
 296:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2440              		.loc 1 296 1 view .LVU684
 2441 0076 14B0     		add	sp, sp, #80
 2442              	.LCFI30:
 2443              		.cfi_remember_state
 2444              		.cfi_def_cfa_offset 16
 2445              		@ sp needed
 2446 0078 70BD     		pop	{r4, r5, r6, pc}
 2447              	.LVL283:
 2448              	.L178:
 2449              	.LCFI31:
 2450              		.cfi_restore_state
 2451              	.LBB109:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 79


 282:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_init(&a);
 2452              		.loc 1 282 9 is_stmt 1 view .LVU685
 283:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_var(&a, mbox);
 2453              		.loc 1 283 9 view .LVU686
 2454 007a 03A8     		add	r0, sp, #12
 2455 007c FFF7FEFF 		bl	lv_anim_init
 2456              	.LVL284:
 284:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)NULL);
 2457              		.loc 1 284 9 view .LVU687
 2458              	.LBB110:
 2459              	.LBI110:
 125:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 2460              		.loc 6 125 20 view .LVU688
 2461              	.LBB111:
 127:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2462              		.loc 6 127 5 view .LVU689
 127:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2463              		.loc 6 127 16 is_stmt 0 view .LVU690
 2464 0080 0394     		str	r4, [sp, #12]
 2465              	.LVL285:
 127:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2466              		.loc 6 127 16 view .LVU691
 2467              	.LBE111:
 2468              	.LBE110:
 285:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_values(&a, 0, 1);
 2469              		.loc 1 285 9 is_stmt 1 view .LVU692
 2470              	.LBB112:
 2471              	.LBI112:
 137:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 2472              		.loc 6 137 20 view .LVU693
 2473              	.LBB113:
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2474              		.loc 6 139 5 view .LVU694
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2475              		.loc 6 139 16 is_stmt 0 view .LVU695
 2476 0082 0023     		movs	r3, #0
 2477 0084 0493     		str	r3, [sp, #16]
 2478              	.LVL286:
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2479              		.loc 6 139 16 view .LVU696
 2480              	.LBE113:
 2481              	.LBE112:
 286:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_ready_cb(&a, lv_msgbox_close_ready_cb);
 2482              		.loc 1 286 9 is_stmt 1 view .LVU697
 2483              	.LBB114:
 2484              	.LBI114:
 168:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 2485              		.loc 6 168 20 view .LVU698
 2486              	.LBB115:
 170:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->current = start;
 2487              		.loc 6 170 5 view .LVU699
 170:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->current = start;
 2488              		.loc 6 170 14 is_stmt 0 view .LVU700
 2489 0086 0993     		str	r3, [sp, #36]
 171:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->end   = end;
 2490              		.loc 6 171 5 is_stmt 1 view .LVU701
 171:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->end   = end;
ARM GAS  D:\Temp\ccdKFHIm.s 			page 80


 2491              		.loc 6 171 16 is_stmt 0 view .LVU702
 2492 0088 0A93     		str	r3, [sp, #40]
 172:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2493              		.loc 6 172 5 is_stmt 1 view .LVU703
 172:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2494              		.loc 6 172 14 is_stmt 0 view .LVU704
 2495 008a 0123     		movs	r3, #1
 2496 008c 0B93     		str	r3, [sp, #44]
 2497              	.LVL287:
 172:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2498              		.loc 6 172 14 view .LVU705
 2499              	.LBE115:
 2500              	.LBE114:
 287:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_time(&a, lv_msgbox_get_anim_time(mbox));
 2501              		.loc 1 287 9 is_stmt 1 view .LVU706
 2502              	.LBB116:
 2503              	.LBI116:
 216:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 2504              		.loc 6 216 20 view .LVU707
 2505              	.LBB117:
 2506              		.loc 6 218 5 view .LVU708
 2507              		.loc 6 218 17 is_stmt 0 view .LVU709
 2508 008e 094B     		ldr	r3, .L181+12
 2509 0090 0693     		str	r3, [sp, #24]
 2510              	.LVL288:
 2511              		.loc 6 218 17 view .LVU710
 2512              	.LBE117:
 2513              	.LBE116:
 288:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_delay(&a, delay);
 2514              		.loc 1 288 9 is_stmt 1 view .LVU711
 288:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_set_delay(&a, delay);
 2515              		.loc 1 288 30 is_stmt 0 view .LVU712
 2516 0092 2046     		mov	r0, r4
 2517 0094 FFF7FEFF 		bl	lv_msgbox_get_anim_time
 2518              	.LVL289:
 2519              	.LBB118:
 2520              	.LBI118:
 147:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 2521              		.loc 6 147 20 is_stmt 1 view .LVU713
 2522              	.LBB119:
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2523              		.loc 6 149 5 view .LVU714
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2524              		.loc 6 149 17 is_stmt 0 view .LVU715
 2525 0098 0C90     		str	r0, [sp, #48]
 2526              	.LVL290:
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2527              		.loc 6 149 17 view .LVU716
 2528              	.LBE119:
 2529              	.LBE118:
 289:lvgl/src/lv_widgets/lv_msgbox.c ****         lv_anim_start(&a);
 2530              		.loc 1 289 9 is_stmt 1 view .LVU717
 2531              	.LBB120:
 2532              	.LBI120:
 157:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 2533              		.loc 6 157 20 view .LVU718
 2534              	.LBB121:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 81


 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2535              		.loc 6 159 5 view .LVU719
 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2536              		.loc 6 159 19 is_stmt 0 view .LVU720
 2537 009a 6D42     		rsbs	r5, r5, #0
 2538              	.LVL291:
 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2539              		.loc 6 159 17 view .LVU721
 2540 009c 0D95     		str	r5, [sp, #52]
 2541              	.LVL292:
 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 2542              		.loc 6 159 17 view .LVU722
 2543              	.LBE121:
 2544              	.LBE120:
 290:lvgl/src/lv_widgets/lv_msgbox.c ****     }
 2545              		.loc 1 290 9 is_stmt 1 view .LVU723
 2546 009e 03A8     		add	r0, sp, #12
 2547 00a0 FFF7FEFF 		bl	lv_anim_start
 2548              	.LVL293:
 2549              	.LBE109:
 296:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2550              		.loc 1 296 1 is_stmt 0 view .LVU724
 2551 00a4 E7E7     		b	.L175
 2552              	.L182:
 2553 00a6 00BF     		.align	2
 2554              	.L181:
 2555 00a8 00000000 		.word	.LC0
 2556 00ac 00000000 		.word	lv_obj_set_height
 2557 00b0 00000000 		.word	lv_obj_set_width
 2558 00b4 00000000 		.word	lv_msgbox_close_ready_cb
 2559              		.cfi_endproc
 2560              	.LFE479:
 2562              		.section	.text.lv_msgbox_default_event_cb,"ax",%progbits
 2563              		.align	1
 2564              		.syntax unified
 2565              		.thumb
 2566              		.thumb_func
 2567              		.fpu fpv4-sp-d16
 2569              	lv_msgbox_default_event_cb:
 2570              	.LVL294:
 2571              	.LFB492:
 614:lvgl/src/lv_widgets/lv_msgbox.c ****     if(event != LV_EVENT_VALUE_CHANGED) return;
 2572              		.loc 1 614 1 is_stmt 1 view -0
 2573              		.cfi_startproc
 2574              		@ args = 0, pretend = 0, frame = 0
 2575              		@ frame_needed = 0, uses_anonymous_args = 0
 615:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2576              		.loc 1 615 5 view .LVU726
 615:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2577              		.loc 1 615 7 is_stmt 0 view .LVU727
 2578 0000 1029     		cmp	r1, #16
 2579 0002 00D0     		beq	.L189
 2580 0004 7047     		bx	lr
 2581              	.L189:
 614:lvgl/src/lv_widgets/lv_msgbox.c ****     if(event != LV_EVENT_VALUE_CHANGED) return;
 2582              		.loc 1 614 1 view .LVU728
 2583 0006 10B5     		push	{r4, lr}
ARM GAS  D:\Temp\ccdKFHIm.s 			page 82


 2584              	.LCFI32:
 2585              		.cfi_def_cfa_offset 8
 2586              		.cfi_offset 4, -8
 2587              		.cfi_offset 14, -4
 2588 0008 0446     		mov	r4, r0
 617:lvgl/src/lv_widgets/lv_msgbox.c ****     if(btn_id == LV_BTNMATRIX_BTN_NONE) return;
 2589              		.loc 1 617 5 is_stmt 1 view .LVU729
 617:lvgl/src/lv_widgets/lv_msgbox.c ****     if(btn_id == LV_BTNMATRIX_BTN_NONE) return;
 2590              		.loc 1 617 23 is_stmt 0 view .LVU730
 2591 000a FFF7FEFF 		bl	lv_msgbox_get_active_btn
 2592              	.LVL295:
 618:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2593              		.loc 1 618 5 is_stmt 1 view .LVU731
 618:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2594              		.loc 1 618 7 is_stmt 0 view .LVU732
 2595 000e 4FF6FF73 		movw	r3, #65535
 2596 0012 9842     		cmp	r0, r3
 2597 0014 03D0     		beq	.L183
 620:lvgl/src/lv_widgets/lv_msgbox.c **** }
 2598              		.loc 1 620 5 is_stmt 1 view .LVU733
 2599 0016 0021     		movs	r1, #0
 2600 0018 2046     		mov	r0, r4
 2601              	.LVL296:
 620:lvgl/src/lv_widgets/lv_msgbox.c **** }
 2602              		.loc 1 620 5 is_stmt 0 view .LVU734
 2603 001a FFF7FEFF 		bl	lv_msgbox_start_auto_close
 2604              	.LVL297:
 2605              	.L183:
 621:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2606              		.loc 1 621 1 view .LVU735
 2607 001e 10BD     		pop	{r4, pc}
 621:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2608              		.loc 1 621 1 view .LVU736
 2609              		.cfi_endproc
 2610              	.LFE492:
 2612              		.section	.text.lv_msgbox_get_recolor,"ax",%progbits
 2613              		.align	1
 2614              		.global	lv_msgbox_get_recolor
 2615              		.syntax unified
 2616              		.thumb
 2617              		.thumb_func
 2618              		.fpu fpv4-sp-d16
 2620              	lv_msgbox_get_recolor:
 2621              	.LVL298:
 2622              	.LFB486:
 407:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2623              		.loc 1 407 1 is_stmt 1 view -0
 2624              		.cfi_startproc
 2625              		@ args = 0, pretend = 0, frame = 0
 2626              		@ frame_needed = 0, uses_anonymous_args = 0
 407:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2627              		.loc 1 407 1 is_stmt 0 view .LVU738
 2628 0000 10B5     		push	{r4, lr}
 2629              	.LCFI33:
 2630              		.cfi_def_cfa_offset 8
 2631              		.cfi_offset 4, -8
 2632              		.cfi_offset 14, -4
ARM GAS  D:\Temp\ccdKFHIm.s 			page 83


 2633 0002 0446     		mov	r4, r0
 408:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2634              		.loc 1 408 5 is_stmt 1 view .LVU739
 408:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2635              		.loc 1 408 5 view .LVU740
 2636 0004 FFF7FEFF 		bl	lv_debug_check_null
 2637              	.LVL299:
 408:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2638              		.loc 1 408 5 is_stmt 0 view .LVU741
 2639 0008 28B9     		cbnz	r0, .L191
 408:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2640              		.loc 1 408 5 is_stmt 1 discriminator 1 view .LVU742
 408:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2641              		.loc 1 408 5 discriminator 1 view .LVU743
 2642 000a 2246     		mov	r2, r4
 2643 000c 0023     		movs	r3, #0
 2644 000e 0748     		ldr	r0, .L196
 2645 0010 FFF7FEFF 		bl	lv_debug_log_error
 2646              	.LVL300:
 2647              	.L192:
 408:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2648              		.loc 1 408 5 discriminator 1 view .LVU744
 408:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2649              		.loc 1 408 5 discriminator 1 view .LVU745
 2650 0014 FEE7     		b	.L192
 2651              	.L191:
 408:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2652              		.loc 1 408 38 discriminator 2 view .LVU746
 410:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2653              		.loc 1 410 5 discriminator 2 view .LVU747
 410:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2654              		.loc 1 410 29 is_stmt 0 discriminator 2 view .LVU748
 2655 0016 2046     		mov	r0, r4
 2656 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 2657              	.LVL301:
 412:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2658              		.loc 1 412 5 is_stmt 1 discriminator 2 view .LVU749
 412:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2659              		.loc 1 412 12 is_stmt 0 discriminator 2 view .LVU750
 2660 001c 8068     		ldr	r0, [r0, #8]
 2661              	.LVL302:
 412:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2662              		.loc 1 412 7 discriminator 2 view .LVU751
 2663 001e 10B1     		cbz	r0, .L194
 414:lvgl/src/lv_widgets/lv_msgbox.c **** }
 2664              		.loc 1 414 5 is_stmt 1 view .LVU752
 414:lvgl/src/lv_widgets/lv_msgbox.c **** }
 2665              		.loc 1 414 12 is_stmt 0 view .LVU753
 2666 0020 FFF7FEFF 		bl	lv_btnmatrix_get_recolor
 2667              	.LVL303:
 2668              	.L193:
 415:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2669              		.loc 1 415 1 view .LVU754
 2670 0024 10BD     		pop	{r4, pc}
 2671              	.LVL304:
 2672              	.L194:
 412:lvgl/src/lv_widgets/lv_msgbox.c **** 
ARM GAS  D:\Temp\ccdKFHIm.s 			page 84


 2673              		.loc 1 412 27 view .LVU755
 2674 0026 0020     		movs	r0, #0
 2675 0028 FCE7     		b	.L193
 2676              	.L197:
 2677 002a 00BF     		.align	2
 2678              	.L196:
 2679 002c 00000000 		.word	.LC0
 2680              		.cfi_endproc
 2681              	.LFE486:
 2683              		.section	.text.lv_msgbox_get_btnmatrix,"ax",%progbits
 2684              		.align	1
 2685              		.global	lv_msgbox_get_btnmatrix
 2686              		.syntax unified
 2687              		.thumb
 2688              		.thumb_func
 2689              		.fpu fpv4-sp-d16
 2691              	lv_msgbox_get_btnmatrix:
 2692              	.LVL305:
 2693              	.LFB487:
 424:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2694              		.loc 1 424 1 is_stmt 1 view -0
 2695              		.cfi_startproc
 2696              		@ args = 0, pretend = 0, frame = 0
 2697              		@ frame_needed = 0, uses_anonymous_args = 0
 424:lvgl/src/lv_widgets/lv_msgbox.c ****     LV_ASSERT_OBJ(mbox, LV_OBJX_NAME);
 2698              		.loc 1 424 1 is_stmt 0 view .LVU757
 2699 0000 10B5     		push	{r4, lr}
 2700              	.LCFI34:
 2701              		.cfi_def_cfa_offset 8
 2702              		.cfi_offset 4, -8
 2703              		.cfi_offset 14, -4
 2704 0002 0446     		mov	r4, r0
 425:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2705              		.loc 1 425 5 is_stmt 1 view .LVU758
 425:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2706              		.loc 1 425 5 view .LVU759
 2707 0004 FFF7FEFF 		bl	lv_debug_check_null
 2708              	.LVL306:
 425:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2709              		.loc 1 425 5 is_stmt 0 view .LVU760
 2710 0008 28B9     		cbnz	r0, .L199
 425:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2711              		.loc 1 425 5 is_stmt 1 discriminator 1 view .LVU761
 425:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2712              		.loc 1 425 5 discriminator 1 view .LVU762
 2713 000a 2246     		mov	r2, r4
 2714 000c 0023     		movs	r3, #0
 2715 000e 0448     		ldr	r0, .L202
 2716 0010 FFF7FEFF 		bl	lv_debug_log_error
 2717              	.LVL307:
 2718              	.L200:
 425:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2719              		.loc 1 425 5 discriminator 1 view .LVU763
 425:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2720              		.loc 1 425 5 discriminator 1 view .LVU764
 2721 0014 FEE7     		b	.L200
 2722              	.L199:
ARM GAS  D:\Temp\ccdKFHIm.s 			page 85


 425:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2723              		.loc 1 425 38 discriminator 2 view .LVU765
 427:lvgl/src/lv_widgets/lv_msgbox.c ****     return ext->btnm;
 2724              		.loc 1 427 5 discriminator 2 view .LVU766
 427:lvgl/src/lv_widgets/lv_msgbox.c ****     return ext->btnm;
 2725              		.loc 1 427 29 is_stmt 0 discriminator 2 view .LVU767
 2726 0016 2046     		mov	r0, r4
 2727 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 2728              	.LVL308:
 428:lvgl/src/lv_widgets/lv_msgbox.c **** }
 2729              		.loc 1 428 5 is_stmt 1 discriminator 2 view .LVU768
 429:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2730              		.loc 1 429 1 is_stmt 0 discriminator 2 view .LVU769
 2731 001c 8068     		ldr	r0, [r0, #8]
 2732              	.LVL309:
 429:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2733              		.loc 1 429 1 discriminator 2 view .LVU770
 2734 001e 10BD     		pop	{r4, pc}
 2735              	.LVL310:
 2736              	.L203:
 429:lvgl/src/lv_widgets/lv_msgbox.c **** 
 2737              		.loc 1 429 1 discriminator 2 view .LVU771
 2738              		.align	2
 2739              	.L202:
 2740 0020 00000000 		.word	.LC0
 2741              		.cfi_endproc
 2742              	.LFE487:
 2744              		.section	.bss.ancestor_signal,"aw",%nobits
 2745              		.align	2
 2746              		.set	.LANCHOR0,. + 0
 2749              	ancestor_signal:
 2750 0000 00000000 		.space	4
 2751              		.section	.rodata.lv_msgbox_create.str1.4,"aMS",%progbits,1
 2752              		.align	2
 2753              	.LC2:
 2754 0000 4F757420 		.ascii	"Out of memory\000"
 2754      6F66206D 
 2754      656D6F72 
 2754      7900
 2755 000e 0000     		.space	2
 2756              	.LC3:
 2757 0010 4D657373 		.ascii	"Message\000"
 2757      61676500 
 2758              		.section	.rodata.lv_msgbox_get_style.str1.4,"aMS",%progbits,1
 2759              		.align	2
 2760              	.LC0:
 2761 0000 4E554C4C 		.ascii	"NULL pointer\000"
 2761      20706F69 
 2761      6E746572 
 2761      00
 2762              		.section	.rodata.lv_msgbox_signal.str1.4,"aMS",%progbits,1
 2763              		.align	2
 2764              	.LC1:
 2765 0000 6C765F6D 		.ascii	"lv_msgbox\000"
 2765      7367626F 
 2765      7800
 2766              		.text
ARM GAS  D:\Temp\ccdKFHIm.s 			page 86


 2767              	.Letext0:
 2768              		.file 7 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 2769              		.file 8 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 2770              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 2771              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2772              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2773              		.file 12 "lvgl/lv_conf.h"
 2774              		.file 13 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2775              		.file 14 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2776              		.file 15 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 2777              		.file 16 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2778              		.file 17 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_types.h"
 2779              		.file 18 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_mem.h"
 2780              		.file 19 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h"
 2781              		.file 20 "lvgl/src/lv_widgets/../lv_core/lv_style.h"
 2782              		.file 21 "lvgl/src/lv_widgets/../lv_core/../lv_hal/../lv_misc/lv_ll.h"
 2783              		.file 22 "lvgl/src/lv_widgets/../lv_core/../lv_hal/../lv_misc/lv_task.h"
 2784              		.file 23 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_disp.h"
 2785              		.file 24 "lvgl/src/lv_widgets/../lv_core/lv_obj.h"
 2786              		.file 25 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_indev.h"
 2787              		.file 26 "lvgl/src/lv_widgets/../lv_core/../lv_core/lv_group.h"
 2788              		.file 27 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_bidi.h"
 2789              		.file 28 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 2790              		.file 29 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_txt.h"
 2791              		.file 30 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_label.h"
 2792              		.file 31 "lvgl/src/lv_widgets/lv_label.h"
 2793              		.file 32 "lvgl/src/lv_widgets/lv_btnmatrix.h"
 2794              		.file 33 "lvgl/src/lv_widgets/lv_msgbox.h"
 2795              		.file 34 "lvgl/src/lv_widgets/../lv_themes/lv_theme.h"
 2796              		.file 35 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_debug.h"
 2797              		.file 36 "lvgl/src/lv_widgets/../lv_core/lv_indev.h"
 2798              		.file 37 "<built-in>"
ARM GAS  D:\Temp\ccdKFHIm.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_msgbox.c
  D:\Temp\ccdKFHIm.s:18     .text.lv_msgbox_close_ready_cb:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:25     .text.lv_msgbox_close_ready_cb:0000000000000000 lv_msgbox_close_ready_cb
  D:\Temp\ccdKFHIm.s:51     .text.lv_msgbox_get_style:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:57     .text.lv_msgbox_get_style:0000000000000000 lv_msgbox_get_style
  D:\Temp\ccdKFHIm.s:160    .text.lv_msgbox_get_style:0000000000000054 $d
  D:\Temp\ccdKFHIm.s:165    .text.mbox_realign:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:171    .text.mbox_realign:0000000000000000 mbox_realign
  D:\Temp\ccdKFHIm.s:422    .text.lv_msgbox_signal:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:428    .text.lv_msgbox_signal:0000000000000000 lv_msgbox_signal
  D:\Temp\ccdKFHIm.s:885    .text.lv_msgbox_signal:00000000000001d0 $d
  D:\Temp\ccdKFHIm.s:892    .text.lv_msgbox_btnm_event_cb:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:898    .text.lv_msgbox_btnm_event_cb:0000000000000000 lv_msgbox_btnm_event_cb
  D:\Temp\ccdKFHIm.s:961    .text.lv_msgbox_create:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:968    .text.lv_msgbox_create:0000000000000000 lv_msgbox_create
  D:\Temp\ccdKFHIm.s:1313   .text.lv_msgbox_create:0000000000000184 $d
  D:\Temp\ccdKFHIm.s:2569   .text.lv_msgbox_default_event_cb:0000000000000000 lv_msgbox_default_event_cb
  D:\Temp\ccdKFHIm.s:1324   .text.lv_msgbox_add_btns:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:1331   .text.lv_msgbox_add_btns:0000000000000000 lv_msgbox_add_btns
  D:\Temp\ccdKFHIm.s:1486   .text.lv_msgbox_add_btns:00000000000000a0 $d
  D:\Temp\ccdKFHIm.s:1493   .text.lv_msgbox_set_text:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:1500   .text.lv_msgbox_set_text:0000000000000000 lv_msgbox_set_text
  D:\Temp\ccdKFHIm.s:1578   .text.lv_msgbox_set_text:0000000000000044 $d
  D:\Temp\ccdKFHIm.s:1583   .text.lv_msgbox_set_text_fmt:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:1590   .text.lv_msgbox_set_text_fmt:0000000000000000 lv_msgbox_set_text_fmt
  D:\Temp\ccdKFHIm.s:1747   .text.lv_msgbox_set_text_fmt:0000000000000078 $d
  D:\Temp\ccdKFHIm.s:1752   .text.lv_msgbox_set_anim_time:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:1759   .text.lv_msgbox_set_anim_time:0000000000000000 lv_msgbox_set_anim_time
  D:\Temp\ccdKFHIm.s:1810   .text.lv_msgbox_set_anim_time:0000000000000024 $d
  D:\Temp\ccdKFHIm.s:1815   .text.lv_msgbox_stop_auto_close:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:1822   .text.lv_msgbox_stop_auto_close:0000000000000000 lv_msgbox_stop_auto_close
  D:\Temp\ccdKFHIm.s:1867   .text.lv_msgbox_stop_auto_close:0000000000000020 $d
  D:\Temp\ccdKFHIm.s:1872   .text.lv_msgbox_set_recolor:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:1879   .text.lv_msgbox_set_recolor:0000000000000000 lv_msgbox_set_recolor
  D:\Temp\ccdKFHIm.s:1938   .text.lv_msgbox_set_recolor:000000000000002c $d
  D:\Temp\ccdKFHIm.s:1943   .text.lv_msgbox_get_text:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:1950   .text.lv_msgbox_get_text:0000000000000000 lv_msgbox_get_text
  D:\Temp\ccdKFHIm.s:2002   .text.lv_msgbox_get_text:0000000000000024 $d
  D:\Temp\ccdKFHIm.s:2007   .text.lv_msgbox_get_active_btn:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:2014   .text.lv_msgbox_get_active_btn:0000000000000000 lv_msgbox_get_active_btn
  D:\Temp\ccdKFHIm.s:2092   .text.lv_msgbox_get_active_btn:0000000000000040 $d
  D:\Temp\ccdKFHIm.s:2097   .text.lv_msgbox_get_active_btn_text:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:2104   .text.lv_msgbox_get_active_btn_text:0000000000000000 lv_msgbox_get_active_btn_text
  D:\Temp\ccdKFHIm.s:2163   .text.lv_msgbox_get_active_btn_text:000000000000002c $d
  D:\Temp\ccdKFHIm.s:2168   .text.lv_msgbox_get_anim_time:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:2175   .text.lv_msgbox_get_anim_time:0000000000000000 lv_msgbox_get_anim_time
  D:\Temp\ccdKFHIm.s:2224   .text.lv_msgbox_get_anim_time:0000000000000020 $d
  D:\Temp\ccdKFHIm.s:2229   .text.lv_msgbox_start_auto_close:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:2236   .text.lv_msgbox_start_auto_close:0000000000000000 lv_msgbox_start_auto_close
  D:\Temp\ccdKFHIm.s:2555   .text.lv_msgbox_start_auto_close:00000000000000a8 $d
  D:\Temp\ccdKFHIm.s:2563   .text.lv_msgbox_default_event_cb:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:2613   .text.lv_msgbox_get_recolor:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:2620   .text.lv_msgbox_get_recolor:0000000000000000 lv_msgbox_get_recolor
  D:\Temp\ccdKFHIm.s:2679   .text.lv_msgbox_get_recolor:000000000000002c $d
  D:\Temp\ccdKFHIm.s:2684   .text.lv_msgbox_get_btnmatrix:0000000000000000 $t
  D:\Temp\ccdKFHIm.s:2691   .text.lv_msgbox_get_btnmatrix:0000000000000000 lv_msgbox_get_btnmatrix
ARM GAS  D:\Temp\ccdKFHIm.s 			page 88


  D:\Temp\ccdKFHIm.s:2740   .text.lv_msgbox_get_btnmatrix:0000000000000020 $d
  D:\Temp\ccdKFHIm.s:2745   .bss.ancestor_signal:0000000000000000 $d
  D:\Temp\ccdKFHIm.s:2749   .bss.ancestor_signal:0000000000000000 ancestor_signal
  D:\Temp\ccdKFHIm.s:2752   .rodata.lv_msgbox_create.str1.4:0000000000000000 $d
  D:\Temp\ccdKFHIm.s:2759   .rodata.lv_msgbox_get_style.str1.4:0000000000000000 $d
  D:\Temp\ccdKFHIm.s:2763   .rodata.lv_msgbox_signal.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
lv_obj_del
lv_debug_check_null
lv_debug_log_error
lv_obj_get_ext_attr
lv_obj_get_style_list
lv_obj_get_width_fit
lv_obj_set_width
_lv_obj_get_style_int
_lv_obj_get_style_ptr
lv_btnmatrix_get_map_array
lv_obj_set_size
lv_obj_get_state
lv_obj_set_state
lv_obj_handle_get_type_signal
lv_obj_get_width
lv_btnmatrix_get_focused_btn
lv_event_send
lv_indev_get_act
lv_indev_get_type
lv_obj_get_group
lv_group_get_editing
lv_btnmatrix_set_focused_btn
lv_obj_clear_state
lv_obj_get_parent
lv_event_get_data
lv_cont_create
lv_obj_allocate_ext_attr
lv_obj_set_signal_cb
lv_label_create
lv_btnmatrix_create
lv_obj_refresh_style
lv_obj_get_signal_cb
lv_label_set_align
lv_label_set_long_mode
lv_label_set_text
lv_cont_set_layout
lv_cont_set_fit4
lv_disp_get_size_category
lv_obj_align
lv_obj_set_event_cb
lv_theme_apply
lv_disp_get_dpi
lv_btnmatrix_set_map
lv_btnmatrix_set_btn_ctrl_all
lv_obj_is_focused
lv_mem_free
_lv_txt_set_text_vfmt
lv_label_refr_text
lv_anim_del
ARM GAS  D:\Temp\ccdKFHIm.s 			page 89


lv_btnmatrix_set_recolor
lv_label_get_text
lv_btnmatrix_get_active_btn
lv_btnmatrix_get_active_btn_text
lv_anim_init
lv_obj_get_height
lv_anim_start
lv_obj_set_height
lv_btnmatrix_get_recolor
