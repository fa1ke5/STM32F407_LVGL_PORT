ARM GAS  D:\Temp\ccqwJTgn.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_roller.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_roller_get_style,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	lv_roller_get_style:
  26              	.LVL0:
  27              	.LFB490:
  28              		.file 1 "lvgl/src/lv_widgets/lv_roller.c"
   1:lvgl/src/lv_widgets/lv_roller.c **** /**
   2:lvgl/src/lv_widgets/lv_roller.c ****  * @file lv_roller.c
   3:lvgl/src/lv_widgets/lv_roller.c ****  *
   4:lvgl/src/lv_widgets/lv_roller.c ****  */
   5:lvgl/src/lv_widgets/lv_roller.c **** 
   6:lvgl/src/lv_widgets/lv_roller.c **** /*********************
   7:lvgl/src/lv_widgets/lv_roller.c ****  *      INCLUDES
   8:lvgl/src/lv_widgets/lv_roller.c ****  *********************/
   9:lvgl/src/lv_widgets/lv_roller.c **** #include "lv_roller.h"
  10:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ROLLER != 0
  11:lvgl/src/lv_widgets/lv_roller.c **** 
  12:lvgl/src/lv_widgets/lv_roller.c **** #include "../lv_misc/lv_debug.h"
  13:lvgl/src/lv_widgets/lv_roller.c **** #include "../lv_draw/lv_draw.h"
  14:lvgl/src/lv_widgets/lv_roller.c **** #include "../lv_core/lv_group.h"
  15:lvgl/src/lv_widgets/lv_roller.c **** #include "../lv_themes/lv_theme.h"
  16:lvgl/src/lv_widgets/lv_roller.c **** 
  17:lvgl/src/lv_widgets/lv_roller.c **** /*********************
  18:lvgl/src/lv_widgets/lv_roller.c ****  *      DEFINES
  19:lvgl/src/lv_widgets/lv_roller.c ****  *********************/
  20:lvgl/src/lv_widgets/lv_roller.c **** #define LV_OBJX_NAME "lv_roller"
  21:lvgl/src/lv_widgets/lv_roller.c **** 
  22:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION == 0
  23:lvgl/src/lv_widgets/lv_roller.c ****     #undef LV_ROLLER_DEF_ANIM_TIME
  24:lvgl/src/lv_widgets/lv_roller.c ****     #define LV_ROLLER_DEF_ANIM_TIME 0 /*No animation*/
  25:lvgl/src/lv_widgets/lv_roller.c **** #endif
  26:lvgl/src/lv_widgets/lv_roller.c **** 
  27:lvgl/src/lv_widgets/lv_roller.c **** /**********************
  28:lvgl/src/lv_widgets/lv_roller.c ****  *      TYPEDEFS
  29:lvgl/src/lv_widgets/lv_roller.c ****  **********************/
  30:lvgl/src/lv_widgets/lv_roller.c **** 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 2


  31:lvgl/src/lv_widgets/lv_roller.c **** /**********************
  32:lvgl/src/lv_widgets/lv_roller.c ****  *  STATIC PROTOTYPES
  33:lvgl/src/lv_widgets/lv_roller.c ****  **********************/
  34:lvgl/src/lv_widgets/lv_roller.c **** static lv_design_res_t lv_roller_design(lv_obj_t * roller, const lv_area_t * clip_area, lv_design_m
  35:lvgl/src/lv_widgets/lv_roller.c **** static lv_design_res_t lv_roller_label_design(lv_obj_t * label, const lv_area_t * clip_area, lv_des
  36:lvgl/src/lv_widgets/lv_roller.c **** static lv_res_t lv_roller_scrl_signal(lv_obj_t * roller_scrl, lv_signal_t sign, void * param);
  37:lvgl/src/lv_widgets/lv_roller.c **** static lv_style_list_t * lv_roller_get_style(lv_obj_t * roller, uint8_t part);
  38:lvgl/src/lv_widgets/lv_roller.c **** static lv_res_t lv_roller_signal(lv_obj_t * roller, lv_signal_t sign, void * param);
  39:lvgl/src/lv_widgets/lv_roller.c **** static void refr_position(lv_obj_t * roller, lv_anim_enable_t animen);
  40:lvgl/src/lv_widgets/lv_roller.c **** static void refr_height(lv_obj_t * roller);
  41:lvgl/src/lv_widgets/lv_roller.c **** static void refr_width(lv_obj_t * roller);
  42:lvgl/src/lv_widgets/lv_roller.c **** static lv_res_t release_handler(lv_obj_t * roller);
  43:lvgl/src/lv_widgets/lv_roller.c **** static void inf_normalize(void * roller_scrl);
  44:lvgl/src/lv_widgets/lv_roller.c **** static lv_obj_t * get_label(const lv_obj_t * roller);
  45:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
  46:lvgl/src/lv_widgets/lv_roller.c ****     static void scroll_anim_ready_cb(lv_anim_t * a);
  47:lvgl/src/lv_widgets/lv_roller.c **** #endif
  48:lvgl/src/lv_widgets/lv_roller.c **** static void draw_bg(lv_obj_t * roller, const lv_area_t * clip_area);
  49:lvgl/src/lv_widgets/lv_roller.c **** 
  50:lvgl/src/lv_widgets/lv_roller.c **** /**********************
  51:lvgl/src/lv_widgets/lv_roller.c ****  *  STATIC VARIABLES
  52:lvgl/src/lv_widgets/lv_roller.c ****  **********************/
  53:lvgl/src/lv_widgets/lv_roller.c **** static lv_signal_cb_t ancestor_signal;
  54:lvgl/src/lv_widgets/lv_roller.c **** static lv_design_cb_t ancestor_label_design;
  55:lvgl/src/lv_widgets/lv_roller.c **** static lv_signal_cb_t ancestor_scrl_signal;
  56:lvgl/src/lv_widgets/lv_roller.c **** 
  57:lvgl/src/lv_widgets/lv_roller.c **** /**********************
  58:lvgl/src/lv_widgets/lv_roller.c ****  *      MACROS
  59:lvgl/src/lv_widgets/lv_roller.c ****  **********************/
  60:lvgl/src/lv_widgets/lv_roller.c **** 
  61:lvgl/src/lv_widgets/lv_roller.c **** /**********************
  62:lvgl/src/lv_widgets/lv_roller.c ****  *   GLOBAL FUNCTIONS
  63:lvgl/src/lv_widgets/lv_roller.c ****  **********************/
  64:lvgl/src/lv_widgets/lv_roller.c **** 
  65:lvgl/src/lv_widgets/lv_roller.c **** /**
  66:lvgl/src/lv_widgets/lv_roller.c ****  * Create a roller object
  67:lvgl/src/lv_widgets/lv_roller.c ****  * @param par pointer to an object, it will be the parent of the new roller
  68:lvgl/src/lv_widgets/lv_roller.c ****  * @param copy pointer to a roller object, if not NULL then the new object will be copied from it
  69:lvgl/src/lv_widgets/lv_roller.c ****  * @return pointer to the created roller
  70:lvgl/src/lv_widgets/lv_roller.c ****  */
  71:lvgl/src/lv_widgets/lv_roller.c **** lv_obj_t * lv_roller_create(lv_obj_t * par, const lv_obj_t * copy)
  72:lvgl/src/lv_widgets/lv_roller.c **** {
  73:lvgl/src/lv_widgets/lv_roller.c ****     LV_LOG_TRACE("roller create started");
  74:lvgl/src/lv_widgets/lv_roller.c **** 
  75:lvgl/src/lv_widgets/lv_roller.c ****     /*Create the ancestor of roller*/
  76:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * roller = lv_page_create(par, copy);
  77:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_MEM(roller);
  78:lvgl/src/lv_widgets/lv_roller.c ****     if(roller == NULL) return NULL;
  79:lvgl/src/lv_widgets/lv_roller.c **** 
  80:lvgl/src/lv_widgets/lv_roller.c ****     if(ancestor_scrl_signal == NULL) ancestor_scrl_signal = lv_obj_get_signal_cb(lv_page_get_scroll
  81:lvgl/src/lv_widgets/lv_roller.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(roller);
  82:lvgl/src/lv_widgets/lv_roller.c **** 
  83:lvgl/src/lv_widgets/lv_roller.c ****     /*Allocate the roller type specific extended data*/
  84:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_allocate_ext_attr(roller, sizeof(lv_roller_ext_t));
  85:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_MEM(ext);
  86:lvgl/src/lv_widgets/lv_roller.c ****     if(ext == NULL) {
  87:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_del(roller);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 3


  88:lvgl/src/lv_widgets/lv_roller.c ****         return NULL;
  89:lvgl/src/lv_widgets/lv_roller.c ****     }
  90:lvgl/src/lv_widgets/lv_roller.c **** 
  91:lvgl/src/lv_widgets/lv_roller.c ****     ext->mode = LV_ROLLER_MODE_NORMAL;
  92:lvgl/src/lv_widgets/lv_roller.c ****     ext->option_cnt = 0;
  93:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id = 0;
  94:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = 0;
  95:lvgl/src/lv_widgets/lv_roller.c ****     ext->auto_fit = 1;
  96:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_list_init(&ext->style_sel);
  97:lvgl/src/lv_widgets/lv_roller.c **** 
  98:lvgl/src/lv_widgets/lv_roller.c ****     /*The signal and design functions are not copied so set them here*/
  99:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_set_signal_cb(roller, lv_roller_signal);
 100:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_set_design_cb(roller, lv_roller_design);
 101:lvgl/src/lv_widgets/lv_roller.c **** 
 102:lvgl/src/lv_widgets/lv_roller.c ****     /*Init the new roller roller*/
 103:lvgl/src/lv_widgets/lv_roller.c ****     if(copy == NULL) {
 104:lvgl/src/lv_widgets/lv_roller.c **** 
 105:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * label = lv_label_create(roller, NULL);
 106:lvgl/src/lv_widgets/lv_roller.c ****         lv_label_set_align(label, LV_LABEL_ALIGN_CENTER);
 107:lvgl/src/lv_widgets/lv_roller.c ****         if(ancestor_label_design == NULL) ancestor_label_design = lv_obj_get_design_cb(label);
 108:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_design_cb(label, lv_roller_label_design);
 109:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * scrl = lv_page_get_scrollable(roller);
 110:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_drag(scrl, true);
 111:lvgl/src/lv_widgets/lv_roller.c ****         lv_page_set_scrollable_fit2(roller, LV_FIT_PARENT, LV_FIT_NONE); /*Height is specified dire
 112:lvgl/src/lv_widgets/lv_roller.c ****         lv_roller_set_anim_time(roller, LV_ROLLER_DEF_ANIM_TIME);
 113:lvgl/src/lv_widgets/lv_roller.c ****         lv_roller_set_options(roller, "Option 1\nOption 2\nOption 3\nOption 4\nOption 5", LV_ROLLER
 114:lvgl/src/lv_widgets/lv_roller.c **** 
 115:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_signal_cb(scrl, lv_roller_scrl_signal);
 116:lvgl/src/lv_widgets/lv_roller.c **** 
 117:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_clean_style_list(roller, LV_PAGE_PART_SCROLLABLE); /*Use a transparent scrollable*/
 118:lvgl/src/lv_widgets/lv_roller.c ****         lv_theme_apply(roller, LV_THEME_ROLLER);
 119:lvgl/src/lv_widgets/lv_roller.c ****         refr_height(roller);
 120:lvgl/src/lv_widgets/lv_roller.c **** 
 121:lvgl/src/lv_widgets/lv_roller.c ****         lv_roller_set_visible_row_count(roller, 3);
 122:lvgl/src/lv_widgets/lv_roller.c ****     }
 123:lvgl/src/lv_widgets/lv_roller.c ****     /*Copy an existing roller*/
 124:lvgl/src/lv_widgets/lv_roller.c ****     else {
 125:lvgl/src/lv_widgets/lv_roller.c ****         lv_label_create(roller, get_label(copy));
 126:lvgl/src/lv_widgets/lv_roller.c **** 
 127:lvgl/src/lv_widgets/lv_roller.c ****         lv_roller_ext_t * copy_ext = lv_obj_get_ext_attr(copy);
 128:lvgl/src/lv_widgets/lv_roller.c ****         ext->mode = copy_ext->mode;
 129:lvgl/src/lv_widgets/lv_roller.c ****         ext->option_cnt = copy_ext->option_cnt;
 130:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id = copy_ext->sel_opt_id;
 131:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = copy_ext->sel_opt_id;
 132:lvgl/src/lv_widgets/lv_roller.c ****         ext->auto_fit = copy_ext->auto_fit;
 133:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * scrl = lv_page_get_scrollable(roller);
 134:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_signal_cb(scrl, lv_roller_scrl_signal);
 135:lvgl/src/lv_widgets/lv_roller.c **** 
 136:lvgl/src/lv_widgets/lv_roller.c ****         lv_style_list_copy(&ext->style_sel, &copy_ext->style_sel);
 137:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_refresh_style(roller, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);
 138:lvgl/src/lv_widgets/lv_roller.c ****     }
 139:lvgl/src/lv_widgets/lv_roller.c **** 
 140:lvgl/src/lv_widgets/lv_roller.c ****     LV_LOG_INFO("roller created");
 141:lvgl/src/lv_widgets/lv_roller.c **** 
 142:lvgl/src/lv_widgets/lv_roller.c ****     return roller;
 143:lvgl/src/lv_widgets/lv_roller.c **** }
 144:lvgl/src/lv_widgets/lv_roller.c **** 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 4


 145:lvgl/src/lv_widgets/lv_roller.c **** /*=====================
 146:lvgl/src/lv_widgets/lv_roller.c ****  * Setter functions
 147:lvgl/src/lv_widgets/lv_roller.c ****  *====================*/
 148:lvgl/src/lv_widgets/lv_roller.c **** 
 149:lvgl/src/lv_widgets/lv_roller.c **** /**
 150:lvgl/src/lv_widgets/lv_roller.c ****  * Set the options on a roller
 151:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to roller object
 152:lvgl/src/lv_widgets/lv_roller.c ****  * @param options a string with '\n' separated options. E.g. "One\nTwo\nThree"
 153:lvgl/src/lv_widgets/lv_roller.c ****  * @param mode `LV_ROLLER_MODE_NORMAL` or `LV_ROLLER_MODE_INFINITE`
 154:lvgl/src/lv_widgets/lv_roller.c ****  */
 155:lvgl/src/lv_widgets/lv_roller.c **** void lv_roller_set_options(lv_obj_t * roller, const char * options, lv_roller_mode_t mode)
 156:lvgl/src/lv_widgets/lv_roller.c **** {
 157:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 158:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_STR(options);
 159:lvgl/src/lv_widgets/lv_roller.c **** 
 160:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 161:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 162:lvgl/src/lv_widgets/lv_roller.c **** 
 163:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id     = 0;
 164:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = 0;
 165:lvgl/src/lv_widgets/lv_roller.c **** 
 166:lvgl/src/lv_widgets/lv_roller.c ****     /*Count the '\n'-s to determine the number of options*/
 167:lvgl/src/lv_widgets/lv_roller.c ****     ext->option_cnt = 0;
 168:lvgl/src/lv_widgets/lv_roller.c ****     uint32_t cnt;
 169:lvgl/src/lv_widgets/lv_roller.c ****     for(cnt = 0; options[cnt] != '\0'; cnt++) {
 170:lvgl/src/lv_widgets/lv_roller.c ****         if(options[cnt] == '\n') ext->option_cnt++;
 171:lvgl/src/lv_widgets/lv_roller.c ****     }
 172:lvgl/src/lv_widgets/lv_roller.c ****     ext->option_cnt++; /*Last option has no `\n`*/
 173:lvgl/src/lv_widgets/lv_roller.c **** 
 174:lvgl/src/lv_widgets/lv_roller.c ****     if(mode == LV_ROLLER_MODE_NORMAL) {
 175:lvgl/src/lv_widgets/lv_roller.c ****         ext->mode = LV_ROLLER_MODE_NORMAL;
 176:lvgl/src/lv_widgets/lv_roller.c ****         lv_label_set_text(label, options);
 177:lvgl/src/lv_widgets/lv_roller.c ****     }
 178:lvgl/src/lv_widgets/lv_roller.c ****     else {
 179:lvgl/src/lv_widgets/lv_roller.c ****         ext->mode = LV_ROLLER_MODE_INFINITE;
 180:lvgl/src/lv_widgets/lv_roller.c **** 
 181:lvgl/src/lv_widgets/lv_roller.c ****         size_t opt_len = strlen(options) + 1; /*+1 to add '\n' after option lists*/
 182:lvgl/src/lv_widgets/lv_roller.c ****         char * opt_extra = _lv_mem_buf_get(opt_len * LV_ROLLER_INF_PAGES);
 183:lvgl/src/lv_widgets/lv_roller.c ****         uint8_t i;
 184:lvgl/src/lv_widgets/lv_roller.c ****         for(i = 0; i < LV_ROLLER_INF_PAGES; i++) {
 185:lvgl/src/lv_widgets/lv_roller.c ****             strcpy(&opt_extra[opt_len * i], options);
 186:lvgl/src/lv_widgets/lv_roller.c ****             opt_extra[opt_len * (i + 1) - 1] = '\n';
 187:lvgl/src/lv_widgets/lv_roller.c ****         }
 188:lvgl/src/lv_widgets/lv_roller.c ****         opt_extra[opt_len * LV_ROLLER_INF_PAGES - 1] = '\0';
 189:lvgl/src/lv_widgets/lv_roller.c ****         lv_label_set_text(label, opt_extra);
 190:lvgl/src/lv_widgets/lv_roller.c ****         _lv_mem_buf_release(opt_extra);
 191:lvgl/src/lv_widgets/lv_roller.c **** 
 192:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id     = ((LV_ROLLER_INF_PAGES / 2) + 0) * ext->option_cnt;
 193:lvgl/src/lv_widgets/lv_roller.c **** 
 194:lvgl/src/lv_widgets/lv_roller.c ****         ext->option_cnt = ext->option_cnt * LV_ROLLER_INF_PAGES;
 195:lvgl/src/lv_widgets/lv_roller.c ****     }
 196:lvgl/src/lv_widgets/lv_roller.c **** 
 197:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = ext->sel_opt_id;
 198:lvgl/src/lv_widgets/lv_roller.c **** 
 199:lvgl/src/lv_widgets/lv_roller.c ****     refr_height(roller);
 200:lvgl/src/lv_widgets/lv_roller.c ****     refr_width(roller);
 201:lvgl/src/lv_widgets/lv_roller.c **** }
ARM GAS  D:\Temp\ccqwJTgn.s 			page 5


 202:lvgl/src/lv_widgets/lv_roller.c **** 
 203:lvgl/src/lv_widgets/lv_roller.c **** /**
 204:lvgl/src/lv_widgets/lv_roller.c ****  * Set the align of the roller's options (left or center)
 205:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller - pointer to a roller object
 206:lvgl/src/lv_widgets/lv_roller.c ****  * @param align - one of lv_label_align_t values (left, right, center)
 207:lvgl/src/lv_widgets/lv_roller.c ****  */
 208:lvgl/src/lv_widgets/lv_roller.c **** void lv_roller_set_align(lv_obj_t * roller, lv_label_align_t align)
 209:lvgl/src/lv_widgets/lv_roller.c **** {
 210:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 211:lvgl/src/lv_widgets/lv_roller.c **** 
 212:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 213:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return; /*Probably the roller is being deleted if the label is NULL.*/
 214:lvgl/src/lv_widgets/lv_roller.c **** 
 215:lvgl/src/lv_widgets/lv_roller.c ****     lv_label_set_align(label, align);
 216:lvgl/src/lv_widgets/lv_roller.c ****     refr_width(roller); /*To set the correct label position*/
 217:lvgl/src/lv_widgets/lv_roller.c **** }
 218:lvgl/src/lv_widgets/lv_roller.c **** 
 219:lvgl/src/lv_widgets/lv_roller.c **** /**
 220:lvgl/src/lv_widgets/lv_roller.c ****  * Set the selected option
 221:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to a roller object
 222:lvgl/src/lv_widgets/lv_roller.c ****  * @param sel_opt id of the selected option (0 ... number of option - 1);
 223:lvgl/src/lv_widgets/lv_roller.c ****  * @param anim_en LV_ANIM_ON: set with animation; LV_ANOM_OFF set immediately
 224:lvgl/src/lv_widgets/lv_roller.c ****  */
 225:lvgl/src/lv_widgets/lv_roller.c **** void lv_roller_set_selected(lv_obj_t * roller, uint16_t sel_opt, lv_anim_enable_t anim)
 226:lvgl/src/lv_widgets/lv_roller.c **** {
 227:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 228:lvgl/src/lv_widgets/lv_roller.c **** 
 229:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION == 0
 230:lvgl/src/lv_widgets/lv_roller.c ****     anim = LV_ANIM_OFF;
 231:lvgl/src/lv_widgets/lv_roller.c **** #endif
 232:lvgl/src/lv_widgets/lv_roller.c **** 
 233:lvgl/src/lv_widgets/lv_roller.c ****     /* Set the value even if it's the same as the current value because
 234:lvgl/src/lv_widgets/lv_roller.c ****      * if moving to the next option with an animation which was just deleted in the PRESS signal
 235:lvgl/src/lv_widgets/lv_roller.c ****      * nothing will continue the animation. */
 236:lvgl/src/lv_widgets/lv_roller.c **** 
 237:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 238:lvgl/src/lv_widgets/lv_roller.c **** 
 239:lvgl/src/lv_widgets/lv_roller.c ****     /*In infinite mode interpret the new ID relative to the currently visible "page"*/
 240:lvgl/src/lv_widgets/lv_roller.c ****     if(ext->mode == LV_ROLLER_MODE_INFINITE) {
 241:lvgl/src/lv_widgets/lv_roller.c ****         int32_t sel_opt_signed = sel_opt;
 242:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t page = ext->sel_opt_id / LV_ROLLER_INF_PAGES;
 243:lvgl/src/lv_widgets/lv_roller.c **** 
 244:lvgl/src/lv_widgets/lv_roller.c ****         /* `sel_opt` should be less than the number of options set by the user.
 245:lvgl/src/lv_widgets/lv_roller.c ****          * If it's more then probably it's a reference from not the first page
 246:lvgl/src/lv_widgets/lv_roller.c ****          * so normalize `sel_opt` */
 247:lvgl/src/lv_widgets/lv_roller.c ****         if(page != 0) {
 248:lvgl/src/lv_widgets/lv_roller.c ****             sel_opt_signed -= page * LV_ROLLER_INF_PAGES;
 249:lvgl/src/lv_widgets/lv_roller.c ****         }
 250:lvgl/src/lv_widgets/lv_roller.c **** 
 251:lvgl/src/lv_widgets/lv_roller.c ****         sel_opt = page * LV_ROLLER_INF_PAGES + sel_opt_signed;
 252:lvgl/src/lv_widgets/lv_roller.c ****     }
 253:lvgl/src/lv_widgets/lv_roller.c **** 
 254:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id     = sel_opt < ext->option_cnt ? sel_opt : ext->option_cnt - 1;
 255:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = ext->sel_opt_id;
 256:lvgl/src/lv_widgets/lv_roller.c **** 
 257:lvgl/src/lv_widgets/lv_roller.c ****     refr_position(roller, anim);
 258:lvgl/src/lv_widgets/lv_roller.c **** }
ARM GAS  D:\Temp\ccqwJTgn.s 			page 6


 259:lvgl/src/lv_widgets/lv_roller.c **** 
 260:lvgl/src/lv_widgets/lv_roller.c **** /**
 261:lvgl/src/lv_widgets/lv_roller.c ****  * Set the height to show the given number of rows (options)
 262:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to a roller object
 263:lvgl/src/lv_widgets/lv_roller.c ****  * @param row_cnt number of desired visible rows
 264:lvgl/src/lv_widgets/lv_roller.c ****  */
 265:lvgl/src/lv_widgets/lv_roller.c **** void lv_roller_set_visible_row_count(lv_obj_t * roller, uint8_t row_cnt)
 266:lvgl/src/lv_widgets/lv_roller.c **** {
 267:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 268:lvgl/src/lv_widgets/lv_roller.c **** 
 269:lvgl/src/lv_widgets/lv_roller.c ****     const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
 270:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
 271:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_set_height(roller, (lv_font_get_line_height(font) + line_space) * row_cnt);
 272:lvgl/src/lv_widgets/lv_roller.c **** 
 273:lvgl/src/lv_widgets/lv_roller.c ****     refr_height(roller);
 274:lvgl/src/lv_widgets/lv_roller.c ****     refr_position(roller, LV_ANIM_OFF);
 275:lvgl/src/lv_widgets/lv_roller.c **** }
 276:lvgl/src/lv_widgets/lv_roller.c **** 
 277:lvgl/src/lv_widgets/lv_roller.c **** /**
 278:lvgl/src/lv_widgets/lv_roller.c ****  * Allow automatically setting the width of roller according to it's content.
 279:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to a roller object
 280:lvgl/src/lv_widgets/lv_roller.c ****  * @param auto_fit true: enable auto fit
 281:lvgl/src/lv_widgets/lv_roller.c ****  */
 282:lvgl/src/lv_widgets/lv_roller.c **** void lv_roller_set_auto_fit(lv_obj_t * roller, bool auto_fit)
 283:lvgl/src/lv_widgets/lv_roller.c **** {
 284:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 285:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 286:lvgl/src/lv_widgets/lv_roller.c ****     ext->auto_fit = auto_fit;
 287:lvgl/src/lv_widgets/lv_roller.c ****     refr_width(roller);
 288:lvgl/src/lv_widgets/lv_roller.c **** }
 289:lvgl/src/lv_widgets/lv_roller.c **** 
 290:lvgl/src/lv_widgets/lv_roller.c **** /*=====================
 291:lvgl/src/lv_widgets/lv_roller.c ****  * Getter functions
 292:lvgl/src/lv_widgets/lv_roller.c ****  *====================*/
 293:lvgl/src/lv_widgets/lv_roller.c **** 
 294:lvgl/src/lv_widgets/lv_roller.c **** /**
 295:lvgl/src/lv_widgets/lv_roller.c ****  * Get the id of the selected option
 296:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to a roller object
 297:lvgl/src/lv_widgets/lv_roller.c ****  * @return id of the selected option (0 ... number of option - 1);
 298:lvgl/src/lv_widgets/lv_roller.c ****  */
 299:lvgl/src/lv_widgets/lv_roller.c **** uint16_t lv_roller_get_selected(const lv_obj_t * roller)
 300:lvgl/src/lv_widgets/lv_roller.c **** {
 301:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 302:lvgl/src/lv_widgets/lv_roller.c **** 
 303:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 304:lvgl/src/lv_widgets/lv_roller.c ****     if(ext->mode == LV_ROLLER_MODE_INFINITE) {
 305:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t real_id_cnt = ext->option_cnt / LV_ROLLER_INF_PAGES;
 306:lvgl/src/lv_widgets/lv_roller.c ****         return ext->sel_opt_id % real_id_cnt;
 307:lvgl/src/lv_widgets/lv_roller.c ****     }
 308:lvgl/src/lv_widgets/lv_roller.c ****     else {
 309:lvgl/src/lv_widgets/lv_roller.c ****         return ext->sel_opt_id;
 310:lvgl/src/lv_widgets/lv_roller.c ****     }
 311:lvgl/src/lv_widgets/lv_roller.c **** }
 312:lvgl/src/lv_widgets/lv_roller.c **** 
 313:lvgl/src/lv_widgets/lv_roller.c **** /**
 314:lvgl/src/lv_widgets/lv_roller.c ****  * Get the current selected option as a string
 315:lvgl/src/lv_widgets/lv_roller.c ****  * @param ddlist pointer to ddlist object
ARM GAS  D:\Temp\ccqwJTgn.s 			page 7


 316:lvgl/src/lv_widgets/lv_roller.c ****  * @param buf pointer to an array to store the string
 317:lvgl/src/lv_widgets/lv_roller.c ****  * @param buf_size size of `buf` in bytes. 0: to ignore it.
 318:lvgl/src/lv_widgets/lv_roller.c ****  */
 319:lvgl/src/lv_widgets/lv_roller.c **** void lv_roller_get_selected_str(const lv_obj_t * roller, char * buf, uint32_t buf_size)
 320:lvgl/src/lv_widgets/lv_roller.c **** {
 321:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 322:lvgl/src/lv_widgets/lv_roller.c **** 
 323:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 324:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 325:lvgl/src/lv_widgets/lv_roller.c ****     uint32_t i;
 326:lvgl/src/lv_widgets/lv_roller.c ****     uint16_t line        = 0;
 327:lvgl/src/lv_widgets/lv_roller.c ****     const char * opt_txt = lv_label_get_text(label);
 328:lvgl/src/lv_widgets/lv_roller.c ****     size_t txt_len     = strlen(opt_txt);
 329:lvgl/src/lv_widgets/lv_roller.c **** 
 330:lvgl/src/lv_widgets/lv_roller.c ****     for(i = 0; i < txt_len && line != ext->sel_opt_id; i++) {
 331:lvgl/src/lv_widgets/lv_roller.c ****         if(opt_txt[i] == '\n') line++;
 332:lvgl/src/lv_widgets/lv_roller.c ****     }
 333:lvgl/src/lv_widgets/lv_roller.c **** 
 334:lvgl/src/lv_widgets/lv_roller.c ****     uint32_t c;
 335:lvgl/src/lv_widgets/lv_roller.c ****     for(c = 0; i < txt_len && opt_txt[i] != '\n'; c++, i++) {
 336:lvgl/src/lv_widgets/lv_roller.c ****         if(buf_size && c >= buf_size - 1) {
 337:lvgl/src/lv_widgets/lv_roller.c ****             LV_LOG_WARN("lv_dropdown_get_selected_str: the buffer was too small")
 338:lvgl/src/lv_widgets/lv_roller.c ****             break;
 339:lvgl/src/lv_widgets/lv_roller.c ****         }
 340:lvgl/src/lv_widgets/lv_roller.c ****         buf[c] = opt_txt[i];
 341:lvgl/src/lv_widgets/lv_roller.c ****     }
 342:lvgl/src/lv_widgets/lv_roller.c **** 
 343:lvgl/src/lv_widgets/lv_roller.c ****     buf[c] = '\0';
 344:lvgl/src/lv_widgets/lv_roller.c **** }
 345:lvgl/src/lv_widgets/lv_roller.c **** 
 346:lvgl/src/lv_widgets/lv_roller.c **** /**
 347:lvgl/src/lv_widgets/lv_roller.c ****  * Get the total number of options
 348:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to a roller object
 349:lvgl/src/lv_widgets/lv_roller.c ****  * @return the total number of options
 350:lvgl/src/lv_widgets/lv_roller.c ****  */
 351:lvgl/src/lv_widgets/lv_roller.c **** uint16_t lv_roller_get_option_cnt(const lv_obj_t * roller)
 352:lvgl/src/lv_widgets/lv_roller.c **** {
 353:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 354:lvgl/src/lv_widgets/lv_roller.c **** 
 355:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 356:lvgl/src/lv_widgets/lv_roller.c ****     if(ext->mode == LV_ROLLER_MODE_INFINITE) {
 357:lvgl/src/lv_widgets/lv_roller.c ****         return ext->option_cnt / LV_ROLLER_INF_PAGES;
 358:lvgl/src/lv_widgets/lv_roller.c ****     }
 359:lvgl/src/lv_widgets/lv_roller.c ****     else {
 360:lvgl/src/lv_widgets/lv_roller.c ****         return ext->option_cnt;
 361:lvgl/src/lv_widgets/lv_roller.c ****     }
 362:lvgl/src/lv_widgets/lv_roller.c **** }
 363:lvgl/src/lv_widgets/lv_roller.c **** 
 364:lvgl/src/lv_widgets/lv_roller.c **** /**
 365:lvgl/src/lv_widgets/lv_roller.c ****  * Get the align attribute. Default alignment after _create is LV_LABEL_ALIGN_CENTER
 366:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to a roller object
 367:lvgl/src/lv_widgets/lv_roller.c ****  * @return LV_LABEL_ALIGN_LEFT, LV_LABEL_ALIGN_RIGHT or LV_LABEL_ALIGN_CENTER
 368:lvgl/src/lv_widgets/lv_roller.c ****  */
 369:lvgl/src/lv_widgets/lv_roller.c **** lv_label_align_t lv_roller_get_align(const lv_obj_t * roller)
 370:lvgl/src/lv_widgets/lv_roller.c **** {
 371:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 372:lvgl/src/lv_widgets/lv_roller.c **** 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 8


 373:lvgl/src/lv_widgets/lv_roller.c ****     return lv_label_get_align(get_label(roller));
 374:lvgl/src/lv_widgets/lv_roller.c **** }
 375:lvgl/src/lv_widgets/lv_roller.c **** 
 376:lvgl/src/lv_widgets/lv_roller.c **** /**
 377:lvgl/src/lv_widgets/lv_roller.c ****  * Get whether the auto fit option is enabled or not.
 378:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to a roller object
 379:lvgl/src/lv_widgets/lv_roller.c ****  * @return true: auto fit is enabled
 380:lvgl/src/lv_widgets/lv_roller.c ****  */
 381:lvgl/src/lv_widgets/lv_roller.c **** bool lv_roller_get_auto_fit(lv_obj_t * roller)
 382:lvgl/src/lv_widgets/lv_roller.c **** {
 383:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 384:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 385:lvgl/src/lv_widgets/lv_roller.c ****     return ext->auto_fit ? true : false;
 386:lvgl/src/lv_widgets/lv_roller.c **** }
 387:lvgl/src/lv_widgets/lv_roller.c **** 
 388:lvgl/src/lv_widgets/lv_roller.c **** /**
 389:lvgl/src/lv_widgets/lv_roller.c ****  * Get the options of a roller
 390:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to roller object
 391:lvgl/src/lv_widgets/lv_roller.c ****  * @return the options separated by '\n'-s (E.g. "Option1\nOption2\nOption3")
 392:lvgl/src/lv_widgets/lv_roller.c ****  */
 393:lvgl/src/lv_widgets/lv_roller.c **** const char * lv_roller_get_options(const lv_obj_t * roller)
 394:lvgl/src/lv_widgets/lv_roller.c **** {
 395:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 396:lvgl/src/lv_widgets/lv_roller.c **** 
 397:lvgl/src/lv_widgets/lv_roller.c ****     return lv_label_get_text(get_label(roller));
 398:lvgl/src/lv_widgets/lv_roller.c **** }
 399:lvgl/src/lv_widgets/lv_roller.c **** 
 400:lvgl/src/lv_widgets/lv_roller.c **** /**********************
 401:lvgl/src/lv_widgets/lv_roller.c ****  *   STATIC FUNCTIONS
 402:lvgl/src/lv_widgets/lv_roller.c ****  **********************/
 403:lvgl/src/lv_widgets/lv_roller.c **** 
 404:lvgl/src/lv_widgets/lv_roller.c **** /**
 405:lvgl/src/lv_widgets/lv_roller.c ****  * Handle the drawing related tasks of the rollers
 406:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to an object
 407:lvgl/src/lv_widgets/lv_roller.c ****  * @param clip_area the object will be drawn only in this area
 408:lvgl/src/lv_widgets/lv_roller.c ****  * @param mode LV_DESIGN_COVER_CHK: only check if the object fully covers the 'mask_p' area
 409:lvgl/src/lv_widgets/lv_roller.c ****  *                                  (return 'true' if yes)
 410:lvgl/src/lv_widgets/lv_roller.c ****  *             LV_DESIGN_DRAW: draw the object (always return 'true')
 411:lvgl/src/lv_widgets/lv_roller.c ****  *             LV_DESIGN_DRAW_POST: drawing after all children are drawn
 412:lvgl/src/lv_widgets/lv_roller.c ****  * @param return an element of `lv_design_res_t`
 413:lvgl/src/lv_widgets/lv_roller.c ****  */
 414:lvgl/src/lv_widgets/lv_roller.c **** static lv_design_res_t lv_roller_design(lv_obj_t * roller, const lv_area_t * clip_area, lv_design_m
 415:lvgl/src/lv_widgets/lv_roller.c **** {
 416:lvgl/src/lv_widgets/lv_roller.c ****     if(mode == LV_DESIGN_COVER_CHK) {
 417:lvgl/src/lv_widgets/lv_roller.c ****         return LV_DESIGN_RES_NOT_COVER;
 418:lvgl/src/lv_widgets/lv_roller.c ****     }
 419:lvgl/src/lv_widgets/lv_roller.c ****     /*Draw the object*/
 420:lvgl/src/lv_widgets/lv_roller.c ****     else if(mode == LV_DESIGN_DRAW_MAIN) {
 421:lvgl/src/lv_widgets/lv_roller.c ****         draw_bg(roller, clip_area);
 422:lvgl/src/lv_widgets/lv_roller.c **** 
 423:lvgl/src/lv_widgets/lv_roller.c ****         const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
 424:lvgl/src/lv_widgets/lv_roller.c ****         lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
 425:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t font_h        = lv_font_get_line_height(font);
 426:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t rect_area;
 427:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y1 = roller->coords.y1 + lv_obj_get_height(roller) / 2 - font_h / 2 - line_space 
 428:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 429:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
ARM GAS  D:\Temp\ccqwJTgn.s 			page 9


 430:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 431:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_get_coords(roller, &roller_coords);
 432:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_get_inner_coords(roller, &roller_coords);
 433:lvgl/src/lv_widgets/lv_roller.c **** 
 434:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x1 = roller_coords.x1;
 435:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x2 = roller_coords.x2;
 436:lvgl/src/lv_widgets/lv_roller.c **** 
 437:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_rect_dsc_t sel_dsc;
 438:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_rect_dsc_init(&sel_dsc);
 439:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_init_draw_rect_dsc(roller, LV_ROLLER_PART_SELECTED, &sel_dsc);
 440:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_rect(&rect_area, clip_area, &sel_dsc);
 441:lvgl/src/lv_widgets/lv_roller.c ****     }
 442:lvgl/src/lv_widgets/lv_roller.c ****     /*Post draw when the children are drawn*/
 443:lvgl/src/lv_widgets/lv_roller.c ****     else if(mode == LV_DESIGN_DRAW_POST) {
 444:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_label_dsc_t label_dsc;
 445:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_label_dsc_init(&label_dsc);
 446:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_init_draw_label_dsc(roller, LV_ROLLER_PART_SELECTED, &label_dsc);
 447:lvgl/src/lv_widgets/lv_roller.c **** 
 448:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t bg_font_h        = lv_font_get_line_height(lv_obj_get_style_text_font(roller, LV
 449:lvgl/src/lv_widgets/lv_roller.c **** 
 450:lvgl/src/lv_widgets/lv_roller.c ****         /*Redraw the text on the selected area*/
 451:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t rect_area;
 452:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y1 = roller->coords.y1 + lv_obj_get_height(roller) / 2 - bg_font_h / 2 - label_ds
 453:lvgl/src/lv_widgets/lv_roller.c ****         if((bg_font_h & 0x1) && (label_dsc.line_space & 0x1)) rect_area.y1--; /*Compensate the two 
 454:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + bg_font_h + label_dsc.line_space - 1;
 455:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x1 = roller->coords.x1;
 456:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x2 = roller->coords.x2;
 457:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t mask_sel;
 458:lvgl/src/lv_widgets/lv_roller.c ****         bool area_ok;
 459:lvgl/src/lv_widgets/lv_roller.c ****         area_ok = _lv_area_intersect(&mask_sel, clip_area, &rect_area);
 460:lvgl/src/lv_widgets/lv_roller.c ****         if(area_ok) {
 461:lvgl/src/lv_widgets/lv_roller.c ****             lv_obj_t * label = get_label(roller);
 462:lvgl/src/lv_widgets/lv_roller.c ****             lv_label_align_t label_align = lv_roller_get_align(roller);
 463:lvgl/src/lv_widgets/lv_roller.c **** 
 464:lvgl/src/lv_widgets/lv_roller.c ****             if(LV_LABEL_ALIGN_CENTER == label_align) {
 465:lvgl/src/lv_widgets/lv_roller.c ****                 label_dsc.flag |= LV_TXT_FLAG_CENTER;
 466:lvgl/src/lv_widgets/lv_roller.c ****             }
 467:lvgl/src/lv_widgets/lv_roller.c ****             else if(LV_LABEL_ALIGN_RIGHT == label_align) {
 468:lvgl/src/lv_widgets/lv_roller.c ****                 label_dsc.flag |= LV_TXT_FLAG_RIGHT;
 469:lvgl/src/lv_widgets/lv_roller.c ****             }
 470:lvgl/src/lv_widgets/lv_roller.c **** 
 471:lvgl/src/lv_widgets/lv_roller.c ****             /*Get the size of the "selected text"*/
 472:lvgl/src/lv_widgets/lv_roller.c ****             lv_point_t res_p;
 473:lvgl/src/lv_widgets/lv_roller.c ****             _lv_txt_get_size(&res_p, lv_label_get_text(label), label_dsc.font, label_dsc.letter_spa
 474:lvgl/src/lv_widgets/lv_roller.c ****                              lv_obj_get_width(roller), LV_TXT_FLAG_EXPAND);
 475:lvgl/src/lv_widgets/lv_roller.c **** 
 476:lvgl/src/lv_widgets/lv_roller.c ****             /*Move the selected label proportionally with the background label*/
 477:lvgl/src/lv_widgets/lv_roller.c ****             lv_coord_t roller_h = lv_obj_get_height(roller);
 478:lvgl/src/lv_widgets/lv_roller.c ****             int32_t label_y_prop = label->coords.y1 - (roller_h / 2 +
 479:lvgl/src/lv_widgets/lv_roller.c ****                                                        roller->coords.y1); /*label offset from the 
 480:lvgl/src/lv_widgets/lv_roller.c ****             label_y_prop = (label_y_prop << 14) / lv_obj_get_height(
 481:lvgl/src/lv_widgets/lv_roller.c ****                                label); /*Proportional position from the middle line (upscaled)*/
 482:lvgl/src/lv_widgets/lv_roller.c **** 
 483:lvgl/src/lv_widgets/lv_roller.c ****             /*Apply a correction with different line heights*/
 484:lvgl/src/lv_widgets/lv_roller.c ****             const lv_font_t * normal_label_font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART
 485:lvgl/src/lv_widgets/lv_roller.c ****             lv_coord_t corr = (label_dsc.font->line_height - normal_label_font->line_height) / 2;
 486:lvgl/src/lv_widgets/lv_roller.c **** 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 10


 487:lvgl/src/lv_widgets/lv_roller.c ****             /*Apply the proportional position to the selected text*/
 488:lvgl/src/lv_widgets/lv_roller.c ****             res_p.y -= corr;
 489:lvgl/src/lv_widgets/lv_roller.c ****             int32_t label_sel_y = roller_h / 2 + roller->coords.y1;
 490:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_y += (label_y_prop * res_p.y) >> 14;
 491:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_y -= corr;
 492:lvgl/src/lv_widgets/lv_roller.c **** 
 493:lvgl/src/lv_widgets/lv_roller.c ****             /*Draw the selected text*/
 494:lvgl/src/lv_widgets/lv_roller.c ****             lv_area_t label_sel_area;
 495:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.x1 = label->coords.x1;
 496:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.y1 = label_sel_y;
 497:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.x2 = label->coords.x2;
 498:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.y2 = label_sel_area.y1 + res_p.y;
 499:lvgl/src/lv_widgets/lv_roller.c **** 
 500:lvgl/src/lv_widgets/lv_roller.c ****             label_dsc.flag |= LV_TXT_FLAG_EXPAND;
 501:lvgl/src/lv_widgets/lv_roller.c ****             lv_draw_label(&label_sel_area, &mask_sel, &label_dsc, lv_label_get_text(label), NULL);
 502:lvgl/src/lv_widgets/lv_roller.c ****         }
 503:lvgl/src/lv_widgets/lv_roller.c ****     }
 504:lvgl/src/lv_widgets/lv_roller.c **** 
 505:lvgl/src/lv_widgets/lv_roller.c ****     return LV_DESIGN_RES_OK;
 506:lvgl/src/lv_widgets/lv_roller.c **** }
 507:lvgl/src/lv_widgets/lv_roller.c **** 
 508:lvgl/src/lv_widgets/lv_roller.c **** /**
 509:lvgl/src/lv_widgets/lv_roller.c ****  * Handle the drawing related tasks of the roller's label
 510:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to an object
 511:lvgl/src/lv_widgets/lv_roller.c ****  * @param clip_area the object will be drawn only in this area
 512:lvgl/src/lv_widgets/lv_roller.c ****  * @param mode LV_DESIGN_COVER_CHK: only check if the object fully covers the 'mask_p' area
 513:lvgl/src/lv_widgets/lv_roller.c ****  *                                  (return 'true' if yes)
 514:lvgl/src/lv_widgets/lv_roller.c ****  *             LV_DESIGN_DRAW: draw the object (always return 'true')
 515:lvgl/src/lv_widgets/lv_roller.c ****  *             LV_DESIGN_DRAW_POST: drawing after all children are drawn
 516:lvgl/src/lv_widgets/lv_roller.c ****  * @param return an element of `lv_design_res_t`
 517:lvgl/src/lv_widgets/lv_roller.c ****  */
 518:lvgl/src/lv_widgets/lv_roller.c **** static lv_design_res_t lv_roller_label_design(lv_obj_t * label, const lv_area_t * clip_area, lv_des
 519:lvgl/src/lv_widgets/lv_roller.c **** {
 520:lvgl/src/lv_widgets/lv_roller.c ****     if(mode == LV_DESIGN_COVER_CHK) {
 521:lvgl/src/lv_widgets/lv_roller.c ****         return ancestor_label_design(label, clip_area, mode);
 522:lvgl/src/lv_widgets/lv_roller.c ****     }
 523:lvgl/src/lv_widgets/lv_roller.c ****     /*Draw the object*/
 524:lvgl/src/lv_widgets/lv_roller.c ****     else if(mode == LV_DESIGN_DRAW_MAIN) {
 525:lvgl/src/lv_widgets/lv_roller.c ****         /* Split the drawing of the label into an upper (above the selected area)
 526:lvgl/src/lv_widgets/lv_roller.c ****          * and a lower (below the selected area)*/
 527:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * roller = lv_obj_get_parent(lv_obj_get_parent(label));
 528:lvgl/src/lv_widgets/lv_roller.c ****         const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
 529:lvgl/src/lv_widgets/lv_roller.c ****         lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
 530:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t font_h        = lv_font_get_line_height(font);
 531:lvgl/src/lv_widgets/lv_roller.c **** 
 532:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t rect_area;
 533:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y1 = roller->coords.y1 + lv_obj_get_height(roller) / 2 - font_h / 2 - line_space 
 534:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 535:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 536:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 537:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_get_coords(roller, &roller_coords);
 538:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_get_inner_coords(roller, &roller_coords);
 539:lvgl/src/lv_widgets/lv_roller.c **** 
 540:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x1 = roller_coords.x1;
 541:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x2 = roller_coords.x2;
 542:lvgl/src/lv_widgets/lv_roller.c **** 
 543:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t clip2;
ARM GAS  D:\Temp\ccqwJTgn.s 			page 11


 544:lvgl/src/lv_widgets/lv_roller.c ****         clip2.x1 = label->coords.x1;
 545:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y1 = label->coords.y1;
 546:lvgl/src/lv_widgets/lv_roller.c ****         clip2.x2 = label->coords.x2;
 547:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y2 = rect_area.y1;
 548:lvgl/src/lv_widgets/lv_roller.c ****         if(_lv_area_intersect(&clip2, clip_area, &clip2)) {
 549:lvgl/src/lv_widgets/lv_roller.c ****             ancestor_label_design(label, &clip2, mode);
 550:lvgl/src/lv_widgets/lv_roller.c ****         }
 551:lvgl/src/lv_widgets/lv_roller.c **** 
 552:lvgl/src/lv_widgets/lv_roller.c ****         clip2.x1 = label->coords.x1;
 553:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y1 = rect_area.y2;
 554:lvgl/src/lv_widgets/lv_roller.c ****         clip2.x2 = label->coords.x2;
 555:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y2 = label->coords.y2;
 556:lvgl/src/lv_widgets/lv_roller.c ****         if(_lv_area_intersect(&clip2, clip_area, &clip2)) {
 557:lvgl/src/lv_widgets/lv_roller.c ****             ancestor_label_design(label, &clip2, mode);
 558:lvgl/src/lv_widgets/lv_roller.c ****         }
 559:lvgl/src/lv_widgets/lv_roller.c ****     }
 560:lvgl/src/lv_widgets/lv_roller.c **** 
 561:lvgl/src/lv_widgets/lv_roller.c ****     return LV_DESIGN_RES_OK;
 562:lvgl/src/lv_widgets/lv_roller.c **** }
 563:lvgl/src/lv_widgets/lv_roller.c **** 
 564:lvgl/src/lv_widgets/lv_roller.c **** /**
 565:lvgl/src/lv_widgets/lv_roller.c ****  * Signal function of the roller
 566:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to a roller object
 567:lvgl/src/lv_widgets/lv_roller.c ****  * @param sign a signal type from lv_signal_t enum
 568:lvgl/src/lv_widgets/lv_roller.c ****  * @param param pointer to a signal specific variable
 569:lvgl/src/lv_widgets/lv_roller.c ****  * @return LV_RES_OK: the object is not deleted in the function; LV_RES_INV: the object is deleted
 570:lvgl/src/lv_widgets/lv_roller.c ****  */
 571:lvgl/src/lv_widgets/lv_roller.c **** static lv_res_t lv_roller_signal(lv_obj_t * roller, lv_signal_t sign, void * param)
 572:lvgl/src/lv_widgets/lv_roller.c **** {
 573:lvgl/src/lv_widgets/lv_roller.c ****     lv_res_t res = LV_RES_OK;
 574:lvgl/src/lv_widgets/lv_roller.c ****     if(sign == LV_SIGNAL_GET_STYLE) {
 575:lvgl/src/lv_widgets/lv_roller.c ****         lv_get_style_info_t * info = param;
 576:lvgl/src/lv_widgets/lv_roller.c ****         info->result = lv_roller_get_style(roller, info->part);
 577:lvgl/src/lv_widgets/lv_roller.c ****         if(info->result != NULL) return LV_RES_OK;
 578:lvgl/src/lv_widgets/lv_roller.c ****         else return ancestor_signal(roller, sign, param);
 579:lvgl/src/lv_widgets/lv_roller.c ****     }
 580:lvgl/src/lv_widgets/lv_roller.c **** 
 581:lvgl/src/lv_widgets/lv_roller.c ****     /* Include the ancient signal function */
 582:lvgl/src/lv_widgets/lv_roller.c ****     if(sign != LV_SIGNAL_CONTROL) { /*Don't let the page to scroll on keys*/
 583:lvgl/src/lv_widgets/lv_roller.c ****         res = ancestor_signal(roller, sign, param);
 584:lvgl/src/lv_widgets/lv_roller.c ****         if(res != LV_RES_OK) return res;
 585:lvgl/src/lv_widgets/lv_roller.c ****     }
 586:lvgl/src/lv_widgets/lv_roller.c **** 
 587:lvgl/src/lv_widgets/lv_roller.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 588:lvgl/src/lv_widgets/lv_roller.c **** 
 589:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 590:lvgl/src/lv_widgets/lv_roller.c ****     LV_UNUSED(ext);
 591:lvgl/src/lv_widgets/lv_roller.c **** 
 592:lvgl/src/lv_widgets/lv_roller.c ****     if(sign == LV_SIGNAL_STYLE_CHG) {
 593:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * label = get_label(roller);
 594:lvgl/src/lv_widgets/lv_roller.c ****         /*Be sure the label's style is updated before processing the roller*/
 595:lvgl/src/lv_widgets/lv_roller.c ****         if(label) lv_signal_send(label, LV_SIGNAL_STYLE_CHG, NULL);
 596:lvgl/src/lv_widgets/lv_roller.c ****         refr_height(roller);
 597:lvgl/src/lv_widgets/lv_roller.c ****         refr_width(roller);
 598:lvgl/src/lv_widgets/lv_roller.c ****         refr_position(roller, false);
 599:lvgl/src/lv_widgets/lv_roller.c ****     }
 600:lvgl/src/lv_widgets/lv_roller.c ****     else if(sign == LV_SIGNAL_COORD_CHG) {
ARM GAS  D:\Temp\ccqwJTgn.s 			page 12


 601:lvgl/src/lv_widgets/lv_roller.c **** 
 602:lvgl/src/lv_widgets/lv_roller.c ****         if(lv_obj_get_width(roller) != lv_area_get_width(param) ||
 603:lvgl/src/lv_widgets/lv_roller.c ****            lv_obj_get_height(roller) != lv_area_get_height(param)) {
 604:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 605:lvgl/src/lv_widgets/lv_roller.c ****             lv_anim_del(lv_page_get_scrollable(roller), (lv_anim_exec_xcb_t)lv_obj_set_y);
 606:lvgl/src/lv_widgets/lv_roller.c **** #endif
 607:lvgl/src/lv_widgets/lv_roller.c ****             refr_position(roller, false);
 608:lvgl/src/lv_widgets/lv_roller.c ****             refr_width(roller);
 609:lvgl/src/lv_widgets/lv_roller.c ****         }
 610:lvgl/src/lv_widgets/lv_roller.c ****     }
 611:lvgl/src/lv_widgets/lv_roller.c ****     else if(sign == LV_SIGNAL_RELEASED) {
 612:lvgl/src/lv_widgets/lv_roller.c ****         release_handler(roller);
 613:lvgl/src/lv_widgets/lv_roller.c ****     }
 614:lvgl/src/lv_widgets/lv_roller.c ****     else if(sign == LV_SIGNAL_FOCUS) {
 615:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 616:lvgl/src/lv_widgets/lv_roller.c ****         lv_group_t * g             = lv_obj_get_group(roller);
 617:lvgl/src/lv_widgets/lv_roller.c ****         bool editing               = lv_group_get_editing(g);
 618:lvgl/src/lv_widgets/lv_roller.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 619:lvgl/src/lv_widgets/lv_roller.c **** 
 620:lvgl/src/lv_widgets/lv_roller.c ****         /*Encoders need special handling*/
 621:lvgl/src/lv_widgets/lv_roller.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 622:lvgl/src/lv_widgets/lv_roller.c ****             /*In navigate mode revert the original value*/
 623:lvgl/src/lv_widgets/lv_roller.c ****             if(!editing) {
 624:lvgl/src/lv_widgets/lv_roller.c ****                 if(ext->sel_opt_id != ext->sel_opt_id_ori) {
 625:lvgl/src/lv_widgets/lv_roller.c ****                     ext->sel_opt_id = ext->sel_opt_id_ori;
 626:lvgl/src/lv_widgets/lv_roller.c ****                     refr_position(roller, true);
 627:lvgl/src/lv_widgets/lv_roller.c ****                 }
 628:lvgl/src/lv_widgets/lv_roller.c ****             }
 629:lvgl/src/lv_widgets/lv_roller.c ****             /*Save the current state when entered to edit mode*/
 630:lvgl/src/lv_widgets/lv_roller.c ****             else {
 631:lvgl/src/lv_widgets/lv_roller.c ****                 ext->sel_opt_id_ori = ext->sel_opt_id;
 632:lvgl/src/lv_widgets/lv_roller.c ****             }
 633:lvgl/src/lv_widgets/lv_roller.c ****         }
 634:lvgl/src/lv_widgets/lv_roller.c ****         else {
 635:lvgl/src/lv_widgets/lv_roller.c ****             ext->sel_opt_id_ori = ext->sel_opt_id; /*Save the current value. Used to revert this st
 636:lvgl/src/lv_widgets/lv_roller.c ****                                                                     ENTER won't be pressed*/
 637:lvgl/src/lv_widgets/lv_roller.c ****         }
 638:lvgl/src/lv_widgets/lv_roller.c **** #endif
 639:lvgl/src/lv_widgets/lv_roller.c ****     }
 640:lvgl/src/lv_widgets/lv_roller.c ****     else if(sign == LV_SIGNAL_DEFOCUS) {
 641:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 642:lvgl/src/lv_widgets/lv_roller.c ****         /*Revert the original state*/
 643:lvgl/src/lv_widgets/lv_roller.c ****         if(ext->sel_opt_id != ext->sel_opt_id_ori) {
 644:lvgl/src/lv_widgets/lv_roller.c ****             ext->sel_opt_id = ext->sel_opt_id_ori;
 645:lvgl/src/lv_widgets/lv_roller.c ****             refr_position(roller, true);
 646:lvgl/src/lv_widgets/lv_roller.c ****         }
 647:lvgl/src/lv_widgets/lv_roller.c **** #endif
 648:lvgl/src/lv_widgets/lv_roller.c ****     }
 649:lvgl/src/lv_widgets/lv_roller.c ****     else if(sign == LV_SIGNAL_CONTROL) {
 650:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 651:lvgl/src/lv_widgets/lv_roller.c ****         char c = *((char *)param);
 652:lvgl/src/lv_widgets/lv_roller.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_DOWN) {
 653:lvgl/src/lv_widgets/lv_roller.c ****             if(ext->sel_opt_id + 1 < ext->option_cnt) {
 654:lvgl/src/lv_widgets/lv_roller.c ****                 uint16_t ori_id = ext->sel_opt_id_ori; /*lv_roller_set_selected will overwrite this
 655:lvgl/src/lv_widgets/lv_roller.c ****                 lv_roller_set_selected(roller, ext->sel_opt_id + 1, true);
 656:lvgl/src/lv_widgets/lv_roller.c ****                 ext->sel_opt_id_ori = ori_id;
 657:lvgl/src/lv_widgets/lv_roller.c ****             }
ARM GAS  D:\Temp\ccqwJTgn.s 			page 13


 658:lvgl/src/lv_widgets/lv_roller.c ****         }
 659:lvgl/src/lv_widgets/lv_roller.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_UP) {
 660:lvgl/src/lv_widgets/lv_roller.c ****             if(ext->sel_opt_id > 0) {
 661:lvgl/src/lv_widgets/lv_roller.c ****                 uint16_t ori_id = ext->sel_opt_id_ori; /*lv_roller_set_selected will overwrite this
 662:lvgl/src/lv_widgets/lv_roller.c **** 
 663:lvgl/src/lv_widgets/lv_roller.c ****                 lv_roller_set_selected(roller, ext->sel_opt_id - 1, true);
 664:lvgl/src/lv_widgets/lv_roller.c ****                 ext->sel_opt_id_ori = ori_id;
 665:lvgl/src/lv_widgets/lv_roller.c ****             }
 666:lvgl/src/lv_widgets/lv_roller.c ****         }
 667:lvgl/src/lv_widgets/lv_roller.c **** #endif
 668:lvgl/src/lv_widgets/lv_roller.c ****     }
 669:lvgl/src/lv_widgets/lv_roller.c ****     else if(sign == LV_SIGNAL_CLEANUP) {
 670:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_clean_style_list(roller, LV_ROLLER_PART_SELECTED);
 671:lvgl/src/lv_widgets/lv_roller.c ****     }
 672:lvgl/src/lv_widgets/lv_roller.c ****     return res;
 673:lvgl/src/lv_widgets/lv_roller.c **** }
 674:lvgl/src/lv_widgets/lv_roller.c **** 
 675:lvgl/src/lv_widgets/lv_roller.c **** /**
 676:lvgl/src/lv_widgets/lv_roller.c ****  * Get the style descriptor of a part of the object
 677:lvgl/src/lv_widgets/lv_roller.c ****  * @param page pointer the object
 678:lvgl/src/lv_widgets/lv_roller.c ****  * @param part the part from `lv_roller_part_t`. (LV_ROLLER_PART_...)
 679:lvgl/src/lv_widgets/lv_roller.c ****  * @return pointer to the style descriptor of the specified part
 680:lvgl/src/lv_widgets/lv_roller.c ****  */
 681:lvgl/src/lv_widgets/lv_roller.c **** static lv_style_list_t * lv_roller_get_style(lv_obj_t * roller, uint8_t part)
 682:lvgl/src/lv_widgets/lv_roller.c **** {
  29              		.loc 1 682 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 682 1 is_stmt 0 view .LVU1
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 0446     		mov	r4, r0
  42 0004 0D46     		mov	r5, r1
 683:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
  43              		.loc 1 683 5 is_stmt 1 view .LVU2
  44              		.loc 1 683 5 view .LVU3
  45 0006 FFF7FEFF 		bl	lv_debug_check_null
  46              	.LVL1:
  47              		.loc 1 683 5 is_stmt 0 view .LVU4
  48 000a 28B9     		cbnz	r0, .L2
  49              		.loc 1 683 5 is_stmt 1 discriminator 1 view .LVU5
  50              		.loc 1 683 5 discriminator 1 view .LVU6
  51 000c 2246     		mov	r2, r4
  52 000e 0023     		movs	r3, #0
  53 0010 0848     		ldr	r0, .L8
  54 0012 FFF7FEFF 		bl	lv_debug_log_error
  55              	.LVL2:
  56              	.L3:
  57              		.loc 1 683 5 discriminator 1 view .LVU7
  58              		.loc 1 683 5 discriminator 1 view .LVU8
  59 0016 FEE7     		b	.L3
ARM GAS  D:\Temp\ccqwJTgn.s 			page 14


  60              	.L2:
  61              		.loc 1 683 40 discriminator 2 view .LVU9
 684:lvgl/src/lv_widgets/lv_roller.c **** 
 685:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
  62              		.loc 1 685 5 discriminator 2 view .LVU10
  63              		.loc 1 685 29 is_stmt 0 discriminator 2 view .LVU11
  64 0018 2046     		mov	r0, r4
  65 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
  66              	.LVL3:
 686:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_list_t * style_dsc_p;
  67              		.loc 1 686 5 is_stmt 1 discriminator 2 view .LVU12
 687:lvgl/src/lv_widgets/lv_roller.c **** 
 688:lvgl/src/lv_widgets/lv_roller.c ****     switch(part) {
  68              		.loc 1 688 5 discriminator 2 view .LVU13
  69 001e 1DB1     		cbz	r5, .L4
  70              		.loc 1 688 5 is_stmt 0 view .LVU14
  71 0020 032D     		cmp	r5, #3
  72 0022 04D0     		beq	.L5
 689:lvgl/src/lv_widgets/lv_roller.c ****         case LV_ROLLER_PART_BG:
 690:lvgl/src/lv_widgets/lv_roller.c ****             style_dsc_p = &roller->style_list;
 691:lvgl/src/lv_widgets/lv_roller.c ****             break;
 692:lvgl/src/lv_widgets/lv_roller.c ****         case LV_ROLLER_PART_SELECTED:
 693:lvgl/src/lv_widgets/lv_roller.c ****             style_dsc_p = &ext->style_sel;
 694:lvgl/src/lv_widgets/lv_roller.c ****             break;
 695:lvgl/src/lv_widgets/lv_roller.c ****         default:
 696:lvgl/src/lv_widgets/lv_roller.c ****             style_dsc_p = NULL;
  73              		.loc 1 696 25 view .LVU15
  74 0024 0020     		movs	r0, #0
  75              	.LVL4:
  76              	.L1:
 697:lvgl/src/lv_widgets/lv_roller.c ****     }
 698:lvgl/src/lv_widgets/lv_roller.c **** 
 699:lvgl/src/lv_widgets/lv_roller.c ****     return style_dsc_p;
 700:lvgl/src/lv_widgets/lv_roller.c **** }
  77              		.loc 1 700 1 view .LVU16
  78 0026 38BD     		pop	{r3, r4, r5, pc}
  79              	.LVL5:
  80              	.L4:
 690:lvgl/src/lv_widgets/lv_roller.c ****             break;
  81              		.loc 1 690 13 is_stmt 1 view .LVU17
 690:lvgl/src/lv_widgets/lv_roller.c ****             break;
  82              		.loc 1 690 25 is_stmt 0 view .LVU18
  83 0028 04F12800 		add	r0, r4, #40
  84              	.LVL6:
 691:lvgl/src/lv_widgets/lv_roller.c ****         case LV_ROLLER_PART_SELECTED:
  85              		.loc 1 691 13 is_stmt 1 view .LVU19
  86 002c FBE7     		b	.L1
  87              	.LVL7:
  88              	.L5:
 693:lvgl/src/lv_widgets/lv_roller.c ****             break;
  89              		.loc 1 693 13 view .LVU20
 693:lvgl/src/lv_widgets/lv_roller.c ****             break;
  90              		.loc 1 693 25 is_stmt 0 view .LVU21
  91 002e 4030     		adds	r0, r0, #64
  92              	.LVL8:
 694:lvgl/src/lv_widgets/lv_roller.c ****         default:
  93              		.loc 1 694 13 is_stmt 1 view .LVU22
ARM GAS  D:\Temp\ccqwJTgn.s 			page 15


 699:lvgl/src/lv_widgets/lv_roller.c **** }
  94              		.loc 1 699 5 view .LVU23
 699:lvgl/src/lv_widgets/lv_roller.c **** }
  95              		.loc 1 699 12 is_stmt 0 view .LVU24
  96 0030 F9E7     		b	.L1
  97              	.L9:
  98 0032 00BF     		.align	2
  99              	.L8:
 100 0034 00000000 		.word	.LC0
 101              		.cfi_endproc
 102              	.LFE490:
 104              		.section	.text.lv_roller_label_design,"ax",%progbits
 105              		.align	1
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.fpu fpv4-sp-d16
 111              	lv_roller_label_design:
 112              	.LVL9:
 113              	.LFB488:
 519:lvgl/src/lv_widgets/lv_roller.c ****     if(mode == LV_DESIGN_COVER_CHK) {
 114              		.loc 1 519 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 24
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 519:lvgl/src/lv_widgets/lv_roller.c ****     if(mode == LV_DESIGN_COVER_CHK) {
 118              		.loc 1 519 1 is_stmt 0 view .LVU26
 119 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 120              	.LCFI1:
 121              		.cfi_def_cfa_offset 32
 122              		.cfi_offset 4, -32
 123              		.cfi_offset 5, -28
 124              		.cfi_offset 6, -24
 125              		.cfi_offset 7, -20
 126              		.cfi_offset 8, -16
 127              		.cfi_offset 9, -12
 128              		.cfi_offset 10, -8
 129              		.cfi_offset 14, -4
 130 0004 86B0     		sub	sp, sp, #24
 131              	.LCFI2:
 132              		.cfi_def_cfa_offset 56
 133 0006 0546     		mov	r5, r0
 134 0008 0F46     		mov	r7, r1
 135 000a 1646     		mov	r6, r2
 520:lvgl/src/lv_widgets/lv_roller.c ****         return ancestor_label_design(label, clip_area, mode);
 136              		.loc 1 520 5 is_stmt 1 view .LVU27
 520:lvgl/src/lv_widgets/lv_roller.c ****         return ancestor_label_design(label, clip_area, mode);
 137              		.loc 1 520 7 is_stmt 0 view .LVU28
 138 000c 022A     		cmp	r2, #2
 139 000e 04D0     		beq	.L18
 524:lvgl/src/lv_widgets/lv_roller.c ****         /* Split the drawing of the label into an upper (above the selected area)
 140              		.loc 1 524 10 is_stmt 1 view .LVU29
 524:lvgl/src/lv_widgets/lv_roller.c ****         /* Split the drawing of the label into an upper (above the selected area)
 141              		.loc 1 524 12 is_stmt 0 view .LVU30
 142 0010 3AB1     		cbz	r2, .L19
 561:lvgl/src/lv_widgets/lv_roller.c **** }
 143              		.loc 1 561 12 view .LVU31
ARM GAS  D:\Temp\ccqwJTgn.s 			page 16


 144 0012 0020     		movs	r0, #0
 145              	.LVL10:
 146              	.L12:
 562:lvgl/src/lv_widgets/lv_roller.c **** 
 147              		.loc 1 562 1 view .LVU32
 148 0014 06B0     		add	sp, sp, #24
 149              	.LCFI3:
 150              		.cfi_remember_state
 151              		.cfi_def_cfa_offset 32
 152              		@ sp needed
 153 0016 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 154              	.LVL11:
 155              	.L18:
 156              	.LCFI4:
 157              		.cfi_restore_state
 521:lvgl/src/lv_widgets/lv_roller.c ****     }
 158              		.loc 1 521 9 is_stmt 1 view .LVU33
 521:lvgl/src/lv_widgets/lv_roller.c ****     }
 159              		.loc 1 521 16 is_stmt 0 view .LVU34
 160 001a 3F4B     		ldr	r3, .L20
 161 001c 1B68     		ldr	r3, [r3]
 162 001e 9847     		blx	r3
 163              	.LVL12:
 521:lvgl/src/lv_widgets/lv_roller.c ****     }
 164              		.loc 1 521 16 view .LVU35
 165 0020 F8E7     		b	.L12
 166              	.LVL13:
 167              	.L19:
 168              	.LBB103:
 527:lvgl/src/lv_widgets/lv_roller.c ****         const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
 169              		.loc 1 527 9 is_stmt 1 view .LVU36
 527:lvgl/src/lv_widgets/lv_roller.c ****         const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
 170              		.loc 1 527 47 is_stmt 0 view .LVU37
 171 0022 FFF7FEFF 		bl	lv_obj_get_parent
 172              	.LVL14:
 527:lvgl/src/lv_widgets/lv_roller.c ****         const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
 173              		.loc 1 527 29 view .LVU38
 174 0026 FFF7FEFF 		bl	lv_obj_get_parent
 175              	.LVL15:
 176 002a 8046     		mov	r8, r0
 177              	.LVL16:
 528:lvgl/src/lv_widgets/lv_roller.c ****         lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
 178              		.loc 1 528 9 is_stmt 1 view .LVU39
 179              	.LBB104:
 180              	.LBI104:
 181              		.file 2 "lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h"
   1:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   2:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
   3:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * @file lv_obj_style_dec.h
   4:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
   5:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
   6:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   7:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifndef LV_OBJ_STYLE_DEC_H
   8:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define LV_OBJ_STYLE_DEC_H
   9:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  10:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifdef __cplusplus
  11:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** extern "C" {
ARM GAS  D:\Temp\ccqwJTgn.s 			page 17


  12:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #endif
  13:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  14:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /*********************
  15:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      DEFINES
  16:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *********************/
  17:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  18:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
  19:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Macro to declare the most important style set/get API functions.
  20:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  21:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value of a style property from an object in the object's current state
  22:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -----------------------------------------------------------------------------
  23:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Get the value of a style property from an object in the object's current state.
  24:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Transition animation is taken into account.
  25:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not set in the object's styles check the parent(s) if the property can be 
  26:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If still not found return a default value.
  27:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  28:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t w = lv_obj_get_style_border_width(btn1, LV_BTN_PART_MAIN);`
  29:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  30:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a local style property for an object in a given state
  31:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------------------------
  32:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  33:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_set_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, 2);`
  34:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  35:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get a local style property's value of an object in a given state
  36:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ----------------------------------------------------------------
  37:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Return the best matching property in the given state.
  38:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - E.g. if `state` parameter is LV_STATE_PRESSED | LV_STATE_CHECKED` but the property defined on
  39:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    `LV_STATE_PRESSED` and `LV_STATE_DEFAULT` the best matching state is `LV_STATE_PRESSED`
  40:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    (because it has higher precedence) and it will be returned.
  41:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not found even in `LV_STATE_DEFAULT` `-1` is returned.
  42:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  43:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `//Type of result should be lv_style_int_t/lv_opa_t/lv_color_t/const void * according to th
  44:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t result;`
  45:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_get_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, &result);`
  46:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  47:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  48:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value from a style in a given state
  49:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -------------------------------------------
  50:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - The same rules applies to the return value then for "lv_obj_get_style_local_...()" above
  51:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  52:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `int16_t weight = lv_style_get_border_width(&style1, LV_STATE_PRESSED, &result);`
  53:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  54:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  55:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a value in a style in a given state
  56:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------
  57:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  58:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_set_border_width(&style1, LV_STATE_PRESSED, 2);`
  59:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
  60:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  61:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  62:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  63:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  64:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return (value_type) _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);       
  65:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  66:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  67:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  68:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
ARM GAS  D:\Temp\ccqwJTgn.s 			page 18


  69:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  70:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);                    
  71:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  72:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  73:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_scalar(prop_name, func_name, value_type, style_type)                  
  74:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  75:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  76:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  77:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  78:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  79:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_nonscalar(prop_name, func_name, value_type, style_type)               
  80:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  81:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  82:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  83:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  84:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  85:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  86:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  87:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  88:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  89:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  90:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  91:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  92:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  93:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  94:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  95:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  96:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  97:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _LV_OBJ_STYLE_SET_GET_DECLARE(prop_name, func_name, value_type, style_type, scalar)        
  98:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_GET_STYLE_##scalar(prop_name, func_name, value_type, style_type)                          
  99:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_LOCAL_##scalar(prop_name, func_name, value_type, style_type)                    
 100:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_##scalar(prop_name, func_name, value_type, style_type)
 101:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
 102:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(RADIUS, radius, lv_style_int_t, _int, scalar)
 103:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 104:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 105:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_WIDTH, transform_width, lv_style_int_t, _int, scalar)
 106:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_HEIGHT, transform_height, lv_style_int_t, _int, scalar)
 107:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ANGLE, transform_angle, lv_style_int_t, _int, scalar)
 108:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ZOOM, transform_zoom, lv_style_int_t, _int, scalar)
 109:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OPA_SCALE, opa_scale, lv_opa_t, _opa, scalar)
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_TOP, pad_top, lv_style_int_t, _int, scalar)
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 114:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 115:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 116:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_BOTTOM, margin_bottom, lv_style_int_t, _int, scalar)
 117:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_LEFT, margin_left, lv_style_int_t, _int, scalar)
 118:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_RIGHT, margin_right, lv_style_int_t, _int, scalar)
 119:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_BLEND_MODE, bg_blend_mode, lv_blend_mode_t, _int, scalar)
 120:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_MAIN_STOP, bg_main_stop, lv_style_int_t, _int, scalar)
 121:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_STOP, bg_grad_stop, lv_style_int_t, _int, scalar)
 122:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_DIR, bg_grad_dir, lv_grad_dir_t, _int, scalar)
 123:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_COLOR, bg_color, lv_color_t, _color, nonscalar)
 124:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_COLOR, bg_grad_color, lv_color_t, _color, nonscalar)
 125:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_OPA, bg_opa, lv_opa_t, _opa, scalar)
ARM GAS  D:\Temp\ccqwJTgn.s 			page 19


 126:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_WIDTH, border_width, lv_style_int_t, _int, scalar)
 127:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_SIDE, border_side, lv_border_side_t, _int, scalar)
 128:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_BLEND_MODE, border_blend_mode, lv_blend_mode_t, _int, scalar)
 129:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_POST, border_post, bool, _int, scalar)
 130:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_COLOR, border_color, lv_color_t, _color, nonscalar)
 131:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_OPA, border_opa, lv_opa_t, _opa, scalar)
 132:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_WIDTH, outline_width, lv_style_int_t, _int, scalar)
 133:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_PAD, outline_pad, lv_style_int_t, _int, scalar)
 134:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_BLEND_MODE, outline_blend_mode, lv_blend_mode_t, _int, scalar
 135:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_COLOR, outline_color, lv_color_t, _color, nonscalar)
 136:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_OPA, outline_opa, lv_opa_t, _opa, scalar)
 137:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_WIDTH, shadow_width, lv_style_int_t, _int, scalar)
 138:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_X, shadow_ofs_x, lv_style_int_t, _int, scalar)
 139:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_Y, shadow_ofs_y, lv_style_int_t, _int, scalar)
 140:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_SPREAD, shadow_spread, lv_style_int_t, _int, scalar)
 141:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_BLEND_MODE, shadow_blend_mode, lv_blend_mode_t, _int, scalar)
 142:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_COLOR, shadow_color, lv_color_t, _color, nonscalar)
 143:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OPA, shadow_opa, lv_opa_t, _opa, scalar)
 144:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_REPEAT, pattern_repeat, bool, _int, scalar)
 145:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_BLEND_MODE, pattern_blend_mode, lv_blend_mode_t, _int, scalar
 146:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR, pattern_recolor, lv_color_t, _color, nonscalar)
 147:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_OPA, pattern_opa, lv_opa_t, _opa, scalar)
 148:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR_OPA, pattern_recolor_opa, lv_opa_t, _opa, scalar)
 149:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_IMAGE, pattern_image, const void *, _ptr, scalar)
 150:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LETTER_SPACE, value_letter_space, lv_style_int_t, _int, scalar)
 151:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LINE_SPACE, value_line_space, lv_style_int_t, _int, scalar)
 152:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_BLEND_MODE, value_blend_mode, lv_blend_mode_t, _int, scalar)
 153:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_X, value_ofs_x, lv_style_int_t, _int, scalar)
 154:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_Y, value_ofs_y, lv_style_int_t, _int, scalar)
 155:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_ALIGN, value_align, lv_align_t, _int, scalar)
 156:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_COLOR, value_color, lv_color_t, _color, nonscalar)
 157:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OPA, value_opa, lv_opa_t, _opa, scalar)
 158:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_FONT, value_font, const lv_font_t *, _ptr, scalar)
 159:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_STR, value_str, const char *, _ptr, scalar)
 160:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LETTER_SPACE, text_letter_space, lv_style_int_t, _int, scalar)
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LINE_SPACE, text_line_space, lv_style_int_t, _int, scalar)
 162:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 163:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_BLEND_MODE, text_blend_mode, lv_blend_mode_t, _int, scalar)
 164:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_COLOR, text_color, lv_color_t, _color, nonscalar)
 165:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_SEL_COLOR, text_sel_color, lv_color_t, _color, nonscalar)
 166:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_SEL_BG_COLOR, text_sel_bg_color, lv_color_t, _color, nonscalar)
 167:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_OPA, text_opa, lv_opa_t, _opa, scalar)
 168:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_FONT, text_font, const lv_font_t *, _ptr, scalar)
 182              		.loc 2 168 1 view .LVU40
 183              	.LBB105:
 184              		.loc 2 168 1 view .LVU41
 185 002c 48F28E02 		movw	r2, #32910
 186 0030 0021     		movs	r1, #0
 187 0032 FFF7FEFF 		bl	_lv_obj_get_style_ptr
 188              	.LVL17:
 189              		.loc 2 168 1 is_stmt 0 view .LVU42
 190 0036 0446     		mov	r4, r0
 191              	.LVL18:
 192              		.loc 2 168 1 view .LVU43
 193              	.LBE105:
 194              	.LBE104:
 529:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t font_h        = lv_font_get_line_height(font);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 20


 195              		.loc 1 529 9 is_stmt 1 view .LVU44
 196              	.LBB106:
 197              	.LBI106:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 198              		.loc 2 161 1 view .LVU45
 199              	.LBB107:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 200              		.loc 2 161 1 view .LVU46
 201 0038 48F28102 		movw	r2, #32897
 202 003c 0021     		movs	r1, #0
 203 003e 4046     		mov	r0, r8
 204              	.LVL19:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 205              		.loc 2 161 1 is_stmt 0 view .LVU47
 206 0040 FFF7FEFF 		bl	_lv_obj_get_style_int
 207              	.LVL20:
 208 0044 8246     		mov	r10, r0
 209              	.LVL21:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 210              		.loc 2 161 1 view .LVU48
 211              	.LBE107:
 212              	.LBE106:
 530:lvgl/src/lv_widgets/lv_roller.c **** 
 213              		.loc 1 530 9 is_stmt 1 view .LVU49
 214              	.LBB108:
 215              	.LBI108:
 216              		.file 3 "lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h"
   1:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
   2:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @file lv_font.h
   3:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *
   4:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
   5:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
   6:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #ifndef LV_FONT_H
   7:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #define LV_FONT_H
   8:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
   9:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** extern "C" {
  11:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #endif
  12:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  13:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /*********************
  14:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *********************/
  16:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include <stdint.h>
  18:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include <stddef.h>
  19:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include <stdbool.h>
  20:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  21:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include "lv_symbol_def.h"
  22:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #include "../lv_misc/lv_area.h"
  23:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  24:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /*********************
  25:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *      DEFINES
  26:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *********************/
  27:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  28:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**********************
  29:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *      TYPEDEFS
  30:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  **********************/
ARM GAS  D:\Temp\ccqwJTgn.s 			page 21


  31:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  32:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /*------------------
  33:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * General types
  34:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *-----------------*/
  35:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  36:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /** Describes the properties of a glyph. */
  37:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** typedef struct {
  38:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint16_t adv_w; /**< The glyph needs this space. Draw the next glyph after this width. 8 bit in
  39:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint16_t box_w;  /**< Width of the glyph's bounding box*/
  40:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint16_t box_h;  /**< Height of the glyph's bounding box*/
  41:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int16_t ofs_x;   /**< x offset of the bounding box*/
  42:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int16_t ofs_y;  /**< y offset of the bounding box*/
  43:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint8_t bpp;   /**< Bit-per-pixel: 1, 2, 4, 8*/
  44:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** } lv_font_glyph_dsc_t;
  45:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  46:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /** The bitmaps might be upscaled by 3 to achieve subpixel rendering. */
  47:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** enum {
  48:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_NONE,
  49:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_HOR,
  50:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_VER,
  51:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     LV_FONT_SUBPX_BOTH,
  52:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** };
  53:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  54:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** typedef uint8_t lv_font_subpx_t;
  55:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  56:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /** Describe the properties of a font*/
  57:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** typedef struct _lv_font_struct {
  58:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     /** Get a glyph's descriptor from a font*/
  59:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     bool (*get_glyph_dsc)(const struct _lv_font_struct *, lv_font_glyph_dsc_t *, uint32_t letter, u
  60:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  61:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     /** Get a glyph's bitmap from a font*/
  62:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     const uint8_t * (*get_glyph_bitmap)(const struct _lv_font_struct *, uint32_t);
  63:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  64:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     /*Pointer to the font in a font pack (must have the same line height)*/
  65:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     lv_coord_t line_height;         /**< The real line height where any text fits*/
  66:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     lv_coord_t base_line;           /**< Base line measured from the top of the line_height*/
  67:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     uint8_t subpx  : 2;             /**< An element of `lv_font_subpx_t`*/
  68:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  69:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int8_t underline_position;      /**< Distance between the top of the underline and base line (<
  70:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     int8_t underline_thickness;     /**< Thickness of the underline*/
  71:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  72:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     void * dsc;                     /**< Store implementation specific or run_time data or caching 
  73:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #if LV_USE_USER_DATA
  74:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     lv_font_user_data_t user_data;  /**< Custom user data for font. */
  75:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** #endif
  76:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  77:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** } lv_font_t;
  78:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  79:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**********************
  80:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * GLOBAL PROTOTYPES
  81:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  **********************/
  82:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  83:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
  84:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Return with the bitmap of a font.
  85:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font_p pointer to a font
  86:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter an UNICODE character code
  87:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return pointer to the bitmap of the letter
ARM GAS  D:\Temp\ccqwJTgn.s 			page 22


  88:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
  89:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** const uint8_t * lv_font_get_glyph_bitmap(const lv_font_t * font_p, uint32_t letter);
  90:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
  91:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
  92:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Get the descriptor of a glyph
  93:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font_p pointer to font
  94:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param dsc_out store the result descriptor here
  95:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter an UNICODE letter code
  96:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return true: descriptor is successfully loaded into `dsc_out`.
  97:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  *         false: the letter was not found, no data is loaded to `dsc_out`
  98:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
  99:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** bool lv_font_get_glyph_dsc(const lv_font_t * font_p, lv_font_glyph_dsc_t * dsc_out, uint32_t letter
 100:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****                            uint32_t letter_next);
 101:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
 102:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
 103:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Get the width of a glyph with kerning
 104:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font pointer to a font
 105:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter an UNICODE letter
 106:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param letter_next the next letter after `letter`. Used for kerning
 107:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return the width of the glyph
 108:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
 109:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** uint16_t lv_font_get_glyph_width(const lv_font_t * font, uint32_t letter, uint32_t letter_next);
 110:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** 
 111:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** /**
 112:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * Get the line height of a font. All characters fit into this height
 113:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @param font_p pointer to a font
 114:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  * @return the height of a font
 115:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****  */
 116:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** static inline lv_coord_t lv_font_get_line_height(const lv_font_t * font_p)
 217              		.loc 3 116 26 view .LVU50
 218              	.LBB109:
 117:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** {
 118:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h ****     return font_p->line_height;
 219              		.loc 3 118 5 view .LVU51
 220              		.loc 3 118 18 is_stmt 0 view .LVU52
 221 0046 B4F90840 		ldrsh	r4, [r4, #8]
 222              	.LVL22:
 223              		.loc 3 118 18 view .LVU53
 224              	.LBE109:
 225              	.LBE108:
 532:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y1 = roller->coords.y1 + lv_obj_get_height(roller) / 2 - font_h / 2 - line_space 
 226              		.loc 1 532 9 is_stmt 1 view .LVU54
 533:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 227              		.loc 1 533 9 view .LVU55
 533:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 228              		.loc 1 533 38 is_stmt 0 view .LVU56
 229 004a B8F81290 		ldrh	r9, [r8, #18]
 533:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 230              		.loc 1 533 44 view .LVU57
 231 004e 4046     		mov	r0, r8
 232 0050 FFF7FEFF 		bl	lv_obj_get_height
 233              	.LVL23:
 533:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 234              		.loc 1 533 42 view .LVU58
 235 0054 00EBD070 		add	r0, r0, r0, lsr #31
 236 0058 09EB6003 		add	r3, r9, r0, asr #1
 237 005c 9BB2     		uxth	r3, r3
ARM GAS  D:\Temp\ccqwJTgn.s 			page 23


 533:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 238              		.loc 1 533 74 view .LVU59
 239 005e 04EBD479 		add	r9, r4, r4, lsr #31
 240 0062 A3EB6903 		sub	r3, r3, r9, asr #1
 241 0066 9BB2     		uxth	r3, r3
 533:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 242              		.loc 1 533 87 view .LVU60
 243 0068 0AEBDA72 		add	r2, r10, r10, lsr #31
 244 006c A3EB6203 		sub	r3, r3, r2, asr #1
 245 0070 9BB2     		uxth	r3, r3
 533:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 246              		.loc 1 533 22 view .LVU61
 247 0072 ADF80230 		strh	r3, [sp, #2]	@ movhi
 534:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 248              		.loc 1 534 9 is_stmt 1 view .LVU62
 534:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 249              		.loc 1 534 20 is_stmt 0 view .LVU63
 250 0076 A4B2     		uxth	r4, r4
 534:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 251              		.loc 1 534 11 view .LVU64
 252 0078 14F0010F 		tst	r4, #1
 253 007c 05D0     		beq	.L13
 534:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 254              		.loc 1 534 27 discriminator 1 view .LVU65
 255 007e 1AF0010F 		tst	r10, #1
 256 0082 02D0     		beq	.L13
 534:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 257              		.loc 1 534 50 is_stmt 1 discriminator 2 view .LVU66
 534:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 258              		.loc 1 534 62 is_stmt 0 discriminator 2 view .LVU67
 259 0084 013B     		subs	r3, r3, #1
 260 0086 ADF80230 		strh	r3, [sp, #2]	@ movhi
 261              	.L13:
 535:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 262              		.loc 1 535 9 is_stmt 1 view .LVU68
 535:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 263              		.loc 1 535 33 is_stmt 0 view .LVU69
 264 008a BDF90290 		ldrsh	r9, [sp, #2]
 535:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 265              		.loc 1 535 37 view .LVU70
 266 008e 14FA89F4 		uxtah	r4, r4, r9
 267              	.LVL24:
 535:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 268              		.loc 1 535 46 view .LVU71
 269 0092 1AFA84F4 		uxtah	r4, r10, r4
 270 0096 A4B2     		uxth	r4, r4
 535:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 271              		.loc 1 535 59 view .LVU72
 272 0098 013C     		subs	r4, r4, #1
 273 009a 24B2     		sxth	r4, r4
 536:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_get_coords(roller, &roller_coords);
 274              		.loc 1 536 9 is_stmt 1 view .LVU73
 537:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_get_inner_coords(roller, &roller_coords);
 275              		.loc 1 537 9 view .LVU74
 276 009c 02A9     		add	r1, sp, #8
 277 009e 4046     		mov	r0, r8
 278 00a0 FFF7FEFF 		bl	lv_obj_get_coords
ARM GAS  D:\Temp\ccqwJTgn.s 			page 24


 279              	.LVL25:
 538:lvgl/src/lv_widgets/lv_roller.c **** 
 280              		.loc 1 538 9 view .LVU75
 281 00a4 02A9     		add	r1, sp, #8
 282 00a6 4046     		mov	r0, r8
 283 00a8 FFF7FEFF 		bl	lv_obj_get_inner_coords
 284              	.LVL26:
 540:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x2 = roller_coords.x2;
 285              		.loc 1 540 9 view .LVU76
 541:lvgl/src/lv_widgets/lv_roller.c **** 
 286              		.loc 1 541 9 view .LVU77
 543:lvgl/src/lv_widgets/lv_roller.c ****         clip2.x1 = label->coords.x1;
 287              		.loc 1 543 9 view .LVU78
 544:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y1 = label->coords.y1;
 288              		.loc 1 544 9 view .LVU79
 544:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y1 = label->coords.y1;
 289              		.loc 1 544 33 is_stmt 0 view .LVU80
 290 00ac B5F91030 		ldrsh	r3, [r5, #16]
 544:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y1 = label->coords.y1;
 291              		.loc 1 544 18 view .LVU81
 292 00b0 ADF81030 		strh	r3, [sp, #16]	@ movhi
 545:lvgl/src/lv_widgets/lv_roller.c ****         clip2.x2 = label->coords.x2;
 293              		.loc 1 545 9 is_stmt 1 view .LVU82
 545:lvgl/src/lv_widgets/lv_roller.c ****         clip2.x2 = label->coords.x2;
 294              		.loc 1 545 33 is_stmt 0 view .LVU83
 295 00b4 B5F91230 		ldrsh	r3, [r5, #18]
 545:lvgl/src/lv_widgets/lv_roller.c ****         clip2.x2 = label->coords.x2;
 296              		.loc 1 545 18 view .LVU84
 297 00b8 ADF81230 		strh	r3, [sp, #18]	@ movhi
 546:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y2 = rect_area.y1;
 298              		.loc 1 546 9 is_stmt 1 view .LVU85
 546:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y2 = rect_area.y1;
 299              		.loc 1 546 33 is_stmt 0 view .LVU86
 300 00bc B5F91430 		ldrsh	r3, [r5, #20]
 546:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y2 = rect_area.y1;
 301              		.loc 1 546 18 view .LVU87
 302 00c0 ADF81430 		strh	r3, [sp, #20]	@ movhi
 547:lvgl/src/lv_widgets/lv_roller.c ****         if(_lv_area_intersect(&clip2, clip_area, &clip2)) {
 303              		.loc 1 547 9 is_stmt 1 view .LVU88
 547:lvgl/src/lv_widgets/lv_roller.c ****         if(_lv_area_intersect(&clip2, clip_area, &clip2)) {
 304              		.loc 1 547 18 is_stmt 0 view .LVU89
 305 00c4 ADF81690 		strh	r9, [sp, #22]	@ movhi
 548:lvgl/src/lv_widgets/lv_roller.c ****             ancestor_label_design(label, &clip2, mode);
 306              		.loc 1 548 9 is_stmt 1 view .LVU90
 548:lvgl/src/lv_widgets/lv_roller.c ****             ancestor_label_design(label, &clip2, mode);
 307              		.loc 1 548 12 is_stmt 0 view .LVU91
 308 00c8 04AA     		add	r2, sp, #16
 309 00ca 3946     		mov	r1, r7
 310 00cc 1046     		mov	r0, r2
 311 00ce FFF7FEFF 		bl	_lv_area_intersect
 312              	.LVL27:
 548:lvgl/src/lv_widgets/lv_roller.c ****             ancestor_label_design(label, &clip2, mode);
 313              		.loc 1 548 11 view .LVU92
 314 00d2 28B1     		cbz	r0, .L14
 549:lvgl/src/lv_widgets/lv_roller.c ****         }
 315              		.loc 1 549 13 is_stmt 1 view .LVU93
 316 00d4 104B     		ldr	r3, .L20
ARM GAS  D:\Temp\ccqwJTgn.s 			page 25


 317 00d6 1B68     		ldr	r3, [r3]
 318 00d8 3246     		mov	r2, r6
 319 00da 04A9     		add	r1, sp, #16
 320 00dc 2846     		mov	r0, r5
 321 00de 9847     		blx	r3
 322              	.LVL28:
 323              	.L14:
 552:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y1 = rect_area.y2;
 324              		.loc 1 552 9 view .LVU94
 552:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y1 = rect_area.y2;
 325              		.loc 1 552 33 is_stmt 0 view .LVU95
 326 00e0 B5F91030 		ldrsh	r3, [r5, #16]
 552:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y1 = rect_area.y2;
 327              		.loc 1 552 18 view .LVU96
 328 00e4 ADF81030 		strh	r3, [sp, #16]	@ movhi
 553:lvgl/src/lv_widgets/lv_roller.c ****         clip2.x2 = label->coords.x2;
 329              		.loc 1 553 9 is_stmt 1 view .LVU97
 553:lvgl/src/lv_widgets/lv_roller.c ****         clip2.x2 = label->coords.x2;
 330              		.loc 1 553 18 is_stmt 0 view .LVU98
 331 00e8 ADF81240 		strh	r4, [sp, #18]	@ movhi
 554:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y2 = label->coords.y2;
 332              		.loc 1 554 9 is_stmt 1 view .LVU99
 554:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y2 = label->coords.y2;
 333              		.loc 1 554 33 is_stmt 0 view .LVU100
 334 00ec B5F91430 		ldrsh	r3, [r5, #20]
 554:lvgl/src/lv_widgets/lv_roller.c ****         clip2.y2 = label->coords.y2;
 335              		.loc 1 554 18 view .LVU101
 336 00f0 ADF81430 		strh	r3, [sp, #20]	@ movhi
 555:lvgl/src/lv_widgets/lv_roller.c ****         if(_lv_area_intersect(&clip2, clip_area, &clip2)) {
 337              		.loc 1 555 9 is_stmt 1 view .LVU102
 555:lvgl/src/lv_widgets/lv_roller.c ****         if(_lv_area_intersect(&clip2, clip_area, &clip2)) {
 338              		.loc 1 555 33 is_stmt 0 view .LVU103
 339 00f4 B5F91630 		ldrsh	r3, [r5, #22]
 555:lvgl/src/lv_widgets/lv_roller.c ****         if(_lv_area_intersect(&clip2, clip_area, &clip2)) {
 340              		.loc 1 555 18 view .LVU104
 341 00f8 ADF81630 		strh	r3, [sp, #22]	@ movhi
 556:lvgl/src/lv_widgets/lv_roller.c ****             ancestor_label_design(label, &clip2, mode);
 342              		.loc 1 556 9 is_stmt 1 view .LVU105
 556:lvgl/src/lv_widgets/lv_roller.c ****             ancestor_label_design(label, &clip2, mode);
 343              		.loc 1 556 12 is_stmt 0 view .LVU106
 344 00fc 04AA     		add	r2, sp, #16
 345 00fe 3946     		mov	r1, r7
 346 0100 1046     		mov	r0, r2
 347 0102 FFF7FEFF 		bl	_lv_area_intersect
 348              	.LVL29:
 556:lvgl/src/lv_widgets/lv_roller.c ****             ancestor_label_design(label, &clip2, mode);
 349              		.loc 1 556 11 view .LVU107
 350 0106 28B1     		cbz	r0, .L15
 557:lvgl/src/lv_widgets/lv_roller.c ****         }
 351              		.loc 1 557 13 is_stmt 1 view .LVU108
 352 0108 034B     		ldr	r3, .L20
 353 010a 1B68     		ldr	r3, [r3]
 354 010c 3246     		mov	r2, r6
 355 010e 04A9     		add	r1, sp, #16
 356 0110 2846     		mov	r0, r5
 357 0112 9847     		blx	r3
 358              	.LVL30:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 26


 359              	.L15:
 360              	.LBE103:
 561:lvgl/src/lv_widgets/lv_roller.c **** }
 361              		.loc 1 561 12 is_stmt 0 view .LVU109
 362 0114 0020     		movs	r0, #0
 363 0116 7DE7     		b	.L12
 364              	.L21:
 365              		.align	2
 366              	.L20:
 367 0118 00000000 		.word	.LANCHOR0
 368              		.cfi_endproc
 369              	.LFE488:
 371              		.section	.text.draw_bg,"ax",%progbits
 372              		.align	1
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	draw_bg:
 379              	.LVL31:
 380              	.LFB492:
 701:lvgl/src/lv_widgets/lv_roller.c **** 
 702:lvgl/src/lv_widgets/lv_roller.c **** /**
 703:lvgl/src/lv_widgets/lv_roller.c ****  * Signal function of the scrollable part of the roller.
 704:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller_scrl pointer to the scrollable part of roller (page)
 705:lvgl/src/lv_widgets/lv_roller.c ****  * @param sign a signal type from lv_signal_t enum
 706:lvgl/src/lv_widgets/lv_roller.c ****  * @param param pointer to a signal specific variable
 707:lvgl/src/lv_widgets/lv_roller.c ****  * @return LV_RES_OK: the object is not deleted in the function; LV_RES_INV: the object is deleted
 708:lvgl/src/lv_widgets/lv_roller.c ****  */
 709:lvgl/src/lv_widgets/lv_roller.c **** static lv_res_t lv_roller_scrl_signal(lv_obj_t * roller_scrl, lv_signal_t sign, void * param)
 710:lvgl/src/lv_widgets/lv_roller.c **** {
 711:lvgl/src/lv_widgets/lv_roller.c ****     lv_res_t res;
 712:lvgl/src/lv_widgets/lv_roller.c **** 
 713:lvgl/src/lv_widgets/lv_roller.c ****     /* Include the ancient signal function */
 714:lvgl/src/lv_widgets/lv_roller.c ****     res = ancestor_scrl_signal(roller_scrl, sign, param);
 715:lvgl/src/lv_widgets/lv_roller.c ****     if(res != LV_RES_OK) return res;
 716:lvgl/src/lv_widgets/lv_roller.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 717:lvgl/src/lv_widgets/lv_roller.c **** 
 718:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * roller     = lv_obj_get_parent(roller_scrl);
 719:lvgl/src/lv_widgets/lv_roller.c **** 
 720:lvgl/src/lv_widgets/lv_roller.c ****     /*On delete the ddlist signal deletes the label so nothing left to do here*/
 721:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 722:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return LV_RES_INV;
 723:lvgl/src/lv_widgets/lv_roller.c **** 
 724:lvgl/src/lv_widgets/lv_roller.c ****     int32_t id            = -1;
 725:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 726:lvgl/src/lv_widgets/lv_roller.c **** 
 727:lvgl/src/lv_widgets/lv_roller.c ****     const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
 728:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
 729:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t font_h              = lv_font_get_line_height(font);
 730:lvgl/src/lv_widgets/lv_roller.c **** 
 731:lvgl/src/lv_widgets/lv_roller.c ****     if(sign == LV_SIGNAL_DRAG_END) {
 732:lvgl/src/lv_widgets/lv_roller.c ****         /*If dragged then align the list to have an element in the middle*/
 733:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t label_y1   = label->coords.y1 - roller->coords.y1;
 734:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t label_unit = font_h + line_space;
 735:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t mid        = (roller->coords.y2 - roller->coords.y1) / 2;
 736:lvgl/src/lv_widgets/lv_roller.c **** 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 27


 737:lvgl/src/lv_widgets/lv_roller.c ****         id = (mid - label_y1 + line_space / 2) / label_unit;
 738:lvgl/src/lv_widgets/lv_roller.c **** 
 739:lvgl/src/lv_widgets/lv_roller.c ****         if(id < 0) id = 0;
 740:lvgl/src/lv_widgets/lv_roller.c ****         if(id >= ext->option_cnt) id = ext->option_cnt - 1;
 741:lvgl/src/lv_widgets/lv_roller.c **** 
 742:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id     = id;
 743:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = id;
 744:lvgl/src/lv_widgets/lv_roller.c ****         res = lv_event_send(roller, LV_EVENT_VALUE_CHANGED, &id);
 745:lvgl/src/lv_widgets/lv_roller.c ****         if(res != LV_RES_OK) return res;
 746:lvgl/src/lv_widgets/lv_roller.c ****     }
 747:lvgl/src/lv_widgets/lv_roller.c ****     /*If picked an option by clicking then set it*/
 748:lvgl/src/lv_widgets/lv_roller.c ****     else if(sign == LV_SIGNAL_RELEASED) {
 749:lvgl/src/lv_widgets/lv_roller.c ****         release_handler(roller);
 750:lvgl/src/lv_widgets/lv_roller.c ****     }
 751:lvgl/src/lv_widgets/lv_roller.c ****     else if(sign == LV_SIGNAL_PRESSED) {
 752:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 753:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_del(roller_scrl, (lv_anim_exec_xcb_t)lv_obj_set_y);
 754:lvgl/src/lv_widgets/lv_roller.c **** #endif
 755:lvgl/src/lv_widgets/lv_roller.c ****     }
 756:lvgl/src/lv_widgets/lv_roller.c ****     else if(sign == LV_SIGNAL_PARENT_SIZE_CHG) {
 757:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 758:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_del(lv_page_get_scrollable(roller), (lv_anim_exec_xcb_t)lv_obj_set_y);
 759:lvgl/src/lv_widgets/lv_roller.c **** #endif
 760:lvgl/src/lv_widgets/lv_roller.c ****         refr_position(roller, false);
 761:lvgl/src/lv_widgets/lv_roller.c ****         refr_width(roller);
 762:lvgl/src/lv_widgets/lv_roller.c **** 
 763:lvgl/src/lv_widgets/lv_roller.c ****     }
 764:lvgl/src/lv_widgets/lv_roller.c **** 
 765:lvgl/src/lv_widgets/lv_roller.c ****     /*Position the scrollable according to the new selected option*/
 766:lvgl/src/lv_widgets/lv_roller.c ****     if(id != -1) {
 767:lvgl/src/lv_widgets/lv_roller.c ****         refr_position(roller, LV_ANIM_ON);
 768:lvgl/src/lv_widgets/lv_roller.c ****     }
 769:lvgl/src/lv_widgets/lv_roller.c **** 
 770:lvgl/src/lv_widgets/lv_roller.c ****     return res;
 771:lvgl/src/lv_widgets/lv_roller.c **** }
 772:lvgl/src/lv_widgets/lv_roller.c **** 
 773:lvgl/src/lv_widgets/lv_roller.c **** /**
 774:lvgl/src/lv_widgets/lv_roller.c ****  * Draw a rectangle which has gradient on its top and bottom
 775:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to a roller object
 776:lvgl/src/lv_widgets/lv_roller.c ****  * @param clip_area pointer to the current mask (from the design function)
 777:lvgl/src/lv_widgets/lv_roller.c ****  */
 778:lvgl/src/lv_widgets/lv_roller.c **** static void draw_bg(lv_obj_t * roller, const lv_area_t * clip_area)
 779:lvgl/src/lv_widgets/lv_roller.c **** {
 381              		.loc 1 779 1 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 96
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		.loc 1 779 1 is_stmt 0 view .LVU111
 386 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 387              	.LCFI5:
 388              		.cfi_def_cfa_offset 20
 389              		.cfi_offset 4, -20
 390              		.cfi_offset 5, -16
 391              		.cfi_offset 6, -12
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 99B0     		sub	sp, sp, #100
ARM GAS  D:\Temp\ccqwJTgn.s 			page 28


 395              	.LCFI6:
 396              		.cfi_def_cfa_offset 120
 397 0004 0446     		mov	r4, r0
 398 0006 0D46     		mov	r5, r1
 780:lvgl/src/lv_widgets/lv_roller.c ****     lv_draw_rect_dsc_t bg_dsc;
 399              		.loc 1 780 5 is_stmt 1 view .LVU112
 781:lvgl/src/lv_widgets/lv_roller.c ****     lv_draw_rect_dsc_init(&bg_dsc);
 400              		.loc 1 781 5 view .LVU113
 401 0008 03A8     		add	r0, sp, #12
 402              	.LVL32:
 403              		.loc 1 781 5 is_stmt 0 view .LVU114
 404 000a FFF7FEFF 		bl	lv_draw_rect_dsc_init
 405              	.LVL33:
 782:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_init_draw_rect_dsc(roller, LV_ROLLER_PART_BG, &bg_dsc);
 406              		.loc 1 782 5 is_stmt 1 view .LVU115
 407 000e 03AA     		add	r2, sp, #12
 408 0010 0021     		movs	r1, #0
 409 0012 2046     		mov	r0, r4
 410 0014 FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 411              	.LVL34:
 783:lvgl/src/lv_widgets/lv_roller.c **** 
 784:lvgl/src/lv_widgets/lv_roller.c ****     /*With non-vertical gradient simply draw the background*/
 785:lvgl/src/lv_widgets/lv_roller.c ****     if(bg_dsc.bg_grad_dir == LV_GRAD_DIR_NONE) {
 412              		.loc 1 785 5 view .LVU116
 413              		.loc 1 785 14 is_stmt 0 view .LVU117
 414 0018 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 415              		.loc 1 785 7 view .LVU118
 416 001c 73B1     		cbz	r3, .L32
 786:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_rect(&roller->coords, clip_area, &bg_dsc);
 787:lvgl/src/lv_widgets/lv_roller.c ****         return;
 788:lvgl/src/lv_widgets/lv_roller.c ****     }
 789:lvgl/src/lv_widgets/lv_roller.c **** 
 790:lvgl/src/lv_widgets/lv_roller.c ****     /*With vertical gradient mirror it*/
 791:lvgl/src/lv_widgets/lv_roller.c **** 
 792:lvgl/src/lv_widgets/lv_roller.c ****     lv_area_t half_mask;
 417              		.loc 1 792 5 is_stmt 1 view .LVU119
 793:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t h = lv_obj_get_height(roller);
 418              		.loc 1 793 5 view .LVU120
 419              		.loc 1 793 20 is_stmt 0 view .LVU121
 420 001e 2046     		mov	r0, r4
 421 0020 FFF7FEFF 		bl	lv_obj_get_height
 422              	.LVL35:
 794:lvgl/src/lv_widgets/lv_roller.c ****     bool union_ok;
 423              		.loc 1 794 5 is_stmt 1 view .LVU122
 795:lvgl/src/lv_widgets/lv_roller.c **** 
 796:lvgl/src/lv_widgets/lv_roller.c ****     lv_area_copy(&half_mask, &roller->coords);
 424              		.loc 1 796 5 view .LVU123
 425              		.loc 1 796 30 is_stmt 0 view .LVU124
 426 0024 04F11006 		add	r6, r4, #16
 427              	.LVL36:
 428              	.LBB110:
 429              	.LBI110:
 430              		.file 4 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_area.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @file lv_area.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
ARM GAS  D:\Temp\ccqwJTgn.s 			page 29


   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_AREA_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <string.h>
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdbool.h>
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdint.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "lv_mem.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      DEFINES
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*To avoid overflow don't let the max ranges (reduce with 1000) */
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - 1000))
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      TYPEDEFS
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Represents a point on the screen.
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x;
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y;
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_point_t;
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Represents an area of the screen. */
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x1;
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y1;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x2;
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y2;
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_area_t;
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Alignments */
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** enum {
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_CENTER = 0,
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_LEFT,
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_MID,
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_RIGHT,
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_LEFT,
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_MID,
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_RIGHT,
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_LEFT_MID,
ARM GAS  D:\Temp\ccqwJTgn.s 			page 30


  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_RIGHT_MID,
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** };
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef uint8_t lv_align_t;
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * GLOBAL PROTOTYPES
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Initialize an area
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x1 left coordinate of the area
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y1 top coordinate of the area
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x2 right coordinate of the area
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y2 bottom coordinate of the area
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Copy an area
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param dest pointer to the destination area
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param src pointer to the source area
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 431              		.loc 4 97 20 is_stmt 1 view .LVU125
 432              	.LBE110:
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     _lv_memcpy_small(dest, src, sizeof(lv_area_t));
 433              		.loc 4 99 5 view .LVU126
 434              	.LBB117:
 435              	.LBB111:
 436              	.LBI111:
 437              		.file 5 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_mem.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @file lv_mem.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifndef LV_MEM_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #define LV_MEM_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 31


  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <stdint.h>
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <stddef.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "lv_log.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "lv_types.h"
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <string.h>
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /*********************
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      DEFINES
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *********************/
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifndef LV_MEM_BUF_MAX_NUM
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #define LV_MEM_BUF_MAX_NUM    16
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**********************
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      TYPEDEFS
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  **********************/
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Heap information structure.
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef struct {
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t total_size; /**< Total heap size */
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_cnt;
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_size; /**< Size of available memory */
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_biggest_size;
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t used_cnt;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used */
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t used_pct; /**< Percentage used */
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation */
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** } lv_mem_monitor_t;
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef struct {
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     void * p;
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint16_t size;
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t used    : 1;
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** } lv_mem_buf_t;
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** extern lv_mem_buf_arr_t _lv_mem_buf;
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**********************
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * GLOBAL PROTOTYPES
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  **********************/
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_init(void);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 32


  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_deinit(void);
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Allocate a memory dynamically
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param size size of the memory to allocate in bytes
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return pointer to the allocated memory
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * lv_mem_alloc(size_t size);
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Free an allocated data
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_free(const void * data);
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory.
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Its content will be copied to the new memory block and freed
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param new_size the desired new size in byte
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return pointer to the new memory
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Join the adjacent free memory blocks
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_defrag(void);
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** lv_res_t lv_mem_test(void);
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Give information about the work memory of dynamic allocation
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param mon_p pointer to a dm_mon_p variable,
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *              the result of the analysis will be stored here
 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Give the size of an allocated memory
 119:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory
 120:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return the size of data memory in bytes
 121:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 122:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** uint32_t _lv_mem_get_size(const void * data);
 123:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 124:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 125:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Get a temporal buffer with the given size.
 126:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param size the required size
ARM GAS  D:\Temp\ccqwJTgn.s 			page 33


 127:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 128:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * _lv_mem_buf_get(uint32_t size);
 129:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 130:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 131:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Release a memory buffer
 132:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param p buffer to release
 133:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 134:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_buf_release(void * p);
 135:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 136:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 137:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Free all memory buffers
 138:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 139:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_buf_free_all(void);
 140:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 141:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** //! @cond Doxygen_Suppress
 142:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 143:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 144:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 145:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 146:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memcpy
 147:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 148:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 149:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 150:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 151:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void * _lv_memcpy(void * dst, const void * src, size_t len)
 152:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 153:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return memcpy(dst, src, len);
 154:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 155:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 156:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 157:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memcpy
 158:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 159:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 160:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 161:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 162:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void * _lv_memcpy_small(void * dst, const void * src, size_t len)
 163:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 164:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return memcpy(dst, src, len);
 165:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 166:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 167:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 168:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset
 169:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 170:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param v value to set [0..255]
 171:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 172:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 173:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset(void * dst, uint8_t v, size_t len)
 174:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 175:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, v, len);
 176:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 177:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 178:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 179:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 180:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 181:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 182:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 183:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset_00(void * dst, size_t len)
ARM GAS  D:\Temp\ccqwJTgn.s 			page 34


 184:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 185:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, 0x00, len);
 186:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 187:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 188:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 189:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 190:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 191:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 192:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 193:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset_ff(void * dst, size_t len)
 194:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 195:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, 0xFF, len);
 196:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 197:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 198:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #else
 199:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 200:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 201:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 202:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 203:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 204:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 205:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * _lv_memcpy(void * dst, const void * src, size_t len);
 206:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 207:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 208:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 209:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 210:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 211:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 212:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 213:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * _lv_memcpy_small(void * dst, const void * src, size_t le
 438              		.loc 5 213 44 view .LVU127
 439              	.LBB112:
 214:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 440              		.loc 5 215 5 view .LVU128
 216:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 441              		.loc 5 216 5 view .LVU129
 217:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     while(len) {
 442              		.loc 5 218 5 view .LVU130
 216:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 443              		.loc 5 216 21 is_stmt 0 view .LVU131
 444 0028 3146     		mov	r1, r6
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 445              		.loc 5 215 15 view .LVU132
 446 002a 01AA     		add	r2, sp, #4
 447              	.LVL37:
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 448              		.loc 5 215 15 view .LVU133
 449              	.LBE112:
 450              	.LBE111:
 451              	.LBE117:
 452              		.loc 1 796 30 view .LVU134
 453 002c 0823     		movs	r3, #8
 454              	.LVL38:
 455              	.L25:
 456              	.LBB118:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 35


 457              	.LBB115:
 458              	.LBB113:
 459              		.loc 5 218 10 view .LVU135
 460 002e 63B1     		cbz	r3, .L33
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 461              		.loc 5 219 9 is_stmt 1 view .LVU136
 462              		.loc 5 219 15 is_stmt 0 view .LVU137
 463 0030 11F8017B 		ldrb	r7, [r1], #1	@ zero_extendqisi2
 464              	.LVL39:
 465              		.loc 5 219 13 view .LVU138
 466 0034 02F8017B 		strb	r7, [r2], #1
 467              	.LVL40:
 220:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 468              		.loc 5 220 9 is_stmt 1 view .LVU139
 221:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         s8++;
 469              		.loc 5 221 9 view .LVU140
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         len--;
 470              		.loc 5 222 9 view .LVU141
 471              		.loc 5 222 12 is_stmt 0 view .LVU142
 472 0038 013B     		subs	r3, r3, #1
 473              	.LVL41:
 474              		.loc 5 222 12 view .LVU143
 475 003a F8E7     		b	.L25
 476              	.LVL42:
 477              	.L32:
 478              		.loc 5 222 12 view .LVU144
 479              	.LBE113:
 480              	.LBE115:
 481              	.LBE118:
 786:lvgl/src/lv_widgets/lv_roller.c ****         return;
 482              		.loc 1 786 9 is_stmt 1 view .LVU145
 483 003c 03AA     		add	r2, sp, #12
 484 003e 2946     		mov	r1, r5
 485 0040 04F11000 		add	r0, r4, #16
 486 0044 FFF7FEFF 		bl	lv_draw_rect
 487              	.LVL43:
 787:lvgl/src/lv_widgets/lv_roller.c ****     }
 488              		.loc 1 787 9 view .LVU146
 489 0048 5AE0     		b	.L22
 490              	.LVL44:
 491              	.L33:
 492              	.LBB119:
 493              	.LBB116:
 494              	.LBB114:
 223:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 224:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 225:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return dst;
 495              		.loc 5 225 5 view .LVU147
 496              		.loc 5 225 5 is_stmt 0 view .LVU148
 497              	.LBE114:
 498              	.LBE116:
 499              	.LBE119:
 797:lvgl/src/lv_widgets/lv_roller.c ****     half_mask.x1 -= roller->ext_draw_pad; /*Add ext size too (e.g. because of shadow draw) */
 500              		.loc 1 797 5 is_stmt 1 view .LVU149
 501              		.loc 1 797 27 is_stmt 0 view .LVU150
 502 004a 628E     		ldrh	r2, [r4, #50]
 503              		.loc 1 797 18 view .LVU151
ARM GAS  D:\Temp\ccqwJTgn.s 			page 36


 504 004c BDF80430 		ldrh	r3, [sp, #4]
 505 0050 9B1A     		subs	r3, r3, r2
 506 0052 ADF80430 		strh	r3, [sp, #4]	@ movhi
 798:lvgl/src/lv_widgets/lv_roller.c ****     half_mask.x2 += roller->ext_draw_pad;
 507              		.loc 1 798 5 is_stmt 1 view .LVU152
 508              		.loc 1 798 18 is_stmt 0 view .LVU153
 509 0056 BDF80830 		ldrh	r3, [sp, #8]
 510 005a 1344     		add	r3, r3, r2
 511 005c ADF80830 		strh	r3, [sp, #8]	@ movhi
 799:lvgl/src/lv_widgets/lv_roller.c ****     half_mask.y1 -= roller->ext_draw_pad;
 512              		.loc 1 799 5 is_stmt 1 view .LVU154
 513              		.loc 1 799 18 is_stmt 0 view .LVU155
 514 0060 BDF80630 		ldrh	r3, [sp, #6]
 515 0064 9B1A     		subs	r3, r3, r2
 516 0066 ADF80630 		strh	r3, [sp, #6]	@ movhi
 800:lvgl/src/lv_widgets/lv_roller.c ****     half_mask.y2 = roller->coords.y1 + h / 2;
 517              		.loc 1 800 5 is_stmt 1 view .LVU156
 518              		.loc 1 800 34 is_stmt 0 view .LVU157
 519 006a 638A     		ldrh	r3, [r4, #18]
 520              		.loc 1 800 38 view .LVU158
 521 006c 00EBD070 		add	r0, r0, r0, lsr #31
 522              	.LVL45:
 523              		.loc 1 800 38 view .LVU159
 524 0070 C0F34F07 		ubfx	r7, r0, #1, #16
 525 0074 3B44     		add	r3, r3, r7
 526              		.loc 1 800 18 view .LVU160
 527 0076 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 801:lvgl/src/lv_widgets/lv_roller.c **** 
 802:lvgl/src/lv_widgets/lv_roller.c ****     union_ok = _lv_area_intersect(&half_mask, &half_mask, clip_area);
 528              		.loc 1 802 5 is_stmt 1 view .LVU161
 529              		.loc 1 802 16 is_stmt 0 view .LVU162
 530 007a 2A46     		mov	r2, r5
 531 007c 01A9     		add	r1, sp, #4
 532 007e 0846     		mov	r0, r1
 533 0080 FFF7FEFF 		bl	_lv_area_intersect
 534              	.LVL46:
 803:lvgl/src/lv_widgets/lv_roller.c ****     bg_dsc.bg_main_color_stop = bg_dsc.bg_main_color_stop / 2;
 535              		.loc 1 803 5 is_stmt 1 view .LVU163
 536              		.loc 1 803 39 is_stmt 0 view .LVU164
 537 0084 BDF91430 		ldrsh	r3, [sp, #20]
 538              		.loc 1 803 31 view .LVU165
 539 0088 03EBD373 		add	r3, r3, r3, lsr #31
 540 008c 5B10     		asrs	r3, r3, #1
 541 008e ADF81430 		strh	r3, [sp, #20]	@ movhi
 804:lvgl/src/lv_widgets/lv_roller.c ****     bg_dsc.bg_grad_color_stop = 128 - (255 - bg_dsc.bg_grad_color_stop) / 2;
 542              		.loc 1 804 5 is_stmt 1 view .LVU166
 543              		.loc 1 804 52 is_stmt 0 view .LVU167
 544 0092 BDF91630 		ldrsh	r3, [sp, #22]
 545              		.loc 1 804 44 view .LVU168
 546 0096 C3F1FF03 		rsb	r3, r3, #255
 547              		.loc 1 804 73 view .LVU169
 548 009a 03EBD373 		add	r3, r3, r3, lsr #31
 549 009e 5B10     		asrs	r3, r3, #1
 550              		.loc 1 804 37 view .LVU170
 551 00a0 C3F18003 		rsb	r3, r3, #128
 552              		.loc 1 804 31 view .LVU171
 553 00a4 ADF81630 		strh	r3, [sp, #22]	@ movhi
ARM GAS  D:\Temp\ccqwJTgn.s 			page 37


 805:lvgl/src/lv_widgets/lv_roller.c ****     if(union_ok) {
 554              		.loc 1 805 5 is_stmt 1 view .LVU172
 555              		.loc 1 805 7 is_stmt 0 view .LVU173
 556 00a8 18B9     		cbnz	r0, .L34
 557              	.LVL47:
 558              	.L27:
 796:lvgl/src/lv_widgets/lv_roller.c ****     half_mask.x1 -= roller->ext_draw_pad; /*Add ext size too (e.g. because of shadow draw) */
 559              		.loc 1 796 30 view .LVU174
 560 00aa 3146     		mov	r1, r6
 561 00ac 01AA     		add	r2, sp, #4
 562 00ae 0823     		movs	r3, #8
 563 00b0 0AE0     		b	.L28
 564              	.LVL48:
 565              	.L34:
 806:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_rect(&roller->coords, &half_mask, &bg_dsc);
 566              		.loc 1 806 9 is_stmt 1 view .LVU175
 567 00b2 03AA     		add	r2, sp, #12
 568 00b4 01A9     		add	r1, sp, #4
 569 00b6 3046     		mov	r0, r6
 570              	.LVL49:
 571              		.loc 1 806 9 is_stmt 0 view .LVU176
 572 00b8 FFF7FEFF 		bl	lv_draw_rect
 573              	.LVL50:
 574 00bc F5E7     		b	.L27
 575              	.LVL51:
 576              	.L29:
 577              	.LBB120:
 578              	.LBB121:
 579              	.LBB122:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 580              		.loc 5 219 9 is_stmt 1 view .LVU177
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 581              		.loc 5 219 15 is_stmt 0 view .LVU178
 582 00be 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 583              	.LVL52:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 584              		.loc 5 219 13 view .LVU179
 585 00c2 02F8010B 		strb	r0, [r2], #1
 586              	.LVL53:
 220:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         s8++;
 587              		.loc 5 220 9 is_stmt 1 view .LVU180
 221:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         len--;
 588              		.loc 5 221 9 view .LVU181
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 589              		.loc 5 222 9 view .LVU182
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 590              		.loc 5 222 12 is_stmt 0 view .LVU183
 591 00c6 013B     		subs	r3, r3, #1
 592              	.LVL54:
 593              	.L28:
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 594              		.loc 5 218 10 view .LVU184
 595 00c8 002B     		cmp	r3, #0
 596 00ca F8D1     		bne	.L29
 597              		.loc 5 225 5 is_stmt 1 view .LVU185
 598              	.LVL55:
 599              		.loc 5 225 5 is_stmt 0 view .LVU186
ARM GAS  D:\Temp\ccqwJTgn.s 			page 38


 600              	.LBE122:
 601              	.LBE121:
 602              	.LBE120:
 807:lvgl/src/lv_widgets/lv_roller.c ****     }
 808:lvgl/src/lv_widgets/lv_roller.c **** 
 809:lvgl/src/lv_widgets/lv_roller.c ****     lv_area_copy(&half_mask, &roller->coords);
 810:lvgl/src/lv_widgets/lv_roller.c ****     half_mask.x1 -= roller->ext_draw_pad; /*Revert ext. size adding*/
 603              		.loc 1 810 5 is_stmt 1 view .LVU187
 604              		.loc 1 810 27 is_stmt 0 view .LVU188
 605 00cc 638E     		ldrh	r3, [r4, #50]
 606              		.loc 1 810 18 view .LVU189
 607 00ce BDF80420 		ldrh	r2, [sp, #4]
 608 00d2 D21A     		subs	r2, r2, r3
 609 00d4 ADF80420 		strh	r2, [sp, #4]	@ movhi
 811:lvgl/src/lv_widgets/lv_roller.c ****     half_mask.x2 += roller->ext_draw_pad;
 610              		.loc 1 811 5 is_stmt 1 view .LVU190
 611              		.loc 1 811 18 is_stmt 0 view .LVU191
 612 00d8 BDF80820 		ldrh	r2, [sp, #8]
 613 00dc 1A44     		add	r2, r2, r3
 614 00de ADF80820 		strh	r2, [sp, #8]	@ movhi
 812:lvgl/src/lv_widgets/lv_roller.c ****     half_mask.y1 = roller->coords.y1 + h / 2;
 615              		.loc 1 812 5 is_stmt 1 view .LVU192
 616              		.loc 1 812 34 is_stmt 0 view .LVU193
 617 00e2 628A     		ldrh	r2, [r4, #18]
 618              		.loc 1 812 38 view .LVU194
 619 00e4 1744     		add	r7, r7, r2
 620              		.loc 1 812 18 view .LVU195
 621 00e6 ADF80670 		strh	r7, [sp, #6]	@ movhi
 813:lvgl/src/lv_widgets/lv_roller.c ****     half_mask.y2 += roller->ext_draw_pad;
 622              		.loc 1 813 5 is_stmt 1 view .LVU196
 623              		.loc 1 813 18 is_stmt 0 view .LVU197
 624 00ea BDF80A20 		ldrh	r2, [sp, #10]
 625 00ee 1344     		add	r3, r3, r2
 626 00f0 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 814:lvgl/src/lv_widgets/lv_roller.c **** 
 815:lvgl/src/lv_widgets/lv_roller.c ****     union_ok = _lv_area_intersect(&half_mask, &half_mask, clip_area);
 627              		.loc 1 815 5 is_stmt 1 view .LVU198
 628              		.loc 1 815 16 is_stmt 0 view .LVU199
 629 00f4 2A46     		mov	r2, r5
 630 00f6 01A9     		add	r1, sp, #4
 631 00f8 0846     		mov	r0, r1
 632 00fa FFF7FEFF 		bl	_lv_area_intersect
 633              	.LVL56:
 816:lvgl/src/lv_widgets/lv_roller.c ****     if(union_ok) {
 634              		.loc 1 816 5 is_stmt 1 view .LVU200
 635              		.loc 1 816 7 is_stmt 0 view .LVU201
 636 00fe 08B9     		cbnz	r0, .L35
 637              	.LVL57:
 638              	.L22:
 817:lvgl/src/lv_widgets/lv_roller.c ****         lv_color_t c = bg_dsc.bg_color;
 818:lvgl/src/lv_widgets/lv_roller.c ****         bg_dsc.bg_color = bg_dsc.bg_grad_color;
 819:lvgl/src/lv_widgets/lv_roller.c ****         bg_dsc.bg_grad_color = c;
 820:lvgl/src/lv_widgets/lv_roller.c **** 
 821:lvgl/src/lv_widgets/lv_roller.c ****         bg_dsc.bg_main_color_stop += 127;
 822:lvgl/src/lv_widgets/lv_roller.c ****         bg_dsc.bg_grad_color_stop += 127;
 823:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_rect(&roller->coords, &half_mask, &bg_dsc);
 824:lvgl/src/lv_widgets/lv_roller.c ****     }
ARM GAS  D:\Temp\ccqwJTgn.s 			page 39


 825:lvgl/src/lv_widgets/lv_roller.c **** }
 639              		.loc 1 825 1 view .LVU202
 640 0100 19B0     		add	sp, sp, #100
 641              	.LCFI7:
 642              		.cfi_remember_state
 643              		.cfi_def_cfa_offset 20
 644              		@ sp needed
 645 0102 F0BD     		pop	{r4, r5, r6, r7, pc}
 646              	.LVL58:
 647              	.L35:
 648              	.LCFI8:
 649              		.cfi_restore_state
 650              	.LBB123:
 817:lvgl/src/lv_widgets/lv_roller.c ****         lv_color_t c = bg_dsc.bg_color;
 651              		.loc 1 817 9 is_stmt 1 view .LVU203
 817:lvgl/src/lv_widgets/lv_roller.c ****         lv_color_t c = bg_dsc.bg_color;
 652              		.loc 1 817 20 is_stmt 0 view .LVU204
 653 0104 BDF80E30 		ldrh	r3, [sp, #14]
 818:lvgl/src/lv_widgets/lv_roller.c ****         bg_dsc.bg_grad_color = c;
 654              		.loc 1 818 9 is_stmt 1 view .LVU205
 818:lvgl/src/lv_widgets/lv_roller.c ****         bg_dsc.bg_grad_color = c;
 655              		.loc 1 818 25 is_stmt 0 view .LVU206
 656 0108 BDF81020 		ldrh	r2, [sp, #16]
 657 010c ADF80E20 		strh	r2, [sp, #14]	@ movhi
 819:lvgl/src/lv_widgets/lv_roller.c **** 
 658              		.loc 1 819 9 is_stmt 1 view .LVU207
 659              	.LVL59:
 819:lvgl/src/lv_widgets/lv_roller.c **** 
 660              		.loc 1 819 30 is_stmt 0 view .LVU208
 661 0110 ADF81030 		strh	r3, [sp, #16]	@ movhi
 821:lvgl/src/lv_widgets/lv_roller.c ****         bg_dsc.bg_grad_color_stop += 127;
 662              		.loc 1 821 9 is_stmt 1 view .LVU209
 821:lvgl/src/lv_widgets/lv_roller.c ****         bg_dsc.bg_grad_color_stop += 127;
 663              		.loc 1 821 35 is_stmt 0 view .LVU210
 664 0114 BDF81430 		ldrh	r3, [sp, #20]
 665              	.LVL60:
 821:lvgl/src/lv_widgets/lv_roller.c ****         bg_dsc.bg_grad_color_stop += 127;
 666              		.loc 1 821 35 view .LVU211
 667 0118 7F33     		adds	r3, r3, #127
 668 011a ADF81430 		strh	r3, [sp, #20]	@ movhi
 822:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_rect(&roller->coords, &half_mask, &bg_dsc);
 669              		.loc 1 822 9 is_stmt 1 view .LVU212
 822:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_rect(&roller->coords, &half_mask, &bg_dsc);
 670              		.loc 1 822 35 is_stmt 0 view .LVU213
 671 011e BDF81630 		ldrh	r3, [sp, #22]
 672 0122 7F33     		adds	r3, r3, #127
 673 0124 ADF81630 		strh	r3, [sp, #22]	@ movhi
 823:lvgl/src/lv_widgets/lv_roller.c ****     }
 674              		.loc 1 823 9 is_stmt 1 view .LVU214
 675 0128 03AA     		add	r2, sp, #12
 676 012a 01A9     		add	r1, sp, #4
 677 012c 3046     		mov	r0, r6
 678              	.LVL61:
 823:lvgl/src/lv_widgets/lv_roller.c ****     }
 679              		.loc 1 823 9 is_stmt 0 view .LVU215
 680 012e FFF7FEFF 		bl	lv_draw_rect
 681              	.LVL62:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 40


 682 0132 E5E7     		b	.L22
 683              	.LBE123:
 684              		.cfi_endproc
 685              	.LFE492:
 687              		.section	.text.get_label,"ax",%progbits
 688              		.align	1
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	get_label:
 695              	.LVL63:
 696              	.LFB498:
 826:lvgl/src/lv_widgets/lv_roller.c **** 
 827:lvgl/src/lv_widgets/lv_roller.c **** /**
 828:lvgl/src/lv_widgets/lv_roller.c ****  * Refresh the position of the roller. It uses the id stored in: ext->ddlist.selected_option_id
 829:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to a roller object
 830:lvgl/src/lv_widgets/lv_roller.c ****  * @param anim_en LV_ANIM_ON: refresh with animation; LV_ANOM_OFF: without animation
 831:lvgl/src/lv_widgets/lv_roller.c ****  */
 832:lvgl/src/lv_widgets/lv_roller.c **** static void refr_position(lv_obj_t * roller, lv_anim_enable_t anim_en)
 833:lvgl/src/lv_widgets/lv_roller.c **** {
 834:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION == 0
 835:lvgl/src/lv_widgets/lv_roller.c ****     anim_en = LV_ANIM_OFF;
 836:lvgl/src/lv_widgets/lv_roller.c **** #endif
 837:lvgl/src/lv_widgets/lv_roller.c **** 
 838:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * roller_scrl         = lv_page_get_scrollable(roller);
 839:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext          = lv_obj_get_ext_attr(roller);
 840:lvgl/src/lv_widgets/lv_roller.c ****     const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
 841:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
 842:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t font_h              = lv_font_get_line_height(font);
 843:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t h                   = lv_obj_get_height(roller);
 844:lvgl/src/lv_widgets/lv_roller.c ****     uint16_t anim_time             = lv_roller_get_anim_time(roller);
 845:lvgl/src/lv_widgets/lv_roller.c **** 
 846:lvgl/src/lv_widgets/lv_roller.c ****     /* Normally the animation's `end_cb` sets correct position of the roller if infinite.
 847:lvgl/src/lv_widgets/lv_roller.c ****      * But without animations do it manually*/
 848:lvgl/src/lv_widgets/lv_roller.c ****     if(anim_en == LV_ANIM_OFF || anim_time == 0) {
 849:lvgl/src/lv_widgets/lv_roller.c ****         inf_normalize(roller_scrl);
 850:lvgl/src/lv_widgets/lv_roller.c ****     }
 851:lvgl/src/lv_widgets/lv_roller.c **** 
 852:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 853:lvgl/src/lv_widgets/lv_roller.c **** 
 854:lvgl/src/lv_widgets/lv_roller.c ****     int32_t id = ext->sel_opt_id;
 855:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t line_y1 = id * (font_h + line_space) + label->coords.y1 - roller_scrl->coords.y1;
 856:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 857:lvgl/src/lv_widgets/lv_roller.c **** 
 858:lvgl/src/lv_widgets/lv_roller.c ****     if(anim_en == LV_ANIM_OFF || anim_time == 0) {
 859:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 860:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_del(roller_scrl, (lv_anim_exec_xcb_t)lv_obj_set_y);
 861:lvgl/src/lv_widgets/lv_roller.c **** #endif
 862:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_y(roller_scrl, new_y);
 863:lvgl/src/lv_widgets/lv_roller.c ****     }
 864:lvgl/src/lv_widgets/lv_roller.c ****     else {
 865:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 866:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_t a;
 867:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_init(&a);
 868:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_set_var(&a, roller_scrl);
 869:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)lv_obj_set_y);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 41


 870:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_set_values(&a, lv_obj_get_y(roller_scrl), new_y);
 871:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_set_time(&a, anim_time);
 872:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_set_ready_cb(&a, scroll_anim_ready_cb);
 873:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_start(&a);
 874:lvgl/src/lv_widgets/lv_roller.c **** #endif
 875:lvgl/src/lv_widgets/lv_roller.c ****     }
 876:lvgl/src/lv_widgets/lv_roller.c **** }
 877:lvgl/src/lv_widgets/lv_roller.c **** 
 878:lvgl/src/lv_widgets/lv_roller.c **** static lv_res_t release_handler(lv_obj_t * roller)
 879:lvgl/src/lv_widgets/lv_roller.c **** {
 880:lvgl/src/lv_widgets/lv_roller.c **** 
 881:lvgl/src/lv_widgets/lv_roller.c ****     /*If there was dragging `DRAG_END` signal will refresh the position and update the selected opt
 882:lvgl/src/lv_widgets/lv_roller.c ****     if(lv_indev_is_dragging(lv_indev_get_act())) return LV_RES_OK;
 883:lvgl/src/lv_widgets/lv_roller.c **** 
 884:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 885:lvgl/src/lv_widgets/lv_roller.c **** 
 886:lvgl/src/lv_widgets/lv_roller.c ****     lv_indev_t * indev = lv_indev_get_act();
 887:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 888:lvgl/src/lv_widgets/lv_roller.c ****     /*Leave edit mode once a new option is selected*/
 889:lvgl/src/lv_widgets/lv_roller.c ****     lv_indev_type_t indev_type = lv_indev_get_type(indev);
 890:lvgl/src/lv_widgets/lv_roller.c ****     if(indev_type == LV_INDEV_TYPE_ENCODER || indev_type == LV_INDEV_TYPE_KEYPAD) {
 891:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = ext->sel_opt_id;
 892:lvgl/src/lv_widgets/lv_roller.c **** 
 893:lvgl/src/lv_widgets/lv_roller.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 894:lvgl/src/lv_widgets/lv_roller.c ****             lv_group_t * g      = lv_obj_get_group(roller);
 895:lvgl/src/lv_widgets/lv_roller.c ****             if(lv_group_get_editing(g)) {
 896:lvgl/src/lv_widgets/lv_roller.c ****                 lv_group_set_editing(g, false);
 897:lvgl/src/lv_widgets/lv_roller.c ****             }
 898:lvgl/src/lv_widgets/lv_roller.c ****         }
 899:lvgl/src/lv_widgets/lv_roller.c ****     }
 900:lvgl/src/lv_widgets/lv_roller.c **** #endif
 901:lvgl/src/lv_widgets/lv_roller.c **** 
 902:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 903:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return LV_RES_OK;
 904:lvgl/src/lv_widgets/lv_roller.c **** 
 905:lvgl/src/lv_widgets/lv_roller.c ****     if(lv_indev_get_type(indev) == LV_INDEV_TYPE_POINTER || lv_indev_get_type(indev) == LV_INDEV_TY
 906:lvgl/src/lv_widgets/lv_roller.c ****         /*Search the clicked option (For KEYPAD and ENCODER the new value should be already set)*/
 907:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t new_opt  = 0;
 908:lvgl/src/lv_widgets/lv_roller.c ****         lv_point_t p;
 909:lvgl/src/lv_widgets/lv_roller.c ****         lv_indev_get_point(indev, &p);
 910:lvgl/src/lv_widgets/lv_roller.c ****         p.y -= label->coords.y1;
 911:lvgl/src/lv_widgets/lv_roller.c ****         p.x -= label->coords.x1;
 912:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t letter_i;
 913:lvgl/src/lv_widgets/lv_roller.c ****         letter_i = lv_label_get_letter_on(label, &p);
 914:lvgl/src/lv_widgets/lv_roller.c **** 
 915:lvgl/src/lv_widgets/lv_roller.c ****         const char * txt  = lv_label_get_text(label);
 916:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t i        = 0;
 917:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t i_prev   = 0;
 918:lvgl/src/lv_widgets/lv_roller.c **** 
 919:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t letter_cnt = 0;
 920:lvgl/src/lv_widgets/lv_roller.c ****         for(letter_cnt = 0; letter_cnt < letter_i; letter_cnt++) {
 921:lvgl/src/lv_widgets/lv_roller.c ****             uint32_t letter = _lv_txt_encoded_next(txt, &i);
 922:lvgl/src/lv_widgets/lv_roller.c ****             /*Count he lines to reach the clicked letter. But ignore the last '\n' because it
 923:lvgl/src/lv_widgets/lv_roller.c ****              * still belongs to the clicked line*/
 924:lvgl/src/lv_widgets/lv_roller.c ****             if(letter == '\n' && i_prev != letter_i) new_opt++;
 925:lvgl/src/lv_widgets/lv_roller.c ****             i_prev = i;
 926:lvgl/src/lv_widgets/lv_roller.c ****         }
ARM GAS  D:\Temp\ccqwJTgn.s 			page 42


 927:lvgl/src/lv_widgets/lv_roller.c ****         lv_roller_set_selected(roller, new_opt, LV_ANIM_ON);
 928:lvgl/src/lv_widgets/lv_roller.c ****     }
 929:lvgl/src/lv_widgets/lv_roller.c **** 
 930:lvgl/src/lv_widgets/lv_roller.c ****     uint32_t id  = ext->sel_opt_id; /*Just to use uint32_t in event data*/
 931:lvgl/src/lv_widgets/lv_roller.c ****     lv_res_t res = lv_event_send(roller, LV_EVENT_VALUE_CHANGED, &id);
 932:lvgl/src/lv_widgets/lv_roller.c ****     return res;
 933:lvgl/src/lv_widgets/lv_roller.c **** }
 934:lvgl/src/lv_widgets/lv_roller.c **** 
 935:lvgl/src/lv_widgets/lv_roller.c **** static void refr_width(lv_obj_t * roller)
 936:lvgl/src/lv_widgets/lv_roller.c **** {
 937:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 938:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return;
 939:lvgl/src/lv_widgets/lv_roller.c **** 
 940:lvgl/src/lv_widgets/lv_roller.c ****     switch(lv_label_get_align(label)) {
 941:lvgl/src/lv_widgets/lv_roller.c ****         case LV_LABEL_ALIGN_LEFT:
 942:lvgl/src/lv_widgets/lv_roller.c ****             lv_obj_align(label, NULL, LV_ALIGN_IN_LEFT_MID, 0, 0);
 943:lvgl/src/lv_widgets/lv_roller.c ****             break;
 944:lvgl/src/lv_widgets/lv_roller.c ****         case LV_LABEL_ALIGN_CENTER:
 945:lvgl/src/lv_widgets/lv_roller.c ****             lv_obj_align(label, NULL, LV_ALIGN_CENTER, 0, 0);
 946:lvgl/src/lv_widgets/lv_roller.c ****             break;
 947:lvgl/src/lv_widgets/lv_roller.c ****         case LV_LABEL_ALIGN_RIGHT:
 948:lvgl/src/lv_widgets/lv_roller.c ****             lv_obj_align(label, NULL, LV_ALIGN_IN_RIGHT_MID, 0, 0);
 949:lvgl/src/lv_widgets/lv_roller.c ****             break;
 950:lvgl/src/lv_widgets/lv_roller.c ****     }
 951:lvgl/src/lv_widgets/lv_roller.c **** 
 952:lvgl/src/lv_widgets/lv_roller.c ****     if(lv_roller_get_auto_fit(roller) == false) return;
 953:lvgl/src/lv_widgets/lv_roller.c **** 
 954:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t label_w = lv_obj_get_width(label);
 955:lvgl/src/lv_widgets/lv_roller.c **** 
 956:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_int_t left = lv_obj_get_style_pad_left(roller, LV_ROLLER_PART_BG);
 957:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_int_t right = lv_obj_get_style_pad_right(roller, LV_ROLLER_PART_BG);
 958:lvgl/src/lv_widgets/lv_roller.c **** 
 959:lvgl/src/lv_widgets/lv_roller.c ****     const lv_font_t * base_font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
 960:lvgl/src/lv_widgets/lv_roller.c ****     const lv_font_t * sel_font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_SELECTED);
 961:lvgl/src/lv_widgets/lv_roller.c **** 
 962:lvgl/src/lv_widgets/lv_roller.c ****     /*The selected text might be larger to get its size*/
 963:lvgl/src/lv_widgets/lv_roller.c ****     if(base_font != sel_font) {
 964:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t letter_sp = lv_obj_get_style_text_letter_space(roller, LV_ROLLER_PART_SELECTED);
 965:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t line_sp = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_SELECTED);
 966:lvgl/src/lv_widgets/lv_roller.c ****         lv_point_t p;
 967:lvgl/src/lv_widgets/lv_roller.c ****         _lv_txt_get_size(&p, lv_label_get_text(label), sel_font, letter_sp, line_sp, LV_COORD_MAX, 
 968:lvgl/src/lv_widgets/lv_roller.c ****         if(label_w < p.x)label_w = p.x;
 969:lvgl/src/lv_widgets/lv_roller.c ****     }
 970:lvgl/src/lv_widgets/lv_roller.c **** 
 971:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_set_width(roller, label_w + left + right);
 972:lvgl/src/lv_widgets/lv_roller.c **** }
 973:lvgl/src/lv_widgets/lv_roller.c **** 
 974:lvgl/src/lv_widgets/lv_roller.c **** /**
 975:lvgl/src/lv_widgets/lv_roller.c ****  * Refresh the height of the roller and the scrollable
 976:lvgl/src/lv_widgets/lv_roller.c ****  * @param roller pointer to roller
 977:lvgl/src/lv_widgets/lv_roller.c ****  */
 978:lvgl/src/lv_widgets/lv_roller.c **** static void refr_height(lv_obj_t * roller)
 979:lvgl/src/lv_widgets/lv_roller.c **** {
 980:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 981:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return;
 982:lvgl/src/lv_widgets/lv_roller.c **** 
 983:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_set_height(lv_page_get_scrollable(roller), lv_obj_get_height(label) + lv_obj_get_height(
ARM GAS  D:\Temp\ccqwJTgn.s 			page 43


 984:lvgl/src/lv_widgets/lv_roller.c **** 
 985:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 986:lvgl/src/lv_widgets/lv_roller.c ****     lv_anim_del(lv_page_get_scrollable(roller), (lv_anim_exec_xcb_t)lv_obj_set_y);
 987:lvgl/src/lv_widgets/lv_roller.c **** #endif
 988:lvgl/src/lv_widgets/lv_roller.c ****     refr_position(roller, LV_ANIM_OFF);
 989:lvgl/src/lv_widgets/lv_roller.c **** }
 990:lvgl/src/lv_widgets/lv_roller.c **** 
 991:lvgl/src/lv_widgets/lv_roller.c **** /**
 992:lvgl/src/lv_widgets/lv_roller.c ****  * Set the middle page for the roller if infinite is enabled
 993:lvgl/src/lv_widgets/lv_roller.c ****  * @param scrl pointer to the roller's scrollable (lv_obj_t *)
 994:lvgl/src/lv_widgets/lv_roller.c ****  */
 995:lvgl/src/lv_widgets/lv_roller.c **** static void inf_normalize(void * scrl)
 996:lvgl/src/lv_widgets/lv_roller.c **** {
 997:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * roller_scrl = (lv_obj_t *)scrl;
 998:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * roller      = lv_obj_get_parent(roller_scrl);
 999:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext  = lv_obj_get_ext_attr(roller);
1000:lvgl/src/lv_widgets/lv_roller.c **** 
1001:lvgl/src/lv_widgets/lv_roller.c ****     if(ext->mode == LV_ROLLER_MODE_INFINITE) {
1002:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t real_id_cnt = ext->option_cnt / LV_ROLLER_INF_PAGES;
1003:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id = ext->sel_opt_id % real_id_cnt;
1004:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id += (LV_ROLLER_INF_PAGES / 2) * real_id_cnt; /*Select the middle page*/
1005:lvgl/src/lv_widgets/lv_roller.c **** 
1006:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = ext->sel_opt_id % real_id_cnt;
1007:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori += (LV_ROLLER_INF_PAGES / 2) * real_id_cnt; /*Select the middle page*/
1008:lvgl/src/lv_widgets/lv_roller.c **** 
1009:lvgl/src/lv_widgets/lv_roller.c ****         /*Move to the new id*/
1010:lvgl/src/lv_widgets/lv_roller.c ****         const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
1011:lvgl/src/lv_widgets/lv_roller.c ****         lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
1012:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t font_h              = lv_font_get_line_height(font);
1013:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t h                   = lv_obj_get_height(roller);
1014:lvgl/src/lv_widgets/lv_roller.c **** 
1015:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * label = get_label(roller);
1016:lvgl/src/lv_widgets/lv_roller.c **** 
1017:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t line_y1 = ext->sel_opt_id * (font_h + line_space) + label->coords.y1 - roller_sc
1018:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
1019:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_y(roller_scrl, new_y);
1020:lvgl/src/lv_widgets/lv_roller.c ****     }
1021:lvgl/src/lv_widgets/lv_roller.c **** }
1022:lvgl/src/lv_widgets/lv_roller.c **** 
1023:lvgl/src/lv_widgets/lv_roller.c **** static lv_obj_t * get_label(const lv_obj_t * roller)
1024:lvgl/src/lv_widgets/lv_roller.c **** {
 697              		.loc 1 1024 1 is_stmt 1 view -0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		.loc 1 1024 1 is_stmt 0 view .LVU217
 702 0000 08B5     		push	{r3, lr}
 703              	.LCFI9:
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 3, -8
 706              		.cfi_offset 14, -4
1025:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * scrl = lv_page_get_scrollable(roller);
 707              		.loc 1 1025 5 is_stmt 1 view .LVU218
 708              		.loc 1 1025 23 is_stmt 0 view .LVU219
 709 0002 FFF7FEFF 		bl	lv_page_get_scrollable
 710              	.LVL64:
1026:lvgl/src/lv_widgets/lv_roller.c ****     if(scrl == NULL) return NULL;   /*The roller is being deleted, the scrollable already not exist
ARM GAS  D:\Temp\ccqwJTgn.s 			page 44


 711              		.loc 1 1026 5 is_stmt 1 view .LVU220
 712              		.loc 1 1026 7 is_stmt 0 view .LVU221
 713 0006 0346     		mov	r3, r0
 714 0008 18B1     		cbz	r0, .L36
1027:lvgl/src/lv_widgets/lv_roller.c ****     return lv_obj_get_child(scrl, NULL);
 715              		.loc 1 1027 5 is_stmt 1 view .LVU222
 716              		.loc 1 1027 12 is_stmt 0 view .LVU223
 717 000a 0021     		movs	r1, #0
 718 000c FFF7FEFF 		bl	lv_obj_get_child
 719              	.LVL65:
 720              		.loc 1 1027 12 view .LVU224
 721 0010 0346     		mov	r3, r0
 722              	.L36:
1028:lvgl/src/lv_widgets/lv_roller.c **** }
 723              		.loc 1 1028 1 view .LVU225
 724 0012 1846     		mov	r0, r3
 725 0014 08BD     		pop	{r3, pc}
 726              		.cfi_endproc
 727              	.LFE498:
 729              		.section	.text.inf_normalize,"ax",%progbits
 730              		.align	1
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 734              		.fpu fpv4-sp-d16
 736              	inf_normalize:
 737              	.LVL66:
 738              	.LFB497:
 996:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * roller_scrl = (lv_obj_t *)scrl;
 739              		.loc 1 996 1 is_stmt 1 view -0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 996:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * roller_scrl = (lv_obj_t *)scrl;
 743              		.loc 1 996 1 is_stmt 0 view .LVU227
 744 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 745              	.LCFI10:
 746              		.cfi_def_cfa_offset 32
 747              		.cfi_offset 3, -32
 748              		.cfi_offset 4, -28
 749              		.cfi_offset 5, -24
 750              		.cfi_offset 6, -20
 751              		.cfi_offset 7, -16
 752              		.cfi_offset 8, -12
 753              		.cfi_offset 9, -8
 754              		.cfi_offset 14, -4
 755 0004 0646     		mov	r6, r0
 997:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * roller      = lv_obj_get_parent(roller_scrl);
 756              		.loc 1 997 5 is_stmt 1 view .LVU228
 757              	.LVL67:
 998:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext  = lv_obj_get_ext_attr(roller);
 758              		.loc 1 998 5 view .LVU229
 998:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext  = lv_obj_get_ext_attr(roller);
 759              		.loc 1 998 30 is_stmt 0 view .LVU230
 760 0006 FFF7FEFF 		bl	lv_obj_get_parent
 761              	.LVL68:
 998:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext  = lv_obj_get_ext_attr(roller);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 45


 762              		.loc 1 998 30 view .LVU231
 763 000a 0546     		mov	r5, r0
 764              	.LVL69:
 999:lvgl/src/lv_widgets/lv_roller.c **** 
 765              		.loc 1 999 5 is_stmt 1 view .LVU232
 999:lvgl/src/lv_widgets/lv_roller.c **** 
 766              		.loc 1 999 30 is_stmt 0 view .LVU233
 767 000c FFF7FEFF 		bl	lv_obj_get_ext_attr
 768              	.LVL70:
1001:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t real_id_cnt = ext->option_cnt / LV_ROLLER_INF_PAGES;
 769              		.loc 1 1001 5 is_stmt 1 view .LVU234
1001:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t real_id_cnt = ext->option_cnt / LV_ROLLER_INF_PAGES;
 770              		.loc 1 1001 18 is_stmt 0 view .LVU235
 771 0010 90F84E30 		ldrb	r3, [r0, #78]	@ zero_extendqisi2
1001:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t real_id_cnt = ext->option_cnt / LV_ROLLER_INF_PAGES;
 772              		.loc 1 1001 7 view .LVU236
 773 0014 13F0010F 		tst	r3, #1
 774 0018 01D1     		bne	.L42
 775              	.LVL71:
 776              	.L39:
1021:lvgl/src/lv_widgets/lv_roller.c **** 
 777              		.loc 1 1021 1 view .LVU237
 778 001a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 779              	.LVL72:
 780              	.L42:
1021:lvgl/src/lv_widgets/lv_roller.c **** 
 781              		.loc 1 1021 1 view .LVU238
 782 001e 0446     		mov	r4, r0
 783              	.LBB124:
1002:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id = ext->sel_opt_id % real_id_cnt;
 784              		.loc 1 1002 9 is_stmt 1 view .LVU239
1002:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id = ext->sel_opt_id % real_id_cnt;
 785              		.loc 1 1002 35 is_stmt 0 view .LVU240
 786 0020 B0F84820 		ldrh	r2, [r0, #72]
1002:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id = ext->sel_opt_id % real_id_cnt;
 787              		.loc 1 1002 18 view .LVU241
 788 0024 244B     		ldr	r3, .L43
 789 0026 A3FB0213 		umull	r1, r3, r3, r2
 790 002a D21A     		subs	r2, r2, r3
 791 002c 03EB5203 		add	r3, r3, r2, lsr #1
 792 0030 C3F38F03 		ubfx	r3, r3, #2, #16
 793              	.LVL73:
1003:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id += (LV_ROLLER_INF_PAGES / 2) * real_id_cnt; /*Select the middle page*/
 794              		.loc 1 1003 9 is_stmt 1 view .LVU242
1003:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id += (LV_ROLLER_INF_PAGES / 2) * real_id_cnt; /*Select the middle page*/
 795              		.loc 1 1003 30 is_stmt 0 view .LVU243
 796 0034 B0F84A10 		ldrh	r1, [r0, #74]
1003:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id += (LV_ROLLER_INF_PAGES / 2) * real_id_cnt; /*Select the middle page*/
 797              		.loc 1 1003 25 view .LVU244
 798 0038 B1FBF3F2 		udiv	r2, r1, r3
 799 003c 03FB1212 		mls	r2, r3, r2, r1
1004:lvgl/src/lv_widgets/lv_roller.c **** 
 800              		.loc 1 1004 9 is_stmt 1 view .LVU245
1004:lvgl/src/lv_widgets/lv_roller.c **** 
 801              		.loc 1 1004 25 is_stmt 0 view .LVU246
 802 0040 03EB4300 		add	r0, r3, r3, lsl #1
 803              	.LVL74:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 46


1004:lvgl/src/lv_widgets/lv_roller.c **** 
 804              		.loc 1 1004 25 view .LVU247
 805 0044 80B2     		uxth	r0, r0
 806 0046 10FA82F2 		uxtah	r2, r0, r2
 807 004a 92B2     		uxth	r2, r2
 808 004c A4F84A20 		strh	r2, [r4, #74]	@ movhi
1006:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori += (LV_ROLLER_INF_PAGES / 2) * real_id_cnt; /*Select the middle page*/
 809              		.loc 1 1006 9 is_stmt 1 view .LVU248
1006:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori += (LV_ROLLER_INF_PAGES / 2) * real_id_cnt; /*Select the middle page*/
 810              		.loc 1 1006 29 is_stmt 0 view .LVU249
 811 0050 B2FBF3F1 		udiv	r1, r2, r3
 812 0054 03FB1123 		mls	r3, r3, r1, r2
 813              	.LVL75:
1007:lvgl/src/lv_widgets/lv_roller.c **** 
 814              		.loc 1 1007 9 is_stmt 1 view .LVU250
1007:lvgl/src/lv_widgets/lv_roller.c **** 
 815              		.loc 1 1007 29 is_stmt 0 view .LVU251
 816 0058 10FA83F3 		uxtah	r3, r0, r3
 817 005c A4F84C30 		strh	r3, [r4, #76]	@ movhi
1010:lvgl/src/lv_widgets/lv_roller.c ****         lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
 818              		.loc 1 1010 9 is_stmt 1 view .LVU252
 819              	.LVL76:
 820              	.LBB125:
 821              	.LBI125:
 822              		.loc 2 168 1 view .LVU253
 823              	.LBB126:
 824              		.loc 2 168 1 view .LVU254
 825 0060 48F28E02 		movw	r2, #32910
 826 0064 0021     		movs	r1, #0
 827 0066 2846     		mov	r0, r5
 828 0068 FFF7FEFF 		bl	_lv_obj_get_style_ptr
 829              	.LVL77:
 830              		.loc 2 168 1 is_stmt 0 view .LVU255
 831 006c 8046     		mov	r8, r0
 832              	.LVL78:
 833              		.loc 2 168 1 view .LVU256
 834              	.LBE126:
 835              	.LBE125:
1011:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t font_h              = lv_font_get_line_height(font);
 836              		.loc 1 1011 9 is_stmt 1 view .LVU257
 837              	.LBB127:
 838              	.LBI127:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 839              		.loc 2 161 1 view .LVU258
 840              	.LBB128:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 841              		.loc 2 161 1 view .LVU259
 842 006e 48F28102 		movw	r2, #32897
 843 0072 0021     		movs	r1, #0
 844 0074 2846     		mov	r0, r5
 845              	.LVL79:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 846              		.loc 2 161 1 is_stmt 0 view .LVU260
 847 0076 FFF7FEFF 		bl	_lv_obj_get_style_int
 848              	.LVL80:
 849 007a 0746     		mov	r7, r0
 850              	.LVL81:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 47


 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 851              		.loc 2 161 1 view .LVU261
 852              	.LBE128:
 853              	.LBE127:
1012:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t h                   = lv_obj_get_height(roller);
 854              		.loc 1 1012 9 is_stmt 1 view .LVU262
 855              	.LBB129:
 856              	.LBI129:
 116:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** {
 857              		.loc 3 116 26 view .LVU263
 858              	.LBB130:
 859              		.loc 3 118 5 view .LVU264
 860              		.loc 3 118 18 is_stmt 0 view .LVU265
 861 007c B8F90890 		ldrsh	r9, [r8, #8]
 862              	.LVL82:
 863              		.loc 3 118 18 view .LVU266
 864              	.LBE130:
 865              	.LBE129:
1013:lvgl/src/lv_widgets/lv_roller.c **** 
 866              		.loc 1 1013 9 is_stmt 1 view .LVU267
1013:lvgl/src/lv_widgets/lv_roller.c **** 
 867              		.loc 1 1013 42 is_stmt 0 view .LVU268
 868 0080 2846     		mov	r0, r5
 869 0082 FFF7FEFF 		bl	lv_obj_get_height
 870              	.LVL83:
 871 0086 8046     		mov	r8, r0
 872              	.LVL84:
1015:lvgl/src/lv_widgets/lv_roller.c **** 
 873              		.loc 1 1015 9 is_stmt 1 view .LVU269
1015:lvgl/src/lv_widgets/lv_roller.c **** 
 874              		.loc 1 1015 28 is_stmt 0 view .LVU270
 875 0088 2846     		mov	r0, r5
 876 008a FFF7FEFF 		bl	get_label
 877              	.LVL85:
1017:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 878              		.loc 1 1017 9 is_stmt 1 view .LVU271
1017:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 879              		.loc 1 1017 33 is_stmt 0 view .LVU272
 880 008e B4F84A30 		ldrh	r3, [r4, #74]
1017:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 881              		.loc 1 1017 56 view .LVU273
 882 0092 4F44     		add	r7, r7, r9
 883              	.LVL86:
1017:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 884              		.loc 1 1017 85 view .LVU274
 885 0094 418A     		ldrh	r1, [r0, #18]
1017:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 886              		.loc 1 1017 70 view .LVU275
 887 0096 17FB0317 		smlabb	r7, r7, r3, r1
 888 009a BFB2     		uxth	r7, r7
1017:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 889              		.loc 1 1017 110 view .LVU276
 890 009c 718A     		ldrh	r1, [r6, #18]
 891              	.LVL87:
1018:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_y(roller_scrl, new_y);
 892              		.loc 1 1018 9 is_stmt 1 view .LVU277
1018:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_y(roller_scrl, new_y);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 48


 893              		.loc 1 1018 42 is_stmt 0 view .LVU278
 894 009e A8EB0908 		sub	r8, r8, r9
 895              	.LVL88:
1018:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_y(roller_scrl, new_y);
 896              		.loc 1 1018 52 view .LVU279
 897 00a2 08EBD878 		add	r8, r8, r8, lsr #31
1018:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_y(roller_scrl, new_y);
 898              		.loc 1 1018 37 view .LVU280
 899 00a6 CF1B     		subs	r7, r1, r7
 900              	.LVL89:
1018:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_y(roller_scrl, new_y);
 901              		.loc 1 1018 37 view .LVU281
 902 00a8 07EB6808 		add	r8, r7, r8, asr #1
 903              	.LVL90:
1019:lvgl/src/lv_widgets/lv_roller.c ****     }
 904              		.loc 1 1019 9 is_stmt 1 view .LVU282
 905 00ac 0FFA88F1 		sxth	r1, r8
 906 00b0 3046     		mov	r0, r6
 907              	.LVL91:
1019:lvgl/src/lv_widgets/lv_roller.c ****     }
 908              		.loc 1 1019 9 is_stmt 0 view .LVU283
 909 00b2 FFF7FEFF 		bl	lv_obj_set_y
 910              	.LVL92:
 911              	.LBE124:
1021:lvgl/src/lv_widgets/lv_roller.c **** 
 912              		.loc 1 1021 1 view .LVU284
 913 00b6 B0E7     		b	.L39
 914              	.L44:
 915              		.align	2
 916              	.L43:
 917 00b8 25499224 		.word	613566757
 918              		.cfi_endproc
 919              	.LFE497:
 921              		.section	.text.scroll_anim_ready_cb,"ax",%progbits
 922              		.align	1
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu fpv4-sp-d16
 928              	scroll_anim_ready_cb:
 929              	.LVL93:
 930              	.LFB499:
1029:lvgl/src/lv_widgets/lv_roller.c **** 
1030:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
1031:lvgl/src/lv_widgets/lv_roller.c **** static void scroll_anim_ready_cb(lv_anim_t * a)
1032:lvgl/src/lv_widgets/lv_roller.c **** {
 931              		.loc 1 1032 1 is_stmt 1 view -0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              		.loc 1 1032 1 is_stmt 0 view .LVU286
 936 0000 08B5     		push	{r3, lr}
 937              	.LCFI11:
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 3, -8
 940              		.cfi_offset 14, -4
1033:lvgl/src/lv_widgets/lv_roller.c ****     inf_normalize(a->var);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 49


 941              		.loc 1 1033 5 is_stmt 1 view .LVU287
 942 0002 0068     		ldr	r0, [r0]
 943              	.LVL94:
 944              		.loc 1 1033 5 is_stmt 0 view .LVU288
 945 0004 FFF7FEFF 		bl	inf_normalize
 946              	.LVL95:
1034:lvgl/src/lv_widgets/lv_roller.c **** }
 947              		.loc 1 1034 1 view .LVU289
 948 0008 08BD     		pop	{r3, pc}
 949              		.cfi_endproc
 950              	.LFE499:
 952              		.section	.text.refr_position,"ax",%progbits
 953              		.align	1
 954              		.syntax unified
 955              		.thumb
 956              		.thumb_func
 957              		.fpu fpv4-sp-d16
 959              	refr_position:
 960              	.LVL96:
 961              	.LFB493:
 833:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION == 0
 962              		.loc 1 833 1 is_stmt 1 view -0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 72
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 833:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION == 0
 966              		.loc 1 833 1 is_stmt 0 view .LVU291
 967 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 968              	.LCFI12:
 969              		.cfi_def_cfa_offset 36
 970              		.cfi_offset 4, -36
 971              		.cfi_offset 5, -32
 972              		.cfi_offset 6, -28
 973              		.cfi_offset 7, -24
 974              		.cfi_offset 8, -20
 975              		.cfi_offset 9, -16
 976              		.cfi_offset 10, -12
 977              		.cfi_offset 11, -8
 978              		.cfi_offset 14, -4
 979 0004 93B0     		sub	sp, sp, #76
 980              	.LCFI13:
 981              		.cfi_def_cfa_offset 112
 982 0006 8246     		mov	r10, r0
 983 0008 0F46     		mov	r7, r1
 838:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext          = lv_obj_get_ext_attr(roller);
 984              		.loc 1 838 5 is_stmt 1 view .LVU292
 838:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext          = lv_obj_get_ext_attr(roller);
 985              		.loc 1 838 38 is_stmt 0 view .LVU293
 986 000a FFF7FEFF 		bl	lv_page_get_scrollable
 987              	.LVL97:
 838:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext          = lv_obj_get_ext_attr(roller);
 988              		.loc 1 838 38 view .LVU294
 989 000e 0646     		mov	r6, r0
 990              	.LVL98:
 839:lvgl/src/lv_widgets/lv_roller.c ****     const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
 991              		.loc 1 839 5 is_stmt 1 view .LVU295
 839:lvgl/src/lv_widgets/lv_roller.c ****     const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 50


 992              		.loc 1 839 38 is_stmt 0 view .LVU296
 993 0010 5046     		mov	r0, r10
 994              	.LVL99:
 839:lvgl/src/lv_widgets/lv_roller.c ****     const lv_font_t * font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_BG);
 995              		.loc 1 839 38 view .LVU297
 996 0012 FFF7FEFF 		bl	lv_obj_get_ext_attr
 997              	.LVL100:
 998 0016 8346     		mov	fp, r0
 999              	.LVL101:
 840:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
 1000              		.loc 1 840 5 is_stmt 1 view .LVU298
 1001              	.LBB131:
 1002              	.LBI131:
 1003              		.loc 2 168 1 view .LVU299
 1004              	.LBB132:
 1005              		.loc 2 168 1 view .LVU300
 1006 0018 48F28E02 		movw	r2, #32910
 1007 001c 0021     		movs	r1, #0
 1008 001e 5046     		mov	r0, r10
 1009              	.LVL102:
 1010              		.loc 2 168 1 is_stmt 0 view .LVU301
 1011 0020 FFF7FEFF 		bl	_lv_obj_get_style_ptr
 1012              	.LVL103:
 1013 0024 0546     		mov	r5, r0
 1014              	.LVL104:
 1015              		.loc 2 168 1 view .LVU302
 1016              	.LBE132:
 1017              	.LBE131:
 841:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t font_h              = lv_font_get_line_height(font);
 1018              		.loc 1 841 5 is_stmt 1 view .LVU303
 1019              	.LBB133:
 1020              	.LBI133:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 1021              		.loc 2 161 1 view .LVU304
 1022              	.LBB134:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 1023              		.loc 2 161 1 view .LVU305
 1024 0026 48F28102 		movw	r2, #32897
 1025 002a 0021     		movs	r1, #0
 1026 002c 5046     		mov	r0, r10
 1027              	.LVL105:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 1028              		.loc 2 161 1 is_stmt 0 view .LVU306
 1029 002e FFF7FEFF 		bl	_lv_obj_get_style_int
 1030              	.LVL106:
 1031 0032 0446     		mov	r4, r0
 1032              	.LVL107:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 1033              		.loc 2 161 1 view .LVU307
 1034              	.LBE134:
 1035              	.LBE133:
 842:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t h                   = lv_obj_get_height(roller);
 1036              		.loc 1 842 5 is_stmt 1 view .LVU308
 1037              	.LBB135:
 1038              	.LBI135:
 116:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** {
 1039              		.loc 3 116 26 view .LVU309
ARM GAS  D:\Temp\ccqwJTgn.s 			page 51


 1040              	.LBB136:
 1041              		.loc 3 118 5 view .LVU310
 1042              		.loc 3 118 18 is_stmt 0 view .LVU311
 1043 0034 B5F90880 		ldrsh	r8, [r5, #8]
 1044              	.LVL108:
 1045              		.loc 3 118 18 view .LVU312
 1046              	.LBE136:
 1047              	.LBE135:
 843:lvgl/src/lv_widgets/lv_roller.c ****     uint16_t anim_time             = lv_roller_get_anim_time(roller);
 1048              		.loc 1 843 5 is_stmt 1 view .LVU313
 843:lvgl/src/lv_widgets/lv_roller.c ****     uint16_t anim_time             = lv_roller_get_anim_time(roller);
 1049              		.loc 1 843 38 is_stmt 0 view .LVU314
 1050 0038 5046     		mov	r0, r10
 1051 003a FFF7FEFF 		bl	lv_obj_get_height
 1052              	.LVL109:
 1053 003e 0546     		mov	r5, r0
 1054              	.LVL110:
 844:lvgl/src/lv_widgets/lv_roller.c **** 
 1055              		.loc 1 844 5 is_stmt 1 view .LVU315
 1056              	.LBB137:
 1057              	.LBI137:
 1058              		.file 6 "lvgl/src/lv_widgets/lv_roller.h"
   1:lvgl/src/lv_widgets/lv_roller.h **** /**
   2:lvgl/src/lv_widgets/lv_roller.h ****  * @file lv_roller.h
   3:lvgl/src/lv_widgets/lv_roller.h ****  *
   4:lvgl/src/lv_widgets/lv_roller.h ****  */
   5:lvgl/src/lv_widgets/lv_roller.h **** 
   6:lvgl/src/lv_widgets/lv_roller.h **** #ifndef LV_ROLLER_H
   7:lvgl/src/lv_widgets/lv_roller.h **** #define LV_ROLLER_H
   8:lvgl/src/lv_widgets/lv_roller.h **** 
   9:lvgl/src/lv_widgets/lv_roller.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/lv_roller.h **** extern "C" {
  11:lvgl/src/lv_widgets/lv_roller.h **** #endif
  12:lvgl/src/lv_widgets/lv_roller.h **** 
  13:lvgl/src/lv_widgets/lv_roller.h **** /*********************
  14:lvgl/src/lv_widgets/lv_roller.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/lv_roller.h ****  *********************/
  16:lvgl/src/lv_widgets/lv_roller.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/lv_roller.h **** 
  18:lvgl/src/lv_widgets/lv_roller.h **** #if LV_USE_ROLLER != 0
  19:lvgl/src/lv_widgets/lv_roller.h **** 
  20:lvgl/src/lv_widgets/lv_roller.h **** /*Testing of dependencies*/
  21:lvgl/src/lv_widgets/lv_roller.h **** #if LV_USE_PAGE == 0
  22:lvgl/src/lv_widgets/lv_roller.h **** #error "lv_roller: lv_page is required. Enable it in lv_conf.h (LV_USE_PAGE 1)"
  23:lvgl/src/lv_widgets/lv_roller.h **** #endif
  24:lvgl/src/lv_widgets/lv_roller.h **** 
  25:lvgl/src/lv_widgets/lv_roller.h **** #include "../lv_core/lv_obj.h"
  26:lvgl/src/lv_widgets/lv_roller.h **** #include "lv_page.h"
  27:lvgl/src/lv_widgets/lv_roller.h **** #include "lv_label.h"
  28:lvgl/src/lv_widgets/lv_roller.h **** 
  29:lvgl/src/lv_widgets/lv_roller.h **** /*********************
  30:lvgl/src/lv_widgets/lv_roller.h ****  *      DEFINES
  31:lvgl/src/lv_widgets/lv_roller.h ****  *********************/
  32:lvgl/src/lv_widgets/lv_roller.h **** 
  33:lvgl/src/lv_widgets/lv_roller.h **** /**********************
  34:lvgl/src/lv_widgets/lv_roller.h ****  *      TYPEDEFS
  35:lvgl/src/lv_widgets/lv_roller.h ****  **********************/
ARM GAS  D:\Temp\ccqwJTgn.s 			page 52


  36:lvgl/src/lv_widgets/lv_roller.h **** 
  37:lvgl/src/lv_widgets/lv_roller.h **** /** Roller mode. */
  38:lvgl/src/lv_widgets/lv_roller.h **** enum {
  39:lvgl/src/lv_widgets/lv_roller.h ****     LV_ROLLER_MODE_NORMAL, /**< Normal mode (roller ends at the end of the options). */
  40:lvgl/src/lv_widgets/lv_roller.h ****     LV_ROLLER_MODE_INFINITE, /**< Infinite mode (roller can be scrolled forever). */
  41:lvgl/src/lv_widgets/lv_roller.h **** };
  42:lvgl/src/lv_widgets/lv_roller.h **** 
  43:lvgl/src/lv_widgets/lv_roller.h **** typedef uint8_t lv_roller_mode_t;
  44:lvgl/src/lv_widgets/lv_roller.h **** 
  45:lvgl/src/lv_widgets/lv_roller.h **** /*Data of roller*/
  46:lvgl/src/lv_widgets/lv_roller.h **** typedef struct {
  47:lvgl/src/lv_widgets/lv_roller.h ****     lv_page_ext_t page; /*Ext. of ancestor*/
  48:lvgl/src/lv_widgets/lv_roller.h **** 
  49:lvgl/src/lv_widgets/lv_roller.h ****     /*New data for this type */
  50:lvgl/src/lv_widgets/lv_roller.h ****     lv_style_list_t style_sel; /*Style of the selected option*/
  51:lvgl/src/lv_widgets/lv_roller.h ****     uint16_t option_cnt;          /*Number of options*/
  52:lvgl/src/lv_widgets/lv_roller.h ****     uint16_t sel_opt_id;          /*Index of the current option*/
  53:lvgl/src/lv_widgets/lv_roller.h ****     uint16_t sel_opt_id_ori;      /*Store the original index on focus*/
  54:lvgl/src/lv_widgets/lv_roller.h ****     lv_roller_mode_t mode : 1;
  55:lvgl/src/lv_widgets/lv_roller.h ****     uint8_t auto_fit : 1;         /*1: Automatically set the width*/
  56:lvgl/src/lv_widgets/lv_roller.h **** } lv_roller_ext_t;
  57:lvgl/src/lv_widgets/lv_roller.h **** 
  58:lvgl/src/lv_widgets/lv_roller.h **** enum {
  59:lvgl/src/lv_widgets/lv_roller.h ****     LV_ROLLER_PART_BG = LV_PAGE_PART_BG,
  60:lvgl/src/lv_widgets/lv_roller.h ****     LV_ROLLER_PART_SELECTED = _LV_PAGE_PART_VIRTUAL_LAST,
  61:lvgl/src/lv_widgets/lv_roller.h ****     _LV_ROLLER_PART_VIRTUAL_LAST,
  62:lvgl/src/lv_widgets/lv_roller.h **** };
  63:lvgl/src/lv_widgets/lv_roller.h **** typedef uint8_t lv_roller_part_t;
  64:lvgl/src/lv_widgets/lv_roller.h **** 
  65:lvgl/src/lv_widgets/lv_roller.h **** /**********************
  66:lvgl/src/lv_widgets/lv_roller.h ****  * GLOBAL PROTOTYPES
  67:lvgl/src/lv_widgets/lv_roller.h ****  **********************/
  68:lvgl/src/lv_widgets/lv_roller.h **** 
  69:lvgl/src/lv_widgets/lv_roller.h **** /**
  70:lvgl/src/lv_widgets/lv_roller.h ****  * Create a roller object
  71:lvgl/src/lv_widgets/lv_roller.h ****  * @param par pointer to an object, it will be the parent of the new roller
  72:lvgl/src/lv_widgets/lv_roller.h ****  * @param copy pointer to a roller object, if not NULL then the new object will be copied from it
  73:lvgl/src/lv_widgets/lv_roller.h ****  * @return pointer to the created roller
  74:lvgl/src/lv_widgets/lv_roller.h ****  */
  75:lvgl/src/lv_widgets/lv_roller.h **** lv_obj_t * lv_roller_create(lv_obj_t * par, const lv_obj_t * copy);
  76:lvgl/src/lv_widgets/lv_roller.h **** 
  77:lvgl/src/lv_widgets/lv_roller.h **** /*=====================
  78:lvgl/src/lv_widgets/lv_roller.h ****  * Setter functions
  79:lvgl/src/lv_widgets/lv_roller.h ****  *====================*/
  80:lvgl/src/lv_widgets/lv_roller.h **** 
  81:lvgl/src/lv_widgets/lv_roller.h **** /**
  82:lvgl/src/lv_widgets/lv_roller.h ****  * Set the options on a roller
  83:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to roller object
  84:lvgl/src/lv_widgets/lv_roller.h ****  * @param options a string with '\n' separated options. E.g. "One\nTwo\nThree"
  85:lvgl/src/lv_widgets/lv_roller.h ****  * @param mode `LV_ROLLER_MODE_NORMAL` or `LV_ROLLER_MODE_INFINITE`
  86:lvgl/src/lv_widgets/lv_roller.h ****  */
  87:lvgl/src/lv_widgets/lv_roller.h **** void lv_roller_set_options(lv_obj_t * roller, const char * options, lv_roller_mode_t mode);
  88:lvgl/src/lv_widgets/lv_roller.h **** 
  89:lvgl/src/lv_widgets/lv_roller.h **** /**
  90:lvgl/src/lv_widgets/lv_roller.h ****  * Set the align of the roller's options (left, right or center[default])
  91:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller - pointer to a roller object
  92:lvgl/src/lv_widgets/lv_roller.h ****  * @param align - one of lv_label_align_t values (left, right, center)
ARM GAS  D:\Temp\ccqwJTgn.s 			page 53


  93:lvgl/src/lv_widgets/lv_roller.h ****  */
  94:lvgl/src/lv_widgets/lv_roller.h **** void lv_roller_set_align(lv_obj_t * roller, lv_label_align_t align);
  95:lvgl/src/lv_widgets/lv_roller.h **** 
  96:lvgl/src/lv_widgets/lv_roller.h **** /**
  97:lvgl/src/lv_widgets/lv_roller.h ****  * Set the selected option
  98:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to a roller object
  99:lvgl/src/lv_widgets/lv_roller.h ****  * @param sel_opt id of the selected option (0 ... number of option - 1);
 100:lvgl/src/lv_widgets/lv_roller.h ****  * @param anim LV_ANIM_ON: set with animation; LV_ANIM_OFF set immediately
 101:lvgl/src/lv_widgets/lv_roller.h ****  */
 102:lvgl/src/lv_widgets/lv_roller.h **** void lv_roller_set_selected(lv_obj_t * roller, uint16_t sel_opt, lv_anim_enable_t anim);
 103:lvgl/src/lv_widgets/lv_roller.h **** 
 104:lvgl/src/lv_widgets/lv_roller.h **** /**
 105:lvgl/src/lv_widgets/lv_roller.h ****  * Set the height to show the given number of rows (options)
 106:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to a roller object
 107:lvgl/src/lv_widgets/lv_roller.h ****  * @param row_cnt number of desired visible rows
 108:lvgl/src/lv_widgets/lv_roller.h ****  */
 109:lvgl/src/lv_widgets/lv_roller.h **** void lv_roller_set_visible_row_count(lv_obj_t * roller, uint8_t row_cnt);
 110:lvgl/src/lv_widgets/lv_roller.h **** 
 111:lvgl/src/lv_widgets/lv_roller.h **** /**
 112:lvgl/src/lv_widgets/lv_roller.h ****  * Allow automatically setting the width of roller according to it's content.
 113:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to a roller object
 114:lvgl/src/lv_widgets/lv_roller.h ****  * @param auto_fit true: enable auto fit
 115:lvgl/src/lv_widgets/lv_roller.h ****  */
 116:lvgl/src/lv_widgets/lv_roller.h **** void lv_roller_set_auto_fit(lv_obj_t * roller, bool auto_fit);
 117:lvgl/src/lv_widgets/lv_roller.h **** 
 118:lvgl/src/lv_widgets/lv_roller.h **** /**
 119:lvgl/src/lv_widgets/lv_roller.h ****  * Set the open/close animation time.
 120:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to a roller object
 121:lvgl/src/lv_widgets/lv_roller.h ****  * @param anim_time: open/close animation time [ms]
 122:lvgl/src/lv_widgets/lv_roller.h ****  */
 123:lvgl/src/lv_widgets/lv_roller.h **** static inline void lv_roller_set_anim_time(lv_obj_t * roller, uint16_t anim_time)
 124:lvgl/src/lv_widgets/lv_roller.h **** {
 125:lvgl/src/lv_widgets/lv_roller.h ****     lv_page_set_anim_time(roller, anim_time);
 126:lvgl/src/lv_widgets/lv_roller.h **** }
 127:lvgl/src/lv_widgets/lv_roller.h **** 
 128:lvgl/src/lv_widgets/lv_roller.h **** /*=====================
 129:lvgl/src/lv_widgets/lv_roller.h ****  * Getter functions
 130:lvgl/src/lv_widgets/lv_roller.h ****  *====================*/
 131:lvgl/src/lv_widgets/lv_roller.h **** /**
 132:lvgl/src/lv_widgets/lv_roller.h ****  * Get the id of the selected option
 133:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to a roller object
 134:lvgl/src/lv_widgets/lv_roller.h ****  * @return id of the selected option (0 ... number of option - 1);
 135:lvgl/src/lv_widgets/lv_roller.h ****  */
 136:lvgl/src/lv_widgets/lv_roller.h **** uint16_t lv_roller_get_selected(const lv_obj_t * roller);
 137:lvgl/src/lv_widgets/lv_roller.h **** 
 138:lvgl/src/lv_widgets/lv_roller.h **** /**
 139:lvgl/src/lv_widgets/lv_roller.h ****  * Get the total number of options
 140:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to a roller object
 141:lvgl/src/lv_widgets/lv_roller.h ****  * @return the total number of options in the list
 142:lvgl/src/lv_widgets/lv_roller.h ****  */
 143:lvgl/src/lv_widgets/lv_roller.h **** uint16_t lv_roller_get_option_cnt(const lv_obj_t * roller);
 144:lvgl/src/lv_widgets/lv_roller.h **** 
 145:lvgl/src/lv_widgets/lv_roller.h **** /**
 146:lvgl/src/lv_widgets/lv_roller.h ****  * Get the current selected option as a string
 147:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to roller object
 148:lvgl/src/lv_widgets/lv_roller.h ****  * @param buf pointer to an array to store the string
 149:lvgl/src/lv_widgets/lv_roller.h ****  * @param buf_size size of `buf` in bytes. 0: to ignore it.
ARM GAS  D:\Temp\ccqwJTgn.s 			page 54


 150:lvgl/src/lv_widgets/lv_roller.h ****  */
 151:lvgl/src/lv_widgets/lv_roller.h **** void lv_roller_get_selected_str(const lv_obj_t * roller, char * buf, uint32_t buf_size);
 152:lvgl/src/lv_widgets/lv_roller.h **** 
 153:lvgl/src/lv_widgets/lv_roller.h **** /**
 154:lvgl/src/lv_widgets/lv_roller.h ****  * Get the align attribute. Default alignment after _create is LV_LABEL_ALIGN_CENTER
 155:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to a roller object
 156:lvgl/src/lv_widgets/lv_roller.h ****  * @return LV_LABEL_ALIGN_LEFT, LV_LABEL_ALIGN_RIGHT or LV_LABEL_ALIGN_CENTER
 157:lvgl/src/lv_widgets/lv_roller.h ****  */
 158:lvgl/src/lv_widgets/lv_roller.h **** lv_label_align_t lv_roller_get_align(const lv_obj_t * roller);
 159:lvgl/src/lv_widgets/lv_roller.h **** 
 160:lvgl/src/lv_widgets/lv_roller.h **** /**
 161:lvgl/src/lv_widgets/lv_roller.h ****  * Get whether the auto fit option is enabled or not.
 162:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to a roller object
 163:lvgl/src/lv_widgets/lv_roller.h ****  * @return true: auto fit is enabled
 164:lvgl/src/lv_widgets/lv_roller.h ****  */
 165:lvgl/src/lv_widgets/lv_roller.h **** bool lv_roller_get_auto_fit(lv_obj_t * roller);
 166:lvgl/src/lv_widgets/lv_roller.h **** 
 167:lvgl/src/lv_widgets/lv_roller.h **** /**
 168:lvgl/src/lv_widgets/lv_roller.h ****  * Get the options of a roller
 169:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to roller object
 170:lvgl/src/lv_widgets/lv_roller.h ****  * @return the options separated by '\n'-s (E.g. "Option1\nOption2\nOption3")
 171:lvgl/src/lv_widgets/lv_roller.h ****  */
 172:lvgl/src/lv_widgets/lv_roller.h **** const char * lv_roller_get_options(const lv_obj_t * roller);
 173:lvgl/src/lv_widgets/lv_roller.h **** 
 174:lvgl/src/lv_widgets/lv_roller.h **** /**
 175:lvgl/src/lv_widgets/lv_roller.h ****  * Get the open/close animation time.
 176:lvgl/src/lv_widgets/lv_roller.h ****  * @param roller pointer to a roller
 177:lvgl/src/lv_widgets/lv_roller.h ****  * @return open/close animation time [ms]
 178:lvgl/src/lv_widgets/lv_roller.h ****  */
 179:lvgl/src/lv_widgets/lv_roller.h **** static inline uint16_t lv_roller_get_anim_time(const lv_obj_t * roller)
 1059              		.loc 6 179 24 view .LVU316
 1060              	.LBB138:
 180:lvgl/src/lv_widgets/lv_roller.h **** {
 181:lvgl/src/lv_widgets/lv_roller.h ****     return lv_page_get_anim_time(roller);
 1061              		.loc 6 181 5 view .LVU317
 1062              		.loc 6 181 12 is_stmt 0 view .LVU318
 1063 0040 5046     		mov	r0, r10
 1064 0042 FFF7FEFF 		bl	lv_page_get_anim_time
 1065              	.LVL111:
 1066 0046 8146     		mov	r9, r0
 1067              	.LVL112:
 1068              		.loc 6 181 12 view .LVU319
 1069              	.LBE138:
 1070              	.LBE137:
 848:lvgl/src/lv_widgets/lv_roller.c ****         inf_normalize(roller_scrl);
 1071              		.loc 1 848 5 is_stmt 1 view .LVU320
 848:lvgl/src/lv_widgets/lv_roller.c ****         inf_normalize(roller_scrl);
 1072              		.loc 1 848 7 is_stmt 0 view .LVU321
 1073 0048 07B1     		cbz	r7, .L48
 848:lvgl/src/lv_widgets/lv_roller.c ****         inf_normalize(roller_scrl);
 1074              		.loc 1 848 31 discriminator 1 view .LVU322
 1075 004a 10B9     		cbnz	r0, .L49
 1076              	.L48:
 849:lvgl/src/lv_widgets/lv_roller.c ****     }
 1077              		.loc 1 849 9 is_stmt 1 view .LVU323
 1078 004c 3046     		mov	r0, r6
 1079              	.LVL113:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 55


 849:lvgl/src/lv_widgets/lv_roller.c ****     }
 1080              		.loc 1 849 9 is_stmt 0 view .LVU324
 1081 004e FFF7FEFF 		bl	inf_normalize
 1082              	.LVL114:
 1083              	.L49:
 852:lvgl/src/lv_widgets/lv_roller.c **** 
 1084              		.loc 1 852 5 is_stmt 1 view .LVU325
 852:lvgl/src/lv_widgets/lv_roller.c **** 
 1085              		.loc 1 852 24 is_stmt 0 view .LVU326
 1086 0052 5046     		mov	r0, r10
 1087 0054 FFF7FEFF 		bl	get_label
 1088              	.LVL115:
 854:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t line_y1 = id * (font_h + line_space) + label->coords.y1 - roller_scrl->coords.y1;
 1089              		.loc 1 854 5 is_stmt 1 view .LVU327
 854:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t line_y1 = id * (font_h + line_space) + label->coords.y1 - roller_scrl->coords.y1;
 1090              		.loc 1 854 21 is_stmt 0 view .LVU328
 1091 0058 BBF84A20 		ldrh	r2, [fp, #74]
 1092              	.LVL116:
 855:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 1093              		.loc 1 855 5 is_stmt 1 view .LVU329
 855:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 1094              		.loc 1 855 39 is_stmt 0 view .LVU330
 1095 005c 4444     		add	r4, r4, r8
 1096              	.LVL117:
 855:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 1097              		.loc 1 855 68 view .LVU331
 1098 005e 438A     		ldrh	r3, [r0, #18]
 855:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 1099              		.loc 1 855 53 view .LVU332
 1100 0060 14FB0234 		smlabb	r4, r4, r2, r3
 1101 0064 A4B2     		uxth	r4, r4
 855:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t new_y = -line_y1 + (h - font_h) / 2;
 1102              		.loc 1 855 93 view .LVU333
 1103 0066 738A     		ldrh	r3, [r6, #18]
 1104              	.LVL118:
 856:lvgl/src/lv_widgets/lv_roller.c **** 
 1105              		.loc 1 856 5 is_stmt 1 view .LVU334
 856:lvgl/src/lv_widgets/lv_roller.c **** 
 1106              		.loc 1 856 38 is_stmt 0 view .LVU335
 1107 0068 A5EB0805 		sub	r5, r5, r8
 1108              	.LVL119:
 856:lvgl/src/lv_widgets/lv_roller.c **** 
 1109              		.loc 1 856 48 view .LVU336
 1110 006c 05EBD575 		add	r5, r5, r5, lsr #31
 856:lvgl/src/lv_widgets/lv_roller.c **** 
 1111              		.loc 1 856 33 view .LVU337
 1112 0070 1C1B     		subs	r4, r3, r4
 1113              	.LVL120:
 856:lvgl/src/lv_widgets/lv_roller.c **** 
 1114              		.loc 1 856 33 view .LVU338
 1115 0072 04EB6504 		add	r4, r4, r5, asr #1
 856:lvgl/src/lv_widgets/lv_roller.c **** 
 1116              		.loc 1 856 16 view .LVU339
 1117 0076 24B2     		sxth	r4, r4
 1118              	.LVL121:
 858:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 1119              		.loc 1 858 5 is_stmt 1 view .LVU340
ARM GAS  D:\Temp\ccqwJTgn.s 			page 56


 858:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 1120              		.loc 1 858 7 is_stmt 0 view .LVU341
 1121 0078 17B1     		cbz	r7, .L50
 858:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 1122              		.loc 1 858 31 discriminator 1 view .LVU342
 1123 007a B9F1000F 		cmp	r9, #0
 1124 007e 0AD1     		bne	.L51
 1125              	.L50:
 860:lvgl/src/lv_widgets/lv_roller.c **** #endif
 1126              		.loc 1 860 9 is_stmt 1 view .LVU343
 1127 0080 0F49     		ldr	r1, .L54
 1128 0082 3046     		mov	r0, r6
 1129              	.LVL122:
 860:lvgl/src/lv_widgets/lv_roller.c **** #endif
 1130              		.loc 1 860 9 is_stmt 0 view .LVU344
 1131 0084 FFF7FEFF 		bl	lv_anim_del
 1132              	.LVL123:
 862:lvgl/src/lv_widgets/lv_roller.c ****     }
 1133              		.loc 1 862 9 is_stmt 1 view .LVU345
 1134 0088 2146     		mov	r1, r4
 1135 008a 3046     		mov	r0, r6
 1136 008c FFF7FEFF 		bl	lv_obj_set_y
 1137              	.LVL124:
 1138              	.L47:
 876:lvgl/src/lv_widgets/lv_roller.c **** 
 1139              		.loc 1 876 1 is_stmt 0 view .LVU346
 1140 0090 13B0     		add	sp, sp, #76
 1141              	.LCFI14:
 1142              		.cfi_remember_state
 1143              		.cfi_def_cfa_offset 36
 1144              		@ sp needed
 1145 0092 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1146              	.LVL125:
 1147              	.L51:
 1148              	.LCFI15:
 1149              		.cfi_restore_state
 1150              	.LBB139:
 866:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_init(&a);
 1151              		.loc 1 866 9 is_stmt 1 view .LVU347
 867:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_set_var(&a, roller_scrl);
 1152              		.loc 1 867 9 view .LVU348
 1153 0096 01A8     		add	r0, sp, #4
 1154              	.LVL126:
 867:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_set_var(&a, roller_scrl);
 1155              		.loc 1 867 9 is_stmt 0 view .LVU349
 1156 0098 FFF7FEFF 		bl	lv_anim_init
 1157              	.LVL127:
 868:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_set_exec_cb(&a, (lv_anim_exec_xcb_t)lv_obj_set_y);
 1158              		.loc 1 868 9 is_stmt 1 view .LVU350
 1159              	.LBB140:
 1160              	.LBI140:
 1161              		.file 7 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h"
   1:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
   2:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @file anim.h
   3:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *
   4:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
   5:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 57


   6:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #ifndef ANIM_H
   7:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #define ANIM_H
   8:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
   9:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** extern "C" {
  11:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #endif
  12:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  13:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /*********************
  14:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *********************/
  16:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  18:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include <stdint.h>
  19:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include <stdbool.h>
  20:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include <string.h>
  21:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #include "lv_mem.h"
  22:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  23:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /*********************
  24:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *      DEFINES
  25:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *********************/
  26:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  27:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**********************
  28:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *      TYPEDEFS
  29:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  **********************/
  30:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  31:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Can be used to indicate if animations are enabled or disabled in a case*/
  32:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** enum {
  33:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     LV_ANIM_OFF,
  34:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     LV_ANIM_ON,
  35:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** };
  36:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  37:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef uint8_t lv_anim_enable_t;
  38:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  39:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Type of the animated value*/
  40:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef lv_coord_t lv_anim_value_t;
  41:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  42:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #if LV_USE_ANIMATION
  43:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  44:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #define LV_ANIM_REPEAT_INFINITE      0xFFFF
  45:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  46:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** struct _lv_anim_t;
  47:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** struct _lv_anim_path_t;
  48:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Get the current value during an animation*/
  49:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef lv_anim_value_t (*lv_anim_path_cb_t)(const struct _lv_anim_path_t *, const struct _lv_anim_
  50:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  51:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef struct _lv_anim_path_t {
  52:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_path_cb_t cb;
  53:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     void * user_data;
  54:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** } lv_anim_path_t;
  55:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  56:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Generic prototype of "animator" functions.
  57:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * First parameter is the variable to animate.
  58:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Second parameter is the value to set.
  59:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Compatible with `lv_xxx_set_yyy(obj, value)` functions
  60:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * The `x` in `_xcb_t` means its not a fully generic prototype because
  61:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * it doesn't receive `lv_anim_t *` as its first argument*/
  62:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_exec_xcb_t)(void *, lv_anim_value_t);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 58


  63:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  64:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Same as `lv_anim_exec_xcb_t` but receives `lv_anim_t *` as the first parameter.
  65:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * It's more consistent but less convenient. Might be used by binding generator functions.*/
  66:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_custom_exec_cb_t)(struct _lv_anim_t *, lv_anim_value_t);
  67:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  68:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Callback to call when the animation is ready*/
  69:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_ready_cb_t)(struct _lv_anim_t *);
  70:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  71:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Callback to call when the animation really stars (considering `delay`)*/
  72:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef void (*lv_anim_start_cb_t)(struct _lv_anim_t *);
  73:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  74:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /** Describes an animation*/
  75:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** typedef struct _lv_anim_t {
  76:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     void * var;                  /**<Variable to animate*/
  77:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_exec_xcb_t exec_cb;   /**< Function to execute to animate*/
  78:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_start_cb_t start_cb; /**< Call it when the animation is starts (considering `delay`)*/
  79:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_ready_cb_t ready_cb; /**< Call it when the animation is ready*/
  80:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_path_t path;         /**< Describe the path (curve) of animations*/
  81:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t start;               /**< Start value*/
  82:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t current;             /**< Current value */
  83:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t end;                 /**< End value*/
  84:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t time;               /**< Animation time in ms*/
  85:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     int32_t act_time;            /**< Current time in animation. Set to negative to make delay.*/
  86:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t playback_delay;     /**< Wait before play back*/
  87:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t playback_time;      /**< Duration of playback animation*/
  88:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t repeat_delay;       /**< Wait before repeat*/
  89:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint16_t repeat_cnt;         /**< Repeat count for the animation*/
  90:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint8_t early_apply  : 1;    /**< 1: Apply start value immediately even is there is `delay` */
  91:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #if LV_USE_USER_DATA
  92:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     lv_anim_user_data_t user_data; /**< Custom user data*/
  93:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** #endif
  94:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
  95:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     /*Animation system use these - user shouldn't set*/
  96:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t time_orig;
  97:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint8_t playback_now : 1; /**< Play back is in progress*/
  98:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     uint32_t has_run : 1;     /**< Indicates the animation has run in this round*/
  99:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** } lv_anim_t;
 100:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 101:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**********************
 102:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * GLOBAL PROTOTYPES
 103:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  **********************/
 104:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 105:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 106:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Init. the animation module
 107:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 108:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** void _lv_anim_core_init(void);
 109:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 110:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 111:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Initialize an animation variable.
 112:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * E.g.:
 113:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * lv_anim_t a;
 114:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * lv_anim_init(&a);
 115:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * lv_anim_set_...(&a);
 116:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an `lv_anim_t` variable to initialize
 117:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 118:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** void lv_anim_init(lv_anim_t * a);
 119:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 59


 120:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 121:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a variable to animate
 122:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 123:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param var pointer to a variable to animate
 124:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 125:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_var(lv_anim_t * a, void * var)
 1162              		.loc 7 125 20 view .LVU351
 1163              	.LBB141:
 126:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 127:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->var     = var;
 1164              		.loc 7 127 5 view .LVU352
 1165              		.loc 7 127 16 is_stmt 0 view .LVU353
 1166 009c 0196     		str	r6, [sp, #4]
 1167              	.LVL128:
 1168              		.loc 7 127 16 view .LVU354
 1169              	.LBE141:
 1170              	.LBE140:
 869:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_set_values(&a, lv_obj_get_y(roller_scrl), new_y);
 1171              		.loc 1 869 9 is_stmt 1 view .LVU355
 1172              	.LBB142:
 1173              	.LBI142:
 128:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 129:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 130:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 131:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a function to animate `var`
 132:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 133:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param exec_cb a function to execute during animation
 134:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *                LittelvGL's built-in functions can be used.
 135:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *                E.g. lv_obj_set_x
 136:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 137:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_exec_cb(lv_anim_t * a, lv_anim_exec_xcb_t exec_cb)
 1174              		.loc 7 137 20 view .LVU356
 1175              	.LBB143:
 138:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 139:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->exec_cb = exec_cb;
 1176              		.loc 7 139 5 view .LVU357
 1177              		.loc 7 139 16 is_stmt 0 view .LVU358
 1178 009e 084B     		ldr	r3, .L54
 1179 00a0 0293     		str	r3, [sp, #8]
 1180              	.LVL129:
 1181              		.loc 7 139 16 view .LVU359
 1182              	.LBE143:
 1183              	.LBE142:
 870:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_set_time(&a, anim_time);
 1184              		.loc 1 870 9 is_stmt 1 view .LVU360
 1185 00a2 3046     		mov	r0, r6
 1186 00a4 FFF7FEFF 		bl	lv_obj_get_y
 1187              	.LVL130:
 1188              	.LBB144:
 1189              	.LBI144:
 140:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 141:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 142:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 143:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set the duration of an animation
 144:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 145:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param duration duration of the animation in milliseconds
 146:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
ARM GAS  D:\Temp\ccqwJTgn.s 			page 60


 147:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_time(lv_anim_t * a, uint32_t duration)
 148:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->time     = duration;
 150:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 151:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 152:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 153:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a delay before starting the animation
 154:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 155:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param delay delay before the animation in milliseconds
 156:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 157:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_delay(lv_anim_t * a, uint32_t delay)
 158:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 159:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->act_time = -(int32_t)(delay);
 160:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 161:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 162:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 163:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set the start and end values of an animation
 164:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 165:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param start the start value
 166:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param end the end value
 167:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 168:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_values(lv_anim_t * a, lv_anim_value_t start, lv_anim_value_t end)
 1190              		.loc 7 168 20 view .LVU361
 1191              	.LBB145:
 169:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 170:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->start = start;
 1192              		.loc 7 170 5 view .LVU362
 1193              		.loc 7 170 14 is_stmt 0 view .LVU363
 1194 00a8 0790     		str	r0, [sp, #28]
 171:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->current = start;
 1195              		.loc 7 171 5 is_stmt 1 view .LVU364
 1196              		.loc 7 171 16 is_stmt 0 view .LVU365
 1197 00aa 0890     		str	r0, [sp, #32]
 172:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->end   = end;
 1198              		.loc 7 172 5 is_stmt 1 view .LVU366
 1199              		.loc 7 172 14 is_stmt 0 view .LVU367
 1200 00ac 0994     		str	r4, [sp, #36]
 1201              	.LVL131:
 1202              		.loc 7 172 14 view .LVU368
 1203              	.LBE145:
 1204              	.LBE144:
 871:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_set_ready_cb(&a, scroll_anim_ready_cb);
 1205              		.loc 1 871 9 is_stmt 1 view .LVU369
 1206              	.LBB146:
 1207              	.LBI146:
 147:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 1208              		.loc 7 147 20 view .LVU370
 1209              	.LBB147:
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 1210              		.loc 7 149 5 view .LVU371
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 1211              		.loc 7 149 17 is_stmt 0 view .LVU372
 1212 00ae CDF82890 		str	r9, [sp, #40]
 1213              	.LVL132:
 149:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 1214              		.loc 7 149 17 view .LVU373
 1215              	.LBE147:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 61


 1216              	.LBE146:
 872:lvgl/src/lv_widgets/lv_roller.c ****         lv_anim_start(&a);
 1217              		.loc 1 872 9 is_stmt 1 view .LVU374
 1218              	.LBB148:
 1219              	.LBI148:
 173:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 174:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 175:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 176:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Similar to `lv_anim_set_exec_cb` but `lv_anim_custom_exec_cb_t` receives
 177:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * `lv_anim_t * ` as its first parameter instead of `void *`.
 178:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * This function might be used when LVGL is binded to other languages because
 179:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * it's more consistent to have `lv_anim_t *` as first parameter.
 180:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * The variable to animate can be stored in the animation's `user_sata`
 181:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 182:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param exec_cb a function to execute.
 183:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 184:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_custom_exec_cb(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)
 185:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 186:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->var     = a;
 187:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->exec_cb = (lv_anim_exec_xcb_t)exec_cb;
 188:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 189:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 190:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 191:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set the path (curve) of the animation.
 192:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 193:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param path_cb a function the get the current value of the animation.
 194:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  *                The built in functions starts with `lv_anim_path_...`
 195:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 196:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_path(lv_anim_t * a, const lv_anim_path_t * path)
 197:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 198:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     _lv_memcpy_small(&a->path, path, sizeof(lv_anim_path_t));
 199:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 200:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 201:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 202:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a function call when the animation really starts (considering `delay`)
 203:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 204:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param start_cb a function call when the animation starts
 205:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 206:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_start_cb(lv_anim_t * a, lv_anim_ready_cb_t start_cb)
 207:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 208:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->start_cb = start_cb;
 209:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** }
 210:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** 
 211:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** /**
 212:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * Set a function call when the animation is ready
 213:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param a pointer to an initialized `lv_anim_t` variable
 214:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  * @param ready_cb a function call when the animation is ready
 215:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****  */
 216:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** static inline void lv_anim_set_ready_cb(lv_anim_t * a, lv_anim_ready_cb_t ready_cb)
 1220              		.loc 7 216 20 view .LVU375
 1221              	.LBB149:
 217:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h **** {
 218:lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h ****     a->ready_cb = ready_cb;
 1222              		.loc 7 218 5 view .LVU376
 1223              		.loc 7 218 17 is_stmt 0 view .LVU377
 1224 00b2 044B     		ldr	r3, .L54+4
 1225 00b4 0493     		str	r3, [sp, #16]
ARM GAS  D:\Temp\ccqwJTgn.s 			page 62


 1226              	.LVL133:
 1227              		.loc 7 218 17 view .LVU378
 1228              	.LBE149:
 1229              	.LBE148:
 873:lvgl/src/lv_widgets/lv_roller.c **** #endif
 1230              		.loc 1 873 9 is_stmt 1 view .LVU379
 1231 00b6 01A8     		add	r0, sp, #4
 1232 00b8 FFF7FEFF 		bl	lv_anim_start
 1233              	.LVL134:
 1234              	.LBE139:
 876:lvgl/src/lv_widgets/lv_roller.c **** 
 1235              		.loc 1 876 1 is_stmt 0 view .LVU380
 1236 00bc E8E7     		b	.L47
 1237              	.L55:
 1238 00be 00BF     		.align	2
 1239              	.L54:
 1240 00c0 00000000 		.word	lv_obj_set_y
 1241 00c4 00000000 		.word	scroll_anim_ready_cb
 1242              		.cfi_endproc
 1243              	.LFE493:
 1245              		.section	.text.refr_height,"ax",%progbits
 1246              		.align	1
 1247              		.syntax unified
 1248              		.thumb
 1249              		.thumb_func
 1250              		.fpu fpv4-sp-d16
 1252              	refr_height:
 1253              	.LVL135:
 1254              	.LFB496:
 979:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 1255              		.loc 1 979 1 is_stmt 1 view -0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 979:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 1259              		.loc 1 979 1 is_stmt 0 view .LVU382
 1260 0000 70B5     		push	{r4, r5, r6, lr}
 1261              	.LCFI16:
 1262              		.cfi_def_cfa_offset 16
 1263              		.cfi_offset 4, -16
 1264              		.cfi_offset 5, -12
 1265              		.cfi_offset 6, -8
 1266              		.cfi_offset 14, -4
 1267 0002 0446     		mov	r4, r0
 980:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return;
 1268              		.loc 1 980 5 is_stmt 1 view .LVU383
 980:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return;
 1269              		.loc 1 980 24 is_stmt 0 view .LVU384
 1270 0004 FFF7FEFF 		bl	get_label
 1271              	.LVL136:
 981:lvgl/src/lv_widgets/lv_roller.c **** 
 1272              		.loc 1 981 5 is_stmt 1 view .LVU385
 981:lvgl/src/lv_widgets/lv_roller.c **** 
 1273              		.loc 1 981 7 is_stmt 0 view .LVU386
 1274 0008 D8B1     		cbz	r0, .L56
 1275 000a 0546     		mov	r5, r0
 983:lvgl/src/lv_widgets/lv_roller.c **** 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 63


 1276              		.loc 1 983 5 is_stmt 1 view .LVU387
 1277 000c 2046     		mov	r0, r4
 1278              	.LVL137:
 983:lvgl/src/lv_widgets/lv_roller.c **** 
 1279              		.loc 1 983 5 is_stmt 0 view .LVU388
 1280 000e FFF7FEFF 		bl	lv_page_get_scrollable
 1281              	.LVL138:
 1282 0012 0646     		mov	r6, r0
 983:lvgl/src/lv_widgets/lv_roller.c **** 
 1283              		.loc 1 983 55 view .LVU389
 1284 0014 2846     		mov	r0, r5
 1285 0016 FFF7FEFF 		bl	lv_obj_get_height
 1286              	.LVL139:
 1287 001a 85B2     		uxth	r5, r0
 1288              	.LVL140:
 983:lvgl/src/lv_widgets/lv_roller.c **** 
 1289              		.loc 1 983 82 view .LVU390
 1290 001c 2046     		mov	r0, r4
 1291 001e FFF7FEFF 		bl	lv_obj_get_height
 1292              	.LVL141:
 983:lvgl/src/lv_widgets/lv_roller.c **** 
 1293              		.loc 1 983 80 view .LVU391
 1294 0022 15FA80F1 		uxtah	r1, r5, r0
 983:lvgl/src/lv_widgets/lv_roller.c **** 
 1295              		.loc 1 983 5 view .LVU392
 1296 0026 09B2     		sxth	r1, r1
 1297 0028 3046     		mov	r0, r6
 1298 002a FFF7FEFF 		bl	lv_obj_set_height
 1299              	.LVL142:
 986:lvgl/src/lv_widgets/lv_roller.c **** #endif
 1300              		.loc 1 986 5 is_stmt 1 view .LVU393
 986:lvgl/src/lv_widgets/lv_roller.c **** #endif
 1301              		.loc 1 986 17 is_stmt 0 view .LVU394
 1302 002e 2046     		mov	r0, r4
 1303 0030 FFF7FEFF 		bl	lv_page_get_scrollable
 1304              	.LVL143:
 986:lvgl/src/lv_widgets/lv_roller.c **** #endif
 1305              		.loc 1 986 5 view .LVU395
 1306 0034 0349     		ldr	r1, .L59
 1307 0036 FFF7FEFF 		bl	lv_anim_del
 1308              	.LVL144:
 988:lvgl/src/lv_widgets/lv_roller.c **** }
 1309              		.loc 1 988 5 is_stmt 1 view .LVU396
 1310 003a 0021     		movs	r1, #0
 1311 003c 2046     		mov	r0, r4
 1312 003e FFF7FEFF 		bl	refr_position
 1313              	.LVL145:
 1314              	.L56:
 989:lvgl/src/lv_widgets/lv_roller.c **** 
 1315              		.loc 1 989 1 is_stmt 0 view .LVU397
 1316 0042 70BD     		pop	{r4, r5, r6, pc}
 1317              	.LVL146:
 1318              	.L60:
 989:lvgl/src/lv_widgets/lv_roller.c **** 
 1319              		.loc 1 989 1 view .LVU398
 1320              		.align	2
 1321              	.L59:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 64


 1322 0044 00000000 		.word	lv_obj_set_y
 1323              		.cfi_endproc
 1324              	.LFE496:
 1326              		.section	.text.lv_roller_set_selected,"ax",%progbits
 1327              		.align	1
 1328              		.global	lv_roller_set_selected
 1329              		.syntax unified
 1330              		.thumb
 1331              		.thumb_func
 1332              		.fpu fpv4-sp-d16
 1334              	lv_roller_set_selected:
 1335              	.LVL147:
 1336              	.LFB478:
 226:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 1337              		.loc 1 226 1 is_stmt 1 view -0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 226:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 1341              		.loc 1 226 1 is_stmt 0 view .LVU400
 1342 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1343              	.LCFI17:
 1344              		.cfi_def_cfa_offset 24
 1345              		.cfi_offset 3, -24
 1346              		.cfi_offset 4, -20
 1347              		.cfi_offset 5, -16
 1348              		.cfi_offset 6, -12
 1349              		.cfi_offset 7, -8
 1350              		.cfi_offset 14, -4
 1351 0002 0446     		mov	r4, r0
 1352 0004 0E46     		mov	r6, r1
 1353 0006 1546     		mov	r5, r2
 227:lvgl/src/lv_widgets/lv_roller.c **** 
 1354              		.loc 1 227 5 is_stmt 1 view .LVU401
 227:lvgl/src/lv_widgets/lv_roller.c **** 
 1355              		.loc 1 227 5 view .LVU402
 1356 0008 FFF7FEFF 		bl	lv_debug_check_null
 1357              	.LVL148:
 227:lvgl/src/lv_widgets/lv_roller.c **** 
 1358              		.loc 1 227 5 is_stmt 0 view .LVU403
 1359 000c 28B9     		cbnz	r0, .L62
 227:lvgl/src/lv_widgets/lv_roller.c **** 
 1360              		.loc 1 227 5 is_stmt 1 discriminator 1 view .LVU404
 227:lvgl/src/lv_widgets/lv_roller.c **** 
 1361              		.loc 1 227 5 discriminator 1 view .LVU405
 1362 000e 2246     		mov	r2, r4
 1363 0010 0023     		movs	r3, #0
 1364 0012 1848     		ldr	r0, .L68
 1365 0014 FFF7FEFF 		bl	lv_debug_log_error
 1366              	.LVL149:
 1367              	.L63:
 227:lvgl/src/lv_widgets/lv_roller.c **** 
 1368              		.loc 1 227 5 discriminator 1 view .LVU406
 227:lvgl/src/lv_widgets/lv_roller.c **** 
 1369              		.loc 1 227 5 discriminator 1 view .LVU407
 1370 0018 FEE7     		b	.L63
 1371              	.L62:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 65


 227:lvgl/src/lv_widgets/lv_roller.c **** 
 1372              		.loc 1 227 40 discriminator 2 view .LVU408
 237:lvgl/src/lv_widgets/lv_roller.c **** 
 1373              		.loc 1 237 5 discriminator 2 view .LVU409
 237:lvgl/src/lv_widgets/lv_roller.c **** 
 1374              		.loc 1 237 29 is_stmt 0 discriminator 2 view .LVU410
 1375 001a 2046     		mov	r0, r4
 1376 001c FFF7FEFF 		bl	lv_obj_get_ext_attr
 1377              	.LVL150:
 240:lvgl/src/lv_widgets/lv_roller.c ****         int32_t sel_opt_signed = sel_opt;
 1378              		.loc 1 240 5 is_stmt 1 discriminator 2 view .LVU411
 240:lvgl/src/lv_widgets/lv_roller.c ****         int32_t sel_opt_signed = sel_opt;
 1379              		.loc 1 240 18 is_stmt 0 discriminator 2 view .LVU412
 1380 0020 90F84E30 		ldrb	r3, [r0, #78]	@ zero_extendqisi2
 240:lvgl/src/lv_widgets/lv_roller.c ****         int32_t sel_opt_signed = sel_opt;
 1381              		.loc 1 240 7 discriminator 2 view .LVU413
 1382 0024 13F0010F 		tst	r3, #1
 1383 0028 15D0     		beq	.L64
 1384              	.LBB150:
 241:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t page = ext->sel_opt_id / LV_ROLLER_INF_PAGES;
 1385              		.loc 1 241 9 is_stmt 1 view .LVU414
 241:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t page = ext->sel_opt_id / LV_ROLLER_INF_PAGES;
 1386              		.loc 1 241 17 is_stmt 0 view .LVU415
 1387 002a 3246     		mov	r2, r6
 1388              	.LVL151:
 242:lvgl/src/lv_widgets/lv_roller.c **** 
 1389              		.loc 1 242 9 is_stmt 1 view .LVU416
 242:lvgl/src/lv_widgets/lv_roller.c **** 
 1390              		.loc 1 242 28 is_stmt 0 view .LVU417
 1391 002c B0F84A10 		ldrh	r1, [r0, #74]
 242:lvgl/src/lv_widgets/lv_roller.c **** 
 1392              		.loc 1 242 18 view .LVU418
 1393 0030 114B     		ldr	r3, .L68+4
 1394 0032 A3FB0173 		umull	r7, r3, r3, r1
 1395 0036 CF1A     		subs	r7, r1, r3
 1396 0038 03EB5703 		add	r3, r3, r7, lsr #1
 1397 003c C3F38F03 		ubfx	r3, r3, #2, #16
 1398              	.LVL152:
 247:lvgl/src/lv_widgets/lv_roller.c ****             sel_opt_signed -= page * LV_ROLLER_INF_PAGES;
 1399              		.loc 1 247 9 is_stmt 1 view .LVU419
 247:lvgl/src/lv_widgets/lv_roller.c ****             sel_opt_signed -= page * LV_ROLLER_INF_PAGES;
 1400              		.loc 1 247 11 is_stmt 0 view .LVU420
 1401 0040 0629     		cmp	r1, #6
 1402 0042 02D9     		bls	.L65
 248:lvgl/src/lv_widgets/lv_roller.c ****         }
 1403              		.loc 1 248 13 is_stmt 1 view .LVU421
 248:lvgl/src/lv_widgets/lv_roller.c ****         }
 1404              		.loc 1 248 36 is_stmt 0 view .LVU422
 1405 0044 A3EBC302 		sub	r2, r3, r3, lsl #3
 1406              	.LVL153:
 248:lvgl/src/lv_widgets/lv_roller.c ****         }
 1407              		.loc 1 248 28 view .LVU423
 1408 0048 3244     		add	r2, r2, r6
 1409              	.LVL154:
 1410              	.L65:
 251:lvgl/src/lv_widgets/lv_roller.c ****     }
 1411              		.loc 1 251 9 is_stmt 1 view .LVU424
ARM GAS  D:\Temp\ccqwJTgn.s 			page 66


 251:lvgl/src/lv_widgets/lv_roller.c ****     }
 1412              		.loc 1 251 46 is_stmt 0 view .LVU425
 1413 004a C3EBC303 		rsb	r3, r3, r3, lsl #3
 1414              	.LVL155:
 251:lvgl/src/lv_widgets/lv_roller.c ****     }
 1415              		.loc 1 251 46 view .LVU426
 1416 004e 92B2     		uxth	r2, r2
 1417              	.LVL156:
 251:lvgl/src/lv_widgets/lv_roller.c ****     }
 1418              		.loc 1 251 17 view .LVU427
 1419 0050 12FA83F3 		uxtah	r3, r2, r3
 1420 0054 9EB2     		uxth	r6, r3
 1421              	.LVL157:
 1422              	.L64:
 251:lvgl/src/lv_widgets/lv_roller.c ****     }
 1423              		.loc 1 251 17 view .LVU428
 1424              	.LBE150:
 254:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = ext->sel_opt_id;
 1425              		.loc 1 254 5 is_stmt 1 view .LVU429
 254:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = ext->sel_opt_id;
 1426              		.loc 1 254 40 is_stmt 0 view .LVU430
 1427 0056 B0F84830 		ldrh	r3, [r0, #72]
 254:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = ext->sel_opt_id;
 1428              		.loc 1 254 25 view .LVU431
 1429 005a B342     		cmp	r3, r6
 1430 005c 01D8     		bhi	.L66
 254:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = ext->sel_opt_id;
 1431              		.loc 1 254 25 discriminator 1 view .LVU432
 1432 005e 013B     		subs	r3, r3, #1
 1433 0060 9EB2     		uxth	r6, r3
 1434              	.LVL158:
 1435              	.L66:
 254:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = ext->sel_opt_id;
 1436              		.loc 1 254 25 discriminator 4 view .LVU433
 1437 0062 A0F84A60 		strh	r6, [r0, #74]	@ movhi
 255:lvgl/src/lv_widgets/lv_roller.c **** 
 1438              		.loc 1 255 5 is_stmt 1 discriminator 4 view .LVU434
 255:lvgl/src/lv_widgets/lv_roller.c **** 
 1439              		.loc 1 255 25 is_stmt 0 discriminator 4 view .LVU435
 1440 0066 A0F84C60 		strh	r6, [r0, #76]	@ movhi
 257:lvgl/src/lv_widgets/lv_roller.c **** }
 1441              		.loc 1 257 5 is_stmt 1 discriminator 4 view .LVU436
 1442 006a 2946     		mov	r1, r5
 1443 006c 2046     		mov	r0, r4
 1444              	.LVL159:
 257:lvgl/src/lv_widgets/lv_roller.c **** }
 1445              		.loc 1 257 5 is_stmt 0 discriminator 4 view .LVU437
 1446 006e FFF7FEFF 		bl	refr_position
 1447              	.LVL160:
 258:lvgl/src/lv_widgets/lv_roller.c **** 
 1448              		.loc 1 258 1 discriminator 4 view .LVU438
 1449 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1450              	.LVL161:
 1451              	.L69:
 258:lvgl/src/lv_widgets/lv_roller.c **** 
 1452              		.loc 1 258 1 discriminator 4 view .LVU439
 1453              		.align	2
ARM GAS  D:\Temp\ccqwJTgn.s 			page 67


 1454              	.L68:
 1455 0074 00000000 		.word	.LC0
 1456 0078 25499224 		.word	613566757
 1457              		.cfi_endproc
 1458              	.LFE478:
 1460              		.section	.text.release_handler,"ax",%progbits
 1461              		.align	1
 1462              		.syntax unified
 1463              		.thumb
 1464              		.thumb_func
 1465              		.fpu fpv4-sp-d16
 1467              	release_handler:
 1468              	.LVL162:
 1469              	.LFB494:
 879:lvgl/src/lv_widgets/lv_roller.c **** 
 1470              		.loc 1 879 1 is_stmt 1 view -0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 16
 1473              		@ frame_needed = 0, uses_anonymous_args = 0
 879:lvgl/src/lv_widgets/lv_roller.c **** 
 1474              		.loc 1 879 1 is_stmt 0 view .LVU441
 1475 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1476              	.LCFI18:
 1477              		.cfi_def_cfa_offset 32
 1478              		.cfi_offset 4, -32
 1479              		.cfi_offset 5, -28
 1480              		.cfi_offset 6, -24
 1481              		.cfi_offset 7, -20
 1482              		.cfi_offset 8, -16
 1483              		.cfi_offset 9, -12
 1484              		.cfi_offset 10, -8
 1485              		.cfi_offset 14, -4
 1486 0004 84B0     		sub	sp, sp, #16
 1487              	.LCFI19:
 1488              		.cfi_def_cfa_offset 48
 1489 0006 8046     		mov	r8, r0
 882:lvgl/src/lv_widgets/lv_roller.c **** 
 1490              		.loc 1 882 5 is_stmt 1 view .LVU442
 882:lvgl/src/lv_widgets/lv_roller.c **** 
 1491              		.loc 1 882 29 is_stmt 0 view .LVU443
 1492 0008 FFF7FEFF 		bl	lv_indev_get_act
 1493              	.LVL163:
 882:lvgl/src/lv_widgets/lv_roller.c **** 
 1494              		.loc 1 882 8 view .LVU444
 1495 000c FFF7FEFF 		bl	lv_indev_is_dragging
 1496              	.LVL164:
 882:lvgl/src/lv_widgets/lv_roller.c **** 
 1497              		.loc 1 882 7 view .LVU445
 1498 0010 18B1     		cbz	r0, .L82
 882:lvgl/src/lv_widgets/lv_roller.c **** 
 1499              		.loc 1 882 57 view .LVU446
 1500 0012 0120     		movs	r0, #1
 1501              	.L71:
 933:lvgl/src/lv_widgets/lv_roller.c **** 
 1502              		.loc 1 933 1 view .LVU447
 1503 0014 04B0     		add	sp, sp, #16
 1504              	.LCFI20:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 68


 1505              		.cfi_remember_state
 1506              		.cfi_def_cfa_offset 32
 1507              		@ sp needed
 1508 0016 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1509              	.LVL165:
 1510              	.L82:
 1511              	.LCFI21:
 1512              		.cfi_restore_state
 884:lvgl/src/lv_widgets/lv_roller.c **** 
 1513              		.loc 1 884 5 is_stmt 1 view .LVU448
 884:lvgl/src/lv_widgets/lv_roller.c **** 
 1514              		.loc 1 884 29 is_stmt 0 view .LVU449
 1515 001a 4046     		mov	r0, r8
 1516 001c FFF7FEFF 		bl	lv_obj_get_ext_attr
 1517              	.LVL166:
 1518 0020 8246     		mov	r10, r0
 1519              	.LVL167:
 886:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 1520              		.loc 1 886 5 is_stmt 1 view .LVU450
 886:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 1521              		.loc 1 886 26 is_stmt 0 view .LVU451
 1522 0022 FFF7FEFF 		bl	lv_indev_get_act
 1523              	.LVL168:
 886:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 1524              		.loc 1 886 26 view .LVU452
 1525 0026 0546     		mov	r5, r0
 1526              	.LVL169:
 889:lvgl/src/lv_widgets/lv_roller.c ****     if(indev_type == LV_INDEV_TYPE_ENCODER || indev_type == LV_INDEV_TYPE_KEYPAD) {
 1527              		.loc 1 889 5 is_stmt 1 view .LVU453
 889:lvgl/src/lv_widgets/lv_roller.c ****     if(indev_type == LV_INDEV_TYPE_ENCODER || indev_type == LV_INDEV_TYPE_KEYPAD) {
 1528              		.loc 1 889 34 is_stmt 0 view .LVU454
 1529 0028 FFF7FEFF 		bl	lv_indev_get_type
 1530              	.LVL170:
 890:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = ext->sel_opt_id;
 1531              		.loc 1 890 5 is_stmt 1 view .LVU455
 890:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = ext->sel_opt_id;
 1532              		.loc 1 890 7 is_stmt 0 view .LVU456
 1533 002c 0428     		cmp	r0, #4
 1534 002e 01D0     		beq	.L72
 890:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = ext->sel_opt_id;
 1535              		.loc 1 890 44 discriminator 1 view .LVU457
 1536 0030 0228     		cmp	r0, #2
 1537 0032 05D1     		bne	.L73
 1538              	.L72:
 891:lvgl/src/lv_widgets/lv_roller.c **** 
 1539              		.loc 1 891 9 is_stmt 1 view .LVU458
 891:lvgl/src/lv_widgets/lv_roller.c **** 
 1540              		.loc 1 891 34 is_stmt 0 view .LVU459
 1541 0034 BAF84A30 		ldrh	r3, [r10, #74]
 891:lvgl/src/lv_widgets/lv_roller.c **** 
 1542              		.loc 1 891 29 view .LVU460
 1543 0038 AAF84C30 		strh	r3, [r10, #76]	@ movhi
 893:lvgl/src/lv_widgets/lv_roller.c ****             lv_group_t * g      = lv_obj_get_group(roller);
 1544              		.loc 1 893 9 is_stmt 1 view .LVU461
 893:lvgl/src/lv_widgets/lv_roller.c ****             lv_group_t * g      = lv_obj_get_group(roller);
 1545              		.loc 1 893 11 is_stmt 0 view .LVU462
 1546 003c 0428     		cmp	r0, #4
ARM GAS  D:\Temp\ccqwJTgn.s 			page 69


 1547 003e 2DD0     		beq	.L83
 1548              	.LVL171:
 1549              	.L73:
 902:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return LV_RES_OK;
 1550              		.loc 1 902 5 is_stmt 1 view .LVU463
 902:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return LV_RES_OK;
 1551              		.loc 1 902 24 is_stmt 0 view .LVU464
 1552 0040 4046     		mov	r0, r8
 1553 0042 FFF7FEFF 		bl	get_label
 1554              	.LVL172:
 903:lvgl/src/lv_widgets/lv_roller.c **** 
 1555              		.loc 1 903 5 is_stmt 1 view .LVU465
 903:lvgl/src/lv_widgets/lv_roller.c **** 
 1556              		.loc 1 903 7 is_stmt 0 view .LVU466
 1557 0046 0446     		mov	r4, r0
 1558 0048 0028     		cmp	r0, #0
 1559 004a 52D0     		beq	.L80
 905:lvgl/src/lv_widgets/lv_roller.c ****         /*Search the clicked option (For KEYPAD and ENCODER the new value should be already set)*/
 1560              		.loc 1 905 5 is_stmt 1 view .LVU467
 905:lvgl/src/lv_widgets/lv_roller.c ****         /*Search the clicked option (For KEYPAD and ENCODER the new value should be already set)*/
 1561              		.loc 1 905 8 is_stmt 0 view .LVU468
 1562 004c 2846     		mov	r0, r5
 1563              	.LVL173:
 905:lvgl/src/lv_widgets/lv_roller.c ****         /*Search the clicked option (For KEYPAD and ENCODER the new value should be already set)*/
 1564              		.loc 1 905 8 view .LVU469
 1565 004e FFF7FEFF 		bl	lv_indev_get_type
 1566              	.LVL174:
 905:lvgl/src/lv_widgets/lv_roller.c ****         /*Search the clicked option (For KEYPAD and ENCODER the new value should be already set)*/
 1567              		.loc 1 905 7 view .LVU470
 1568 0052 0128     		cmp	r0, #1
 1569 0054 04D0     		beq	.L74
 905:lvgl/src/lv_widgets/lv_roller.c ****         /*Search the clicked option (For KEYPAD and ENCODER the new value should be already set)*/
 1570              		.loc 1 905 61 discriminator 1 view .LVU471
 1571 0056 2846     		mov	r0, r5
 1572 0058 FFF7FEFF 		bl	lv_indev_get_type
 1573              	.LVL175:
 905:lvgl/src/lv_widgets/lv_roller.c ****         /*Search the clicked option (For KEYPAD and ENCODER the new value should be already set)*/
 1574              		.loc 1 905 58 discriminator 1 view .LVU472
 1575 005c 0328     		cmp	r0, #3
 1576 005e 3FD1     		bne	.L75
 1577              	.L74:
 1578              	.LBB151:
 907:lvgl/src/lv_widgets/lv_roller.c ****         lv_point_t p;
 1579              		.loc 1 907 9 is_stmt 1 view .LVU473
 1580              	.LVL176:
 908:lvgl/src/lv_widgets/lv_roller.c ****         lv_indev_get_point(indev, &p);
 1581              		.loc 1 908 9 view .LVU474
 909:lvgl/src/lv_widgets/lv_roller.c ****         p.y -= label->coords.y1;
 1582              		.loc 1 909 9 view .LVU475
 1583 0060 01A9     		add	r1, sp, #4
 1584 0062 2846     		mov	r0, r5
 1585 0064 FFF7FEFF 		bl	lv_indev_get_point
 1586              	.LVL177:
 910:lvgl/src/lv_widgets/lv_roller.c ****         p.x -= label->coords.x1;
 1587              		.loc 1 910 9 view .LVU476
 910:lvgl/src/lv_widgets/lv_roller.c ****         p.x -= label->coords.x1;
 1588              		.loc 1 910 29 is_stmt 0 view .LVU477
ARM GAS  D:\Temp\ccqwJTgn.s 			page 70


 1589 0068 628A     		ldrh	r2, [r4, #18]
 910:lvgl/src/lv_widgets/lv_roller.c ****         p.x -= label->coords.x1;
 1590              		.loc 1 910 13 view .LVU478
 1591 006a BDF80630 		ldrh	r3, [sp, #6]
 1592 006e 9B1A     		subs	r3, r3, r2
 1593 0070 ADF80630 		strh	r3, [sp, #6]	@ movhi
 911:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t letter_i;
 1594              		.loc 1 911 9 is_stmt 1 view .LVU479
 911:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t letter_i;
 1595              		.loc 1 911 29 is_stmt 0 view .LVU480
 1596 0074 228A     		ldrh	r2, [r4, #16]
 911:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t letter_i;
 1597              		.loc 1 911 13 view .LVU481
 1598 0076 BDF80430 		ldrh	r3, [sp, #4]
 1599 007a 9B1A     		subs	r3, r3, r2
 1600 007c ADF80430 		strh	r3, [sp, #4]	@ movhi
 912:lvgl/src/lv_widgets/lv_roller.c ****         letter_i = lv_label_get_letter_on(label, &p);
 1601              		.loc 1 912 9 is_stmt 1 view .LVU482
 913:lvgl/src/lv_widgets/lv_roller.c **** 
 1602              		.loc 1 913 9 view .LVU483
 913:lvgl/src/lv_widgets/lv_roller.c **** 
 1603              		.loc 1 913 20 is_stmt 0 view .LVU484
 1604 0080 01A9     		add	r1, sp, #4
 1605 0082 2046     		mov	r0, r4
 1606 0084 FFF7FEFF 		bl	lv_label_get_letter_on
 1607              	.LVL178:
 1608 0088 0746     		mov	r7, r0
 1609              	.LVL179:
 915:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t i        = 0;
 1610              		.loc 1 915 9 is_stmt 1 view .LVU485
 915:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t i        = 0;
 1611              		.loc 1 915 29 is_stmt 0 view .LVU486
 1612 008a 2046     		mov	r0, r4
 1613              	.LVL180:
 915:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t i        = 0;
 1614              		.loc 1 915 29 view .LVU487
 1615 008c FFF7FEFF 		bl	lv_label_get_text
 1616              	.LVL181:
 1617 0090 8146     		mov	r9, r0
 1618              	.LVL182:
 916:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t i_prev   = 0;
 1619              		.loc 1 916 9 is_stmt 1 view .LVU488
 916:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t i_prev   = 0;
 1620              		.loc 1 916 18 is_stmt 0 view .LVU489
 1621 0092 0025     		movs	r5, #0
 1622              	.LVL183:
 916:lvgl/src/lv_widgets/lv_roller.c ****         uint32_t i_prev   = 0;
 1623              		.loc 1 916 18 view .LVU490
 1624 0094 0295     		str	r5, [sp, #8]
 917:lvgl/src/lv_widgets/lv_roller.c **** 
 1625              		.loc 1 917 9 is_stmt 1 view .LVU491
 1626              	.LVL184:
 919:lvgl/src/lv_widgets/lv_roller.c ****         for(letter_cnt = 0; letter_cnt < letter_i; letter_cnt++) {
 1627              		.loc 1 919 9 view .LVU492
 920:lvgl/src/lv_widgets/lv_roller.c ****             uint32_t letter = _lv_txt_encoded_next(txt, &i);
 1628              		.loc 1 920 9 view .LVU493
 920:lvgl/src/lv_widgets/lv_roller.c ****             uint32_t letter = _lv_txt_encoded_next(txt, &i);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 71


 1629              		.loc 1 920 24 is_stmt 0 view .LVU494
 1630 0096 2C46     		mov	r4, r5
 1631              	.LVL185:
 917:lvgl/src/lv_widgets/lv_roller.c **** 
 1632              		.loc 1 917 18 view .LVU495
 1633 0098 2E46     		mov	r6, r5
 920:lvgl/src/lv_widgets/lv_roller.c ****             uint32_t letter = _lv_txt_encoded_next(txt, &i);
 1634              		.loc 1 920 9 view .LVU496
 1635 009a 10E0     		b	.L76
 1636              	.LVL186:
 1637              	.L83:
 920:lvgl/src/lv_widgets/lv_roller.c ****             uint32_t letter = _lv_txt_encoded_next(txt, &i);
 1638              		.loc 1 920 9 view .LVU497
 1639              	.LBE151:
 1640              	.LBB154:
 894:lvgl/src/lv_widgets/lv_roller.c ****             if(lv_group_get_editing(g)) {
 1641              		.loc 1 894 13 is_stmt 1 view .LVU498
 894:lvgl/src/lv_widgets/lv_roller.c ****             if(lv_group_get_editing(g)) {
 1642              		.loc 1 894 35 is_stmt 0 view .LVU499
 1643 009c 4046     		mov	r0, r8
 1644              	.LVL187:
 894:lvgl/src/lv_widgets/lv_roller.c ****             if(lv_group_get_editing(g)) {
 1645              		.loc 1 894 35 view .LVU500
 1646 009e FFF7FEFF 		bl	lv_obj_get_group
 1647              	.LVL188:
 1648 00a2 0446     		mov	r4, r0
 1649              	.LVL189:
 895:lvgl/src/lv_widgets/lv_roller.c ****                 lv_group_set_editing(g, false);
 1650              		.loc 1 895 13 is_stmt 1 view .LVU501
 895:lvgl/src/lv_widgets/lv_roller.c ****                 lv_group_set_editing(g, false);
 1651              		.loc 1 895 16 is_stmt 0 view .LVU502
 1652 00a4 FFF7FEFF 		bl	lv_group_get_editing
 1653              	.LVL190:
 895:lvgl/src/lv_widgets/lv_roller.c ****                 lv_group_set_editing(g, false);
 1654              		.loc 1 895 15 view .LVU503
 1655 00a8 0028     		cmp	r0, #0
 1656 00aa C9D0     		beq	.L73
 896:lvgl/src/lv_widgets/lv_roller.c ****             }
 1657              		.loc 1 896 17 is_stmt 1 view .LVU504
 1658 00ac 0021     		movs	r1, #0
 1659 00ae 2046     		mov	r0, r4
 1660 00b0 FFF7FEFF 		bl	lv_group_set_editing
 1661              	.LVL191:
 1662 00b4 C4E7     		b	.L73
 1663              	.LVL192:
 1664              	.L85:
 896:lvgl/src/lv_widgets/lv_roller.c ****             }
 1665              		.loc 1 896 17 is_stmt 0 view .LVU505
 1666              	.LBE154:
 1667              	.LBB155:
 1668              	.LBB152:
 924:lvgl/src/lv_widgets/lv_roller.c ****             i_prev = i;
 1669              		.loc 1 924 54 is_stmt 1 discriminator 2 view .LVU506
 924:lvgl/src/lv_widgets/lv_roller.c ****             i_prev = i;
 1670              		.loc 1 924 61 is_stmt 0 discriminator 2 view .LVU507
 1671 00b6 0135     		adds	r5, r5, #1
 1672              	.LVL193:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 72


 924:lvgl/src/lv_widgets/lv_roller.c ****             i_prev = i;
 1673              		.loc 1 924 61 discriminator 2 view .LVU508
 1674 00b8 ADB2     		uxth	r5, r5
 1675              	.LVL194:
 1676              	.L77:
 925:lvgl/src/lv_widgets/lv_roller.c ****         }
 1677              		.loc 1 925 13 is_stmt 1 discriminator 2 view .LVU509
 925:lvgl/src/lv_widgets/lv_roller.c ****         }
 1678              		.loc 1 925 20 is_stmt 0 discriminator 2 view .LVU510
 1679 00ba 029E     		ldr	r6, [sp, #8]
 1680              	.LVL195:
 925:lvgl/src/lv_widgets/lv_roller.c ****         }
 1681              		.loc 1 925 20 discriminator 2 view .LVU511
 1682              	.LBE152:
 920:lvgl/src/lv_widgets/lv_roller.c ****             uint32_t letter = _lv_txt_encoded_next(txt, &i);
 1683              		.loc 1 920 62 discriminator 2 view .LVU512
 1684 00bc 0134     		adds	r4, r4, #1
 1685              	.LVL196:
 1686              	.L76:
 920:lvgl/src/lv_widgets/lv_roller.c ****             uint32_t letter = _lv_txt_encoded_next(txt, &i);
 1687              		.loc 1 920 9 discriminator 1 view .LVU513
 1688 00be BC42     		cmp	r4, r7
 1689 00c0 09D2     		bcs	.L84
 1690              	.LBB153:
 921:lvgl/src/lv_widgets/lv_roller.c ****             /*Count he lines to reach the clicked letter. But ignore the last '\n' because it
 1691              		.loc 1 921 13 is_stmt 1 view .LVU514
 921:lvgl/src/lv_widgets/lv_roller.c ****             /*Count he lines to reach the clicked letter. But ignore the last '\n' because it
 1692              		.loc 1 921 31 is_stmt 0 view .LVU515
 1693 00c2 0D4B     		ldr	r3, .L86
 1694 00c4 1B68     		ldr	r3, [r3]
 1695 00c6 02A9     		add	r1, sp, #8
 1696 00c8 4846     		mov	r0, r9
 1697 00ca 9847     		blx	r3
 1698              	.LVL197:
 924:lvgl/src/lv_widgets/lv_roller.c ****             i_prev = i;
 1699              		.loc 1 924 13 is_stmt 1 view .LVU516
 924:lvgl/src/lv_widgets/lv_roller.c ****             i_prev = i;
 1700              		.loc 1 924 15 is_stmt 0 view .LVU517
 1701 00cc 0A28     		cmp	r0, #10
 1702 00ce F4D1     		bne	.L77
 924:lvgl/src/lv_widgets/lv_roller.c ****             i_prev = i;
 1703              		.loc 1 924 31 discriminator 1 view .LVU518
 1704 00d0 BE42     		cmp	r6, r7
 1705 00d2 F0D1     		bne	.L85
 1706 00d4 F1E7     		b	.L77
 1707              	.LVL198:
 1708              	.L84:
 924:lvgl/src/lv_widgets/lv_roller.c ****             i_prev = i;
 1709              		.loc 1 924 31 discriminator 1 view .LVU519
 1710              	.LBE153:
 927:lvgl/src/lv_widgets/lv_roller.c ****     }
 1711              		.loc 1 927 9 is_stmt 1 view .LVU520
 1712 00d6 0122     		movs	r2, #1
 1713 00d8 2946     		mov	r1, r5
 1714 00da 4046     		mov	r0, r8
 1715 00dc FFF7FEFF 		bl	lv_roller_set_selected
 1716              	.LVL199:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 73


 1717              	.L75:
 927:lvgl/src/lv_widgets/lv_roller.c ****     }
 1718              		.loc 1 927 9 is_stmt 0 view .LVU521
 1719              	.LBE155:
 930:lvgl/src/lv_widgets/lv_roller.c ****     lv_res_t res = lv_event_send(roller, LV_EVENT_VALUE_CHANGED, &id);
 1720              		.loc 1 930 5 is_stmt 1 view .LVU522
 930:lvgl/src/lv_widgets/lv_roller.c ****     lv_res_t res = lv_event_send(roller, LV_EVENT_VALUE_CHANGED, &id);
 1721              		.loc 1 930 23 is_stmt 0 view .LVU523
 1722 00e0 BAF84A30 		ldrh	r3, [r10, #74]
 930:lvgl/src/lv_widgets/lv_roller.c ****     lv_res_t res = lv_event_send(roller, LV_EVENT_VALUE_CHANGED, &id);
 1723              		.loc 1 930 14 view .LVU524
 1724 00e4 0393     		str	r3, [sp, #12]
 931:lvgl/src/lv_widgets/lv_roller.c ****     return res;
 1725              		.loc 1 931 5 is_stmt 1 view .LVU525
 931:lvgl/src/lv_widgets/lv_roller.c ****     return res;
 1726              		.loc 1 931 20 is_stmt 0 view .LVU526
 1727 00e6 03AA     		add	r2, sp, #12
 1728 00e8 1021     		movs	r1, #16
 1729 00ea 4046     		mov	r0, r8
 1730 00ec FFF7FEFF 		bl	lv_event_send
 1731              	.LVL200:
 932:lvgl/src/lv_widgets/lv_roller.c **** }
 1732              		.loc 1 932 5 is_stmt 1 view .LVU527
 932:lvgl/src/lv_widgets/lv_roller.c **** }
 1733              		.loc 1 932 12 is_stmt 0 view .LVU528
 1734 00f0 90E7     		b	.L71
 1735              	.LVL201:
 1736              	.L80:
 903:lvgl/src/lv_widgets/lv_roller.c **** 
 1737              		.loc 1 903 30 view .LVU529
 1738 00f2 0120     		movs	r0, #1
 1739              	.LVL202:
 903:lvgl/src/lv_widgets/lv_roller.c **** 
 1740              		.loc 1 903 30 view .LVU530
 1741 00f4 8EE7     		b	.L71
 1742              	.L87:
 1743 00f6 00BF     		.align	2
 1744              	.L86:
 1745 00f8 00000000 		.word	_lv_txt_encoded_next
 1746              		.cfi_endproc
 1747              	.LFE494:
 1749              		.section	.text.lv_roller_set_visible_row_count,"ax",%progbits
 1750              		.align	1
 1751              		.global	lv_roller_set_visible_row_count
 1752              		.syntax unified
 1753              		.thumb
 1754              		.thumb_func
 1755              		.fpu fpv4-sp-d16
 1757              	lv_roller_set_visible_row_count:
 1758              	.LVL203:
 1759              	.LFB479:
 266:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 1760              		.loc 1 266 1 is_stmt 1 view -0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 266:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 74


 1764              		.loc 1 266 1 is_stmt 0 view .LVU532
 1765 0000 70B5     		push	{r4, r5, r6, lr}
 1766              	.LCFI22:
 1767              		.cfi_def_cfa_offset 16
 1768              		.cfi_offset 4, -16
 1769              		.cfi_offset 5, -12
 1770              		.cfi_offset 6, -8
 1771              		.cfi_offset 14, -4
 1772 0002 0446     		mov	r4, r0
 1773 0004 0D46     		mov	r5, r1
 267:lvgl/src/lv_widgets/lv_roller.c **** 
 1774              		.loc 1 267 5 is_stmt 1 view .LVU533
 267:lvgl/src/lv_widgets/lv_roller.c **** 
 1775              		.loc 1 267 5 view .LVU534
 1776 0006 FFF7FEFF 		bl	lv_debug_check_null
 1777              	.LVL204:
 267:lvgl/src/lv_widgets/lv_roller.c **** 
 1778              		.loc 1 267 5 is_stmt 0 view .LVU535
 1779 000a 28B9     		cbnz	r0, .L89
 267:lvgl/src/lv_widgets/lv_roller.c **** 
 1780              		.loc 1 267 5 is_stmt 1 discriminator 1 view .LVU536
 267:lvgl/src/lv_widgets/lv_roller.c **** 
 1781              		.loc 1 267 5 discriminator 1 view .LVU537
 1782 000c 2246     		mov	r2, r4
 1783 000e 0023     		movs	r3, #0
 1784 0010 1048     		ldr	r0, .L92
 1785 0012 FFF7FEFF 		bl	lv_debug_log_error
 1786              	.LVL205:
 1787              	.L90:
 267:lvgl/src/lv_widgets/lv_roller.c **** 
 1788              		.loc 1 267 5 discriminator 1 view .LVU538
 267:lvgl/src/lv_widgets/lv_roller.c **** 
 1789              		.loc 1 267 5 discriminator 1 view .LVU539
 1790 0016 FEE7     		b	.L90
 1791              	.L89:
 267:lvgl/src/lv_widgets/lv_roller.c **** 
 1792              		.loc 1 267 40 view .LVU540
 269:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
 1793              		.loc 1 269 5 view .LVU541
 1794              	.LVL206:
 1795              	.LBB156:
 1796              	.LBI156:
 1797              		.loc 2 168 1 view .LVU542
 1798              	.LBB157:
 1799              		.loc 2 168 1 view .LVU543
 1800 0018 48F28E02 		movw	r2, #32910
 1801 001c 0021     		movs	r1, #0
 1802 001e 2046     		mov	r0, r4
 1803 0020 FFF7FEFF 		bl	_lv_obj_get_style_ptr
 1804              	.LVL207:
 1805 0024 0646     		mov	r6, r0
 1806              	.LVL208:
 1807              		.loc 2 168 1 is_stmt 0 view .LVU544
 1808              	.LBE157:
 1809              	.LBE156:
 270:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_set_height(roller, (lv_font_get_line_height(font) + line_space) * row_cnt);
 1810              		.loc 1 270 5 is_stmt 1 view .LVU545
ARM GAS  D:\Temp\ccqwJTgn.s 			page 75


 1811              	.LBB158:
 1812              	.LBI158:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 1813              		.loc 2 161 1 view .LVU546
 1814              	.LBB159:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 1815              		.loc 2 161 1 view .LVU547
 1816 0026 48F28102 		movw	r2, #32897
 1817 002a 0021     		movs	r1, #0
 1818 002c 2046     		mov	r0, r4
 1819              	.LVL209:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 1820              		.loc 2 161 1 is_stmt 0 view .LVU548
 1821 002e FFF7FEFF 		bl	_lv_obj_get_style_int
 1822              	.LVL210:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 1823              		.loc 2 161 1 view .LVU549
 1824              	.LBE159:
 1825              	.LBE158:
 271:lvgl/src/lv_widgets/lv_roller.c **** 
 1826              		.loc 1 271 5 is_stmt 1 view .LVU550
 1827              	.LBB160:
 1828              	.LBI160:
 116:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** {
 1829              		.loc 3 116 26 view .LVU551
 1830              	.LBB161:
 1831              		.loc 3 118 5 view .LVU552
 1832              		.loc 3 118 18 is_stmt 0 view .LVU553
 1833 0032 B6F90830 		ldrsh	r3, [r6, #8]
 1834              	.LVL211:
 1835              		.loc 3 118 18 view .LVU554
 1836              	.LBE161:
 1837              	.LBE160:
 271:lvgl/src/lv_widgets/lv_roller.c **** 
 1838              		.loc 1 271 62 view .LVU555
 1839 0036 0344     		add	r3, r3, r0
 271:lvgl/src/lv_widgets/lv_roller.c **** 
 1840              		.loc 1 271 5 view .LVU556
 1841 0038 13FB05F1 		smulbb	r1, r3, r5
 1842 003c 09B2     		sxth	r1, r1
 1843 003e 2046     		mov	r0, r4
 1844              	.LVL212:
 271:lvgl/src/lv_widgets/lv_roller.c **** 
 1845              		.loc 1 271 5 view .LVU557
 1846 0040 FFF7FEFF 		bl	lv_obj_set_height
 1847              	.LVL213:
 273:lvgl/src/lv_widgets/lv_roller.c ****     refr_position(roller, LV_ANIM_OFF);
 1848              		.loc 1 273 5 is_stmt 1 view .LVU558
 1849 0044 2046     		mov	r0, r4
 1850 0046 FFF7FEFF 		bl	refr_height
 1851              	.LVL214:
 274:lvgl/src/lv_widgets/lv_roller.c **** }
 1852              		.loc 1 274 5 view .LVU559
 1853 004a 0021     		movs	r1, #0
 1854 004c 2046     		mov	r0, r4
 1855 004e FFF7FEFF 		bl	refr_position
 1856              	.LVL215:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 76


 275:lvgl/src/lv_widgets/lv_roller.c **** 
 1857              		.loc 1 275 1 is_stmt 0 view .LVU560
 1858 0052 70BD     		pop	{r4, r5, r6, pc}
 1859              	.LVL216:
 1860              	.L93:
 275:lvgl/src/lv_widgets/lv_roller.c **** 
 1861              		.loc 1 275 1 view .LVU561
 1862              		.align	2
 1863              	.L92:
 1864 0054 00000000 		.word	.LC0
 1865              		.cfi_endproc
 1866              	.LFE479:
 1868              		.section	.text.lv_roller_get_selected,"ax",%progbits
 1869              		.align	1
 1870              		.global	lv_roller_get_selected
 1871              		.syntax unified
 1872              		.thumb
 1873              		.thumb_func
 1874              		.fpu fpv4-sp-d16
 1876              	lv_roller_get_selected:
 1877              	.LVL217:
 1878              	.LFB481:
 300:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 1879              		.loc 1 300 1 is_stmt 1 view -0
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 0, uses_anonymous_args = 0
 300:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 1883              		.loc 1 300 1 is_stmt 0 view .LVU563
 1884 0000 10B5     		push	{r4, lr}
 1885              	.LCFI23:
 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 4, -8
 1888              		.cfi_offset 14, -4
 1889 0002 0446     		mov	r4, r0
 301:lvgl/src/lv_widgets/lv_roller.c **** 
 1890              		.loc 1 301 5 is_stmt 1 view .LVU564
 301:lvgl/src/lv_widgets/lv_roller.c **** 
 1891              		.loc 1 301 5 view .LVU565
 1892 0004 FFF7FEFF 		bl	lv_debug_check_null
 1893              	.LVL218:
 301:lvgl/src/lv_widgets/lv_roller.c **** 
 1894              		.loc 1 301 5 is_stmt 0 view .LVU566
 1895 0008 28B9     		cbnz	r0, .L95
 301:lvgl/src/lv_widgets/lv_roller.c **** 
 1896              		.loc 1 301 5 is_stmt 1 discriminator 1 view .LVU567
 301:lvgl/src/lv_widgets/lv_roller.c **** 
 1897              		.loc 1 301 5 discriminator 1 view .LVU568
 1898 000a 2246     		mov	r2, r4
 1899 000c 0023     		movs	r3, #0
 1900 000e 1048     		ldr	r0, .L100
 1901 0010 FFF7FEFF 		bl	lv_debug_log_error
 1902              	.LVL219:
 1903              	.L96:
 301:lvgl/src/lv_widgets/lv_roller.c **** 
 1904              		.loc 1 301 5 discriminator 1 view .LVU569
 301:lvgl/src/lv_widgets/lv_roller.c **** 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 77


 1905              		.loc 1 301 5 discriminator 1 view .LVU570
 1906 0014 FEE7     		b	.L96
 1907              	.L95:
 301:lvgl/src/lv_widgets/lv_roller.c **** 
 1908              		.loc 1 301 40 discriminator 2 view .LVU571
 303:lvgl/src/lv_widgets/lv_roller.c ****     if(ext->mode == LV_ROLLER_MODE_INFINITE) {
 1909              		.loc 1 303 5 discriminator 2 view .LVU572
 303:lvgl/src/lv_widgets/lv_roller.c ****     if(ext->mode == LV_ROLLER_MODE_INFINITE) {
 1910              		.loc 1 303 29 is_stmt 0 discriminator 2 view .LVU573
 1911 0016 2046     		mov	r0, r4
 1912 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1913              	.LVL220:
 304:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t real_id_cnt = ext->option_cnt / LV_ROLLER_INF_PAGES;
 1914              		.loc 1 304 5 is_stmt 1 discriminator 2 view .LVU574
 304:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t real_id_cnt = ext->option_cnt / LV_ROLLER_INF_PAGES;
 1915              		.loc 1 304 18 is_stmt 0 discriminator 2 view .LVU575
 1916 001c 90F84E30 		ldrb	r3, [r0, #78]	@ zero_extendqisi2
 304:lvgl/src/lv_widgets/lv_roller.c ****         uint16_t real_id_cnt = ext->option_cnt / LV_ROLLER_INF_PAGES;
 1917              		.loc 1 304 7 discriminator 2 view .LVU576
 1918 0020 13F0010F 		tst	r3, #1
 1919 0024 11D0     		beq	.L97
 1920              	.LBB162:
 305:lvgl/src/lv_widgets/lv_roller.c ****         return ext->sel_opt_id % real_id_cnt;
 1921              		.loc 1 305 9 is_stmt 1 view .LVU577
 305:lvgl/src/lv_widgets/lv_roller.c ****         return ext->sel_opt_id % real_id_cnt;
 1922              		.loc 1 305 35 is_stmt 0 view .LVU578
 1923 0026 B0F84820 		ldrh	r2, [r0, #72]
 305:lvgl/src/lv_widgets/lv_roller.c ****         return ext->sel_opt_id % real_id_cnt;
 1924              		.loc 1 305 18 view .LVU579
 1925 002a 0A4B     		ldr	r3, .L100+4
 1926 002c A3FB0213 		umull	r1, r3, r3, r2
 1927 0030 D21A     		subs	r2, r2, r3
 1928 0032 03EB5203 		add	r3, r3, r2, lsr #1
 1929 0036 C3F38F03 		ubfx	r3, r3, #2, #16
 1930              	.LVL221:
 306:lvgl/src/lv_widgets/lv_roller.c ****     }
 1931              		.loc 1 306 9 is_stmt 1 view .LVU580
 306:lvgl/src/lv_widgets/lv_roller.c ****     }
 1932              		.loc 1 306 19 is_stmt 0 view .LVU581
 1933 003a B0F84A20 		ldrh	r2, [r0, #74]
 306:lvgl/src/lv_widgets/lv_roller.c ****     }
 1934              		.loc 1 306 32 view .LVU582
 1935 003e B2FBF3F0 		udiv	r0, r2, r3
 1936              	.LVL222:
 306:lvgl/src/lv_widgets/lv_roller.c ****     }
 1937              		.loc 1 306 32 view .LVU583
 1938 0042 03FB1023 		mls	r3, r3, r0, r2
 1939              	.LVL223:
 306:lvgl/src/lv_widgets/lv_roller.c ****     }
 1940              		.loc 1 306 32 view .LVU584
 1941 0046 98B2     		uxth	r0, r3
 1942              	.L98:
 306:lvgl/src/lv_widgets/lv_roller.c ****     }
 1943              		.loc 1 306 32 view .LVU585
 1944              	.LBE162:
 311:lvgl/src/lv_widgets/lv_roller.c **** 
 1945              		.loc 1 311 1 view .LVU586
ARM GAS  D:\Temp\ccqwJTgn.s 			page 78


 1946 0048 10BD     		pop	{r4, pc}
 1947              	.LVL224:
 1948              	.L97:
 309:lvgl/src/lv_widgets/lv_roller.c ****     }
 1949              		.loc 1 309 9 is_stmt 1 view .LVU587
 309:lvgl/src/lv_widgets/lv_roller.c ****     }
 1950              		.loc 1 309 19 is_stmt 0 view .LVU588
 1951 004a B0F84A00 		ldrh	r0, [r0, #74]
 1952              	.LVL225:
 309:lvgl/src/lv_widgets/lv_roller.c ****     }
 1953              		.loc 1 309 19 view .LVU589
 1954 004e FBE7     		b	.L98
 1955              	.L101:
 1956              		.align	2
 1957              	.L100:
 1958 0050 00000000 		.word	.LC0
 1959 0054 25499224 		.word	613566757
 1960              		.cfi_endproc
 1961              	.LFE481:
 1963              		.section	.text.lv_roller_get_selected_str,"ax",%progbits
 1964              		.align	1
 1965              		.global	lv_roller_get_selected_str
 1966              		.syntax unified
 1967              		.thumb
 1968              		.thumb_func
 1969              		.fpu fpv4-sp-d16
 1971              	lv_roller_get_selected_str:
 1972              	.LVL226:
 1973              	.LFB482:
 320:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 1974              		.loc 1 320 1 is_stmt 1 view -0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 320:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 1978              		.loc 1 320 1 is_stmt 0 view .LVU591
 1979 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1980              	.LCFI24:
 1981              		.cfi_def_cfa_offset 24
 1982              		.cfi_offset 3, -24
 1983              		.cfi_offset 4, -20
 1984              		.cfi_offset 5, -16
 1985              		.cfi_offset 6, -12
 1986              		.cfi_offset 7, -8
 1987              		.cfi_offset 14, -4
 1988 0002 0446     		mov	r4, r0
 1989 0004 0D46     		mov	r5, r1
 1990 0006 1646     		mov	r6, r2
 321:lvgl/src/lv_widgets/lv_roller.c **** 
 1991              		.loc 1 321 5 is_stmt 1 view .LVU592
 321:lvgl/src/lv_widgets/lv_roller.c **** 
 1992              		.loc 1 321 5 view .LVU593
 1993 0008 FFF7FEFF 		bl	lv_debug_check_null
 1994              	.LVL227:
 321:lvgl/src/lv_widgets/lv_roller.c **** 
 1995              		.loc 1 321 5 is_stmt 0 view .LVU594
 1996 000c 28B9     		cbnz	r0, .L103
ARM GAS  D:\Temp\ccqwJTgn.s 			page 79


 321:lvgl/src/lv_widgets/lv_roller.c **** 
 1997              		.loc 1 321 5 is_stmt 1 discriminator 1 view .LVU595
 321:lvgl/src/lv_widgets/lv_roller.c **** 
 1998              		.loc 1 321 5 discriminator 1 view .LVU596
 1999 000e 2246     		mov	r2, r4
 2000 0010 0023     		movs	r3, #0
 2001 0012 1A48     		ldr	r0, .L116
 2002 0014 FFF7FEFF 		bl	lv_debug_log_error
 2003              	.LVL228:
 2004              	.L104:
 321:lvgl/src/lv_widgets/lv_roller.c **** 
 2005              		.loc 1 321 5 discriminator 1 view .LVU597
 321:lvgl/src/lv_widgets/lv_roller.c **** 
 2006              		.loc 1 321 5 discriminator 1 view .LVU598
 2007 0018 FEE7     		b	.L104
 2008              	.L103:
 321:lvgl/src/lv_widgets/lv_roller.c **** 
 2009              		.loc 1 321 40 discriminator 2 view .LVU599
 323:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 2010              		.loc 1 323 5 discriminator 2 view .LVU600
 323:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 2011              		.loc 1 323 29 is_stmt 0 discriminator 2 view .LVU601
 2012 001a 2046     		mov	r0, r4
 2013 001c FFF7FEFF 		bl	lv_obj_get_ext_attr
 2014              	.LVL229:
 2015 0020 0746     		mov	r7, r0
 2016              	.LVL230:
 324:lvgl/src/lv_widgets/lv_roller.c ****     uint32_t i;
 2017              		.loc 1 324 5 is_stmt 1 discriminator 2 view .LVU602
 324:lvgl/src/lv_widgets/lv_roller.c ****     uint32_t i;
 2018              		.loc 1 324 24 is_stmt 0 discriminator 2 view .LVU603
 2019 0022 2046     		mov	r0, r4
 2020              	.LVL231:
 324:lvgl/src/lv_widgets/lv_roller.c ****     uint32_t i;
 2021              		.loc 1 324 24 discriminator 2 view .LVU604
 2022 0024 FFF7FEFF 		bl	get_label
 2023              	.LVL232:
 325:lvgl/src/lv_widgets/lv_roller.c ****     uint16_t line        = 0;
 2024              		.loc 1 325 5 is_stmt 1 discriminator 2 view .LVU605
 326:lvgl/src/lv_widgets/lv_roller.c ****     const char * opt_txt = lv_label_get_text(label);
 2025              		.loc 1 326 5 discriminator 2 view .LVU606
 327:lvgl/src/lv_widgets/lv_roller.c ****     size_t txt_len     = strlen(opt_txt);
 2026              		.loc 1 327 5 discriminator 2 view .LVU607
 327:lvgl/src/lv_widgets/lv_roller.c ****     size_t txt_len     = strlen(opt_txt);
 2027              		.loc 1 327 28 is_stmt 0 discriminator 2 view .LVU608
 2028 0028 FFF7FEFF 		bl	lv_label_get_text
 2029              	.LVL233:
 327:lvgl/src/lv_widgets/lv_roller.c ****     size_t txt_len     = strlen(opt_txt);
 2030              		.loc 1 327 28 discriminator 2 view .LVU609
 2031 002c 0446     		mov	r4, r0
 2032              	.LVL234:
 328:lvgl/src/lv_widgets/lv_roller.c **** 
 2033              		.loc 1 328 5 is_stmt 1 discriminator 2 view .LVU610
 328:lvgl/src/lv_widgets/lv_roller.c **** 
 2034              		.loc 1 328 26 is_stmt 0 discriminator 2 view .LVU611
 2035 002e FFF7FEFF 		bl	strlen
 2036              	.LVL235:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 80


 330:lvgl/src/lv_widgets/lv_roller.c ****         if(opt_txt[i] == '\n') line++;
 2037              		.loc 1 330 5 is_stmt 1 discriminator 2 view .LVU612
 326:lvgl/src/lv_widgets/lv_roller.c ****     const char * opt_txt = lv_label_get_text(label);
 2038              		.loc 1 326 14 is_stmt 0 discriminator 2 view .LVU613
 2039 0032 0022     		movs	r2, #0
 330:lvgl/src/lv_widgets/lv_roller.c ****         if(opt_txt[i] == '\n') line++;
 2040              		.loc 1 330 11 discriminator 2 view .LVU614
 2041 0034 1346     		mov	r3, r2
 330:lvgl/src/lv_widgets/lv_roller.c ****         if(opt_txt[i] == '\n') line++;
 2042              		.loc 1 330 5 discriminator 2 view .LVU615
 2043 0036 00E0     		b	.L105
 2044              	.LVL236:
 2045              	.L106:
 330:lvgl/src/lv_widgets/lv_roller.c ****         if(opt_txt[i] == '\n') line++;
 2046              		.loc 1 330 57 discriminator 2 view .LVU616
 2047 0038 0133     		adds	r3, r3, #1
 2048              	.LVL237:
 2049              	.L105:
 330:lvgl/src/lv_widgets/lv_roller.c ****         if(opt_txt[i] == '\n') line++;
 2050              		.loc 1 330 5 discriminator 1 view .LVU617
 2051 003a 8342     		cmp	r3, r0
 2052 003c 1BD2     		bcs	.L113
 330:lvgl/src/lv_widgets/lv_roller.c ****         if(opt_txt[i] == '\n') line++;
 2053              		.loc 1 330 42 discriminator 3 view .LVU618
 2054 003e B7F84A10 		ldrh	r1, [r7, #74]
 330:lvgl/src/lv_widgets/lv_roller.c ****         if(opt_txt[i] == '\n') line++;
 2055              		.loc 1 330 28 discriminator 3 view .LVU619
 2056 0042 9142     		cmp	r1, r2
 2057 0044 05D0     		beq	.L115
 331:lvgl/src/lv_widgets/lv_roller.c ****     }
 2058              		.loc 1 331 9 is_stmt 1 view .LVU620
 331:lvgl/src/lv_widgets/lv_roller.c ****     }
 2059              		.loc 1 331 19 is_stmt 0 view .LVU621
 2060 0046 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 331:lvgl/src/lv_widgets/lv_roller.c ****     }
 2061              		.loc 1 331 11 view .LVU622
 2062 0048 0A29     		cmp	r1, #10
 2063 004a F5D1     		bne	.L106
 331:lvgl/src/lv_widgets/lv_roller.c ****     }
 2064              		.loc 1 331 32 is_stmt 1 discriminator 1 view .LVU623
 331:lvgl/src/lv_widgets/lv_roller.c ****     }
 2065              		.loc 1 331 36 is_stmt 0 discriminator 1 view .LVU624
 2066 004c 0132     		adds	r2, r2, #1
 2067              	.LVL238:
 331:lvgl/src/lv_widgets/lv_roller.c ****     }
 2068              		.loc 1 331 36 discriminator 1 view .LVU625
 2069 004e 92B2     		uxth	r2, r2
 2070              	.LVL239:
 331:lvgl/src/lv_widgets/lv_roller.c ****     }
 2071              		.loc 1 331 36 discriminator 1 view .LVU626
 2072 0050 F2E7     		b	.L106
 2073              	.L115:
 331:lvgl/src/lv_widgets/lv_roller.c ****     }
 2074              		.loc 1 331 36 discriminator 1 view .LVU627
 2075 0052 0022     		movs	r2, #0
 2076              	.LVL240:
 331:lvgl/src/lv_widgets/lv_roller.c ****     }
ARM GAS  D:\Temp\ccqwJTgn.s 			page 81


 2077              		.loc 1 331 36 discriminator 1 view .LVU628
 2078 0054 02E0     		b	.L111
 2079              	.LVL241:
 2080              	.L109:
 340:lvgl/src/lv_widgets/lv_roller.c ****     }
 2081              		.loc 1 340 9 is_stmt 1 discriminator 2 view .LVU629
 340:lvgl/src/lv_widgets/lv_roller.c ****     }
 2082              		.loc 1 340 16 is_stmt 0 discriminator 2 view .LVU630
 2083 0056 A954     		strb	r1, [r5, r2]
 335:lvgl/src/lv_widgets/lv_roller.c ****         if(buf_size && c >= buf_size - 1) {
 2084              		.loc 1 335 52 discriminator 2 view .LVU631
 2085 0058 0132     		adds	r2, r2, #1
 2086              	.LVL242:
 335:lvgl/src/lv_widgets/lv_roller.c ****         if(buf_size && c >= buf_size - 1) {
 2087              		.loc 1 335 57 discriminator 2 view .LVU632
 2088 005a 0133     		adds	r3, r3, #1
 2089              	.LVL243:
 2090              	.L111:
 335:lvgl/src/lv_widgets/lv_roller.c ****         if(buf_size && c >= buf_size - 1) {
 2091              		.loc 1 335 5 discriminator 1 view .LVU633
 2092 005c 8342     		cmp	r3, r0
 2093 005e 07D2     		bcs	.L110
 335:lvgl/src/lv_widgets/lv_roller.c ****         if(buf_size && c >= buf_size - 1) {
 2094              		.loc 1 335 38 discriminator 3 view .LVU634
 2095 0060 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 335:lvgl/src/lv_widgets/lv_roller.c ****         if(buf_size && c >= buf_size - 1) {
 2096              		.loc 1 335 28 discriminator 3 view .LVU635
 2097 0062 0A29     		cmp	r1, #10
 2098 0064 04D0     		beq	.L110
 336:lvgl/src/lv_widgets/lv_roller.c ****             LV_LOG_WARN("lv_dropdown_get_selected_str: the buffer was too small")
 2099              		.loc 1 336 9 is_stmt 1 view .LVU636
 336:lvgl/src/lv_widgets/lv_roller.c ****             LV_LOG_WARN("lv_dropdown_get_selected_str: the buffer was too small")
 2100              		.loc 1 336 11 is_stmt 0 view .LVU637
 2101 0066 002E     		cmp	r6, #0
 2102 0068 F5D0     		beq	.L109
 336:lvgl/src/lv_widgets/lv_roller.c ****             LV_LOG_WARN("lv_dropdown_get_selected_str: the buffer was too small")
 2103              		.loc 1 336 38 discriminator 1 view .LVU638
 2104 006a 771E     		subs	r7, r6, #1
 336:lvgl/src/lv_widgets/lv_roller.c ****             LV_LOG_WARN("lv_dropdown_get_selected_str: the buffer was too small")
 2105              		.loc 1 336 21 discriminator 1 view .LVU639
 2106 006c 9742     		cmp	r7, r2
 2107 006e F2D8     		bhi	.L109
 2108              	.L110:
 343:lvgl/src/lv_widgets/lv_roller.c **** }
 2109              		.loc 1 343 5 is_stmt 1 view .LVU640
 343:lvgl/src/lv_widgets/lv_roller.c **** }
 2110              		.loc 1 343 12 is_stmt 0 view .LVU641
 2111 0070 0023     		movs	r3, #0
 2112              	.LVL244:
 343:lvgl/src/lv_widgets/lv_roller.c **** }
 2113              		.loc 1 343 12 view .LVU642
 2114 0072 AB54     		strb	r3, [r5, r2]
 344:lvgl/src/lv_widgets/lv_roller.c **** 
 2115              		.loc 1 344 1 view .LVU643
 2116 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2117              	.LVL245:
 2118              	.L113:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 82


 344:lvgl/src/lv_widgets/lv_roller.c **** 
 2119              		.loc 1 344 1 view .LVU644
 2120 0076 0022     		movs	r2, #0
 2121              	.LVL246:
 344:lvgl/src/lv_widgets/lv_roller.c **** 
 2122              		.loc 1 344 1 view .LVU645
 2123 0078 F0E7     		b	.L111
 2124              	.L117:
 2125 007a 00BF     		.align	2
 2126              	.L116:
 2127 007c 00000000 		.word	.LC0
 2128              		.cfi_endproc
 2129              	.LFE482:
 2131              		.section	.text.lv_roller_get_option_cnt,"ax",%progbits
 2132              		.align	1
 2133              		.global	lv_roller_get_option_cnt
 2134              		.syntax unified
 2135              		.thumb
 2136              		.thumb_func
 2137              		.fpu fpv4-sp-d16
 2139              	lv_roller_get_option_cnt:
 2140              	.LVL247:
 2141              	.LFB483:
 352:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 2142              		.loc 1 352 1 is_stmt 1 view -0
 2143              		.cfi_startproc
 2144              		@ args = 0, pretend = 0, frame = 0
 2145              		@ frame_needed = 0, uses_anonymous_args = 0
 352:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 2146              		.loc 1 352 1 is_stmt 0 view .LVU647
 2147 0000 10B5     		push	{r4, lr}
 2148              	.LCFI25:
 2149              		.cfi_def_cfa_offset 8
 2150              		.cfi_offset 4, -8
 2151              		.cfi_offset 14, -4
 2152 0002 0446     		mov	r4, r0
 353:lvgl/src/lv_widgets/lv_roller.c **** 
 2153              		.loc 1 353 5 is_stmt 1 view .LVU648
 353:lvgl/src/lv_widgets/lv_roller.c **** 
 2154              		.loc 1 353 5 view .LVU649
 2155 0004 FFF7FEFF 		bl	lv_debug_check_null
 2156              	.LVL248:
 353:lvgl/src/lv_widgets/lv_roller.c **** 
 2157              		.loc 1 353 5 is_stmt 0 view .LVU650
 2158 0008 28B9     		cbnz	r0, .L119
 353:lvgl/src/lv_widgets/lv_roller.c **** 
 2159              		.loc 1 353 5 is_stmt 1 discriminator 1 view .LVU651
 353:lvgl/src/lv_widgets/lv_roller.c **** 
 2160              		.loc 1 353 5 discriminator 1 view .LVU652
 2161 000a 2246     		mov	r2, r4
 2162 000c 0023     		movs	r3, #0
 2163 000e 0D48     		ldr	r0, .L124
 2164 0010 FFF7FEFF 		bl	lv_debug_log_error
 2165              	.LVL249:
 2166              	.L120:
 353:lvgl/src/lv_widgets/lv_roller.c **** 
 2167              		.loc 1 353 5 discriminator 1 view .LVU653
ARM GAS  D:\Temp\ccqwJTgn.s 			page 83


 353:lvgl/src/lv_widgets/lv_roller.c **** 
 2168              		.loc 1 353 5 discriminator 1 view .LVU654
 2169 0014 FEE7     		b	.L120
 2170              	.L119:
 353:lvgl/src/lv_widgets/lv_roller.c **** 
 2171              		.loc 1 353 40 discriminator 2 view .LVU655
 355:lvgl/src/lv_widgets/lv_roller.c ****     if(ext->mode == LV_ROLLER_MODE_INFINITE) {
 2172              		.loc 1 355 5 discriminator 2 view .LVU656
 355:lvgl/src/lv_widgets/lv_roller.c ****     if(ext->mode == LV_ROLLER_MODE_INFINITE) {
 2173              		.loc 1 355 29 is_stmt 0 discriminator 2 view .LVU657
 2174 0016 2046     		mov	r0, r4
 2175 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 2176              	.LVL250:
 356:lvgl/src/lv_widgets/lv_roller.c ****         return ext->option_cnt / LV_ROLLER_INF_PAGES;
 2177              		.loc 1 356 5 is_stmt 1 discriminator 2 view .LVU658
 356:lvgl/src/lv_widgets/lv_roller.c ****         return ext->option_cnt / LV_ROLLER_INF_PAGES;
 2178              		.loc 1 356 18 is_stmt 0 discriminator 2 view .LVU659
 2179 001c 90F84E30 		ldrb	r3, [r0, #78]	@ zero_extendqisi2
 356:lvgl/src/lv_widgets/lv_roller.c ****         return ext->option_cnt / LV_ROLLER_INF_PAGES;
 2180              		.loc 1 356 7 discriminator 2 view .LVU660
 2181 0020 13F0010F 		tst	r3, #1
 2182 0024 0AD0     		beq	.L121
 357:lvgl/src/lv_widgets/lv_roller.c ****     }
 2183              		.loc 1 357 9 is_stmt 1 view .LVU661
 357:lvgl/src/lv_widgets/lv_roller.c ****     }
 2184              		.loc 1 357 19 is_stmt 0 view .LVU662
 2185 0026 B0F84820 		ldrh	r2, [r0, #72]
 357:lvgl/src/lv_widgets/lv_roller.c ****     }
 2186              		.loc 1 357 32 view .LVU663
 2187 002a 074B     		ldr	r3, .L124+4
 2188 002c A3FB0213 		umull	r1, r3, r3, r2
 2189 0030 D21A     		subs	r2, r2, r3
 2190 0032 03EB5203 		add	r3, r3, r2, lsr #1
 2191 0036 C3F38F00 		ubfx	r0, r3, #2, #16
 2192              	.LVL251:
 2193              	.L122:
 362:lvgl/src/lv_widgets/lv_roller.c **** 
 2194              		.loc 1 362 1 view .LVU664
 2195 003a 10BD     		pop	{r4, pc}
 2196              	.LVL252:
 2197              	.L121:
 360:lvgl/src/lv_widgets/lv_roller.c ****     }
 2198              		.loc 1 360 9 is_stmt 1 view .LVU665
 360:lvgl/src/lv_widgets/lv_roller.c ****     }
 2199              		.loc 1 360 19 is_stmt 0 view .LVU666
 2200 003c B0F84800 		ldrh	r0, [r0, #72]
 2201              	.LVL253:
 360:lvgl/src/lv_widgets/lv_roller.c ****     }
 2202              		.loc 1 360 19 view .LVU667
 2203 0040 FBE7     		b	.L122
 2204              	.L125:
 2205 0042 00BF     		.align	2
 2206              	.L124:
 2207 0044 00000000 		.word	.LC0
 2208 0048 25499224 		.word	613566757
 2209              		.cfi_endproc
 2210              	.LFE483:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 84


 2212              		.section	.text.lv_roller_get_align,"ax",%progbits
 2213              		.align	1
 2214              		.global	lv_roller_get_align
 2215              		.syntax unified
 2216              		.thumb
 2217              		.thumb_func
 2218              		.fpu fpv4-sp-d16
 2220              	lv_roller_get_align:
 2221              	.LVL254:
 2222              	.LFB484:
 370:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 2223              		.loc 1 370 1 is_stmt 1 view -0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 0
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 370:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 2227              		.loc 1 370 1 is_stmt 0 view .LVU669
 2228 0000 10B5     		push	{r4, lr}
 2229              	.LCFI26:
 2230              		.cfi_def_cfa_offset 8
 2231              		.cfi_offset 4, -8
 2232              		.cfi_offset 14, -4
 2233 0002 0446     		mov	r4, r0
 371:lvgl/src/lv_widgets/lv_roller.c **** 
 2234              		.loc 1 371 5 is_stmt 1 view .LVU670
 371:lvgl/src/lv_widgets/lv_roller.c **** 
 2235              		.loc 1 371 5 view .LVU671
 2236 0004 FFF7FEFF 		bl	lv_debug_check_null
 2237              	.LVL255:
 371:lvgl/src/lv_widgets/lv_roller.c **** 
 2238              		.loc 1 371 5 is_stmt 0 view .LVU672
 2239 0008 28B9     		cbnz	r0, .L127
 371:lvgl/src/lv_widgets/lv_roller.c **** 
 2240              		.loc 1 371 5 is_stmt 1 discriminator 1 view .LVU673
 371:lvgl/src/lv_widgets/lv_roller.c **** 
 2241              		.loc 1 371 5 discriminator 1 view .LVU674
 2242 000a 2246     		mov	r2, r4
 2243 000c 0023     		movs	r3, #0
 2244 000e 0548     		ldr	r0, .L130
 2245 0010 FFF7FEFF 		bl	lv_debug_log_error
 2246              	.LVL256:
 2247              	.L128:
 371:lvgl/src/lv_widgets/lv_roller.c **** 
 2248              		.loc 1 371 5 discriminator 1 view .LVU675
 371:lvgl/src/lv_widgets/lv_roller.c **** 
 2249              		.loc 1 371 5 discriminator 1 view .LVU676
 2250 0014 FEE7     		b	.L128
 2251              	.L127:
 371:lvgl/src/lv_widgets/lv_roller.c **** 
 2252              		.loc 1 371 40 discriminator 2 view .LVU677
 373:lvgl/src/lv_widgets/lv_roller.c **** }
 2253              		.loc 1 373 5 discriminator 2 view .LVU678
 373:lvgl/src/lv_widgets/lv_roller.c **** }
 2254              		.loc 1 373 31 is_stmt 0 discriminator 2 view .LVU679
 2255 0016 2046     		mov	r0, r4
 2256 0018 FFF7FEFF 		bl	get_label
 2257              	.LVL257:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 85


 373:lvgl/src/lv_widgets/lv_roller.c **** }
 2258              		.loc 1 373 12 discriminator 2 view .LVU680
 2259 001c FFF7FEFF 		bl	lv_label_get_align
 2260              	.LVL258:
 374:lvgl/src/lv_widgets/lv_roller.c **** 
 2261              		.loc 1 374 1 discriminator 2 view .LVU681
 2262 0020 10BD     		pop	{r4, pc}
 2263              	.LVL259:
 2264              	.L131:
 374:lvgl/src/lv_widgets/lv_roller.c **** 
 2265              		.loc 1 374 1 discriminator 2 view .LVU682
 2266 0022 00BF     		.align	2
 2267              	.L130:
 2268 0024 00000000 		.word	.LC0
 2269              		.cfi_endproc
 2270              	.LFE484:
 2272              		.section	.text.lv_roller_design,"ax",%progbits
 2273              		.align	1
 2274              		.syntax unified
 2275              		.thumb
 2276              		.thumb_func
 2277              		.fpu fpv4-sp-d16
 2279              	lv_roller_design:
 2280              	.LVL260:
 2281              	.LFB487:
 415:lvgl/src/lv_widgets/lv_roller.c ****     if(mode == LV_DESIGN_COVER_CHK) {
 2282              		.loc 1 415 1 is_stmt 1 view -0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 112
 2285              		@ frame_needed = 0, uses_anonymous_args = 0
 416:lvgl/src/lv_widgets/lv_roller.c ****         return LV_DESIGN_RES_NOT_COVER;
 2286              		.loc 1 416 5 view .LVU684
 416:lvgl/src/lv_widgets/lv_roller.c ****         return LV_DESIGN_RES_NOT_COVER;
 2287              		.loc 1 416 7 is_stmt 0 view .LVU685
 2288 0000 022A     		cmp	r2, #2
 2289 0002 00F03381 		beq	.L140
 415:lvgl/src/lv_widgets/lv_roller.c ****     if(mode == LV_DESIGN_COVER_CHK) {
 2290              		.loc 1 415 1 view .LVU686
 2291 0006 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2292              	.LCFI27:
 2293              		.cfi_def_cfa_offset 28
 2294              		.cfi_offset 4, -28
 2295              		.cfi_offset 5, -24
 2296              		.cfi_offset 6, -20
 2297              		.cfi_offset 7, -16
 2298              		.cfi_offset 8, -12
 2299              		.cfi_offset 9, -8
 2300              		.cfi_offset 14, -4
 2301 000a A1B0     		sub	sp, sp, #132
 2302              	.LCFI28:
 2303              		.cfi_def_cfa_offset 160
 2304 000c 0E46     		mov	r6, r1
 2305 000e 0446     		mov	r4, r0
 420:lvgl/src/lv_widgets/lv_roller.c ****         draw_bg(roller, clip_area);
 2306              		.loc 1 420 10 is_stmt 1 view .LVU687
 420:lvgl/src/lv_widgets/lv_roller.c ****         draw_bg(roller, clip_area);
 2307              		.loc 1 420 12 is_stmt 0 view .LVU688
ARM GAS  D:\Temp\ccqwJTgn.s 			page 86


 2308 0010 2AB1     		cbz	r2, .L146
 443:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_label_dsc_t label_dsc;
 2309              		.loc 1 443 10 is_stmt 1 view .LVU689
 443:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_label_dsc_t label_dsc;
 2310              		.loc 1 443 12 is_stmt 0 view .LVU690
 2311 0012 012A     		cmp	r2, #1
 2312 0014 5CD0     		beq	.L147
 505:lvgl/src/lv_widgets/lv_roller.c **** }
 2313              		.loc 1 505 12 view .LVU691
 2314 0016 0020     		movs	r0, #0
 2315              	.LVL261:
 2316              	.L133:
 506:lvgl/src/lv_widgets/lv_roller.c **** 
 2317              		.loc 1 506 1 view .LVU692
 2318 0018 21B0     		add	sp, sp, #132
 2319              	.LCFI29:
 2320              		.cfi_remember_state
 2321              		.cfi_def_cfa_offset 28
 2322              		@ sp needed
 2323 001a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2324              	.LVL262:
 2325              	.L146:
 2326              	.LCFI30:
 2327              		.cfi_restore_state
 2328              	.LBB163:
 421:lvgl/src/lv_widgets/lv_roller.c **** 
 2329              		.loc 1 421 9 is_stmt 1 view .LVU693
 2330 001e FFF7FEFF 		bl	draw_bg
 2331              	.LVL263:
 423:lvgl/src/lv_widgets/lv_roller.c ****         lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
 2332              		.loc 1 423 9 view .LVU694
 2333              	.LBB164:
 2334              	.LBI164:
 2335              		.loc 2 168 1 view .LVU695
 2336              	.LBB165:
 2337              		.loc 2 168 1 view .LVU696
 2338 0022 48F28E02 		movw	r2, #32910
 2339 0026 0021     		movs	r1, #0
 2340 0028 2046     		mov	r0, r4
 2341 002a FFF7FEFF 		bl	_lv_obj_get_style_ptr
 2342              	.LVL264:
 2343 002e 0546     		mov	r5, r0
 2344              	.LVL265:
 2345              		.loc 2 168 1 is_stmt 0 view .LVU697
 2346              	.LBE165:
 2347              	.LBE164:
 424:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t font_h        = lv_font_get_line_height(font);
 2348              		.loc 1 424 9 is_stmt 1 view .LVU698
 2349              	.LBB166:
 2350              	.LBI166:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 2351              		.loc 2 161 1 view .LVU699
 2352              	.LBB167:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 2353              		.loc 2 161 1 view .LVU700
 2354 0030 48F28102 		movw	r2, #32897
 2355 0034 0021     		movs	r1, #0
ARM GAS  D:\Temp\ccqwJTgn.s 			page 87


 2356 0036 2046     		mov	r0, r4
 2357              	.LVL266:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 2358              		.loc 2 161 1 is_stmt 0 view .LVU701
 2359 0038 FFF7FEFF 		bl	_lv_obj_get_style_int
 2360              	.LVL267:
 2361 003c 8046     		mov	r8, r0
 2362              	.LVL268:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 2363              		.loc 2 161 1 view .LVU702
 2364              	.LBE167:
 2365              	.LBE166:
 425:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t rect_area;
 2366              		.loc 1 425 9 is_stmt 1 view .LVU703
 2367              	.LBB168:
 2368              	.LBI168:
 116:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** {
 2369              		.loc 3 116 26 view .LVU704
 2370              	.LBB169:
 2371              		.loc 3 118 5 view .LVU705
 2372              		.loc 3 118 18 is_stmt 0 view .LVU706
 2373 003e B5F90850 		ldrsh	r5, [r5, #8]
 2374              	.LVL269:
 2375              		.loc 3 118 18 view .LVU707
 2376              	.LBE169:
 2377              	.LBE168:
 426:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y1 = roller->coords.y1 + lv_obj_get_height(roller) / 2 - font_h / 2 - line_space 
 2378              		.loc 1 426 9 is_stmt 1 view .LVU708
 427:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 2379              		.loc 1 427 9 view .LVU709
 427:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 2380              		.loc 1 427 38 is_stmt 0 view .LVU710
 2381 0042 678A     		ldrh	r7, [r4, #18]
 427:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 2382              		.loc 1 427 44 view .LVU711
 2383 0044 2046     		mov	r0, r4
 2384 0046 FFF7FEFF 		bl	lv_obj_get_height
 2385              	.LVL270:
 427:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 2386              		.loc 1 427 42 view .LVU712
 2387 004a 00EBD070 		add	r0, r0, r0, lsr #31
 2388 004e 07EB6003 		add	r3, r7, r0, asr #1
 2389 0052 9BB2     		uxth	r3, r3
 427:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 2390              		.loc 1 427 74 view .LVU713
 2391 0054 05EBD577 		add	r7, r5, r5, lsr #31
 2392 0058 A3EB6703 		sub	r3, r3, r7, asr #1
 2393 005c 9BB2     		uxth	r3, r3
 427:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 2394              		.loc 1 427 87 view .LVU714
 2395 005e 08EBD872 		add	r2, r8, r8, lsr #31
 2396 0062 A3EB6203 		sub	r3, r3, r2, asr #1
 2397 0066 9BB2     		uxth	r3, r3
 427:lvgl/src/lv_widgets/lv_roller.c ****         if((font_h & 0x1) && (line_space & 0x1)) rect_area.y1--; /*Compensate the two rounding erro
 2398              		.loc 1 427 22 view .LVU715
 2399 0068 ADF81E30 		strh	r3, [sp, #30]	@ movhi
 428:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
ARM GAS  D:\Temp\ccqwJTgn.s 			page 88


 2400              		.loc 1 428 9 is_stmt 1 view .LVU716
 428:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 2401              		.loc 1 428 20 is_stmt 0 view .LVU717
 2402 006c ADB2     		uxth	r5, r5
 428:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 2403              		.loc 1 428 11 view .LVU718
 2404 006e 15F0010F 		tst	r5, #1
 2405 0072 05D0     		beq	.L135
 428:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 2406              		.loc 1 428 27 discriminator 1 view .LVU719
 2407 0074 18F0010F 		tst	r8, #1
 2408 0078 02D0     		beq	.L135
 428:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 2409              		.loc 1 428 50 is_stmt 1 discriminator 2 view .LVU720
 428:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + font_h + line_space - 1;
 2410              		.loc 1 428 62 is_stmt 0 discriminator 2 view .LVU721
 2411 007a 013B     		subs	r3, r3, #1
 2412 007c ADF81E30 		strh	r3, [sp, #30]	@ movhi
 2413              	.L135:
 429:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 2414              		.loc 1 429 9 is_stmt 1 view .LVU722
 429:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 2415              		.loc 1 429 33 is_stmt 0 view .LVU723
 2416 0080 BDF81E30 		ldrh	r3, [sp, #30]
 429:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 2417              		.loc 1 429 37 view .LVU724
 2418 0084 1D44     		add	r5, r5, r3
 2419              	.LVL271:
 429:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 2420              		.loc 1 429 46 view .LVU725
 2421 0086 18FA85F5 		uxtah	r5, r8, r5
 2422 008a ADB2     		uxth	r5, r5
 429:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 2423              		.loc 1 429 59 view .LVU726
 2424 008c 013D     		subs	r5, r5, #1
 429:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t roller_coords;
 2425              		.loc 1 429 22 view .LVU727
 2426 008e ADF82250 		strh	r5, [sp, #34]	@ movhi
 430:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_get_coords(roller, &roller_coords);
 2427              		.loc 1 430 9 is_stmt 1 view .LVU728
 431:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_get_inner_coords(roller, &roller_coords);
 2428              		.loc 1 431 9 view .LVU729
 2429 0092 09A9     		add	r1, sp, #36
 2430 0094 2046     		mov	r0, r4
 2431 0096 FFF7FEFF 		bl	lv_obj_get_coords
 2432              	.LVL272:
 432:lvgl/src/lv_widgets/lv_roller.c **** 
 2433              		.loc 1 432 9 view .LVU730
 2434 009a 09A9     		add	r1, sp, #36
 2435 009c 2046     		mov	r0, r4
 2436 009e FFF7FEFF 		bl	lv_obj_get_inner_coords
 2437              	.LVL273:
 434:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x2 = roller_coords.x2;
 2438              		.loc 1 434 9 view .LVU731
 434:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x2 = roller_coords.x2;
 2439              		.loc 1 434 37 is_stmt 0 view .LVU732
 2440 00a2 BDF92430 		ldrsh	r3, [sp, #36]
ARM GAS  D:\Temp\ccqwJTgn.s 			page 89


 434:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x2 = roller_coords.x2;
 2441              		.loc 1 434 22 view .LVU733
 2442 00a6 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 435:lvgl/src/lv_widgets/lv_roller.c **** 
 2443              		.loc 1 435 9 is_stmt 1 view .LVU734
 435:lvgl/src/lv_widgets/lv_roller.c **** 
 2444              		.loc 1 435 37 is_stmt 0 view .LVU735
 2445 00aa BDF92830 		ldrsh	r3, [sp, #40]
 435:lvgl/src/lv_widgets/lv_roller.c **** 
 2446              		.loc 1 435 22 view .LVU736
 2447 00ae ADF82030 		strh	r3, [sp, #32]	@ movhi
 437:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_rect_dsc_init(&sel_dsc);
 2448              		.loc 1 437 9 is_stmt 1 view .LVU737
 438:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_init_draw_rect_dsc(roller, LV_ROLLER_PART_SELECTED, &sel_dsc);
 2449              		.loc 1 438 9 view .LVU738
 2450 00b2 0BA8     		add	r0, sp, #44
 2451 00b4 FFF7FEFF 		bl	lv_draw_rect_dsc_init
 2452              	.LVL274:
 439:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_rect(&rect_area, clip_area, &sel_dsc);
 2453              		.loc 1 439 9 view .LVU739
 2454 00b8 0BAA     		add	r2, sp, #44
 2455 00ba 0321     		movs	r1, #3
 2456 00bc 2046     		mov	r0, r4
 2457 00be FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 2458              	.LVL275:
 440:lvgl/src/lv_widgets/lv_roller.c ****     }
 2459              		.loc 1 440 9 view .LVU740
 2460 00c2 0BAA     		add	r2, sp, #44
 2461 00c4 3146     		mov	r1, r6
 2462 00c6 07A8     		add	r0, sp, #28
 2463 00c8 FFF7FEFF 		bl	lv_draw_rect
 2464              	.LVL276:
 2465              	.LBE163:
 505:lvgl/src/lv_widgets/lv_roller.c **** }
 2466              		.loc 1 505 12 is_stmt 0 view .LVU741
 2467 00cc 0020     		movs	r0, #0
 2468 00ce A3E7     		b	.L133
 2469              	.LVL277:
 2470              	.L147:
 2471              	.LBB170:
 444:lvgl/src/lv_widgets/lv_roller.c ****         lv_draw_label_dsc_init(&label_dsc);
 2472              		.loc 1 444 9 is_stmt 1 view .LVU742
 445:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_init_draw_label_dsc(roller, LV_ROLLER_PART_SELECTED, &label_dsc);
 2473              		.loc 1 445 9 view .LVU743
 2474 00d0 0BA8     		add	r0, sp, #44
 2475              	.LVL278:
 445:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_init_draw_label_dsc(roller, LV_ROLLER_PART_SELECTED, &label_dsc);
 2476              		.loc 1 445 9 is_stmt 0 view .LVU744
 2477 00d2 FFF7FEFF 		bl	lv_draw_label_dsc_init
 2478              	.LVL279:
 446:lvgl/src/lv_widgets/lv_roller.c **** 
 2479              		.loc 1 446 9 is_stmt 1 view .LVU745
 2480 00d6 0BAA     		add	r2, sp, #44
 2481 00d8 0321     		movs	r1, #3
 2482 00da 2046     		mov	r0, r4
 2483 00dc FFF7FEFF 		bl	lv_obj_init_draw_label_dsc
 2484              	.LVL280:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 90


 448:lvgl/src/lv_widgets/lv_roller.c **** 
 2485              		.loc 1 448 9 view .LVU746
 2486              	.LBB171:
 2487              	.LBI171:
 2488              		.loc 2 168 1 view .LVU747
 2489              	.LBB172:
 2490              		.loc 2 168 1 view .LVU748
 2491 00e0 48F28E02 		movw	r2, #32910
 2492 00e4 0021     		movs	r1, #0
 2493 00e6 2046     		mov	r0, r4
 2494 00e8 FFF7FEFF 		bl	_lv_obj_get_style_ptr
 2495              	.LVL281:
 2496              		.loc 2 168 1 is_stmt 0 view .LVU749
 2497              	.LBE172:
 2498              	.LBE171:
 2499              	.LBB173:
 2500              	.LBI173:
 116:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** {
 2501              		.loc 3 116 26 is_stmt 1 view .LVU750
 2502              	.LBB174:
 2503              		.loc 3 118 5 view .LVU751
 2504              		.loc 3 118 18 is_stmt 0 view .LVU752
 2505 00ec B0F90850 		ldrsh	r5, [r0, #8]
 2506              	.LVL282:
 2507              		.loc 3 118 18 view .LVU753
 2508              	.LBE174:
 2509              	.LBE173:
 451:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y1 = roller->coords.y1 + lv_obj_get_height(roller) / 2 - bg_font_h / 2 - label_ds
 2510              		.loc 1 451 9 is_stmt 1 view .LVU754
 452:lvgl/src/lv_widgets/lv_roller.c ****         if((bg_font_h & 0x1) && (label_dsc.line_space & 0x1)) rect_area.y1--; /*Compensate the two 
 2511              		.loc 1 452 9 view .LVU755
 452:lvgl/src/lv_widgets/lv_roller.c ****         if((bg_font_h & 0x1) && (label_dsc.line_space & 0x1)) rect_area.y1--; /*Compensate the two 
 2512              		.loc 1 452 38 is_stmt 0 view .LVU756
 2513 00f0 678A     		ldrh	r7, [r4, #18]
 452:lvgl/src/lv_widgets/lv_roller.c ****         if((bg_font_h & 0x1) && (label_dsc.line_space & 0x1)) rect_area.y1--; /*Compensate the two 
 2514              		.loc 1 452 44 view .LVU757
 2515 00f2 2046     		mov	r0, r4
 2516 00f4 FFF7FEFF 		bl	lv_obj_get_height
 2517              	.LVL283:
 452:lvgl/src/lv_widgets/lv_roller.c ****         if((bg_font_h & 0x1) && (label_dsc.line_space & 0x1)) rect_area.y1--; /*Compensate the two 
 2518              		.loc 1 452 42 view .LVU758
 2519 00f8 00EBD070 		add	r0, r0, r0, lsr #31
 2520 00fc 07EB6002 		add	r2, r7, r0, asr #1
 2521 0100 92B2     		uxth	r2, r2
 452:lvgl/src/lv_widgets/lv_roller.c ****         if((bg_font_h & 0x1) && (label_dsc.line_space & 0x1)) rect_area.y1--; /*Compensate the two 
 2522              		.loc 1 452 74 view .LVU759
 2523 0102 05EBD577 		add	r7, r5, r5, lsr #31
 2524 0106 A2EB6702 		sub	r2, r2, r7, asr #1
 2525 010a 92B2     		uxth	r2, r2
 452:lvgl/src/lv_widgets/lv_roller.c ****         if((bg_font_h & 0x1) && (label_dsc.line_space & 0x1)) rect_area.y1--; /*Compensate the two 
 2526              		.loc 1 452 101 view .LVU760
 2527 010c BDF93A30 		ldrsh	r3, [sp, #58]
 452:lvgl/src/lv_widgets/lv_roller.c ****         if((bg_font_h & 0x1) && (label_dsc.line_space & 0x1)) rect_area.y1--; /*Compensate the two 
 2528              		.loc 1 452 90 view .LVU761
 2529 0110 03EBD371 		add	r1, r3, r3, lsr #31
 2530 0114 A2EB6102 		sub	r2, r2, r1, asr #1
 2531 0118 92B2     		uxth	r2, r2
ARM GAS  D:\Temp\ccqwJTgn.s 			page 91


 452:lvgl/src/lv_widgets/lv_roller.c ****         if((bg_font_h & 0x1) && (label_dsc.line_space & 0x1)) rect_area.y1--; /*Compensate the two 
 2532              		.loc 1 452 22 view .LVU762
 2533 011a ADF81620 		strh	r2, [sp, #22]	@ movhi
 453:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + bg_font_h + label_dsc.line_space - 1;
 2534              		.loc 1 453 9 is_stmt 1 view .LVU763
 453:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + bg_font_h + label_dsc.line_space - 1;
 2535              		.loc 1 453 23 is_stmt 0 view .LVU764
 2536 011e ADB2     		uxth	r5, r5
 453:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + bg_font_h + label_dsc.line_space - 1;
 2537              		.loc 1 453 11 view .LVU765
 2538 0120 15F0010F 		tst	r5, #1
 2539 0124 05D0     		beq	.L136
 453:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + bg_font_h + label_dsc.line_space - 1;
 2540              		.loc 1 453 30 discriminator 1 view .LVU766
 2541 0126 13F0010F 		tst	r3, #1
 2542 012a 02D0     		beq	.L136
 453:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + bg_font_h + label_dsc.line_space - 1;
 2543              		.loc 1 453 63 is_stmt 1 discriminator 2 view .LVU767
 453:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.y2 = rect_area.y1 + bg_font_h + label_dsc.line_space - 1;
 2544              		.loc 1 453 75 is_stmt 0 discriminator 2 view .LVU768
 2545 012c 013A     		subs	r2, r2, #1
 2546 012e ADF81620 		strh	r2, [sp, #22]	@ movhi
 2547              	.L136:
 454:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x1 = roller->coords.x1;
 2548              		.loc 1 454 9 is_stmt 1 view .LVU769
 454:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x1 = roller->coords.x1;
 2549              		.loc 1 454 33 is_stmt 0 view .LVU770
 2550 0132 BDF81620 		ldrh	r2, [sp, #22]
 454:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x1 = roller->coords.x1;
 2551              		.loc 1 454 37 view .LVU771
 2552 0136 1544     		add	r5, r5, r2
 2553              	.LVL284:
 454:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x1 = roller->coords.x1;
 2554              		.loc 1 454 60 view .LVU772
 2555 0138 9BB2     		uxth	r3, r3
 454:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x1 = roller->coords.x1;
 2556              		.loc 1 454 49 view .LVU773
 2557 013a 13FA85F3 		uxtah	r3, r3, r5
 2558 013e 9BB2     		uxth	r3, r3
 454:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x1 = roller->coords.x1;
 2559              		.loc 1 454 72 view .LVU774
 2560 0140 013B     		subs	r3, r3, #1
 454:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x1 = roller->coords.x1;
 2561              		.loc 1 454 22 view .LVU775
 2562 0142 ADF81A30 		strh	r3, [sp, #26]	@ movhi
 455:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x2 = roller->coords.x2;
 2563              		.loc 1 455 9 is_stmt 1 view .LVU776
 455:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x2 = roller->coords.x2;
 2564              		.loc 1 455 38 is_stmt 0 view .LVU777
 2565 0146 B4F91030 		ldrsh	r3, [r4, #16]
 455:lvgl/src/lv_widgets/lv_roller.c ****         rect_area.x2 = roller->coords.x2;
 2566              		.loc 1 455 22 view .LVU778
 2567 014a ADF81430 		strh	r3, [sp, #20]	@ movhi
 456:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t mask_sel;
 2568              		.loc 1 456 9 is_stmt 1 view .LVU779
 456:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t mask_sel;
 2569              		.loc 1 456 38 is_stmt 0 view .LVU780
ARM GAS  D:\Temp\ccqwJTgn.s 			page 92


 2570 014e B4F91430 		ldrsh	r3, [r4, #20]
 456:lvgl/src/lv_widgets/lv_roller.c ****         lv_area_t mask_sel;
 2571              		.loc 1 456 22 view .LVU781
 2572 0152 ADF81830 		strh	r3, [sp, #24]	@ movhi
 457:lvgl/src/lv_widgets/lv_roller.c ****         bool area_ok;
 2573              		.loc 1 457 9 is_stmt 1 view .LVU782
 458:lvgl/src/lv_widgets/lv_roller.c ****         area_ok = _lv_area_intersect(&mask_sel, clip_area, &rect_area);
 2574              		.loc 1 458 9 view .LVU783
 459:lvgl/src/lv_widgets/lv_roller.c ****         if(area_ok) {
 2575              		.loc 1 459 9 view .LVU784
 459:lvgl/src/lv_widgets/lv_roller.c ****         if(area_ok) {
 2576              		.loc 1 459 19 is_stmt 0 view .LVU785
 2577 0156 05AA     		add	r2, sp, #20
 2578 0158 3146     		mov	r1, r6
 2579 015a 07A8     		add	r0, sp, #28
 2580 015c FFF7FEFF 		bl	_lv_area_intersect
 2581              	.LVL285:
 460:lvgl/src/lv_widgets/lv_roller.c ****             lv_obj_t * label = get_label(roller);
 2582              		.loc 1 460 9 is_stmt 1 view .LVU786
 460:lvgl/src/lv_widgets/lv_roller.c ****             lv_obj_t * label = get_label(roller);
 2583              		.loc 1 460 11 is_stmt 0 view .LVU787
 2584 0160 08B9     		cbnz	r0, .L148
 2585              	.LVL286:
 2586              	.L137:
 460:lvgl/src/lv_widgets/lv_roller.c ****             lv_obj_t * label = get_label(roller);
 2587              		.loc 1 460 11 view .LVU788
 2588              	.LBE170:
 505:lvgl/src/lv_widgets/lv_roller.c **** }
 2589              		.loc 1 505 12 discriminator 1 view .LVU789
 2590 0162 0020     		movs	r0, #0
 2591 0164 58E7     		b	.L133
 2592              	.LVL287:
 2593              	.L148:
 2594              	.LBB178:
 2595              	.LBB175:
 461:lvgl/src/lv_widgets/lv_roller.c ****             lv_label_align_t label_align = lv_roller_get_align(roller);
 2596              		.loc 1 461 13 is_stmt 1 view .LVU790
 461:lvgl/src/lv_widgets/lv_roller.c ****             lv_label_align_t label_align = lv_roller_get_align(roller);
 2597              		.loc 1 461 32 is_stmt 0 view .LVU791
 2598 0166 2046     		mov	r0, r4
 2599              	.LVL288:
 461:lvgl/src/lv_widgets/lv_roller.c ****             lv_label_align_t label_align = lv_roller_get_align(roller);
 2600              		.loc 1 461 32 view .LVU792
 2601 0168 FFF7FEFF 		bl	get_label
 2602              	.LVL289:
 2603 016c 0646     		mov	r6, r0
 2604              	.LVL290:
 462:lvgl/src/lv_widgets/lv_roller.c **** 
 2605              		.loc 1 462 13 is_stmt 1 view .LVU793
 462:lvgl/src/lv_widgets/lv_roller.c **** 
 2606              		.loc 1 462 44 is_stmt 0 view .LVU794
 2607 016e 2046     		mov	r0, r4
 2608              	.LVL291:
 462:lvgl/src/lv_widgets/lv_roller.c **** 
 2609              		.loc 1 462 44 view .LVU795
 2610 0170 FFF7FEFF 		bl	lv_roller_get_align
 2611              	.LVL292:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 93


 464:lvgl/src/lv_widgets/lv_roller.c ****                 label_dsc.flag |= LV_TXT_FLAG_CENTER;
 2612              		.loc 1 464 13 is_stmt 1 view .LVU796
 464:lvgl/src/lv_widgets/lv_roller.c ****                 label_dsc.flag |= LV_TXT_FLAG_CENTER;
 2613              		.loc 1 464 15 is_stmt 0 view .LVU797
 2614 0174 0128     		cmp	r0, #1
 2615 0176 6BD0     		beq	.L149
 467:lvgl/src/lv_widgets/lv_roller.c ****                 label_dsc.flag |= LV_TXT_FLAG_RIGHT;
 2616              		.loc 1 467 18 is_stmt 1 view .LVU798
 467:lvgl/src/lv_widgets/lv_roller.c ****                 label_dsc.flag |= LV_TXT_FLAG_RIGHT;
 2617              		.loc 1 467 20 is_stmt 0 view .LVU799
 2618 0178 0228     		cmp	r0, #2
 2619 017a 70D0     		beq	.L150
 2620              	.L139:
 472:lvgl/src/lv_widgets/lv_roller.c ****             _lv_txt_get_size(&res_p, lv_label_get_text(label), label_dsc.font, label_dsc.letter_spa
 2621              		.loc 1 472 13 is_stmt 1 view .LVU800
 473:lvgl/src/lv_widgets/lv_roller.c ****                              lv_obj_get_width(roller), LV_TXT_FLAG_EXPAND);
 2622              		.loc 1 473 13 view .LVU801
 473:lvgl/src/lv_widgets/lv_roller.c ****                              lv_obj_get_width(roller), LV_TXT_FLAG_EXPAND);
 2623              		.loc 1 473 38 is_stmt 0 view .LVU802
 2624 017c 3046     		mov	r0, r6
 2625              	.LVL293:
 473:lvgl/src/lv_widgets/lv_roller.c ****                              lv_obj_get_width(roller), LV_TXT_FLAG_EXPAND);
 2626              		.loc 1 473 38 view .LVU803
 2627 017e FFF7FEFF 		bl	lv_label_get_text
 2628              	.LVL294:
 2629 0182 0546     		mov	r5, r0
 473:lvgl/src/lv_widgets/lv_roller.c ****                              lv_obj_get_width(roller), LV_TXT_FLAG_EXPAND);
 2630              		.loc 1 473 13 view .LVU804
 2631 0184 0D9F     		ldr	r7, [sp, #52]
 2632 0186 BDF93C80 		ldrsh	r8, [sp, #60]
 2633 018a BDF93A90 		ldrsh	r9, [sp, #58]
 2634 018e 2046     		mov	r0, r4
 2635 0190 FFF7FEFF 		bl	lv_obj_get_width
 2636              	.LVL295:
 2637 0194 0223     		movs	r3, #2
 2638 0196 0293     		str	r3, [sp, #8]
 2639 0198 0190     		str	r0, [sp, #4]
 2640 019a CDF80090 		str	r9, [sp]
 2641 019e 4346     		mov	r3, r8
 2642 01a0 3A46     		mov	r2, r7
 2643 01a2 2946     		mov	r1, r5
 2644 01a4 04A8     		add	r0, sp, #16
 2645 01a6 FFF7FEFF 		bl	_lv_txt_get_size
 2646              	.LVL296:
 477:lvgl/src/lv_widgets/lv_roller.c ****             int32_t label_y_prop = label->coords.y1 - (roller_h / 2 +
 2647              		.loc 1 477 13 is_stmt 1 view .LVU805
 477:lvgl/src/lv_widgets/lv_roller.c ****             int32_t label_y_prop = label->coords.y1 - (roller_h / 2 +
 2648              		.loc 1 477 35 is_stmt 0 view .LVU806
 2649 01aa 2046     		mov	r0, r4
 2650 01ac FFF7FEFF 		bl	lv_obj_get_height
 2651              	.LVL297:
 478:lvgl/src/lv_widgets/lv_roller.c ****                                                        roller->coords.y1); /*label offset from the 
 2652              		.loc 1 478 13 is_stmt 1 view .LVU807
 478:lvgl/src/lv_widgets/lv_roller.c ****                                                        roller->coords.y1); /*label offset from the 
 2653              		.loc 1 478 49 is_stmt 0 view .LVU808
 2654 01b0 B6F91270 		ldrsh	r7, [r6, #18]
 478:lvgl/src/lv_widgets/lv_roller.c ****                                                        roller->coords.y1); /*label offset from the 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 94


 2655              		.loc 1 478 65 view .LVU809
 2656 01b4 00EBD070 		add	r0, r0, r0, lsr #31
 2657              	.LVL298:
 478:lvgl/src/lv_widgets/lv_roller.c ****                                                        roller->coords.y1); /*label offset from the 
 2658              		.loc 1 478 65 view .LVU810
 2659 01b8 40F34F05 		sbfx	r5, r0, #1, #16
 479:lvgl/src/lv_widgets/lv_roller.c ****             label_y_prop = (label_y_prop << 14) / lv_obj_get_height(
 2660              		.loc 1 479 70 view .LVU811
 2661 01bc B4F91230 		ldrsh	r3, [r4, #18]
 478:lvgl/src/lv_widgets/lv_roller.c ****                                                        roller->coords.y1); /*label offset from the 
 2662              		.loc 1 478 69 view .LVU812
 2663 01c0 2B44     		add	r3, r3, r5
 478:lvgl/src/lv_widgets/lv_roller.c ****                                                        roller->coords.y1); /*label offset from the 
 2664              		.loc 1 478 21 view .LVU813
 2665 01c2 FF1A     		subs	r7, r7, r3
 2666              	.LVL299:
 480:lvgl/src/lv_widgets/lv_roller.c ****                                label); /*Proportional position from the middle line (upscaled)*/
 2667              		.loc 1 480 13 is_stmt 1 view .LVU814
 480:lvgl/src/lv_widgets/lv_roller.c ****                                label); /*Proportional position from the middle line (upscaled)*/
 2668              		.loc 1 480 42 is_stmt 0 view .LVU815
 2669 01c4 BF03     		lsls	r7, r7, #14
 2670              	.LVL300:
 480:lvgl/src/lv_widgets/lv_roller.c ****                                label); /*Proportional position from the middle line (upscaled)*/
 2671              		.loc 1 480 51 view .LVU816
 2672 01c6 3046     		mov	r0, r6
 2673 01c8 FFF7FEFF 		bl	lv_obj_get_height
 2674              	.LVL301:
 480:lvgl/src/lv_widgets/lv_roller.c ****                                label); /*Proportional position from the middle line (upscaled)*/
 2675              		.loc 1 480 26 view .LVU817
 2676 01cc 97FBF0F7 		sdiv	r7, r7, r0
 2677              	.LVL302:
 484:lvgl/src/lv_widgets/lv_roller.c ****             lv_coord_t corr = (label_dsc.font->line_height - normal_label_font->line_height) / 2;
 2678              		.loc 1 484 13 is_stmt 1 view .LVU818
 2679              	.LBB176:
 2680              	.LBI176:
 2681              		.loc 2 168 1 view .LVU819
 2682              	.LBB177:
 2683              		.loc 2 168 1 view .LVU820
 2684 01d0 48F28E02 		movw	r2, #32910
 2685 01d4 0021     		movs	r1, #0
 2686 01d6 2046     		mov	r0, r4
 2687 01d8 FFF7FEFF 		bl	_lv_obj_get_style_ptr
 2688              	.LVL303:
 2689              		.loc 2 168 1 is_stmt 0 view .LVU821
 2690              	.LBE177:
 2691              	.LBE176:
 485:lvgl/src/lv_widgets/lv_roller.c **** 
 2692              		.loc 1 485 13 is_stmt 1 view .LVU822
 485:lvgl/src/lv_widgets/lv_roller.c **** 
 2693              		.loc 1 485 41 is_stmt 0 view .LVU823
 2694 01dc 0D9B     		ldr	r3, [sp, #52]
 485:lvgl/src/lv_widgets/lv_roller.c **** 
 2695              		.loc 1 485 46 view .LVU824
 2696 01de B3F90820 		ldrsh	r2, [r3, #8]
 485:lvgl/src/lv_widgets/lv_roller.c **** 
 2697              		.loc 1 485 79 view .LVU825
 2698 01e2 B0F90830 		ldrsh	r3, [r0, #8]
ARM GAS  D:\Temp\ccqwJTgn.s 			page 95


 485:lvgl/src/lv_widgets/lv_roller.c **** 
 2699              		.loc 1 485 60 view .LVU826
 2700 01e6 D21A     		subs	r2, r2, r3
 485:lvgl/src/lv_widgets/lv_roller.c **** 
 2701              		.loc 1 485 94 view .LVU827
 2702 01e8 02EBD272 		add	r2, r2, r2, lsr #31
 2703 01ec 5210     		asrs	r2, r2, #1
 485:lvgl/src/lv_widgets/lv_roller.c **** 
 2704              		.loc 1 485 24 view .LVU828
 2705 01ee 10B2     		sxth	r0, r2
 2706              	.LVL304:
 488:lvgl/src/lv_widgets/lv_roller.c ****             int32_t label_sel_y = roller_h / 2 + roller->coords.y1;
 2707              		.loc 1 488 13 is_stmt 1 view .LVU829
 488:lvgl/src/lv_widgets/lv_roller.c ****             int32_t label_sel_y = roller_h / 2 + roller->coords.y1;
 2708              		.loc 1 488 21 is_stmt 0 view .LVU830
 2709 01f0 BDF81210 		ldrh	r1, [sp, #18]
 2710 01f4 8A1A     		subs	r2, r1, r2
 2711 01f6 92B2     		uxth	r2, r2
 2712 01f8 11B2     		sxth	r1, r2
 2713 01fa ADF81210 		strh	r1, [sp, #18]	@ movhi
 489:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_y += (label_y_prop * res_p.y) >> 14;
 2714              		.loc 1 489 13 is_stmt 1 view .LVU831
 489:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_y += (label_y_prop * res_p.y) >> 14;
 2715              		.loc 1 489 64 is_stmt 0 view .LVU832
 2716 01fe B4F91230 		ldrsh	r3, [r4, #18]
 489:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_y += (label_y_prop * res_p.y) >> 14;
 2717              		.loc 1 489 21 view .LVU833
 2718 0202 2B44     		add	r3, r3, r5
 2719              	.LVL305:
 490:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_y -= corr;
 2720              		.loc 1 490 13 is_stmt 1 view .LVU834
 490:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_y -= corr;
 2721              		.loc 1 490 42 is_stmt 0 view .LVU835
 2722 0204 07FB01F7 		mul	r7, r7, r1
 2723              	.LVL306:
 490:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_y -= corr;
 2724              		.loc 1 490 25 view .LVU836
 2725 0208 03EBA733 		add	r3, r3, r7, asr #14
 2726              	.LVL307:
 491:lvgl/src/lv_widgets/lv_roller.c **** 
 2727              		.loc 1 491 13 is_stmt 1 view .LVU837
 491:lvgl/src/lv_widgets/lv_roller.c **** 
 2728              		.loc 1 491 25 is_stmt 0 view .LVU838
 2729 020c 1B1A     		subs	r3, r3, r0
 2730              	.LVL308:
 494:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.x1 = label->coords.x1;
 2731              		.loc 1 494 13 is_stmt 1 view .LVU839
 495:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.y1 = label_sel_y;
 2732              		.loc 1 495 13 view .LVU840
 495:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.y1 = label_sel_y;
 2733              		.loc 1 495 46 is_stmt 0 view .LVU841
 2734 020e B6F91010 		ldrsh	r1, [r6, #16]
 495:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.y1 = label_sel_y;
 2735              		.loc 1 495 31 view .LVU842
 2736 0212 ADF82410 		strh	r1, [sp, #36]	@ movhi
 496:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.x2 = label->coords.x2;
 2737              		.loc 1 496 13 is_stmt 1 view .LVU843
ARM GAS  D:\Temp\ccqwJTgn.s 			page 96


 496:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.x2 = label->coords.x2;
 2738              		.loc 1 496 31 is_stmt 0 view .LVU844
 2739 0216 1BB2     		sxth	r3, r3
 2740              	.LVL309:
 496:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.x2 = label->coords.x2;
 2741              		.loc 1 496 31 view .LVU845
 2742 0218 ADF82630 		strh	r3, [sp, #38]	@ movhi
 497:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.y2 = label_sel_area.y1 + res_p.y;
 2743              		.loc 1 497 13 is_stmt 1 view .LVU846
 497:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.y2 = label_sel_area.y1 + res_p.y;
 2744              		.loc 1 497 46 is_stmt 0 view .LVU847
 2745 021c B6F91410 		ldrsh	r1, [r6, #20]
 497:lvgl/src/lv_widgets/lv_roller.c ****             label_sel_area.y2 = label_sel_area.y1 + res_p.y;
 2746              		.loc 1 497 31 view .LVU848
 2747 0220 ADF82810 		strh	r1, [sp, #40]	@ movhi
 498:lvgl/src/lv_widgets/lv_roller.c **** 
 2748              		.loc 1 498 13 is_stmt 1 view .LVU849
 498:lvgl/src/lv_widgets/lv_roller.c **** 
 2749              		.loc 1 498 51 is_stmt 0 view .LVU850
 2750 0224 12FA83F3 		uxtah	r3, r2, r3
 498:lvgl/src/lv_widgets/lv_roller.c **** 
 2751              		.loc 1 498 31 view .LVU851
 2752 0228 ADF82A30 		strh	r3, [sp, #42]	@ movhi
 500:lvgl/src/lv_widgets/lv_roller.c ****             lv_draw_label(&label_sel_area, &mask_sel, &label_dsc, lv_label_get_text(label), NULL);
 2753              		.loc 1 500 13 is_stmt 1 view .LVU852
 500:lvgl/src/lv_widgets/lv_roller.c ****             lv_draw_label(&label_sel_area, &mask_sel, &label_dsc, lv_label_get_text(label), NULL);
 2754              		.loc 1 500 28 is_stmt 0 view .LVU853
 2755 022c 9DF84D30 		ldrb	r3, [sp, #77]	@ zero_extendqisi2
 2756 0230 43F00203 		orr	r3, r3, #2
 2757 0234 8DF84D30 		strb	r3, [sp, #77]
 501:lvgl/src/lv_widgets/lv_roller.c ****         }
 2758              		.loc 1 501 13 is_stmt 1 view .LVU854
 501:lvgl/src/lv_widgets/lv_roller.c ****         }
 2759              		.loc 1 501 67 is_stmt 0 view .LVU855
 2760 0238 3046     		mov	r0, r6
 2761              	.LVL310:
 501:lvgl/src/lv_widgets/lv_roller.c ****         }
 2762              		.loc 1 501 67 view .LVU856
 2763 023a FFF7FEFF 		bl	lv_label_get_text
 2764              	.LVL311:
 501:lvgl/src/lv_widgets/lv_roller.c ****         }
 2765              		.loc 1 501 13 view .LVU857
 2766 023e 0023     		movs	r3, #0
 2767 0240 0093     		str	r3, [sp]
 2768 0242 0346     		mov	r3, r0
 2769 0244 0BAA     		add	r2, sp, #44
 2770 0246 07A9     		add	r1, sp, #28
 2771 0248 09A8     		add	r0, sp, #36
 2772 024a FFF7FEFF 		bl	lv_draw_label
 2773              	.LVL312:
 2774 024e 88E7     		b	.L137
 2775              	.LVL313:
 2776              	.L149:
 465:lvgl/src/lv_widgets/lv_roller.c ****             }
 2777              		.loc 1 465 17 is_stmt 1 view .LVU858
 465:lvgl/src/lv_widgets/lv_roller.c ****             }
 2778              		.loc 1 465 32 is_stmt 0 view .LVU859
ARM GAS  D:\Temp\ccqwJTgn.s 			page 97


 2779 0250 9DF84D30 		ldrb	r3, [sp, #77]	@ zero_extendqisi2
 2780 0254 43F00403 		orr	r3, r3, #4
 2781 0258 8DF84D30 		strb	r3, [sp, #77]
 2782 025c 8EE7     		b	.L139
 2783              	.L150:
 468:lvgl/src/lv_widgets/lv_roller.c ****             }
 2784              		.loc 1 468 17 is_stmt 1 view .LVU860
 468:lvgl/src/lv_widgets/lv_roller.c ****             }
 2785              		.loc 1 468 32 is_stmt 0 view .LVU861
 2786 025e 9DF84D30 		ldrb	r3, [sp, #77]	@ zero_extendqisi2
 2787 0262 43F00803 		orr	r3, r3, #8
 2788 0266 8DF84D30 		strb	r3, [sp, #77]
 2789 026a 87E7     		b	.L139
 2790              	.LVL314:
 2791              	.L140:
 2792              	.LCFI31:
 2793              		.cfi_def_cfa_offset 0
 2794              		.cfi_restore 4
 2795              		.cfi_restore 5
 2796              		.cfi_restore 6
 2797              		.cfi_restore 7
 2798              		.cfi_restore 8
 2799              		.cfi_restore 9
 2800              		.cfi_restore 14
 468:lvgl/src/lv_widgets/lv_roller.c ****             }
 2801              		.loc 1 468 32 view .LVU862
 2802              	.LBE175:
 2803              	.LBE178:
 417:lvgl/src/lv_widgets/lv_roller.c ****     }
 2804              		.loc 1 417 16 view .LVU863
 2805 026c 0220     		movs	r0, #2
 2806              	.LVL315:
 506:lvgl/src/lv_widgets/lv_roller.c **** 
 2807              		.loc 1 506 1 view .LVU864
 2808 026e 7047     		bx	lr
 2809              		.cfi_endproc
 2810              	.LFE487:
 2812              		.section	.text.lv_roller_get_auto_fit,"ax",%progbits
 2813              		.align	1
 2814              		.global	lv_roller_get_auto_fit
 2815              		.syntax unified
 2816              		.thumb
 2817              		.thumb_func
 2818              		.fpu fpv4-sp-d16
 2820              	lv_roller_get_auto_fit:
 2821              	.LVL316:
 2822              	.LFB485:
 382:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 2823              		.loc 1 382 1 is_stmt 1 view -0
 2824              		.cfi_startproc
 2825              		@ args = 0, pretend = 0, frame = 0
 2826              		@ frame_needed = 0, uses_anonymous_args = 0
 382:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 2827              		.loc 1 382 1 is_stmt 0 view .LVU866
 2828 0000 10B5     		push	{r4, lr}
 2829              	.LCFI32:
 2830              		.cfi_def_cfa_offset 8
ARM GAS  D:\Temp\ccqwJTgn.s 			page 98


 2831              		.cfi_offset 4, -8
 2832              		.cfi_offset 14, -4
 2833 0002 0446     		mov	r4, r0
 383:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 2834              		.loc 1 383 5 is_stmt 1 view .LVU867
 383:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 2835              		.loc 1 383 5 view .LVU868
 2836 0004 FFF7FEFF 		bl	lv_debug_check_null
 2837              	.LVL317:
 383:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 2838              		.loc 1 383 5 is_stmt 0 view .LVU869
 2839 0008 28B9     		cbnz	r0, .L152
 383:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 2840              		.loc 1 383 5 is_stmt 1 discriminator 1 view .LVU870
 383:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 2841              		.loc 1 383 5 discriminator 1 view .LVU871
 2842 000a 2246     		mov	r2, r4
 2843 000c 0023     		movs	r3, #0
 2844 000e 0648     		ldr	r0, .L155
 2845 0010 FFF7FEFF 		bl	lv_debug_log_error
 2846              	.LVL318:
 2847              	.L153:
 383:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 2848              		.loc 1 383 5 discriminator 1 view .LVU872
 383:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 2849              		.loc 1 383 5 discriminator 1 view .LVU873
 2850 0014 FEE7     		b	.L153
 2851              	.L152:
 383:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 2852              		.loc 1 383 40 discriminator 2 view .LVU874
 384:lvgl/src/lv_widgets/lv_roller.c ****     return ext->auto_fit ? true : false;
 2853              		.loc 1 384 5 discriminator 2 view .LVU875
 384:lvgl/src/lv_widgets/lv_roller.c ****     return ext->auto_fit ? true : false;
 2854              		.loc 1 384 29 is_stmt 0 discriminator 2 view .LVU876
 2855 0016 2046     		mov	r0, r4
 2856 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 2857              	.LVL319:
 385:lvgl/src/lv_widgets/lv_roller.c **** }
 2858              		.loc 1 385 5 is_stmt 1 discriminator 2 view .LVU877
 385:lvgl/src/lv_widgets/lv_roller.c **** }
 2859              		.loc 1 385 26 is_stmt 0 discriminator 2 view .LVU878
 2860 001c 90F84E00 		ldrb	r0, [r0, #78]	@ zero_extendqisi2
 2861              	.LVL320:
 386:lvgl/src/lv_widgets/lv_roller.c **** 
 2862              		.loc 1 386 1 discriminator 2 view .LVU879
 2863 0020 C0F34000 		ubfx	r0, r0, #1, #1
 2864 0024 10BD     		pop	{r4, pc}
 2865              	.LVL321:
 2866              	.L156:
 386:lvgl/src/lv_widgets/lv_roller.c **** 
 2867              		.loc 1 386 1 discriminator 2 view .LVU880
 2868 0026 00BF     		.align	2
 2869              	.L155:
 2870 0028 00000000 		.word	.LC0
 2871              		.cfi_endproc
 2872              	.LFE485:
 2874              		.section	.text.refr_width,"ax",%progbits
ARM GAS  D:\Temp\ccqwJTgn.s 			page 99


 2875              		.align	1
 2876              		.syntax unified
 2877              		.thumb
 2878              		.thumb_func
 2879              		.fpu fpv4-sp-d16
 2881              	refr_width:
 2882              	.LVL322:
 2883              	.LFB495:
 936:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 2884              		.loc 1 936 1 is_stmt 1 view -0
 2885              		.cfi_startproc
 2886              		@ args = 0, pretend = 0, frame = 8
 2887              		@ frame_needed = 0, uses_anonymous_args = 0
 936:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 2888              		.loc 1 936 1 is_stmt 0 view .LVU882
 2889 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2890              	.LCFI33:
 2891              		.cfi_def_cfa_offset 36
 2892              		.cfi_offset 4, -36
 2893              		.cfi_offset 5, -32
 2894              		.cfi_offset 6, -28
 2895              		.cfi_offset 7, -24
 2896              		.cfi_offset 8, -20
 2897              		.cfi_offset 9, -16
 2898              		.cfi_offset 10, -12
 2899              		.cfi_offset 11, -8
 2900              		.cfi_offset 14, -4
 2901 0004 87B0     		sub	sp, sp, #28
 2902              	.LCFI34:
 2903              		.cfi_def_cfa_offset 64
 2904 0006 0446     		mov	r4, r0
 937:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return;
 2905              		.loc 1 937 5 is_stmt 1 view .LVU883
 937:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return;
 2906              		.loc 1 937 24 is_stmt 0 view .LVU884
 2907 0008 FFF7FEFF 		bl	get_label
 2908              	.LVL323:
 938:lvgl/src/lv_widgets/lv_roller.c **** 
 2909              		.loc 1 938 5 is_stmt 1 view .LVU885
 938:lvgl/src/lv_widgets/lv_roller.c **** 
 2910              		.loc 1 938 7 is_stmt 0 view .LVU886
 2911 000c 60B1     		cbz	r0, .L157
 2912 000e 0546     		mov	r5, r0
 940:lvgl/src/lv_widgets/lv_roller.c ****         case LV_LABEL_ALIGN_LEFT:
 2913              		.loc 1 940 5 is_stmt 1 view .LVU887
 940:lvgl/src/lv_widgets/lv_roller.c ****         case LV_LABEL_ALIGN_LEFT:
 2914              		.loc 1 940 12 is_stmt 0 view .LVU888
 2915 0010 FFF7FEFF 		bl	lv_label_get_align
 2916              	.LVL324:
 940:lvgl/src/lv_widgets/lv_roller.c ****         case LV_LABEL_ALIGN_LEFT:
 2917              		.loc 1 940 5 view .LVU889
 2918 0014 0128     		cmp	r0, #1
 2919 0016 12D0     		beq	.L159
 2920 0018 43B2     		sxtb	r3, r0
 2921 001a 43B1     		cbz	r3, .L160
 2922 001c 0228     		cmp	r0, #2
 2923 001e 16D0     		beq	.L161
ARM GAS  D:\Temp\ccqwJTgn.s 			page 100


 2924              	.L162:
 952:lvgl/src/lv_widgets/lv_roller.c **** 
 2925              		.loc 1 952 5 is_stmt 1 view .LVU890
 952:lvgl/src/lv_widgets/lv_roller.c **** 
 2926              		.loc 1 952 8 is_stmt 0 view .LVU891
 2927 0020 2046     		mov	r0, r4
 2928 0022 FFF7FEFF 		bl	lv_roller_get_auto_fit
 2929              	.LVL325:
 952:lvgl/src/lv_widgets/lv_roller.c **** 
 2930              		.loc 1 952 7 view .LVU892
 2931 0026 D0B9     		cbnz	r0, .L167
 2932              	.LVL326:
 2933              	.L157:
 972:lvgl/src/lv_widgets/lv_roller.c **** 
 2934              		.loc 1 972 1 view .LVU893
 2935 0028 07B0     		add	sp, sp, #28
 2936              	.LCFI35:
 2937              		.cfi_remember_state
 2938              		.cfi_def_cfa_offset 36
 2939              		@ sp needed
 2940 002a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2941              	.LVL327:
 2942              	.L160:
 2943              	.LCFI36:
 2944              		.cfi_restore_state
 942:lvgl/src/lv_widgets/lv_roller.c ****             break;
 2945              		.loc 1 942 13 is_stmt 1 view .LVU894
 2946 002e 0021     		movs	r1, #0
 2947 0030 0091     		str	r1, [sp]
 2948 0032 0B46     		mov	r3, r1
 2949 0034 0722     		movs	r2, #7
 2950 0036 2846     		mov	r0, r5
 2951 0038 FFF7FEFF 		bl	lv_obj_align
 2952              	.LVL328:
 943:lvgl/src/lv_widgets/lv_roller.c ****         case LV_LABEL_ALIGN_CENTER:
 2953              		.loc 1 943 13 view .LVU895
 2954 003c F0E7     		b	.L162
 2955              	.L159:
 945:lvgl/src/lv_widgets/lv_roller.c ****             break;
 2956              		.loc 1 945 13 view .LVU896
 2957 003e 0021     		movs	r1, #0
 2958 0040 0091     		str	r1, [sp]
 2959 0042 0B46     		mov	r3, r1
 2960 0044 0A46     		mov	r2, r1
 2961 0046 2846     		mov	r0, r5
 2962 0048 FFF7FEFF 		bl	lv_obj_align
 2963              	.LVL329:
 946:lvgl/src/lv_widgets/lv_roller.c ****         case LV_LABEL_ALIGN_RIGHT:
 2964              		.loc 1 946 13 view .LVU897
 2965 004c E8E7     		b	.L162
 2966              	.L161:
 948:lvgl/src/lv_widgets/lv_roller.c ****             break;
 2967              		.loc 1 948 13 view .LVU898
 2968 004e 0021     		movs	r1, #0
 2969 0050 0091     		str	r1, [sp]
 2970 0052 0B46     		mov	r3, r1
 2971 0054 0822     		movs	r2, #8
ARM GAS  D:\Temp\ccqwJTgn.s 			page 101


 2972 0056 2846     		mov	r0, r5
 2973 0058 FFF7FEFF 		bl	lv_obj_align
 2974              	.LVL330:
 949:lvgl/src/lv_widgets/lv_roller.c ****     }
 2975              		.loc 1 949 13 view .LVU899
 2976 005c E0E7     		b	.L162
 2977              	.L167:
 954:lvgl/src/lv_widgets/lv_roller.c **** 
 2978              		.loc 1 954 5 view .LVU900
 954:lvgl/src/lv_widgets/lv_roller.c **** 
 2979              		.loc 1 954 26 is_stmt 0 view .LVU901
 2980 005e 2846     		mov	r0, r5
 2981 0060 FFF7FEFF 		bl	lv_obj_get_width
 2982              	.LVL331:
 2983 0064 0646     		mov	r6, r0
 2984              	.LVL332:
 956:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_int_t right = lv_obj_get_style_pad_right(roller, LV_ROLLER_PART_BG);
 2985              		.loc 1 956 5 is_stmt 1 view .LVU902
 2986              	.LBB179:
 2987              	.LBI179:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2988              		.loc 2 112 1 view .LVU903
 2989              	.LBB180:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2990              		.loc 2 112 1 view .LVU904
 2991 0066 1222     		movs	r2, #18
 2992 0068 0021     		movs	r1, #0
 2993 006a 2046     		mov	r0, r4
 2994 006c FFF7FEFF 		bl	_lv_obj_get_style_int
 2995              	.LVL333:
 2996 0070 8146     		mov	r9, r0
 2997              	.LVL334:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2998              		.loc 2 112 1 is_stmt 0 view .LVU905
 2999              	.LBE180:
 3000              	.LBE179:
 957:lvgl/src/lv_widgets/lv_roller.c **** 
 3001              		.loc 1 957 5 is_stmt 1 view .LVU906
 3002              	.LBB181:
 3003              	.LBI181:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 3004              		.loc 2 113 1 view .LVU907
 3005              	.LBB182:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 3006              		.loc 2 113 1 view .LVU908
 3007 0072 1322     		movs	r2, #19
 3008 0074 0021     		movs	r1, #0
 3009 0076 2046     		mov	r0, r4
 3010 0078 FFF7FEFF 		bl	_lv_obj_get_style_int
 3011              	.LVL335:
 3012 007c 8046     		mov	r8, r0
 3013              	.LVL336:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 3014              		.loc 2 113 1 is_stmt 0 view .LVU909
 3015              	.LBE182:
 3016              	.LBE181:
 959:lvgl/src/lv_widgets/lv_roller.c ****     const lv_font_t * sel_font = lv_obj_get_style_text_font(roller, LV_ROLLER_PART_SELECTED);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 102


 3017              		.loc 1 959 5 is_stmt 1 view .LVU910
 3018              	.LBB183:
 3019              	.LBI183:
 3020              		.loc 2 168 1 view .LVU911
 3021              	.LBB184:
 3022              		.loc 2 168 1 view .LVU912
 3023 007e 48F28E02 		movw	r2, #32910
 3024 0082 0021     		movs	r1, #0
 3025 0084 2046     		mov	r0, r4
 3026 0086 FFF7FEFF 		bl	_lv_obj_get_style_ptr
 3027              	.LVL337:
 3028 008a 8246     		mov	r10, r0
 3029              	.LVL338:
 3030              		.loc 2 168 1 is_stmt 0 view .LVU913
 3031              	.LBE184:
 3032              	.LBE183:
 960:lvgl/src/lv_widgets/lv_roller.c **** 
 3033              		.loc 1 960 5 is_stmt 1 view .LVU914
 3034              	.LBB185:
 3035              	.LBI185:
 3036              		.loc 2 168 1 view .LVU915
 3037              	.LBB186:
 3038              		.loc 2 168 1 view .LVU916
 3039 008c 48F28E02 		movw	r2, #32910
 3040 0090 0321     		movs	r1, #3
 3041 0092 2046     		mov	r0, r4
 3042              	.LVL339:
 3043              		.loc 2 168 1 is_stmt 0 view .LVU917
 3044 0094 FFF7FEFF 		bl	_lv_obj_get_style_ptr
 3045              	.LVL340:
 3046 0098 0746     		mov	r7, r0
 3047              	.LVL341:
 3048              		.loc 2 168 1 view .LVU918
 3049              	.LBE186:
 3050              	.LBE185:
 963:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t letter_sp = lv_obj_get_style_text_letter_space(roller, LV_ROLLER_PART_SELECTED);
 3051              		.loc 1 963 5 is_stmt 1 view .LVU919
 963:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t letter_sp = lv_obj_get_style_text_letter_space(roller, LV_ROLLER_PART_SELECTED);
 3052              		.loc 1 963 7 is_stmt 0 view .LVU920
 3053 009a 5045     		cmp	r0, r10
 3054 009c 22D0     		beq	.L163
 3055              	.LBB187:
 964:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t line_sp = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_SELECTED);
 3056              		.loc 1 964 9 is_stmt 1 view .LVU921
 3057              	.LVL342:
 3058              	.LBB188:
 3059              	.LBI188:
 160:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LINE_SPACE, text_line_space, lv_style_int_t, _int, scalar)
 3060              		.loc 2 160 1 view .LVU922
 3061              	.LBB189:
 160:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LINE_SPACE, text_line_space, lv_style_int_t, _int, scalar)
 3062              		.loc 2 160 1 view .LVU923
 3063 009e 48F28002 		movw	r2, #32896
 3064 00a2 0321     		movs	r1, #3
 3065 00a4 2046     		mov	r0, r4
 3066              	.LVL343:
 160:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LINE_SPACE, text_line_space, lv_style_int_t, _int, scalar)
ARM GAS  D:\Temp\ccqwJTgn.s 			page 103


 3067              		.loc 2 160 1 is_stmt 0 view .LVU924
 3068 00a6 FFF7FEFF 		bl	_lv_obj_get_style_int
 3069              	.LVL344:
 3070 00aa 8246     		mov	r10, r0
 3071              	.LVL345:
 160:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LINE_SPACE, text_line_space, lv_style_int_t, _int, scalar)
 3072              		.loc 2 160 1 view .LVU925
 3073              	.LBE189:
 3074              	.LBE188:
 965:lvgl/src/lv_widgets/lv_roller.c ****         lv_point_t p;
 3075              		.loc 1 965 9 is_stmt 1 view .LVU926
 3076              	.LBB190:
 3077              	.LBI190:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 3078              		.loc 2 161 1 view .LVU927
 3079              	.LBB191:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 3080              		.loc 2 161 1 view .LVU928
 3081 00ac 48F28102 		movw	r2, #32897
 3082 00b0 0321     		movs	r1, #3
 3083 00b2 2046     		mov	r0, r4
 3084 00b4 FFF7FEFF 		bl	_lv_obj_get_style_int
 3085              	.LVL346:
 3086 00b8 8346     		mov	fp, r0
 3087              	.LVL347:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 3088              		.loc 2 161 1 is_stmt 0 view .LVU929
 3089              	.LBE191:
 3090              	.LBE190:
 966:lvgl/src/lv_widgets/lv_roller.c ****         _lv_txt_get_size(&p, lv_label_get_text(label), sel_font, letter_sp, line_sp, LV_COORD_MAX, 
 3091              		.loc 1 966 9 is_stmt 1 view .LVU930
 967:lvgl/src/lv_widgets/lv_roller.c ****         if(label_w < p.x)label_w = p.x;
 3092              		.loc 1 967 9 view .LVU931
 967:lvgl/src/lv_widgets/lv_roller.c ****         if(label_w < p.x)label_w = p.x;
 3093              		.loc 1 967 30 is_stmt 0 view .LVU932
 3094 00ba 2846     		mov	r0, r5
 3095 00bc FFF7FEFF 		bl	lv_label_get_text
 3096              	.LVL348:
 967:lvgl/src/lv_widgets/lv_roller.c ****         if(label_w < p.x)label_w = p.x;
 3097              		.loc 1 967 9 view .LVU933
 3098 00c0 0023     		movs	r3, #0
 3099 00c2 0293     		str	r3, [sp, #8]
 3100 00c4 47F61843 		movw	r3, #31768
 3101 00c8 0193     		str	r3, [sp, #4]
 3102 00ca CDF800B0 		str	fp, [sp]
 3103 00ce 5346     		mov	r3, r10
 3104 00d0 3A46     		mov	r2, r7
 3105 00d2 0146     		mov	r1, r0
 3106 00d4 05A8     		add	r0, sp, #20
 3107 00d6 FFF7FEFF 		bl	_lv_txt_get_size
 3108              	.LVL349:
 968:lvgl/src/lv_widgets/lv_roller.c ****     }
 3109              		.loc 1 968 9 is_stmt 1 view .LVU934
 968:lvgl/src/lv_widgets/lv_roller.c ****     }
 3110              		.loc 1 968 23 is_stmt 0 view .LVU935
 3111 00da BDF91430 		ldrsh	r3, [sp, #20]
 968:lvgl/src/lv_widgets/lv_roller.c ****     }
ARM GAS  D:\Temp\ccqwJTgn.s 			page 104


 3112              		.loc 1 968 11 view .LVU936
 3113 00de B342     		cmp	r3, r6
 3114 00e0 00DD     		ble	.L163
 968:lvgl/src/lv_widgets/lv_roller.c ****     }
 3115              		.loc 1 968 34 view .LVU937
 3116 00e2 1E46     		mov	r6, r3
 3117              	.LVL350:
 3118              	.L163:
 968:lvgl/src/lv_widgets/lv_roller.c ****     }
 3119              		.loc 1 968 34 view .LVU938
 3120              	.LBE187:
 971:lvgl/src/lv_widgets/lv_roller.c **** }
 3121              		.loc 1 971 5 is_stmt 1 view .LVU939
 971:lvgl/src/lv_widgets/lv_roller.c **** }
 3122              		.loc 1 971 38 is_stmt 0 view .LVU940
 3123 00e4 06EB0901 		add	r1, r6, r9
 971:lvgl/src/lv_widgets/lv_roller.c **** }
 3124              		.loc 1 971 45 view .LVU941
 3125 00e8 18FA81F1 		uxtah	r1, r8, r1
 971:lvgl/src/lv_widgets/lv_roller.c **** }
 3126              		.loc 1 971 5 view .LVU942
 3127 00ec 09B2     		sxth	r1, r1
 3128 00ee 2046     		mov	r0, r4
 3129 00f0 FFF7FEFF 		bl	lv_obj_set_width
 3130              	.LVL351:
 3131 00f4 98E7     		b	.L157
 3132              		.cfi_endproc
 3133              	.LFE495:
 3135              		.section	.text.lv_roller_scrl_signal,"ax",%progbits
 3136              		.align	1
 3137              		.syntax unified
 3138              		.thumb
 3139              		.thumb_func
 3140              		.fpu fpv4-sp-d16
 3142              	lv_roller_scrl_signal:
 3143              	.LVL352:
 3144              	.LFB491:
 710:lvgl/src/lv_widgets/lv_roller.c ****     lv_res_t res;
 3145              		.loc 1 710 1 is_stmt 1 view -0
 3146              		.cfi_startproc
 3147              		@ args = 0, pretend = 0, frame = 8
 3148              		@ frame_needed = 0, uses_anonymous_args = 0
 710:lvgl/src/lv_widgets/lv_roller.c ****     lv_res_t res;
 3149              		.loc 1 710 1 is_stmt 0 view .LVU944
 3150 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3151              	.LCFI37:
 3152              		.cfi_def_cfa_offset 32
 3153              		.cfi_offset 4, -32
 3154              		.cfi_offset 5, -28
 3155              		.cfi_offset 6, -24
 3156              		.cfi_offset 7, -20
 3157              		.cfi_offset 8, -16
 3158              		.cfi_offset 9, -12
 3159              		.cfi_offset 10, -8
 3160              		.cfi_offset 14, -4
 3161 0004 82B0     		sub	sp, sp, #8
 3162              	.LCFI38:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 105


 3163              		.cfi_def_cfa_offset 40
 3164 0006 8046     		mov	r8, r0
 3165 0008 0D46     		mov	r5, r1
 3166 000a 1646     		mov	r6, r2
 711:lvgl/src/lv_widgets/lv_roller.c **** 
 3167              		.loc 1 711 5 is_stmt 1 view .LVU945
 714:lvgl/src/lv_widgets/lv_roller.c ****     if(res != LV_RES_OK) return res;
 3168              		.loc 1 714 5 view .LVU946
 714:lvgl/src/lv_widgets/lv_roller.c ****     if(res != LV_RES_OK) return res;
 3169              		.loc 1 714 11 is_stmt 0 view .LVU947
 3170 000c 474B     		ldr	r3, .L185
 3171 000e 1B68     		ldr	r3, [r3]
 3172 0010 9847     		blx	r3
 3173              	.LVL353:
 714:lvgl/src/lv_widgets/lv_roller.c ****     if(res != LV_RES_OK) return res;
 3174              		.loc 1 714 11 view .LVU948
 3175 0012 0446     		mov	r4, r0
 3176              	.LVL354:
 715:lvgl/src/lv_widgets/lv_roller.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 3177              		.loc 1 715 5 is_stmt 1 view .LVU949
 715:lvgl/src/lv_widgets/lv_roller.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 3178              		.loc 1 715 7 is_stmt 0 view .LVU950
 3179 0014 0128     		cmp	r0, #1
 3180 0016 40F08480 		bne	.L169
 716:lvgl/src/lv_widgets/lv_roller.c **** 
 3181              		.loc 1 716 5 is_stmt 1 view .LVU951
 716:lvgl/src/lv_widgets/lv_roller.c **** 
 3182              		.loc 1 716 7 is_stmt 0 view .LVU952
 3183 001a 072D     		cmp	r5, #7
 3184 001c 2FD0     		beq	.L179
 718:lvgl/src/lv_widgets/lv_roller.c **** 
 3185              		.loc 1 718 5 is_stmt 1 view .LVU953
 718:lvgl/src/lv_widgets/lv_roller.c **** 
 3186              		.loc 1 718 29 is_stmt 0 view .LVU954
 3187 001e 4046     		mov	r0, r8
 3188              	.LVL355:
 718:lvgl/src/lv_widgets/lv_roller.c **** 
 3189              		.loc 1 718 29 view .LVU955
 3190 0020 FFF7FEFF 		bl	lv_obj_get_parent
 3191              	.LVL356:
 3192 0024 0646     		mov	r6, r0
 3193              	.LVL357:
 721:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return LV_RES_INV;
 3194              		.loc 1 721 5 is_stmt 1 view .LVU956
 721:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return LV_RES_INV;
 3195              		.loc 1 721 24 is_stmt 0 view .LVU957
 3196 0026 FFF7FEFF 		bl	get_label
 3197              	.LVL358:
 722:lvgl/src/lv_widgets/lv_roller.c **** 
 3198              		.loc 1 722 5 is_stmt 1 view .LVU958
 722:lvgl/src/lv_widgets/lv_roller.c **** 
 3199              		.loc 1 722 7 is_stmt 0 view .LVU959
 3200 002a 8146     		mov	r9, r0
 3201 002c 0028     		cmp	r0, #0
 3202 002e 77D0     		beq	.L177
 724:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 3203              		.loc 1 724 5 is_stmt 1 view .LVU960
ARM GAS  D:\Temp\ccqwJTgn.s 			page 106


 724:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 3204              		.loc 1 724 13 is_stmt 0 view .LVU961
 3205 0030 4FF0FF33 		mov	r3, #-1
 3206 0034 0193     		str	r3, [sp, #4]
 725:lvgl/src/lv_widgets/lv_roller.c **** 
 3207              		.loc 1 725 5 is_stmt 1 view .LVU962
 725:lvgl/src/lv_widgets/lv_roller.c **** 
 3208              		.loc 1 725 29 is_stmt 0 view .LVU963
 3209 0036 3046     		mov	r0, r6
 3210              	.LVL359:
 725:lvgl/src/lv_widgets/lv_roller.c **** 
 3211              		.loc 1 725 29 view .LVU964
 3212 0038 FFF7FEFF 		bl	lv_obj_get_ext_attr
 3213              	.LVL360:
 3214 003c 0746     		mov	r7, r0
 3215              	.LVL361:
 727:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_int_t line_space = lv_obj_get_style_text_line_space(roller, LV_ROLLER_PART_BG);
 3216              		.loc 1 727 5 is_stmt 1 view .LVU965
 3217              	.LBB192:
 3218              	.LBI192:
 3219              		.loc 2 168 1 view .LVU966
 3220              	.LBB193:
 3221              		.loc 2 168 1 view .LVU967
 3222 003e 48F28E02 		movw	r2, #32910
 3223 0042 0021     		movs	r1, #0
 3224 0044 3046     		mov	r0, r6
 3225              	.LVL362:
 3226              		.loc 2 168 1 is_stmt 0 view .LVU968
 3227 0046 FFF7FEFF 		bl	_lv_obj_get_style_ptr
 3228              	.LVL363:
 3229 004a 8246     		mov	r10, r0
 3230              	.LVL364:
 3231              		.loc 2 168 1 view .LVU969
 3232              	.LBE193:
 3233              	.LBE192:
 728:lvgl/src/lv_widgets/lv_roller.c ****     lv_coord_t font_h              = lv_font_get_line_height(font);
 3234              		.loc 1 728 5 is_stmt 1 view .LVU970
 3235              	.LBB194:
 3236              	.LBI194:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 3237              		.loc 2 161 1 view .LVU971
 3238              	.LBB195:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 3239              		.loc 2 161 1 view .LVU972
 3240 004c 48F28102 		movw	r2, #32897
 3241 0050 0021     		movs	r1, #0
 3242 0052 3046     		mov	r0, r6
 3243              	.LVL365:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 3244              		.loc 2 161 1 is_stmt 0 view .LVU973
 3245 0054 FFF7FEFF 		bl	_lv_obj_get_style_int
 3246              	.LVL366:
 161:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 3247              		.loc 2 161 1 view .LVU974
 3248              	.LBE195:
 3249              	.LBE194:
 729:lvgl/src/lv_widgets/lv_roller.c **** 
ARM GAS  D:\Temp\ccqwJTgn.s 			page 107


 3250              		.loc 1 729 5 is_stmt 1 view .LVU975
 3251              	.LBB196:
 3252              	.LBI196:
 116:lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h **** {
 3253              		.loc 3 116 26 view .LVU976
 3254              	.LBB197:
 3255              		.loc 3 118 5 view .LVU977
 3256              		.loc 3 118 18 is_stmt 0 view .LVU978
 3257 0058 BAF90810 		ldrsh	r1, [r10, #8]
 3258              	.LVL367:
 3259              		.loc 3 118 18 view .LVU979
 3260              	.LBE197:
 3261              	.LBE196:
 731:lvgl/src/lv_widgets/lv_roller.c ****         /*If dragged then align the list to have an element in the middle*/
 3262              		.loc 1 731 5 is_stmt 1 view .LVU980
 731:lvgl/src/lv_widgets/lv_roller.c ****         /*If dragged then align the list to have an element in the middle*/
 3263              		.loc 1 731 7 is_stmt 0 view .LVU981
 3264 005c 132D     		cmp	r5, #19
 3265 005e 14D0     		beq	.L180
 748:lvgl/src/lv_widgets/lv_roller.c ****         release_handler(roller);
 3266              		.loc 1 748 10 is_stmt 1 view .LVU982
 748:lvgl/src/lv_widgets/lv_roller.c ****         release_handler(roller);
 3267              		.loc 1 748 12 is_stmt 0 view .LVU983
 3268 0060 0E2D     		cmp	r5, #14
 3269 0062 46D0     		beq	.L181
 751:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 3270              		.loc 1 751 10 is_stmt 1 view .LVU984
 751:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 3271              		.loc 1 751 12 is_stmt 0 view .LVU985
 3272 0064 0B2D     		cmp	r5, #11
 3273 0066 48D0     		beq	.L182
 756:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 3274              		.loc 1 756 10 is_stmt 1 view .LVU986
 756:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 3275              		.loc 1 756 12 is_stmt 0 view .LVU987
 3276 0068 032D     		cmp	r5, #3
 3277 006a 4BD0     		beq	.L183
 3278              	.LVL368:
 3279              	.L174:
 766:lvgl/src/lv_widgets/lv_roller.c ****         refr_position(roller, LV_ANIM_ON);
 3280              		.loc 1 766 5 is_stmt 1 view .LVU988
 766:lvgl/src/lv_widgets/lv_roller.c ****         refr_position(roller, LV_ANIM_ON);
 3281              		.loc 1 766 11 is_stmt 0 view .LVU989
 3282 006c 019B     		ldr	r3, [sp, #4]
 766:lvgl/src/lv_widgets/lv_roller.c ****         refr_position(roller, LV_ANIM_ON);
 3283              		.loc 1 766 7 view .LVU990
 3284 006e B3F1FF3F 		cmp	r3, #-1
 3285 0072 56D0     		beq	.L169
 767:lvgl/src/lv_widgets/lv_roller.c ****     }
 3286              		.loc 1 767 9 is_stmt 1 view .LVU991
 3287 0074 0121     		movs	r1, #1
 3288 0076 3046     		mov	r0, r6
 3289 0078 FFF7FEFF 		bl	refr_position
 3290              	.LVL369:
 3291 007c 51E0     		b	.L169
 3292              	.LVL370:
 3293              	.L179:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 108


 716:lvgl/src/lv_widgets/lv_roller.c **** 
 3294              		.loc 1 716 36 discriminator 1 view .LVU992
 716:lvgl/src/lv_widgets/lv_roller.c **** 
 3295              		.loc 1 716 43 is_stmt 0 discriminator 1 view .LVU993
 3296 007e 2C49     		ldr	r1, .L185+4
 3297 0080 3046     		mov	r0, r6
 3298              	.LVL371:
 716:lvgl/src/lv_widgets/lv_roller.c **** 
 3299              		.loc 1 716 43 discriminator 1 view .LVU994
 3300 0082 FFF7FEFF 		bl	lv_obj_handle_get_type_signal
 3301              	.LVL372:
 3302 0086 0446     		mov	r4, r0
 3303 0088 4BE0     		b	.L169
 3304              	.LVL373:
 3305              	.L180:
 3306              	.LBB198:
 733:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t label_unit = font_h + line_space;
 3307              		.loc 1 733 9 is_stmt 1 view .LVU995
 733:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t label_unit = font_h + line_space;
 3308              		.loc 1 733 46 is_stmt 0 view .LVU996
 3309 008a B9F81220 		ldrh	r2, [r9, #18]
 733:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t label_unit = font_h + line_space;
 3310              		.loc 1 733 66 view .LVU997
 3311 008e B6F91250 		ldrsh	r5, [r6, #18]
 3312 0092 ACB2     		uxth	r4, r5
 733:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t label_unit = font_h + line_space;
 3313              		.loc 1 733 50 view .LVU998
 3314 0094 121B     		subs	r2, r2, r4
 733:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t label_unit = font_h + line_space;
 3315              		.loc 1 733 20 view .LVU999
 3316 0096 14B2     		sxth	r4, r2
 3317              	.LVL374:
 734:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t mid        = (roller->coords.y2 - roller->coords.y1) / 2;
 3318              		.loc 1 734 9 is_stmt 1 view .LVU1000
 734:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t mid        = (roller->coords.y2 - roller->coords.y1) / 2;
 3319              		.loc 1 734 40 is_stmt 0 view .LVU1001
 3320 0098 0144     		add	r1, r1, r0
 3321              	.LVL375:
 734:lvgl/src/lv_widgets/lv_roller.c ****         lv_coord_t mid        = (roller->coords.y2 - roller->coords.y1) / 2;
 3322              		.loc 1 734 20 view .LVU1002
 3323 009a 09B2     		sxth	r1, r1
 3324              	.LVL376:
 735:lvgl/src/lv_widgets/lv_roller.c **** 
 3325              		.loc 1 735 9 is_stmt 1 view .LVU1003
 735:lvgl/src/lv_widgets/lv_roller.c **** 
 3326              		.loc 1 735 48 is_stmt 0 view .LVU1004
 3327 009c B6F91630 		ldrsh	r3, [r6, #22]
 735:lvgl/src/lv_widgets/lv_roller.c **** 
 3328              		.loc 1 735 52 view .LVU1005
 3329 00a0 5B1B     		subs	r3, r3, r5
 735:lvgl/src/lv_widgets/lv_roller.c **** 
 3330              		.loc 1 735 73 view .LVU1006
 3331 00a2 03EBD373 		add	r3, r3, r3, lsr #31
 735:lvgl/src/lv_widgets/lv_roller.c **** 
 3332              		.loc 1 735 20 view .LVU1007
 3333 00a6 43F34F02 		sbfx	r2, r3, #1, #16
 3334              	.LVL377:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 109


 737:lvgl/src/lv_widgets/lv_roller.c **** 
 3335              		.loc 1 737 9 is_stmt 1 view .LVU1008
 737:lvgl/src/lv_widgets/lv_roller.c **** 
 3336              		.loc 1 737 19 is_stmt 0 view .LVU1009
 3337 00aa 121B     		subs	r2, r2, r4
 3338              	.LVL378:
 737:lvgl/src/lv_widgets/lv_roller.c **** 
 3339              		.loc 1 737 43 view .LVU1010
 3340 00ac 00EBD070 		add	r0, r0, r0, lsr #31
 3341              	.LVL379:
 737:lvgl/src/lv_widgets/lv_roller.c **** 
 3342              		.loc 1 737 43 view .LVU1011
 3343 00b0 40F34F03 		sbfx	r3, r0, #1, #16
 3344              	.LVL380:
 737:lvgl/src/lv_widgets/lv_roller.c **** 
 3345              		.loc 1 737 30 view .LVU1012
 3346 00b4 1344     		add	r3, r3, r2
 737:lvgl/src/lv_widgets/lv_roller.c **** 
 3347              		.loc 1 737 48 view .LVU1013
 3348 00b6 93FBF1F3 		sdiv	r3, r3, r1
 737:lvgl/src/lv_widgets/lv_roller.c **** 
 3349              		.loc 1 737 12 view .LVU1014
 3350 00ba 0193     		str	r3, [sp, #4]
 739:lvgl/src/lv_widgets/lv_roller.c ****         if(id >= ext->option_cnt) id = ext->option_cnt - 1;
 3351              		.loc 1 739 9 is_stmt 1 view .LVU1015
 739:lvgl/src/lv_widgets/lv_roller.c ****         if(id >= ext->option_cnt) id = ext->option_cnt - 1;
 3352              		.loc 1 739 11 is_stmt 0 view .LVU1016
 3353 00bc 002B     		cmp	r3, #0
 3354 00be 15DB     		blt	.L184
 3355              	.L172:
 740:lvgl/src/lv_widgets/lv_roller.c **** 
 3356              		.loc 1 740 9 is_stmt 1 view .LVU1017
 740:lvgl/src/lv_widgets/lv_roller.c **** 
 3357              		.loc 1 740 21 is_stmt 0 view .LVU1018
 3358 00c0 B7F84830 		ldrh	r3, [r7, #72]
 740:lvgl/src/lv_widgets/lv_roller.c **** 
 3359              		.loc 1 740 15 view .LVU1019
 3360 00c4 019A     		ldr	r2, [sp, #4]
 740:lvgl/src/lv_widgets/lv_roller.c **** 
 3361              		.loc 1 740 11 view .LVU1020
 3362 00c6 9342     		cmp	r3, r2
 3363 00c8 01DC     		bgt	.L173
 740:lvgl/src/lv_widgets/lv_roller.c **** 
 3364              		.loc 1 740 35 is_stmt 1 discriminator 1 view .LVU1021
 740:lvgl/src/lv_widgets/lv_roller.c **** 
 3365              		.loc 1 740 56 is_stmt 0 discriminator 1 view .LVU1022
 3366 00ca 013B     		subs	r3, r3, #1
 740:lvgl/src/lv_widgets/lv_roller.c **** 
 3367              		.loc 1 740 38 discriminator 1 view .LVU1023
 3368 00cc 0193     		str	r3, [sp, #4]
 3369              	.L173:
 742:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = id;
 3370              		.loc 1 742 9 is_stmt 1 view .LVU1024
 742:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = id;
 3371              		.loc 1 742 29 is_stmt 0 view .LVU1025
 3372 00ce BDF80430 		ldrh	r3, [sp, #4]
 3373 00d2 A7F84A30 		strh	r3, [r7, #74]	@ movhi
ARM GAS  D:\Temp\ccqwJTgn.s 			page 110


 3374              	.LVL381:
 743:lvgl/src/lv_widgets/lv_roller.c ****         res = lv_event_send(roller, LV_EVENT_VALUE_CHANGED, &id);
 3375              		.loc 1 743 9 is_stmt 1 view .LVU1026
 743:lvgl/src/lv_widgets/lv_roller.c ****         res = lv_event_send(roller, LV_EVENT_VALUE_CHANGED, &id);
 3376              		.loc 1 743 29 is_stmt 0 view .LVU1027
 3377 00d6 A7F84C30 		strh	r3, [r7, #76]	@ movhi
 744:lvgl/src/lv_widgets/lv_roller.c ****         if(res != LV_RES_OK) return res;
 3378              		.loc 1 744 9 is_stmt 1 view .LVU1028
 744:lvgl/src/lv_widgets/lv_roller.c ****         if(res != LV_RES_OK) return res;
 3379              		.loc 1 744 15 is_stmt 0 view .LVU1029
 3380 00da 01AA     		add	r2, sp, #4
 3381 00dc 1021     		movs	r1, #16
 3382              	.LVL382:
 744:lvgl/src/lv_widgets/lv_roller.c ****         if(res != LV_RES_OK) return res;
 3383              		.loc 1 744 15 view .LVU1030
 3384 00de 3046     		mov	r0, r6
 3385 00e0 FFF7FEFF 		bl	lv_event_send
 3386              	.LVL383:
 3387 00e4 0446     		mov	r4, r0
 3388              	.LVL384:
 745:lvgl/src/lv_widgets/lv_roller.c ****     }
 3389              		.loc 1 745 9 is_stmt 1 view .LVU1031
 745:lvgl/src/lv_widgets/lv_roller.c ****     }
 3390              		.loc 1 745 11 is_stmt 0 view .LVU1032
 3391 00e6 0128     		cmp	r0, #1
 3392 00e8 1BD1     		bne	.L169
 3393 00ea BFE7     		b	.L174
 3394              	.LVL385:
 3395              	.L184:
 739:lvgl/src/lv_widgets/lv_roller.c ****         if(id >= ext->option_cnt) id = ext->option_cnt - 1;
 3396              		.loc 1 739 20 is_stmt 1 discriminator 1 view .LVU1033
 739:lvgl/src/lv_widgets/lv_roller.c ****         if(id >= ext->option_cnt) id = ext->option_cnt - 1;
 3397              		.loc 1 739 23 is_stmt 0 discriminator 1 view .LVU1034
 3398 00ec 0023     		movs	r3, #0
 3399 00ee 0193     		str	r3, [sp, #4]
 3400 00f0 E6E7     		b	.L172
 3401              	.LVL386:
 3402              	.L181:
 739:lvgl/src/lv_widgets/lv_roller.c ****         if(id >= ext->option_cnt) id = ext->option_cnt - 1;
 3403              		.loc 1 739 23 discriminator 1 view .LVU1035
 3404              	.LBE198:
 749:lvgl/src/lv_widgets/lv_roller.c ****     }
 3405              		.loc 1 749 9 is_stmt 1 view .LVU1036
 3406 00f2 3046     		mov	r0, r6
 3407              	.LVL387:
 749:lvgl/src/lv_widgets/lv_roller.c ****     }
 3408              		.loc 1 749 9 is_stmt 0 view .LVU1037
 3409 00f4 FFF7FEFF 		bl	release_handler
 3410              	.LVL388:
 749:lvgl/src/lv_widgets/lv_roller.c ****     }
 3411              		.loc 1 749 9 view .LVU1038
 3412 00f8 B8E7     		b	.L174
 3413              	.LVL389:
 3414              	.L182:
 753:lvgl/src/lv_widgets/lv_roller.c **** #endif
 3415              		.loc 1 753 9 is_stmt 1 view .LVU1039
 3416 00fa 0E49     		ldr	r1, .L185+8
ARM GAS  D:\Temp\ccqwJTgn.s 			page 111


 3417              	.LVL390:
 753:lvgl/src/lv_widgets/lv_roller.c **** #endif
 3418              		.loc 1 753 9 is_stmt 0 view .LVU1040
 3419 00fc 4046     		mov	r0, r8
 3420              	.LVL391:
 753:lvgl/src/lv_widgets/lv_roller.c **** #endif
 3421              		.loc 1 753 9 view .LVU1041
 3422 00fe FFF7FEFF 		bl	lv_anim_del
 3423              	.LVL392:
 753:lvgl/src/lv_widgets/lv_roller.c **** #endif
 3424              		.loc 1 753 9 view .LVU1042
 3425 0102 B3E7     		b	.L174
 3426              	.LVL393:
 3427              	.L183:
 758:lvgl/src/lv_widgets/lv_roller.c **** #endif
 3428              		.loc 1 758 9 is_stmt 1 view .LVU1043
 758:lvgl/src/lv_widgets/lv_roller.c **** #endif
 3429              		.loc 1 758 21 is_stmt 0 view .LVU1044
 3430 0104 3046     		mov	r0, r6
 3431              	.LVL394:
 758:lvgl/src/lv_widgets/lv_roller.c **** #endif
 3432              		.loc 1 758 21 view .LVU1045
 3433 0106 FFF7FEFF 		bl	lv_page_get_scrollable
 3434              	.LVL395:
 758:lvgl/src/lv_widgets/lv_roller.c **** #endif
 3435              		.loc 1 758 9 view .LVU1046
 3436 010a 0A49     		ldr	r1, .L185+8
 3437 010c FFF7FEFF 		bl	lv_anim_del
 3438              	.LVL396:
 760:lvgl/src/lv_widgets/lv_roller.c ****         refr_width(roller);
 3439              		.loc 1 760 9 is_stmt 1 view .LVU1047
 3440 0110 0021     		movs	r1, #0
 3441 0112 3046     		mov	r0, r6
 3442 0114 FFF7FEFF 		bl	refr_position
 3443              	.LVL397:
 761:lvgl/src/lv_widgets/lv_roller.c **** 
 3444              		.loc 1 761 9 view .LVU1048
 3445 0118 3046     		mov	r0, r6
 3446 011a FFF7FEFF 		bl	refr_width
 3447              	.LVL398:
 3448 011e A5E7     		b	.L174
 3449              	.LVL399:
 3450              	.L177:
 722:lvgl/src/lv_widgets/lv_roller.c **** 
 3451              		.loc 1 722 30 is_stmt 0 view .LVU1049
 3452 0120 0024     		movs	r4, #0
 3453              	.LVL400:
 3454              	.L169:
 771:lvgl/src/lv_widgets/lv_roller.c **** 
 3455              		.loc 1 771 1 view .LVU1050
 3456 0122 2046     		mov	r0, r4
 3457 0124 02B0     		add	sp, sp, #8
 3458              	.LCFI39:
 3459              		.cfi_def_cfa_offset 32
 3460              		@ sp needed
 3461 0126 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3462              	.LVL401:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 112


 3463              	.L186:
 771:lvgl/src/lv_widgets/lv_roller.c **** 
 3464              		.loc 1 771 1 view .LVU1051
 3465 012a 00BF     		.align	2
 3466              	.L185:
 3467 012c 00000000 		.word	.LANCHOR1
 3468 0130 00000000 		.word	.LC1
 3469 0134 00000000 		.word	lv_obj_set_y
 3470              		.cfi_endproc
 3471              	.LFE491:
 3473              		.section	.text.lv_roller_signal,"ax",%progbits
 3474              		.align	1
 3475              		.syntax unified
 3476              		.thumb
 3477              		.thumb_func
 3478              		.fpu fpv4-sp-d16
 3480              	lv_roller_signal:
 3481              	.LVL402:
 3482              	.LFB489:
 572:lvgl/src/lv_widgets/lv_roller.c ****     lv_res_t res = LV_RES_OK;
 3483              		.loc 1 572 1 is_stmt 1 view -0
 3484              		.cfi_startproc
 3485              		@ args = 0, pretend = 0, frame = 0
 3486              		@ frame_needed = 0, uses_anonymous_args = 0
 572:lvgl/src/lv_widgets/lv_roller.c ****     lv_res_t res = LV_RES_OK;
 3487              		.loc 1 572 1 is_stmt 0 view .LVU1053
 3488 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3489              	.LCFI40:
 3490              		.cfi_def_cfa_offset 24
 3491              		.cfi_offset 4, -24
 3492              		.cfi_offset 5, -20
 3493              		.cfi_offset 6, -16
 3494              		.cfi_offset 7, -12
 3495              		.cfi_offset 8, -8
 3496              		.cfi_offset 14, -4
 3497 0004 0546     		mov	r5, r0
 3498 0006 0C46     		mov	r4, r1
 3499 0008 1746     		mov	r7, r2
 573:lvgl/src/lv_widgets/lv_roller.c ****     if(sign == LV_SIGNAL_GET_STYLE) {
 3500              		.loc 1 573 5 is_stmt 1 view .LVU1054
 3501              	.LVL403:
 574:lvgl/src/lv_widgets/lv_roller.c ****         lv_get_style_info_t * info = param;
 3502              		.loc 1 574 5 view .LVU1055
 574:lvgl/src/lv_widgets/lv_roller.c ****         lv_get_style_info_t * info = param;
 3503              		.loc 1 574 7 is_stmt 0 view .LVU1056
 3504 000a 0829     		cmp	r1, #8
 3505 000c 0AD0     		beq	.L207
 582:lvgl/src/lv_widgets/lv_roller.c ****         res = ancestor_signal(roller, sign, param);
 3506              		.loc 1 582 5 is_stmt 1 view .LVU1057
 582:lvgl/src/lv_widgets/lv_roller.c ****         res = ancestor_signal(roller, sign, param);
 3507              		.loc 1 582 7 is_stmt 0 view .LVU1058
 3508 000e 1829     		cmp	r1, #24
 3509 0010 17D0     		beq	.L205
 583:lvgl/src/lv_widgets/lv_roller.c ****         if(res != LV_RES_OK) return res;
 3510              		.loc 1 583 9 is_stmt 1 view .LVU1059
 583:lvgl/src/lv_widgets/lv_roller.c ****         if(res != LV_RES_OK) return res;
 3511              		.loc 1 583 15 is_stmt 0 view .LVU1060
ARM GAS  D:\Temp\ccqwJTgn.s 			page 113


 3512 0012 6A4B     		ldr	r3, .L219
 3513 0014 1B68     		ldr	r3, [r3]
 3514 0016 9847     		blx	r3
 3515              	.LVL404:
 583:lvgl/src/lv_widgets/lv_roller.c ****         if(res != LV_RES_OK) return res;
 3516              		.loc 1 583 15 view .LVU1061
 3517 0018 0646     		mov	r6, r0
 3518              	.LVL405:
 584:lvgl/src/lv_widgets/lv_roller.c ****     }
 3519              		.loc 1 584 9 is_stmt 1 view .LVU1062
 584:lvgl/src/lv_widgets/lv_roller.c ****     }
 3520              		.loc 1 584 11 is_stmt 0 view .LVU1063
 3521 001a 0128     		cmp	r0, #1
 3522 001c 12D0     		beq	.L190
 3523              	.LVL406:
 3524              	.L189:
 673:lvgl/src/lv_widgets/lv_roller.c **** 
 3525              		.loc 1 673 1 view .LVU1064
 3526 001e 3046     		mov	r0, r6
 3527 0020 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3528              	.LVL407:
 3529              	.L207:
 3530              	.LBB199:
 575:lvgl/src/lv_widgets/lv_roller.c ****         info->result = lv_roller_get_style(roller, info->part);
 3531              		.loc 1 575 9 is_stmt 1 view .LVU1065
 576:lvgl/src/lv_widgets/lv_roller.c ****         if(info->result != NULL) return LV_RES_OK;
 3532              		.loc 1 576 9 view .LVU1066
 576:lvgl/src/lv_widgets/lv_roller.c ****         if(info->result != NULL) return LV_RES_OK;
 3533              		.loc 1 576 24 is_stmt 0 view .LVU1067
 3534 0024 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3535              	.LVL408:
 576:lvgl/src/lv_widgets/lv_roller.c ****         if(info->result != NULL) return LV_RES_OK;
 3536              		.loc 1 576 24 view .LVU1068
 3537 0026 FFF7FEFF 		bl	lv_roller_get_style
 3538              	.LVL409:
 576:lvgl/src/lv_widgets/lv_roller.c ****         if(info->result != NULL) return LV_RES_OK;
 3539              		.loc 1 576 22 view .LVU1069
 3540 002a 7860     		str	r0, [r7, #4]
 577:lvgl/src/lv_widgets/lv_roller.c ****         else return ancestor_signal(roller, sign, param);
 3541              		.loc 1 577 9 is_stmt 1 view .LVU1070
 577:lvgl/src/lv_widgets/lv_roller.c ****         else return ancestor_signal(roller, sign, param);
 3542              		.loc 1 577 11 is_stmt 0 view .LVU1071
 3543 002c 08B1     		cbz	r0, .L208
 577:lvgl/src/lv_widgets/lv_roller.c ****         else return ancestor_signal(roller, sign, param);
 3544              		.loc 1 577 41 view .LVU1072
 3545 002e 0126     		movs	r6, #1
 3546 0030 F5E7     		b	.L189
 3547              	.L208:
 578:lvgl/src/lv_widgets/lv_roller.c ****     }
 3548              		.loc 1 578 14 is_stmt 1 view .LVU1073
 578:lvgl/src/lv_widgets/lv_roller.c ****     }
 3549              		.loc 1 578 21 is_stmt 0 view .LVU1074
 3550 0032 624B     		ldr	r3, .L219
 3551 0034 1B68     		ldr	r3, [r3]
 3552 0036 3A46     		mov	r2, r7
 3553 0038 2146     		mov	r1, r4
 3554 003a 2846     		mov	r0, r5
ARM GAS  D:\Temp\ccqwJTgn.s 			page 114


 3555 003c 9847     		blx	r3
 3556              	.LVL410:
 3557 003e 0646     		mov	r6, r0
 3558 0040 EDE7     		b	.L189
 3559              	.LVL411:
 3560              	.L205:
 578:lvgl/src/lv_widgets/lv_roller.c ****     }
 3561              		.loc 1 578 21 view .LVU1075
 3562              	.LBE199:
 573:lvgl/src/lv_widgets/lv_roller.c ****     if(sign == LV_SIGNAL_GET_STYLE) {
 3563              		.loc 1 573 14 view .LVU1076
 3564 0042 0126     		movs	r6, #1
 3565              	.LVL412:
 3566              	.L190:
 587:lvgl/src/lv_widgets/lv_roller.c **** 
 3567              		.loc 1 587 5 is_stmt 1 view .LVU1077
 587:lvgl/src/lv_widgets/lv_roller.c **** 
 3568              		.loc 1 587 7 is_stmt 0 view .LVU1078
 3569 0044 072C     		cmp	r4, #7
 3570 0046 16D0     		beq	.L209
 589:lvgl/src/lv_widgets/lv_roller.c ****     LV_UNUSED(ext);
 3571              		.loc 1 589 5 is_stmt 1 view .LVU1079
 589:lvgl/src/lv_widgets/lv_roller.c ****     LV_UNUSED(ext);
 3572              		.loc 1 589 29 is_stmt 0 view .LVU1080
 3573 0048 2846     		mov	r0, r5
 3574 004a FFF7FEFF 		bl	lv_obj_get_ext_attr
 3575              	.LVL413:
 3576 004e 8046     		mov	r8, r0
 3577              	.LVL414:
 590:lvgl/src/lv_widgets/lv_roller.c **** 
 3578              		.loc 1 590 5 is_stmt 1 view .LVU1081
 592:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * label = get_label(roller);
 3579              		.loc 1 592 5 view .LVU1082
 592:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * label = get_label(roller);
 3580              		.loc 1 592 7 is_stmt 0 view .LVU1083
 3581 0050 042C     		cmp	r4, #4
 3582 0052 16D0     		beq	.L210
 600:lvgl/src/lv_widgets/lv_roller.c **** 
 3583              		.loc 1 600 10 is_stmt 1 view .LVU1084
 600:lvgl/src/lv_widgets/lv_roller.c **** 
 3584              		.loc 1 600 12 is_stmt 0 view .LVU1085
 3585 0054 022C     		cmp	r4, #2
 3586 0056 27D0     		beq	.L211
 611:lvgl/src/lv_widgets/lv_roller.c ****         release_handler(roller);
 3587              		.loc 1 611 10 is_stmt 1 view .LVU1086
 611:lvgl/src/lv_widgets/lv_roller.c ****         release_handler(roller);
 3588              		.loc 1 611 12 is_stmt 0 view .LVU1087
 3589 0058 0E2C     		cmp	r4, #14
 3590 005a 4AD0     		beq	.L212
 614:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 3591              		.loc 1 614 10 is_stmt 1 view .LVU1088
 614:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 3592              		.loc 1 614 12 is_stmt 0 view .LVU1089
 3593 005c 162C     		cmp	r4, #22
 3594 005e 4CD0     		beq	.L213
 640:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 3595              		.loc 1 640 10 is_stmt 1 view .LVU1090
ARM GAS  D:\Temp\ccqwJTgn.s 			page 115


 640:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 3596              		.loc 1 640 12 is_stmt 0 view .LVU1091
 3597 0060 172C     		cmp	r4, #23
 3598 0062 6FD0     		beq	.L214
 649:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 3599              		.loc 1 649 10 is_stmt 1 view .LVU1092
 649:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_GROUP
 3600              		.loc 1 649 12 is_stmt 0 view .LVU1093
 3601 0064 182C     		cmp	r4, #24
 3602 0066 7BD0     		beq	.L215
 669:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_clean_style_list(roller, LV_ROLLER_PART_SELECTED);
 3603              		.loc 1 669 10 is_stmt 1 view .LVU1094
 669:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_clean_style_list(roller, LV_ROLLER_PART_SELECTED);
 3604              		.loc 1 669 12 is_stmt 0 view .LVU1095
 3605 0068 002C     		cmp	r4, #0
 3606 006a D8D1     		bne	.L189
 670:lvgl/src/lv_widgets/lv_roller.c ****     }
 3607              		.loc 1 670 9 is_stmt 1 view .LVU1096
 3608 006c 0321     		movs	r1, #3
 3609 006e 2846     		mov	r0, r5
 3610              	.LVL415:
 670:lvgl/src/lv_widgets/lv_roller.c ****     }
 3611              		.loc 1 670 9 is_stmt 0 view .LVU1097
 3612 0070 FFF7FEFF 		bl	lv_obj_clean_style_list
 3613              	.LVL416:
 3614 0074 D3E7     		b	.L189
 3615              	.LVL417:
 3616              	.L209:
 587:lvgl/src/lv_widgets/lv_roller.c **** 
 3617              		.loc 1 587 36 is_stmt 1 discriminator 1 view .LVU1098
 587:lvgl/src/lv_widgets/lv_roller.c **** 
 3618              		.loc 1 587 43 is_stmt 0 discriminator 1 view .LVU1099
 3619 0076 5249     		ldr	r1, .L219+4
 3620 0078 3846     		mov	r0, r7
 3621 007a FFF7FEFF 		bl	lv_obj_handle_get_type_signal
 3622              	.LVL418:
 3623 007e 0646     		mov	r6, r0
 3624              	.LVL419:
 587:lvgl/src/lv_widgets/lv_roller.c **** 
 3625              		.loc 1 587 43 discriminator 1 view .LVU1100
 3626 0080 CDE7     		b	.L189
 3627              	.LVL420:
 3628              	.L210:
 3629              	.LBB200:
 593:lvgl/src/lv_widgets/lv_roller.c ****         /*Be sure the label's style is updated before processing the roller*/
 3630              		.loc 1 593 9 is_stmt 1 view .LVU1101
 593:lvgl/src/lv_widgets/lv_roller.c ****         /*Be sure the label's style is updated before processing the roller*/
 3631              		.loc 1 593 28 is_stmt 0 view .LVU1102
 3632 0082 2846     		mov	r0, r5
 3633              	.LVL421:
 593:lvgl/src/lv_widgets/lv_roller.c ****         /*Be sure the label's style is updated before processing the roller*/
 3634              		.loc 1 593 28 view .LVU1103
 3635 0084 FFF7FEFF 		bl	get_label
 3636              	.LVL422:
 595:lvgl/src/lv_widgets/lv_roller.c ****         refr_height(roller);
 3637              		.loc 1 595 9 is_stmt 1 view .LVU1104
 595:lvgl/src/lv_widgets/lv_roller.c ****         refr_height(roller);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 116


 3638              		.loc 1 595 11 is_stmt 0 view .LVU1105
 3639 0088 18B1     		cbz	r0, .L193
 595:lvgl/src/lv_widgets/lv_roller.c ****         refr_height(roller);
 3640              		.loc 1 595 19 is_stmt 1 discriminator 1 view .LVU1106
 3641 008a 0022     		movs	r2, #0
 3642 008c 0421     		movs	r1, #4
 3643 008e FFF7FEFF 		bl	lv_signal_send
 3644              	.LVL423:
 3645              	.L193:
 596:lvgl/src/lv_widgets/lv_roller.c ****         refr_width(roller);
 3646              		.loc 1 596 9 view .LVU1107
 3647 0092 2846     		mov	r0, r5
 3648 0094 FFF7FEFF 		bl	refr_height
 3649              	.LVL424:
 597:lvgl/src/lv_widgets/lv_roller.c ****         refr_position(roller, false);
 3650              		.loc 1 597 9 view .LVU1108
 3651 0098 2846     		mov	r0, r5
 3652 009a FFF7FEFF 		bl	refr_width
 3653              	.LVL425:
 598:lvgl/src/lv_widgets/lv_roller.c ****     }
 3654              		.loc 1 598 9 view .LVU1109
 3655 009e 0021     		movs	r1, #0
 3656 00a0 2846     		mov	r0, r5
 3657 00a2 FFF7FEFF 		bl	refr_position
 3658              	.LVL426:
 3659              	.LBE200:
 3660 00a6 BAE7     		b	.L189
 3661              	.LVL427:
 3662              	.L211:
 602:lvgl/src/lv_widgets/lv_roller.c ****            lv_obj_get_height(roller) != lv_area_get_height(param)) {
 3663              		.loc 1 602 9 view .LVU1110
 602:lvgl/src/lv_widgets/lv_roller.c ****            lv_obj_get_height(roller) != lv_area_get_height(param)) {
 3664              		.loc 1 602 12 is_stmt 0 view .LVU1111
 3665 00a8 2846     		mov	r0, r5
 3666              	.LVL428:
 602:lvgl/src/lv_widgets/lv_roller.c ****            lv_obj_get_height(roller) != lv_area_get_height(param)) {
 3667              		.loc 1 602 12 view .LVU1112
 3668 00aa FFF7FEFF 		bl	lv_obj_get_width
 3669              	.LVL429:
 3670              	.LBB201:
 3671              	.LBI201:
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** }
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Get the width of an area
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 3672              		.loc 4 107 26 is_stmt 1 view .LVU1113
 3673              	.LBB202:
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 3674              		.loc 4 109 5 view .LVU1114
 3675              		.loc 4 109 31 is_stmt 0 view .LVU1115
 3676 00ae BB88     		ldrh	r3, [r7, #4]
 3677              		.loc 4 109 44 view .LVU1116
ARM GAS  D:\Temp\ccqwJTgn.s 			page 117


 3678 00b0 3A88     		ldrh	r2, [r7]
 3679              		.loc 4 109 36 view .LVU1117
 3680 00b2 9B1A     		subs	r3, r3, r2
 3681 00b4 9BB2     		uxth	r3, r3
 3682              		.loc 4 109 49 view .LVU1118
 3683 00b6 0133     		adds	r3, r3, #1
 3684              		.loc 4 109 12 view .LVU1119
 3685 00b8 1BB2     		sxth	r3, r3
 3686              	.LVL430:
 3687              		.loc 4 109 12 view .LVU1120
 3688              	.LBE202:
 3689              	.LBE201:
 602:lvgl/src/lv_widgets/lv_roller.c ****            lv_obj_get_height(roller) != lv_area_get_height(param)) {
 3690              		.loc 1 602 11 view .LVU1121
 3691 00ba 9842     		cmp	r0, r3
 3692 00bc 0DD0     		beq	.L216
 3693              	.L195:
 605:lvgl/src/lv_widgets/lv_roller.c **** #endif
 3694              		.loc 1 605 13 is_stmt 1 view .LVU1122
 605:lvgl/src/lv_widgets/lv_roller.c **** #endif
 3695              		.loc 1 605 25 is_stmt 0 view .LVU1123
 3696 00be 2846     		mov	r0, r5
 3697 00c0 FFF7FEFF 		bl	lv_page_get_scrollable
 3698              	.LVL431:
 605:lvgl/src/lv_widgets/lv_roller.c **** #endif
 3699              		.loc 1 605 13 view .LVU1124
 3700 00c4 3F49     		ldr	r1, .L219+8
 3701 00c6 FFF7FEFF 		bl	lv_anim_del
 3702              	.LVL432:
 607:lvgl/src/lv_widgets/lv_roller.c ****             refr_width(roller);
 3703              		.loc 1 607 13 is_stmt 1 view .LVU1125
 3704 00ca 0021     		movs	r1, #0
 3705 00cc 2846     		mov	r0, r5
 3706 00ce FFF7FEFF 		bl	refr_position
 3707              	.LVL433:
 608:lvgl/src/lv_widgets/lv_roller.c ****         }
 3708              		.loc 1 608 13 view .LVU1126
 3709 00d2 2846     		mov	r0, r5
 3710 00d4 FFF7FEFF 		bl	refr_width
 3711              	.LVL434:
 3712 00d8 A1E7     		b	.L189
 3713              	.L216:
 603:lvgl/src/lv_widgets/lv_roller.c **** #if LV_USE_ANIMATION
 3714              		.loc 1 603 12 is_stmt 0 discriminator 1 view .LVU1127
 3715 00da 2846     		mov	r0, r5
 3716 00dc FFF7FEFF 		bl	lv_obj_get_height
 3717              	.LVL435:
 3718              	.LBB203:
 3719              	.LBI203:
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** }
 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Get the height of an area
 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
ARM GAS  D:\Temp\ccqwJTgn.s 			page 118


 3720              		.loc 4 117 26 is_stmt 1 discriminator 1 view .LVU1128
 3721              	.LBB204:
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 119:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 3722              		.loc 4 119 5 discriminator 1 view .LVU1129
 3723              		.loc 4 119 31 is_stmt 0 discriminator 1 view .LVU1130
 3724 00e0 FB88     		ldrh	r3, [r7, #6]
 3725              		.loc 4 119 44 discriminator 1 view .LVU1131
 3726 00e2 7A88     		ldrh	r2, [r7, #2]
 3727              		.loc 4 119 36 discriminator 1 view .LVU1132
 3728 00e4 9B1A     		subs	r3, r3, r2
 3729 00e6 9BB2     		uxth	r3, r3
 3730              		.loc 4 119 49 discriminator 1 view .LVU1133
 3731 00e8 0133     		adds	r3, r3, #1
 3732              		.loc 4 119 12 discriminator 1 view .LVU1134
 3733 00ea 1BB2     		sxth	r3, r3
 3734              	.LVL436:
 3735              		.loc 4 119 12 discriminator 1 view .LVU1135
 3736              	.LBE204:
 3737              	.LBE203:
 602:lvgl/src/lv_widgets/lv_roller.c ****            lv_obj_get_height(roller) != lv_area_get_height(param)) {
 3738              		.loc 1 602 65 discriminator 1 view .LVU1136
 3739 00ec 9842     		cmp	r0, r3
 3740 00ee E6D1     		bne	.L195
 3741 00f0 95E7     		b	.L189
 3742              	.LVL437:
 3743              	.L212:
 612:lvgl/src/lv_widgets/lv_roller.c ****     }
 3744              		.loc 1 612 9 is_stmt 1 view .LVU1137
 3745 00f2 2846     		mov	r0, r5
 3746              	.LVL438:
 612:lvgl/src/lv_widgets/lv_roller.c ****     }
 3747              		.loc 1 612 9 is_stmt 0 view .LVU1138
 3748 00f4 FFF7FEFF 		bl	release_handler
 3749              	.LVL439:
 3750 00f8 91E7     		b	.L189
 3751              	.LVL440:
 3752              	.L213:
 3753              	.LBB205:
 616:lvgl/src/lv_widgets/lv_roller.c ****         bool editing               = lv_group_get_editing(g);
 3754              		.loc 1 616 9 is_stmt 1 view .LVU1139
 616:lvgl/src/lv_widgets/lv_roller.c ****         bool editing               = lv_group_get_editing(g);
 3755              		.loc 1 616 38 is_stmt 0 view .LVU1140
 3756 00fa 2846     		mov	r0, r5
 3757              	.LVL441:
 616:lvgl/src/lv_widgets/lv_roller.c ****         bool editing               = lv_group_get_editing(g);
 3758              		.loc 1 616 38 view .LVU1141
 3759 00fc FFF7FEFF 		bl	lv_obj_get_group
 3760              	.LVL442:
 617:lvgl/src/lv_widgets/lv_roller.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 3761              		.loc 1 617 9 is_stmt 1 view .LVU1142
 617:lvgl/src/lv_widgets/lv_roller.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 3762              		.loc 1 617 38 is_stmt 0 view .LVU1143
 3763 0100 FFF7FEFF 		bl	lv_group_get_editing
 3764              	.LVL443:
 617:lvgl/src/lv_widgets/lv_roller.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 3765              		.loc 1 617 38 view .LVU1144
ARM GAS  D:\Temp\ccqwJTgn.s 			page 119


 3766 0104 0446     		mov	r4, r0
 3767              	.LVL444:
 618:lvgl/src/lv_widgets/lv_roller.c **** 
 3768              		.loc 1 618 9 is_stmt 1 view .LVU1145
 618:lvgl/src/lv_widgets/lv_roller.c **** 
 3769              		.loc 1 618 56 is_stmt 0 view .LVU1146
 3770 0106 FFF7FEFF 		bl	lv_indev_get_act
 3771              	.LVL445:
 618:lvgl/src/lv_widgets/lv_roller.c **** 
 3772              		.loc 1 618 38 view .LVU1147
 3773 010a FFF7FEFF 		bl	lv_indev_get_type
 3774              	.LVL446:
 621:lvgl/src/lv_widgets/lv_roller.c ****             /*In navigate mode revert the original value*/
 3775              		.loc 1 621 9 is_stmt 1 view .LVU1148
 621:lvgl/src/lv_widgets/lv_roller.c ****             /*In navigate mode revert the original value*/
 3776              		.loc 1 621 11 is_stmt 0 view .LVU1149
 3777 010e 0428     		cmp	r0, #4
 3778 0110 04D0     		beq	.L217
 635:lvgl/src/lv_widgets/lv_roller.c ****                                                                     ENTER won't be pressed*/
 3779              		.loc 1 635 13 is_stmt 1 view .LVU1150
 635:lvgl/src/lv_widgets/lv_roller.c ****                                                                     ENTER won't be pressed*/
 3780              		.loc 1 635 38 is_stmt 0 view .LVU1151
 3781 0112 B8F84A30 		ldrh	r3, [r8, #74]
 635:lvgl/src/lv_widgets/lv_roller.c ****                                                                     ENTER won't be pressed*/
 3782              		.loc 1 635 33 view .LVU1152
 3783 0116 A8F84C30 		strh	r3, [r8, #76]	@ movhi
 3784 011a 80E7     		b	.L189
 3785              	.L217:
 623:lvgl/src/lv_widgets/lv_roller.c ****                 if(ext->sel_opt_id != ext->sel_opt_id_ori) {
 3786              		.loc 1 623 13 is_stmt 1 view .LVU1153
 623:lvgl/src/lv_widgets/lv_roller.c ****                 if(ext->sel_opt_id != ext->sel_opt_id_ori) {
 3787              		.loc 1 623 15 is_stmt 0 view .LVU1154
 3788 011c 6CB9     		cbnz	r4, .L199
 624:lvgl/src/lv_widgets/lv_roller.c ****                     ext->sel_opt_id = ext->sel_opt_id_ori;
 3789              		.loc 1 624 17 is_stmt 1 view .LVU1155
 624:lvgl/src/lv_widgets/lv_roller.c ****                     ext->sel_opt_id = ext->sel_opt_id_ori;
 3790              		.loc 1 624 23 is_stmt 0 view .LVU1156
 3791 011e B8F84A20 		ldrh	r2, [r8, #74]
 624:lvgl/src/lv_widgets/lv_roller.c ****                     ext->sel_opt_id = ext->sel_opt_id_ori;
 3792              		.loc 1 624 42 view .LVU1157
 3793 0122 B8F84C30 		ldrh	r3, [r8, #76]
 624:lvgl/src/lv_widgets/lv_roller.c ****                     ext->sel_opt_id = ext->sel_opt_id_ori;
 3794              		.loc 1 624 19 view .LVU1158
 3795 0126 9A42     		cmp	r2, r3
 3796 0128 3FF479AF 		beq	.L189
 625:lvgl/src/lv_widgets/lv_roller.c ****                     refr_position(roller, true);
 3797              		.loc 1 625 21 is_stmt 1 view .LVU1159
 625:lvgl/src/lv_widgets/lv_roller.c ****                     refr_position(roller, true);
 3798              		.loc 1 625 37 is_stmt 0 view .LVU1160
 3799 012c A8F84A30 		strh	r3, [r8, #74]	@ movhi
 626:lvgl/src/lv_widgets/lv_roller.c ****                 }
 3800              		.loc 1 626 21 is_stmt 1 view .LVU1161
 3801 0130 0121     		movs	r1, #1
 3802 0132 2846     		mov	r0, r5
 3803              	.LVL447:
 626:lvgl/src/lv_widgets/lv_roller.c ****                 }
 3804              		.loc 1 626 21 is_stmt 0 view .LVU1162
ARM GAS  D:\Temp\ccqwJTgn.s 			page 120


 3805 0134 FFF7FEFF 		bl	refr_position
 3806              	.LVL448:
 3807 0138 71E7     		b	.L189
 3808              	.LVL449:
 3809              	.L199:
 631:lvgl/src/lv_widgets/lv_roller.c ****             }
 3810              		.loc 1 631 17 is_stmt 1 view .LVU1163
 631:lvgl/src/lv_widgets/lv_roller.c ****             }
 3811              		.loc 1 631 42 is_stmt 0 view .LVU1164
 3812 013a B8F84A30 		ldrh	r3, [r8, #74]
 631:lvgl/src/lv_widgets/lv_roller.c ****             }
 3813              		.loc 1 631 37 view .LVU1165
 3814 013e A8F84C30 		strh	r3, [r8, #76]	@ movhi
 3815 0142 6CE7     		b	.L189
 3816              	.LVL450:
 3817              	.L214:
 631:lvgl/src/lv_widgets/lv_roller.c ****             }
 3818              		.loc 1 631 37 view .LVU1166
 3819              	.LBE205:
 643:lvgl/src/lv_widgets/lv_roller.c ****             ext->sel_opt_id = ext->sel_opt_id_ori;
 3820              		.loc 1 643 9 is_stmt 1 view .LVU1167
 643:lvgl/src/lv_widgets/lv_roller.c ****             ext->sel_opt_id = ext->sel_opt_id_ori;
 3821              		.loc 1 643 15 is_stmt 0 view .LVU1168
 3822 0144 B0F84A20 		ldrh	r2, [r0, #74]
 643:lvgl/src/lv_widgets/lv_roller.c ****             ext->sel_opt_id = ext->sel_opt_id_ori;
 3823              		.loc 1 643 34 view .LVU1169
 3824 0148 B0F84C30 		ldrh	r3, [r0, #76]
 643:lvgl/src/lv_widgets/lv_roller.c ****             ext->sel_opt_id = ext->sel_opt_id_ori;
 3825              		.loc 1 643 11 view .LVU1170
 3826 014c 9A42     		cmp	r2, r3
 3827 014e 3FF466AF 		beq	.L189
 644:lvgl/src/lv_widgets/lv_roller.c ****             refr_position(roller, true);
 3828              		.loc 1 644 13 is_stmt 1 view .LVU1171
 644:lvgl/src/lv_widgets/lv_roller.c ****             refr_position(roller, true);
 3829              		.loc 1 644 29 is_stmt 0 view .LVU1172
 3830 0152 A0F84A30 		strh	r3, [r0, #74]	@ movhi
 645:lvgl/src/lv_widgets/lv_roller.c ****         }
 3831              		.loc 1 645 13 is_stmt 1 view .LVU1173
 3832 0156 0121     		movs	r1, #1
 3833 0158 2846     		mov	r0, r5
 3834              	.LVL451:
 645:lvgl/src/lv_widgets/lv_roller.c ****         }
 3835              		.loc 1 645 13 is_stmt 0 view .LVU1174
 3836 015a FFF7FEFF 		bl	refr_position
 3837              	.LVL452:
 3838 015e 5EE7     		b	.L189
 3839              	.LVL453:
 3840              	.L215:
 3841              	.LBB206:
 651:lvgl/src/lv_widgets/lv_roller.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_DOWN) {
 3842              		.loc 1 651 9 is_stmt 1 view .LVU1175
 651:lvgl/src/lv_widgets/lv_roller.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_DOWN) {
 3843              		.loc 1 651 14 is_stmt 0 view .LVU1176
 3844 0160 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 3845              	.LVL454:
 652:lvgl/src/lv_widgets/lv_roller.c ****             if(ext->sel_opt_id + 1 < ext->option_cnt) {
 3846              		.loc 1 652 9 is_stmt 1 view .LVU1177
ARM GAS  D:\Temp\ccqwJTgn.s 			page 121


 652:lvgl/src/lv_widgets/lv_roller.c ****             if(ext->sel_opt_id + 1 < ext->option_cnt) {
 3847              		.loc 1 652 30 is_stmt 0 view .LVU1178
 3848 0162 A2F11203 		sub	r3, r2, #18
 3849 0166 DBB2     		uxtb	r3, r3
 652:lvgl/src/lv_widgets/lv_roller.c ****             if(ext->sel_opt_id + 1 < ext->option_cnt) {
 3850              		.loc 1 652 11 view .LVU1179
 3851 0168 012B     		cmp	r3, #1
 3852 016a 14D9     		bls	.L218
 659:lvgl/src/lv_widgets/lv_roller.c ****             if(ext->sel_opt_id > 0) {
 3853              		.loc 1 659 14 is_stmt 1 view .LVU1180
 659:lvgl/src/lv_widgets/lv_roller.c ****             if(ext->sel_opt_id > 0) {
 3854              		.loc 1 659 16 is_stmt 0 view .LVU1181
 3855 016c 142A     		cmp	r2, #20
 3856 016e 02D0     		beq	.L203
 659:lvgl/src/lv_widgets/lv_roller.c ****             if(ext->sel_opt_id > 0) {
 3857              		.loc 1 659 34 discriminator 1 view .LVU1182
 3858 0170 112A     		cmp	r2, #17
 3859 0172 7FF454AF 		bne	.L189
 3860              	.L203:
 660:lvgl/src/lv_widgets/lv_roller.c ****                 uint16_t ori_id = ext->sel_opt_id_ori; /*lv_roller_set_selected will overwrite this
 3861              		.loc 1 660 13 is_stmt 1 view .LVU1183
 660:lvgl/src/lv_widgets/lv_roller.c ****                 uint16_t ori_id = ext->sel_opt_id_ori; /*lv_roller_set_selected will overwrite this
 3862              		.loc 1 660 19 is_stmt 0 view .LVU1184
 3863 0176 B8F84A30 		ldrh	r3, [r8, #74]
 660:lvgl/src/lv_widgets/lv_roller.c ****                 uint16_t ori_id = ext->sel_opt_id_ori; /*lv_roller_set_selected will overwrite this
 3864              		.loc 1 660 15 view .LVU1185
 3865 017a 002B     		cmp	r3, #0
 3866 017c 3FF44FAF 		beq	.L189
 3867              	.LBB207:
 661:lvgl/src/lv_widgets/lv_roller.c **** 
 3868              		.loc 1 661 17 is_stmt 1 view .LVU1186
 661:lvgl/src/lv_widgets/lv_roller.c **** 
 3869              		.loc 1 661 26 is_stmt 0 view .LVU1187
 3870 0180 B8F84C40 		ldrh	r4, [r8, #76]
 3871              	.LVL455:
 663:lvgl/src/lv_widgets/lv_roller.c ****                 ext->sel_opt_id_ori = ori_id;
 3872              		.loc 1 663 17 is_stmt 1 view .LVU1188
 3873 0184 013B     		subs	r3, r3, #1
 3874 0186 0122     		movs	r2, #1
 3875              	.LVL456:
 663:lvgl/src/lv_widgets/lv_roller.c ****                 ext->sel_opt_id_ori = ori_id;
 3876              		.loc 1 663 17 is_stmt 0 view .LVU1189
 3877 0188 99B2     		uxth	r1, r3
 3878 018a 2846     		mov	r0, r5
 3879              	.LVL457:
 663:lvgl/src/lv_widgets/lv_roller.c ****                 ext->sel_opt_id_ori = ori_id;
 3880              		.loc 1 663 17 view .LVU1190
 3881 018c FFF7FEFF 		bl	lv_roller_set_selected
 3882              	.LVL458:
 664:lvgl/src/lv_widgets/lv_roller.c ****             }
 3883              		.loc 1 664 17 is_stmt 1 view .LVU1191
 664:lvgl/src/lv_widgets/lv_roller.c ****             }
 3884              		.loc 1 664 37 is_stmt 0 view .LVU1192
 3885 0190 A8F84C40 		strh	r4, [r8, #76]	@ movhi
 3886 0194 43E7     		b	.L189
 3887              	.LVL459:
 3888              	.L218:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 122


 664:lvgl/src/lv_widgets/lv_roller.c ****             }
 3889              		.loc 1 664 37 view .LVU1193
 3890              	.LBE207:
 653:lvgl/src/lv_widgets/lv_roller.c ****                 uint16_t ori_id = ext->sel_opt_id_ori; /*lv_roller_set_selected will overwrite this
 3891              		.loc 1 653 13 is_stmt 1 view .LVU1194
 653:lvgl/src/lv_widgets/lv_roller.c ****                 uint16_t ori_id = ext->sel_opt_id_ori; /*lv_roller_set_selected will overwrite this
 3892              		.loc 1 653 19 is_stmt 0 view .LVU1195
 3893 0196 B0F84A30 		ldrh	r3, [r0, #74]
 653:lvgl/src/lv_widgets/lv_roller.c ****                 uint16_t ori_id = ext->sel_opt_id_ori; /*lv_roller_set_selected will overwrite this
 3894              		.loc 1 653 32 view .LVU1196
 3895 019a 591C     		adds	r1, r3, #1
 653:lvgl/src/lv_widgets/lv_roller.c ****                 uint16_t ori_id = ext->sel_opt_id_ori; /*lv_roller_set_selected will overwrite this
 3896              		.loc 1 653 41 view .LVU1197
 3897 019c B0F84820 		ldrh	r2, [r0, #72]
 3898              	.LVL460:
 653:lvgl/src/lv_widgets/lv_roller.c ****                 uint16_t ori_id = ext->sel_opt_id_ori; /*lv_roller_set_selected will overwrite this
 3899              		.loc 1 653 15 view .LVU1198
 3900 01a0 9142     		cmp	r1, r2
 3901 01a2 BFF63CAF 		bge	.L189
 3902              	.LBB208:
 654:lvgl/src/lv_widgets/lv_roller.c ****                 lv_roller_set_selected(roller, ext->sel_opt_id + 1, true);
 3903              		.loc 1 654 17 is_stmt 1 view .LVU1199
 654:lvgl/src/lv_widgets/lv_roller.c ****                 lv_roller_set_selected(roller, ext->sel_opt_id + 1, true);
 3904              		.loc 1 654 26 is_stmt 0 view .LVU1200
 3905 01a6 B0F84C40 		ldrh	r4, [r0, #76]
 3906              	.LVL461:
 655:lvgl/src/lv_widgets/lv_roller.c ****                 ext->sel_opt_id_ori = ori_id;
 3907              		.loc 1 655 17 is_stmt 1 view .LVU1201
 3908 01aa 0122     		movs	r2, #1
 3909 01ac 89B2     		uxth	r1, r1
 3910 01ae 2846     		mov	r0, r5
 3911              	.LVL462:
 655:lvgl/src/lv_widgets/lv_roller.c ****                 ext->sel_opt_id_ori = ori_id;
 3912              		.loc 1 655 17 is_stmt 0 view .LVU1202
 3913 01b0 FFF7FEFF 		bl	lv_roller_set_selected
 3914              	.LVL463:
 656:lvgl/src/lv_widgets/lv_roller.c ****             }
 3915              		.loc 1 656 17 is_stmt 1 view .LVU1203
 656:lvgl/src/lv_widgets/lv_roller.c ****             }
 3916              		.loc 1 656 37 is_stmt 0 view .LVU1204
 3917 01b4 A8F84C40 		strh	r4, [r8, #76]	@ movhi
 3918 01b8 31E7     		b	.L189
 3919              	.L220:
 3920 01ba 00BF     		.align	2
 3921              	.L219:
 3922 01bc 00000000 		.word	.LANCHOR2
 3923 01c0 00000000 		.word	.LC1
 3924 01c4 00000000 		.word	lv_obj_set_y
 3925              	.LBE208:
 3926              	.LBE206:
 3927              		.cfi_endproc
 3928              	.LFE489:
 3930              		.section	.text.lv_roller_set_options,"ax",%progbits
 3931              		.align	1
 3932              		.global	lv_roller_set_options
 3933              		.syntax unified
 3934              		.thumb
ARM GAS  D:\Temp\ccqwJTgn.s 			page 123


 3935              		.thumb_func
 3936              		.fpu fpv4-sp-d16
 3938              	lv_roller_set_options:
 3939              	.LVL464:
 3940              	.LFB476:
 156:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 3941              		.loc 1 156 1 is_stmt 1 view -0
 3942              		.cfi_startproc
 3943              		@ args = 0, pretend = 0, frame = 0
 3944              		@ frame_needed = 0, uses_anonymous_args = 0
 156:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 3945              		.loc 1 156 1 is_stmt 0 view .LVU1206
 3946 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3947              	.LCFI41:
 3948              		.cfi_def_cfa_offset 40
 3949              		.cfi_offset 3, -40
 3950              		.cfi_offset 4, -36
 3951              		.cfi_offset 5, -32
 3952              		.cfi_offset 6, -28
 3953              		.cfi_offset 7, -24
 3954              		.cfi_offset 8, -20
 3955              		.cfi_offset 9, -16
 3956              		.cfi_offset 10, -12
 3957              		.cfi_offset 11, -8
 3958              		.cfi_offset 14, -4
 3959 0004 0746     		mov	r7, r0
 3960 0006 0E46     		mov	r6, r1
 3961 0008 1546     		mov	r5, r2
 157:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_STR(options);
 3962              		.loc 1 157 5 is_stmt 1 view .LVU1207
 157:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_STR(options);
 3963              		.loc 1 157 5 view .LVU1208
 3964 000a FFF7FEFF 		bl	lv_debug_check_null
 3965              	.LVL465:
 157:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_STR(options);
 3966              		.loc 1 157 5 is_stmt 0 view .LVU1209
 3967 000e 28B9     		cbnz	r0, .L222
 157:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_STR(options);
 3968              		.loc 1 157 5 is_stmt 1 discriminator 1 view .LVU1210
 157:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_STR(options);
 3969              		.loc 1 157 5 discriminator 1 view .LVU1211
 3970 0010 3A46     		mov	r2, r7
 3971 0012 0023     		movs	r3, #0
 3972 0014 3E48     		ldr	r0, .L236
 3973 0016 FFF7FEFF 		bl	lv_debug_log_error
 3974              	.LVL466:
 3975              	.L223:
 157:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_STR(options);
 3976              		.loc 1 157 5 discriminator 1 view .LVU1212
 157:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_STR(options);
 3977              		.loc 1 157 5 discriminator 1 view .LVU1213
 3978 001a FEE7     		b	.L223
 3979              	.L222:
 157:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_STR(options);
 3980              		.loc 1 157 40 discriminator 2 view .LVU1214
 158:lvgl/src/lv_widgets/lv_roller.c **** 
 3981              		.loc 1 158 5 discriminator 2 view .LVU1215
ARM GAS  D:\Temp\ccqwJTgn.s 			page 124


 158:lvgl/src/lv_widgets/lv_roller.c **** 
 3982              		.loc 1 158 5 discriminator 2 view .LVU1216
 3983 001c 3046     		mov	r0, r6
 3984 001e FFF7FEFF 		bl	lv_debug_check_null
 3985              	.LVL467:
 3986 0022 28B9     		cbnz	r0, .L224
 158:lvgl/src/lv_widgets/lv_roller.c **** 
 3987              		.loc 1 158 5 discriminator 1 view .LVU1217
 158:lvgl/src/lv_widgets/lv_roller.c **** 
 3988              		.loc 1 158 5 discriminator 1 view .LVU1218
 3989 0024 3246     		mov	r2, r6
 3990 0026 0023     		movs	r3, #0
 3991 0028 3948     		ldr	r0, .L236
 3992 002a FFF7FEFF 		bl	lv_debug_log_error
 3993              	.LVL468:
 3994              	.L225:
 158:lvgl/src/lv_widgets/lv_roller.c **** 
 3995              		.loc 1 158 5 discriminator 2 view .LVU1219
 158:lvgl/src/lv_widgets/lv_roller.c **** 
 3996              		.loc 1 158 5 discriminator 2 view .LVU1220
 3997 002e FEE7     		b	.L225
 3998              	.L224:
 158:lvgl/src/lv_widgets/lv_roller.c **** 
 3999              		.loc 1 158 27 discriminator 2 view .LVU1221
 160:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 4000              		.loc 1 160 5 discriminator 2 view .LVU1222
 160:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_t * label = get_label(roller);
 4001              		.loc 1 160 29 is_stmt 0 discriminator 2 view .LVU1223
 4002 0030 3846     		mov	r0, r7
 4003 0032 FFF7FEFF 		bl	lv_obj_get_ext_attr
 4004              	.LVL469:
 4005 0036 0446     		mov	r4, r0
 4006              	.LVL470:
 161:lvgl/src/lv_widgets/lv_roller.c **** 
 4007              		.loc 1 161 5 is_stmt 1 discriminator 2 view .LVU1224
 161:lvgl/src/lv_widgets/lv_roller.c **** 
 4008              		.loc 1 161 24 is_stmt 0 discriminator 2 view .LVU1225
 4009 0038 3846     		mov	r0, r7
 4010              	.LVL471:
 161:lvgl/src/lv_widgets/lv_roller.c **** 
 4011              		.loc 1 161 24 discriminator 2 view .LVU1226
 4012 003a FFF7FEFF 		bl	get_label
 4013              	.LVL472:
 4014 003e 8146     		mov	r9, r0
 4015              	.LVL473:
 163:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = 0;
 4016              		.loc 1 163 5 is_stmt 1 discriminator 2 view .LVU1227
 163:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = 0;
 4017              		.loc 1 163 25 is_stmt 0 discriminator 2 view .LVU1228
 4018 0040 0023     		movs	r3, #0
 4019 0042 A4F84A30 		strh	r3, [r4, #74]	@ movhi
 164:lvgl/src/lv_widgets/lv_roller.c **** 
 4020              		.loc 1 164 5 is_stmt 1 discriminator 2 view .LVU1229
 164:lvgl/src/lv_widgets/lv_roller.c **** 
 4021              		.loc 1 164 25 is_stmt 0 discriminator 2 view .LVU1230
 4022 0046 A4F84C30 		strh	r3, [r4, #76]	@ movhi
 167:lvgl/src/lv_widgets/lv_roller.c ****     uint32_t cnt;
ARM GAS  D:\Temp\ccqwJTgn.s 			page 125


 4023              		.loc 1 167 5 is_stmt 1 discriminator 2 view .LVU1231
 167:lvgl/src/lv_widgets/lv_roller.c ****     uint32_t cnt;
 4024              		.loc 1 167 21 is_stmt 0 discriminator 2 view .LVU1232
 4025 004a A4F84830 		strh	r3, [r4, #72]	@ movhi
 168:lvgl/src/lv_widgets/lv_roller.c ****     for(cnt = 0; options[cnt] != '\0'; cnt++) {
 4026              		.loc 1 168 5 is_stmt 1 discriminator 2 view .LVU1233
 169:lvgl/src/lv_widgets/lv_roller.c ****         if(options[cnt] == '\n') ext->option_cnt++;
 4027              		.loc 1 169 5 discriminator 2 view .LVU1234
 4028              	.LVL474:
 169:lvgl/src/lv_widgets/lv_roller.c ****         if(options[cnt] == '\n') ext->option_cnt++;
 4029              		.loc 1 169 5 is_stmt 0 discriminator 2 view .LVU1235
 4030 004e 00E0     		b	.L226
 4031              	.LVL475:
 4032              	.L227:
 169:lvgl/src/lv_widgets/lv_roller.c ****         if(options[cnt] == '\n') ext->option_cnt++;
 4033              		.loc 1 169 43 discriminator 2 view .LVU1236
 4034 0050 0133     		adds	r3, r3, #1
 4035              	.LVL476:
 4036              	.L226:
 169:lvgl/src/lv_widgets/lv_roller.c ****         if(options[cnt] == '\n') ext->option_cnt++;
 4037              		.loc 1 169 25 discriminator 1 view .LVU1237
 4038 0052 F25C     		ldrb	r2, [r6, r3]	@ zero_extendqisi2
 169:lvgl/src/lv_widgets/lv_roller.c ****         if(options[cnt] == '\n') ext->option_cnt++;
 4039              		.loc 1 169 5 discriminator 1 view .LVU1238
 4040 0054 3AB1     		cbz	r2, .L234
 170:lvgl/src/lv_widgets/lv_roller.c ****     }
 4041              		.loc 1 170 9 is_stmt 1 view .LVU1239
 170:lvgl/src/lv_widgets/lv_roller.c ****     }
 4042              		.loc 1 170 11 is_stmt 0 view .LVU1240
 4043 0056 0A2A     		cmp	r2, #10
 4044 0058 FAD1     		bne	.L227
 170:lvgl/src/lv_widgets/lv_roller.c ****     }
 4045              		.loc 1 170 34 is_stmt 1 discriminator 1 view .LVU1241
 170:lvgl/src/lv_widgets/lv_roller.c ****     }
 4046              		.loc 1 170 37 is_stmt 0 discriminator 1 view .LVU1242
 4047 005a B4F84820 		ldrh	r2, [r4, #72]
 170:lvgl/src/lv_widgets/lv_roller.c ****     }
 4048              		.loc 1 170 49 discriminator 1 view .LVU1243
 4049 005e 0132     		adds	r2, r2, #1
 4050 0060 A4F84820 		strh	r2, [r4, #72]	@ movhi
 4051 0064 F4E7     		b	.L227
 4052              	.L234:
 172:lvgl/src/lv_widgets/lv_roller.c **** 
 4053              		.loc 1 172 5 is_stmt 1 view .LVU1244
 172:lvgl/src/lv_widgets/lv_roller.c **** 
 4054              		.loc 1 172 8 is_stmt 0 view .LVU1245
 4055 0066 B4F84830 		ldrh	r3, [r4, #72]
 4056              	.LVL477:
 172:lvgl/src/lv_widgets/lv_roller.c **** 
 4057              		.loc 1 172 20 view .LVU1246
 4058 006a 0133     		adds	r3, r3, #1
 4059 006c A4F84830 		strh	r3, [r4, #72]	@ movhi
 174:lvgl/src/lv_widgets/lv_roller.c ****         ext->mode = LV_ROLLER_MODE_NORMAL;
 4060              		.loc 1 174 5 is_stmt 1 view .LVU1247
 174:lvgl/src/lv_widgets/lv_roller.c ****         ext->mode = LV_ROLLER_MODE_NORMAL;
 4061              		.loc 1 174 7 is_stmt 0 view .LVU1248
 4062 0070 ADB9     		cbnz	r5, .L229
ARM GAS  D:\Temp\ccqwJTgn.s 			page 126


 175:lvgl/src/lv_widgets/lv_roller.c ****         lv_label_set_text(label, options);
 4063              		.loc 1 175 9 is_stmt 1 view .LVU1249
 175:lvgl/src/lv_widgets/lv_roller.c ****         lv_label_set_text(label, options);
 4064              		.loc 1 175 19 is_stmt 0 view .LVU1250
 4065 0072 94F84E30 		ldrb	r3, [r4, #78]	@ zero_extendqisi2
 4066 0076 6FF30003 		bfc	r3, #0, #1
 4067 007a 84F84E30 		strb	r3, [r4, #78]
 176:lvgl/src/lv_widgets/lv_roller.c ****     }
 4068              		.loc 1 176 9 is_stmt 1 view .LVU1251
 4069 007e 3146     		mov	r1, r6
 4070 0080 4846     		mov	r0, r9
 4071              	.LVL478:
 176:lvgl/src/lv_widgets/lv_roller.c ****     }
 4072              		.loc 1 176 9 is_stmt 0 view .LVU1252
 4073 0082 FFF7FEFF 		bl	lv_label_set_text
 4074              	.LVL479:
 4075              	.L230:
 197:lvgl/src/lv_widgets/lv_roller.c **** 
 4076              		.loc 1 197 5 is_stmt 1 view .LVU1253
 197:lvgl/src/lv_widgets/lv_roller.c **** 
 4077              		.loc 1 197 30 is_stmt 0 view .LVU1254
 4078 0086 B4F84A30 		ldrh	r3, [r4, #74]
 197:lvgl/src/lv_widgets/lv_roller.c **** 
 4079              		.loc 1 197 25 view .LVU1255
 4080 008a A4F84C30 		strh	r3, [r4, #76]	@ movhi
 199:lvgl/src/lv_widgets/lv_roller.c ****     refr_width(roller);
 4081              		.loc 1 199 5 is_stmt 1 view .LVU1256
 4082 008e 3846     		mov	r0, r7
 4083 0090 FFF7FEFF 		bl	refr_height
 4084              	.LVL480:
 200:lvgl/src/lv_widgets/lv_roller.c **** }
 4085              		.loc 1 200 5 view .LVU1257
 4086 0094 3846     		mov	r0, r7
 4087 0096 FFF7FEFF 		bl	refr_width
 4088              	.LVL481:
 201:lvgl/src/lv_widgets/lv_roller.c **** 
 4089              		.loc 1 201 1 is_stmt 0 view .LVU1258
 4090 009a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4091              	.LVL482:
 4092              	.L229:
 4093              	.LBB209:
 179:lvgl/src/lv_widgets/lv_roller.c **** 
 4094              		.loc 1 179 9 is_stmt 1 view .LVU1259
 179:lvgl/src/lv_widgets/lv_roller.c **** 
 4095              		.loc 1 179 19 is_stmt 0 view .LVU1260
 4096 009e 94F84E30 		ldrb	r3, [r4, #78]	@ zero_extendqisi2
 4097 00a2 43F00103 		orr	r3, r3, #1
 4098 00a6 84F84E30 		strb	r3, [r4, #78]
 181:lvgl/src/lv_widgets/lv_roller.c ****         char * opt_extra = _lv_mem_buf_get(opt_len * LV_ROLLER_INF_PAGES);
 4099              		.loc 1 181 9 is_stmt 1 view .LVU1261
 181:lvgl/src/lv_widgets/lv_roller.c ****         char * opt_extra = _lv_mem_buf_get(opt_len * LV_ROLLER_INF_PAGES);
 4100              		.loc 1 181 26 is_stmt 0 view .LVU1262
 4101 00aa 3046     		mov	r0, r6
 4102              	.LVL483:
 181:lvgl/src/lv_widgets/lv_roller.c ****         char * opt_extra = _lv_mem_buf_get(opt_len * LV_ROLLER_INF_PAGES);
 4103              		.loc 1 181 26 view .LVU1263
 4104 00ac FFF7FEFF 		bl	strlen
ARM GAS  D:\Temp\ccqwJTgn.s 			page 127


 4105              	.LVL484:
 181:lvgl/src/lv_widgets/lv_roller.c ****         char * opt_extra = _lv_mem_buf_get(opt_len * LV_ROLLER_INF_PAGES);
 4106              		.loc 1 181 16 view .LVU1264
 4107 00b0 00F1010B 		add	fp, r0, #1
 4108              	.LVL485:
 182:lvgl/src/lv_widgets/lv_roller.c ****         uint8_t i;
 4109              		.loc 1 182 9 is_stmt 1 view .LVU1265
 182:lvgl/src/lv_widgets/lv_roller.c ****         uint8_t i;
 4110              		.loc 1 182 52 is_stmt 0 view .LVU1266
 4111 00b4 CBEBCB0A 		rsb	r10, fp, fp, lsl #3
 182:lvgl/src/lv_widgets/lv_roller.c ****         uint8_t i;
 4112              		.loc 1 182 28 view .LVU1267
 4113 00b8 5046     		mov	r0, r10
 4114 00ba FFF7FEFF 		bl	_lv_mem_buf_get
 4115              	.LVL486:
 4116 00be 8046     		mov	r8, r0
 4117              	.LVL487:
 183:lvgl/src/lv_widgets/lv_roller.c ****         for(i = 0; i < LV_ROLLER_INF_PAGES; i++) {
 4118              		.loc 1 183 9 is_stmt 1 view .LVU1268
 184:lvgl/src/lv_widgets/lv_roller.c ****             strcpy(&opt_extra[opt_len * i], options);
 4119              		.loc 1 184 9 view .LVU1269
 184:lvgl/src/lv_widgets/lv_roller.c ****             strcpy(&opt_extra[opt_len * i], options);
 4120              		.loc 1 184 15 is_stmt 0 view .LVU1270
 4121 00c0 0025     		movs	r5, #0
 4122              	.LVL488:
 4123              	.L231:
 184:lvgl/src/lv_widgets/lv_roller.c ****             strcpy(&opt_extra[opt_len * i], options);
 4124              		.loc 1 184 9 discriminator 1 view .LVU1271
 4125 00c2 062D     		cmp	r5, #6
 4126 00c4 0DD8     		bhi	.L235
 185:lvgl/src/lv_widgets/lv_roller.c ****             opt_extra[opt_len * (i + 1) - 1] = '\n';
 4127              		.loc 1 185 13 is_stmt 1 discriminator 3 view .LVU1272
 4128 00c6 3146     		mov	r1, r6
 4129 00c8 0BFB0580 		mla	r0, fp, r5, r8
 4130 00cc FFF7FEFF 		bl	strcpy
 4131              	.LVL489:
 186:lvgl/src/lv_widgets/lv_roller.c ****         }
 4132              		.loc 1 186 13 discriminator 3 view .LVU1273
 186:lvgl/src/lv_widgets/lv_roller.c ****         }
 4133              		.loc 1 186 36 is_stmt 0 discriminator 3 view .LVU1274
 4134 00d0 0135     		adds	r5, r5, #1
 4135              	.LVL490:
 186:lvgl/src/lv_widgets/lv_roller.c ****         }
 4136              		.loc 1 186 31 discriminator 3 view .LVU1275
 4137 00d2 0BFB05F3 		mul	r3, fp, r5
 186:lvgl/src/lv_widgets/lv_roller.c ****         }
 4138              		.loc 1 186 22 discriminator 3 view .LVU1276
 4139 00d6 013B     		subs	r3, r3, #1
 186:lvgl/src/lv_widgets/lv_roller.c ****         }
 4140              		.loc 1 186 46 discriminator 3 view .LVU1277
 4141 00d8 0A22     		movs	r2, #10
 4142 00da 08F80320 		strb	r2, [r8, r3]
 184:lvgl/src/lv_widgets/lv_roller.c ****             strcpy(&opt_extra[opt_len * i], options);
 4143              		.loc 1 184 46 discriminator 3 view .LVU1278
 4144 00de EDB2     		uxtb	r5, r5
 4145              	.LVL491:
 184:lvgl/src/lv_widgets/lv_roller.c ****             strcpy(&opt_extra[opt_len * i], options);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 128


 4146              		.loc 1 184 46 discriminator 3 view .LVU1279
 4147 00e0 EFE7     		b	.L231
 4148              	.L235:
 188:lvgl/src/lv_widgets/lv_roller.c ****         lv_label_set_text(label, opt_extra);
 4149              		.loc 1 188 9 is_stmt 1 view .LVU1280
 188:lvgl/src/lv_widgets/lv_roller.c ****         lv_label_set_text(label, opt_extra);
 4150              		.loc 1 188 18 is_stmt 0 view .LVU1281
 4151 00e2 0AF1FF3A 		add	r10, r10, #-1
 188:lvgl/src/lv_widgets/lv_roller.c ****         lv_label_set_text(label, opt_extra);
 4152              		.loc 1 188 54 view .LVU1282
 4153 00e6 0023     		movs	r3, #0
 4154 00e8 08F80A30 		strb	r3, [r8, r10]
 189:lvgl/src/lv_widgets/lv_roller.c ****         _lv_mem_buf_release(opt_extra);
 4155              		.loc 1 189 9 is_stmt 1 view .LVU1283
 4156 00ec 4146     		mov	r1, r8
 4157 00ee 4846     		mov	r0, r9
 4158 00f0 FFF7FEFF 		bl	lv_label_set_text
 4159              	.LVL492:
 190:lvgl/src/lv_widgets/lv_roller.c **** 
 4160              		.loc 1 190 9 view .LVU1284
 4161 00f4 4046     		mov	r0, r8
 4162 00f6 FFF7FEFF 		bl	_lv_mem_buf_release
 4163              	.LVL493:
 192:lvgl/src/lv_widgets/lv_roller.c **** 
 4164              		.loc 1 192 9 view .LVU1285
 192:lvgl/src/lv_widgets/lv_roller.c **** 
 4165              		.loc 1 192 68 is_stmt 0 view .LVU1286
 4166 00fa B4F84830 		ldrh	r3, [r4, #72]
 192:lvgl/src/lv_widgets/lv_roller.c **** 
 4167              		.loc 1 192 29 view .LVU1287
 4168 00fe 03EB4302 		add	r2, r3, r3, lsl #1
 4169 0102 A4F84A20 		strh	r2, [r4, #74]	@ movhi
 194:lvgl/src/lv_widgets/lv_roller.c ****     }
 4170              		.loc 1 194 9 is_stmt 1 view .LVU1288
 194:lvgl/src/lv_widgets/lv_roller.c ****     }
 4171              		.loc 1 194 25 is_stmt 0 view .LVU1289
 4172 0106 C3EBC303 		rsb	r3, r3, r3, lsl #3
 4173 010a A4F84830 		strh	r3, [r4, #72]	@ movhi
 4174 010e BAE7     		b	.L230
 4175              	.L237:
 4176              		.align	2
 4177              	.L236:
 4178 0110 00000000 		.word	.LC0
 4179              	.LBE209:
 4180              		.cfi_endproc
 4181              	.LFE476:
 4183              		.section	.text.lv_roller_create,"ax",%progbits
 4184              		.align	1
 4185              		.global	lv_roller_create
 4186              		.syntax unified
 4187              		.thumb
 4188              		.thumb_func
 4189              		.fpu fpv4-sp-d16
 4191              	lv_roller_create:
 4192              	.LVL494:
 4193              	.LFB475:
  72:lvgl/src/lv_widgets/lv_roller.c ****     LV_LOG_TRACE("roller create started");
ARM GAS  D:\Temp\ccqwJTgn.s 			page 129


 4194              		.loc 1 72 1 is_stmt 1 view -0
 4195              		.cfi_startproc
 4196              		@ args = 0, pretend = 0, frame = 0
 4197              		@ frame_needed = 0, uses_anonymous_args = 0
  72:lvgl/src/lv_widgets/lv_roller.c ****     LV_LOG_TRACE("roller create started");
 4198              		.loc 1 72 1 is_stmt 0 view .LVU1291
 4199 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4200              	.LCFI42:
 4201              		.cfi_def_cfa_offset 20
 4202              		.cfi_offset 4, -20
 4203              		.cfi_offset 5, -16
 4204              		.cfi_offset 6, -12
 4205              		.cfi_offset 7, -8
 4206              		.cfi_offset 14, -4
 4207 0002 83B0     		sub	sp, sp, #12
 4208              	.LCFI43:
 4209              		.cfi_def_cfa_offset 32
 4210 0004 0E46     		mov	r6, r1
  73:lvgl/src/lv_widgets/lv_roller.c **** 
 4211              		.loc 1 73 42 is_stmt 1 view .LVU1292
  76:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_MEM(roller);
 4212              		.loc 1 76 5 view .LVU1293
  76:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_MEM(roller);
 4213              		.loc 1 76 25 is_stmt 0 view .LVU1294
 4214 0006 FFF7FEFF 		bl	lv_page_create
 4215              	.LVL495:
  76:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_MEM(roller);
 4216              		.loc 1 76 25 view .LVU1295
 4217 000a 0446     		mov	r4, r0
 4218              	.LVL496:
  77:lvgl/src/lv_widgets/lv_roller.c ****     if(roller == NULL) return NULL;
 4219              		.loc 1 77 5 is_stmt 1 view .LVU1296
  77:lvgl/src/lv_widgets/lv_roller.c ****     if(roller == NULL) return NULL;
 4220              		.loc 1 77 5 view .LVU1297
 4221 000c FFF7FEFF 		bl	lv_debug_check_null
 4222              	.LVL497:
  77:lvgl/src/lv_widgets/lv_roller.c ****     if(roller == NULL) return NULL;
 4223              		.loc 1 77 5 is_stmt 0 view .LVU1298
 4224 0010 0028     		cmp	r0, #0
 4225 0012 6CD0     		beq	.L250
  77:lvgl/src/lv_widgets/lv_roller.c ****     if(roller == NULL) return NULL;
 4226              		.loc 1 77 26 is_stmt 1 discriminator 2 view .LVU1299
  78:lvgl/src/lv_widgets/lv_roller.c **** 
 4227              		.loc 1 78 5 discriminator 2 view .LVU1300
  78:lvgl/src/lv_widgets/lv_roller.c **** 
 4228              		.loc 1 78 7 is_stmt 0 discriminator 2 view .LVU1301
 4229 0014 002C     		cmp	r4, #0
 4230 0016 67D0     		beq	.L238
  80:lvgl/src/lv_widgets/lv_roller.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(roller);
 4231              		.loc 1 80 5 is_stmt 1 view .LVU1302
  80:lvgl/src/lv_widgets/lv_roller.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(roller);
 4232              		.loc 1 80 29 is_stmt 0 view .LVU1303
 4233 0018 664B     		ldr	r3, .L257
 4234 001a 1B68     		ldr	r3, [r3]
  80:lvgl/src/lv_widgets/lv_roller.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(roller);
 4235              		.loc 1 80 7 view .LVU1304
 4236 001c 002B     		cmp	r3, #0
ARM GAS  D:\Temp\ccqwJTgn.s 			page 130


 4237 001e 6CD0     		beq	.L251
 4238              	.L242:
  81:lvgl/src/lv_widgets/lv_roller.c **** 
 4239              		.loc 1 81 5 is_stmt 1 view .LVU1305
  81:lvgl/src/lv_widgets/lv_roller.c **** 
 4240              		.loc 1 81 24 is_stmt 0 view .LVU1306
 4241 0020 654B     		ldr	r3, .L257+4
 4242 0022 1B68     		ldr	r3, [r3]
  81:lvgl/src/lv_widgets/lv_roller.c **** 
 4243              		.loc 1 81 7 view .LVU1307
 4244 0024 002B     		cmp	r3, #0
 4245 0026 70D0     		beq	.L252
 4246              	.L243:
  84:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_MEM(ext);
 4247              		.loc 1 84 5 is_stmt 1 view .LVU1308
  84:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_MEM(ext);
 4248              		.loc 1 84 29 is_stmt 0 view .LVU1309
 4249 0028 5021     		movs	r1, #80
 4250 002a 2046     		mov	r0, r4
 4251 002c FFF7FEFF 		bl	lv_obj_allocate_ext_attr
 4252              	.LVL498:
 4253 0030 0546     		mov	r5, r0
 4254              	.LVL499:
  85:lvgl/src/lv_widgets/lv_roller.c ****     if(ext == NULL) {
 4255              		.loc 1 85 5 is_stmt 1 view .LVU1310
  85:lvgl/src/lv_widgets/lv_roller.c ****     if(ext == NULL) {
 4256              		.loc 1 85 5 view .LVU1311
 4257 0032 FFF7FEFF 		bl	lv_debug_check_null
 4258              	.LVL500:
  85:lvgl/src/lv_widgets/lv_roller.c ****     if(ext == NULL) {
 4259              		.loc 1 85 5 is_stmt 0 view .LVU1312
 4260 0036 0028     		cmp	r0, #0
 4261 0038 6DD0     		beq	.L253
  85:lvgl/src/lv_widgets/lv_roller.c ****     if(ext == NULL) {
 4262              		.loc 1 85 23 is_stmt 1 discriminator 2 view .LVU1313
  86:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_del(roller);
 4263              		.loc 1 86 5 discriminator 2 view .LVU1314
  86:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_del(roller);
 4264              		.loc 1 86 7 is_stmt 0 discriminator 2 view .LVU1315
 4265 003a 002D     		cmp	r5, #0
 4266 003c 71D0     		beq	.L254
  91:lvgl/src/lv_widgets/lv_roller.c ****     ext->option_cnt = 0;
 4267              		.loc 1 91 5 is_stmt 1 view .LVU1316
  91:lvgl/src/lv_widgets/lv_roller.c ****     ext->option_cnt = 0;
 4268              		.loc 1 91 15 is_stmt 0 view .LVU1317
 4269 003e 95F84E30 		ldrb	r3, [r5, #78]	@ zero_extendqisi2
  92:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id = 0;
 4270              		.loc 1 92 5 is_stmt 1 view .LVU1318
  92:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id = 0;
 4271              		.loc 1 92 21 is_stmt 0 view .LVU1319
 4272 0042 0022     		movs	r2, #0
 4273 0044 A5F84820 		strh	r2, [r5, #72]	@ movhi
  93:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = 0;
 4274              		.loc 1 93 5 is_stmt 1 view .LVU1320
  93:lvgl/src/lv_widgets/lv_roller.c ****     ext->sel_opt_id_ori = 0;
 4275              		.loc 1 93 21 is_stmt 0 view .LVU1321
 4276 0048 A5F84A20 		strh	r2, [r5, #74]	@ movhi
ARM GAS  D:\Temp\ccqwJTgn.s 			page 131


  94:lvgl/src/lv_widgets/lv_roller.c ****     ext->auto_fit = 1;
 4277              		.loc 1 94 5 is_stmt 1 view .LVU1322
  94:lvgl/src/lv_widgets/lv_roller.c ****     ext->auto_fit = 1;
 4278              		.loc 1 94 25 is_stmt 0 view .LVU1323
 4279 004c A5F84C20 		strh	r2, [r5, #76]	@ movhi
  95:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_list_init(&ext->style_sel);
 4280              		.loc 1 95 5 is_stmt 1 view .LVU1324
  95:lvgl/src/lv_widgets/lv_roller.c ****     lv_style_list_init(&ext->style_sel);
 4281              		.loc 1 95 19 is_stmt 0 view .LVU1325
 4282 0050 03F0FE03 		and	r3, r3, #254
 4283 0054 43F00203 		orr	r3, r3, #2
 4284 0058 85F84E30 		strb	r3, [r5, #78]
  96:lvgl/src/lv_widgets/lv_roller.c **** 
 4285              		.loc 1 96 5 is_stmt 1 view .LVU1326
 4286 005c 05F14007 		add	r7, r5, #64
 4287 0060 3846     		mov	r0, r7
 4288 0062 FFF7FEFF 		bl	lv_style_list_init
 4289              	.LVL501:
  99:lvgl/src/lv_widgets/lv_roller.c ****     lv_obj_set_design_cb(roller, lv_roller_design);
 4290              		.loc 1 99 5 view .LVU1327
 4291 0066 5549     		ldr	r1, .L257+8
 4292 0068 2046     		mov	r0, r4
 4293 006a FFF7FEFF 		bl	lv_obj_set_signal_cb
 4294              	.LVL502:
 100:lvgl/src/lv_widgets/lv_roller.c **** 
 4295              		.loc 1 100 5 view .LVU1328
 4296 006e 5449     		ldr	r1, .L257+12
 4297 0070 2046     		mov	r0, r4
 4298 0072 FFF7FEFF 		bl	lv_obj_set_design_cb
 4299              	.LVL503:
 103:lvgl/src/lv_widgets/lv_roller.c **** 
 4300              		.loc 1 103 5 view .LVU1329
 103:lvgl/src/lv_widgets/lv_roller.c **** 
 4301              		.loc 1 103 7 is_stmt 0 view .LVU1330
 4302 0076 002E     		cmp	r6, #0
 4303 0078 58D0     		beq	.L255
 4304              	.LBB218:
 125:lvgl/src/lv_widgets/lv_roller.c **** 
 4305              		.loc 1 125 9 is_stmt 1 view .LVU1331
 125:lvgl/src/lv_widgets/lv_roller.c **** 
 4306              		.loc 1 125 33 is_stmt 0 view .LVU1332
 4307 007a 3046     		mov	r0, r6
 4308 007c FFF7FEFF 		bl	get_label
 4309              	.LVL504:
 125:lvgl/src/lv_widgets/lv_roller.c **** 
 4310              		.loc 1 125 9 view .LVU1333
 4311 0080 0146     		mov	r1, r0
 4312 0082 2046     		mov	r0, r4
 4313 0084 FFF7FEFF 		bl	lv_label_create
 4314              	.LVL505:
 127:lvgl/src/lv_widgets/lv_roller.c ****         ext->mode = copy_ext->mode;
 4315              		.loc 1 127 9 is_stmt 1 view .LVU1334
 127:lvgl/src/lv_widgets/lv_roller.c ****         ext->mode = copy_ext->mode;
 4316              		.loc 1 127 38 is_stmt 0 view .LVU1335
 4317 0088 3046     		mov	r0, r6
 4318 008a FFF7FEFF 		bl	lv_obj_get_ext_attr
 4319              	.LVL506:
ARM GAS  D:\Temp\ccqwJTgn.s 			page 132


 4320 008e 0646     		mov	r6, r0
 4321              	.LVL507:
 128:lvgl/src/lv_widgets/lv_roller.c ****         ext->option_cnt = copy_ext->option_cnt;
 4322              		.loc 1 128 9 is_stmt 1 view .LVU1336
 128:lvgl/src/lv_widgets/lv_roller.c ****         ext->option_cnt = copy_ext->option_cnt;
 4323              		.loc 1 128 29 is_stmt 0 view .LVU1337
 4324 0090 90F84E20 		ldrb	r2, [r0, #78]	@ zero_extendqisi2
 128:lvgl/src/lv_widgets/lv_roller.c ****         ext->option_cnt = copy_ext->option_cnt;
 4325              		.loc 1 128 19 view .LVU1338
 4326 0094 95F84E30 		ldrb	r3, [r5, #78]	@ zero_extendqisi2
 4327 0098 62F30003 		bfi	r3, r2, #0, #1
 4328 009c 85F84E30 		strb	r3, [r5, #78]
 129:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id = copy_ext->sel_opt_id;
 4329              		.loc 1 129 9 is_stmt 1 view .LVU1339
 129:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id = copy_ext->sel_opt_id;
 4330              		.loc 1 129 35 is_stmt 0 view .LVU1340
 4331 00a0 B0F84830 		ldrh	r3, [r0, #72]
 129:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id = copy_ext->sel_opt_id;
 4332              		.loc 1 129 25 view .LVU1341
 4333 00a4 A5F84830 		strh	r3, [r5, #72]	@ movhi
 130:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = copy_ext->sel_opt_id;
 4334              		.loc 1 130 9 is_stmt 1 view .LVU1342
 130:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = copy_ext->sel_opt_id;
 4335              		.loc 1 130 35 is_stmt 0 view .LVU1343
 4336 00a8 B0F84A30 		ldrh	r3, [r0, #74]
 130:lvgl/src/lv_widgets/lv_roller.c ****         ext->sel_opt_id_ori = copy_ext->sel_opt_id;
 4337              		.loc 1 130 25 view .LVU1344
 4338 00ac A5F84A30 		strh	r3, [r5, #74]	@ movhi
 131:lvgl/src/lv_widgets/lv_roller.c ****         ext->auto_fit = copy_ext->auto_fit;
 4339              		.loc 1 131 9 is_stmt 1 view .LVU1345
 131:lvgl/src/lv_widgets/lv_roller.c ****         ext->auto_fit = copy_ext->auto_fit;
 4340              		.loc 1 131 29 is_stmt 0 view .LVU1346
 4341 00b0 A5F84C30 		strh	r3, [r5, #76]	@ movhi
 132:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * scrl = lv_page_get_scrollable(roller);
 4342              		.loc 1 132 9 is_stmt 1 view .LVU1347
 132:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * scrl = lv_page_get_scrollable(roller);
 4343              		.loc 1 132 33 is_stmt 0 view .LVU1348
 4344 00b4 90F84E30 		ldrb	r3, [r0, #78]	@ zero_extendqisi2
 4345 00b8 C3F34003 		ubfx	r3, r3, #1, #1
 132:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * scrl = lv_page_get_scrollable(roller);
 4346              		.loc 1 132 23 view .LVU1349
 4347 00bc 95F84E20 		ldrb	r2, [r5, #78]	@ zero_extendqisi2
 4348 00c0 63F34102 		bfi	r2, r3, #1, #1
 4349 00c4 85F84E20 		strb	r2, [r5, #78]
 133:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_signal_cb(scrl, lv_roller_scrl_signal);
 4350              		.loc 1 133 9 is_stmt 1 view .LVU1350
 133:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_signal_cb(scrl, lv_roller_scrl_signal);
 4351              		.loc 1 133 27 is_stmt 0 view .LVU1351
 4352 00c8 2046     		mov	r0, r4
 4353              	.LVL508:
 133:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_signal_cb(scrl, lv_roller_scrl_signal);
 4354              		.loc 1 133 27 view .LVU1352
 4355 00ca FFF7FEFF 		bl	lv_page_get_scrollable
 4356              	.LVL509:
 134:lvgl/src/lv_widgets/lv_roller.c **** 
 4357              		.loc 1 134 9 is_stmt 1 view .LVU1353
 4358 00ce 3D49     		ldr	r1, .L257+16
ARM GAS  D:\Temp\ccqwJTgn.s 			page 133


 4359 00d0 FFF7FEFF 		bl	lv_obj_set_signal_cb
 4360              	.LVL510:
 136:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_refresh_style(roller, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);
 4361              		.loc 1 136 9 view .LVU1354
 4362 00d4 06F14001 		add	r1, r6, #64
 4363 00d8 3846     		mov	r0, r7
 4364 00da FFF7FEFF 		bl	lv_style_list_copy
 4365              	.LVL511:
 137:lvgl/src/lv_widgets/lv_roller.c ****     }
 4366              		.loc 1 137 9 view .LVU1355
 4367 00de FF22     		movs	r2, #255
 4368 00e0 1146     		mov	r1, r2
 4369 00e2 2046     		mov	r0, r4
 4370 00e4 FFF7FEFF 		bl	lv_obj_refresh_style
 4371              	.LVL512:
 4372              	.L238:
 137:lvgl/src/lv_widgets/lv_roller.c ****     }
 4373              		.loc 1 137 9 is_stmt 0 view .LVU1356
 4374              	.LBE218:
 143:lvgl/src/lv_widgets/lv_roller.c **** 
 4375              		.loc 1 143 1 view .LVU1357
 4376 00e8 2046     		mov	r0, r4
 4377 00ea 03B0     		add	sp, sp, #12
 4378              	.LCFI44:
 4379              		.cfi_remember_state
 4380              		.cfi_def_cfa_offset 20
 4381              		@ sp needed
 4382 00ec F0BD     		pop	{r4, r5, r6, r7, pc}
 4383              	.LVL513:
 4384              	.L250:
 4385              	.LCFI45:
 4386              		.cfi_restore_state
  77:lvgl/src/lv_widgets/lv_roller.c ****     if(roller == NULL) return NULL;
 4387              		.loc 1 77 5 is_stmt 1 discriminator 1 view .LVU1358
  77:lvgl/src/lv_widgets/lv_roller.c ****     if(roller == NULL) return NULL;
 4388              		.loc 1 77 5 discriminator 1 view .LVU1359
 4389 00ee 2246     		mov	r2, r4
 4390 00f0 0023     		movs	r3, #0
 4391 00f2 3548     		ldr	r0, .L257+20
 4392 00f4 FFF7FEFF 		bl	lv_debug_log_error
 4393              	.LVL514:
 4394              	.L240:
  77:lvgl/src/lv_widgets/lv_roller.c ****     if(roller == NULL) return NULL;
 4395              		.loc 1 77 5 discriminator 1 view .LVU1360
  77:lvgl/src/lv_widgets/lv_roller.c ****     if(roller == NULL) return NULL;
 4396              		.loc 1 77 5 discriminator 1 view .LVU1361
 4397 00f8 FEE7     		b	.L240
 4398              	.L251:
  80:lvgl/src/lv_widgets/lv_roller.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(roller);
 4399              		.loc 1 80 38 discriminator 1 view .LVU1362
  80:lvgl/src/lv_widgets/lv_roller.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(roller);
 4400              		.loc 1 80 82 is_stmt 0 discriminator 1 view .LVU1363
 4401 00fa 2046     		mov	r0, r4
 4402 00fc FFF7FEFF 		bl	lv_page_get_scrollable
 4403              	.LVL515:
  80:lvgl/src/lv_widgets/lv_roller.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(roller);
 4404              		.loc 1 80 61 discriminator 1 view .LVU1364
ARM GAS  D:\Temp\ccqwJTgn.s 			page 134


 4405 0100 FFF7FEFF 		bl	lv_obj_get_signal_cb
 4406              	.LVL516:
  80:lvgl/src/lv_widgets/lv_roller.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(roller);
 4407              		.loc 1 80 59 discriminator 1 view .LVU1365
 4408 0104 2B4B     		ldr	r3, .L257
 4409 0106 1860     		str	r0, [r3]
 4410 0108 8AE7     		b	.L242
 4411              	.L252:
  81:lvgl/src/lv_widgets/lv_roller.c **** 
 4412              		.loc 1 81 33 is_stmt 1 discriminator 1 view .LVU1366
  81:lvgl/src/lv_widgets/lv_roller.c **** 
 4413              		.loc 1 81 51 is_stmt 0 discriminator 1 view .LVU1367
 4414 010a 2046     		mov	r0, r4
 4415 010c FFF7FEFF 		bl	lv_obj_get_signal_cb
 4416              	.LVL517:
  81:lvgl/src/lv_widgets/lv_roller.c **** 
 4417              		.loc 1 81 49 discriminator 1 view .LVU1368
 4418 0110 294B     		ldr	r3, .L257+4
 4419 0112 1860     		str	r0, [r3]
 4420 0114 88E7     		b	.L243
 4421              	.LVL518:
 4422              	.L253:
  85:lvgl/src/lv_widgets/lv_roller.c ****     if(ext == NULL) {
 4423              		.loc 1 85 5 is_stmt 1 discriminator 1 view .LVU1369
  85:lvgl/src/lv_widgets/lv_roller.c ****     if(ext == NULL) {
 4424              		.loc 1 85 5 discriminator 1 view .LVU1370
 4425 0116 2A46     		mov	r2, r5
 4426 0118 0023     		movs	r3, #0
 4427 011a 2B48     		ldr	r0, .L257+20
 4428 011c FFF7FEFF 		bl	lv_debug_log_error
 4429              	.LVL519:
 4430              	.L245:
  85:lvgl/src/lv_widgets/lv_roller.c ****     if(ext == NULL) {
 4431              		.loc 1 85 5 discriminator 2 view .LVU1371
  85:lvgl/src/lv_widgets/lv_roller.c ****     if(ext == NULL) {
 4432              		.loc 1 85 5 discriminator 2 view .LVU1372
 4433 0120 FEE7     		b	.L245
 4434              	.L254:
  87:lvgl/src/lv_widgets/lv_roller.c ****         return NULL;
 4435              		.loc 1 87 9 view .LVU1373
 4436 0122 2046     		mov	r0, r4
 4437 0124 FFF7FEFF 		bl	lv_obj_del
 4438              	.LVL520:
  88:lvgl/src/lv_widgets/lv_roller.c ****     }
 4439              		.loc 1 88 9 view .LVU1374
  88:lvgl/src/lv_widgets/lv_roller.c ****     }
 4440              		.loc 1 88 16 is_stmt 0 view .LVU1375
 4441 0128 0024     		movs	r4, #0
 4442              	.LVL521:
  88:lvgl/src/lv_widgets/lv_roller.c ****     }
 4443              		.loc 1 88 16 view .LVU1376
 4444 012a DDE7     		b	.L238
 4445              	.LVL522:
 4446              	.L255:
 4447              	.LBB219:
 105:lvgl/src/lv_widgets/lv_roller.c ****         lv_label_set_align(label, LV_LABEL_ALIGN_CENTER);
 4448              		.loc 1 105 9 is_stmt 1 view .LVU1377
ARM GAS  D:\Temp\ccqwJTgn.s 			page 135


 105:lvgl/src/lv_widgets/lv_roller.c ****         lv_label_set_align(label, LV_LABEL_ALIGN_CENTER);
 4449              		.loc 1 105 28 is_stmt 0 view .LVU1378
 4450 012c 0021     		movs	r1, #0
 4451 012e 2046     		mov	r0, r4
 4452 0130 FFF7FEFF 		bl	lv_label_create
 4453              	.LVL523:
 4454 0134 0546     		mov	r5, r0
 4455              	.LVL524:
 106:lvgl/src/lv_widgets/lv_roller.c ****         if(ancestor_label_design == NULL) ancestor_label_design = lv_obj_get_design_cb(label);
 4456              		.loc 1 106 9 is_stmt 1 view .LVU1379
 4457 0136 0121     		movs	r1, #1
 4458 0138 FFF7FEFF 		bl	lv_label_set_align
 4459              	.LVL525:
 107:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_design_cb(label, lv_roller_label_design);
 4460              		.loc 1 107 9 view .LVU1380
 107:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_design_cb(label, lv_roller_label_design);
 4461              		.loc 1 107 34 is_stmt 0 view .LVU1381
 4462 013c 234B     		ldr	r3, .L257+24
 4463 013e 1B68     		ldr	r3, [r3]
 107:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_design_cb(label, lv_roller_label_design);
 4464              		.loc 1 107 11 view .LVU1382
 4465 0140 8BB3     		cbz	r3, .L256
 4466              	.L248:
 108:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_t * scrl = lv_page_get_scrollable(roller);
 4467              		.loc 1 108 9 is_stmt 1 view .LVU1383
 4468 0142 2349     		ldr	r1, .L257+28
 4469 0144 2846     		mov	r0, r5
 4470 0146 FFF7FEFF 		bl	lv_obj_set_design_cb
 4471              	.LVL526:
 109:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_drag(scrl, true);
 4472              		.loc 1 109 9 view .LVU1384
 109:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_drag(scrl, true);
 4473              		.loc 1 109 27 is_stmt 0 view .LVU1385
 4474 014a 2046     		mov	r0, r4
 4475 014c FFF7FEFF 		bl	lv_page_get_scrollable
 4476              	.LVL527:
 4477 0150 0646     		mov	r6, r0
 4478              	.LVL528:
 110:lvgl/src/lv_widgets/lv_roller.c ****         lv_page_set_scrollable_fit2(roller, LV_FIT_PARENT, LV_FIT_NONE); /*Height is specified dire
 4479              		.loc 1 110 9 is_stmt 1 view .LVU1386
 4480 0152 0121     		movs	r1, #1
 4481 0154 FFF7FEFF 		bl	lv_obj_set_drag
 4482              	.LVL529:
 111:lvgl/src/lv_widgets/lv_roller.c ****         lv_roller_set_anim_time(roller, LV_ROLLER_DEF_ANIM_TIME);
 4483              		.loc 1 111 9 view .LVU1387
 4484              	.LBB220:
 4485              	.LBI220:
 4486              		.file 8 "lvgl/src/lv_widgets/lv_page.h"
   1:lvgl/src/lv_widgets/lv_page.h **** /**
   2:lvgl/src/lv_widgets/lv_page.h ****  * @file lv_page.h
   3:lvgl/src/lv_widgets/lv_page.h ****  *
   4:lvgl/src/lv_widgets/lv_page.h ****  */
   5:lvgl/src/lv_widgets/lv_page.h **** 
   6:lvgl/src/lv_widgets/lv_page.h **** #ifndef LV_PAGE_H
   7:lvgl/src/lv_widgets/lv_page.h **** #define LV_PAGE_H
   8:lvgl/src/lv_widgets/lv_page.h **** 
   9:lvgl/src/lv_widgets/lv_page.h **** #ifdef __cplusplus
ARM GAS  D:\Temp\ccqwJTgn.s 			page 136


  10:lvgl/src/lv_widgets/lv_page.h **** extern "C" {
  11:lvgl/src/lv_widgets/lv_page.h **** #endif
  12:lvgl/src/lv_widgets/lv_page.h **** 
  13:lvgl/src/lv_widgets/lv_page.h **** /*********************
  14:lvgl/src/lv_widgets/lv_page.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/lv_page.h ****  *********************/
  16:lvgl/src/lv_widgets/lv_page.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/lv_page.h **** 
  18:lvgl/src/lv_widgets/lv_page.h **** #if LV_USE_PAGE != 0
  19:lvgl/src/lv_widgets/lv_page.h **** 
  20:lvgl/src/lv_widgets/lv_page.h **** /*Testing of dependencies*/
  21:lvgl/src/lv_widgets/lv_page.h **** #if LV_USE_CONT == 0
  22:lvgl/src/lv_widgets/lv_page.h **** #error "lv_page: lv_cont is required. Enable it in lv_conf.h (LV_USE_CONT 1)"
  23:lvgl/src/lv_widgets/lv_page.h **** #endif
  24:lvgl/src/lv_widgets/lv_page.h **** 
  25:lvgl/src/lv_widgets/lv_page.h **** #include "lv_cont.h"
  26:lvgl/src/lv_widgets/lv_page.h **** #include "../lv_core/lv_indev.h"
  27:lvgl/src/lv_widgets/lv_page.h **** #include "../lv_misc/lv_anim.h"
  28:lvgl/src/lv_widgets/lv_page.h **** 
  29:lvgl/src/lv_widgets/lv_page.h **** /*********************
  30:lvgl/src/lv_widgets/lv_page.h ****  *      DEFINES
  31:lvgl/src/lv_widgets/lv_page.h ****  *********************/
  32:lvgl/src/lv_widgets/lv_page.h **** 
  33:lvgl/src/lv_widgets/lv_page.h **** /**********************
  34:lvgl/src/lv_widgets/lv_page.h ****  *      TYPEDEFS
  35:lvgl/src/lv_widgets/lv_page.h ****  **********************/
  36:lvgl/src/lv_widgets/lv_page.h **** 
  37:lvgl/src/lv_widgets/lv_page.h **** /** Scrollbar modes: shows when should the scrollbars be visible*/
  38:lvgl/src/lv_widgets/lv_page.h **** enum {
  39:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_OFF    = 0x0, /**< Never show scroll bars*/
  40:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_ON     = 0x1, /**< Always show scroll bars*/
  41:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_DRAG   = 0x2, /**< Show scroll bars when page is being dragged*/
  42:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_AUTO   = 0x3, /**< Show scroll bars when the scrollable container is large en
  43:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_HIDE   = 0x4, /**< Hide the scroll bar temporally*/
  44:lvgl/src/lv_widgets/lv_page.h ****     LV_SCROLLBAR_MODE_UNHIDE = 0x8, /**< Unhide the previously hidden scroll bar. Recover original 
  45:lvgl/src/lv_widgets/lv_page.h **** };
  46:lvgl/src/lv_widgets/lv_page.h **** typedef uint8_t lv_scrollbar_mode_t;
  47:lvgl/src/lv_widgets/lv_page.h **** 
  48:lvgl/src/lv_widgets/lv_page.h **** /** Edges: describes the four edges of the page*/
  49:lvgl/src/lv_widgets/lv_page.h **** enum { LV_PAGE_EDGE_LEFT = 0x1, LV_PAGE_EDGE_TOP = 0x2, LV_PAGE_EDGE_RIGHT = 0x4, LV_PAGE_EDGE_BOTT
  50:lvgl/src/lv_widgets/lv_page.h **** typedef uint8_t lv_page_edge_t;
  51:lvgl/src/lv_widgets/lv_page.h **** 
  52:lvgl/src/lv_widgets/lv_page.h **** /*Data of page*/
  53:lvgl/src/lv_widgets/lv_page.h **** typedef struct {
  54:lvgl/src/lv_widgets/lv_page.h ****     lv_cont_ext_t bg; /*Ext. of ancestor*/
  55:lvgl/src/lv_widgets/lv_page.h ****     /*New data for this type */
  56:lvgl/src/lv_widgets/lv_page.h ****     lv_obj_t * scrl; /*The scrollable object on the background*/
  57:lvgl/src/lv_widgets/lv_page.h ****     struct {
  58:lvgl/src/lv_widgets/lv_page.h ****         lv_style_list_t style; /*Style of scrollbars*/
  59:lvgl/src/lv_widgets/lv_page.h ****         lv_area_t hor_area;       /*Horizontal scrollbar area relative to the page. (Handled by the
  60:lvgl/src/lv_widgets/lv_page.h ****         lv_area_t ver_area;       /*Vertical scrollbar area relative to the page (Handled by the li
  61:lvgl/src/lv_widgets/lv_page.h ****         uint8_t hor_draw : 1;     /*1: horizontal scrollbar is visible now (Handled by the library)
  62:lvgl/src/lv_widgets/lv_page.h ****         uint8_t ver_draw : 1;     /*1: vertical scrollbar is visible now (Handled by the library)*/
  63:lvgl/src/lv_widgets/lv_page.h ****         lv_scrollbar_mode_t mode : 3;    /*Scrollbar visibility from 'lv_scrollbar_mode_t'*/
  64:lvgl/src/lv_widgets/lv_page.h ****     } scrlbar;
  65:lvgl/src/lv_widgets/lv_page.h **** #if LV_USE_ANIMATION
  66:lvgl/src/lv_widgets/lv_page.h ****     struct {
ARM GAS  D:\Temp\ccqwJTgn.s 			page 137


  67:lvgl/src/lv_widgets/lv_page.h ****         lv_anim_value_t state;    /*Store the current size of the edge flash effect*/
  68:lvgl/src/lv_widgets/lv_page.h ****         lv_style_list_t style; /*Style of edge flash effect (usually homogeneous circle)*/
  69:lvgl/src/lv_widgets/lv_page.h ****         uint8_t enabled : 1;      /*1: Show a flash animation on the edge*/
  70:lvgl/src/lv_widgets/lv_page.h ****         uint8_t top_ip : 1;       /*Used internally to show that top most position is reached (flas
  71:lvgl/src/lv_widgets/lv_page.h ****                                      Progress)*/
  72:lvgl/src/lv_widgets/lv_page.h ****         uint8_t bottom_ip : 1;    /*Used internally to show that bottom most position is reached (f
  73:lvgl/src/lv_widgets/lv_page.h ****                                      is In Progress)*/
  74:lvgl/src/lv_widgets/lv_page.h ****         uint8_t right_ip : 1;     /*Used internally to show that right most position is reached (fl
  75:lvgl/src/lv_widgets/lv_page.h ****                                      is In Progress)*/
  76:lvgl/src/lv_widgets/lv_page.h ****         uint8_t left_ip : 1;      /*Used internally to show that left most position is reached (fla
  77:lvgl/src/lv_widgets/lv_page.h ****                                      In Progress)*/
  78:lvgl/src/lv_widgets/lv_page.h ****     } edge_flash;
  79:lvgl/src/lv_widgets/lv_page.h **** 
  80:lvgl/src/lv_widgets/lv_page.h ****     uint16_t anim_time; /*Scroll animation time*/
  81:lvgl/src/lv_widgets/lv_page.h **** #endif
  82:lvgl/src/lv_widgets/lv_page.h ****     lv_obj_t * scroll_prop_obj;          /*Pointer to child page from where the scroll is being pro
  83:lvgl/src/lv_widgets/lv_page.h ****     uint8_t scroll_prop : 1;   /*The direction of the scroll propagation*/
  84:lvgl/src/lv_widgets/lv_page.h **** } lv_page_ext_t;
  85:lvgl/src/lv_widgets/lv_page.h **** 
  86:lvgl/src/lv_widgets/lv_page.h **** enum {
  87:lvgl/src/lv_widgets/lv_page.h ****     LV_PAGE_PART_BG = LV_CONT_PART_MAIN,
  88:lvgl/src/lv_widgets/lv_page.h ****     LV_PAGE_PART_SCROLLBAR = _LV_OBJ_PART_VIRTUAL_LAST,
  89:lvgl/src/lv_widgets/lv_page.h ****     LV_PAGE_PART_EDGE_FLASH,
  90:lvgl/src/lv_widgets/lv_page.h ****     _LV_PAGE_PART_VIRTUAL_LAST,
  91:lvgl/src/lv_widgets/lv_page.h **** 
  92:lvgl/src/lv_widgets/lv_page.h ****     LV_PAGE_PART_SCROLLABLE = _LV_OBJ_PART_REAL_LAST,
  93:lvgl/src/lv_widgets/lv_page.h ****     _LV_PAGE_PART_REAL_LAST,
  94:lvgl/src/lv_widgets/lv_page.h **** };
  95:lvgl/src/lv_widgets/lv_page.h **** typedef uint8_t lv_part_style_t;
  96:lvgl/src/lv_widgets/lv_page.h **** 
  97:lvgl/src/lv_widgets/lv_page.h **** /**********************
  98:lvgl/src/lv_widgets/lv_page.h ****  * GLOBAL PROTOTYPES
  99:lvgl/src/lv_widgets/lv_page.h ****  **********************/
 100:lvgl/src/lv_widgets/lv_page.h **** 
 101:lvgl/src/lv_widgets/lv_page.h **** /**
 102:lvgl/src/lv_widgets/lv_page.h ****  * Create a page objects
 103:lvgl/src/lv_widgets/lv_page.h ****  * @param par pointer to an object, it will be the parent of the new page
 104:lvgl/src/lv_widgets/lv_page.h ****  * @param copy pointer to a page object, if not NULL then the new object will be copied from it
 105:lvgl/src/lv_widgets/lv_page.h ****  * @return pointer to the created page
 106:lvgl/src/lv_widgets/lv_page.h ****  */
 107:lvgl/src/lv_widgets/lv_page.h **** lv_obj_t * lv_page_create(lv_obj_t * par, const lv_obj_t * copy);
 108:lvgl/src/lv_widgets/lv_page.h **** 
 109:lvgl/src/lv_widgets/lv_page.h **** /**
 110:lvgl/src/lv_widgets/lv_page.h ****  * Delete all children of the scrl object, without deleting scrl child.
 111:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to an object
 112:lvgl/src/lv_widgets/lv_page.h ****  */
 113:lvgl/src/lv_widgets/lv_page.h **** void lv_page_clean(lv_obj_t * page);
 114:lvgl/src/lv_widgets/lv_page.h **** 
 115:lvgl/src/lv_widgets/lv_page.h **** /**
 116:lvgl/src/lv_widgets/lv_page.h ****  * Get the scrollable object of a page
 117:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 118:lvgl/src/lv_widgets/lv_page.h ****  * @return pointer to a container which is the scrollable part of the page
 119:lvgl/src/lv_widgets/lv_page.h ****  */
 120:lvgl/src/lv_widgets/lv_page.h **** lv_obj_t * lv_page_get_scrollable(const lv_obj_t * page);
 121:lvgl/src/lv_widgets/lv_page.h **** 
 122:lvgl/src/lv_widgets/lv_page.h **** /**
 123:lvgl/src/lv_widgets/lv_page.h ****  * Get the animation time
ARM GAS  D:\Temp\ccqwJTgn.s 			page 138


 124:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 125:lvgl/src/lv_widgets/lv_page.h ****  * @return the animation time in milliseconds
 126:lvgl/src/lv_widgets/lv_page.h ****  */
 127:lvgl/src/lv_widgets/lv_page.h **** uint16_t lv_page_get_anim_time(const lv_obj_t * page);
 128:lvgl/src/lv_widgets/lv_page.h **** 
 129:lvgl/src/lv_widgets/lv_page.h **** /*=====================
 130:lvgl/src/lv_widgets/lv_page.h ****  * Setter functions
 131:lvgl/src/lv_widgets/lv_page.h ****  *====================*/
 132:lvgl/src/lv_widgets/lv_page.h **** 
 133:lvgl/src/lv_widgets/lv_page.h **** /**
 134:lvgl/src/lv_widgets/lv_page.h ****  * Set the scroll bar mode on a page
 135:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 136:lvgl/src/lv_widgets/lv_page.h ****  * @param sb_mode the new mode from 'lv_page_sb.mode_t' enum
 137:lvgl/src/lv_widgets/lv_page.h ****  */
 138:lvgl/src/lv_widgets/lv_page.h **** void lv_page_set_scrollbar_mode(lv_obj_t * page, lv_scrollbar_mode_t sb_mode);
 139:lvgl/src/lv_widgets/lv_page.h **** 
 140:lvgl/src/lv_widgets/lv_page.h **** /**
 141:lvgl/src/lv_widgets/lv_page.h ****  * Set the animation time for the page
 142:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 143:lvgl/src/lv_widgets/lv_page.h ****  * @param anim_time animation time in milliseconds
 144:lvgl/src/lv_widgets/lv_page.h ****  */
 145:lvgl/src/lv_widgets/lv_page.h **** void lv_page_set_anim_time(lv_obj_t * page, uint16_t anim_time);
 146:lvgl/src/lv_widgets/lv_page.h **** 
 147:lvgl/src/lv_widgets/lv_page.h **** /**
 148:lvgl/src/lv_widgets/lv_page.h ****  * Enable the scroll propagation feature. If enabled then the page will move its parent if there is
 149:lvgl/src/lv_widgets/lv_page.h ****  * no more space to scroll.
 150:lvgl/src/lv_widgets/lv_page.h ****  * The page needs to have a page-like parent (e.g. `lv_page`, `lv_tabview` tab, `lv_win` content ar
 151:lvgl/src/lv_widgets/lv_page.h ****  * If enabled drag direction will be changed `LV_DRAG_DIR_ONE` automatically to allow scrolling onl
 152:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a Page
 153:lvgl/src/lv_widgets/lv_page.h ****  * @param en true or false to enable/disable scroll propagation
 154:lvgl/src/lv_widgets/lv_page.h ****  */
 155:lvgl/src/lv_widgets/lv_page.h **** void lv_page_set_scroll_propagation(lv_obj_t * page, bool en);
 156:lvgl/src/lv_widgets/lv_page.h **** 
 157:lvgl/src/lv_widgets/lv_page.h **** /**
 158:lvgl/src/lv_widgets/lv_page.h ****  * Enable the edge flash effect. (Show an arc when the an edge is reached)
 159:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a Page
 160:lvgl/src/lv_widgets/lv_page.h ****  * @param en true or false to enable/disable end flash
 161:lvgl/src/lv_widgets/lv_page.h ****  */
 162:lvgl/src/lv_widgets/lv_page.h **** void lv_page_set_edge_flash(lv_obj_t * page, bool en);
 163:lvgl/src/lv_widgets/lv_page.h **** 
 164:lvgl/src/lv_widgets/lv_page.h **** /**
 165:lvgl/src/lv_widgets/lv_page.h ****  * Set the fit policy in all 4 directions separately.
 166:lvgl/src/lv_widgets/lv_page.h ****  * It tell how to change the page size automatically.
 167:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 168:lvgl/src/lv_widgets/lv_page.h ****  * @param left left fit policy from `lv_fit_t`
 169:lvgl/src/lv_widgets/lv_page.h ****  * @param right right fit policy from `lv_fit_t`
 170:lvgl/src/lv_widgets/lv_page.h ****  * @param top bottom fit policy from `lv_fit_t`
 171:lvgl/src/lv_widgets/lv_page.h ****  * @param bottom bottom fit policy from `lv_fit_t`
 172:lvgl/src/lv_widgets/lv_page.h ****  */
 173:lvgl/src/lv_widgets/lv_page.h **** static inline void lv_page_set_scrollable_fit4(lv_obj_t * page, lv_fit_t left, lv_fit_t right, lv_f
 174:lvgl/src/lv_widgets/lv_page.h ****                                                lv_fit_t bottom)
 175:lvgl/src/lv_widgets/lv_page.h **** {
 176:lvgl/src/lv_widgets/lv_page.h ****     lv_cont_set_fit4(lv_page_get_scrollable(page), left, right, top, bottom);
 177:lvgl/src/lv_widgets/lv_page.h **** }
 178:lvgl/src/lv_widgets/lv_page.h **** 
 179:lvgl/src/lv_widgets/lv_page.h **** /**
 180:lvgl/src/lv_widgets/lv_page.h ****  * Set the fit policy horizontally and vertically separately.
ARM GAS  D:\Temp\ccqwJTgn.s 			page 139


 181:lvgl/src/lv_widgets/lv_page.h ****  * It tell how to change the page size automatically.
 182:lvgl/src/lv_widgets/lv_page.h ****  * @param page pointer to a page object
 183:lvgl/src/lv_widgets/lv_page.h ****  * @param hot horizontal fit policy from `lv_fit_t`
 184:lvgl/src/lv_widgets/lv_page.h ****  * @param ver vertical fit policy from `lv_fit_t`
 185:lvgl/src/lv_widgets/lv_page.h ****  */
 186:lvgl/src/lv_widgets/lv_page.h **** static inline void lv_page_set_scrollable_fit2(lv_obj_t * page, lv_fit_t hor, lv_fit_t ver)
 4487              		.loc 8 186 20 view .LVU1388
 4488              	.LBB221:
 187:lvgl/src/lv_widgets/lv_page.h **** {
 188:lvgl/src/lv_widgets/lv_page.h ****     lv_cont_set_fit2(lv_page_get_scrollable(page), hor, ver);
 4489              		.loc 8 188 5 view .LVU1389
 4490 0158 2046     		mov	r0, r4
 4491 015a FFF7FEFF 		bl	lv_page_get_scrollable
 4492              	.LVL530:
 4493              	.LBB222:
 4494              	.LBI222:
 4495              		.file 9 "lvgl/src/lv_widgets/lv_cont.h"
   1:lvgl/src/lv_widgets/lv_cont.h **** /**
   2:lvgl/src/lv_widgets/lv_cont.h ****  * @file lv_cont.h
   3:lvgl/src/lv_widgets/lv_cont.h ****  *
   4:lvgl/src/lv_widgets/lv_cont.h ****  */
   5:lvgl/src/lv_widgets/lv_cont.h **** 
   6:lvgl/src/lv_widgets/lv_cont.h **** #ifndef LV_CONT_H
   7:lvgl/src/lv_widgets/lv_cont.h **** #define LV_CONT_H
   8:lvgl/src/lv_widgets/lv_cont.h **** 
   9:lvgl/src/lv_widgets/lv_cont.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/lv_cont.h **** extern "C" {
  11:lvgl/src/lv_widgets/lv_cont.h **** #endif
  12:lvgl/src/lv_widgets/lv_cont.h **** 
  13:lvgl/src/lv_widgets/lv_cont.h **** /*********************
  14:lvgl/src/lv_widgets/lv_cont.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/lv_cont.h ****  *********************/
  16:lvgl/src/lv_widgets/lv_cont.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/lv_cont.h **** 
  18:lvgl/src/lv_widgets/lv_cont.h **** #if LV_USE_CONT != 0
  19:lvgl/src/lv_widgets/lv_cont.h **** 
  20:lvgl/src/lv_widgets/lv_cont.h **** #include "../lv_core/lv_obj.h"
  21:lvgl/src/lv_widgets/lv_cont.h **** 
  22:lvgl/src/lv_widgets/lv_cont.h **** /*********************
  23:lvgl/src/lv_widgets/lv_cont.h ****  *      DEFINES
  24:lvgl/src/lv_widgets/lv_cont.h ****  *********************/
  25:lvgl/src/lv_widgets/lv_cont.h **** 
  26:lvgl/src/lv_widgets/lv_cont.h **** /**********************
  27:lvgl/src/lv_widgets/lv_cont.h ****  *      TYPEDEFS
  28:lvgl/src/lv_widgets/lv_cont.h ****  **********************/
  29:lvgl/src/lv_widgets/lv_cont.h **** 
  30:lvgl/src/lv_widgets/lv_cont.h **** /** Container layout options*/
  31:lvgl/src/lv_widgets/lv_cont.h **** enum {
  32:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_OFF = 0, /**< No layout */
  33:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_CENTER, /**< Center objects */
  34:lvgl/src/lv_widgets/lv_cont.h **** 
  35:lvgl/src/lv_widgets/lv_cont.h ****     /**
  36:lvgl/src/lv_widgets/lv_cont.h ****      * COLUMN:
  37:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object below each other
  38:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_top` space on the top
  39:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects
  40:lvgl/src/lv_widgets/lv_cont.h ****      */
ARM GAS  D:\Temp\ccqwJTgn.s 			page 140


  41:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_COLUMN_LEFT,      /**< Column left align*/
  42:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_COLUMN_MID,       /**< Column middle align*/
  43:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_COLUMN_RIGHT,     /**< Column right align*/
  44:lvgl/src/lv_widgets/lv_cont.h **** 
  45:lvgl/src/lv_widgets/lv_cont.h ****     /**
  46:lvgl/src/lv_widgets/lv_cont.h ****      * ROW:
  47:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object next to each other
  48:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_left` space on the left
  49:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects
  50:lvgl/src/lv_widgets/lv_cont.h ****      * - If the object which applies the layout has `base_dir == LV_BIDI_DIR_RTL`
  51:lvgl/src/lv_widgets/lv_cont.h ****      *   the row will start from the right applying `pad.right` space
  52:lvgl/src/lv_widgets/lv_cont.h ****      */
  53:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_ROW_TOP,          /**< Row top align*/
  54:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_ROW_MID,          /**< Row middle align*/
  55:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_ROW_BOTTOM,       /**< Row bottom align*/
  56:lvgl/src/lv_widgets/lv_cont.h **** 
  57:lvgl/src/lv_widgets/lv_cont.h ****     /**
  58:lvgl/src/lv_widgets/lv_cont.h ****      * PRETTY:
  59:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object next to each other
  60:lvgl/src/lv_widgets/lv_cont.h ****      * - If there is no more space start a new row
  61:lvgl/src/lv_widgets/lv_cont.h ****      * - Respect `pad_left` and `pad_right` when determining the available space in a row
  62:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in the same row
  63:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in rows
  64:lvgl/src/lv_widgets/lv_cont.h ****      * - Divide the remaining horizontal space equally
  65:lvgl/src/lv_widgets/lv_cont.h ****      */
  66:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_PRETTY_TOP,       /**< Row top align*/
  67:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_PRETTY_MID,       /**< Row middle align*/
  68:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_PRETTY_BOTTOM,    /**< Row bottom align*/
  69:lvgl/src/lv_widgets/lv_cont.h **** 
  70:lvgl/src/lv_widgets/lv_cont.h ****     /**
  71:lvgl/src/lv_widgets/lv_cont.h ****      * GRID
  72:lvgl/src/lv_widgets/lv_cont.h ****      * - Place the object next to each other
  73:lvgl/src/lv_widgets/lv_cont.h ****      * - If there is no more space start a new row
  74:lvgl/src/lv_widgets/lv_cont.h ****      * - Respect `pad_left` and `pad_right` when determining the available space in a row
  75:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in the same row
  76:lvgl/src/lv_widgets/lv_cont.h ****      * - Keep `pad_inner` space between the objects in rows
  77:lvgl/src/lv_widgets/lv_cont.h ****      * - Unlike `PRETTY`, `GRID` always keep `pad_inner` space horizontally between objects
  78:lvgl/src/lv_widgets/lv_cont.h ****      *   so it doesn't divide the remaining horizontal space equally
  79:lvgl/src/lv_widgets/lv_cont.h ****      */
  80:lvgl/src/lv_widgets/lv_cont.h ****     LV_LAYOUT_GRID,   /**< Align same-sized object into a grid*/
  81:lvgl/src/lv_widgets/lv_cont.h **** 
  82:lvgl/src/lv_widgets/lv_cont.h ****     _LV_LAYOUT_LAST
  83:lvgl/src/lv_widgets/lv_cont.h **** };
  84:lvgl/src/lv_widgets/lv_cont.h **** typedef uint8_t lv_layout_t;
  85:lvgl/src/lv_widgets/lv_cont.h **** 
  86:lvgl/src/lv_widgets/lv_cont.h **** /**
  87:lvgl/src/lv_widgets/lv_cont.h ****  * How to resize the container around the children.
  88:lvgl/src/lv_widgets/lv_cont.h ****  */
  89:lvgl/src/lv_widgets/lv_cont.h **** enum {
  90:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_NONE,  /**< Do not change the size automatically*/
  91:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_TIGHT, /**< Shrink wrap around the children */
  92:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_PARENT, /**< Align the size to the parent's edge*/
  93:lvgl/src/lv_widgets/lv_cont.h ****     LV_FIT_MAX,  /**< Align the size to the parent's edge first but if there is an object out of it
  94:lvgl/src/lv_widgets/lv_cont.h ****                      then get larger */
  95:lvgl/src/lv_widgets/lv_cont.h ****     _LV_FIT_LAST
  96:lvgl/src/lv_widgets/lv_cont.h **** };
  97:lvgl/src/lv_widgets/lv_cont.h **** typedef uint8_t lv_fit_t;
ARM GAS  D:\Temp\ccqwJTgn.s 			page 141


  98:lvgl/src/lv_widgets/lv_cont.h **** 
  99:lvgl/src/lv_widgets/lv_cont.h **** typedef struct {
 100:lvgl/src/lv_widgets/lv_cont.h ****     /*Inherited from 'base_obj' so no inherited ext. */ /*Ext. of ancestor*/
 101:lvgl/src/lv_widgets/lv_cont.h ****     /*New data for this type */
 102:lvgl/src/lv_widgets/lv_cont.h ****     lv_layout_t layout : 4;     /*A layout from 'lv_layout_t' enum*/
 103:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_left : 2;   /*A fit type from `lv_fit_t` enum */
 104:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_right : 2;  /*A fit type from `lv_fit_t` enum */
 105:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_top : 2;    /*A fit type from `lv_fit_t` enum */
 106:lvgl/src/lv_widgets/lv_cont.h ****     lv_fit_t fit_bottom : 2; /*A fit type from `lv_fit_t` enum */
 107:lvgl/src/lv_widgets/lv_cont.h **** } lv_cont_ext_t;
 108:lvgl/src/lv_widgets/lv_cont.h **** 
 109:lvgl/src/lv_widgets/lv_cont.h **** /*Part of the container*/
 110:lvgl/src/lv_widgets/lv_cont.h **** enum {
 111:lvgl/src/lv_widgets/lv_cont.h ****     LV_CONT_PART_MAIN = LV_OBJ_PART_MAIN,
 112:lvgl/src/lv_widgets/lv_cont.h ****     _LV_CONT_PART_VIRTUAL_LAST = _LV_OBJ_PART_VIRTUAL_LAST,
 113:lvgl/src/lv_widgets/lv_cont.h ****     _LV_CONT_PART_REAL_LAST = _LV_OBJ_PART_REAL_LAST,
 114:lvgl/src/lv_widgets/lv_cont.h **** };
 115:lvgl/src/lv_widgets/lv_cont.h **** 
 116:lvgl/src/lv_widgets/lv_cont.h **** /**********************
 117:lvgl/src/lv_widgets/lv_cont.h ****  * GLOBAL PROTOTYPES
 118:lvgl/src/lv_widgets/lv_cont.h ****  **********************/
 119:lvgl/src/lv_widgets/lv_cont.h **** 
 120:lvgl/src/lv_widgets/lv_cont.h **** /**
 121:lvgl/src/lv_widgets/lv_cont.h ****  * Create a container objects
 122:lvgl/src/lv_widgets/lv_cont.h ****  * @param par pointer to an object, it will be the parent of the new container
 123:lvgl/src/lv_widgets/lv_cont.h ****  * @param copy pointer to a container object, if not NULL then the new object will be copied from i
 124:lvgl/src/lv_widgets/lv_cont.h ****  * @return pointer to the created container
 125:lvgl/src/lv_widgets/lv_cont.h ****  */
 126:lvgl/src/lv_widgets/lv_cont.h **** lv_obj_t * lv_cont_create(lv_obj_t * par, const lv_obj_t * copy);
 127:lvgl/src/lv_widgets/lv_cont.h **** 
 128:lvgl/src/lv_widgets/lv_cont.h **** /*=====================
 129:lvgl/src/lv_widgets/lv_cont.h ****  * Setter functions
 130:lvgl/src/lv_widgets/lv_cont.h ****  *====================*/
 131:lvgl/src/lv_widgets/lv_cont.h **** 
 132:lvgl/src/lv_widgets/lv_cont.h **** /**
 133:lvgl/src/lv_widgets/lv_cont.h ****  * Set a layout on a container
 134:lvgl/src/lv_widgets/lv_cont.h ****  * @param cont pointer to a container object
 135:lvgl/src/lv_widgets/lv_cont.h ****  * @param layout a layout from 'lv_cont_layout_t'
 136:lvgl/src/lv_widgets/lv_cont.h ****  */
 137:lvgl/src/lv_widgets/lv_cont.h **** void lv_cont_set_layout(lv_obj_t * cont, lv_layout_t layout);
 138:lvgl/src/lv_widgets/lv_cont.h **** 
 139:lvgl/src/lv_widgets/lv_cont.h **** /**
 140:lvgl/src/lv_widgets/lv_cont.h ****  * Set the fit policy in all 4 directions separately.
 141:lvgl/src/lv_widgets/lv_cont.h ****  * It tell how to change the container's size automatically.
 142:lvgl/src/lv_widgets/lv_cont.h ****  * @param cont pointer to a container object
 143:lvgl/src/lv_widgets/lv_cont.h ****  * @param left left fit policy from `lv_fit_t`
 144:lvgl/src/lv_widgets/lv_cont.h ****  * @param right right fit policy from `lv_fit_t`
 145:lvgl/src/lv_widgets/lv_cont.h ****  * @param top top fit policy from `lv_fit_t`
 146:lvgl/src/lv_widgets/lv_cont.h ****  * @param bottom bottom fit policy from `lv_fit_t`
 147:lvgl/src/lv_widgets/lv_cont.h ****  */
 148:lvgl/src/lv_widgets/lv_cont.h **** void lv_cont_set_fit4(lv_obj_t * cont, lv_fit_t left, lv_fit_t right, lv_fit_t top, lv_fit_t bottom
 149:lvgl/src/lv_widgets/lv_cont.h **** 
 150:lvgl/src/lv_widgets/lv_cont.h **** /**
 151:lvgl/src/lv_widgets/lv_cont.h ****  * Set the fit policy horizontally and vertically separately.
 152:lvgl/src/lv_widgets/lv_cont.h ****  * It tells how to change the container's size automatically.
 153:lvgl/src/lv_widgets/lv_cont.h ****  * @param cont pointer to a container object
 154:lvgl/src/lv_widgets/lv_cont.h ****  * @param hor horizontal fit policy from `lv_fit_t`
ARM GAS  D:\Temp\ccqwJTgn.s 			page 142


 155:lvgl/src/lv_widgets/lv_cont.h ****  * @param ver vertical fit policy from `lv_fit_t`
 156:lvgl/src/lv_widgets/lv_cont.h ****  */
 157:lvgl/src/lv_widgets/lv_cont.h **** static inline void lv_cont_set_fit2(lv_obj_t * cont, lv_fit_t hor, lv_fit_t ver)
 4496              		.loc 9 157 20 view .LVU1390
 4497              	.LBB223:
 158:lvgl/src/lv_widgets/lv_cont.h **** {
 159:lvgl/src/lv_widgets/lv_cont.h ****     lv_cont_set_fit4(cont, hor, hor, ver, ver);
 4498              		.loc 9 159 5 view .LVU1391
 4499 015e 0025     		movs	r5, #0
 4500              	.LVL531:
 4501              		.loc 9 159 5 is_stmt 0 view .LVU1392
 4502 0160 0095     		str	r5, [sp]
 4503 0162 2B46     		mov	r3, r5
 4504 0164 0222     		movs	r2, #2
 4505 0166 1146     		mov	r1, r2
 4506 0168 FFF7FEFF 		bl	lv_cont_set_fit4
 4507              	.LVL532:
 4508              		.loc 9 159 5 view .LVU1393
 4509              	.LBE223:
 4510              	.LBE222:
 4511              	.LBE221:
 4512              	.LBE220:
 112:lvgl/src/lv_widgets/lv_roller.c ****         lv_roller_set_options(roller, "Option 1\nOption 2\nOption 3\nOption 4\nOption 5", LV_ROLLER
 4513              		.loc 1 112 9 is_stmt 1 view .LVU1394
 4514              	.LBB224:
 4515              	.LBI224:
 123:lvgl/src/lv_widgets/lv_roller.h **** {
 4516              		.loc 6 123 20 view .LVU1395
 4517              	.LBB225:
 125:lvgl/src/lv_widgets/lv_roller.h **** }
 4518              		.loc 6 125 5 view .LVU1396
 4519 016c C821     		movs	r1, #200
 4520 016e 2046     		mov	r0, r4
 4521 0170 FFF7FEFF 		bl	lv_page_set_anim_time
 4522              	.LVL533:
 125:lvgl/src/lv_widgets/lv_roller.h **** }
 4523              		.loc 6 125 5 is_stmt 0 view .LVU1397
 4524              	.LBE225:
 4525              	.LBE224:
 113:lvgl/src/lv_widgets/lv_roller.c **** 
 4526              		.loc 1 113 9 is_stmt 1 view .LVU1398
 4527 0174 2A46     		mov	r2, r5
 4528 0176 1749     		ldr	r1, .L257+32
 4529 0178 2046     		mov	r0, r4
 4530 017a FFF7FEFF 		bl	lv_roller_set_options
 4531              	.LVL534:
 115:lvgl/src/lv_widgets/lv_roller.c **** 
 4532              		.loc 1 115 9 view .LVU1399
 4533 017e 1149     		ldr	r1, .L257+16
 4534 0180 3046     		mov	r0, r6
 4535 0182 FFF7FEFF 		bl	lv_obj_set_signal_cb
 4536              	.LVL535:
 117:lvgl/src/lv_widgets/lv_roller.c ****         lv_theme_apply(roller, LV_THEME_ROLLER);
 4537              		.loc 1 117 9 view .LVU1400
 4538 0186 4021     		movs	r1, #64
 4539 0188 2046     		mov	r0, r4
 4540 018a FFF7FEFF 		bl	lv_obj_clean_style_list
ARM GAS  D:\Temp\ccqwJTgn.s 			page 143


 4541              	.LVL536:
 118:lvgl/src/lv_widgets/lv_roller.c ****         refr_height(roller);
 4542              		.loc 1 118 9 view .LVU1401
 4543 018e 1C21     		movs	r1, #28
 4544 0190 2046     		mov	r0, r4
 4545 0192 FFF7FEFF 		bl	lv_theme_apply
 4546              	.LVL537:
 119:lvgl/src/lv_widgets/lv_roller.c **** 
 4547              		.loc 1 119 9 view .LVU1402
 4548 0196 2046     		mov	r0, r4
 4549 0198 FFF7FEFF 		bl	refr_height
 4550              	.LVL538:
 121:lvgl/src/lv_widgets/lv_roller.c ****     }
 4551              		.loc 1 121 9 view .LVU1403
 4552 019c 0321     		movs	r1, #3
 4553 019e 2046     		mov	r0, r4
 4554 01a0 FFF7FEFF 		bl	lv_roller_set_visible_row_count
 4555              	.LVL539:
 4556              	.LBE219:
 4557 01a4 A0E7     		b	.L238
 4558              	.LVL540:
 4559              	.L256:
 4560              	.LBB226:
 107:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_design_cb(label, lv_roller_label_design);
 4561              		.loc 1 107 43 discriminator 1 view .LVU1404
 107:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_design_cb(label, lv_roller_label_design);
 4562              		.loc 1 107 67 is_stmt 0 discriminator 1 view .LVU1405
 4563 01a6 2846     		mov	r0, r5
 4564 01a8 FFF7FEFF 		bl	lv_obj_get_design_cb
 4565              	.LVL541:
 107:lvgl/src/lv_widgets/lv_roller.c ****         lv_obj_set_design_cb(label, lv_roller_label_design);
 4566              		.loc 1 107 65 discriminator 1 view .LVU1406
 4567 01ac 074B     		ldr	r3, .L257+24
 4568 01ae 1860     		str	r0, [r3]
 4569 01b0 C7E7     		b	.L248
 4570              	.L258:
 4571 01b2 00BF     		.align	2
 4572              	.L257:
 4573 01b4 00000000 		.word	.LANCHOR1
 4574 01b8 00000000 		.word	.LANCHOR2
 4575 01bc 00000000 		.word	lv_roller_signal
 4576 01c0 00000000 		.word	lv_roller_design
 4577 01c4 00000000 		.word	lv_roller_scrl_signal
 4578 01c8 00000000 		.word	.LC2
 4579 01cc 00000000 		.word	.LANCHOR0
 4580 01d0 00000000 		.word	lv_roller_label_design
 4581 01d4 10000000 		.word	.LC3
 4582              	.LBE226:
 4583              		.cfi_endproc
 4584              	.LFE475:
 4586              		.section	.text.lv_roller_set_align,"ax",%progbits
 4587              		.align	1
 4588              		.global	lv_roller_set_align
 4589              		.syntax unified
 4590              		.thumb
 4591              		.thumb_func
 4592              		.fpu fpv4-sp-d16
ARM GAS  D:\Temp\ccqwJTgn.s 			page 144


 4594              	lv_roller_set_align:
 4595              	.LVL542:
 4596              	.LFB477:
 209:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 4597              		.loc 1 209 1 is_stmt 1 view -0
 4598              		.cfi_startproc
 4599              		@ args = 0, pretend = 0, frame = 0
 4600              		@ frame_needed = 0, uses_anonymous_args = 0
 209:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 4601              		.loc 1 209 1 is_stmt 0 view .LVU1408
 4602 0000 38B5     		push	{r3, r4, r5, lr}
 4603              	.LCFI46:
 4604              		.cfi_def_cfa_offset 16
 4605              		.cfi_offset 3, -16
 4606              		.cfi_offset 4, -12
 4607              		.cfi_offset 5, -8
 4608              		.cfi_offset 14, -4
 4609 0002 0446     		mov	r4, r0
 4610 0004 0D46     		mov	r5, r1
 210:lvgl/src/lv_widgets/lv_roller.c **** 
 4611              		.loc 1 210 5 is_stmt 1 view .LVU1409
 210:lvgl/src/lv_widgets/lv_roller.c **** 
 4612              		.loc 1 210 5 view .LVU1410
 4613 0006 FFF7FEFF 		bl	lv_debug_check_null
 4614              	.LVL543:
 210:lvgl/src/lv_widgets/lv_roller.c **** 
 4615              		.loc 1 210 5 is_stmt 0 view .LVU1411
 4616 000a 28B9     		cbnz	r0, .L260
 210:lvgl/src/lv_widgets/lv_roller.c **** 
 4617              		.loc 1 210 5 is_stmt 1 discriminator 1 view .LVU1412
 210:lvgl/src/lv_widgets/lv_roller.c **** 
 4618              		.loc 1 210 5 discriminator 1 view .LVU1413
 4619 000c 2246     		mov	r2, r4
 4620 000e 0023     		movs	r3, #0
 4621 0010 0748     		ldr	r0, .L264
 4622 0012 FFF7FEFF 		bl	lv_debug_log_error
 4623              	.LVL544:
 4624              	.L261:
 210:lvgl/src/lv_widgets/lv_roller.c **** 
 4625              		.loc 1 210 5 discriminator 1 view .LVU1414
 210:lvgl/src/lv_widgets/lv_roller.c **** 
 4626              		.loc 1 210 5 discriminator 1 view .LVU1415
 4627 0016 FEE7     		b	.L261
 4628              	.L260:
 210:lvgl/src/lv_widgets/lv_roller.c **** 
 4629              		.loc 1 210 40 discriminator 2 view .LVU1416
 212:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return; /*Probably the roller is being deleted if the label is NULL.*/
 4630              		.loc 1 212 5 discriminator 2 view .LVU1417
 212:lvgl/src/lv_widgets/lv_roller.c ****     if(label == NULL) return; /*Probably the roller is being deleted if the label is NULL.*/
 4631              		.loc 1 212 24 is_stmt 0 discriminator 2 view .LVU1418
 4632 0018 2046     		mov	r0, r4
 4633 001a FFF7FEFF 		bl	get_label
 4634              	.LVL545:
 213:lvgl/src/lv_widgets/lv_roller.c **** 
 4635              		.loc 1 213 5 is_stmt 1 discriminator 2 view .LVU1419
 213:lvgl/src/lv_widgets/lv_roller.c **** 
 4636              		.loc 1 213 7 is_stmt 0 discriminator 2 view .LVU1420
ARM GAS  D:\Temp\ccqwJTgn.s 			page 145


 4637 001e 28B1     		cbz	r0, .L259
 215:lvgl/src/lv_widgets/lv_roller.c ****     refr_width(roller); /*To set the correct label position*/
 4638              		.loc 1 215 5 is_stmt 1 view .LVU1421
 4639 0020 2946     		mov	r1, r5
 4640 0022 FFF7FEFF 		bl	lv_label_set_align
 4641              	.LVL546:
 216:lvgl/src/lv_widgets/lv_roller.c **** }
 4642              		.loc 1 216 5 view .LVU1422
 4643 0026 2046     		mov	r0, r4
 4644 0028 FFF7FEFF 		bl	refr_width
 4645              	.LVL547:
 4646              	.L259:
 217:lvgl/src/lv_widgets/lv_roller.c **** 
 4647              		.loc 1 217 1 is_stmt 0 view .LVU1423
 4648 002c 38BD     		pop	{r3, r4, r5, pc}
 4649              	.LVL548:
 4650              	.L265:
 217:lvgl/src/lv_widgets/lv_roller.c **** 
 4651              		.loc 1 217 1 view .LVU1424
 4652 002e 00BF     		.align	2
 4653              	.L264:
 4654 0030 00000000 		.word	.LC0
 4655              		.cfi_endproc
 4656              	.LFE477:
 4658              		.section	.text.lv_roller_set_auto_fit,"ax",%progbits
 4659              		.align	1
 4660              		.global	lv_roller_set_auto_fit
 4661              		.syntax unified
 4662              		.thumb
 4663              		.thumb_func
 4664              		.fpu fpv4-sp-d16
 4666              	lv_roller_set_auto_fit:
 4667              	.LVL549:
 4668              	.LFB480:
 283:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 4669              		.loc 1 283 1 is_stmt 1 view -0
 4670              		.cfi_startproc
 4671              		@ args = 0, pretend = 0, frame = 0
 4672              		@ frame_needed = 0, uses_anonymous_args = 0
 283:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 4673              		.loc 1 283 1 is_stmt 0 view .LVU1426
 4674 0000 38B5     		push	{r3, r4, r5, lr}
 4675              	.LCFI47:
 4676              		.cfi_def_cfa_offset 16
 4677              		.cfi_offset 3, -16
 4678              		.cfi_offset 4, -12
 4679              		.cfi_offset 5, -8
 4680              		.cfi_offset 14, -4
 4681 0002 0446     		mov	r4, r0
 4682 0004 0D46     		mov	r5, r1
 284:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 4683              		.loc 1 284 5 is_stmt 1 view .LVU1427
 284:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 4684              		.loc 1 284 5 view .LVU1428
 4685 0006 FFF7FEFF 		bl	lv_debug_check_null
 4686              	.LVL550:
 284:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
ARM GAS  D:\Temp\ccqwJTgn.s 			page 146


 4687              		.loc 1 284 5 is_stmt 0 view .LVU1429
 4688 000a 28B9     		cbnz	r0, .L267
 284:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 4689              		.loc 1 284 5 is_stmt 1 discriminator 1 view .LVU1430
 284:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 4690              		.loc 1 284 5 discriminator 1 view .LVU1431
 4691 000c 2246     		mov	r2, r4
 4692 000e 0023     		movs	r3, #0
 4693 0010 0848     		ldr	r0, .L270
 4694 0012 FFF7FEFF 		bl	lv_debug_log_error
 4695              	.LVL551:
 4696              	.L268:
 284:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 4697              		.loc 1 284 5 discriminator 1 view .LVU1432
 284:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 4698              		.loc 1 284 5 discriminator 1 view .LVU1433
 4699 0016 FEE7     		b	.L268
 4700              	.L267:
 284:lvgl/src/lv_widgets/lv_roller.c ****     lv_roller_ext_t * ext = lv_obj_get_ext_attr(roller);
 4701              		.loc 1 284 40 discriminator 2 view .LVU1434
 285:lvgl/src/lv_widgets/lv_roller.c ****     ext->auto_fit = auto_fit;
 4702              		.loc 1 285 5 discriminator 2 view .LVU1435
 285:lvgl/src/lv_widgets/lv_roller.c ****     ext->auto_fit = auto_fit;
 4703              		.loc 1 285 29 is_stmt 0 discriminator 2 view .LVU1436
 4704 0018 2046     		mov	r0, r4
 4705 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
 4706              	.LVL552:
 286:lvgl/src/lv_widgets/lv_roller.c ****     refr_width(roller);
 4707              		.loc 1 286 5 is_stmt 1 discriminator 2 view .LVU1437
 286:lvgl/src/lv_widgets/lv_roller.c ****     refr_width(roller);
 4708              		.loc 1 286 19 is_stmt 0 discriminator 2 view .LVU1438
 4709 001e 90F84E30 		ldrb	r3, [r0, #78]	@ zero_extendqisi2
 4710 0022 65F34103 		bfi	r3, r5, #1, #1
 4711 0026 80F84E30 		strb	r3, [r0, #78]
 287:lvgl/src/lv_widgets/lv_roller.c **** }
 4712              		.loc 1 287 5 is_stmt 1 discriminator 2 view .LVU1439
 4713 002a 2046     		mov	r0, r4
 4714              	.LVL553:
 287:lvgl/src/lv_widgets/lv_roller.c **** }
 4715              		.loc 1 287 5 is_stmt 0 discriminator 2 view .LVU1440
 4716 002c FFF7FEFF 		bl	refr_width
 4717              	.LVL554:
 288:lvgl/src/lv_widgets/lv_roller.c **** 
 4718              		.loc 1 288 1 discriminator 2 view .LVU1441
 4719 0030 38BD     		pop	{r3, r4, r5, pc}
 4720              	.LVL555:
 4721              	.L271:
 288:lvgl/src/lv_widgets/lv_roller.c **** 
 4722              		.loc 1 288 1 discriminator 2 view .LVU1442
 4723 0032 00BF     		.align	2
 4724              	.L270:
 4725 0034 00000000 		.word	.LC0
 4726              		.cfi_endproc
 4727              	.LFE480:
 4729              		.section	.text.lv_roller_get_options,"ax",%progbits
 4730              		.align	1
 4731              		.global	lv_roller_get_options
ARM GAS  D:\Temp\ccqwJTgn.s 			page 147


 4732              		.syntax unified
 4733              		.thumb
 4734              		.thumb_func
 4735              		.fpu fpv4-sp-d16
 4737              	lv_roller_get_options:
 4738              	.LVL556:
 4739              	.LFB486:
 394:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 4740              		.loc 1 394 1 is_stmt 1 view -0
 4741              		.cfi_startproc
 4742              		@ args = 0, pretend = 0, frame = 0
 4743              		@ frame_needed = 0, uses_anonymous_args = 0
 394:lvgl/src/lv_widgets/lv_roller.c ****     LV_ASSERT_OBJ(roller, LV_OBJX_NAME);
 4744              		.loc 1 394 1 is_stmt 0 view .LVU1444
 4745 0000 10B5     		push	{r4, lr}
 4746              	.LCFI48:
 4747              		.cfi_def_cfa_offset 8
 4748              		.cfi_offset 4, -8
 4749              		.cfi_offset 14, -4
 4750 0002 0446     		mov	r4, r0
 395:lvgl/src/lv_widgets/lv_roller.c **** 
 4751              		.loc 1 395 5 is_stmt 1 view .LVU1445
 395:lvgl/src/lv_widgets/lv_roller.c **** 
 4752              		.loc 1 395 5 view .LVU1446
 4753 0004 FFF7FEFF 		bl	lv_debug_check_null
 4754              	.LVL557:
 395:lvgl/src/lv_widgets/lv_roller.c **** 
 4755              		.loc 1 395 5 is_stmt 0 view .LVU1447
 4756 0008 28B9     		cbnz	r0, .L273
 395:lvgl/src/lv_widgets/lv_roller.c **** 
 4757              		.loc 1 395 5 is_stmt 1 discriminator 1 view .LVU1448
 395:lvgl/src/lv_widgets/lv_roller.c **** 
 4758              		.loc 1 395 5 discriminator 1 view .LVU1449
 4759 000a 2246     		mov	r2, r4
 4760 000c 0023     		movs	r3, #0
 4761 000e 0548     		ldr	r0, .L276
 4762 0010 FFF7FEFF 		bl	lv_debug_log_error
 4763              	.LVL558:
 4764              	.L274:
 395:lvgl/src/lv_widgets/lv_roller.c **** 
 4765              		.loc 1 395 5 discriminator 1 view .LVU1450
 395:lvgl/src/lv_widgets/lv_roller.c **** 
 4766              		.loc 1 395 5 discriminator 1 view .LVU1451
 4767 0014 FEE7     		b	.L274
 4768              	.L273:
 395:lvgl/src/lv_widgets/lv_roller.c **** 
 4769              		.loc 1 395 40 discriminator 2 view .LVU1452
 397:lvgl/src/lv_widgets/lv_roller.c **** }
 4770              		.loc 1 397 5 discriminator 2 view .LVU1453
 397:lvgl/src/lv_widgets/lv_roller.c **** }
 4771              		.loc 1 397 30 is_stmt 0 discriminator 2 view .LVU1454
 4772 0016 2046     		mov	r0, r4
 4773 0018 FFF7FEFF 		bl	get_label
 4774              	.LVL559:
 397:lvgl/src/lv_widgets/lv_roller.c **** }
 4775              		.loc 1 397 12 discriminator 2 view .LVU1455
 4776 001c FFF7FEFF 		bl	lv_label_get_text
ARM GAS  D:\Temp\ccqwJTgn.s 			page 148


 4777              	.LVL560:
 398:lvgl/src/lv_widgets/lv_roller.c **** 
 4778              		.loc 1 398 1 discriminator 2 view .LVU1456
 4779 0020 10BD     		pop	{r4, pc}
 4780              	.LVL561:
 4781              	.L277:
 398:lvgl/src/lv_widgets/lv_roller.c **** 
 4782              		.loc 1 398 1 discriminator 2 view .LVU1457
 4783 0022 00BF     		.align	2
 4784              	.L276:
 4785 0024 00000000 		.word	.LC0
 4786              		.cfi_endproc
 4787              	.LFE486:
 4789              		.section	.bss.ancestor_label_design,"aw",%nobits
 4790              		.align	2
 4791              		.set	.LANCHOR0,. + 0
 4794              	ancestor_label_design:
 4795 0000 00000000 		.space	4
 4796              		.section	.bss.ancestor_scrl_signal,"aw",%nobits
 4797              		.align	2
 4798              		.set	.LANCHOR1,. + 0
 4801              	ancestor_scrl_signal:
 4802 0000 00000000 		.space	4
 4803              		.section	.bss.ancestor_signal,"aw",%nobits
 4804              		.align	2
 4805              		.set	.LANCHOR2,. + 0
 4808              	ancestor_signal:
 4809 0000 00000000 		.space	4
 4810              		.section	.rodata.lv_roller_create.str1.4,"aMS",%progbits,1
 4811              		.align	2
 4812              	.LC2:
 4813 0000 4F757420 		.ascii	"Out of memory\000"
 4813      6F66206D 
 4813      656D6F72 
 4813      7900
 4814 000e 0000     		.space	2
 4815              	.LC3:
 4816 0010 4F707469 		.ascii	"Option 1\012Option 2\012Option 3\012Option 4\012Opt"
 4816      6F6E2031 
 4816      0A4F7074 
 4816      696F6E20 
 4816      320A4F70 
 4817 0037 696F6E20 		.ascii	"ion 5\000"
 4817      3500
 4818              		.section	.rodata.lv_roller_get_style.str1.4,"aMS",%progbits,1
 4819              		.align	2
 4820              	.LC0:
 4821 0000 4E554C4C 		.ascii	"NULL pointer\000"
 4821      20706F69 
 4821      6E746572 
 4821      00
 4822              		.section	.rodata.lv_roller_scrl_signal.str1.4,"aMS",%progbits,1
 4823              		.align	2
 4824              	.LC1:
 4825 0000 6C765F72 		.ascii	"lv_roller\000"
 4825      6F6C6C65 
 4825      7200
ARM GAS  D:\Temp\ccqwJTgn.s 			page 149


 4826              		.text
 4827              	.Letext0:
 4828              		.file 10 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4829              		.file 11 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4830              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 4831              		.file 13 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 4832              		.file 14 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 4833              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 4834              		.file 16 "lvgl/lv_conf.h"
 4835              		.file 17 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4836              		.file 18 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4837              		.file 19 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 4838              		.file 20 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_types.h"
 4839              		.file 21 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h"
 4840              		.file 22 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_blend.h"
 4841              		.file 23 "lvgl/src/lv_widgets/../lv_core/lv_style.h"
 4842              		.file 24 "lvgl/src/lv_widgets/../lv_core/../lv_hal/../lv_misc/lv_ll.h"
 4843              		.file 25 "lvgl/src/lv_widgets/../lv_core/../lv_hal/../lv_misc/lv_task.h"
 4844              		.file 26 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_disp.h"
 4845              		.file 27 "lvgl/src/lv_widgets/../lv_core/lv_obj.h"
 4846              		.file 28 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_indev.h"
 4847              		.file 29 "lvgl/src/lv_widgets/../lv_core/../lv_core/lv_group.h"
 4848              		.file 30 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_rect.h"
 4849              		.file 31 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_bidi.h"
 4850              		.file 32 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_txt.h"
 4851              		.file 33 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_label.h"
 4852              		.file 34 "lvgl/src/lv_widgets/lv_label.h"
 4853              		.file 35 "lvgl/src/lv_widgets/../lv_themes/lv_theme.h"
 4854              		.file 36 "lvgl/src/lv_widgets/../lv_core/lv_indev.h"
 4855              		.file 37 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_debug.h"
 4856              		.file 38 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
ARM GAS  D:\Temp\ccqwJTgn.s 			page 150


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_roller.c
  D:\Temp\ccqwJTgn.s:18     .text.lv_roller_get_style:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:25     .text.lv_roller_get_style:0000000000000000 lv_roller_get_style
  D:\Temp\ccqwJTgn.s:100    .text.lv_roller_get_style:0000000000000034 $d
  D:\Temp\ccqwJTgn.s:105    .text.lv_roller_label_design:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:111    .text.lv_roller_label_design:0000000000000000 lv_roller_label_design
  D:\Temp\ccqwJTgn.s:367    .text.lv_roller_label_design:0000000000000118 $d
  D:\Temp\ccqwJTgn.s:372    .text.draw_bg:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:378    .text.draw_bg:0000000000000000 draw_bg
  D:\Temp\ccqwJTgn.s:688    .text.get_label:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:694    .text.get_label:0000000000000000 get_label
  D:\Temp\ccqwJTgn.s:730    .text.inf_normalize:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:736    .text.inf_normalize:0000000000000000 inf_normalize
  D:\Temp\ccqwJTgn.s:917    .text.inf_normalize:00000000000000b8 $d
  D:\Temp\ccqwJTgn.s:922    .text.scroll_anim_ready_cb:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:928    .text.scroll_anim_ready_cb:0000000000000000 scroll_anim_ready_cb
  D:\Temp\ccqwJTgn.s:953    .text.refr_position:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:959    .text.refr_position:0000000000000000 refr_position
  D:\Temp\ccqwJTgn.s:1240   .text.refr_position:00000000000000c0 $d
  D:\Temp\ccqwJTgn.s:1246   .text.refr_height:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:1252   .text.refr_height:0000000000000000 refr_height
  D:\Temp\ccqwJTgn.s:1322   .text.refr_height:0000000000000044 $d
  D:\Temp\ccqwJTgn.s:1327   .text.lv_roller_set_selected:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:1334   .text.lv_roller_set_selected:0000000000000000 lv_roller_set_selected
  D:\Temp\ccqwJTgn.s:1455   .text.lv_roller_set_selected:0000000000000074 $d
  D:\Temp\ccqwJTgn.s:1461   .text.release_handler:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:1467   .text.release_handler:0000000000000000 release_handler
  D:\Temp\ccqwJTgn.s:1745   .text.release_handler:00000000000000f8 $d
  D:\Temp\ccqwJTgn.s:1750   .text.lv_roller_set_visible_row_count:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:1757   .text.lv_roller_set_visible_row_count:0000000000000000 lv_roller_set_visible_row_count
  D:\Temp\ccqwJTgn.s:1864   .text.lv_roller_set_visible_row_count:0000000000000054 $d
  D:\Temp\ccqwJTgn.s:1869   .text.lv_roller_get_selected:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:1876   .text.lv_roller_get_selected:0000000000000000 lv_roller_get_selected
  D:\Temp\ccqwJTgn.s:1958   .text.lv_roller_get_selected:0000000000000050 $d
  D:\Temp\ccqwJTgn.s:1964   .text.lv_roller_get_selected_str:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:1971   .text.lv_roller_get_selected_str:0000000000000000 lv_roller_get_selected_str
  D:\Temp\ccqwJTgn.s:2127   .text.lv_roller_get_selected_str:000000000000007c $d
  D:\Temp\ccqwJTgn.s:2132   .text.lv_roller_get_option_cnt:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:2139   .text.lv_roller_get_option_cnt:0000000000000000 lv_roller_get_option_cnt
  D:\Temp\ccqwJTgn.s:2207   .text.lv_roller_get_option_cnt:0000000000000044 $d
  D:\Temp\ccqwJTgn.s:2213   .text.lv_roller_get_align:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:2220   .text.lv_roller_get_align:0000000000000000 lv_roller_get_align
  D:\Temp\ccqwJTgn.s:2268   .text.lv_roller_get_align:0000000000000024 $d
  D:\Temp\ccqwJTgn.s:2273   .text.lv_roller_design:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:2279   .text.lv_roller_design:0000000000000000 lv_roller_design
  D:\Temp\ccqwJTgn.s:2813   .text.lv_roller_get_auto_fit:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:2820   .text.lv_roller_get_auto_fit:0000000000000000 lv_roller_get_auto_fit
  D:\Temp\ccqwJTgn.s:2870   .text.lv_roller_get_auto_fit:0000000000000028 $d
  D:\Temp\ccqwJTgn.s:2875   .text.refr_width:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:2881   .text.refr_width:0000000000000000 refr_width
  D:\Temp\ccqwJTgn.s:3136   .text.lv_roller_scrl_signal:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:3142   .text.lv_roller_scrl_signal:0000000000000000 lv_roller_scrl_signal
  D:\Temp\ccqwJTgn.s:3467   .text.lv_roller_scrl_signal:000000000000012c $d
  D:\Temp\ccqwJTgn.s:3474   .text.lv_roller_signal:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:3480   .text.lv_roller_signal:0000000000000000 lv_roller_signal
  D:\Temp\ccqwJTgn.s:3922   .text.lv_roller_signal:00000000000001bc $d
ARM GAS  D:\Temp\ccqwJTgn.s 			page 151


  D:\Temp\ccqwJTgn.s:3931   .text.lv_roller_set_options:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:3938   .text.lv_roller_set_options:0000000000000000 lv_roller_set_options
  D:\Temp\ccqwJTgn.s:4178   .text.lv_roller_set_options:0000000000000110 $d
  D:\Temp\ccqwJTgn.s:4184   .text.lv_roller_create:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:4191   .text.lv_roller_create:0000000000000000 lv_roller_create
  D:\Temp\ccqwJTgn.s:4573   .text.lv_roller_create:00000000000001b4 $d
  D:\Temp\ccqwJTgn.s:4587   .text.lv_roller_set_align:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:4594   .text.lv_roller_set_align:0000000000000000 lv_roller_set_align
  D:\Temp\ccqwJTgn.s:4654   .text.lv_roller_set_align:0000000000000030 $d
  D:\Temp\ccqwJTgn.s:4659   .text.lv_roller_set_auto_fit:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:4666   .text.lv_roller_set_auto_fit:0000000000000000 lv_roller_set_auto_fit
  D:\Temp\ccqwJTgn.s:4725   .text.lv_roller_set_auto_fit:0000000000000034 $d
  D:\Temp\ccqwJTgn.s:4730   .text.lv_roller_get_options:0000000000000000 $t
  D:\Temp\ccqwJTgn.s:4737   .text.lv_roller_get_options:0000000000000000 lv_roller_get_options
  D:\Temp\ccqwJTgn.s:4785   .text.lv_roller_get_options:0000000000000024 $d
  D:\Temp\ccqwJTgn.s:4790   .bss.ancestor_label_design:0000000000000000 $d
  D:\Temp\ccqwJTgn.s:4794   .bss.ancestor_label_design:0000000000000000 ancestor_label_design
  D:\Temp\ccqwJTgn.s:4797   .bss.ancestor_scrl_signal:0000000000000000 $d
  D:\Temp\ccqwJTgn.s:4801   .bss.ancestor_scrl_signal:0000000000000000 ancestor_scrl_signal
  D:\Temp\ccqwJTgn.s:4804   .bss.ancestor_signal:0000000000000000 $d
  D:\Temp\ccqwJTgn.s:4808   .bss.ancestor_signal:0000000000000000 ancestor_signal
  D:\Temp\ccqwJTgn.s:4811   .rodata.lv_roller_create.str1.4:0000000000000000 $d
  D:\Temp\ccqwJTgn.s:4819   .rodata.lv_roller_get_style.str1.4:0000000000000000 $d
  D:\Temp\ccqwJTgn.s:4823   .rodata.lv_roller_scrl_signal.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
lv_debug_check_null
lv_debug_log_error
lv_obj_get_ext_attr
lv_obj_get_parent
_lv_obj_get_style_ptr
_lv_obj_get_style_int
lv_obj_get_height
lv_obj_get_coords
lv_obj_get_inner_coords
_lv_area_intersect
lv_draw_rect_dsc_init
lv_obj_init_draw_rect_dsc
lv_draw_rect
lv_page_get_scrollable
lv_obj_get_child
lv_obj_set_y
lv_page_get_anim_time
lv_anim_del
lv_anim_init
lv_obj_get_y
lv_anim_start
lv_obj_set_height
lv_indev_get_act
lv_indev_is_dragging
lv_indev_get_type
lv_indev_get_point
lv_label_get_letter_on
lv_label_get_text
lv_obj_get_group
lv_group_get_editing
lv_group_set_editing
ARM GAS  D:\Temp\ccqwJTgn.s 			page 152


lv_event_send
_lv_txt_encoded_next
strlen
lv_label_get_align
lv_draw_label_dsc_init
lv_obj_init_draw_label_dsc
lv_obj_get_width
_lv_txt_get_size
lv_draw_label
lv_obj_align
lv_obj_set_width
lv_obj_handle_get_type_signal
lv_obj_clean_style_list
lv_signal_send
lv_label_set_text
_lv_mem_buf_get
strcpy
_lv_mem_buf_release
lv_page_create
lv_obj_allocate_ext_attr
lv_style_list_init
lv_obj_set_signal_cb
lv_obj_set_design_cb
lv_label_create
lv_style_list_copy
lv_obj_refresh_style
lv_obj_get_signal_cb
lv_obj_del
lv_label_set_align
lv_obj_set_drag
lv_cont_set_fit4
lv_page_set_anim_time
lv_theme_apply
lv_obj_get_design_cb
