ARM GAS  D:\Temp\ccNxtRwL.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_imgbtn.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.suggest_state,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	suggest_state:
  26              	.LVL0:
  27              	.LFB480:
  28              		.file 1 "lvgl/src/lv_widgets/lv_imgbtn.c"
   1:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
   2:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @file lv_imgbtn.c
   3:lvgl/src/lv_widgets/lv_imgbtn.c ****  *
   4:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
   5:lvgl/src/lv_widgets/lv_imgbtn.c **** 
   6:lvgl/src/lv_widgets/lv_imgbtn.c **** /*********************
   7:lvgl/src/lv_widgets/lv_imgbtn.c ****  *      INCLUDES
   8:lvgl/src/lv_widgets/lv_imgbtn.c ****  *********************/
   9:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  10:lvgl/src/lv_widgets/lv_imgbtn.c **** #include "../lv_misc/lv_debug.h"
  11:lvgl/src/lv_widgets/lv_imgbtn.c **** #include "../lv_themes/lv_theme.h"
  12:lvgl/src/lv_widgets/lv_imgbtn.c **** #include "lv_imgbtn.h"
  13:lvgl/src/lv_widgets/lv_imgbtn.c **** #include "lv_label.h"
  14:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  15:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_USE_IMGBTN != 0
  16:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  17:lvgl/src/lv_widgets/lv_imgbtn.c **** /*********************
  18:lvgl/src/lv_widgets/lv_imgbtn.c ****  *      DEFINES
  19:lvgl/src/lv_widgets/lv_imgbtn.c ****  *********************/
  20:lvgl/src/lv_widgets/lv_imgbtn.c **** #define LV_OBJX_NAME "lv_imgbtn"
  21:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  22:lvgl/src/lv_widgets/lv_imgbtn.c **** /**********************
  23:lvgl/src/lv_widgets/lv_imgbtn.c ****  *      TYPEDEFS
  24:lvgl/src/lv_widgets/lv_imgbtn.c ****  **********************/
  25:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  26:lvgl/src/lv_widgets/lv_imgbtn.c **** /**********************
  27:lvgl/src/lv_widgets/lv_imgbtn.c ****  *  STATIC PROTOTYPES
  28:lvgl/src/lv_widgets/lv_imgbtn.c ****  **********************/
  29:lvgl/src/lv_widgets/lv_imgbtn.c **** static lv_design_res_t lv_imgbtn_design(lv_obj_t * imgbtn, const lv_area_t * clip_area, lv_design_m
  30:lvgl/src/lv_widgets/lv_imgbtn.c **** static lv_res_t lv_imgbtn_signal(lv_obj_t * imgbtn, lv_signal_t sign, void * param);
ARM GAS  D:\Temp\ccNxtRwL.s 			page 2


  31:lvgl/src/lv_widgets/lv_imgbtn.c **** static void refr_img(lv_obj_t * imgbtn);
  32:lvgl/src/lv_widgets/lv_imgbtn.c **** static lv_btn_state_t suggest_state(lv_obj_t * imgbtn, lv_btn_state_t state);
  33:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  34:lvgl/src/lv_widgets/lv_imgbtn.c **** /**********************
  35:lvgl/src/lv_widgets/lv_imgbtn.c ****  *  STATIC VARIABLES
  36:lvgl/src/lv_widgets/lv_imgbtn.c ****  **********************/
  37:lvgl/src/lv_widgets/lv_imgbtn.c **** static lv_signal_cb_t ancestor_signal;
  38:lvgl/src/lv_widgets/lv_imgbtn.c **** static lv_design_cb_t ancestor_design;
  39:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  40:lvgl/src/lv_widgets/lv_imgbtn.c **** /**********************
  41:lvgl/src/lv_widgets/lv_imgbtn.c ****  *      MACROS
  42:lvgl/src/lv_widgets/lv_imgbtn.c ****  **********************/
  43:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  44:lvgl/src/lv_widgets/lv_imgbtn.c **** /**********************
  45:lvgl/src/lv_widgets/lv_imgbtn.c ****  *   GLOBAL FUNCTIONS
  46:lvgl/src/lv_widgets/lv_imgbtn.c ****  **********************/
  47:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  48:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
  49:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Create a image button object
  50:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param par pointer to an object, it will be the parent of the new image button
  51:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param copy pointer to a image button object, if not NULL then the new object will be copied fro
  52:lvgl/src/lv_widgets/lv_imgbtn.c ****  * it
  53:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @return pointer to the created image button
  54:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
  55:lvgl/src/lv_widgets/lv_imgbtn.c **** lv_obj_t * lv_imgbtn_create(lv_obj_t * par, const lv_obj_t * copy)
  56:lvgl/src/lv_widgets/lv_imgbtn.c **** {
  57:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_LOG_TRACE("image button create started");
  58:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  59:lvgl/src/lv_widgets/lv_imgbtn.c ****     /*Create the ancestor of image button*/
  60:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_obj_t * imgbtn = lv_btn_create(par, copy);
  61:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_MEM(imgbtn);
  62:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(imgbtn == NULL) return NULL;
  63:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  64:lvgl/src/lv_widgets/lv_imgbtn.c ****     /*Allocate the image button type specific extended data*/
  65:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_imgbtn_ext_t * ext = lv_obj_allocate_ext_attr(imgbtn, sizeof(lv_imgbtn_ext_t));
  66:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_MEM(ext);
  67:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ext == NULL) {
  68:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_obj_del(imgbtn);
  69:lvgl/src/lv_widgets/lv_imgbtn.c ****         return NULL;
  70:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
  71:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  72:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(imgbtn);
  73:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(imgbtn);
  74:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  75:lvgl/src/lv_widgets/lv_imgbtn.c ****     /*Initialize the allocated 'ext' */
  76:lvgl/src/lv_widgets/lv_imgbtn.c ****     _lv_memset_00((void *)ext->img_src_mid, sizeof(ext->img_src_mid));
  77:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
  78:lvgl/src/lv_widgets/lv_imgbtn.c ****     _lv_memset_00(ext->img_src_left, sizeof(ext->img_src_left));
  79:lvgl/src/lv_widgets/lv_imgbtn.c ****     _lv_memset_00(ext->img_src_right, sizeof(ext->img_src_right));
  80:lvgl/src/lv_widgets/lv_imgbtn.c **** #endif
  81:lvgl/src/lv_widgets/lv_imgbtn.c ****     ext->tiled = 0;
  82:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  83:lvgl/src/lv_widgets/lv_imgbtn.c ****     ext->act_cf = LV_IMG_CF_UNKNOWN;
  84:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  85:lvgl/src/lv_widgets/lv_imgbtn.c ****     /*The signal and design functions are not copied so set them here*/
  86:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_obj_set_signal_cb(imgbtn, lv_imgbtn_signal);
  87:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_obj_set_design_cb(imgbtn, lv_imgbtn_design);
ARM GAS  D:\Temp\ccNxtRwL.s 			page 3


  88:lvgl/src/lv_widgets/lv_imgbtn.c **** 
  89:lvgl/src/lv_widgets/lv_imgbtn.c ****     /*Init the new image button image button*/
  90:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(copy == NULL) {
  91:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_theme_apply(imgbtn, LV_THEME_IMGBTN);
  92:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
  93:lvgl/src/lv_widgets/lv_imgbtn.c ****     /*Copy an existing image button*/
  94:lvgl/src/lv_widgets/lv_imgbtn.c ****     else {
  95:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_imgbtn_ext_t * copy_ext = lv_obj_get_ext_attr(copy);
  96:lvgl/src/lv_widgets/lv_imgbtn.c ****         _lv_memcpy((void *)ext->img_src_mid, copy_ext->img_src_mid, sizeof(ext->img_src_mid));
  97:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
  98:lvgl/src/lv_widgets/lv_imgbtn.c ****         _lv_memcpy((void *)ext->img_src_left, copy_ext->img_src_left, sizeof(ext->img_src_left));
  99:lvgl/src/lv_widgets/lv_imgbtn.c ****         _lv_memcpy((void *)ext->img_src_right, copy_ext->img_src_right, sizeof(ext->img_src_right))
 100:lvgl/src/lv_widgets/lv_imgbtn.c **** #endif
 101:lvgl/src/lv_widgets/lv_imgbtn.c ****         ext->tiled = copy_ext->tiled;
 102:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*Refresh the style with new signal function*/
 103:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_obj_refresh_style(imgbtn, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);
 104:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 105:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 106:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_LOG_INFO("image button created");
 107:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 108:lvgl/src/lv_widgets/lv_imgbtn.c ****     return imgbtn;
 109:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 110:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 111:lvgl/src/lv_widgets/lv_imgbtn.c **** /*=====================
 112:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Setter functions
 113:lvgl/src/lv_widgets/lv_imgbtn.c ****  *====================*/
 114:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 115:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
 116:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Set images for a state of the image button
 117:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param imgbtn pointer to an image button object
 118:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param state for which state set the new image (from `lv_btn_state_t`) `
 119:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param src pointer to an image source (a C array or path to a file)
 120:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 121:lvgl/src/lv_widgets/lv_imgbtn.c **** void lv_imgbtn_set_src(lv_obj_t * imgbtn, lv_btn_state_t state, const void * src)
 122:lvgl/src/lv_widgets/lv_imgbtn.c **** {
 123:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_OBJ(imgbtn, LV_OBJX_NAME);
 124:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 125:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 126:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 127:lvgl/src/lv_widgets/lv_imgbtn.c ****     ext->img_src_mid[state] = src;
 128:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 129:lvgl/src/lv_widgets/lv_imgbtn.c ****     ext->img_src_left[state] = NULL;
 130:lvgl/src/lv_widgets/lv_imgbtn.c ****     ext->img_src_right[state] = NULL;
 131:lvgl/src/lv_widgets/lv_imgbtn.c **** #endif
 132:lvgl/src/lv_widgets/lv_imgbtn.c ****     ext->tiled = 0;
 133:lvgl/src/lv_widgets/lv_imgbtn.c ****     refr_img(imgbtn);
 134:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 135:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 136:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 137:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
 138:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Set images for a state of the image button
 139:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param imgbtn pointer to an image button object
 140:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param state for which state set the new image (from `lv_btn_state_t`) `
 141:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param src_left pointer to an image source for the left side of the button (a C array or path to
 142:lvgl/src/lv_widgets/lv_imgbtn.c ****  * a file)
 143:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param src_mid pointer to an image source for the middle of the button (ideally 1px wide) (a C
 144:lvgl/src/lv_widgets/lv_imgbtn.c ****  * array or path to a file)
ARM GAS  D:\Temp\ccNxtRwL.s 			page 4


 145:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param src_right pointer to an image source for the right side of the button (a C array or path
 146:lvgl/src/lv_widgets/lv_imgbtn.c ****  * to a file)
 147:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 148:lvgl/src/lv_widgets/lv_imgbtn.c **** void lv_imgbtn_set_src_tiled(lv_obj_t * imgbtn, lv_btn_state_t state, const void * src_left, const 
 149:lvgl/src/lv_widgets/lv_imgbtn.c ****                              const void * src_right)
 150:lvgl/src/lv_widgets/lv_imgbtn.c **** {
 151:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_OBJ(imgbtn, LV_OBJX_NAME);
 152:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 153:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(lv_img_src_get_type(src_left) == LV_IMG_SRC_SYMBOL ||
 154:lvgl/src/lv_widgets/lv_imgbtn.c ****        lv_img_src_get_type(src_mid) == LV_IMG_SRC_SYMBOL ||
 155:lvgl/src/lv_widgets/lv_imgbtn.c ****        lv_img_src_get_type(src_right) == LV_IMG_SRC_SYMBOL) {
 156:lvgl/src/lv_widgets/lv_imgbtn.c ****         LV_LOG_WARN("lv_imgbtn_set_src: symbols are not supported in tiled mode");
 157:lvgl/src/lv_widgets/lv_imgbtn.c ****         return;
 158:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 159:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 160:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 161:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 162:lvgl/src/lv_widgets/lv_imgbtn.c ****     ext->img_src_left[state] = src_left;
 163:lvgl/src/lv_widgets/lv_imgbtn.c ****     ext->img_src_mid[state] = src_mid;
 164:lvgl/src/lv_widgets/lv_imgbtn.c ****     ext->img_src_right[state] = src_right;
 165:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 166:lvgl/src/lv_widgets/lv_imgbtn.c ****     ext->tiled = 1;
 167:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 168:lvgl/src/lv_widgets/lv_imgbtn.c ****     refr_img(imgbtn);
 169:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 170:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 171:lvgl/src/lv_widgets/lv_imgbtn.c **** #endif
 172:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 173:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
 174:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Set the state of the image button
 175:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param imgbtn pointer to an image button object
 176:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param state the new state of the button (from lv_btn_state_t enum)
 177:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 178:lvgl/src/lv_widgets/lv_imgbtn.c **** void lv_imgbtn_set_state(lv_obj_t * imgbtn, lv_btn_state_t state)
 179:lvgl/src/lv_widgets/lv_imgbtn.c **** {
 180:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_btn_set_state(imgbtn, state);
 181:lvgl/src/lv_widgets/lv_imgbtn.c ****     refr_img(imgbtn);
 182:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 183:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 184:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
 185:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Toggle the state of the image button (ON->OFF, OFF->ON)
 186:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param imgbtn pointer to a image button object
 187:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 188:lvgl/src/lv_widgets/lv_imgbtn.c **** void lv_imgbtn_toggle(lv_obj_t * imgbtn)
 189:lvgl/src/lv_widgets/lv_imgbtn.c **** {
 190:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_btn_toggle(imgbtn);
 191:lvgl/src/lv_widgets/lv_imgbtn.c ****     refr_img(imgbtn);
 192:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 193:lvgl/src/lv_widgets/lv_imgbtn.c **** /*=====================
 194:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Getter functions
 195:lvgl/src/lv_widgets/lv_imgbtn.c ****  *====================*/
 196:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 197:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
 198:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Get the images in a given state
 199:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param imgbtn pointer to an image button object
 200:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param state the state where to get the image (from `lv_btn_state_t`) `
 201:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @return pointer to an image source (a C array or path to a file)
ARM GAS  D:\Temp\ccNxtRwL.s 			page 5


 202:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 203:lvgl/src/lv_widgets/lv_imgbtn.c **** const void * lv_imgbtn_get_src(lv_obj_t * imgbtn, lv_btn_state_t state)
 204:lvgl/src/lv_widgets/lv_imgbtn.c **** {
 205:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_OBJ(imgbtn, LV_OBJX_NAME);
 206:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 207:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 208:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 209:lvgl/src/lv_widgets/lv_imgbtn.c ****     return ext->img_src_mid[state];
 210:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 211:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 212:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 213:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
 214:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Get the left image in a given state
 215:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param imgbtn pointer to an image button object
 216:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param state the state where to get the image (from `lv_btn_state_t`) `
 217:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @return pointer to the left image source (a C array or path to a file)
 218:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 219:lvgl/src/lv_widgets/lv_imgbtn.c **** const void * lv_imgbtn_get_src_left(lv_obj_t * imgbtn, lv_btn_state_t state)
 220:lvgl/src/lv_widgets/lv_imgbtn.c **** {
 221:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_OBJ(imgbtn, LV_OBJX_NAME);
 222:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 223:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 224:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 225:lvgl/src/lv_widgets/lv_imgbtn.c ****     return ext->img_src_left[state];
 226:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 227:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 228:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
 229:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Get the middle image in a given state
 230:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param imgbtn pointer to an image button object
 231:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param state the state where to get the image (from `lv_btn_state_t`) `
 232:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @return pointer to the middle image source (a C array or path to a file)
 233:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 234:lvgl/src/lv_widgets/lv_imgbtn.c **** const void * lv_imgbtn_get_src_middle(lv_obj_t * imgbtn, lv_btn_state_t state)
 235:lvgl/src/lv_widgets/lv_imgbtn.c **** {
 236:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_OBJ(imgbtn, LV_OBJX_NAME);
 237:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 238:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 239:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 240:lvgl/src/lv_widgets/lv_imgbtn.c ****     return ext->img_src_mid[state];
 241:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 242:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 243:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
 244:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Get the right image in a given state
 245:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param imgbtn pointer to an image button object
 246:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param state the state where to get the image (from `lv_btn_state_t`) `
 247:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @return pointer to the left image source (a C array or path to a file)
 248:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 249:lvgl/src/lv_widgets/lv_imgbtn.c **** const void * lv_imgbtn_get_src_right(lv_obj_t * imgbtn, lv_btn_state_t state)
 250:lvgl/src/lv_widgets/lv_imgbtn.c **** {
 251:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_OBJ(imgbtn, LV_OBJX_NAME);
 252:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 253:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 254:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 255:lvgl/src/lv_widgets/lv_imgbtn.c ****     return ext->img_src_right[state];
 256:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 257:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 258:lvgl/src/lv_widgets/lv_imgbtn.c **** #endif
ARM GAS  D:\Temp\ccNxtRwL.s 			page 6


 259:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 260:lvgl/src/lv_widgets/lv_imgbtn.c **** /*=====================
 261:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Other functions
 262:lvgl/src/lv_widgets/lv_imgbtn.c ****  *====================*/
 263:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 264:lvgl/src/lv_widgets/lv_imgbtn.c **** /*
 265:lvgl/src/lv_widgets/lv_imgbtn.c ****  * New object specific "other" functions come here
 266:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 267:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 268:lvgl/src/lv_widgets/lv_imgbtn.c **** /**********************
 269:lvgl/src/lv_widgets/lv_imgbtn.c ****  *   STATIC FUNCTIONS
 270:lvgl/src/lv_widgets/lv_imgbtn.c ****  **********************/
 271:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 272:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
 273:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Handle the drawing related tasks of the image buttons
 274:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param imgbtn pointer to an object
 275:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param clip_area the object will be drawn only in this area
 276:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param mode LV_DESIGN_COVER_CHK: only check if the object fully covers the 'mask_p' area
 277:lvgl/src/lv_widgets/lv_imgbtn.c ****  *                                  (return 'true' if yes)
 278:lvgl/src/lv_widgets/lv_imgbtn.c ****  *             LV_DESIGN_DRAW: draw the object (always return 'true')
 279:lvgl/src/lv_widgets/lv_imgbtn.c ****  *             LV_DESIGN_DRAW_POST: drawing after every children are drawn
 280:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param return an element of `lv_design_res_t`
 281:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 282:lvgl/src/lv_widgets/lv_imgbtn.c **** static lv_design_res_t lv_imgbtn_design(lv_obj_t * imgbtn, const lv_area_t * clip_area, lv_design_m
 283:lvgl/src/lv_widgets/lv_imgbtn.c **** {
 284:lvgl/src/lv_widgets/lv_imgbtn.c ****     /*Return false if the object is not covers the mask_p area*/
 285:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(mode == LV_DESIGN_COVER_CHK) {
 286:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 287:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_design_res_t cover = LV_DESIGN_RES_NOT_COVER;
 288:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(ext->act_cf == LV_IMG_CF_TRUE_COLOR || ext->act_cf == LV_IMG_CF_RAW) {
 289:lvgl/src/lv_widgets/lv_imgbtn.c ****             cover = _lv_area_is_in(clip_area, &imgbtn->coords, 0) ? LV_DESIGN_RES_COVER : LV_DESIGN
 290:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 291:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 292:lvgl/src/lv_widgets/lv_imgbtn.c ****         return cover;
 293:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 294:lvgl/src/lv_widgets/lv_imgbtn.c ****     /*Draw the object*/
 295:lvgl/src/lv_widgets/lv_imgbtn.c ****     else if(mode == LV_DESIGN_DRAW_MAIN) {
 296:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_area_t img_coords;
 297:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 298:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_obj_get_coords(imgbtn, &img_coords);
 299:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 300:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_draw_rect_dsc_t bg_dsc;
 301:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_draw_rect_dsc_init(&bg_dsc);
 302:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_obj_init_draw_rect_dsc(imgbtn, LV_IMGBTN_PART_MAIN, &bg_dsc);
 303:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 304:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*If the border is drawn later disable loading its properties*/
 305:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(lv_obj_get_style_border_post(imgbtn, LV_OBJ_PART_MAIN)) {
 306:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_dsc.border_opa = LV_OPA_TRANSP;
 307:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 308:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 309:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_area_t bg_coords;
 310:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_area_copy(&bg_coords, &img_coords);
 311:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.x1 -= lv_obj_get_style_pad_left(imgbtn, LV_IMGBTN_PART_MAIN);
 312:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.x2 += lv_obj_get_style_pad_right(imgbtn, LV_IMGBTN_PART_MAIN);
 313:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.y1 -= lv_obj_get_style_pad_top(imgbtn, LV_IMGBTN_PART_MAIN);
 314:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.y2 += lv_obj_get_style_pad_bottom(imgbtn, LV_IMGBTN_PART_MAIN);
 315:lvgl/src/lv_widgets/lv_imgbtn.c **** 
ARM GAS  D:\Temp\ccNxtRwL.s 			page 7


 316:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_draw_rect(&bg_coords, clip_area, &bg_dsc);
 317:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 318:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(lv_obj_get_style_clip_corner(imgbtn, LV_OBJ_PART_MAIN)) {
 319:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_draw_mask_radius_param_t * mp = _lv_mem_buf_get(sizeof(lv_draw_mask_radius_param_t))
 320:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 321:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_coord_t r = lv_obj_get_style_radius(imgbtn, LV_OBJ_PART_MAIN);
 322:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 323:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_draw_mask_radius_init(mp, &bg_coords, r, false);
 324:lvgl/src/lv_widgets/lv_imgbtn.c ****             /*Add the mask and use `img+8` as custom id. Don't use `obj` directly because it might 
 325:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_draw_mask_add(mp, imgbtn + 8);
 326:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 327:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 328:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*Just draw an image*/
 329:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_imgbtn_ext_t * ext    = lv_obj_get_ext_attr(imgbtn);
 330:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_btn_state_t state     = suggest_state(imgbtn, lv_imgbtn_get_state(imgbtn));
 331:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 332:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*Simply draw the middle src if no tiled*/
 333:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(!ext->tiled) {
 334:lvgl/src/lv_widgets/lv_imgbtn.c ****             const void * src = ext->img_src_mid[state];
 335:lvgl/src/lv_widgets/lv_imgbtn.c ****             if(lv_img_src_get_type(src) == LV_IMG_SRC_SYMBOL) {
 336:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_label_dsc_t label_dsc;
 337:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_label_dsc_init(&label_dsc);
 338:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_obj_init_draw_label_dsc(imgbtn, LV_IMGBTN_PART_MAIN, &label_dsc);
 339:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_label(&imgbtn->coords, clip_area, &label_dsc, src, NULL);
 340:lvgl/src/lv_widgets/lv_imgbtn.c ****             }
 341:lvgl/src/lv_widgets/lv_imgbtn.c ****             else {
 342:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_img_dsc_t img_dsc;
 343:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_img_dsc_init(&img_dsc);
 344:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_obj_init_draw_img_dsc(imgbtn, LV_IMGBTN_PART_MAIN, &img_dsc);
 345:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_img(&imgbtn->coords, clip_area, src, &img_dsc);
 346:lvgl/src/lv_widgets/lv_imgbtn.c ****             }
 347:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 348:lvgl/src/lv_widgets/lv_imgbtn.c ****         else {
 349:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 350:lvgl/src/lv_widgets/lv_imgbtn.c ****             const void * src = ext->img_src_left[state];
 351:lvgl/src/lv_widgets/lv_imgbtn.c ****             if(lv_img_src_get_type(src) == LV_IMG_SRC_SYMBOL) {
 352:lvgl/src/lv_widgets/lv_imgbtn.c ****                 LV_LOG_WARN("lv_imgbtn_design: SYMBOLS are not supported in tiled mode")
 353:lvgl/src/lv_widgets/lv_imgbtn.c ****                 return LV_DESIGN_RES_OK;
 354:lvgl/src/lv_widgets/lv_imgbtn.c ****             }
 355:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 356:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_coord_t w = lv_obj_get_style_transform_width(imgbtn, LV_OBJ_PART_MAIN);
 357:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_coord_t h = lv_obj_get_style_transform_height(imgbtn, LV_OBJ_PART_MAIN);
 358:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_area_t coords;
 359:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_area_copy(&coords, &imgbtn->coords);
 360:lvgl/src/lv_widgets/lv_imgbtn.c ****             coords.x1 -= w;
 361:lvgl/src/lv_widgets/lv_imgbtn.c ****             coords.x2 += w;
 362:lvgl/src/lv_widgets/lv_imgbtn.c ****             coords.y1 -= h;
 363:lvgl/src/lv_widgets/lv_imgbtn.c ****             coords.y2 += h;
 364:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 365:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_draw_img_dsc_t img_dsc;
 366:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_draw_img_dsc_init(&img_dsc);
 367:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_obj_init_draw_img_dsc(imgbtn, LV_IMGBTN_PART_MAIN, &img_dsc);
 368:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 369:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_img_header_t header;
 370:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_area_t coords_part;
 371:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_coord_t left_w = 0;
 372:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_coord_t right_w = 0;
ARM GAS  D:\Temp\ccNxtRwL.s 			page 8


 373:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 374:lvgl/src/lv_widgets/lv_imgbtn.c ****             if(src) {
 375:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_img_decoder_get_info(src, &header);
 376:lvgl/src/lv_widgets/lv_imgbtn.c ****                 left_w = header.w;
 377:lvgl/src/lv_widgets/lv_imgbtn.c ****                 coords_part.x1 = coords.x1;
 378:lvgl/src/lv_widgets/lv_imgbtn.c ****                 coords_part.y1 = coords.y1;
 379:lvgl/src/lv_widgets/lv_imgbtn.c ****                 coords_part.x2 = coords.x1 + header.w - 1;
 380:lvgl/src/lv_widgets/lv_imgbtn.c ****                 coords_part.y2 = coords.y1 + header.h - 1;
 381:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_img(&coords_part, clip_area, src, &img_dsc);
 382:lvgl/src/lv_widgets/lv_imgbtn.c ****             }
 383:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 384:lvgl/src/lv_widgets/lv_imgbtn.c ****             src = ext->img_src_right[state];
 385:lvgl/src/lv_widgets/lv_imgbtn.c ****             if(src) {
 386:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_img_decoder_get_info(src, &header);
 387:lvgl/src/lv_widgets/lv_imgbtn.c ****                 right_w = header.w;
 388:lvgl/src/lv_widgets/lv_imgbtn.c ****                 coords_part.x1 = coords.x2 - header.w + 1;
 389:lvgl/src/lv_widgets/lv_imgbtn.c ****                 coords_part.y1 = coords.y1;
 390:lvgl/src/lv_widgets/lv_imgbtn.c ****                 coords_part.x2 = coords.x2;
 391:lvgl/src/lv_widgets/lv_imgbtn.c ****                 coords_part.y2 = coords.y1 + header.h - 1;
 392:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_img(&coords_part, clip_area, src, &img_dsc);
 393:lvgl/src/lv_widgets/lv_imgbtn.c ****             }
 394:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 395:lvgl/src/lv_widgets/lv_imgbtn.c ****             src = ext->img_src_mid[state];
 396:lvgl/src/lv_widgets/lv_imgbtn.c ****             if(src) {
 397:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_area_t clip_center_area;
 398:lvgl/src/lv_widgets/lv_imgbtn.c ****                 clip_center_area.x1 = coords.x1 + left_w;
 399:lvgl/src/lv_widgets/lv_imgbtn.c ****                 clip_center_area.x2 = coords.x2 - right_w;
 400:lvgl/src/lv_widgets/lv_imgbtn.c ****                 clip_center_area.y1 = coords.y1;
 401:lvgl/src/lv_widgets/lv_imgbtn.c ****                 clip_center_area.y2 = coords.y2;
 402:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 403:lvgl/src/lv_widgets/lv_imgbtn.c ****                 bool comm_res;
 404:lvgl/src/lv_widgets/lv_imgbtn.c ****                 comm_res = _lv_area_intersect(&clip_center_area, &clip_center_area, clip_area);
 405:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(comm_res) {
 406:lvgl/src/lv_widgets/lv_imgbtn.c ****                     lv_coord_t obj_w = lv_obj_get_width(imgbtn);
 407:lvgl/src/lv_widgets/lv_imgbtn.c ****                     lv_coord_t i;
 408:lvgl/src/lv_widgets/lv_imgbtn.c ****                     lv_img_decoder_get_info(src, &header);
 409:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 410:lvgl/src/lv_widgets/lv_imgbtn.c ****                     coords_part.x1 = coords.x1 + left_w;
 411:lvgl/src/lv_widgets/lv_imgbtn.c ****                     coords_part.y1 = coords.y1;
 412:lvgl/src/lv_widgets/lv_imgbtn.c ****                     coords_part.x2 = coords_part.x1 + header.w - 1;
 413:lvgl/src/lv_widgets/lv_imgbtn.c ****                     coords_part.y2 = coords_part.y1 + header.h - 1;
 414:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 415:lvgl/src/lv_widgets/lv_imgbtn.c ****                     for(i = 0; i < obj_w - right_w - left_w; i += header.w) {
 416:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 417:lvgl/src/lv_widgets/lv_imgbtn.c ****                         lv_draw_img(&coords_part, &clip_center_area, src, &img_dsc);
 418:lvgl/src/lv_widgets/lv_imgbtn.c ****                         coords_part.x1 = coords_part.x2 + 1;
 419:lvgl/src/lv_widgets/lv_imgbtn.c ****                         coords_part.x2 += header.w;
 420:lvgl/src/lv_widgets/lv_imgbtn.c ****                     }
 421:lvgl/src/lv_widgets/lv_imgbtn.c ****                 }
 422:lvgl/src/lv_widgets/lv_imgbtn.c ****             }
 423:lvgl/src/lv_widgets/lv_imgbtn.c **** #endif
 424:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 425:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 426:lvgl/src/lv_widgets/lv_imgbtn.c ****     /*Post draw when the children are drawn*/
 427:lvgl/src/lv_widgets/lv_imgbtn.c ****     else if(mode == LV_DESIGN_DRAW_POST) {
 428:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(lv_obj_get_style_clip_corner(imgbtn, LV_OBJ_PART_MAIN)) {
 429:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_draw_mask_radius_param_t * param = lv_draw_mask_remove_custom(imgbtn + 8);
ARM GAS  D:\Temp\ccNxtRwL.s 			page 9


 430:lvgl/src/lv_widgets/lv_imgbtn.c ****             _lv_mem_buf_release(param);
 431:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 432:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 433:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_draw_rect_dsc_t draw_dsc;
 434:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_draw_rect_dsc_init(&draw_dsc);
 435:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 436:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*If the border is drawn later disable loading other properties*/
 437:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(lv_obj_get_style_border_post(imgbtn, LV_OBJ_PART_MAIN)) {
 438:lvgl/src/lv_widgets/lv_imgbtn.c ****             draw_dsc.bg_opa = LV_OPA_TRANSP;
 439:lvgl/src/lv_widgets/lv_imgbtn.c ****             draw_dsc.pattern_opa = LV_OPA_TRANSP;
 440:lvgl/src/lv_widgets/lv_imgbtn.c ****             draw_dsc.shadow_opa = LV_OPA_TRANSP;
 441:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_obj_init_draw_rect_dsc(imgbtn, LV_OBJ_PART_MAIN, &draw_dsc);
 442:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 443:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_area_t bg_coords;
 444:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_area_copy(&bg_coords, &imgbtn->coords);
 445:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.x1 -= lv_obj_get_style_pad_left(imgbtn, LV_IMGBTN_PART_MAIN);
 446:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.x2 += lv_obj_get_style_pad_right(imgbtn, LV_IMGBTN_PART_MAIN);
 447:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.y1 -= lv_obj_get_style_pad_top(imgbtn, LV_IMGBTN_PART_MAIN);
 448:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.y2 += lv_obj_get_style_pad_bottom(imgbtn, LV_IMGBTN_PART_MAIN);
 449:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 450:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_draw_rect(&bg_coords, clip_area, &draw_dsc);
 451:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 452:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 453:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 454:lvgl/src/lv_widgets/lv_imgbtn.c ****     return LV_DESIGN_RES_OK;
 455:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 456:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 457:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
 458:lvgl/src/lv_widgets/lv_imgbtn.c ****  * Signal function of the image button
 459:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param imgbtn pointer to a image button object
 460:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param sign a signal type from lv_signal_t enum
 461:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param param pointer to a signal specific variable
 462:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @return LV_RES_OK: the object is not deleted in the function; LV_RES_INV: the object is deleted
 463:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 464:lvgl/src/lv_widgets/lv_imgbtn.c **** static lv_res_t lv_imgbtn_signal(lv_obj_t * imgbtn, lv_signal_t sign, void * param)
 465:lvgl/src/lv_widgets/lv_imgbtn.c **** {
 466:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_res_t res;
 467:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 468:lvgl/src/lv_widgets/lv_imgbtn.c ****     /* Include the ancient signal function */
 469:lvgl/src/lv_widgets/lv_imgbtn.c ****     res = ancestor_signal(imgbtn, sign, param);
 470:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(res != LV_RES_OK) return res;
 471:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 472:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 473:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(sign == LV_SIGNAL_STYLE_CHG) {
 474:lvgl/src/lv_widgets/lv_imgbtn.c ****         /* If the style changed then the button was clicked, released etc. so probably the state wa
 475:lvgl/src/lv_widgets/lv_imgbtn.c ****          * changed as well Set the new image for the new state.*/
 476:lvgl/src/lv_widgets/lv_imgbtn.c ****         refr_img(imgbtn);
 477:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 478:lvgl/src/lv_widgets/lv_imgbtn.c ****     else if(sign == LV_SIGNAL_REFR_EXT_DRAW_PAD) {
 479:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*Handle the padding of the background*/
 480:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_style_int_t left = lv_obj_get_style_pad_left(imgbtn, LV_IMGBTN_PART_MAIN);
 481:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_style_int_t right = lv_obj_get_style_pad_right(imgbtn, LV_IMGBTN_PART_MAIN);
 482:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_style_int_t top = lv_obj_get_style_pad_top(imgbtn, LV_IMGBTN_PART_MAIN);
 483:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_style_int_t bottom = lv_obj_get_style_pad_bottom(imgbtn, LV_IMGBTN_PART_MAIN);
 484:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 485:lvgl/src/lv_widgets/lv_imgbtn.c ****         imgbtn->ext_draw_pad = LV_MATH_MAX(imgbtn->ext_draw_pad, left);
 486:lvgl/src/lv_widgets/lv_imgbtn.c ****         imgbtn->ext_draw_pad = LV_MATH_MAX(imgbtn->ext_draw_pad, right);
ARM GAS  D:\Temp\ccNxtRwL.s 			page 10


 487:lvgl/src/lv_widgets/lv_imgbtn.c ****         imgbtn->ext_draw_pad = LV_MATH_MAX(imgbtn->ext_draw_pad, top);
 488:lvgl/src/lv_widgets/lv_imgbtn.c ****         imgbtn->ext_draw_pad = LV_MATH_MAX(imgbtn->ext_draw_pad, bottom);
 489:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 490:lvgl/src/lv_widgets/lv_imgbtn.c ****     else if(sign == LV_SIGNAL_PRESSED || sign == LV_SIGNAL_RELEASED || sign == LV_SIGNAL_PRESS_LOST
 491:lvgl/src/lv_widgets/lv_imgbtn.c ****         refr_img(imgbtn);
 492:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 493:lvgl/src/lv_widgets/lv_imgbtn.c ****     else if(sign == LV_SIGNAL_CLEANUP) {
 494:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*Nothing to cleanup. (No dynamically allocated memory in 'ext')*/
 495:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 496:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 497:lvgl/src/lv_widgets/lv_imgbtn.c ****     return res;
 498:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 499:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 500:lvgl/src/lv_widgets/lv_imgbtn.c **** static void refr_img(lv_obj_t * imgbtn)
 501:lvgl/src/lv_widgets/lv_imgbtn.c **** {
 502:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 503:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_btn_state_t state  = suggest_state(imgbtn, lv_imgbtn_get_state(imgbtn));
 504:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_img_header_t header;
 505:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 506:lvgl/src/lv_widgets/lv_imgbtn.c ****     const void * src = ext->img_src_mid[state];
 507:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(src == NULL) return;
 508:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 509:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_res_t info_res = LV_RES_OK;
 510:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(lv_img_src_get_type(src) == LV_IMG_SRC_SYMBOL) {
 511:lvgl/src/lv_widgets/lv_imgbtn.c ****         const lv_font_t * font = lv_obj_get_style_text_font(imgbtn, LV_IMGBTN_PART_MAIN);
 512:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.h = lv_font_get_line_height(font);
 513:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.w = _lv_txt_get_width(src, (uint16_t)strlen(src), font, 0, LV_TXT_FLAG_NONE);
 514:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.always_zero = 0;
 515:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.cf = LV_IMG_CF_ALPHA_1BIT;
 516:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 517:lvgl/src/lv_widgets/lv_imgbtn.c ****     else {
 518:lvgl/src/lv_widgets/lv_imgbtn.c ****         info_res = lv_img_decoder_get_info(src, &header);
 519:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 520:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 521:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(info_res == LV_RES_OK) {
 522:lvgl/src/lv_widgets/lv_imgbtn.c ****         ext->act_cf = header.cf;
 523:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(ext->tiled) lv_obj_set_height(imgbtn, header.h); /*Keep the sure defined width*/
 524:lvgl/src/lv_widgets/lv_imgbtn.c ****         else lv_obj_set_size(imgbtn, header.w, header.h);
 525:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 526:lvgl/src/lv_widgets/lv_imgbtn.c ****     else {
 527:lvgl/src/lv_widgets/lv_imgbtn.c ****         ext->act_cf = LV_IMG_CF_UNKNOWN;
 528:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 529:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 530:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_obj_invalidate(imgbtn);
 531:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 532:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 533:lvgl/src/lv_widgets/lv_imgbtn.c **** /**
 534:lvgl/src/lv_widgets/lv_imgbtn.c ****  * If `src` is not defined for the current state try to get a state which is related to the current
 535:lvgl/src/lv_widgets/lv_imgbtn.c ****  * E.g. if the PRESSED src is not set but the RELEASED does, use the RELEASED.
 536:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param imgbtn pointer to an image button
 537:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @param state the state to convert
 538:lvgl/src/lv_widgets/lv_imgbtn.c ****  * @return the suggested state
 539:lvgl/src/lv_widgets/lv_imgbtn.c ****  */
 540:lvgl/src/lv_widgets/lv_imgbtn.c **** static lv_btn_state_t suggest_state(lv_obj_t * imgbtn, lv_btn_state_t state)
 541:lvgl/src/lv_widgets/lv_imgbtn.c **** {
  29              		.loc 1 541 1 view -0
  30              		.cfi_startproc
ARM GAS  D:\Temp\ccNxtRwL.s 			page 11


  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 541 1 is_stmt 0 view .LVU1
  34 0000 10B5     		push	{r4, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  39 0002 0C46     		mov	r4, r1
 542:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
  40              		.loc 1 542 5 is_stmt 1 view .LVU2
  41              		.loc 1 542 29 is_stmt 0 view .LVU3
  42 0004 FFF7FEFF 		bl	lv_obj_get_ext_attr
  43              	.LVL1:
 543:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ext->img_src_mid[state] == NULL) {
  44              		.loc 1 543 5 is_stmt 1 view .LVU4
  45              		.loc 1 543 24 is_stmt 0 view .LVU5
  46 0008 00EB8403 		add	r3, r0, r4, lsl #2
  47 000c 5B68     		ldr	r3, [r3, #4]
  48              		.loc 1 543 7 view .LVU6
  49 000e 0BB1     		cbz	r3, .L18
  50              	.L2:
 544:lvgl/src/lv_widgets/lv_imgbtn.c ****         switch(state) {
 545:lvgl/src/lv_widgets/lv_imgbtn.c ****             case LV_BTN_STATE_PRESSED:
 546:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
 547:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 548:lvgl/src/lv_widgets/lv_imgbtn.c ****             case LV_BTN_STATE_CHECKED_RELEASED:
 549:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
 550:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 551:lvgl/src/lv_widgets/lv_imgbtn.c ****             case LV_BTN_STATE_CHECKED_PRESSED:
 552:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_CHECKED_RELEASED]) return LV_BTN_STATE_CHECKED_REL
 553:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_PRESSED]) return LV_BTN_STATE_PRESSED;
 554:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
 555:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 556:lvgl/src/lv_widgets/lv_imgbtn.c ****             case LV_BTN_STATE_DISABLED:
 557:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
 558:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 559:lvgl/src/lv_widgets/lv_imgbtn.c ****             case LV_BTN_STATE_CHECKED_DISABLED:
 560:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_CHECKED_RELEASED]) return LV_BTN_STATE_CHECKED_REL
 561:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
 562:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 563:lvgl/src/lv_widgets/lv_imgbtn.c ****             default:
 564:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 565:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 566:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 567:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 568:lvgl/src/lv_widgets/lv_imgbtn.c ****     return state;
 569:lvgl/src/lv_widgets/lv_imgbtn.c **** }
  51              		.loc 1 569 1 view .LVU7
  52 0010 2046     		mov	r0, r4
  53              	.LVL2:
  54              		.loc 1 569 1 view .LVU8
  55 0012 10BD     		pop	{r4, pc}
  56              	.LVL3:
  57              	.L18:
 544:lvgl/src/lv_widgets/lv_imgbtn.c ****         switch(state) {
  58              		.loc 1 544 9 is_stmt 1 view .LVU9
ARM GAS  D:\Temp\ccNxtRwL.s 			page 12


  59 0014 631E     		subs	r3, r4, #1
  60 0016 042B     		cmp	r3, #4
  61 0018 FAD8     		bhi	.L2
  62 001a DFE803F0 		tbb	[pc, r3]
  63              	.L4:
  64 001e 03       		.byte	(.L8-.L4)/2
  65 001f 18       		.byte	(.L7-.L4)/2
  66 0020 08       		.byte	(.L6-.L4)/2
  67 0021 0D       		.byte	(.L5-.L4)/2
  68 0022 1D       		.byte	(.L3-.L4)/2
  69 0023 00       		.p2align 1
  70              	.L8:
 546:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
  71              		.loc 1 546 17 view .LVU10
 546:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
  72              		.loc 1 546 36 is_stmt 0 view .LVU11
  73 0024 4368     		ldr	r3, [r0, #4]
 546:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
  74              		.loc 1 546 19 view .LVU12
  75 0026 002B     		cmp	r3, #0
  76 0028 F2D0     		beq	.L2
 546:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
  77              		.loc 1 546 68 view .LVU13
  78 002a 0024     		movs	r4, #0
  79 002c F0E7     		b	.L2
  80              	.L6:
 549:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
  81              		.loc 1 549 17 is_stmt 1 view .LVU14
 549:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
  82              		.loc 1 549 36 is_stmt 0 view .LVU15
  83 002e 4368     		ldr	r3, [r0, #4]
 549:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
  84              		.loc 1 549 19 view .LVU16
  85 0030 002B     		cmp	r3, #0
  86 0032 EDD0     		beq	.L2
 549:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
  87              		.loc 1 549 68 view .LVU17
  88 0034 0024     		movs	r4, #0
  89 0036 EBE7     		b	.L2
  90              	.L5:
 552:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_PRESSED]) return LV_BTN_STATE_PRESSED;
  91              		.loc 1 552 17 is_stmt 1 view .LVU18
 552:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_PRESSED]) return LV_BTN_STATE_PRESSED;
  92              		.loc 1 552 36 is_stmt 0 view .LVU19
  93 0038 0369     		ldr	r3, [r0, #16]
 552:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_PRESSED]) return LV_BTN_STATE_PRESSED;
  94              		.loc 1 552 19 view .LVU20
  95 003a A3B9     		cbnz	r3, .L11
 553:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
  96              		.loc 1 553 17 is_stmt 1 view .LVU21
 553:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
  97              		.loc 1 553 36 is_stmt 0 view .LVU22
  98 003c 8368     		ldr	r3, [r0, #8]
 553:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
  99              		.loc 1 553 19 view .LVU23
 100 003e 0BB1     		cbz	r3, .L19
 553:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
ARM GAS  D:\Temp\ccNxtRwL.s 			page 13


 101              		.loc 1 553 67 view .LVU24
 102 0040 0124     		movs	r4, #1
 103 0042 E5E7     		b	.L2
 104              	.L19:
 554:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 105              		.loc 1 554 17 is_stmt 1 view .LVU25
 554:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 106              		.loc 1 554 36 is_stmt 0 view .LVU26
 107 0044 4368     		ldr	r3, [r0, #4]
 554:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 108              		.loc 1 554 19 view .LVU27
 109 0046 002B     		cmp	r3, #0
 110 0048 E2D0     		beq	.L2
 554:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 111              		.loc 1 554 68 view .LVU28
 112 004a 0024     		movs	r4, #0
 113 004c E0E7     		b	.L2
 114              	.L7:
 557:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 115              		.loc 1 557 17 is_stmt 1 view .LVU29
 557:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 116              		.loc 1 557 36 is_stmt 0 view .LVU30
 117 004e 4368     		ldr	r3, [r0, #4]
 557:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 118              		.loc 1 557 19 view .LVU31
 119 0050 002B     		cmp	r3, #0
 120 0052 DDD0     		beq	.L2
 557:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 121              		.loc 1 557 68 view .LVU32
 122 0054 0024     		movs	r4, #0
 123 0056 DBE7     		b	.L2
 124              	.L3:
 560:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
 125              		.loc 1 560 17 is_stmt 1 view .LVU33
 560:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
 126              		.loc 1 560 36 is_stmt 0 view .LVU34
 127 0058 0369     		ldr	r3, [r0, #16]
 560:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
 128              		.loc 1 560 19 view .LVU35
 129 005a 33B9     		cbnz	r3, .L15
 561:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 130              		.loc 1 561 17 is_stmt 1 view .LVU36
 561:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 131              		.loc 1 561 36 is_stmt 0 view .LVU37
 132 005c 4368     		ldr	r3, [r0, #4]
 561:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 133              		.loc 1 561 19 view .LVU38
 134 005e 002B     		cmp	r3, #0
 135 0060 D6D0     		beq	.L2
 561:lvgl/src/lv_widgets/lv_imgbtn.c ****                 break;
 136              		.loc 1 561 68 view .LVU39
 137 0062 0024     		movs	r4, #0
 138 0064 D4E7     		b	.L2
 139              	.L11:
 552:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_PRESSED]) return LV_BTN_STATE_PRESSED;
 140              		.loc 1 552 76 view .LVU40
 141 0066 0324     		movs	r4, #3
ARM GAS  D:\Temp\ccNxtRwL.s 			page 14


 142 0068 D2E7     		b	.L2
 143              	.L15:
 560:lvgl/src/lv_widgets/lv_imgbtn.c ****                 if(ext->img_src_mid[LV_BTN_STATE_RELEASED]) return LV_BTN_STATE_RELEASED;
 144              		.loc 1 560 76 view .LVU41
 145 006a 0324     		movs	r4, #3
 146 006c D0E7     		b	.L2
 147              		.cfi_endproc
 148              	.LFE480:
 150              		.section	.text.lv_imgbtn_design,"ax",%progbits
 151              		.align	1
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv4-sp-d16
 157              	lv_imgbtn_design:
 158              	.LVL4:
 159              	.LFB477:
 283:lvgl/src/lv_widgets/lv_imgbtn.c ****     /*Return false if the object is not covers the mask_p area*/
 160              		.loc 1 283 1 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 136
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 283:lvgl/src/lv_widgets/lv_imgbtn.c ****     /*Return false if the object is not covers the mask_p area*/
 164              		.loc 1 283 1 is_stmt 0 view .LVU43
 165 0000 70B5     		push	{r4, r5, r6, lr}
 166              	.LCFI1:
 167              		.cfi_def_cfa_offset 16
 168              		.cfi_offset 4, -16
 169              		.cfi_offset 5, -12
 170              		.cfi_offset 6, -8
 171              		.cfi_offset 14, -4
 172 0002 A4B0     		sub	sp, sp, #144
 173              	.LCFI2:
 174              		.cfi_def_cfa_offset 160
 175 0004 0446     		mov	r4, r0
 176 0006 0D46     		mov	r5, r1
 285:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 177              		.loc 1 285 5 is_stmt 1 view .LVU44
 285:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 178              		.loc 1 285 7 is_stmt 0 view .LVU45
 179 0008 022A     		cmp	r2, #2
 180 000a 06D0     		beq	.L40
 295:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_area_t img_coords;
 181              		.loc 1 295 10 is_stmt 1 view .LVU46
 295:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_area_t img_coords;
 182              		.loc 1 295 12 is_stmt 0 view .LVU47
 183 000c CAB1     		cbz	r2, .L41
 427:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(lv_obj_get_style_clip_corner(imgbtn, LV_OBJ_PART_MAIN)) {
 184              		.loc 1 427 10 is_stmt 1 view .LVU48
 427:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(lv_obj_get_style_clip_corner(imgbtn, LV_OBJ_PART_MAIN)) {
 185              		.loc 1 427 12 is_stmt 0 view .LVU49
 186 000e 012A     		cmp	r2, #1
 187 0010 00F0BC80 		beq	.L42
 454:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 188              		.loc 1 454 12 view .LVU50
 189 0014 0020     		movs	r0, #0
 190              	.LVL5:
ARM GAS  D:\Temp\ccNxtRwL.s 			page 15


 191              	.L24:
 455:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 192              		.loc 1 455 1 view .LVU51
 193 0016 24B0     		add	sp, sp, #144
 194              	.LCFI3:
 195              		.cfi_remember_state
 196              		.cfi_def_cfa_offset 16
 197              		@ sp needed
 198 0018 70BD     		pop	{r4, r5, r6, pc}
 199              	.LVL6:
 200              	.L40:
 201              	.LCFI4:
 202              		.cfi_restore_state
 203              	.LBB65:
 286:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_design_res_t cover = LV_DESIGN_RES_NOT_COVER;
 204              		.loc 1 286 9 is_stmt 1 view .LVU52
 286:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_design_res_t cover = LV_DESIGN_RES_NOT_COVER;
 205              		.loc 1 286 33 is_stmt 0 view .LVU53
 206 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
 207              	.LVL7:
 287:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(ext->act_cf == LV_IMG_CF_TRUE_COLOR || ext->act_cf == LV_IMG_CF_RAW) {
 208              		.loc 1 287 9 is_stmt 1 view .LVU54
 288:lvgl/src/lv_widgets/lv_imgbtn.c ****             cover = _lv_area_is_in(clip_area, &imgbtn->coords, 0) ? LV_DESIGN_RES_COVER : LV_DESIGN
 209              		.loc 1 288 9 view .LVU55
 288:lvgl/src/lv_widgets/lv_imgbtn.c ****             cover = _lv_area_is_in(clip_area, &imgbtn->coords, 0) ? LV_DESIGN_RES_COVER : LV_DESIGN
 210              		.loc 1 288 15 is_stmt 0 view .LVU56
 211 001e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 288:lvgl/src/lv_widgets/lv_imgbtn.c ****             cover = _lv_area_is_in(clip_area, &imgbtn->coords, 0) ? LV_DESIGN_RES_COVER : LV_DESIGN
 212              		.loc 1 288 11 view .LVU57
 213 0020 042B     		cmp	r3, #4
 214 0022 03D0     		beq	.L22
 288:lvgl/src/lv_widgets/lv_imgbtn.c ****             cover = _lv_area_is_in(clip_area, &imgbtn->coords, 0) ? LV_DESIGN_RES_COVER : LV_DESIGN
 215              		.loc 1 288 48 discriminator 1 view .LVU58
 216 0024 012B     		cmp	r3, #1
 217 0026 01D0     		beq	.L22
 287:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(ext->act_cf == LV_IMG_CF_TRUE_COLOR || ext->act_cf == LV_IMG_CF_RAW) {
 218              		.loc 1 287 25 view .LVU59
 219 0028 0220     		movs	r0, #2
 220              	.LVL8:
 287:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(ext->act_cf == LV_IMG_CF_TRUE_COLOR || ext->act_cf == LV_IMG_CF_RAW) {
 221              		.loc 1 287 25 view .LVU60
 222 002a F4E7     		b	.L24
 223              	.LVL9:
 224              	.L22:
 289:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 225              		.loc 1 289 13 is_stmt 1 view .LVU61
 289:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 226              		.loc 1 289 21 is_stmt 0 view .LVU62
 227 002c 0022     		movs	r2, #0
 228 002e 04F11001 		add	r1, r4, #16
 229 0032 2846     		mov	r0, r5
 230              	.LVL10:
 289:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 231              		.loc 1 289 21 view .LVU63
 232 0034 FFF7FEFF 		bl	_lv_area_is_in
 233              	.LVL11:
 289:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
ARM GAS  D:\Temp\ccNxtRwL.s 			page 16


 234              		.loc 1 289 19 view .LVU64
 235 0038 08B1     		cbz	r0, .L37
 236 003a 0120     		movs	r0, #1
 237 003c EBE7     		b	.L24
 238              	.L37:
 239 003e 0220     		movs	r0, #2
 292:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 240              		.loc 1 292 9 is_stmt 1 view .LVU65
 292:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 241              		.loc 1 292 16 is_stmt 0 view .LVU66
 242 0040 E9E7     		b	.L24
 243              	.LVL12:
 244              	.L41:
 292:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 245              		.loc 1 292 16 view .LVU67
 246              	.LBE65:
 247              	.LBB66:
 296:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 248              		.loc 1 296 9 is_stmt 1 view .LVU68
 298:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 249              		.loc 1 298 9 view .LVU69
 250 0042 02A9     		add	r1, sp, #8
 251              	.LVL13:
 298:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 252              		.loc 1 298 9 is_stmt 0 view .LVU70
 253 0044 FFF7FEFF 		bl	lv_obj_get_coords
 254              	.LVL14:
 300:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_draw_rect_dsc_init(&bg_dsc);
 255              		.loc 1 300 9 is_stmt 1 view .LVU71
 301:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_obj_init_draw_rect_dsc(imgbtn, LV_IMGBTN_PART_MAIN, &bg_dsc);
 256              		.loc 1 301 9 view .LVU72
 257 0048 0FA8     		add	r0, sp, #60
 258 004a FFF7FEFF 		bl	lv_draw_rect_dsc_init
 259              	.LVL15:
 302:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 260              		.loc 1 302 9 view .LVU73
 261 004e 0FAA     		add	r2, sp, #60
 262 0050 0021     		movs	r1, #0
 263 0052 2046     		mov	r0, r4
 264 0054 FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 265              	.LVL16:
 305:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_dsc.border_opa = LV_OPA_TRANSP;
 266              		.loc 1 305 9 view .LVU74
 267              	.LBB67:
 268              	.LBI67:
 269              		.file 2 "lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h"
   1:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
   2:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** /**
   3:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * @file lv_obj_style_dec.h
   4:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *
   5:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  */
   6:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
   7:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** #ifndef LV_OBJ_STYLE_DEC_H
   8:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** #define LV_OBJ_STYLE_DEC_H
   9:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
  10:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** #ifdef __cplusplus
  11:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** extern "C" {
ARM GAS  D:\Temp\ccNxtRwL.s 			page 17


  12:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** #endif
  13:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
  14:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** /*********************
  15:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *      DEFINES
  16:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *********************/
  17:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
  18:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** /**
  19:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * Macro to declare the most important style set/get API functions.
  20:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *
  21:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * Get the value of a style property from an object in the object's current state
  22:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * -----------------------------------------------------------------------------
  23:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *  - Get the value of a style property from an object in the object's current state.
  24:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *  - Transition animation is taken into account.
  25:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not set in the object's styles check the parent(s) if the property can be 
  26:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *  - If still not found return a default value.
  27:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  28:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t w = lv_obj_get_style_border_width(btn1, LV_BTN_PART_MAIN);`
  29:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *
  30:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * Set a local style property for an object in a given state
  31:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------------------------
  32:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  33:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_set_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, 2);`
  34:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *
  35:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * Get a local style property's value of an object in a given state
  36:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * ----------------------------------------------------------------
  37:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *  - Return the best matching property in the given state.
  38:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *  - E.g. if `state` parameter is LV_STATE_PRESSED | LV_STATE_CHECKED` but the property defined on
  39:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *    `LV_STATE_PRESSED` and `LV_STATE_DEFAULT` the best matching state is `LV_STATE_PRESSED`
  40:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *    (because it has higher precedence) and it will be returned.
  41:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not found even in `LV_STATE_DEFAULT` `-1` is returned.
  42:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  43:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *      `//Type of result should be lv_style_int_t/lv_opa_t/lv_color_t/const void * according to th
  44:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t result;`
  45:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_get_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, &result);`
  46:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  47:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *
  48:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * Get the value from a style in a given state
  49:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * -------------------------------------------
  50:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * - The same rules applies to the return value then for "lv_obj_get_style_local_...()" above
  51:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * - For example
  52:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *      `int16_t weight = lv_style_get_border_width(&style1, LV_STATE_PRESSED, &result);`
  53:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  54:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
  55:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * Set a value in a style in a given state
  56:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------
  57:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  * - For example
  58:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_set_border_width(&style1, LV_STATE_PRESSED, 2);`
  59:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****  */
  60:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
  61:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  62:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  63:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  64:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****         return (value_type) _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);       
  65:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     }
  66:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
  67:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  68:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
ARM GAS  D:\Temp\ccNxtRwL.s 			page 18


  69:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  70:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****         return _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);                    
  71:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     }
  72:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
  73:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_scalar(prop_name, func_name, value_type, style_type)                  
  74:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  75:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  76:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  77:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     }
  78:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
  79:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_nonscalar(prop_name, func_name, value_type, style_type)               
  80:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  81:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  82:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  83:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     }
  84:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
  85:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  86:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  87:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  88:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  89:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     }
  90:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
  91:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  92:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  93:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  94:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  95:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     }
  96:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
  97:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** #define _LV_OBJ_STYLE_SET_GET_DECLARE(prop_name, func_name, value_type, style_type, scalar)        
  98:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     _OBJ_GET_STYLE_##scalar(prop_name, func_name, value_type, style_type)                          
  99:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_LOCAL_##scalar(prop_name, func_name, value_type, style_type)                    
 100:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_##scalar(prop_name, func_name, value_type, style_type)
 101:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** 
 102:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(RADIUS, radius, lv_style_int_t, _int, scalar)
 103:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 104:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 105:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_WIDTH, transform_width, lv_style_int_t, _int, scalar)
 106:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_HEIGHT, transform_height, lv_style_int_t, _int, scalar)
 107:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ANGLE, transform_angle, lv_style_int_t, _int, scalar)
 108:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ZOOM, transform_zoom, lv_style_int_t, _int, scalar)
 109:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OPA_SCALE, opa_scale, lv_opa_t, _opa, scalar)
 110:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_TOP, pad_top, lv_style_int_t, _int, scalar)
 111:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 112:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 113:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 114:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 115:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_TOP, margin_top, lv_style_int_t, _int, scalar)
 116:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_BOTTOM, margin_bottom, lv_style_int_t, _int, scalar)
 117:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_LEFT, margin_left, lv_style_int_t, _int, scalar)
 118:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(MARGIN_RIGHT, margin_right, lv_style_int_t, _int, scalar)
 119:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_BLEND_MODE, bg_blend_mode, lv_blend_mode_t, _int, scalar)
 120:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_MAIN_STOP, bg_main_stop, lv_style_int_t, _int, scalar)
 121:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_STOP, bg_grad_stop, lv_style_int_t, _int, scalar)
 122:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_DIR, bg_grad_dir, lv_grad_dir_t, _int, scalar)
 123:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_COLOR, bg_color, lv_color_t, _color, nonscalar)
 124:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_GRAD_COLOR, bg_grad_color, lv_color_t, _color, nonscalar)
 125:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BG_OPA, bg_opa, lv_opa_t, _opa, scalar)
ARM GAS  D:\Temp\ccNxtRwL.s 			page 19


 126:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_WIDTH, border_width, lv_style_int_t, _int, scalar)
 127:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_SIDE, border_side, lv_border_side_t, _int, scalar)
 128:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_BLEND_MODE, border_blend_mode, lv_blend_mode_t, _int, scalar)
 129:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_POST, border_post, bool, _int, scalar)
 270              		.loc 2 129 1 view .LVU75
 271              	.LBB68:
 272              		.loc 2 129 1 view .LVU76
 273 0058 3322     		movs	r2, #51
 274 005a 0021     		movs	r1, #0
 275 005c 2046     		mov	r0, r4
 276 005e FFF7FEFF 		bl	_lv_obj_get_style_int
 277              	.LVL17:
 278              		.loc 2 129 1 is_stmt 0 view .LVU77
 279              	.LBE68:
 280              	.LBE67:
 305:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_dsc.border_opa = LV_OPA_TRANSP;
 281              		.loc 1 305 11 view .LVU78
 282 0062 10B1     		cbz	r0, .L26
 306:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 283              		.loc 1 306 13 is_stmt 1 view .LVU79
 306:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 284              		.loc 1 306 31 is_stmt 0 view .LVU80
 285 0064 0023     		movs	r3, #0
 286 0066 8DF85030 		strb	r3, [sp, #80]
 287              	.L26:
 288              	.LBE66:
 289              	.LBB90:
 289:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 290              		.loc 1 289 19 view .LVU81
 291 006a 02A9     		add	r1, sp, #8
 292 006c 04AA     		add	r2, sp, #16
 293 006e 0823     		movs	r3, #8
 294              	.L27:
 295              	.LVL18:
 289:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 296              		.loc 1 289 19 view .LVU82
 297              	.LBE90:
 298              	.LBB91:
 299              	.LBB69:
 300              	.LBB70:
 301              	.LBB71:
 302              		.file 3 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_mem.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @file lv_mem.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifndef LV_MEM_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #define LV_MEM_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *********************/
ARM GAS  D:\Temp\ccNxtRwL.s 			page 20


  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <stdint.h>
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <stddef.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "lv_log.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "lv_types.h"
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <string.h>
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /*********************
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      DEFINES
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *********************/
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifndef LV_MEM_BUF_MAX_NUM
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #define LV_MEM_BUF_MAX_NUM    16
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**********************
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      TYPEDEFS
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  **********************/
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Heap information structure.
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef struct {
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t total_size; /**< Total heap size */
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_cnt;
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_size; /**< Size of available memory */
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_biggest_size;
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t used_cnt;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used */
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t used_pct; /**< Percentage used */
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation */
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** } lv_mem_monitor_t;
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef struct {
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     void * p;
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint16_t size;
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t used    : 1;
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** } lv_mem_buf_t;
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** extern lv_mem_buf_arr_t _lv_mem_buf;
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**********************
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * GLOBAL PROTOTYPES
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  **********************/
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_init(void);
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
ARM GAS  D:\Temp\ccNxtRwL.s 			page 21


  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_deinit(void);
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Allocate a memory dynamically
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param size size of the memory to allocate in bytes
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return pointer to the allocated memory
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * lv_mem_alloc(size_t size);
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Free an allocated data
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_free(const void * data);
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory.
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Its content will be copied to the new memory block and freed
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param new_size the desired new size in byte
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return pointer to the new memory
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Join the adjacent free memory blocks
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_defrag(void);
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** lv_res_t lv_mem_test(void);
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Give information about the work memory of dynamic allocation
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param mon_p pointer to a dm_mon_p variable,
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *              the result of the analysis will be stored here
 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Give the size of an allocated memory
 119:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory
 120:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return the size of data memory in bytes
 121:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 122:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** uint32_t _lv_mem_get_size(const void * data);
 123:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 124:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 125:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Get a temporal buffer with the given size.
 126:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param size the required size
 127:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 128:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * _lv_mem_buf_get(uint32_t size);
 129:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
ARM GAS  D:\Temp\ccNxtRwL.s 			page 22


 130:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 131:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Release a memory buffer
 132:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param p buffer to release
 133:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 134:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_buf_release(void * p);
 135:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 136:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 137:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Free all memory buffers
 138:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 139:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_buf_free_all(void);
 140:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 141:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** //! @cond Doxygen_Suppress
 142:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 143:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 144:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 145:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 146:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memcpy
 147:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 148:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 149:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 150:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 151:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void * _lv_memcpy(void * dst, const void * src, size_t len)
 152:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 153:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return memcpy(dst, src, len);
 154:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 155:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 156:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 157:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memcpy
 158:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 159:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 160:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 161:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 162:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void * _lv_memcpy_small(void * dst, const void * src, size_t len)
 163:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 164:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return memcpy(dst, src, len);
 165:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 166:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 167:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 168:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset
 169:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 170:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param v value to set [0..255]
 171:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 172:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 173:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset(void * dst, uint8_t v, size_t len)
 174:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 175:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, v, len);
 176:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 177:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 178:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 179:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 180:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 181:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 182:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 183:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset_00(void * dst, size_t len)
 184:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 185:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, 0x00, len);
 186:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
ARM GAS  D:\Temp\ccNxtRwL.s 			page 23


 187:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 188:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 189:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 190:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 191:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 192:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 193:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset_ff(void * dst, size_t len)
 194:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 195:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, 0xFF, len);
 196:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 197:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 198:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #else
 199:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 200:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 201:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 202:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 203:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 204:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 205:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * _lv_memcpy(void * dst, const void * src, size_t len);
 206:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 207:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 208:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 209:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 210:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 211:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 212:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 213:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * _lv_memcpy_small(void * dst, const void * src, size_t le
 214:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 216:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 217:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     while(len) {
 303              		.loc 3 218 10 view .LVU83
 304 0070 2BB1     		cbz	r3, .L43
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 305              		.loc 3 219 9 is_stmt 1 view .LVU84
 306              		.loc 3 219 15 is_stmt 0 view .LVU85
 307 0072 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 308              	.LVL19:
 309              		.loc 3 219 13 view .LVU86
 310 0076 02F8010B 		strb	r0, [r2], #1
 311              	.LVL20:
 220:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 312              		.loc 3 220 9 is_stmt 1 view .LVU87
 221:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         s8++;
 313              		.loc 3 221 9 view .LVU88
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         len--;
 314              		.loc 3 222 9 view .LVU89
 315              		.loc 3 222 12 is_stmt 0 view .LVU90
 316 007a 013B     		subs	r3, r3, #1
 317              	.LVL21:
 318              		.loc 3 222 12 view .LVU91
 319 007c F8E7     		b	.L27
 320              	.L43:
 223:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 224:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 225:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return dst;
ARM GAS  D:\Temp\ccNxtRwL.s 			page 24


 321              		.loc 3 225 5 is_stmt 1 view .LVU92
 322              	.LVL22:
 323              		.loc 3 225 5 is_stmt 0 view .LVU93
 324              	.LBE71:
 325              	.LBE70:
 326              	.LBE69:
 311:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.x2 += lv_obj_get_style_pad_right(imgbtn, LV_IMGBTN_PART_MAIN);
 327              		.loc 1 311 9 is_stmt 1 view .LVU94
 328              	.LBB72:
 329              	.LBI72:
 112:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 330              		.loc 2 112 1 view .LVU95
 331              	.LBB73:
 112:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 332              		.loc 2 112 1 view .LVU96
 333 007e 1222     		movs	r2, #18
 334 0080 0021     		movs	r1, #0
 335 0082 2046     		mov	r0, r4
 336 0084 FFF7FEFF 		bl	_lv_obj_get_style_int
 337              	.LVL23:
 112:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 338              		.loc 2 112 1 is_stmt 0 view .LVU97
 339              	.LBE73:
 340              	.LBE72:
 311:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.x2 += lv_obj_get_style_pad_right(imgbtn, LV_IMGBTN_PART_MAIN);
 341              		.loc 1 311 25 view .LVU98
 342 0088 80B2     		uxth	r0, r0
 311:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.x2 += lv_obj_get_style_pad_right(imgbtn, LV_IMGBTN_PART_MAIN);
 343              		.loc 1 311 22 view .LVU99
 344 008a BDF81030 		ldrh	r3, [sp, #16]
 345 008e 1B1A     		subs	r3, r3, r0
 346 0090 ADF81030 		strh	r3, [sp, #16]	@ movhi
 312:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.y1 -= lv_obj_get_style_pad_top(imgbtn, LV_IMGBTN_PART_MAIN);
 347              		.loc 1 312 9 is_stmt 1 view .LVU100
 348              	.LVL24:
 349              	.LBB74:
 350              	.LBI74:
 113:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 351              		.loc 2 113 1 view .LVU101
 352              	.LBB75:
 113:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 353              		.loc 2 113 1 view .LVU102
 354 0094 1322     		movs	r2, #19
 355 0096 0021     		movs	r1, #0
 356 0098 2046     		mov	r0, r4
 357 009a FFF7FEFF 		bl	_lv_obj_get_style_int
 358              	.LVL25:
 113:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 359              		.loc 2 113 1 is_stmt 0 view .LVU103
 360              	.LBE75:
 361              	.LBE74:
 312:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.y1 -= lv_obj_get_style_pad_top(imgbtn, LV_IMGBTN_PART_MAIN);
 362              		.loc 1 312 22 view .LVU104
 363 009e BDF81430 		ldrh	r3, [sp, #20]
 364 00a2 13FA80F0 		uxtah	r0, r3, r0
 365 00a6 ADF81400 		strh	r0, [sp, #20]	@ movhi
 313:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.y2 += lv_obj_get_style_pad_bottom(imgbtn, LV_IMGBTN_PART_MAIN);
ARM GAS  D:\Temp\ccNxtRwL.s 			page 25


 366              		.loc 1 313 9 is_stmt 1 view .LVU105
 367              	.LVL26:
 368              	.LBB76:
 369              	.LBI76:
 110:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 370              		.loc 2 110 1 view .LVU106
 371              	.LBB77:
 110:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 372              		.loc 2 110 1 view .LVU107
 373 00aa 1022     		movs	r2, #16
 374 00ac 0021     		movs	r1, #0
 375 00ae 2046     		mov	r0, r4
 376 00b0 FFF7FEFF 		bl	_lv_obj_get_style_int
 377              	.LVL27:
 110:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 378              		.loc 2 110 1 is_stmt 0 view .LVU108
 379              	.LBE77:
 380              	.LBE76:
 313:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.y2 += lv_obj_get_style_pad_bottom(imgbtn, LV_IMGBTN_PART_MAIN);
 381              		.loc 1 313 25 view .LVU109
 382 00b4 80B2     		uxth	r0, r0
 313:lvgl/src/lv_widgets/lv_imgbtn.c ****         bg_coords.y2 += lv_obj_get_style_pad_bottom(imgbtn, LV_IMGBTN_PART_MAIN);
 383              		.loc 1 313 22 view .LVU110
 384 00b6 BDF81230 		ldrh	r3, [sp, #18]
 385 00ba 1B1A     		subs	r3, r3, r0
 386 00bc ADF81230 		strh	r3, [sp, #18]	@ movhi
 314:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 387              		.loc 1 314 9 is_stmt 1 view .LVU111
 388              	.LVL28:
 389              	.LBB78:
 390              	.LBI78:
 111:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 391              		.loc 2 111 1 view .LVU112
 392              	.LBB79:
 111:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 393              		.loc 2 111 1 view .LVU113
 394 00c0 1122     		movs	r2, #17
 395 00c2 0021     		movs	r1, #0
 396 00c4 2046     		mov	r0, r4
 397 00c6 FFF7FEFF 		bl	_lv_obj_get_style_int
 398              	.LVL29:
 111:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 399              		.loc 2 111 1 is_stmt 0 view .LVU114
 400              	.LBE79:
 401              	.LBE78:
 314:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 402              		.loc 1 314 22 view .LVU115
 403 00ca BDF81630 		ldrh	r3, [sp, #22]
 404 00ce 13FA80F0 		uxtah	r0, r3, r0
 405 00d2 ADF81600 		strh	r0, [sp, #22]	@ movhi
 316:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 406              		.loc 1 316 9 is_stmt 1 view .LVU116
 407 00d6 0FAA     		add	r2, sp, #60
 408 00d8 2946     		mov	r1, r5
 409 00da 04A8     		add	r0, sp, #16
 410 00dc FFF7FEFF 		bl	lv_draw_rect
 411              	.LVL30:
ARM GAS  D:\Temp\ccNxtRwL.s 			page 26


 318:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_draw_mask_radius_param_t * mp = _lv_mem_buf_get(sizeof(lv_draw_mask_radius_param_t))
 412              		.loc 1 318 9 view .LVU117
 413              	.LBB80:
 414              	.LBI80:
 103:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 415              		.loc 2 103 1 view .LVU118
 416              	.LBB81:
 103:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 417              		.loc 2 103 1 view .LVU119
 418 00e0 0222     		movs	r2, #2
 419 00e2 0021     		movs	r1, #0
 420 00e4 2046     		mov	r0, r4
 421 00e6 FFF7FEFF 		bl	_lv_obj_get_style_int
 422              	.LVL31:
 103:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 423              		.loc 2 103 1 is_stmt 0 view .LVU120
 424              	.LBE81:
 425              	.LBE80:
 318:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_draw_mask_radius_param_t * mp = _lv_mem_buf_get(sizeof(lv_draw_mask_radius_param_t))
 426              		.loc 1 318 11 view .LVU121
 427 00ea 80B9     		cbnz	r0, .L44
 428              	.L29:
 329:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_btn_state_t state     = suggest_state(imgbtn, lv_imgbtn_get_state(imgbtn));
 429              		.loc 1 329 9 is_stmt 1 view .LVU122
 329:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_btn_state_t state     = suggest_state(imgbtn, lv_imgbtn_get_state(imgbtn));
 430              		.loc 1 329 36 is_stmt 0 view .LVU123
 431 00ec 2046     		mov	r0, r4
 432 00ee FFF7FEFF 		bl	lv_obj_get_ext_attr
 433              	.LVL32:
 434 00f2 0646     		mov	r6, r0
 435              	.LVL33:
 330:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 436              		.loc 1 330 9 is_stmt 1 view .LVU124
 437              	.LBB82:
 438              	.LBI82:
 439              		.file 4 "lvgl/src/lv_widgets/lv_imgbtn.h"
   1:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
   2:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @file lv_imgbtn.h
   3:lvgl/src/lv_widgets/lv_imgbtn.h ****  *
   4:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
   5:lvgl/src/lv_widgets/lv_imgbtn.h **** 
   6:lvgl/src/lv_widgets/lv_imgbtn.h **** #ifndef LV_IMGBTN_H
   7:lvgl/src/lv_widgets/lv_imgbtn.h **** #define LV_IMGBTN_H
   8:lvgl/src/lv_widgets/lv_imgbtn.h **** 
   9:lvgl/src/lv_widgets/lv_imgbtn.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/lv_imgbtn.h **** extern "C" {
  11:lvgl/src/lv_widgets/lv_imgbtn.h **** #endif
  12:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  13:lvgl/src/lv_widgets/lv_imgbtn.h **** /*********************
  14:lvgl/src/lv_widgets/lv_imgbtn.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/lv_imgbtn.h ****  *********************/
  16:lvgl/src/lv_widgets/lv_imgbtn.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  18:lvgl/src/lv_widgets/lv_imgbtn.h **** #if LV_USE_IMGBTN != 0
  19:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  20:lvgl/src/lv_widgets/lv_imgbtn.h **** /*Testing of dependencies*/
  21:lvgl/src/lv_widgets/lv_imgbtn.h **** #if LV_USE_BTN == 0
ARM GAS  D:\Temp\ccNxtRwL.s 			page 27


  22:lvgl/src/lv_widgets/lv_imgbtn.h **** #error "lv_imgbtn: lv_btn is required. Enable it in lv_conf.h (LV_USE_BTN 1)"
  23:lvgl/src/lv_widgets/lv_imgbtn.h **** #endif
  24:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  25:lvgl/src/lv_widgets/lv_imgbtn.h **** #include "../lv_core/lv_obj.h"
  26:lvgl/src/lv_widgets/lv_imgbtn.h **** #include "lv_btn.h"
  27:lvgl/src/lv_widgets/lv_imgbtn.h **** #include "../lv_draw/lv_draw_img.h"
  28:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  29:lvgl/src/lv_widgets/lv_imgbtn.h **** /*********************
  30:lvgl/src/lv_widgets/lv_imgbtn.h ****  *      DEFINES
  31:lvgl/src/lv_widgets/lv_imgbtn.h ****  *********************/
  32:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  33:lvgl/src/lv_widgets/lv_imgbtn.h **** /**********************
  34:lvgl/src/lv_widgets/lv_imgbtn.h ****  *      TYPEDEFS
  35:lvgl/src/lv_widgets/lv_imgbtn.h ****  **********************/
  36:lvgl/src/lv_widgets/lv_imgbtn.h **** /*Data of image button*/
  37:lvgl/src/lv_widgets/lv_imgbtn.h **** typedef struct {
  38:lvgl/src/lv_widgets/lv_imgbtn.h ****     lv_btn_ext_t btn; /*Ext. of ancestor*/
  39:lvgl/src/lv_widgets/lv_imgbtn.h ****     /*New data for this type */
  40:lvgl/src/lv_widgets/lv_imgbtn.h ****     const void * img_src_mid[_LV_BTN_STATE_LAST];   /*Store center images to each state*/
  41:lvgl/src/lv_widgets/lv_imgbtn.h **** #if LV_IMGBTN_TILED
  42:lvgl/src/lv_widgets/lv_imgbtn.h ****     const void * img_src_left[_LV_BTN_STATE_LAST];  /*Store left side images to each state*/
  43:lvgl/src/lv_widgets/lv_imgbtn.h ****     const void * img_src_right[_LV_BTN_STATE_LAST]; /*Store right side images to each state*/
  44:lvgl/src/lv_widgets/lv_imgbtn.h **** #endif
  45:lvgl/src/lv_widgets/lv_imgbtn.h ****     lv_img_cf_t act_cf; /*Color format of the currently active image*/
  46:lvgl/src/lv_widgets/lv_imgbtn.h ****     uint8_t tiled   : 1; /*1: the middle src will be repeated to fill the user defined width*/
  47:lvgl/src/lv_widgets/lv_imgbtn.h **** } lv_imgbtn_ext_t;
  48:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  49:lvgl/src/lv_widgets/lv_imgbtn.h **** /*Parts of the image button*/
  50:lvgl/src/lv_widgets/lv_imgbtn.h **** enum {
  51:lvgl/src/lv_widgets/lv_imgbtn.h ****     LV_IMGBTN_PART_MAIN = LV_BTN_PART_MAIN,
  52:lvgl/src/lv_widgets/lv_imgbtn.h **** };
  53:lvgl/src/lv_widgets/lv_imgbtn.h **** typedef uint8_t lv_imgbtn_part_t;
  54:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  55:lvgl/src/lv_widgets/lv_imgbtn.h **** /**********************
  56:lvgl/src/lv_widgets/lv_imgbtn.h ****  * GLOBAL PROTOTYPES
  57:lvgl/src/lv_widgets/lv_imgbtn.h ****  **********************/
  58:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  59:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
  60:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Create a image button objects
  61:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param par pointer to an object, it will be the parent of the new image button
  62:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param copy pointer to a image button object, if not NULL then the new object will be copied fro
  63:lvgl/src/lv_widgets/lv_imgbtn.h ****  * it
  64:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @return pointer to the created image button
  65:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
  66:lvgl/src/lv_widgets/lv_imgbtn.h **** lv_obj_t * lv_imgbtn_create(lv_obj_t * par, const lv_obj_t * copy);
  67:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  68:lvgl/src/lv_widgets/lv_imgbtn.h **** /*======================
  69:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Add/remove functions
  70:lvgl/src/lv_widgets/lv_imgbtn.h ****  *=====================*/
  71:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  72:lvgl/src/lv_widgets/lv_imgbtn.h **** /*=====================
  73:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Setter functions
  74:lvgl/src/lv_widgets/lv_imgbtn.h ****  *====================*/
  75:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  76:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
  77:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Set images for a state of the image button
  78:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param imgbtn pointer to an image button object
ARM GAS  D:\Temp\ccNxtRwL.s 			page 28


  79:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param state for which state set the new image (from `lv_btn_state_t`) `
  80:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param src pointer to an image source (a C array or path to a file)
  81:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
  82:lvgl/src/lv_widgets/lv_imgbtn.h **** void lv_imgbtn_set_src(lv_obj_t * imgbtn, lv_btn_state_t state, const void * src);
  83:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  84:lvgl/src/lv_widgets/lv_imgbtn.h **** #if LV_IMGBTN_TILED
  85:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
  86:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Set images for a state of the image button
  87:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param imgbtn pointer to an image button object
  88:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param state for which state set the new image (from `lv_btn_state_t`) `
  89:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param src_left pointer to an image source for the left side of the button (a C array or path to
  90:lvgl/src/lv_widgets/lv_imgbtn.h ****  * a file)
  91:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param src_mid pointer to an image source for the middle of the button (ideally 1px wide) (a C
  92:lvgl/src/lv_widgets/lv_imgbtn.h ****  * array or path to a file)
  93:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param src_right pointer to an image source for the right side of the button (a C array or path
  94:lvgl/src/lv_widgets/lv_imgbtn.h ****  * to a file)
  95:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
  96:lvgl/src/lv_widgets/lv_imgbtn.h **** void lv_imgbtn_set_src_tiled(lv_obj_t * imgbtn, lv_btn_state_t state, const void * src_left, const 
  97:lvgl/src/lv_widgets/lv_imgbtn.h ****                              const void * src_right);
  98:lvgl/src/lv_widgets/lv_imgbtn.h **** 
  99:lvgl/src/lv_widgets/lv_imgbtn.h **** #endif
 100:lvgl/src/lv_widgets/lv_imgbtn.h **** 
 101:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
 102:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Set the state of the image button
 103:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param imgbtn pointer to an image button object
 104:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param state the new state of the button (from lv_btn_state_t enum)
 105:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
 106:lvgl/src/lv_widgets/lv_imgbtn.h **** void lv_imgbtn_set_state(lv_obj_t * imgbtn, lv_btn_state_t state);
 107:lvgl/src/lv_widgets/lv_imgbtn.h **** 
 108:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
 109:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Toggle the state of the image button (ON->OFF, OFF->ON)
 110:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param imgbtn pointer to a image button object
 111:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
 112:lvgl/src/lv_widgets/lv_imgbtn.h **** void lv_imgbtn_toggle(lv_obj_t * imgbtn);
 113:lvgl/src/lv_widgets/lv_imgbtn.h **** 
 114:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
 115:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Enable the toggled states. On release the button will change from/to toggled state.
 116:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param imgbtn pointer to an image button object
 117:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param tgl true: enable toggled states, false: disable
 118:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
 119:lvgl/src/lv_widgets/lv_imgbtn.h **** static inline void lv_imgbtn_set_checkable(lv_obj_t * imgbtn, bool tgl)
 120:lvgl/src/lv_widgets/lv_imgbtn.h **** {
 121:lvgl/src/lv_widgets/lv_imgbtn.h ****     lv_btn_set_checkable(imgbtn, tgl);
 122:lvgl/src/lv_widgets/lv_imgbtn.h **** }
 123:lvgl/src/lv_widgets/lv_imgbtn.h **** 
 124:lvgl/src/lv_widgets/lv_imgbtn.h **** /*=====================
 125:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Getter functions
 126:lvgl/src/lv_widgets/lv_imgbtn.h ****  *====================*/
 127:lvgl/src/lv_widgets/lv_imgbtn.h **** 
 128:lvgl/src/lv_widgets/lv_imgbtn.h **** #if LV_IMGBTN_TILED == 0
 129:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
 130:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Get the images in a given state
 131:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param imgbtn pointer to an image button object
 132:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param state the state where to get the image (from `lv_btn_state_t`) `
 133:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @return pointer to an image source (a C array or path to a file)
 134:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
 135:lvgl/src/lv_widgets/lv_imgbtn.h **** const void * lv_imgbtn_get_src(lv_obj_t * imgbtn, lv_btn_state_t state);
ARM GAS  D:\Temp\ccNxtRwL.s 			page 29


 136:lvgl/src/lv_widgets/lv_imgbtn.h **** 
 137:lvgl/src/lv_widgets/lv_imgbtn.h **** #else
 138:lvgl/src/lv_widgets/lv_imgbtn.h **** 
 139:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
 140:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Get the left image in a given state
 141:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param imgbtn pointer to an image button object
 142:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param state the state where to get the image (from `lv_btn_state_t`) `
 143:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @return pointer to the left image source (a C array or path to a file)
 144:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
 145:lvgl/src/lv_widgets/lv_imgbtn.h **** const void * lv_imgbtn_get_src_left(lv_obj_t * imgbtn, lv_btn_state_t state);
 146:lvgl/src/lv_widgets/lv_imgbtn.h **** 
 147:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
 148:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Get the middle image in a given state
 149:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param imgbtn pointer to an image button object
 150:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param state the state where to get the image (from `lv_btn_state_t`) `
 151:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @return pointer to the middle image source (a C array or path to a file)
 152:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
 153:lvgl/src/lv_widgets/lv_imgbtn.h **** const void * lv_imgbtn_get_src_middle(lv_obj_t * imgbtn, lv_btn_state_t state);
 154:lvgl/src/lv_widgets/lv_imgbtn.h **** 
 155:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
 156:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Get the right image in a given state
 157:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param imgbtn pointer to an image button object
 158:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param state the state where to get the image (from `lv_btn_state_t`) `
 159:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @return pointer to the left image source (a C array or path to a file)
 160:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
 161:lvgl/src/lv_widgets/lv_imgbtn.h **** const void * lv_imgbtn_get_src_right(lv_obj_t * imgbtn, lv_btn_state_t state);
 162:lvgl/src/lv_widgets/lv_imgbtn.h **** 
 163:lvgl/src/lv_widgets/lv_imgbtn.h **** #endif
 164:lvgl/src/lv_widgets/lv_imgbtn.h **** /**
 165:lvgl/src/lv_widgets/lv_imgbtn.h ****  * Get the current state of the image button
 166:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @param imgbtn pointer to a image button object
 167:lvgl/src/lv_widgets/lv_imgbtn.h ****  * @return the state of the button (from lv_btn_state_t enum)
 168:lvgl/src/lv_widgets/lv_imgbtn.h ****  */
 169:lvgl/src/lv_widgets/lv_imgbtn.h **** static inline lv_btn_state_t lv_imgbtn_get_state(const lv_obj_t * imgbtn)
 440              		.loc 4 169 30 view .LVU125
 441              	.LBB83:
 170:lvgl/src/lv_widgets/lv_imgbtn.h **** {
 171:lvgl/src/lv_widgets/lv_imgbtn.h ****     return lv_btn_get_state(imgbtn);
 442              		.loc 4 171 5 view .LVU126
 443              		.loc 4 171 12 is_stmt 0 view .LVU127
 444 00f4 2046     		mov	r0, r4
 445              	.LVL34:
 446              		.loc 4 171 12 view .LVU128
 447 00f6 FFF7FEFF 		bl	lv_btn_get_state
 448              	.LVL35:
 449              		.loc 4 171 12 view .LVU129
 450              	.LBE83:
 451              	.LBE82:
 330:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 452              		.loc 1 330 36 view .LVU130
 453 00fa 0146     		mov	r1, r0
 454 00fc 2046     		mov	r0, r4
 455 00fe FFF7FEFF 		bl	suggest_state
 456              	.LVL36:
 333:lvgl/src/lv_widgets/lv_imgbtn.c ****             const void * src = ext->img_src_mid[state];
 457              		.loc 1 333 9 is_stmt 1 view .LVU131
 333:lvgl/src/lv_widgets/lv_imgbtn.c ****             const void * src = ext->img_src_mid[state];
ARM GAS  D:\Temp\ccNxtRwL.s 			page 30


 458              		.loc 1 333 12 is_stmt 0 view .LVU132
 459 0102 737F     		ldrb	r3, [r6, #29]	@ zero_extendqisi2
 333:lvgl/src/lv_widgets/lv_imgbtn.c ****             const void * src = ext->img_src_mid[state];
 460              		.loc 1 333 11 view .LVU133
 461 0104 13F0010F 		tst	r3, #1
 462 0108 16D0     		beq	.L45
 463              	.LVL37:
 464              	.L30:
 424:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 465              		.loc 1 424 9 is_stmt 1 discriminator 3 view .LVU134
 466              	.LBE91:
 454:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 467              		.loc 1 454 12 is_stmt 0 discriminator 3 view .LVU135
 468 010a 0020     		movs	r0, #0
 469 010c 83E7     		b	.L24
 470              	.L44:
 471              	.LBB92:
 472              	.LBB84:
 319:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 473              		.loc 1 319 13 is_stmt 1 view .LVU136
 319:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 474              		.loc 1 319 48 is_stmt 0 view .LVU137
 475 010e 1C20     		movs	r0, #28
 476 0110 FFF7FEFF 		bl	_lv_mem_buf_get
 477              	.LVL38:
 478 0114 0646     		mov	r6, r0
 479              	.LVL39:
 321:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 480              		.loc 1 321 13 is_stmt 1 view .LVU138
 481              	.LBB85:
 482              	.LBI85:
 102:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 483              		.loc 2 102 1 view .LVU139
 484              	.LBB86:
 102:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 485              		.loc 2 102 1 view .LVU140
 486 0116 0122     		movs	r2, #1
 487 0118 0021     		movs	r1, #0
 488 011a 2046     		mov	r0, r4
 489              	.LVL40:
 102:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 490              		.loc 2 102 1 is_stmt 0 view .LVU141
 491 011c FFF7FEFF 		bl	_lv_obj_get_style_int
 492              	.LVL41:
 102:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 493              		.loc 2 102 1 view .LVU142
 494              	.LBE86:
 495              	.LBE85:
 323:lvgl/src/lv_widgets/lv_imgbtn.c ****             /*Add the mask and use `img+8` as custom id. Don't use `obj` directly because it might 
 496              		.loc 1 323 13 is_stmt 1 view .LVU143
 497 0120 0023     		movs	r3, #0
 498 0122 0246     		mov	r2, r0
 499 0124 04A9     		add	r1, sp, #16
 500 0126 3046     		mov	r0, r6
 501              	.LVL42:
 323:lvgl/src/lv_widgets/lv_imgbtn.c ****             /*Add the mask and use `img+8` as custom id. Don't use `obj` directly because it might 
 502              		.loc 1 323 13 is_stmt 0 view .LVU144
ARM GAS  D:\Temp\ccNxtRwL.s 			page 31


 503 0128 FFF7FEFF 		bl	lv_draw_mask_radius_init
 504              	.LVL43:
 325:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 505              		.loc 1 325 13 is_stmt 1 view .LVU145
 506 012c 04F51871 		add	r1, r4, #608
 507 0130 3046     		mov	r0, r6
 508 0132 FFF7FEFF 		bl	lv_draw_mask_add
 509              	.LVL44:
 510 0136 D9E7     		b	.L29
 511              	.LVL45:
 512              	.L45:
 325:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 513              		.loc 1 325 13 is_stmt 0 view .LVU146
 514              	.LBE84:
 515              	.LBB87:
 334:lvgl/src/lv_widgets/lv_imgbtn.c ****             if(lv_img_src_get_type(src) == LV_IMG_SRC_SYMBOL) {
 516              		.loc 1 334 13 is_stmt 1 view .LVU147
 334:lvgl/src/lv_widgets/lv_imgbtn.c ****             if(lv_img_src_get_type(src) == LV_IMG_SRC_SYMBOL) {
 517              		.loc 1 334 26 is_stmt 0 view .LVU148
 518 0138 06EB8006 		add	r6, r6, r0, lsl #2
 519              	.LVL46:
 334:lvgl/src/lv_widgets/lv_imgbtn.c ****             if(lv_img_src_get_type(src) == LV_IMG_SRC_SYMBOL) {
 520              		.loc 1 334 26 view .LVU149
 521 013c 7668     		ldr	r6, [r6, #4]
 522              	.LVL47:
 335:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_label_dsc_t label_dsc;
 523              		.loc 1 335 13 is_stmt 1 view .LVU150
 335:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_label_dsc_t label_dsc;
 524              		.loc 1 335 16 is_stmt 0 view .LVU151
 525 013e 3046     		mov	r0, r6
 526              	.LVL48:
 335:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_label_dsc_t label_dsc;
 527              		.loc 1 335 16 view .LVU152
 528 0140 FFF7FEFF 		bl	lv_img_src_get_type
 529              	.LVL49:
 335:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_label_dsc_t label_dsc;
 530              		.loc 1 335 15 view .LVU153
 531 0144 0228     		cmp	r0, #2
 532 0146 0FD0     		beq	.L46
 533              	.LBB88:
 342:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_img_dsc_init(&img_dsc);
 534              		.loc 1 342 17 is_stmt 1 discriminator 2 view .LVU154
 343:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_obj_init_draw_img_dsc(imgbtn, LV_IMGBTN_PART_MAIN, &img_dsc);
 535              		.loc 1 343 17 discriminator 2 view .LVU155
 536 0148 06A8     		add	r0, sp, #24
 537 014a FFF7FEFF 		bl	lv_draw_img_dsc_init
 538              	.LVL50:
 344:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_img(&imgbtn->coords, clip_area, src, &img_dsc);
 539              		.loc 1 344 17 discriminator 2 view .LVU156
 540 014e 06AA     		add	r2, sp, #24
 541 0150 0021     		movs	r1, #0
 542 0152 2046     		mov	r0, r4
 543 0154 FFF7FEFF 		bl	lv_obj_init_draw_img_dsc
 544              	.LVL51:
 345:lvgl/src/lv_widgets/lv_imgbtn.c ****             }
 545              		.loc 1 345 17 discriminator 2 view .LVU157
 546 0158 06AB     		add	r3, sp, #24
ARM GAS  D:\Temp\ccNxtRwL.s 			page 32


 547 015a 3246     		mov	r2, r6
 548 015c 2946     		mov	r1, r5
 549 015e 04F11000 		add	r0, r4, #16
 550 0162 FFF7FEFF 		bl	lv_draw_img
 551              	.LVL52:
 552 0166 D0E7     		b	.L30
 553              	.L46:
 345:lvgl/src/lv_widgets/lv_imgbtn.c ****             }
 554              		.loc 1 345 17 is_stmt 0 discriminator 2 view .LVU158
 555              	.LBE88:
 556              	.LBB89:
 336:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_label_dsc_init(&label_dsc);
 557              		.loc 1 336 17 is_stmt 1 view .LVU159
 337:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_obj_init_draw_label_dsc(imgbtn, LV_IMGBTN_PART_MAIN, &label_dsc);
 558              		.loc 1 337 17 view .LVU160
 559 0168 06A8     		add	r0, sp, #24
 560 016a FFF7FEFF 		bl	lv_draw_label_dsc_init
 561              	.LVL53:
 338:lvgl/src/lv_widgets/lv_imgbtn.c ****                 lv_draw_label(&imgbtn->coords, clip_area, &label_dsc, src, NULL);
 562              		.loc 1 338 17 view .LVU161
 563 016e 06AA     		add	r2, sp, #24
 564 0170 0021     		movs	r1, #0
 565 0172 2046     		mov	r0, r4
 566 0174 FFF7FEFF 		bl	lv_obj_init_draw_label_dsc
 567              	.LVL54:
 339:lvgl/src/lv_widgets/lv_imgbtn.c ****             }
 568              		.loc 1 339 17 view .LVU162
 569 0178 0023     		movs	r3, #0
 570 017a 0093     		str	r3, [sp]
 571 017c 3346     		mov	r3, r6
 572 017e 06AA     		add	r2, sp, #24
 573 0180 2946     		mov	r1, r5
 574 0182 04F11000 		add	r0, r4, #16
 575 0186 FFF7FEFF 		bl	lv_draw_label
 576              	.LVL55:
 577              	.LBE89:
 578 018a BEE7     		b	.L30
 579              	.LVL56:
 580              	.L42:
 339:lvgl/src/lv_widgets/lv_imgbtn.c ****             }
 581              		.loc 1 339 17 is_stmt 0 view .LVU163
 582              	.LBE87:
 583              	.LBE92:
 584              	.LBB93:
 428:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_draw_mask_radius_param_t * param = lv_draw_mask_remove_custom(imgbtn + 8);
 585              		.loc 1 428 9 is_stmt 1 view .LVU164
 586              	.LBB94:
 587              	.LBI94:
 103:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 588              		.loc 2 103 1 view .LVU165
 589              	.LBB95:
 103:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 590              		.loc 2 103 1 view .LVU166
 591 018c 0222     		movs	r2, #2
 592              	.LVL57:
 103:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 593              		.loc 2 103 1 is_stmt 0 view .LVU167
ARM GAS  D:\Temp\ccNxtRwL.s 			page 33


 594 018e 0021     		movs	r1, #0
 595              	.LVL58:
 103:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 596              		.loc 2 103 1 view .LVU168
 597 0190 FFF7FEFF 		bl	_lv_obj_get_style_int
 598              	.LVL59:
 103:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 599              		.loc 2 103 1 view .LVU169
 600              	.LBE95:
 601              	.LBE94:
 428:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_draw_mask_radius_param_t * param = lv_draw_mask_remove_custom(imgbtn + 8);
 602              		.loc 1 428 11 view .LVU170
 603 0194 50B9     		cbnz	r0, .L47
 604              	.L32:
 433:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_draw_rect_dsc_init(&draw_dsc);
 605              		.loc 1 433 9 is_stmt 1 view .LVU171
 434:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 606              		.loc 1 434 9 view .LVU172
 607 0196 0FA8     		add	r0, sp, #60
 608 0198 FFF7FEFF 		bl	lv_draw_rect_dsc_init
 609              	.LVL60:
 437:lvgl/src/lv_widgets/lv_imgbtn.c ****             draw_dsc.bg_opa = LV_OPA_TRANSP;
 610              		.loc 1 437 9 view .LVU173
 611              	.LBB96:
 612              	.LBI96:
 613              		.loc 2 129 1 view .LVU174
 614              	.LBB97:
 615              		.loc 2 129 1 view .LVU175
 616 019c 3322     		movs	r2, #51
 617 019e 0021     		movs	r1, #0
 618 01a0 2046     		mov	r0, r4
 619 01a2 FFF7FEFF 		bl	_lv_obj_get_style_int
 620              	.LVL61:
 621              		.loc 2 129 1 is_stmt 0 view .LVU176
 622              	.LBE97:
 623              	.LBE96:
 437:lvgl/src/lv_widgets/lv_imgbtn.c ****             draw_dsc.bg_opa = LV_OPA_TRANSP;
 624              		.loc 1 437 11 view .LVU177
 625 01a6 40B9     		cbnz	r0, .L48
 626              	.L33:
 627              	.LBE93:
 454:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 628              		.loc 1 454 12 discriminator 4 view .LVU178
 629 01a8 0020     		movs	r0, #0
 630 01aa 34E7     		b	.L24
 631              	.L47:
 632              	.LBB116:
 633              	.LBB98:
 429:lvgl/src/lv_widgets/lv_imgbtn.c ****             _lv_mem_buf_release(param);
 634              		.loc 1 429 13 is_stmt 1 view .LVU179
 429:lvgl/src/lv_widgets/lv_imgbtn.c ****             _lv_mem_buf_release(param);
 635              		.loc 1 429 51 is_stmt 0 view .LVU180
 636 01ac 04F51870 		add	r0, r4, #608
 637 01b0 FFF7FEFF 		bl	lv_draw_mask_remove_custom
 638              	.LVL62:
 430:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 639              		.loc 1 430 13 is_stmt 1 view .LVU181
ARM GAS  D:\Temp\ccNxtRwL.s 			page 34


 640 01b4 FFF7FEFF 		bl	_lv_mem_buf_release
 641              	.LVL63:
 430:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 642              		.loc 1 430 13 is_stmt 0 view .LVU182
 643 01b8 EDE7     		b	.L32
 644              	.L48:
 430:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 645              		.loc 1 430 13 view .LVU183
 646              	.LBE98:
 647              	.LBB99:
 438:lvgl/src/lv_widgets/lv_imgbtn.c ****             draw_dsc.pattern_opa = LV_OPA_TRANSP;
 648              		.loc 1 438 13 is_stmt 1 view .LVU184
 438:lvgl/src/lv_widgets/lv_imgbtn.c ****             draw_dsc.pattern_opa = LV_OPA_TRANSP;
 649              		.loc 1 438 29 is_stmt 0 view .LVU185
 650 01ba 0021     		movs	r1, #0
 651 01bc 8DF84810 		strb	r1, [sp, #72]
 439:lvgl/src/lv_widgets/lv_imgbtn.c ****             draw_dsc.shadow_opa = LV_OPA_TRANSP;
 652              		.loc 1 439 13 is_stmt 1 view .LVU186
 439:lvgl/src/lv_widgets/lv_imgbtn.c ****             draw_dsc.shadow_opa = LV_OPA_TRANSP;
 653              		.loc 1 439 34 is_stmt 0 view .LVU187
 654 01c0 8DF87210 		strb	r1, [sp, #114]
 440:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_obj_init_draw_rect_dsc(imgbtn, LV_OBJ_PART_MAIN, &draw_dsc);
 655              		.loc 1 440 13 is_stmt 1 view .LVU188
 440:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_obj_init_draw_rect_dsc(imgbtn, LV_OBJ_PART_MAIN, &draw_dsc);
 656              		.loc 1 440 33 is_stmt 0 view .LVU189
 657 01c4 8DF86610 		strb	r1, [sp, #102]
 441:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 658              		.loc 1 441 13 is_stmt 1 view .LVU190
 659 01c8 0FAA     		add	r2, sp, #60
 660 01ca 2046     		mov	r0, r4
 661 01cc FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 662              	.LVL64:
 443:lvgl/src/lv_widgets/lv_imgbtn.c ****             lv_area_copy(&bg_coords, &imgbtn->coords);
 663              		.loc 1 443 13 view .LVU191
 444:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.x1 -= lv_obj_get_style_pad_left(imgbtn, LV_IMGBTN_PART_MAIN);
 664              		.loc 1 444 13 view .LVU192
 444:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.x1 -= lv_obj_get_style_pad_left(imgbtn, LV_IMGBTN_PART_MAIN);
 665              		.loc 1 444 38 is_stmt 0 view .LVU193
 666 01d0 04F11001 		add	r1, r4, #16
 667              	.LVL65:
 668              	.LBB100:
 669              	.LBI100:
 670              		.file 5 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_area.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @file lv_area.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_AREA_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      INCLUDES
ARM GAS  D:\Temp\ccNxtRwL.s 			page 35


  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <string.h>
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdbool.h>
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdint.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "lv_mem.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      DEFINES
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*To avoid overflow don't let the max ranges (reduce with 1000) */
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - 1000))
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      TYPEDEFS
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Represents a point on the screen.
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x;
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y;
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_point_t;
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Represents an area of the screen. */
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x1;
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y1;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x2;
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y2;
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_area_t;
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Alignments */
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** enum {
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_CENTER = 0,
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_LEFT,
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_MID,
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_RIGHT,
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_LEFT,
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_MID,
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_RIGHT,
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_LEFT_MID,
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_RIGHT_MID,
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
ARM GAS  D:\Temp\ccNxtRwL.s 			page 36


  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** };
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef uint8_t lv_align_t;
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * GLOBAL PROTOTYPES
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Initialize an area
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x1 left coordinate of the area
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y1 top coordinate of the area
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x2 right coordinate of the area
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y2 bottom coordinate of the area
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Copy an area
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param dest pointer to the destination area
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param src pointer to the source area
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 671              		.loc 5 97 20 is_stmt 1 view .LVU194
 672              	.LBE100:
 673              	.LBE99:
 674              	.LBE116:
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     _lv_memcpy_small(dest, src, sizeof(lv_area_t));
 675              		.loc 5 99 5 view .LVU195
 676              	.LBB117:
 677              	.LBB115:
 678              	.LBB105:
 679              	.LBB101:
 680              	.LBI101:
 213:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 681              		.loc 3 213 44 view .LVU196
 682              	.LBB102:
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 683              		.loc 3 215 5 view .LVU197
 216:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 684              		.loc 3 216 5 view .LVU198
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 685              		.loc 3 218 5 view .LVU199
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 686              		.loc 3 215 15 is_stmt 0 view .LVU200
 687 01d4 06AA     		add	r2, sp, #24
 688              	.LVL66:
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 689              		.loc 3 215 15 view .LVU201
 690              	.LBE102:
 691              	.LBE101:
 692              	.LBE105:
 444:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.x1 -= lv_obj_get_style_pad_left(imgbtn, LV_IMGBTN_PART_MAIN);
ARM GAS  D:\Temp\ccNxtRwL.s 			page 37


 693              		.loc 1 444 38 view .LVU202
 694 01d6 0823     		movs	r3, #8
 695 01d8 04E0     		b	.L34
 696              	.LVL67:
 697              	.L35:
 698              	.LBB106:
 699              	.LBB104:
 700              	.LBB103:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 701              		.loc 3 219 9 is_stmt 1 view .LVU203
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 702              		.loc 3 219 15 is_stmt 0 view .LVU204
 703 01da 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 704              	.LVL68:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 705              		.loc 3 219 13 view .LVU205
 706 01de 02F8010B 		strb	r0, [r2], #1
 707              	.LVL69:
 220:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         s8++;
 708              		.loc 3 220 9 is_stmt 1 view .LVU206
 221:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         len--;
 709              		.loc 3 221 9 view .LVU207
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 710              		.loc 3 222 9 view .LVU208
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 711              		.loc 3 222 12 is_stmt 0 view .LVU209
 712 01e2 013B     		subs	r3, r3, #1
 713              	.LVL70:
 714              	.L34:
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 715              		.loc 3 218 10 view .LVU210
 716 01e4 002B     		cmp	r3, #0
 717 01e6 F8D1     		bne	.L35
 718              		.loc 3 225 5 is_stmt 1 view .LVU211
 719              	.LVL71:
 720              		.loc 3 225 5 is_stmt 0 view .LVU212
 721              	.LBE103:
 722              	.LBE104:
 723              	.LBE106:
 445:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.x2 += lv_obj_get_style_pad_right(imgbtn, LV_IMGBTN_PART_MAIN);
 724              		.loc 1 445 13 is_stmt 1 view .LVU213
 725              	.LBB107:
 726              	.LBI107:
 112:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 727              		.loc 2 112 1 view .LVU214
 728              	.LBB108:
 112:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 729              		.loc 2 112 1 view .LVU215
 730 01e8 1222     		movs	r2, #18
 731 01ea 0021     		movs	r1, #0
 732 01ec 2046     		mov	r0, r4
 733 01ee FFF7FEFF 		bl	_lv_obj_get_style_int
 734              	.LVL72:
 112:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 735              		.loc 2 112 1 is_stmt 0 view .LVU216
 736              	.LBE108:
 737              	.LBE107:
ARM GAS  D:\Temp\ccNxtRwL.s 			page 38


 445:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.x2 += lv_obj_get_style_pad_right(imgbtn, LV_IMGBTN_PART_MAIN);
 738              		.loc 1 445 29 view .LVU217
 739 01f2 80B2     		uxth	r0, r0
 445:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.x2 += lv_obj_get_style_pad_right(imgbtn, LV_IMGBTN_PART_MAIN);
 740              		.loc 1 445 26 view .LVU218
 741 01f4 BDF81830 		ldrh	r3, [sp, #24]
 742 01f8 1B1A     		subs	r3, r3, r0
 743 01fa ADF81830 		strh	r3, [sp, #24]	@ movhi
 446:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.y1 -= lv_obj_get_style_pad_top(imgbtn, LV_IMGBTN_PART_MAIN);
 744              		.loc 1 446 13 is_stmt 1 view .LVU219
 745              	.LVL73:
 746              	.LBB109:
 747              	.LBI109:
 113:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 748              		.loc 2 113 1 view .LVU220
 749              	.LBB110:
 113:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 750              		.loc 2 113 1 view .LVU221
 751 01fe 1322     		movs	r2, #19
 752 0200 0021     		movs	r1, #0
 753 0202 2046     		mov	r0, r4
 754 0204 FFF7FEFF 		bl	_lv_obj_get_style_int
 755              	.LVL74:
 113:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 756              		.loc 2 113 1 is_stmt 0 view .LVU222
 757              	.LBE110:
 758              	.LBE109:
 446:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.y1 -= lv_obj_get_style_pad_top(imgbtn, LV_IMGBTN_PART_MAIN);
 759              		.loc 1 446 26 view .LVU223
 760 0208 BDF81C30 		ldrh	r3, [sp, #28]
 761 020c 13FA80F3 		uxtah	r3, r3, r0
 762 0210 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 447:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.y2 += lv_obj_get_style_pad_bottom(imgbtn, LV_IMGBTN_PART_MAIN);
 763              		.loc 1 447 13 is_stmt 1 view .LVU224
 764              	.LVL75:
 765              	.LBB111:
 766              	.LBI111:
 110:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 767              		.loc 2 110 1 view .LVU225
 768              	.LBB112:
 110:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 769              		.loc 2 110 1 view .LVU226
 770 0214 1022     		movs	r2, #16
 771 0216 0021     		movs	r1, #0
 772 0218 2046     		mov	r0, r4
 773 021a FFF7FEFF 		bl	_lv_obj_get_style_int
 774              	.LVL76:
 110:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 775              		.loc 2 110 1 is_stmt 0 view .LVU227
 776              	.LBE112:
 777              	.LBE111:
 447:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.y2 += lv_obj_get_style_pad_bottom(imgbtn, LV_IMGBTN_PART_MAIN);
 778              		.loc 1 447 29 view .LVU228
 779 021e 80B2     		uxth	r0, r0
 447:lvgl/src/lv_widgets/lv_imgbtn.c ****             bg_coords.y2 += lv_obj_get_style_pad_bottom(imgbtn, LV_IMGBTN_PART_MAIN);
 780              		.loc 1 447 26 view .LVU229
 781 0220 BDF81A30 		ldrh	r3, [sp, #26]
ARM GAS  D:\Temp\ccNxtRwL.s 			page 39


 782 0224 1B1A     		subs	r3, r3, r0
 783 0226 ADF81A30 		strh	r3, [sp, #26]	@ movhi
 448:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 784              		.loc 1 448 13 is_stmt 1 view .LVU230
 785              	.LVL77:
 786              	.LBB113:
 787              	.LBI113:
 111:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 788              		.loc 2 111 1 view .LVU231
 789              	.LBB114:
 111:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 790              		.loc 2 111 1 view .LVU232
 791 022a 1122     		movs	r2, #17
 792 022c 0021     		movs	r1, #0
 793 022e 2046     		mov	r0, r4
 794 0230 FFF7FEFF 		bl	_lv_obj_get_style_int
 795              	.LVL78:
 111:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 796              		.loc 2 111 1 is_stmt 0 view .LVU233
 797              	.LBE114:
 798              	.LBE113:
 448:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 799              		.loc 1 448 26 view .LVU234
 800 0234 BDF81E30 		ldrh	r3, [sp, #30]
 801 0238 13FA80F3 		uxtah	r3, r3, r0
 802 023c ADF81E30 		strh	r3, [sp, #30]	@ movhi
 450:lvgl/src/lv_widgets/lv_imgbtn.c ****         }
 803              		.loc 1 450 13 is_stmt 1 view .LVU235
 804 0240 0FAA     		add	r2, sp, #60
 805 0242 2946     		mov	r1, r5
 806 0244 06A8     		add	r0, sp, #24
 807 0246 FFF7FEFF 		bl	lv_draw_rect
 808              	.LVL79:
 809 024a ADE7     		b	.L33
 810              	.LBE115:
 811              	.LBE117:
 812              		.cfi_endproc
 813              	.LFE477:
 815              		.section	.text.refr_img,"ax",%progbits
 816              		.align	1
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv4-sp-d16
 822              	refr_img:
 823              	.LVL80:
 824              	.LFB479:
 501:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 825              		.loc 1 501 1 view -0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 8
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 501:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_imgbtn_ext_t * ext = lv_obj_get_ext_attr(imgbtn);
 829              		.loc 1 501 1 is_stmt 0 view .LVU237
 830 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 831              	.LCFI5:
 832              		.cfi_def_cfa_offset 20
ARM GAS  D:\Temp\ccNxtRwL.s 			page 40


 833              		.cfi_offset 4, -20
 834              		.cfi_offset 5, -16
 835              		.cfi_offset 6, -12
 836              		.cfi_offset 7, -8
 837              		.cfi_offset 14, -4
 838 0002 85B0     		sub	sp, sp, #20
 839              	.LCFI6:
 840              		.cfi_def_cfa_offset 40
 841 0004 0446     		mov	r4, r0
 502:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_btn_state_t state  = suggest_state(imgbtn, lv_imgbtn_get_state(imgbtn));
 842              		.loc 1 502 5 is_stmt 1 view .LVU238
 502:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_btn_state_t state  = suggest_state(imgbtn, lv_imgbtn_get_state(imgbtn));
 843              		.loc 1 502 29 is_stmt 0 view .LVU239
 844 0006 FFF7FEFF 		bl	lv_obj_get_ext_attr
 845              	.LVL81:
 502:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_btn_state_t state  = suggest_state(imgbtn, lv_imgbtn_get_state(imgbtn));
 846              		.loc 1 502 29 view .LVU240
 847 000a 0646     		mov	r6, r0
 848              	.LVL82:
 503:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_img_header_t header;
 849              		.loc 1 503 5 is_stmt 1 view .LVU241
 850              	.LBB118:
 851              	.LBI118:
 169:lvgl/src/lv_widgets/lv_imgbtn.h **** {
 852              		.loc 4 169 30 view .LVU242
 853              	.LBB119:
 854              		.loc 4 171 5 view .LVU243
 855              		.loc 4 171 12 is_stmt 0 view .LVU244
 856 000c 2046     		mov	r0, r4
 857              	.LVL83:
 858              		.loc 4 171 12 view .LVU245
 859 000e FFF7FEFF 		bl	lv_btn_get_state
 860              	.LVL84:
 861              		.loc 4 171 12 view .LVU246
 862              	.LBE119:
 863              	.LBE118:
 503:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_img_header_t header;
 864              		.loc 1 503 29 view .LVU247
 865 0012 0146     		mov	r1, r0
 866 0014 2046     		mov	r0, r4
 867 0016 FFF7FEFF 		bl	suggest_state
 868              	.LVL85:
 504:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 869              		.loc 1 504 5 is_stmt 1 view .LVU248
 506:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(src == NULL) return;
 870              		.loc 1 506 5 view .LVU249
 506:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(src == NULL) return;
 871              		.loc 1 506 18 is_stmt 0 view .LVU250
 872 001a 06EB8000 		add	r0, r6, r0, lsl #2
 873              	.LVL86:
 506:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(src == NULL) return;
 874              		.loc 1 506 18 view .LVU251
 875 001e 4568     		ldr	r5, [r0, #4]
 876              	.LVL87:
 507:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 877              		.loc 1 507 5 is_stmt 1 view .LVU252
 507:lvgl/src/lv_widgets/lv_imgbtn.c **** 
ARM GAS  D:\Temp\ccNxtRwL.s 			page 41


 878              		.loc 1 507 7 is_stmt 0 view .LVU253
 879 0020 7DB1     		cbz	r5, .L49
 509:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(lv_img_src_get_type(src) == LV_IMG_SRC_SYMBOL) {
 880              		.loc 1 509 5 is_stmt 1 view .LVU254
 881              	.LVL88:
 510:lvgl/src/lv_widgets/lv_imgbtn.c ****         const lv_font_t * font = lv_obj_get_style_text_font(imgbtn, LV_IMGBTN_PART_MAIN);
 882              		.loc 1 510 5 view .LVU255
 510:lvgl/src/lv_widgets/lv_imgbtn.c ****         const lv_font_t * font = lv_obj_get_style_text_font(imgbtn, LV_IMGBTN_PART_MAIN);
 883              		.loc 1 510 8 is_stmt 0 view .LVU256
 884 0022 2846     		mov	r0, r5
 885 0024 FFF7FEFF 		bl	lv_img_src_get_type
 886              	.LVL89:
 510:lvgl/src/lv_widgets/lv_imgbtn.c ****         const lv_font_t * font = lv_obj_get_style_text_font(imgbtn, LV_IMGBTN_PART_MAIN);
 887              		.loc 1 510 7 view .LVU257
 888 0028 0228     		cmp	r0, #2
 889 002a 0CD0     		beq	.L58
 518:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 890              		.loc 1 518 9 is_stmt 1 view .LVU258
 518:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 891              		.loc 1 518 20 is_stmt 0 view .LVU259
 892 002c 03A9     		add	r1, sp, #12
 893 002e 2846     		mov	r0, r5
 894 0030 FFF7FEFF 		bl	lv_img_decoder_get_info
 895              	.LVL90:
 521:lvgl/src/lv_widgets/lv_imgbtn.c ****         ext->act_cf = header.cf;
 896              		.loc 1 521 5 is_stmt 1 view .LVU260
 521:lvgl/src/lv_widgets/lv_imgbtn.c ****         ext->act_cf = header.cf;
 897              		.loc 1 521 7 is_stmt 0 view .LVU261
 898 0034 0128     		cmp	r0, #1
 899 0036 2AD0     		beq	.L53
 527:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 900              		.loc 1 527 9 is_stmt 1 view .LVU262
 527:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 901              		.loc 1 527 21 is_stmt 0 view .LVU263
 902 0038 0023     		movs	r3, #0
 903 003a 3377     		strb	r3, [r6, #28]
 904              	.LVL91:
 905              	.L56:
 530:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 906              		.loc 1 530 5 is_stmt 1 discriminator 1 view .LVU264
 907 003c 2046     		mov	r0, r4
 908 003e FFF7FEFF 		bl	lv_obj_invalidate
 909              	.LVL92:
 910              	.L49:
 531:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 911              		.loc 1 531 1 is_stmt 0 view .LVU265
 912 0042 05B0     		add	sp, sp, #20
 913              	.LCFI7:
 914              		.cfi_remember_state
 915              		.cfi_def_cfa_offset 20
 916              		@ sp needed
 917 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 918              	.LVL93:
 919              	.L58:
 920              	.LCFI8:
 921              		.cfi_restore_state
 922              	.LBB120:
ARM GAS  D:\Temp\ccNxtRwL.s 			page 42


 511:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.h = lv_font_get_line_height(font);
 923              		.loc 1 511 9 is_stmt 1 view .LVU266
 924              	.LBB121:
 925              	.LBI121:
 130:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_COLOR, border_color, lv_color_t, _color, nonscalar)
 131:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(BORDER_OPA, border_opa, lv_opa_t, _opa, scalar)
 132:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_WIDTH, outline_width, lv_style_int_t, _int, scalar)
 133:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_PAD, outline_pad, lv_style_int_t, _int, scalar)
 134:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_BLEND_MODE, outline_blend_mode, lv_blend_mode_t, _int, scalar
 135:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_COLOR, outline_color, lv_color_t, _color, nonscalar)
 136:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OUTLINE_OPA, outline_opa, lv_opa_t, _opa, scalar)
 137:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_WIDTH, shadow_width, lv_style_int_t, _int, scalar)
 138:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_X, shadow_ofs_x, lv_style_int_t, _int, scalar)
 139:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OFS_Y, shadow_ofs_y, lv_style_int_t, _int, scalar)
 140:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_SPREAD, shadow_spread, lv_style_int_t, _int, scalar)
 141:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_BLEND_MODE, shadow_blend_mode, lv_blend_mode_t, _int, scalar)
 142:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_COLOR, shadow_color, lv_color_t, _color, nonscalar)
 143:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SHADOW_OPA, shadow_opa, lv_opa_t, _opa, scalar)
 144:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_REPEAT, pattern_repeat, bool, _int, scalar)
 145:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_BLEND_MODE, pattern_blend_mode, lv_blend_mode_t, _int, scalar
 146:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR, pattern_recolor, lv_color_t, _color, nonscalar)
 147:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_OPA, pattern_opa, lv_opa_t, _opa, scalar)
 148:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_RECOLOR_OPA, pattern_recolor_opa, lv_opa_t, _opa, scalar)
 149:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PATTERN_IMAGE, pattern_image, const void *, _ptr, scalar)
 150:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LETTER_SPACE, value_letter_space, lv_style_int_t, _int, scalar)
 151:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_LINE_SPACE, value_line_space, lv_style_int_t, _int, scalar)
 152:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_BLEND_MODE, value_blend_mode, lv_blend_mode_t, _int, scalar)
 153:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_X, value_ofs_x, lv_style_int_t, _int, scalar)
 154:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OFS_Y, value_ofs_y, lv_style_int_t, _int, scalar)
 155:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_ALIGN, value_align, lv_align_t, _int, scalar)
 156:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_COLOR, value_color, lv_color_t, _color, nonscalar)
 157:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_OPA, value_opa, lv_opa_t, _opa, scalar)
 158:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_FONT, value_font, const lv_font_t *, _ptr, scalar)
 159:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(VALUE_STR, value_str, const char *, _ptr, scalar)
 160:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LETTER_SPACE, text_letter_space, lv_style_int_t, _int, scalar)
 161:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_LINE_SPACE, text_line_space, lv_style_int_t, _int, scalar)
 162:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_DECOR, text_decor, lv_text_decor_t, _int, scalar)
 163:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_BLEND_MODE, text_blend_mode, lv_blend_mode_t, _int, scalar)
 164:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_COLOR, text_color, lv_color_t, _color, nonscalar)
 165:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_SEL_COLOR, text_sel_color, lv_color_t, _color, nonscalar)
 166:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_SEL_BG_COLOR, text_sel_bg_color, lv_color_t, _color, nonscalar)
 167:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_OPA, text_opa, lv_opa_t, _opa, scalar)
 168:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TEXT_FONT, text_font, const lv_font_t *, _ptr, scalar)
 926              		.loc 2 168 1 view .LVU267
 927              	.LBB122:
 928              		.loc 2 168 1 view .LVU268
 929 0046 48F28E02 		movw	r2, #32910
 930 004a 0021     		movs	r1, #0
 931 004c 2046     		mov	r0, r4
 932 004e FFF7FEFF 		bl	_lv_obj_get_style_ptr
 933              	.LVL94:
 934 0052 0746     		mov	r7, r0
 935              	.LVL95:
 936              		.loc 2 168 1 is_stmt 0 view .LVU269
 937              	.LBE122:
 938              	.LBE121:
 512:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.w = _lv_txt_get_width(src, (uint16_t)strlen(src), font, 0, LV_TXT_FLAG_NONE);
ARM GAS  D:\Temp\ccNxtRwL.s 			page 43


 939              		.loc 1 512 9 is_stmt 1 view .LVU270
 940              	.LBB123:
 941              	.LBI123:
 942              		.file 6 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_font\\lv_font.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @file lv_font.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #ifndef LV_FONT_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #define LV_FONT_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #include <stdint.h>
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #include <stddef.h>
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #include <stdbool.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #include "lv_symbol_def.h"
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #include "../lv_misc/lv_area.h"
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /*********************
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  *      DEFINES
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  *********************/
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /**********************
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  *      TYPEDEFS
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  **********************/
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /*------------------
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * General types
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  *-----------------*/
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /** Describes the properties of a glyph. */
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** typedef struct {
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     uint16_t adv_w; /**< The glyph needs this space. Draw the next glyph after this width. 8 bit in
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     uint16_t box_w;  /**< Width of the glyph's bounding box*/
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     uint16_t box_h;  /**< Height of the glyph's bounding box*/
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     int16_t ofs_x;   /**< x offset of the bounding box*/
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     int16_t ofs_y;  /**< y offset of the bounding box*/
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     uint8_t bpp;   /**< Bit-per-pixel: 1, 2, 4, 8*/
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** } lv_font_glyph_dsc_t;
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /** The bitmaps might be upscaled by 3 to achieve subpixel rendering. */
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** enum {
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     LV_FONT_SUBPX_NONE,
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     LV_FONT_SUBPX_HOR,
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     LV_FONT_SUBPX_VER,
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     LV_FONT_SUBPX_BOTH,
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** };
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
ARM GAS  D:\Temp\ccNxtRwL.s 			page 44


  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** typedef uint8_t lv_font_subpx_t;
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /** Describe the properties of a font*/
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** typedef struct _lv_font_struct {
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     /** Get a glyph's descriptor from a font*/
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     bool (*get_glyph_dsc)(const struct _lv_font_struct *, lv_font_glyph_dsc_t *, uint32_t letter, u
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     /** Get a glyph's bitmap from a font*/
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     const uint8_t * (*get_glyph_bitmap)(const struct _lv_font_struct *, uint32_t);
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     /*Pointer to the font in a font pack (must have the same line height)*/
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     lv_coord_t line_height;         /**< The real line height where any text fits*/
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     lv_coord_t base_line;           /**< Base line measured from the top of the line_height*/
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     uint8_t subpx  : 2;             /**< An element of `lv_font_subpx_t`*/
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     int8_t underline_position;      /**< Distance between the top of the underline and base line (<
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     int8_t underline_thickness;     /**< Thickness of the underline*/
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     void * dsc;                     /**< Store implementation specific or run_time data or caching 
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #if LV_USE_USER_DATA
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     lv_font_user_data_t user_data;  /**< Custom user data for font. */
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** #endif
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** } lv_font_t;
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /**********************
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * GLOBAL PROTOTYPES
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  **********************/
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /**
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * Return with the bitmap of a font.
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @param font_p pointer to a font
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @param letter an UNICODE character code
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @return pointer to the bitmap of the letter
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  */
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** const uint8_t * lv_font_get_glyph_bitmap(const lv_font_t * font_p, uint32_t letter);
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /**
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * Get the descriptor of a glyph
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @param font_p pointer to font
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @param dsc_out store the result descriptor here
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @param letter an UNICODE letter code
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @return true: descriptor is successfully loaded into `dsc_out`.
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  *         false: the letter was not found, no data is loaded to `dsc_out`
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  */
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** bool lv_font_get_glyph_dsc(const lv_font_t * font_p, lv_font_glyph_dsc_t * dsc_out, uint32_t letter
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****                            uint32_t letter_next);
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /**
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * Get the width of a glyph with kerning
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @param font pointer to a font
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @param letter an UNICODE letter
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @param letter_next the next letter after `letter`. Used for kerning
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @return the width of the glyph
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  */
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** uint16_t lv_font_get_glyph_width(const lv_font_t * font, uint32_t letter, uint32_t letter_next);
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** 
ARM GAS  D:\Temp\ccNxtRwL.s 			page 45


 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** /**
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * Get the line height of a font. All characters fit into this height
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @param font_p pointer to a font
 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  * @return the height of a font
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****  */
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** static inline lv_coord_t lv_font_get_line_height(const lv_font_t * font_p)
 943              		.loc 6 116 26 view .LVU271
 944              	.LBB124:
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h **** {
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_font\lv_font.h ****     return font_p->line_height;
 945              		.loc 6 118 5 view .LVU272
 946              		.loc 6 118 18 is_stmt 0 view .LVU273
 947 0054 B0F90820 		ldrsh	r2, [r0, #8]
 948              	.LVL96:
 949              		.loc 6 118 18 view .LVU274
 950              	.LBE124:
 951              	.LBE123:
 512:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.w = _lv_txt_get_width(src, (uint16_t)strlen(src), font, 0, LV_TXT_FLAG_NONE);
 952              		.loc 1 512 18 view .LVU275
 953 0058 BDF80E30 		ldrh	r3, [sp, #14]
 954 005c 62F34F13 		bfi	r3, r2, #5, #11
 955 0060 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 513:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.always_zero = 0;
 956              		.loc 1 513 9 is_stmt 1 view .LVU276
 513:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.always_zero = 0;
 957              		.loc 1 513 53 is_stmt 0 view .LVU277
 958 0064 2846     		mov	r0, r5
 959              	.LVL97:
 513:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.always_zero = 0;
 960              		.loc 1 513 53 view .LVU278
 961 0066 FFF7FEFF 		bl	strlen
 962              	.LVL98:
 513:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.always_zero = 0;
 963              		.loc 1 513 20 view .LVU279
 964 006a 0023     		movs	r3, #0
 965 006c 0093     		str	r3, [sp]
 966 006e 3A46     		mov	r2, r7
 967 0070 81B2     		uxth	r1, r0
 968 0072 2846     		mov	r0, r5
 969 0074 FFF7FEFF 		bl	_lv_txt_get_width
 970              	.LVL99:
 513:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.always_zero = 0;
 971              		.loc 1 513 18 view .LVU280
 972 0078 039B     		ldr	r3, [sp, #12]
 973 007a 60F39423 		bfi	r3, r0, #10, #11
 974 007e 0393     		str	r3, [sp, #12]
 514:lvgl/src/lv_widgets/lv_imgbtn.c ****         header.cf = LV_IMG_CF_ALPHA_1BIT;
 975              		.loc 1 514 9 is_stmt 1 view .LVU281
 515:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 976              		.loc 1 515 9 view .LVU282
 515:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 977              		.loc 1 515 19 is_stmt 0 view .LVU283
 978 0080 03F01F03 		and	r3, r3, #31
 979 0084 0B22     		movs	r2, #11
 980 0086 62F30403 		bfi	r3, r2, #0, #5
 981 008a 8DF80C30 		strb	r3, [sp, #12]
 515:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
ARM GAS  D:\Temp\ccNxtRwL.s 			page 46


 982              		.loc 1 515 19 view .LVU284
 983              	.LBE120:
 521:lvgl/src/lv_widgets/lv_imgbtn.c ****         ext->act_cf = header.cf;
 984              		.loc 1 521 5 is_stmt 1 view .LVU285
 985              	.LVL100:
 986              	.L53:
 522:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(ext->tiled) lv_obj_set_height(imgbtn, header.h); /*Keep the sure defined width*/
 987              		.loc 1 522 9 view .LVU286
 522:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(ext->tiled) lv_obj_set_height(imgbtn, header.h); /*Keep the sure defined width*/
 988              		.loc 1 522 29 is_stmt 0 view .LVU287
 989 008e 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 990 0092 C3F30403 		ubfx	r3, r3, #0, #5
 522:lvgl/src/lv_widgets/lv_imgbtn.c ****         if(ext->tiled) lv_obj_set_height(imgbtn, header.h); /*Keep the sure defined width*/
 991              		.loc 1 522 21 view .LVU288
 992 0096 3377     		strb	r3, [r6, #28]
 523:lvgl/src/lv_widgets/lv_imgbtn.c ****         else lv_obj_set_size(imgbtn, header.w, header.h);
 993              		.loc 1 523 9 is_stmt 1 view .LVU289
 523:lvgl/src/lv_widgets/lv_imgbtn.c ****         else lv_obj_set_size(imgbtn, header.w, header.h);
 994              		.loc 1 523 12 is_stmt 0 view .LVU290
 995 0098 737F     		ldrb	r3, [r6, #29]	@ zero_extendqisi2
 523:lvgl/src/lv_widgets/lv_imgbtn.c ****         else lv_obj_set_size(imgbtn, header.w, header.h);
 996              		.loc 1 523 11 view .LVU291
 997 009a 13F0010F 		tst	r3, #1
 998 009e 06D0     		beq	.L55
 523:lvgl/src/lv_widgets/lv_imgbtn.c ****         else lv_obj_set_size(imgbtn, header.w, header.h);
 999              		.loc 1 523 24 is_stmt 1 discriminator 1 view .LVU292
 523:lvgl/src/lv_widgets/lv_imgbtn.c ****         else lv_obj_set_size(imgbtn, header.w, header.h);
 1000              		.loc 1 523 56 is_stmt 0 discriminator 1 view .LVU293
 1001 00a0 BDF80E10 		ldrh	r1, [sp, #14]
 523:lvgl/src/lv_widgets/lv_imgbtn.c ****         else lv_obj_set_size(imgbtn, header.w, header.h);
 1002              		.loc 1 523 24 discriminator 1 view .LVU294
 1003 00a4 4909     		lsrs	r1, r1, #5
 1004 00a6 2046     		mov	r0, r4
 1005 00a8 FFF7FEFF 		bl	lv_obj_set_height
 1006              	.LVL101:
 1007 00ac C6E7     		b	.L56
 1008              	.L55:
 524:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1009              		.loc 1 524 14 is_stmt 1 view .LVU295
 524:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1010              		.loc 1 524 54 is_stmt 0 view .LVU296
 1011 00ae BDF80E20 		ldrh	r2, [sp, #14]
 524:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1012              		.loc 1 524 14 view .LVU297
 1013 00b2 5209     		lsrs	r2, r2, #5
 1014 00b4 0399     		ldr	r1, [sp, #12]
 1015 00b6 C1F38A21 		ubfx	r1, r1, #10, #11
 1016 00ba 2046     		mov	r0, r4
 1017 00bc FFF7FEFF 		bl	lv_obj_set_size
 1018              	.LVL102:
 1019 00c0 BCE7     		b	.L56
 1020              		.cfi_endproc
 1021              	.LFE479:
 1023              		.section	.text.lv_imgbtn_signal,"ax",%progbits
 1024              		.align	1
 1025              		.syntax unified
 1026              		.thumb
ARM GAS  D:\Temp\ccNxtRwL.s 			page 47


 1027              		.thumb_func
 1028              		.fpu fpv4-sp-d16
 1030              	lv_imgbtn_signal:
 1031              	.LVL103:
 1032              	.LFB478:
 465:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_res_t res;
 1033              		.loc 1 465 1 is_stmt 1 view -0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 465:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_res_t res;
 1037              		.loc 1 465 1 is_stmt 0 view .LVU299
 1038 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1039              	.LCFI9:
 1040              		.cfi_def_cfa_offset 24
 1041              		.cfi_offset 4, -24
 1042              		.cfi_offset 5, -20
 1043              		.cfi_offset 6, -16
 1044              		.cfi_offset 7, -12
 1045              		.cfi_offset 8, -8
 1046              		.cfi_offset 14, -4
 1047 0004 0646     		mov	r6, r0
 1048 0006 0D46     		mov	r5, r1
 1049 0008 1746     		mov	r7, r2
 466:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1050              		.loc 1 466 5 is_stmt 1 view .LVU300
 469:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(res != LV_RES_OK) return res;
 1051              		.loc 1 469 5 view .LVU301
 469:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(res != LV_RES_OK) return res;
 1052              		.loc 1 469 11 is_stmt 0 view .LVU302
 1053 000a 264B     		ldr	r3, .L69
 1054 000c 1B68     		ldr	r3, [r3]
 1055 000e 9847     		blx	r3
 1056              	.LVL104:
 469:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(res != LV_RES_OK) return res;
 1057              		.loc 1 469 11 view .LVU303
 1058 0010 0446     		mov	r4, r0
 1059              	.LVL105:
 470:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 1060              		.loc 1 470 5 is_stmt 1 view .LVU304
 470:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 1061              		.loc 1 470 7 is_stmt 0 view .LVU305
 1062 0012 0128     		cmp	r0, #1
 1063 0014 0ED1     		bne	.L60
 471:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1064              		.loc 1 471 5 is_stmt 1 view .LVU306
 471:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1065              		.loc 1 471 7 is_stmt 0 view .LVU307
 1066 0016 072D     		cmp	r5, #7
 1067 0018 0FD0     		beq	.L66
 473:lvgl/src/lv_widgets/lv_imgbtn.c ****         /* If the style changed then the button was clicked, released etc. so probably the state wa
 1068              		.loc 1 473 5 is_stmt 1 view .LVU308
 473:lvgl/src/lv_widgets/lv_imgbtn.c ****         /* If the style changed then the button was clicked, released etc. so probably the state wa
 1069              		.loc 1 473 7 is_stmt 0 view .LVU309
 1070 001a 042D     		cmp	r5, #4
 1071 001c 13D0     		beq	.L67
 478:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*Handle the padding of the background*/
ARM GAS  D:\Temp\ccNxtRwL.s 			page 48


 1072              		.loc 1 478 10 is_stmt 1 view .LVU310
 478:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*Handle the padding of the background*/
 1073              		.loc 1 478 12 is_stmt 0 view .LVU311
 1074 001e 062D     		cmp	r5, #6
 1075 0020 15D0     		beq	.L68
 490:lvgl/src/lv_widgets/lv_imgbtn.c ****         refr_img(imgbtn);
 1076              		.loc 1 490 10 is_stmt 1 view .LVU312
 490:lvgl/src/lv_widgets/lv_imgbtn.c ****         refr_img(imgbtn);
 1077              		.loc 1 490 12 is_stmt 0 view .LVU313
 1078 0022 0B2D     		cmp	r5, #11
 1079 0024 03D0     		beq	.L64
 490:lvgl/src/lv_widgets/lv_imgbtn.c ****         refr_img(imgbtn);
 1080              		.loc 1 490 39 discriminator 1 view .LVU314
 1081 0026 0E2D     		cmp	r5, #14
 1082 0028 01D0     		beq	.L64
 490:lvgl/src/lv_widgets/lv_imgbtn.c ****         refr_img(imgbtn);
 1083              		.loc 1 490 69 discriminator 2 view .LVU315
 1084 002a 0D2D     		cmp	r5, #13
 1085 002c 02D1     		bne	.L60
 1086              	.L64:
 491:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1087              		.loc 1 491 9 is_stmt 1 view .LVU316
 1088 002e 3046     		mov	r0, r6
 1089              	.LVL106:
 491:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1090              		.loc 1 491 9 is_stmt 0 view .LVU317
 1091 0030 FFF7FEFF 		bl	refr_img
 1092              	.LVL107:
 1093              	.L60:
 498:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1094              		.loc 1 498 1 view .LVU318
 1095 0034 2046     		mov	r0, r4
 1096 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1097              	.LVL108:
 1098              	.L66:
 471:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1099              		.loc 1 471 36 is_stmt 1 discriminator 1 view .LVU319
 471:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1100              		.loc 1 471 43 is_stmt 0 discriminator 1 view .LVU320
 1101 003a 1B49     		ldr	r1, .L69+4
 1102 003c 3846     		mov	r0, r7
 1103              	.LVL109:
 471:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1104              		.loc 1 471 43 discriminator 1 view .LVU321
 1105 003e FFF7FEFF 		bl	lv_obj_handle_get_type_signal
 1106              	.LVL110:
 1107 0042 0446     		mov	r4, r0
 1108 0044 F6E7     		b	.L60
 1109              	.LVL111:
 1110              	.L67:
 476:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1111              		.loc 1 476 9 is_stmt 1 view .LVU322
 1112 0046 3046     		mov	r0, r6
 1113              	.LVL112:
 476:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1114              		.loc 1 476 9 is_stmt 0 view .LVU323
 1115 0048 FFF7FEFF 		bl	refr_img
ARM GAS  D:\Temp\ccNxtRwL.s 			page 49


 1116              	.LVL113:
 1117 004c F2E7     		b	.L60
 1118              	.LVL114:
 1119              	.L68:
 1120              	.LBB125:
 480:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_style_int_t right = lv_obj_get_style_pad_right(imgbtn, LV_IMGBTN_PART_MAIN);
 1121              		.loc 1 480 9 is_stmt 1 view .LVU324
 1122              	.LBB126:
 1123              	.LBI126:
 112:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 1124              		.loc 2 112 1 view .LVU325
 1125              	.LBB127:
 112:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 1126              		.loc 2 112 1 view .LVU326
 1127 004e 1222     		movs	r2, #18
 1128 0050 0021     		movs	r1, #0
 1129 0052 3046     		mov	r0, r6
 1130              	.LVL115:
 112:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 1131              		.loc 2 112 1 is_stmt 0 view .LVU327
 1132 0054 FFF7FEFF 		bl	_lv_obj_get_style_int
 1133              	.LVL116:
 1134 0058 8046     		mov	r8, r0
 1135              	.LVL117:
 112:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 1136              		.loc 2 112 1 view .LVU328
 1137              	.LBE127:
 1138              	.LBE126:
 481:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_style_int_t top = lv_obj_get_style_pad_top(imgbtn, LV_IMGBTN_PART_MAIN);
 1139              		.loc 1 481 9 is_stmt 1 view .LVU329
 1140              	.LBB128:
 1141              	.LBI128:
 113:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 1142              		.loc 2 113 1 view .LVU330
 1143              	.LBB129:
 113:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 1144              		.loc 2 113 1 view .LVU331
 1145 005a 1322     		movs	r2, #19
 1146 005c 0021     		movs	r1, #0
 1147 005e 3046     		mov	r0, r6
 1148 0060 FFF7FEFF 		bl	_lv_obj_get_style_int
 1149              	.LVL118:
 1150 0064 0746     		mov	r7, r0
 1151              	.LVL119:
 113:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_INNER, pad_inner, lv_style_int_t, _int, scalar)
 1152              		.loc 2 113 1 is_stmt 0 view .LVU332
 1153              	.LBE129:
 1154              	.LBE128:
 482:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_style_int_t bottom = lv_obj_get_style_pad_bottom(imgbtn, LV_IMGBTN_PART_MAIN);
 1155              		.loc 1 482 9 is_stmt 1 view .LVU333
 1156              	.LBB130:
 1157              	.LBI130:
 110:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 1158              		.loc 2 110 1 view .LVU334
 1159              	.LBB131:
 110:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 1160              		.loc 2 110 1 view .LVU335
ARM GAS  D:\Temp\ccNxtRwL.s 			page 50


 1161 0066 1022     		movs	r2, #16
 1162 0068 0021     		movs	r1, #0
 1163 006a 3046     		mov	r0, r6
 1164 006c FFF7FEFF 		bl	_lv_obj_get_style_int
 1165              	.LVL120:
 1166 0070 0546     		mov	r5, r0
 1167              	.LVL121:
 110:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 1168              		.loc 2 110 1 is_stmt 0 view .LVU336
 1169              	.LBE131:
 1170              	.LBE130:
 483:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1171              		.loc 1 483 9 is_stmt 1 view .LVU337
 1172              	.LBB132:
 1173              	.LBI132:
 111:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 1174              		.loc 2 111 1 view .LVU338
 1175              	.LBB133:
 111:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 1176              		.loc 2 111 1 view .LVU339
 1177 0072 1122     		movs	r2, #17
 1178 0074 0021     		movs	r1, #0
 1179 0076 3046     		mov	r0, r6
 1180 0078 FFF7FEFF 		bl	_lv_obj_get_style_int
 1181              	.LVL122:
 111:lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 1182              		.loc 2 111 1 is_stmt 0 view .LVU340
 1183              	.LBE133:
 1184              	.LBE132:
 485:lvgl/src/lv_widgets/lv_imgbtn.c ****         imgbtn->ext_draw_pad = LV_MATH_MAX(imgbtn->ext_draw_pad, right);
 1185              		.loc 1 485 9 is_stmt 1 view .LVU341
 485:lvgl/src/lv_widgets/lv_imgbtn.c ****         imgbtn->ext_draw_pad = LV_MATH_MAX(imgbtn->ext_draw_pad, right);
 1186              		.loc 1 485 32 is_stmt 0 view .LVU342
 1187 007c B6F93230 		ldrsh	r3, [r6, #50]
 1188 0080 4345     		cmp	r3, r8
 1189 0082 B8BF     		it	lt
 1190 0084 4346     		movlt	r3, r8
 1191 0086 1BB2     		sxth	r3, r3
 486:lvgl/src/lv_widgets/lv_imgbtn.c ****         imgbtn->ext_draw_pad = LV_MATH_MAX(imgbtn->ext_draw_pad, top);
 1192              		.loc 1 486 9 is_stmt 1 view .LVU343
 486:lvgl/src/lv_widgets/lv_imgbtn.c ****         imgbtn->ext_draw_pad = LV_MATH_MAX(imgbtn->ext_draw_pad, top);
 1193              		.loc 1 486 32 is_stmt 0 view .LVU344
 1194 0088 BB42     		cmp	r3, r7
 1195 008a B8BF     		it	lt
 1196 008c 3B46     		movlt	r3, r7
 1197 008e 1BB2     		sxth	r3, r3
 487:lvgl/src/lv_widgets/lv_imgbtn.c ****         imgbtn->ext_draw_pad = LV_MATH_MAX(imgbtn->ext_draw_pad, bottom);
 1198              		.loc 1 487 9 is_stmt 1 view .LVU345
 487:lvgl/src/lv_widgets/lv_imgbtn.c ****         imgbtn->ext_draw_pad = LV_MATH_MAX(imgbtn->ext_draw_pad, bottom);
 1199              		.loc 1 487 32 is_stmt 0 view .LVU346
 1200 0090 AB42     		cmp	r3, r5
 1201 0092 B8BF     		it	lt
 1202 0094 2B46     		movlt	r3, r5
 1203 0096 1BB2     		sxth	r3, r3
 488:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1204              		.loc 1 488 9 is_stmt 1 view .LVU347
 488:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
ARM GAS  D:\Temp\ccNxtRwL.s 			page 51


 1205              		.loc 1 488 32 is_stmt 0 view .LVU348
 1206 0098 9842     		cmp	r0, r3
 1207 009a B8BF     		it	lt
 1208 009c 1846     		movlt	r0, r3
 1209              	.LVL123:
 488:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1210              		.loc 1 488 30 view .LVU349
 1211 009e 7086     		strh	r0, [r6, #50]	@ movhi
 1212              	.LBE125:
 1213 00a0 C8E7     		b	.L60
 1214              	.L70:
 1215 00a2 00BF     		.align	2
 1216              	.L69:
 1217 00a4 00000000 		.word	.LANCHOR0
 1218 00a8 00000000 		.word	.LC0
 1219              		.cfi_endproc
 1220              	.LFE478:
 1222              		.section	.text.lv_imgbtn_create,"ax",%progbits
 1223              		.align	1
 1224              		.global	lv_imgbtn_create
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1228              		.fpu fpv4-sp-d16
 1230              	lv_imgbtn_create:
 1231              	.LVL124:
 1232              	.LFB472:
  56:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_LOG_TRACE("image button create started");
 1233              		.loc 1 56 1 is_stmt 1 view -0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 0, uses_anonymous_args = 0
  56:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_LOG_TRACE("image button create started");
 1237              		.loc 1 56 1 is_stmt 0 view .LVU351
 1238 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1239              	.LCFI10:
 1240              		.cfi_def_cfa_offset 24
 1241              		.cfi_offset 3, -24
 1242              		.cfi_offset 4, -20
 1243              		.cfi_offset 5, -16
 1244              		.cfi_offset 6, -12
 1245              		.cfi_offset 7, -8
 1246              		.cfi_offset 14, -4
 1247 0002 0E46     		mov	r6, r1
  57:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1248              		.loc 1 57 48 is_stmt 1 view .LVU352
  60:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_MEM(imgbtn);
 1249              		.loc 1 60 5 view .LVU353
  60:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_MEM(imgbtn);
 1250              		.loc 1 60 25 is_stmt 0 view .LVU354
 1251 0004 FFF7FEFF 		bl	lv_btn_create
 1252              	.LVL125:
  60:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_MEM(imgbtn);
 1253              		.loc 1 60 25 view .LVU355
 1254 0008 0446     		mov	r4, r0
 1255              	.LVL126:
  61:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(imgbtn == NULL) return NULL;
ARM GAS  D:\Temp\ccNxtRwL.s 			page 52


 1256              		.loc 1 61 5 is_stmt 1 view .LVU356
  61:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(imgbtn == NULL) return NULL;
 1257              		.loc 1 61 5 view .LVU357
 1258 000a FFF7FEFF 		bl	lv_debug_check_null
 1259              	.LVL127:
  61:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(imgbtn == NULL) return NULL;
 1260              		.loc 1 61 5 is_stmt 0 view .LVU358
 1261 000e 0028     		cmp	r0, #0
 1262 0010 3DD0     		beq	.L82
  61:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(imgbtn == NULL) return NULL;
 1263              		.loc 1 61 26 is_stmt 1 discriminator 2 view .LVU359
  62:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1264              		.loc 1 62 5 discriminator 2 view .LVU360
  62:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1265              		.loc 1 62 7 is_stmt 0 discriminator 2 view .LVU361
 1266 0012 002C     		cmp	r4, #0
 1267 0014 39D0     		beq	.L71
  65:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_MEM(ext);
 1268              		.loc 1 65 5 is_stmt 1 view .LVU362
  65:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_MEM(ext);
 1269              		.loc 1 65 29 is_stmt 0 view .LVU363
 1270 0016 2021     		movs	r1, #32
 1271 0018 2046     		mov	r0, r4
 1272 001a FFF7FEFF 		bl	lv_obj_allocate_ext_attr
 1273              	.LVL128:
 1274 001e 0546     		mov	r5, r0
 1275              	.LVL129:
  66:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ext == NULL) {
 1276              		.loc 1 66 5 is_stmt 1 view .LVU364
  66:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ext == NULL) {
 1277              		.loc 1 66 5 view .LVU365
 1278 0020 FFF7FEFF 		bl	lv_debug_check_null
 1279              	.LVL130:
  66:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ext == NULL) {
 1280              		.loc 1 66 5 is_stmt 0 view .LVU366
 1281 0024 0028     		cmp	r0, #0
 1282 0026 38D0     		beq	.L83
  66:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ext == NULL) {
 1283              		.loc 1 66 23 is_stmt 1 discriminator 2 view .LVU367
  67:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_obj_del(imgbtn);
 1284              		.loc 1 67 5 discriminator 2 view .LVU368
  67:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_obj_del(imgbtn);
 1285              		.loc 1 67 7 is_stmt 0 discriminator 2 view .LVU369
 1286 0028 002D     		cmp	r5, #0
 1287 002a 3CD0     		beq	.L84
  72:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(imgbtn);
 1288              		.loc 1 72 5 is_stmt 1 view .LVU370
  72:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(imgbtn);
 1289              		.loc 1 72 24 is_stmt 0 view .LVU371
 1290 002c 294B     		ldr	r3, .L88
 1291 002e 1B68     		ldr	r3, [r3]
  72:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(imgbtn);
 1292              		.loc 1 72 7 view .LVU372
 1293 0030 002B     		cmp	r3, #0
 1294 0032 3DD0     		beq	.L85
 1295              	.L78:
  73:lvgl/src/lv_widgets/lv_imgbtn.c **** 
ARM GAS  D:\Temp\ccNxtRwL.s 			page 53


 1296              		.loc 1 73 5 is_stmt 1 view .LVU373
  73:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1297              		.loc 1 73 24 is_stmt 0 view .LVU374
 1298 0034 284B     		ldr	r3, .L88+4
 1299 0036 1B68     		ldr	r3, [r3]
  73:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1300              		.loc 1 73 7 view .LVU375
 1301 0038 002B     		cmp	r3, #0
 1302 003a 3FD0     		beq	.L86
 1303              	.L79:
  76:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 1304              		.loc 1 76 5 is_stmt 1 view .LVU376
  76:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 1305              		.loc 1 76 27 is_stmt 0 view .LVU377
 1306 003c 2F1D     		adds	r7, r5, #4
  76:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 1307              		.loc 1 76 5 view .LVU378
 1308 003e 1821     		movs	r1, #24
 1309 0040 3846     		mov	r0, r7
 1310 0042 FFF7FEFF 		bl	_lv_memset_00
 1311              	.LVL131:
  81:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1312              		.loc 1 81 5 is_stmt 1 view .LVU379
  81:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1313              		.loc 1 81 16 is_stmt 0 view .LVU380
 1314 0046 6B7F     		ldrb	r3, [r5, #29]	@ zero_extendqisi2
 1315 0048 6FF30003 		bfc	r3, #0, #1
 1316 004c 6B77     		strb	r3, [r5, #29]
  83:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1317              		.loc 1 83 5 is_stmt 1 view .LVU381
  83:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1318              		.loc 1 83 17 is_stmt 0 view .LVU382
 1319 004e 0023     		movs	r3, #0
 1320 0050 2B77     		strb	r3, [r5, #28]
  86:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_obj_set_design_cb(imgbtn, lv_imgbtn_design);
 1321              		.loc 1 86 5 is_stmt 1 view .LVU383
 1322 0052 2249     		ldr	r1, .L88+8
 1323 0054 2046     		mov	r0, r4
 1324 0056 FFF7FEFF 		bl	lv_obj_set_signal_cb
 1325              	.LVL132:
  87:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1326              		.loc 1 87 5 view .LVU384
 1327 005a 2149     		ldr	r1, .L88+12
 1328 005c 2046     		mov	r0, r4
 1329 005e FFF7FEFF 		bl	lv_obj_set_design_cb
 1330              	.LVL133:
  90:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_theme_apply(imgbtn, LV_THEME_IMGBTN);
 1331              		.loc 1 90 5 view .LVU385
  90:lvgl/src/lv_widgets/lv_imgbtn.c ****         lv_theme_apply(imgbtn, LV_THEME_IMGBTN);
 1332              		.loc 1 90 7 is_stmt 0 view .LVU386
 1333 0062 8EB3     		cbz	r6, .L87
 1334              	.LBB134:
  95:lvgl/src/lv_widgets/lv_imgbtn.c ****         _lv_memcpy((void *)ext->img_src_mid, copy_ext->img_src_mid, sizeof(ext->img_src_mid));
 1335              		.loc 1 95 9 is_stmt 1 view .LVU387
  95:lvgl/src/lv_widgets/lv_imgbtn.c ****         _lv_memcpy((void *)ext->img_src_mid, copy_ext->img_src_mid, sizeof(ext->img_src_mid));
 1336              		.loc 1 95 38 is_stmt 0 view .LVU388
 1337 0064 3046     		mov	r0, r6
ARM GAS  D:\Temp\ccNxtRwL.s 			page 54


 1338 0066 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1339              	.LVL134:
 1340 006a 0646     		mov	r6, r0
 1341              	.LVL135:
  96:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 1342              		.loc 1 96 9 is_stmt 1 view .LVU389
 1343 006c 1822     		movs	r2, #24
 1344 006e 011D     		adds	r1, r0, #4
 1345 0070 3846     		mov	r0, r7
 1346              	.LVL136:
  96:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 1347              		.loc 1 96 9 is_stmt 0 view .LVU390
 1348 0072 FFF7FEFF 		bl	_lv_memcpy
 1349              	.LVL137:
 101:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*Refresh the style with new signal function*/
 1350              		.loc 1 101 9 is_stmt 1 view .LVU391
 101:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*Refresh the style with new signal function*/
 1351              		.loc 1 101 30 is_stmt 0 view .LVU392
 1352 0076 727F     		ldrb	r2, [r6, #29]	@ zero_extendqisi2
 101:lvgl/src/lv_widgets/lv_imgbtn.c ****         /*Refresh the style with new signal function*/
 1353              		.loc 1 101 20 view .LVU393
 1354 0078 6B7F     		ldrb	r3, [r5, #29]	@ zero_extendqisi2
 1355 007a 62F30003 		bfi	r3, r2, #0, #1
 1356 007e 6B77     		strb	r3, [r5, #29]
 103:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1357              		.loc 1 103 9 is_stmt 1 view .LVU394
 1358 0080 FF22     		movs	r2, #255
 1359 0082 1146     		mov	r1, r2
 1360 0084 2046     		mov	r0, r4
 1361 0086 FFF7FEFF 		bl	lv_obj_refresh_style
 1362              	.LVL138:
 1363              	.L71:
 103:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1364              		.loc 1 103 9 is_stmt 0 view .LVU395
 1365              	.LBE134:
 109:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1366              		.loc 1 109 1 view .LVU396
 1367 008a 2046     		mov	r0, r4
 1368 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1369              	.LVL139:
 1370              	.L82:
  61:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(imgbtn == NULL) return NULL;
 1371              		.loc 1 61 5 is_stmt 1 discriminator 1 view .LVU397
  61:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(imgbtn == NULL) return NULL;
 1372              		.loc 1 61 5 discriminator 1 view .LVU398
 1373 008e 2246     		mov	r2, r4
 1374 0090 0023     		movs	r3, #0
 1375 0092 1448     		ldr	r0, .L88+16
 1376 0094 FFF7FEFF 		bl	lv_debug_log_error
 1377              	.LVL140:
 1378              	.L73:
  61:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(imgbtn == NULL) return NULL;
 1379              		.loc 1 61 5 discriminator 1 view .LVU399
  61:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(imgbtn == NULL) return NULL;
 1380              		.loc 1 61 5 discriminator 1 view .LVU400
 1381 0098 FEE7     		b	.L73
 1382              	.LVL141:
ARM GAS  D:\Temp\ccNxtRwL.s 			page 55


 1383              	.L83:
  66:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ext == NULL) {
 1384              		.loc 1 66 5 discriminator 1 view .LVU401
  66:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ext == NULL) {
 1385              		.loc 1 66 5 discriminator 1 view .LVU402
 1386 009a 2A46     		mov	r2, r5
 1387 009c 0023     		movs	r3, #0
 1388 009e 1148     		ldr	r0, .L88+16
 1389 00a0 FFF7FEFF 		bl	lv_debug_log_error
 1390              	.LVL142:
 1391              	.L76:
  66:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ext == NULL) {
 1392              		.loc 1 66 5 discriminator 2 view .LVU403
  66:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ext == NULL) {
 1393              		.loc 1 66 5 discriminator 2 view .LVU404
 1394 00a4 FEE7     		b	.L76
 1395              	.L84:
  68:lvgl/src/lv_widgets/lv_imgbtn.c ****         return NULL;
 1396              		.loc 1 68 9 view .LVU405
 1397 00a6 2046     		mov	r0, r4
 1398 00a8 FFF7FEFF 		bl	lv_obj_del
 1399              	.LVL143:
  69:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1400              		.loc 1 69 9 view .LVU406
  69:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1401              		.loc 1 69 16 is_stmt 0 view .LVU407
 1402 00ac 0024     		movs	r4, #0
 1403              	.LVL144:
  69:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1404              		.loc 1 69 16 view .LVU408
 1405 00ae ECE7     		b	.L71
 1406              	.LVL145:
 1407              	.L85:
  72:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(imgbtn);
 1408              		.loc 1 72 33 is_stmt 1 discriminator 1 view .LVU409
  72:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(imgbtn);
 1409              		.loc 1 72 51 is_stmt 0 discriminator 1 view .LVU410
 1410 00b0 2046     		mov	r0, r4
 1411 00b2 FFF7FEFF 		bl	lv_obj_get_signal_cb
 1412              	.LVL146:
  72:lvgl/src/lv_widgets/lv_imgbtn.c ****     if(ancestor_design == NULL) ancestor_design = lv_obj_get_design_cb(imgbtn);
 1413              		.loc 1 72 49 discriminator 1 view .LVU411
 1414 00b6 074B     		ldr	r3, .L88
 1415 00b8 1860     		str	r0, [r3]
 1416 00ba BBE7     		b	.L78
 1417              	.L86:
  73:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1418              		.loc 1 73 33 is_stmt 1 discriminator 1 view .LVU412
  73:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1419              		.loc 1 73 51 is_stmt 0 discriminator 1 view .LVU413
 1420 00bc 2046     		mov	r0, r4
 1421 00be FFF7FEFF 		bl	lv_obj_get_design_cb
 1422              	.LVL147:
  73:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1423              		.loc 1 73 49 discriminator 1 view .LVU414
 1424 00c2 054B     		ldr	r3, .L88+4
 1425 00c4 1860     		str	r0, [r3]
ARM GAS  D:\Temp\ccNxtRwL.s 			page 56


 1426 00c6 B9E7     		b	.L79
 1427              	.L87:
  91:lvgl/src/lv_widgets/lv_imgbtn.c ****     }
 1428              		.loc 1 91 9 is_stmt 1 view .LVU415
 1429 00c8 1021     		movs	r1, #16
 1430 00ca 2046     		mov	r0, r4
 1431 00cc FFF7FEFF 		bl	lv_theme_apply
 1432              	.LVL148:
 1433 00d0 DBE7     		b	.L71
 1434              	.L89:
 1435 00d2 00BF     		.align	2
 1436              	.L88:
 1437 00d4 00000000 		.word	.LANCHOR0
 1438 00d8 00000000 		.word	.LANCHOR1
 1439 00dc 00000000 		.word	lv_imgbtn_signal
 1440 00e0 00000000 		.word	lv_imgbtn_design
 1441 00e4 00000000 		.word	.LC1
 1442              		.cfi_endproc
 1443              	.LFE472:
 1445              		.section	.text.lv_imgbtn_set_src,"ax",%progbits
 1446              		.align	1
 1447              		.global	lv_imgbtn_set_src
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1451              		.fpu fpv4-sp-d16
 1453              	lv_imgbtn_set_src:
 1454              	.LVL149:
 1455              	.LFB473:
 122:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_OBJ(imgbtn, LV_OBJX_NAME);
 1456              		.loc 1 122 1 view -0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 0
 1459              		@ frame_needed = 0, uses_anonymous_args = 0
 122:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_OBJ(imgbtn, LV_OBJX_NAME);
 1460              		.loc 1 122 1 is_stmt 0 view .LVU417
 1461 0000 70B5     		push	{r4, r5, r6, lr}
 1462              	.LCFI11:
 1463              		.cfi_def_cfa_offset 16
 1464              		.cfi_offset 4, -16
 1465              		.cfi_offset 5, -12
 1466              		.cfi_offset 6, -8
 1467              		.cfi_offset 14, -4
 1468 0002 0446     		mov	r4, r0
 1469 0004 0D46     		mov	r5, r1
 1470 0006 1646     		mov	r6, r2
 123:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1471              		.loc 1 123 5 is_stmt 1 view .LVU418
 123:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1472              		.loc 1 123 5 view .LVU419
 1473 0008 FFF7FEFF 		bl	lv_debug_check_null
 1474              	.LVL150:
 123:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1475              		.loc 1 123 5 is_stmt 0 view .LVU420
 1476 000c 28B9     		cbnz	r0, .L91
 123:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1477              		.loc 1 123 5 is_stmt 1 discriminator 1 view .LVU421
ARM GAS  D:\Temp\ccNxtRwL.s 			page 57


 123:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1478              		.loc 1 123 5 discriminator 1 view .LVU422
 1479 000e 2246     		mov	r2, r4
 1480 0010 0023     		movs	r3, #0
 1481 0012 0948     		ldr	r0, .L94
 1482 0014 FFF7FEFF 		bl	lv_debug_log_error
 1483              	.LVL151:
 1484              	.L92:
 123:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1485              		.loc 1 123 5 discriminator 1 view .LVU423
 123:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1486              		.loc 1 123 5 discriminator 1 view .LVU424
 1487 0018 FEE7     		b	.L92
 1488              	.L91:
 123:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1489              		.loc 1 123 40 discriminator 2 view .LVU425
 125:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1490              		.loc 1 125 5 discriminator 2 view .LVU426
 125:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1491              		.loc 1 125 29 is_stmt 0 discriminator 2 view .LVU427
 1492 001a 2046     		mov	r0, r4
 1493 001c FFF7FEFF 		bl	lv_obj_get_ext_attr
 1494              	.LVL152:
 127:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 1495              		.loc 1 127 5 is_stmt 1 discriminator 2 view .LVU428
 127:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 1496              		.loc 1 127 29 is_stmt 0 discriminator 2 view .LVU429
 1497 0020 00EB8505 		add	r5, r0, r5, lsl #2
 1498 0024 6E60     		str	r6, [r5, #4]
 132:lvgl/src/lv_widgets/lv_imgbtn.c ****     refr_img(imgbtn);
 1499              		.loc 1 132 5 is_stmt 1 discriminator 2 view .LVU430
 132:lvgl/src/lv_widgets/lv_imgbtn.c ****     refr_img(imgbtn);
 1500              		.loc 1 132 16 is_stmt 0 discriminator 2 view .LVU431
 1501 0026 437F     		ldrb	r3, [r0, #29]	@ zero_extendqisi2
 1502 0028 6FF30003 		bfc	r3, #0, #1
 1503 002c 4377     		strb	r3, [r0, #29]
 133:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 1504              		.loc 1 133 5 is_stmt 1 discriminator 2 view .LVU432
 1505 002e 2046     		mov	r0, r4
 1506              	.LVL153:
 133:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 1507              		.loc 1 133 5 is_stmt 0 discriminator 2 view .LVU433
 1508 0030 FFF7FEFF 		bl	refr_img
 1509              	.LVL154:
 134:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1510              		.loc 1 134 1 discriminator 2 view .LVU434
 1511 0034 70BD     		pop	{r4, r5, r6, pc}
 1512              	.LVL155:
 1513              	.L95:
 134:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1514              		.loc 1 134 1 discriminator 2 view .LVU435
 1515 0036 00BF     		.align	2
 1516              	.L94:
 1517 0038 00000000 		.word	.LC2
 1518              		.cfi_endproc
 1519              	.LFE473:
 1521              		.section	.text.lv_imgbtn_set_state,"ax",%progbits
ARM GAS  D:\Temp\ccNxtRwL.s 			page 58


 1522              		.align	1
 1523              		.global	lv_imgbtn_set_state
 1524              		.syntax unified
 1525              		.thumb
 1526              		.thumb_func
 1527              		.fpu fpv4-sp-d16
 1529              	lv_imgbtn_set_state:
 1530              	.LVL156:
 1531              	.LFB474:
 179:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_btn_set_state(imgbtn, state);
 1532              		.loc 1 179 1 is_stmt 1 view -0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 179:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_btn_set_state(imgbtn, state);
 1536              		.loc 1 179 1 is_stmt 0 view .LVU437
 1537 0000 10B5     		push	{r4, lr}
 1538              	.LCFI12:
 1539              		.cfi_def_cfa_offset 8
 1540              		.cfi_offset 4, -8
 1541              		.cfi_offset 14, -4
 1542 0002 0446     		mov	r4, r0
 180:lvgl/src/lv_widgets/lv_imgbtn.c ****     refr_img(imgbtn);
 1543              		.loc 1 180 5 is_stmt 1 view .LVU438
 1544 0004 FFF7FEFF 		bl	lv_btn_set_state
 1545              	.LVL157:
 181:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 1546              		.loc 1 181 5 view .LVU439
 1547 0008 2046     		mov	r0, r4
 1548 000a FFF7FEFF 		bl	refr_img
 1549              	.LVL158:
 182:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1550              		.loc 1 182 1 is_stmt 0 view .LVU440
 1551 000e 10BD     		pop	{r4, pc}
 182:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1552              		.loc 1 182 1 view .LVU441
 1553              		.cfi_endproc
 1554              	.LFE474:
 1556              		.section	.text.lv_imgbtn_toggle,"ax",%progbits
 1557              		.align	1
 1558              		.global	lv_imgbtn_toggle
 1559              		.syntax unified
 1560              		.thumb
 1561              		.thumb_func
 1562              		.fpu fpv4-sp-d16
 1564              	lv_imgbtn_toggle:
 1565              	.LVL159:
 1566              	.LFB475:
 189:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_btn_toggle(imgbtn);
 1567              		.loc 1 189 1 is_stmt 1 view -0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
 189:lvgl/src/lv_widgets/lv_imgbtn.c ****     lv_btn_toggle(imgbtn);
 1571              		.loc 1 189 1 is_stmt 0 view .LVU443
 1572 0000 10B5     		push	{r4, lr}
 1573              	.LCFI13:
ARM GAS  D:\Temp\ccNxtRwL.s 			page 59


 1574              		.cfi_def_cfa_offset 8
 1575              		.cfi_offset 4, -8
 1576              		.cfi_offset 14, -4
 1577 0002 0446     		mov	r4, r0
 190:lvgl/src/lv_widgets/lv_imgbtn.c ****     refr_img(imgbtn);
 1578              		.loc 1 190 5 is_stmt 1 view .LVU444
 1579 0004 FFF7FEFF 		bl	lv_btn_toggle
 1580              	.LVL160:
 191:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 1581              		.loc 1 191 5 view .LVU445
 1582 0008 2046     		mov	r0, r4
 1583 000a FFF7FEFF 		bl	refr_img
 1584              	.LVL161:
 192:lvgl/src/lv_widgets/lv_imgbtn.c **** /*=====================
 1585              		.loc 1 192 1 is_stmt 0 view .LVU446
 1586 000e 10BD     		pop	{r4, pc}
 192:lvgl/src/lv_widgets/lv_imgbtn.c **** /*=====================
 1587              		.loc 1 192 1 view .LVU447
 1588              		.cfi_endproc
 1589              	.LFE475:
 1591              		.section	.text.lv_imgbtn_get_src,"ax",%progbits
 1592              		.align	1
 1593              		.global	lv_imgbtn_get_src
 1594              		.syntax unified
 1595              		.thumb
 1596              		.thumb_func
 1597              		.fpu fpv4-sp-d16
 1599              	lv_imgbtn_get_src:
 1600              	.LVL162:
 1601              	.LFB476:
 204:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_OBJ(imgbtn, LV_OBJX_NAME);
 1602              		.loc 1 204 1 is_stmt 1 view -0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 0, uses_anonymous_args = 0
 204:lvgl/src/lv_widgets/lv_imgbtn.c ****     LV_ASSERT_OBJ(imgbtn, LV_OBJX_NAME);
 1606              		.loc 1 204 1 is_stmt 0 view .LVU449
 1607 0000 38B5     		push	{r3, r4, r5, lr}
 1608              	.LCFI14:
 1609              		.cfi_def_cfa_offset 16
 1610              		.cfi_offset 3, -16
 1611              		.cfi_offset 4, -12
 1612              		.cfi_offset 5, -8
 1613              		.cfi_offset 14, -4
 1614 0002 0546     		mov	r5, r0
 1615 0004 0C46     		mov	r4, r1
 205:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1616              		.loc 1 205 5 is_stmt 1 view .LVU450
 205:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1617              		.loc 1 205 5 view .LVU451
 1618 0006 FFF7FEFF 		bl	lv_debug_check_null
 1619              	.LVL163:
 205:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1620              		.loc 1 205 5 is_stmt 0 view .LVU452
 1621 000a 28B9     		cbnz	r0, .L101
 205:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1622              		.loc 1 205 5 is_stmt 1 discriminator 1 view .LVU453
ARM GAS  D:\Temp\ccNxtRwL.s 			page 60


 205:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1623              		.loc 1 205 5 discriminator 1 view .LVU454
 1624 000c 2A46     		mov	r2, r5
 1625 000e 0023     		movs	r3, #0
 1626 0010 0548     		ldr	r0, .L104
 1627 0012 FFF7FEFF 		bl	lv_debug_log_error
 1628              	.LVL164:
 1629              	.L102:
 205:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1630              		.loc 1 205 5 discriminator 1 view .LVU455
 205:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1631              		.loc 1 205 5 discriminator 1 view .LVU456
 1632 0016 FEE7     		b	.L102
 1633              	.L101:
 205:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1634              		.loc 1 205 40 discriminator 2 view .LVU457
 207:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1635              		.loc 1 207 5 discriminator 2 view .LVU458
 207:lvgl/src/lv_widgets/lv_imgbtn.c **** 
 1636              		.loc 1 207 29 is_stmt 0 discriminator 2 view .LVU459
 1637 0018 2846     		mov	r0, r5
 1638 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
 1639              	.LVL165:
 209:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 1640              		.loc 1 209 5 is_stmt 1 discriminator 2 view .LVU460
 209:lvgl/src/lv_widgets/lv_imgbtn.c **** }
 1641              		.loc 1 209 28 is_stmt 0 discriminator 2 view .LVU461
 1642 001e 00EB8400 		add	r0, r0, r4, lsl #2
 1643              	.LVL166:
 210:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 1644              		.loc 1 210 1 discriminator 2 view .LVU462
 1645 0022 4068     		ldr	r0, [r0, #4]
 1646 0024 38BD     		pop	{r3, r4, r5, pc}
 1647              	.LVL167:
 1648              	.L105:
 210:lvgl/src/lv_widgets/lv_imgbtn.c **** #if LV_IMGBTN_TILED
 1649              		.loc 1 210 1 discriminator 2 view .LVU463
 1650 0026 00BF     		.align	2
 1651              	.L104:
 1652 0028 00000000 		.word	.LC2
 1653              		.cfi_endproc
 1654              	.LFE476:
 1656              		.section	.bss.ancestor_design,"aw",%nobits
 1657              		.align	2
 1658              		.set	.LANCHOR1,. + 0
 1661              	ancestor_design:
 1662 0000 00000000 		.space	4
 1663              		.section	.bss.ancestor_signal,"aw",%nobits
 1664              		.align	2
 1665              		.set	.LANCHOR0,. + 0
 1668              	ancestor_signal:
 1669 0000 00000000 		.space	4
 1670              		.section	.rodata.lv_imgbtn_create.str1.4,"aMS",%progbits,1
 1671              		.align	2
 1672              	.LC1:
 1673 0000 4F757420 		.ascii	"Out of memory\000"
 1673      6F66206D 
ARM GAS  D:\Temp\ccNxtRwL.s 			page 61


 1673      656D6F72 
 1673      7900
 1674              		.section	.rodata.lv_imgbtn_set_src.str1.4,"aMS",%progbits,1
 1675              		.align	2
 1676              	.LC2:
 1677 0000 4E554C4C 		.ascii	"NULL pointer\000"
 1677      20706F69 
 1677      6E746572 
 1677      00
 1678              		.section	.rodata.lv_imgbtn_signal.str1.4,"aMS",%progbits,1
 1679              		.align	2
 1680              	.LC0:
 1681 0000 6C765F69 		.ascii	"lv_imgbtn\000"
 1681      6D676274 
 1681      6E00
 1682              		.text
 1683              	.Letext0:
 1684              		.file 7 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 1685              		.file 8 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 1686              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 1687              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1688              		.file 11 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 1689              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1690              		.file 13 "lvgl/lv_conf.h"
 1691              		.file 14 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 1692              		.file 15 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 1693              		.file 16 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 1694              		.file 17 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_types.h"
 1695              		.file 18 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_math.h"
 1696              		.file 19 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_color.h"
 1697              		.file 20 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_anim.h"
 1698              		.file 21 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_draw\\lv_draw_mask.h"
 1699              		.file 22 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_draw\\lv_draw_blend.h"
 1700              		.file 23 "lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_style.h"
 1701              		.file 24 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_ll.h"
 1702              		.file 25 "lvgl/src/lv_widgets/../lv_themes/../lv_core/lv_obj.h"
 1703              		.file 26 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_hal\\lv_hal_indev.h"
 1704              		.file 27 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_draw\\lv_draw_rect.h"
 1705              		.file 28 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_bidi.h"
 1706              		.file 29 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_txt.h"
 1707              		.file 30 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_draw\\lv_draw_label.h"
 1708              		.file 31 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_draw\\lv_img_buf.h"
 1709              		.file 32 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_draw\\lv_img_decoder.h"
 1710              		.file 33 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_draw\\lv_draw_img.h"
 1711              		.file 34 "lvgl/src/lv_widgets/../lv_themes/lv_theme.h"
 1712              		.file 35 "lvgl/src/lv_widgets/lv_cont.h"
 1713              		.file 36 "lvgl/src/lv_widgets/lv_btn.h"
 1714              		.file 37 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 1715              		.file 38 "lvgl/src/lv_widgets/../lv_misc/lv_debug.h"
ARM GAS  D:\Temp\ccNxtRwL.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_imgbtn.c
  D:\Temp\ccNxtRwL.s:18     .text.suggest_state:0000000000000000 $t
  D:\Temp\ccNxtRwL.s:25     .text.suggest_state:0000000000000000 suggest_state
  D:\Temp\ccNxtRwL.s:64     .text.suggest_state:000000000000001e $d
  D:\Temp\ccNxtRwL.s:151    .text.lv_imgbtn_design:0000000000000000 $t
  D:\Temp\ccNxtRwL.s:157    .text.lv_imgbtn_design:0000000000000000 lv_imgbtn_design
  D:\Temp\ccNxtRwL.s:816    .text.refr_img:0000000000000000 $t
  D:\Temp\ccNxtRwL.s:822    .text.refr_img:0000000000000000 refr_img
  D:\Temp\ccNxtRwL.s:1024   .text.lv_imgbtn_signal:0000000000000000 $t
  D:\Temp\ccNxtRwL.s:1030   .text.lv_imgbtn_signal:0000000000000000 lv_imgbtn_signal
  D:\Temp\ccNxtRwL.s:1217   .text.lv_imgbtn_signal:00000000000000a4 $d
  D:\Temp\ccNxtRwL.s:1223   .text.lv_imgbtn_create:0000000000000000 $t
  D:\Temp\ccNxtRwL.s:1230   .text.lv_imgbtn_create:0000000000000000 lv_imgbtn_create
  D:\Temp\ccNxtRwL.s:1437   .text.lv_imgbtn_create:00000000000000d4 $d
  D:\Temp\ccNxtRwL.s:1446   .text.lv_imgbtn_set_src:0000000000000000 $t
  D:\Temp\ccNxtRwL.s:1453   .text.lv_imgbtn_set_src:0000000000000000 lv_imgbtn_set_src
  D:\Temp\ccNxtRwL.s:1517   .text.lv_imgbtn_set_src:0000000000000038 $d
  D:\Temp\ccNxtRwL.s:1522   .text.lv_imgbtn_set_state:0000000000000000 $t
  D:\Temp\ccNxtRwL.s:1529   .text.lv_imgbtn_set_state:0000000000000000 lv_imgbtn_set_state
  D:\Temp\ccNxtRwL.s:1557   .text.lv_imgbtn_toggle:0000000000000000 $t
  D:\Temp\ccNxtRwL.s:1564   .text.lv_imgbtn_toggle:0000000000000000 lv_imgbtn_toggle
  D:\Temp\ccNxtRwL.s:1592   .text.lv_imgbtn_get_src:0000000000000000 $t
  D:\Temp\ccNxtRwL.s:1599   .text.lv_imgbtn_get_src:0000000000000000 lv_imgbtn_get_src
  D:\Temp\ccNxtRwL.s:1652   .text.lv_imgbtn_get_src:0000000000000028 $d
  D:\Temp\ccNxtRwL.s:1657   .bss.ancestor_design:0000000000000000 $d
  D:\Temp\ccNxtRwL.s:1661   .bss.ancestor_design:0000000000000000 ancestor_design
  D:\Temp\ccNxtRwL.s:1664   .bss.ancestor_signal:0000000000000000 $d
  D:\Temp\ccNxtRwL.s:1668   .bss.ancestor_signal:0000000000000000 ancestor_signal
  D:\Temp\ccNxtRwL.s:1671   .rodata.lv_imgbtn_create.str1.4:0000000000000000 $d
  D:\Temp\ccNxtRwL.s:1675   .rodata.lv_imgbtn_set_src.str1.4:0000000000000000 $d
  D:\Temp\ccNxtRwL.s:1679   .rodata.lv_imgbtn_signal.str1.4:0000000000000000 $d
  D:\Temp\ccNxtRwL.s:69     .text.suggest_state:0000000000000023 $d
  D:\Temp\ccNxtRwL.s:69     .text.suggest_state:0000000000000024 $t

UNDEFINED SYMBOLS
lv_obj_get_ext_attr
_lv_area_is_in
lv_obj_get_coords
lv_draw_rect_dsc_init
lv_obj_init_draw_rect_dsc
_lv_obj_get_style_int
lv_draw_rect
lv_btn_get_state
_lv_mem_buf_get
lv_draw_mask_radius_init
lv_draw_mask_add
lv_img_src_get_type
lv_draw_img_dsc_init
lv_obj_init_draw_img_dsc
lv_draw_img
lv_draw_label_dsc_init
lv_obj_init_draw_label_dsc
lv_draw_label
lv_draw_mask_remove_custom
_lv_mem_buf_release
lv_img_decoder_get_info
ARM GAS  D:\Temp\ccNxtRwL.s 			page 63


lv_obj_invalidate
_lv_obj_get_style_ptr
strlen
_lv_txt_get_width
lv_obj_set_height
lv_obj_set_size
lv_obj_handle_get_type_signal
lv_btn_create
lv_debug_check_null
lv_obj_allocate_ext_attr
_lv_memset_00
lv_obj_set_signal_cb
lv_obj_set_design_cb
_lv_memcpy
lv_obj_refresh_style
lv_debug_log_error
lv_obj_del
lv_obj_get_signal_cb
lv_obj_get_design_cb
lv_theme_apply
lv_btn_set_state
lv_btn_toggle
