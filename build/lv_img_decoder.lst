ARM GAS  D:\Temp\ccmKsZee.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_img_decoder.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_img_decoder_built_in_line_true_color,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	lv_img_decoder_built_in_line_true_color:
  26              	.LVL0:
  27              	.LFB182:
  28              		.file 1 "lvgl/src/lv_draw/lv_img_decoder.c"
   1:lvgl/src/lv_draw/lv_img_decoder.c **** /**
   2:lvgl/src/lv_draw/lv_img_decoder.c ****  * @file lv_img_decoder.c
   3:lvgl/src/lv_draw/lv_img_decoder.c ****  *
   4:lvgl/src/lv_draw/lv_img_decoder.c ****  */
   5:lvgl/src/lv_draw/lv_img_decoder.c **** 
   6:lvgl/src/lv_draw/lv_img_decoder.c **** /*********************
   7:lvgl/src/lv_draw/lv_img_decoder.c ****  *      INCLUDES
   8:lvgl/src/lv_draw/lv_img_decoder.c ****  *********************/
   9:lvgl/src/lv_draw/lv_img_decoder.c **** #include "lv_img_decoder.h"
  10:lvgl/src/lv_draw/lv_img_decoder.c **** #include "../lv_misc/lv_debug.h"
  11:lvgl/src/lv_draw/lv_img_decoder.c **** #include "../lv_draw/lv_draw_img.h"
  12:lvgl/src/lv_draw/lv_img_decoder.c **** #include "../lv_misc/lv_ll.h"
  13:lvgl/src/lv_draw/lv_img_decoder.c **** #include "../lv_misc/lv_color.h"
  14:lvgl/src/lv_draw/lv_img_decoder.c **** #include "../lv_misc/lv_gc.h"
  15:lvgl/src/lv_draw/lv_img_decoder.c **** 
  16:lvgl/src/lv_draw/lv_img_decoder.c **** /*********************
  17:lvgl/src/lv_draw/lv_img_decoder.c ****  *      DEFINES
  18:lvgl/src/lv_draw/lv_img_decoder.c ****  *********************/
  19:lvgl/src/lv_draw/lv_img_decoder.c **** #define CF_BUILT_IN_FIRST LV_IMG_CF_TRUE_COLOR
  20:lvgl/src/lv_draw/lv_img_decoder.c **** #define CF_BUILT_IN_LAST LV_IMG_CF_ALPHA_8BIT
  21:lvgl/src/lv_draw/lv_img_decoder.c **** 
  22:lvgl/src/lv_draw/lv_img_decoder.c **** /**********************
  23:lvgl/src/lv_draw/lv_img_decoder.c ****  *      TYPEDEFS
  24:lvgl/src/lv_draw/lv_img_decoder.c ****  **********************/
  25:lvgl/src/lv_draw/lv_img_decoder.c **** typedef struct {
  26:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
  27:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_fs_file_t * f;
  28:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
  29:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_color_t * palette;
  30:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_opa_t * opa;
ARM GAS  D:\Temp\ccmKsZee.s 			page 2


  31:lvgl/src/lv_draw/lv_img_decoder.c **** } lv_img_decoder_built_in_data_t;
  32:lvgl/src/lv_draw/lv_img_decoder.c **** 
  33:lvgl/src/lv_draw/lv_img_decoder.c **** /**********************
  34:lvgl/src/lv_draw/lv_img_decoder.c ****  *  STATIC PROTOTYPES
  35:lvgl/src/lv_draw/lv_img_decoder.c ****  **********************/
  36:lvgl/src/lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_true_color(lv_img_decoder_dsc_t * dsc, lv_coord_t x, l
  37:lvgl/src/lv_draw/lv_img_decoder.c ****                                                         lv_coord_t len, uint8_t * buf);
  38:lvgl/src/lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_alpha(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coo
  39:lvgl/src/lv_draw/lv_img_decoder.c ****                                                    lv_coord_t len, uint8_t * buf);
  40:lvgl/src/lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_indexed(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_c
  41:lvgl/src/lv_draw/lv_img_decoder.c ****                                                      lv_coord_t len, uint8_t * buf);
  42:lvgl/src/lv_draw/lv_img_decoder.c **** 
  43:lvgl/src/lv_draw/lv_img_decoder.c **** /**********************
  44:lvgl/src/lv_draw/lv_img_decoder.c ****  *  STATIC VARIABLES
  45:lvgl/src/lv_draw/lv_img_decoder.c ****  **********************/
  46:lvgl/src/lv_draw/lv_img_decoder.c **** 
  47:lvgl/src/lv_draw/lv_img_decoder.c **** /**********************
  48:lvgl/src/lv_draw/lv_img_decoder.c ****  *      MACROS
  49:lvgl/src/lv_draw/lv_img_decoder.c ****  **********************/
  50:lvgl/src/lv_draw/lv_img_decoder.c **** 
  51:lvgl/src/lv_draw/lv_img_decoder.c **** /**********************
  52:lvgl/src/lv_draw/lv_img_decoder.c ****  *   GLOBAL FUNCTIONS
  53:lvgl/src/lv_draw/lv_img_decoder.c ****  **********************/
  54:lvgl/src/lv_draw/lv_img_decoder.c **** 
  55:lvgl/src/lv_draw/lv_img_decoder.c **** /**
  56:lvgl/src/lv_draw/lv_img_decoder.c ****  * Initialize the image decoder module
  57:lvgl/src/lv_draw/lv_img_decoder.c ****  * */
  58:lvgl/src/lv_draw/lv_img_decoder.c **** void _lv_img_decoder_init(void)
  59:lvgl/src/lv_draw/lv_img_decoder.c **** {
  60:lvgl/src/lv_draw/lv_img_decoder.c ****     _lv_ll_init(&LV_GC_ROOT(_lv_img_defoder_ll), sizeof(lv_img_decoder_t));
  61:lvgl/src/lv_draw/lv_img_decoder.c **** 
  62:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * decoder;
  63:lvgl/src/lv_draw/lv_img_decoder.c **** 
  64:lvgl/src/lv_draw/lv_img_decoder.c ****     /*Create a decoder for the built in color format*/
  65:lvgl/src/lv_draw/lv_img_decoder.c ****     decoder = lv_img_decoder_create();
  66:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) {
  67:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("lv_img_decoder_init: out of memory");
  68:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(decoder);
  69:lvgl/src/lv_draw/lv_img_decoder.c ****         return;
  70:lvgl/src/lv_draw/lv_img_decoder.c ****     }
  71:lvgl/src/lv_draw/lv_img_decoder.c **** 
  72:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_info_cb(decoder, lv_img_decoder_built_in_info);
  73:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_open_cb(decoder, lv_img_decoder_built_in_open);
  74:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_read_line_cb(decoder, lv_img_decoder_built_in_read_line);
  75:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_close_cb(decoder, lv_img_decoder_built_in_close);
  76:lvgl/src/lv_draw/lv_img_decoder.c **** }
  77:lvgl/src/lv_draw/lv_img_decoder.c **** 
  78:lvgl/src/lv_draw/lv_img_decoder.c **** /**
  79:lvgl/src/lv_draw/lv_img_decoder.c ****  * Get information about an image.
  80:lvgl/src/lv_draw/lv_img_decoder.c ****  * Try the created image decoder one by one. Once one is able to get info that info will be used.
  81:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param src the image source. E.g. file name or variable.
  82:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param header the image info will be stored here
  83:lvgl/src/lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: success; LV_RES_INV: wasn't able to get info about the image
  84:lvgl/src/lv_draw/lv_img_decoder.c ****  */
  85:lvgl/src/lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_get_info(const char * src, lv_img_header_t * header)
  86:lvgl/src/lv_draw/lv_img_decoder.c **** {
  87:lvgl/src/lv_draw/lv_img_decoder.c ****     header->always_zero = 0;
ARM GAS  D:\Temp\ccmKsZee.s 			page 3


  88:lvgl/src/lv_draw/lv_img_decoder.c ****     header->h = 0;
  89:lvgl/src/lv_draw/lv_img_decoder.c ****     header->w = 0;
  90:lvgl/src/lv_draw/lv_img_decoder.c ****     header->cf = LV_IMG_CF_UNKNOWN;
  91:lvgl/src/lv_draw/lv_img_decoder.c **** 
  92:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
  93:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * d;
  94:lvgl/src/lv_draw/lv_img_decoder.c ****     _LV_LL_READ(LV_GC_ROOT(_lv_img_defoder_ll), d) {
  95:lvgl/src/lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
  96:lvgl/src/lv_draw/lv_img_decoder.c ****         if(d->info_cb) {
  97:lvgl/src/lv_draw/lv_img_decoder.c ****             res = d->info_cb(d, src, header);
  98:lvgl/src/lv_draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
  99:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 100:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 101:lvgl/src/lv_draw/lv_img_decoder.c **** 
 102:lvgl/src/lv_draw/lv_img_decoder.c ****     return res;
 103:lvgl/src/lv_draw/lv_img_decoder.c **** }
 104:lvgl/src/lv_draw/lv_img_decoder.c **** 
 105:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 106:lvgl/src/lv_draw/lv_img_decoder.c ****  * Open an image.
 107:lvgl/src/lv_draw/lv_img_decoder.c ****  * Try the created image decoder one by one. Once one is able to open the image that decoder is sav
 108:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param dsc describe a decoding session. Simply a pointer to an `lv_img_decoder_dsc_t` variable.
 109:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param src the image source. Can be
 110:lvgl/src/lv_draw/lv_img_decoder.c ****  *  1) File name: E.g. "S:folder/img1.png" (The drivers needs to registered via `lv_fs_add_drv()`)
 111:lvgl/src/lv_draw/lv_img_decoder.c ****  *  2) Variable: Pointer to an `lv_img_dsc_t` variable
 112:lvgl/src/lv_draw/lv_img_decoder.c ****  *  3) Symbol: E.g. `LV_SYMBOL_OK`
 113:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param color The color of the image with `LV_IMG_CF_ALPHA_...`
 114:lvgl/src/lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: opened the image. `dsc->img_data` and `dsc->header` are set.
 115:lvgl/src/lv_draw/lv_img_decoder.c ****  *         LV_RES_INV: none of the registered image decoders were able to open the image.
 116:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 117:lvgl/src/lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_open(lv_img_decoder_dsc_t * dsc, const void * src, lv_color_t color)
 118:lvgl/src/lv_draw/lv_img_decoder.c **** {
 119:lvgl/src/lv_draw/lv_img_decoder.c ****     dsc->color     = color;
 120:lvgl/src/lv_draw/lv_img_decoder.c ****     dsc->src_type  = lv_img_src_get_type(src);
 121:lvgl/src/lv_draw/lv_img_decoder.c ****     dsc->user_data = NULL;
 122:lvgl/src/lv_draw/lv_img_decoder.c **** 
 123:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_FILE) {
 124:lvgl/src/lv_draw/lv_img_decoder.c ****         size_t fnlen = strlen(src);
 125:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->src = lv_mem_alloc(fnlen + 1);
 126:lvgl/src/lv_draw/lv_img_decoder.c ****         strcpy((char *)dsc->src, src);
 127:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 128:lvgl/src/lv_draw/lv_img_decoder.c ****     else {
 129:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->src       = src;
 130:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 131:lvgl/src/lv_draw/lv_img_decoder.c **** 
 132:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 133:lvgl/src/lv_draw/lv_img_decoder.c **** 
 134:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * d;
 135:lvgl/src/lv_draw/lv_img_decoder.c ****     _LV_LL_READ(LV_GC_ROOT(_lv_img_defoder_ll), d) {
 136:lvgl/src/lv_draw/lv_img_decoder.c ****         /*Info an Open callbacks are required*/
 137:lvgl/src/lv_draw/lv_img_decoder.c ****         if(d->info_cb == NULL || d->open_cb == NULL) continue;
 138:lvgl/src/lv_draw/lv_img_decoder.c **** 
 139:lvgl/src/lv_draw/lv_img_decoder.c ****         res = d->info_cb(d, src, &dsc->header);
 140:lvgl/src/lv_draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 141:lvgl/src/lv_draw/lv_img_decoder.c **** 
 142:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->error_msg = NULL;
 143:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->img_data  = NULL;
 144:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->decoder   = d;
ARM GAS  D:\Temp\ccmKsZee.s 			page 4


 145:lvgl/src/lv_draw/lv_img_decoder.c **** 
 146:lvgl/src/lv_draw/lv_img_decoder.c ****         res = d->open_cb(d, dsc);
 147:lvgl/src/lv_draw/lv_img_decoder.c **** 
 148:lvgl/src/lv_draw/lv_img_decoder.c ****         /*Opened successfully. It is a good decoder to for this image source*/
 149:lvgl/src/lv_draw/lv_img_decoder.c ****         if(res == LV_RES_OK) break;
 150:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 151:lvgl/src/lv_draw/lv_img_decoder.c **** 
 152:lvgl/src/lv_draw/lv_img_decoder.c ****     return res;
 153:lvgl/src/lv_draw/lv_img_decoder.c **** }
 154:lvgl/src/lv_draw/lv_img_decoder.c **** 
 155:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 156:lvgl/src/lv_draw/lv_img_decoder.c ****  * Read a line from an opened image
 157:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param dsc pointer to `lv_img_decoder_dsc_t` used in `lv_img_decoder_open`
 158:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param x start X coordinate (from left)
 159:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param y start Y coordinate (from top)
 160:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param len number of pixels to read
 161:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param buf store the data here
 162:lvgl/src/lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: success; LV_RES_INV: an error occurred
 163:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 164:lvgl/src/lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_read_line(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_coord_
 165:lvgl/src/lv_draw/lv_img_decoder.c **** {
 166:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 167:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->decoder->read_line_cb) res = dsc->decoder->read_line_cb(dsc->decoder, dsc, x, y, len, b
 168:lvgl/src/lv_draw/lv_img_decoder.c **** 
 169:lvgl/src/lv_draw/lv_img_decoder.c ****     return res;
 170:lvgl/src/lv_draw/lv_img_decoder.c **** }
 171:lvgl/src/lv_draw/lv_img_decoder.c **** 
 172:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 173:lvgl/src/lv_draw/lv_img_decoder.c ****  * Close a decoding session
 174:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param dsc pointer to `lv_img_decoder_dsc_t` used in `lv_img_decoder_open`
 175:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 176:lvgl/src/lv_draw/lv_img_decoder.c **** void lv_img_decoder_close(lv_img_decoder_dsc_t * dsc)
 177:lvgl/src/lv_draw/lv_img_decoder.c **** {
 178:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->decoder) {
 179:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->decoder->close_cb) dsc->decoder->close_cb(dsc->decoder, dsc);
 180:lvgl/src/lv_draw/lv_img_decoder.c **** 
 181:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_FILE) {
 182:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_mem_free(dsc->src);
 183:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->src = NULL;
 184:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 185:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 186:lvgl/src/lv_draw/lv_img_decoder.c **** }
 187:lvgl/src/lv_draw/lv_img_decoder.c **** 
 188:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 189:lvgl/src/lv_draw/lv_img_decoder.c ****  * Create a new image decoder
 190:lvgl/src/lv_draw/lv_img_decoder.c ****  * @return pointer to the new image decoder
 191:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 192:lvgl/src/lv_draw/lv_img_decoder.c **** lv_img_decoder_t * lv_img_decoder_create(void)
 193:lvgl/src/lv_draw/lv_img_decoder.c **** {
 194:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * decoder;
 195:lvgl/src/lv_draw/lv_img_decoder.c ****     decoder = _lv_ll_ins_head(&LV_GC_ROOT(_lv_img_defoder_ll));
 196:lvgl/src/lv_draw/lv_img_decoder.c ****     LV_ASSERT_MEM(decoder);
 197:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 198:lvgl/src/lv_draw/lv_img_decoder.c **** 
 199:lvgl/src/lv_draw/lv_img_decoder.c ****     _lv_memset_00(decoder, sizeof(lv_img_decoder_t));
 200:lvgl/src/lv_draw/lv_img_decoder.c **** 
 201:lvgl/src/lv_draw/lv_img_decoder.c ****     return decoder;
ARM GAS  D:\Temp\ccmKsZee.s 			page 5


 202:lvgl/src/lv_draw/lv_img_decoder.c **** }
 203:lvgl/src/lv_draw/lv_img_decoder.c **** 
 204:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 205:lvgl/src/lv_draw/lv_img_decoder.c ****  * Delete an image decoder
 206:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 207:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 208:lvgl/src/lv_draw/lv_img_decoder.c **** void lv_img_decoder_delete(lv_img_decoder_t * decoder)
 209:lvgl/src/lv_draw/lv_img_decoder.c **** {
 210:lvgl/src/lv_draw/lv_img_decoder.c ****     _lv_ll_remove(&LV_GC_ROOT(_lv_img_defoder_ll), decoder);
 211:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_mem_free(decoder);
 212:lvgl/src/lv_draw/lv_img_decoder.c **** }
 213:lvgl/src/lv_draw/lv_img_decoder.c **** 
 214:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 215:lvgl/src/lv_draw/lv_img_decoder.c ****  * Set a callback to get information about the image
 216:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 217:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param info_cb a function to collect info about an image (fill an `lv_img_header_t` struct)
 218:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 219:lvgl/src/lv_draw/lv_img_decoder.c **** void lv_img_decoder_set_info_cb(lv_img_decoder_t * decoder, lv_img_decoder_info_f_t info_cb)
 220:lvgl/src/lv_draw/lv_img_decoder.c **** {
 221:lvgl/src/lv_draw/lv_img_decoder.c ****     decoder->info_cb = info_cb;
 222:lvgl/src/lv_draw/lv_img_decoder.c **** }
 223:lvgl/src/lv_draw/lv_img_decoder.c **** 
 224:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 225:lvgl/src/lv_draw/lv_img_decoder.c ****  * Set a callback to open an image
 226:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 227:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param open_cb a function to open an image
 228:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 229:lvgl/src/lv_draw/lv_img_decoder.c **** void lv_img_decoder_set_open_cb(lv_img_decoder_t * decoder, lv_img_decoder_open_f_t open_cb)
 230:lvgl/src/lv_draw/lv_img_decoder.c **** {
 231:lvgl/src/lv_draw/lv_img_decoder.c ****     decoder->open_cb = open_cb;
 232:lvgl/src/lv_draw/lv_img_decoder.c **** }
 233:lvgl/src/lv_draw/lv_img_decoder.c **** 
 234:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 235:lvgl/src/lv_draw/lv_img_decoder.c ****  * Set a callback to a decoded line of an image
 236:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 237:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param read_line_cb a function to read a line of an image
 238:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 239:lvgl/src/lv_draw/lv_img_decoder.c **** void lv_img_decoder_set_read_line_cb(lv_img_decoder_t * decoder, lv_img_decoder_read_line_f_t read_
 240:lvgl/src/lv_draw/lv_img_decoder.c **** {
 241:lvgl/src/lv_draw/lv_img_decoder.c ****     decoder->read_line_cb = read_line_cb;
 242:lvgl/src/lv_draw/lv_img_decoder.c **** }
 243:lvgl/src/lv_draw/lv_img_decoder.c **** 
 244:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 245:lvgl/src/lv_draw/lv_img_decoder.c ****  * Set a callback to close a decoding session. E.g. close files and free other resources.
 246:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 247:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param close_cb a function to close a decoding session
 248:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 249:lvgl/src/lv_draw/lv_img_decoder.c **** void lv_img_decoder_set_close_cb(lv_img_decoder_t * decoder, lv_img_decoder_close_f_t close_cb)
 250:lvgl/src/lv_draw/lv_img_decoder.c **** {
 251:lvgl/src/lv_draw/lv_img_decoder.c ****     decoder->close_cb = close_cb;
 252:lvgl/src/lv_draw/lv_img_decoder.c **** }
 253:lvgl/src/lv_draw/lv_img_decoder.c **** 
 254:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 255:lvgl/src/lv_draw/lv_img_decoder.c ****  * Get info about a built-in image
 256:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param decoder the decoder where this function belongs
 257:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param src the image source: pointer to an `lv_img_dsc_t` variable, a file path or a symbol
 258:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param header store the image data here
ARM GAS  D:\Temp\ccmKsZee.s 			page 6


 259:lvgl/src/lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: the info is successfully stored in `header`; LV_RES_INV: unknown format or ot
 260:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 261:lvgl/src/lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_built_in_info(lv_img_decoder_t * decoder, const void * src, lv_img_header_t
 262:lvgl/src/lv_draw/lv_img_decoder.c **** {
 263:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 264:lvgl/src/lv_draw/lv_img_decoder.c **** 
 265:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_src_t src_type = lv_img_src_get_type(src);
 266:lvgl/src/lv_draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
 267:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_img_cf_t cf = ((lv_img_dsc_t *)src)->header.cf;
 268:lvgl/src/lv_draw/lv_img_decoder.c ****         if(cf < CF_BUILT_IN_FIRST || cf > CF_BUILT_IN_LAST) return LV_RES_INV;
 269:lvgl/src/lv_draw/lv_img_decoder.c **** 
 270:lvgl/src/lv_draw/lv_img_decoder.c ****         header->w  = ((lv_img_dsc_t *)src)->header.w;
 271:lvgl/src/lv_draw/lv_img_decoder.c ****         header->h  = ((lv_img_dsc_t *)src)->header.h;
 272:lvgl/src/lv_draw/lv_img_decoder.c ****         header->cf = ((lv_img_dsc_t *)src)->header.cf;
 273:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 274:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 275:lvgl/src/lv_draw/lv_img_decoder.c ****     else if(src_type == LV_IMG_SRC_FILE) {
 276:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_fs_file_t file;
 277:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_fs_res_t res;
 278:lvgl/src/lv_draw/lv_img_decoder.c ****         uint32_t rn;
 279:lvgl/src/lv_draw/lv_img_decoder.c ****         res = lv_fs_open(&file, src, LV_FS_MODE_RD);
 280:lvgl/src/lv_draw/lv_img_decoder.c ****         if(res == LV_FS_RES_OK) {
 281:lvgl/src/lv_draw/lv_img_decoder.c ****             res = lv_fs_read(&file, header, sizeof(lv_img_header_t), &rn);
 282:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_fs_close(&file);
 283:lvgl/src/lv_draw/lv_img_decoder.c ****             if(res != LV_FS_RES_OK || rn != sizeof(lv_img_header_t)) {
 284:lvgl/src/lv_draw/lv_img_decoder.c ****                 LV_LOG_WARN("Image get info get read file header");
 285:lvgl/src/lv_draw/lv_img_decoder.c ****                 return LV_RES_INV;
 286:lvgl/src/lv_draw/lv_img_decoder.c ****             }
 287:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 288:lvgl/src/lv_draw/lv_img_decoder.c **** 
 289:lvgl/src/lv_draw/lv_img_decoder.c ****         if(header->cf < CF_BUILT_IN_FIRST || header->cf > CF_BUILT_IN_LAST) return LV_RES_INV;
 290:lvgl/src/lv_draw/lv_img_decoder.c **** 
 291:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 292:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 293:lvgl/src/lv_draw/lv_img_decoder.c ****     else if(src_type == LV_IMG_SRC_SYMBOL) {
 294:lvgl/src/lv_draw/lv_img_decoder.c ****         /*The size depend on the font but it is unknown here. It should be handled outside of the
 295:lvgl/src/lv_draw/lv_img_decoder.c ****          * function*/
 296:lvgl/src/lv_draw/lv_img_decoder.c ****         header->w = 1;
 297:lvgl/src/lv_draw/lv_img_decoder.c ****         header->h = 1;
 298:lvgl/src/lv_draw/lv_img_decoder.c ****         /* Symbols always have transparent parts. Important because of cover check in the design
 299:lvgl/src/lv_draw/lv_img_decoder.c ****          * function. The actual value doesn't matter because lv_draw_label will draw it*/
 300:lvgl/src/lv_draw/lv_img_decoder.c ****         header->cf = LV_IMG_CF_ALPHA_1BIT;
 301:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 302:lvgl/src/lv_draw/lv_img_decoder.c ****     else {
 303:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Image get info found unknown src type");
 304:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 305:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 306:lvgl/src/lv_draw/lv_img_decoder.c ****     return LV_RES_OK;
 307:lvgl/src/lv_draw/lv_img_decoder.c **** }
 308:lvgl/src/lv_draw/lv_img_decoder.c **** 
 309:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 310:lvgl/src/lv_draw/lv_img_decoder.c ****  * Open a built in image
 311:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param decoder the decoder where this function belongs
 312:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param dsc pointer to decoder descriptor. `src`, `style` are already initialized in it.
 313:lvgl/src/lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: the info is successfully stored in `header`; LV_RES_INV: unknown format or ot
 314:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 315:lvgl/src/lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_built_in_open(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)
ARM GAS  D:\Temp\ccmKsZee.s 			page 7


 316:lvgl/src/lv_draw/lv_img_decoder.c **** {
 317:lvgl/src/lv_draw/lv_img_decoder.c ****     /*Open the file if it's a file*/
 318:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_FILE) {
 319:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 320:lvgl/src/lv_draw/lv_img_decoder.c **** 
 321:lvgl/src/lv_draw/lv_img_decoder.c ****         /*Support only "*.bin" files*/
 322:lvgl/src/lv_draw/lv_img_decoder.c ****         if(strcmp(lv_fs_get_ext(dsc->src), "bin")) return LV_RES_INV;
 323:lvgl/src/lv_draw/lv_img_decoder.c **** 
 324:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_fs_file_t f;
 325:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_fs_res_t res = lv_fs_open(&f, dsc->src, LV_FS_MODE_RD);
 326:lvgl/src/lv_draw/lv_img_decoder.c ****         if(res != LV_FS_RES_OK) {
 327:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_LOG_WARN("Built-in image decoder can't open the file");
 328:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 329:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 330:lvgl/src/lv_draw/lv_img_decoder.c **** 
 331:lvgl/src/lv_draw/lv_img_decoder.c ****         /*If the file was open successfully save the file descriptor*/
 332:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->user_data == NULL) {
 333:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 334:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_ASSERT_MEM(dsc->user_data);
 335:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 336:lvgl/src/lv_draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 337:lvgl/src/lv_draw/lv_img_decoder.c ****                 return LV_RES_INV;
 338:lvgl/src/lv_draw/lv_img_decoder.c ****             }
 339:lvgl/src/lv_draw/lv_img_decoder.c ****             _lv_memset_00(dsc->user_data, sizeof(lv_img_decoder_built_in_data_t));
 340:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 341:lvgl/src/lv_draw/lv_img_decoder.c **** 
 342:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 343:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->f = lv_mem_alloc(sizeof(f));
 344:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->f);
 345:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->f == NULL) {
 346:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 347:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_img_decoder_built_in_close(decoder, dsc);
 348:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 349:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 350:lvgl/src/lv_draw/lv_img_decoder.c **** 
 351:lvgl/src/lv_draw/lv_img_decoder.c ****         _lv_memcpy_small(user_data->f, &f, sizeof(f));
 352:lvgl/src/lv_draw/lv_img_decoder.c **** 
 353:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 354:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Image built-in decoder cannot read file because LV_USE_FILESYSTEM = 0");
 355:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 356:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 357:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 358:lvgl/src/lv_draw/lv_img_decoder.c ****     else if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 359:lvgl/src/lv_draw/lv_img_decoder.c ****         /*The variables should have valid data*/
 360:lvgl/src/lv_draw/lv_img_decoder.c ****         if(((lv_img_dsc_t *)dsc->src)->data == NULL) {
 361:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 362:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 363:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 364:lvgl/src/lv_draw/lv_img_decoder.c **** 
 365:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_cf_t cf = dsc->header.cf;
 366:lvgl/src/lv_draw/lv_img_decoder.c ****     /*Process true color formats*/
 367:lvgl/src/lv_draw/lv_img_decoder.c ****     if(cf == LV_IMG_CF_TRUE_COLOR || cf == LV_IMG_CF_TRUE_COLOR_ALPHA || cf == LV_IMG_CF_TRUE_COLOR
 368:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 369:lvgl/src/lv_draw/lv_img_decoder.c ****             /* In case of uncompressed formats the image stored in the ROM/RAM.
 370:lvgl/src/lv_draw/lv_img_decoder.c ****              * So simply give its pointer*/
 371:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->img_data = ((lv_img_dsc_t *)dsc->src)->data;
 372:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
ARM GAS  D:\Temp\ccmKsZee.s 			page 8


 373:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 374:lvgl/src/lv_draw/lv_img_decoder.c ****         else {
 375:lvgl/src/lv_draw/lv_img_decoder.c ****             /*If it's a file it need to be read line by line later*/
 376:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->img_data = NULL;
 377:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
 378:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 379:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 380:lvgl/src/lv_draw/lv_img_decoder.c ****     /*Process indexed images. Build a palette*/
 381:lvgl/src/lv_draw/lv_img_decoder.c ****     else if(cf == LV_IMG_CF_INDEXED_1BIT || cf == LV_IMG_CF_INDEXED_2BIT || cf == LV_IMG_CF_INDEXED
 382:lvgl/src/lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_INDEXED_8BIT) {
 383:lvgl/src/lv_draw/lv_img_decoder.c **** 
 384:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_IMG_CF_INDEXED
 385:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t px_size       = lv_img_cf_get_px_size(cf);
 386:lvgl/src/lv_draw/lv_img_decoder.c ****         uint32_t palette_size = 1 << px_size;
 387:lvgl/src/lv_draw/lv_img_decoder.c **** 
 388:lvgl/src/lv_draw/lv_img_decoder.c ****         /*Allocate the palette*/
 389:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->user_data == NULL) {
 390:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 391:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_ASSERT_MEM(dsc->user_data);
 392:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 393:lvgl/src/lv_draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 394:lvgl/src/lv_draw/lv_img_decoder.c ****                 lv_img_decoder_built_in_close(decoder, dsc);
 395:lvgl/src/lv_draw/lv_img_decoder.c ****                 return LV_RES_INV;
 396:lvgl/src/lv_draw/lv_img_decoder.c ****             }
 397:lvgl/src/lv_draw/lv_img_decoder.c ****             _lv_memset_00(dsc->user_data, sizeof(lv_img_decoder_built_in_data_t));
 398:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 399:lvgl/src/lv_draw/lv_img_decoder.c **** 
 400:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 401:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->palette                         = lv_mem_alloc(palette_size * sizeof(lv_color_t)
 402:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->palette);
 403:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 404:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->opa);
 405:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 406:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 407:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_img_decoder_built_in_close(decoder, dsc);
 408:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 409:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 410:lvgl/src/lv_draw/lv_img_decoder.c **** 
 411:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_FILE) {
 412:lvgl/src/lv_draw/lv_img_decoder.c ****             /*Read the palette from file*/
 413:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 414:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_fs_seek(user_data->f, 4); /*Skip the header*/
 415:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_color32_t cur_color;
 416:lvgl/src/lv_draw/lv_img_decoder.c ****             uint32_t i;
 417:lvgl/src/lv_draw/lv_img_decoder.c ****             for(i = 0; i < palette_size; i++) {
 418:lvgl/src/lv_draw/lv_img_decoder.c ****                 lv_fs_read(user_data->f, &cur_color, sizeof(lv_color32_t), NULL);
 419:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(cur_color.ch.red, cur_color.ch.green, cur_col
 420:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->opa[i]     = cur_color.ch.alpha;
 421:lvgl/src/lv_draw/lv_img_decoder.c ****             }
 422:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 423:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_LOG_WARN("Image built-in decoder can read the palette because LV_USE_FILESYSTEM = 0"
 424:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 425:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 426:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 427:lvgl/src/lv_draw/lv_img_decoder.c ****         else {
 428:lvgl/src/lv_draw/lv_img_decoder.c ****             /*The palette begins in the beginning of the image data. Just point to it.*/
 429:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_color32_t * palette_p = (lv_color32_t *)((lv_img_dsc_t *)dsc->src)->data;
ARM GAS  D:\Temp\ccmKsZee.s 			page 9


 430:lvgl/src/lv_draw/lv_img_decoder.c **** 
 431:lvgl/src/lv_draw/lv_img_decoder.c ****             uint32_t i;
 432:lvgl/src/lv_draw/lv_img_decoder.c ****             for(i = 0; i < palette_size; i++) {
 433:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 434:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 435:lvgl/src/lv_draw/lv_img_decoder.c ****             }
 436:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 437:lvgl/src/lv_draw/lv_img_decoder.c **** 
 438:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->img_data = NULL;
 439:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_OK;
 440:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 441:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Indexed (palette) images are not enabled in lv_conf.h. See LV_IMG_CF_INDEXED")
 442:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 443:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 444:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 445:lvgl/src/lv_draw/lv_img_decoder.c ****     /*Alpha indexed images. */
 446:lvgl/src/lv_draw/lv_img_decoder.c ****     else if(cf == LV_IMG_CF_ALPHA_1BIT || cf == LV_IMG_CF_ALPHA_2BIT || cf == LV_IMG_CF_ALPHA_4BIT 
 447:lvgl/src/lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_ALPHA_8BIT) {
 448:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_IMG_CF_ALPHA
 449:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->img_data = NULL;
 450:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_OK; /*Nothing to process*/
 451:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 452:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Alpha indexed images are not enabled in lv_conf.h. See LV_IMG_CF_ALPHA");
 453:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 454:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 455:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 456:lvgl/src/lv_draw/lv_img_decoder.c ****     /*Unknown format. Can't decode it.*/
 457:lvgl/src/lv_draw/lv_img_decoder.c ****     else {
 458:lvgl/src/lv_draw/lv_img_decoder.c ****         /*Free the potentially allocated memories*/
 459:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_img_decoder_built_in_close(decoder, dsc);
 460:lvgl/src/lv_draw/lv_img_decoder.c **** 
 461:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Image decoder open: unknown color format")
 462:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 463:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 464:lvgl/src/lv_draw/lv_img_decoder.c **** }
 465:lvgl/src/lv_draw/lv_img_decoder.c **** 
 466:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 467:lvgl/src/lv_draw/lv_img_decoder.c ****  * Decode `len` pixels starting from the given `x`, `y` coordinates and store them in `buf`.
 468:lvgl/src/lv_draw/lv_img_decoder.c ****  * Required only if the "open" function can't return with the whole decoded pixel array.
 469:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param decoder pointer to the decoder the function associated with
 470:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param dsc pointer to decoder descriptor
 471:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param x start x coordinate
 472:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param y start y coordinate
 473:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param len number of pixels to decode
 474:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param buf a buffer to store the decoded pixels
 475:lvgl/src/lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: ok; LV_RES_INV: failed
 476:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 477:lvgl/src/lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_built_in_read_line(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc, 
 478:lvgl/src/lv_draw/lv_img_decoder.c ****                                            lv_coord_t y, lv_coord_t len, uint8_t * buf)
 479:lvgl/src/lv_draw/lv_img_decoder.c **** {
 480:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 481:lvgl/src/lv_draw/lv_img_decoder.c **** 
 482:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 483:lvgl/src/lv_draw/lv_img_decoder.c **** 
 484:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR || dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA ||
 485:lvgl/src/lv_draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 486:lvgl/src/lv_draw/lv_img_decoder.c ****         /* For TRUE_COLOR images read line required only for files.
ARM GAS  D:\Temp\ccmKsZee.s 			page 10


 487:lvgl/src/lv_draw/lv_img_decoder.c ****          * For variables the image data was returned in `open`*/
 488:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_FILE) {
 489:lvgl/src/lv_draw/lv_img_decoder.c ****             res = lv_img_decoder_built_in_line_true_color(dsc, x, y, len, buf);
 490:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 491:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 492:lvgl/src/lv_draw/lv_img_decoder.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT || dsc->header.cf == LV_IMG_CF_ALPHA_2BIT ||
 493:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 494:lvgl/src/lv_draw/lv_img_decoder.c **** 
 495:lvgl/src/lv_draw/lv_img_decoder.c ****         res = lv_img_decoder_built_in_line_alpha(dsc, x, y, len, buf);
 496:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 497:lvgl/src/lv_draw/lv_img_decoder.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_1BIT || dsc->header.cf == LV_IMG_CF_INDEXED_2BIT ||
 498:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_INDEXED_4BIT || dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 499:lvgl/src/lv_draw/lv_img_decoder.c ****         res = lv_img_decoder_built_in_line_indexed(dsc, x, y, len, buf);
 500:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 501:lvgl/src/lv_draw/lv_img_decoder.c ****     else {
 502:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder read not supports the color format");
 503:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 504:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 505:lvgl/src/lv_draw/lv_img_decoder.c **** 
 506:lvgl/src/lv_draw/lv_img_decoder.c ****     return res;
 507:lvgl/src/lv_draw/lv_img_decoder.c **** }
 508:lvgl/src/lv_draw/lv_img_decoder.c **** 
 509:lvgl/src/lv_draw/lv_img_decoder.c **** /**
 510:lvgl/src/lv_draw/lv_img_decoder.c ****  * Close the pending decoding. Free resources etc.
 511:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param decoder pointer to the decoder the function associated with
 512:lvgl/src/lv_draw/lv_img_decoder.c ****  * @param dsc pointer to decoder descriptor
 513:lvgl/src/lv_draw/lv_img_decoder.c ****  */
 514:lvgl/src/lv_draw/lv_img_decoder.c **** void lv_img_decoder_built_in_close(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)
 515:lvgl/src/lv_draw/lv_img_decoder.c **** {
 516:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 517:lvgl/src/lv_draw/lv_img_decoder.c **** 
 518:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 519:lvgl/src/lv_draw/lv_img_decoder.c ****     if(user_data) {
 520:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 521:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->f) {
 522:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_fs_close(user_data->f);
 523:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_mem_free(user_data->f);
 524:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 525:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 526:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->palette) lv_mem_free(user_data->palette);
 527:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->opa) lv_mem_free(user_data->opa);
 528:lvgl/src/lv_draw/lv_img_decoder.c **** 
 529:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_mem_free(user_data);
 530:lvgl/src/lv_draw/lv_img_decoder.c **** 
 531:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->user_data = NULL;
 532:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 533:lvgl/src/lv_draw/lv_img_decoder.c **** }
 534:lvgl/src/lv_draw/lv_img_decoder.c **** 
 535:lvgl/src/lv_draw/lv_img_decoder.c **** /**********************
 536:lvgl/src/lv_draw/lv_img_decoder.c ****  *   STATIC FUNCTIONS
 537:lvgl/src/lv_draw/lv_img_decoder.c ****  **********************/
 538:lvgl/src/lv_draw/lv_img_decoder.c **** 
 539:lvgl/src/lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_true_color(lv_img_decoder_dsc_t * dsc, lv_coord_t x, l
 540:lvgl/src/lv_draw/lv_img_decoder.c ****                                                         lv_coord_t len, uint8_t * buf)
 541:lvgl/src/lv_draw/lv_img_decoder.c **** {
  29              		.loc 1 541 1 view -0
  30              		.cfi_startproc
ARM GAS  D:\Temp\ccmKsZee.s 			page 11


  31              		@ args = 4, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 542:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 543:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 544:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_fs_res_t res;
 545:lvgl/src/lv_draw/lv_img_decoder.c ****     uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf);
 546:lvgl/src/lv_draw/lv_img_decoder.c **** 
 547:lvgl/src/lv_draw/lv_img_decoder.c ****     uint32_t pos = ((y * dsc->header.w + x) * px_size) >> 3;
 548:lvgl/src/lv_draw/lv_img_decoder.c ****     pos += 4; /*Skip the header*/
 549:lvgl/src/lv_draw/lv_img_decoder.c ****     res = lv_fs_seek(user_data->f, pos);
 550:lvgl/src/lv_draw/lv_img_decoder.c ****     if(res != LV_FS_RES_OK) {
 551:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder seek failed");
 552:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 553:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 554:lvgl/src/lv_draw/lv_img_decoder.c ****     uint32_t btr = len * (px_size >> 3);
 555:lvgl/src/lv_draw/lv_img_decoder.c ****     uint32_t br  = 0;
 556:lvgl/src/lv_draw/lv_img_decoder.c ****     res = lv_fs_read(user_data->f, buf, btr, &br);
 557:lvgl/src/lv_draw/lv_img_decoder.c ****     if(res != LV_FS_RES_OK || btr != br) {
 558:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder read failed");
 559:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 560:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 561:lvgl/src/lv_draw/lv_img_decoder.c **** 
 562:lvgl/src/lv_draw/lv_img_decoder.c ****     return LV_RES_OK;
 563:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 564:lvgl/src/lv_draw/lv_img_decoder.c ****     LV_UNUSED(dsc);
  34              		.loc 1 564 5 view .LVU1
 565:lvgl/src/lv_draw/lv_img_decoder.c ****     LV_UNUSED(x);
  35              		.loc 1 565 5 view .LVU2
 566:lvgl/src/lv_draw/lv_img_decoder.c ****     LV_UNUSED(y);
  36              		.loc 1 566 5 view .LVU3
 567:lvgl/src/lv_draw/lv_img_decoder.c ****     LV_UNUSED(len);
  37              		.loc 1 567 5 view .LVU4
 568:lvgl/src/lv_draw/lv_img_decoder.c ****     LV_UNUSED(buf);
  38              		.loc 1 568 5 view .LVU5
 569:lvgl/src/lv_draw/lv_img_decoder.c ****     LV_LOG_WARN("Image built-in decoder cannot read file because LV_USE_FILESYSTEM = 0");
  39              		.loc 1 569 89 view .LVU6
 570:lvgl/src/lv_draw/lv_img_decoder.c ****     return LV_RES_INV;
  40              		.loc 1 570 5 view .LVU7
 571:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 572:lvgl/src/lv_draw/lv_img_decoder.c **** }
  41              		.loc 1 572 1 is_stmt 0 view .LVU8
  42 0000 0020     		movs	r0, #0
  43              	.LVL1:
  44              		.loc 1 572 1 view .LVU9
  45 0002 7047     		bx	lr
  46              		.cfi_endproc
  47              	.LFE182:
  49              		.section	.text.lv_img_decoder_built_in_info,"ax",%progbits
  50              		.align	1
  51              		.global	lv_img_decoder_built_in_info
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv4-sp-d16
  57              	lv_img_decoder_built_in_info:
  58              	.LVL2:
ARM GAS  D:\Temp\ccmKsZee.s 			page 12


  59              	.LFB178:
 262:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
  60              		.loc 1 262 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
 262:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
  64              		.loc 1 262 1 is_stmt 0 view .LVU11
  65 0000 38B5     		push	{r3, r4, r5, lr}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 16
  68              		.cfi_offset 3, -16
  69              		.cfi_offset 4, -12
  70              		.cfi_offset 5, -8
  71              		.cfi_offset 14, -4
  72 0002 0D46     		mov	r5, r1
  73 0004 1446     		mov	r4, r2
 263:lvgl/src/lv_draw/lv_img_decoder.c **** 
  74              		.loc 1 263 5 is_stmt 1 view .LVU12
 265:lvgl/src/lv_draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
  75              		.loc 1 265 5 view .LVU13
 265:lvgl/src/lv_draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
  76              		.loc 1 265 29 is_stmt 0 view .LVU14
  77 0006 0846     		mov	r0, r1
  78              	.LVL3:
 265:lvgl/src/lv_draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
  79              		.loc 1 265 29 view .LVU15
  80 0008 FFF7FEFF 		bl	lv_img_src_get_type
  81              	.LVL4:
 266:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_img_cf_t cf = ((lv_img_dsc_t *)src)->header.cf;
  82              		.loc 1 266 5 is_stmt 1 view .LVU16
 266:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_img_cf_t cf = ((lv_img_dsc_t *)src)->header.cf;
  83              		.loc 1 266 7 is_stmt 0 view .LVU17
  84 000c D0B9     		cbnz	r0, .L3
  85              	.LBB6:
 267:lvgl/src/lv_draw/lv_img_decoder.c ****         if(cf < CF_BUILT_IN_FIRST || cf > CF_BUILT_IN_LAST) return LV_RES_INV;
  86              		.loc 1 267 9 is_stmt 1 view .LVU18
 267:lvgl/src/lv_draw/lv_img_decoder.c ****         if(cf < CF_BUILT_IN_FIRST || cf > CF_BUILT_IN_LAST) return LV_RES_INV;
  87              		.loc 1 267 55 is_stmt 0 view .LVU19
  88 000e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  89 0010 03F01F03 		and	r3, r3, #31
  90              	.LVL5:
 268:lvgl/src/lv_draw/lv_img_decoder.c **** 
  91              		.loc 1 268 9 is_stmt 1 view .LVU20
 268:lvgl/src/lv_draw/lv_img_decoder.c **** 
  92              		.loc 1 268 35 is_stmt 0 view .LVU21
  93 0014 043B     		subs	r3, r3, #4
  94 0016 DBB2     		uxtb	r3, r3
 268:lvgl/src/lv_draw/lv_img_decoder.c **** 
  95              		.loc 1 268 11 view .LVU22
  96 0018 0A2B     		cmp	r3, #10
  97 001a 24D8     		bhi	.L5
 270:lvgl/src/lv_draw/lv_img_decoder.c ****         header->h  = ((lv_img_dsc_t *)src)->header.h;
  98              		.loc 1 270 9 is_stmt 1 view .LVU23
 270:lvgl/src/lv_draw/lv_img_decoder.c ****         header->h  = ((lv_img_dsc_t *)src)->header.h;
  99              		.loc 1 270 51 is_stmt 0 view .LVU24
 100 001c 2B68     		ldr	r3, [r5]
ARM GAS  D:\Temp\ccmKsZee.s 			page 13


 101 001e C3F38A23 		ubfx	r3, r3, #10, #11
 270:lvgl/src/lv_draw/lv_img_decoder.c ****         header->h  = ((lv_img_dsc_t *)src)->header.h;
 102              		.loc 1 270 20 view .LVU25
 103 0022 2268     		ldr	r2, [r4]
 104 0024 63F39422 		bfi	r2, r3, #10, #11
 105 0028 2260     		str	r2, [r4]
 106              	.LVL6:
 271:lvgl/src/lv_draw/lv_img_decoder.c ****         header->cf = ((lv_img_dsc_t *)src)->header.cf;
 107              		.loc 1 271 9 is_stmt 1 view .LVU26
 271:lvgl/src/lv_draw/lv_img_decoder.c ****         header->cf = ((lv_img_dsc_t *)src)->header.cf;
 108              		.loc 1 271 51 is_stmt 0 view .LVU27
 109 002a 6B88     		ldrh	r3, [r5, #2]
 110 002c 5B09     		lsrs	r3, r3, #5
 271:lvgl/src/lv_draw/lv_img_decoder.c ****         header->cf = ((lv_img_dsc_t *)src)->header.cf;
 111              		.loc 1 271 20 view .LVU28
 112 002e 6288     		ldrh	r2, [r4, #2]
 113 0030 63F34F12 		bfi	r2, r3, #5, #11
 114 0034 6280     		strh	r2, [r4, #2]	@ movhi
 272:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 115              		.loc 1 272 9 is_stmt 1 view .LVU29
 272:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 116              		.loc 1 272 51 is_stmt 0 view .LVU30
 117 0036 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 272:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 118              		.loc 1 272 20 view .LVU31
 119 0038 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 120 003a 62F30403 		bfi	r3, r2, #0, #5
 121 003e 2370     		strb	r3, [r4]
 122              	.LBE6:
 306:lvgl/src/lv_draw/lv_img_decoder.c **** }
 123              		.loc 1 306 12 view .LVU32
 124 0040 0120     		movs	r0, #1
 125              	.LVL7:
 126              	.L4:
 307:lvgl/src/lv_draw/lv_img_decoder.c **** 
 127              		.loc 1 307 1 view .LVU33
 128 0042 38BD     		pop	{r3, r4, r5, pc}
 129              	.LVL8:
 130              	.L3:
 293:lvgl/src/lv_draw/lv_img_decoder.c ****         /*The size depend on the font but it is unknown here. It should be handled outside of the
 131              		.loc 1 293 10 is_stmt 1 view .LVU34
 293:lvgl/src/lv_draw/lv_img_decoder.c ****         /*The size depend on the font but it is unknown here. It should be handled outside of the
 132              		.loc 1 293 12 is_stmt 0 view .LVU35
 133 0044 0228     		cmp	r0, #2
 134 0046 10D1     		bne	.L6
 296:lvgl/src/lv_draw/lv_img_decoder.c ****         header->h = 1;
 135              		.loc 1 296 9 is_stmt 1 view .LVU36
 296:lvgl/src/lv_draw/lv_img_decoder.c ****         header->h = 1;
 136              		.loc 1 296 19 is_stmt 0 view .LVU37
 137 0048 2368     		ldr	r3, [r4]
 138 004a 0120     		movs	r0, #1
 139              	.LVL9:
 296:lvgl/src/lv_draw/lv_img_decoder.c ****         header->h = 1;
 140              		.loc 1 296 19 view .LVU38
 141 004c 60F39423 		bfi	r3, r0, #10, #11
 142 0050 2360     		str	r3, [r4]
 297:lvgl/src/lv_draw/lv_img_decoder.c ****         /* Symbols always have transparent parts. Important because of cover check in the design
ARM GAS  D:\Temp\ccmKsZee.s 			page 14


 143              		.loc 1 297 9 is_stmt 1 view .LVU39
 297:lvgl/src/lv_draw/lv_img_decoder.c ****         /* Symbols always have transparent parts. Important because of cover check in the design
 144              		.loc 1 297 19 is_stmt 0 view .LVU40
 145 0052 C3F30F42 		ubfx	r2, r3, #16, #16
 146 0056 60F34F12 		bfi	r2, r0, #5, #11
 147 005a 6280     		strh	r2, [r4, #2]	@ movhi
 300:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 148              		.loc 1 300 9 is_stmt 1 view .LVU41
 300:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 149              		.loc 1 300 20 is_stmt 0 view .LVU42
 150 005c 0B22     		movs	r2, #11
 151 005e 62F30403 		bfi	r3, r2, #0, #5
 152 0062 2370     		strb	r3, [r4]
 153 0064 EDE7     		b	.L4
 154              	.LVL10:
 155              	.L5:
 156              	.LBB7:
 268:lvgl/src/lv_draw/lv_img_decoder.c **** 
 157              		.loc 1 268 68 view .LVU43
 158 0066 0020     		movs	r0, #0
 159              	.LVL11:
 268:lvgl/src/lv_draw/lv_img_decoder.c **** 
 160              		.loc 1 268 68 view .LVU44
 161 0068 EBE7     		b	.L4
 162              	.LVL12:
 163              	.L6:
 268:lvgl/src/lv_draw/lv_img_decoder.c **** 
 164              		.loc 1 268 68 view .LVU45
 165              	.LBE7:
 304:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 166              		.loc 1 304 16 view .LVU46
 167 006a 0020     		movs	r0, #0
 168              	.LVL13:
 304:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 169              		.loc 1 304 16 view .LVU47
 170 006c E9E7     		b	.L4
 171              		.cfi_endproc
 172              	.LFE178:
 174              		.section	.text.lv_img_decoder_built_in_close,"ax",%progbits
 175              		.align	1
 176              		.global	lv_img_decoder_built_in_close
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	lv_img_decoder_built_in_close:
 183              	.LVL14:
 184              	.LFB181:
 515:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 185              		.loc 1 515 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 515:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 189              		.loc 1 515 1 is_stmt 0 view .LVU49
 190 0000 38B5     		push	{r3, r4, r5, lr}
 191              	.LCFI1:
ARM GAS  D:\Temp\ccmKsZee.s 			page 15


 192              		.cfi_def_cfa_offset 16
 193              		.cfi_offset 3, -16
 194              		.cfi_offset 4, -12
 195              		.cfi_offset 5, -8
 196              		.cfi_offset 14, -4
 516:lvgl/src/lv_draw/lv_img_decoder.c **** 
 197              		.loc 1 516 5 is_stmt 1 view .LVU50
 518:lvgl/src/lv_draw/lv_img_decoder.c ****     if(user_data) {
 198              		.loc 1 518 5 view .LVU51
 518:lvgl/src/lv_draw/lv_img_decoder.c ****     if(user_data) {
 199              		.loc 1 518 38 is_stmt 0 view .LVU52
 200 0002 CD69     		ldr	r5, [r1, #28]
 201              	.LVL15:
 519:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 202              		.loc 1 519 5 is_stmt 1 view .LVU53
 519:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 203              		.loc 1 519 7 is_stmt 0 view .LVU54
 204 0004 6DB1     		cbz	r5, .L8
 205 0006 0C46     		mov	r4, r1
 526:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->opa) lv_mem_free(user_data->opa);
 206              		.loc 1 526 9 is_stmt 1 view .LVU55
 526:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->opa) lv_mem_free(user_data->opa);
 207              		.loc 1 526 21 is_stmt 0 view .LVU56
 208 0008 2868     		ldr	r0, [r5]
 209              	.LVL16:
 526:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->opa) lv_mem_free(user_data->opa);
 210              		.loc 1 526 11 view .LVU57
 211 000a 08B1     		cbz	r0, .L10
 526:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->opa) lv_mem_free(user_data->opa);
 212              		.loc 1 526 32 is_stmt 1 discriminator 1 view .LVU58
 213 000c FFF7FEFF 		bl	lv_mem_free
 214              	.LVL17:
 215              	.L10:
 527:lvgl/src/lv_draw/lv_img_decoder.c **** 
 216              		.loc 1 527 9 view .LVU59
 527:lvgl/src/lv_draw/lv_img_decoder.c **** 
 217              		.loc 1 527 21 is_stmt 0 view .LVU60
 218 0010 6868     		ldr	r0, [r5, #4]
 527:lvgl/src/lv_draw/lv_img_decoder.c **** 
 219              		.loc 1 527 11 view .LVU61
 220 0012 08B1     		cbz	r0, .L11
 527:lvgl/src/lv_draw/lv_img_decoder.c **** 
 221              		.loc 1 527 28 is_stmt 1 discriminator 1 view .LVU62
 222 0014 FFF7FEFF 		bl	lv_mem_free
 223              	.LVL18:
 224              	.L11:
 529:lvgl/src/lv_draw/lv_img_decoder.c **** 
 225              		.loc 1 529 9 view .LVU63
 226 0018 2846     		mov	r0, r5
 227 001a FFF7FEFF 		bl	lv_mem_free
 228              	.LVL19:
 531:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 229              		.loc 1 531 9 view .LVU64
 531:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 230              		.loc 1 531 24 is_stmt 0 view .LVU65
 231 001e 0023     		movs	r3, #0
 232 0020 E361     		str	r3, [r4, #28]
ARM GAS  D:\Temp\ccmKsZee.s 			page 16


 233              	.LVL20:
 234              	.L8:
 533:lvgl/src/lv_draw/lv_img_decoder.c **** 
 235              		.loc 1 533 1 view .LVU66
 236 0022 38BD     		pop	{r3, r4, r5, pc}
 533:lvgl/src/lv_draw/lv_img_decoder.c **** 
 237              		.loc 1 533 1 view .LVU67
 238              		.cfi_endproc
 239              	.LFE181:
 241              		.section	.text.lv_img_decoder_built_in_open,"ax",%progbits
 242              		.align	1
 243              		.global	lv_img_decoder_built_in_open
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	lv_img_decoder_built_in_open:
 250              	.LVL21:
 251              	.LFB179:
 316:lvgl/src/lv_draw/lv_img_decoder.c ****     /*Open the file if it's a file*/
 252              		.loc 1 316 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 318:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 256              		.loc 1 318 5 view .LVU69
 318:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 257              		.loc 1 318 11 is_stmt 0 view .LVU70
 258 0000 8A7A     		ldrb	r2, [r1, #10]	@ zero_extendqisi2
 318:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 259              		.loc 1 318 7 view .LVU71
 260 0002 012A     		cmp	r2, #1
 261 0004 00F09A80 		beq	.L32
 316:lvgl/src/lv_draw/lv_img_decoder.c ****     /*Open the file if it's a file*/
 262              		.loc 1 316 1 view .LVU72
 263 0008 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 264              	.LCFI2:
 265              		.cfi_def_cfa_offset 32
 266              		.cfi_offset 3, -32
 267              		.cfi_offset 4, -28
 268              		.cfi_offset 5, -24
 269              		.cfi_offset 6, -20
 270              		.cfi_offset 7, -16
 271              		.cfi_offset 8, -12
 272              		.cfi_offset 9, -8
 273              		.cfi_offset 14, -4
 358:lvgl/src/lv_draw/lv_img_decoder.c ****         /*The variables should have valid data*/
 274              		.loc 1 358 10 is_stmt 1 view .LVU73
 358:lvgl/src/lv_draw/lv_img_decoder.c ****         /*The variables should have valid data*/
 275              		.loc 1 358 12 is_stmt 0 view .LVU74
 276 000c 22B9     		cbnz	r2, .L15
 360:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 277              		.loc 1 360 9 is_stmt 1 view .LVU75
 360:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 278              		.loc 1 360 32 is_stmt 0 view .LVU76
 279 000e 4B68     		ldr	r3, [r1, #4]
 360:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
ARM GAS  D:\Temp\ccmKsZee.s 			page 17


 280              		.loc 1 360 38 view .LVU77
 281 0010 9B68     		ldr	r3, [r3, #8]
 360:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 282              		.loc 1 360 11 view .LVU78
 283 0012 002B     		cmp	r3, #0
 284 0014 00F09480 		beq	.L33
 285              	.L15:
 365:lvgl/src/lv_draw/lv_img_decoder.c ****     /*Process true color formats*/
 286              		.loc 1 365 5 is_stmt 1 view .LVU79
 365:lvgl/src/lv_draw/lv_img_decoder.c ****     /*Process true color formats*/
 287              		.loc 1 365 33 is_stmt 0 view .LVU80
 288 0018 0B7B     		ldrb	r3, [r1, #12]	@ zero_extendqisi2
 289 001a 03F01F03 		and	r3, r3, #31
 290              	.LVL22:
 367:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 291              		.loc 1 367 5 is_stmt 1 view .LVU81
 367:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 292              		.loc 1 367 71 is_stmt 0 view .LVU82
 293 001e 1C1F     		subs	r4, r3, #4
 294 0020 E4B2     		uxtb	r4, r4
 367:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 295              		.loc 1 367 7 view .LVU83
 296 0022 022C     		cmp	r4, #2
 297 0024 0AD8     		bhi	.L16
 368:lvgl/src/lv_draw/lv_img_decoder.c ****             /* In case of uncompressed formats the image stored in the ROM/RAM.
 298              		.loc 1 368 9 is_stmt 1 view .LVU84
 368:lvgl/src/lv_draw/lv_img_decoder.c ****             /* In case of uncompressed formats the image stored in the ROM/RAM.
 299              		.loc 1 368 11 is_stmt 0 view .LVU85
 300 0026 2AB9     		cbnz	r2, .L17
 371:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
 301              		.loc 1 371 13 is_stmt 1 view .LVU86
 371:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
 302              		.loc 1 371 49 is_stmt 0 view .LVU87
 303 0028 4B68     		ldr	r3, [r1, #4]
 371:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
 304              		.loc 1 371 55 view .LVU88
 305 002a 9B68     		ldr	r3, [r3, #8]
 371:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
 306              		.loc 1 371 27 view .LVU89
 307 002c 0B61     		str	r3, [r1, #16]
 372:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 308              		.loc 1 372 13 is_stmt 1 view .LVU90
 372:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 309              		.loc 1 372 20 is_stmt 0 view .LVU91
 310 002e 0120     		movs	r0, #1
 311              	.LVL23:
 312              	.L14:
 464:lvgl/src/lv_draw/lv_img_decoder.c **** 
 313              		.loc 1 464 1 view .LVU92
 314 0030 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 315              	.LVL24:
 316              	.L17:
 376:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
 317              		.loc 1 376 13 is_stmt 1 view .LVU93
 376:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
 318              		.loc 1 376 27 is_stmt 0 view .LVU94
 319 0034 0023     		movs	r3, #0
ARM GAS  D:\Temp\ccmKsZee.s 			page 18


 320 0036 0B61     		str	r3, [r1, #16]
 377:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 321              		.loc 1 377 13 is_stmt 1 view .LVU95
 377:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 322              		.loc 1 377 20 is_stmt 0 view .LVU96
 323 0038 0120     		movs	r0, #1
 324              	.LVL25:
 377:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 325              		.loc 1 377 20 view .LVU97
 326 003a F9E7     		b	.L14
 327              	.LVL26:
 328              	.L16:
 377:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 329              		.loc 1 377 20 view .LVU98
 330 003c 0C46     		mov	r4, r1
 331 003e 0646     		mov	r6, r0
 381:lvgl/src/lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_INDEXED_8BIT) {
 332              		.loc 1 381 10 is_stmt 1 view .LVU99
 381:lvgl/src/lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_INDEXED_8BIT) {
 333              		.loc 1 381 106 is_stmt 0 view .LVU100
 334 0040 DA1F     		subs	r2, r3, #7
 335 0042 D2B2     		uxtb	r2, r2
 381:lvgl/src/lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_INDEXED_8BIT) {
 336              		.loc 1 381 12 view .LVU101
 337 0044 032A     		cmp	r2, #3
 338 0046 07D9     		bls	.L39
 446:lvgl/src/lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_ALPHA_8BIT) {
 339              		.loc 1 446 10 is_stmt 1 view .LVU102
 446:lvgl/src/lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_ALPHA_8BIT) {
 340              		.loc 1 446 100 is_stmt 0 view .LVU103
 341 0048 0B3B     		subs	r3, r3, #11
 342 004a DBB2     		uxtb	r3, r3
 446:lvgl/src/lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_ALPHA_8BIT) {
 343              		.loc 1 446 12 view .LVU104
 344 004c 032B     		cmp	r3, #3
 345 004e 71D8     		bhi	.L31
 449:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_OK; /*Nothing to process*/
 346              		.loc 1 449 9 is_stmt 1 view .LVU105
 449:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_OK; /*Nothing to process*/
 347              		.loc 1 449 23 is_stmt 0 view .LVU106
 348 0050 0023     		movs	r3, #0
 349 0052 0B61     		str	r3, [r1, #16]
 450:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 350              		.loc 1 450 9 is_stmt 1 view .LVU107
 450:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 351              		.loc 1 450 16 is_stmt 0 view .LVU108
 352 0054 0120     		movs	r0, #1
 353              	.LVL27:
 450:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 354              		.loc 1 450 16 view .LVU109
 355 0056 EBE7     		b	.L14
 356              	.LVL28:
 357              	.L39:
 358              	.LBB8:
 385:lvgl/src/lv_draw/lv_img_decoder.c ****         uint32_t palette_size = 1 << px_size;
 359              		.loc 1 385 9 is_stmt 1 view .LVU110
 385:lvgl/src/lv_draw/lv_img_decoder.c ****         uint32_t palette_size = 1 << px_size;
ARM GAS  D:\Temp\ccmKsZee.s 			page 19


 360              		.loc 1 385 33 is_stmt 0 view .LVU111
 361 0058 1846     		mov	r0, r3
 362              	.LVL29:
 385:lvgl/src/lv_draw/lv_img_decoder.c ****         uint32_t palette_size = 1 << px_size;
 363              		.loc 1 385 33 view .LVU112
 364 005a FFF7FEFF 		bl	lv_img_cf_get_px_size
 365              	.LVL30:
 385:lvgl/src/lv_draw/lv_img_decoder.c ****         uint32_t palette_size = 1 << px_size;
 366              		.loc 1 385 33 view .LVU113
 367 005e 8146     		mov	r9, r0
 368              	.LVL31:
 386:lvgl/src/lv_draw/lv_img_decoder.c **** 
 369              		.loc 1 386 9 is_stmt 1 view .LVU114
 386:lvgl/src/lv_draw/lv_img_decoder.c **** 
 370              		.loc 1 386 35 is_stmt 0 view .LVU115
 371 0060 4FF00108 		mov	r8, #1
 372 0064 08FA00F8 		lsl	r8, r8, r0
 373              	.LVL32:
 389:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 374              		.loc 1 389 9 is_stmt 1 view .LVU116
 389:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 375              		.loc 1 389 15 is_stmt 0 view .LVU117
 376 0068 E369     		ldr	r3, [r4, #28]
 389:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 377              		.loc 1 389 11 view .LVU118
 378 006a 7BB1     		cbz	r3, .L40
 379              	.LVL33:
 380              	.L19:
 400:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->palette                         = lv_mem_alloc(palette_size * sizeof(lv_color_t)
 381              		.loc 1 400 9 is_stmt 1 view .LVU119
 400:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->palette                         = lv_mem_alloc(palette_size * sizeof(lv_color_t)
 382              		.loc 1 400 42 is_stmt 0 view .LVU120
 383 006c E569     		ldr	r5, [r4, #28]
 384              	.LVL34:
 401:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->palette);
 385              		.loc 1 401 9 is_stmt 1 view .LVU121
 401:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->palette);
 386              		.loc 1 401 54 is_stmt 0 view .LVU122
 387 006e 0220     		movs	r0, #2
 388 0070 00FA09F0 		lsl	r0, r0, r9
 389 0074 FFF7FEFF 		bl	lv_mem_alloc
 390              	.LVL35:
 401:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->palette);
 391              		.loc 1 401 52 view .LVU123
 392 0078 2860     		str	r0, [r5]
 402:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 393              		.loc 1 402 9 is_stmt 1 view .LVU124
 402:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 394              		.loc 1 402 9 view .LVU125
 395 007a FFF7FEFF 		bl	lv_debug_check_null
 396              	.LVL36:
 397 007e F0B9     		cbnz	r0, .L23
 402:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 398              		.loc 1 402 9 discriminator 1 view .LVU126
 402:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 399              		.loc 1 402 9 discriminator 1 view .LVU127
 400 0080 2A68     		ldr	r2, [r5]
ARM GAS  D:\Temp\ccmKsZee.s 			page 20


 401 0082 0023     		movs	r3, #0
 402 0084 3048     		ldr	r0, .L44
 403 0086 FFF7FEFF 		bl	lv_debug_log_error
 404              	.LVL37:
 405              	.L24:
 402:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 406              		.loc 1 402 9 discriminator 2 view .LVU128
 402:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 407              		.loc 1 402 9 discriminator 2 view .LVU129
 408 008a FEE7     		b	.L24
 409              	.LVL38:
 410              	.L40:
 390:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_ASSERT_MEM(dsc->user_data);
 411              		.loc 1 390 13 view .LVU130
 390:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_ASSERT_MEM(dsc->user_data);
 412              		.loc 1 390 30 is_stmt 0 view .LVU131
 413 008c 0820     		movs	r0, #8
 414              	.LVL39:
 390:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_ASSERT_MEM(dsc->user_data);
 415              		.loc 1 390 30 view .LVU132
 416 008e FFF7FEFF 		bl	lv_mem_alloc
 417              	.LVL40:
 390:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_ASSERT_MEM(dsc->user_data);
 418              		.loc 1 390 28 view .LVU133
 419 0092 E061     		str	r0, [r4, #28]
 391:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 420              		.loc 1 391 13 is_stmt 1 view .LVU134
 391:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 421              		.loc 1 391 13 view .LVU135
 422 0094 FFF7FEFF 		bl	lv_debug_check_null
 423              	.LVL41:
 424 0098 28B1     		cbz	r0, .L41
 391:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 425              		.loc 1 391 42 discriminator 2 view .LVU136
 392:lvgl/src/lv_draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 426              		.loc 1 392 13 discriminator 2 view .LVU137
 392:lvgl/src/lv_draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 427              		.loc 1 392 19 is_stmt 0 discriminator 2 view .LVU138
 428 009a E069     		ldr	r0, [r4, #28]
 392:lvgl/src/lv_draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 429              		.loc 1 392 15 discriminator 2 view .LVU139
 430 009c 48B1     		cbz	r0, .L42
 397:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 431              		.loc 1 397 13 is_stmt 1 view .LVU140
 432 009e 0821     		movs	r1, #8
 433 00a0 FFF7FEFF 		bl	_lv_memset_00
 434              	.LVL42:
 435 00a4 E2E7     		b	.L19
 436              	.L41:
 391:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 437              		.loc 1 391 13 discriminator 1 view .LVU141
 391:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 438              		.loc 1 391 13 discriminator 1 view .LVU142
 439 00a6 E269     		ldr	r2, [r4, #28]
 440 00a8 0023     		movs	r3, #0
 441 00aa 2748     		ldr	r0, .L44
 442 00ac FFF7FEFF 		bl	lv_debug_log_error
ARM GAS  D:\Temp\ccmKsZee.s 			page 21


 443              	.LVL43:
 444              	.L21:
 391:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 445              		.loc 1 391 13 discriminator 1 view .LVU143
 391:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 446              		.loc 1 391 13 discriminator 1 view .LVU144
 447 00b0 FEE7     		b	.L21
 448              	.L42:
 393:lvgl/src/lv_draw/lv_img_decoder.c ****                 lv_img_decoder_built_in_close(decoder, dsc);
 449              		.loc 1 393 73 view .LVU145
 394:lvgl/src/lv_draw/lv_img_decoder.c ****                 return LV_RES_INV;
 450              		.loc 1 394 17 view .LVU146
 451 00b2 2146     		mov	r1, r4
 452 00b4 3046     		mov	r0, r6
 453 00b6 FFF7FEFF 		bl	lv_img_decoder_built_in_close
 454              	.LVL44:
 395:lvgl/src/lv_draw/lv_img_decoder.c ****             }
 455              		.loc 1 395 17 view .LVU147
 395:lvgl/src/lv_draw/lv_img_decoder.c ****             }
 456              		.loc 1 395 24 is_stmt 0 view .LVU148
 457 00ba 0020     		movs	r0, #0
 458 00bc B8E7     		b	.L14
 459              	.LVL45:
 460              	.L23:
 402:lvgl/src/lv_draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 461              		.loc 1 402 42 is_stmt 1 discriminator 2 view .LVU149
 403:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->opa);
 462              		.loc 1 403 9 discriminator 2 view .LVU150
 403:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->opa);
 463              		.loc 1 403 54 is_stmt 0 discriminator 2 view .LVU151
 464 00be 4046     		mov	r0, r8
 465 00c0 FFF7FEFF 		bl	lv_mem_alloc
 466              	.LVL46:
 403:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->opa);
 467              		.loc 1 403 52 discriminator 2 view .LVU152
 468 00c4 6860     		str	r0, [r5, #4]
 404:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 469              		.loc 1 404 9 is_stmt 1 discriminator 2 view .LVU153
 404:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 470              		.loc 1 404 9 discriminator 2 view .LVU154
 471 00c6 FFF7FEFF 		bl	lv_debug_check_null
 472              	.LVL47:
 473 00ca 50B1     		cbz	r0, .L43
 404:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 474              		.loc 1 404 38 discriminator 2 view .LVU155
 405:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 475              		.loc 1 405 9 discriminator 2 view .LVU156
 405:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 476              		.loc 1 405 21 is_stmt 0 discriminator 2 view .LVU157
 477 00cc 2B68     		ldr	r3, [r5]
 405:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 478              		.loc 1 405 11 discriminator 2 view .LVU158
 479 00ce 73B1     		cbz	r3, .L27
 405:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 480              		.loc 1 405 51 discriminator 1 view .LVU159
 481 00d0 6B68     		ldr	r3, [r5, #4]
 405:lvgl/src/lv_draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
ARM GAS  D:\Temp\ccmKsZee.s 			page 22


 482              		.loc 1 405 39 discriminator 1 view .LVU160
 483 00d2 63B1     		cbz	r3, .L27
 411:lvgl/src/lv_draw/lv_img_decoder.c ****             /*Read the palette from file*/
 484              		.loc 1 411 9 is_stmt 1 view .LVU161
 411:lvgl/src/lv_draw/lv_img_decoder.c ****             /*Read the palette from file*/
 485              		.loc 1 411 15 is_stmt 0 view .LVU162
 486 00d4 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 411:lvgl/src/lv_draw/lv_img_decoder.c ****             /*Read the palette from file*/
 487              		.loc 1 411 11 view .LVU163
 488 00d6 012B     		cmp	r3, #1
 489 00d8 34D0     		beq	.L34
 490              	.LBB9:
 429:lvgl/src/lv_draw/lv_img_decoder.c **** 
 491              		.loc 1 429 13 is_stmt 1 view .LVU164
 429:lvgl/src/lv_draw/lv_img_decoder.c **** 
 492              		.loc 1 429 76 is_stmt 0 view .LVU165
 493 00da 6368     		ldr	r3, [r4, #4]
 429:lvgl/src/lv_draw/lv_img_decoder.c **** 
 494              		.loc 1 429 28 view .LVU166
 495 00dc 9868     		ldr	r0, [r3, #8]
 496              	.LVL48:
 431:lvgl/src/lv_draw/lv_img_decoder.c ****             for(i = 0; i < palette_size; i++) {
 497              		.loc 1 431 13 is_stmt 1 view .LVU167
 432:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 498              		.loc 1 432 13 view .LVU168
 432:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 499              		.loc 1 432 19 is_stmt 0 view .LVU169
 500 00de 0023     		movs	r3, #0
 432:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 501              		.loc 1 432 13 view .LVU170
 502 00e0 22E0     		b	.L29
 503              	.LVL49:
 504              	.L43:
 432:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 505              		.loc 1 432 13 view .LVU171
 506              	.LBE9:
 404:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 507              		.loc 1 404 9 is_stmt 1 discriminator 1 view .LVU172
 404:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 508              		.loc 1 404 9 discriminator 1 view .LVU173
 509 00e2 6A68     		ldr	r2, [r5, #4]
 510 00e4 0023     		movs	r3, #0
 511 00e6 1848     		ldr	r0, .L44
 512 00e8 FFF7FEFF 		bl	lv_debug_log_error
 513              	.LVL50:
 514              	.L26:
 404:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 515              		.loc 1 404 9 discriminator 3 view .LVU174
 404:lvgl/src/lv_draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 516              		.loc 1 404 9 discriminator 3 view .LVU175
 517 00ec FEE7     		b	.L26
 518              	.L27:
 406:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_img_decoder_built_in_close(decoder, dsc);
 519              		.loc 1 406 69 view .LVU176
 407:lvgl/src/lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 520              		.loc 1 407 13 view .LVU177
 521 00ee 2146     		mov	r1, r4
ARM GAS  D:\Temp\ccmKsZee.s 			page 23


 522 00f0 3046     		mov	r0, r6
 523 00f2 FFF7FEFF 		bl	lv_img_decoder_built_in_close
 524              	.LVL51:
 408:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 525              		.loc 1 408 13 view .LVU178
 408:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 526              		.loc 1 408 20 is_stmt 0 view .LVU179
 527 00f6 0020     		movs	r0, #0
 528 00f8 9AE7     		b	.L14
 529              	.LVL52:
 530              	.L30:
 531              	.LBB12:
 433:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 532              		.loc 1 433 17 is_stmt 1 discriminator 3 view .LVU180
 433:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 533              		.loc 1 433 64 is_stmt 0 discriminator 3 view .LVU181
 534 00fa 00EB8302 		add	r2, r0, r3, lsl #2
 433:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 535              		.loc 1 433 41 discriminator 3 view .LVU182
 536 00fe 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 537 0100 5678     		ldrb	r6, [r2, #1]	@ zero_extendqisi2
 538 0102 10F823C0 		ldrb	ip, [r0, r3, lsl #2]	@ zero_extendqisi2
 539              	.LVL53:
 540              	.LBB10:
 541              	.LBI10:
 542              		.file 2 "lvgl/src/lv_draw/../lv_misc/lv_color.h"
   1:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
   2:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *
   4:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
   5:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
   6:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
   9:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/lv_draw/../lv_misc/lv_color.h **** extern "C" {
  11:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  12:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  13:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*********************
  14:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *********************/
  16:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  19:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*Error checking*/
  20:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  21:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  22:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  23:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  24:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  25:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  26:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  27:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  28:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  29:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  30:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
  31:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
ARM GAS  D:\Temp\ccmKsZee.s 			page 24


  32:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #include <stdint.h>
  33:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  34:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*********************
  35:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *      DEFINES
  36:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *********************/
  37:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_WHITE   LV_COLOR_MAKE(0xFF, 0xFF, 0xFF)
  38:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SILVER  LV_COLOR_MAKE(0xC0, 0xC0, 0xC0)
  39:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_GRAY    LV_COLOR_MAKE(0x80, 0x80, 0x80)
  40:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_BLACK   LV_COLOR_MAKE(0x00, 0x00, 0x00)
  41:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_RED     LV_COLOR_MAKE(0xFF, 0x00, 0x00)
  42:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MAROON  LV_COLOR_MAKE(0x80, 0x00, 0x00)
  43:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_YELLOW  LV_COLOR_MAKE(0xFF, 0xFF, 0x00)
  44:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_OLIVE   LV_COLOR_MAKE(0x80, 0x80, 0x00)
  45:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_LIME    LV_COLOR_MAKE(0x00, 0xFF, 0x00)
  46:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_GREEN   LV_COLOR_MAKE(0x00, 0x80, 0x00)
  47:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_CYAN    LV_COLOR_MAKE(0x00, 0xFF, 0xFF)
  48:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_AQUA    LV_COLOR_CYAN
  49:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_TEAL    LV_COLOR_MAKE(0x00, 0x80, 0x80)
  50:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_BLUE    LV_COLOR_MAKE(0x00, 0x00, 0xFF)
  51:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_NAVY    LV_COLOR_MAKE(0x00, 0x00, 0x80)
  52:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MAGENTA LV_COLOR_MAKE(0xFF, 0x00, 0xFF)
  53:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_PURPLE  LV_COLOR_MAKE(0x80, 0x00, 0x80)
  54:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_ORANGE  LV_COLOR_MAKE(0xFF, 0xA5, 0x00)
  55:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  56:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
  57:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Opacity percentages.
  58:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
  59:lvgl/src/lv_draw/../lv_misc/lv_color.h **** enum {
  60:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  61:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_0      = 0,
  62:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_10     = 25,
  63:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_20     = 51,
  64:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_30     = 76,
  65:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_40     = 102,
  66:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_50     = 127,
  67:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_60     = 153,
  68:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_70     = 178,
  69:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_80     = 204,
  70:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_90     = 229,
  71:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_100    = 255,
  72:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_OPA_COVER  = 255,
  73:lvgl/src/lv_draw/../lv_misc/lv_color.h **** };
  74:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  75:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  76:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  77:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  78:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  79:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 8
  80:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  81:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 8
  82:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  83:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 16
  84:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  85:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 32
  86:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
  87:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  88:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
ARM GAS  D:\Temp\ccmKsZee.s 			page 25


  89:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
  90:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /* Adjust color mix functions rounding.
  91:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  92:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Should be in range of 0..254
  93:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  94:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 64: round up from x.75
  95:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 128: round up from half
  96:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 192: round up from x.25
  97:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * 254: round up */
  98:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  99:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
 100:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
 101:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 102:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
 103:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 104:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 105:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 106:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*---------------------------------------
 107:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Macros for all existing color depths
 108:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * to set/get values of the color channels
 109:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *------------------------------------------*/
 110:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 111:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 112:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 113:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 114:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 115:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 116:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 117:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 118:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 119:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 120:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 121:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 122:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 123:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 124:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 125:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 126:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 127:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 128:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 129:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 130:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 134:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 136:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 139:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 143:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 145:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
ARM GAS  D:\Temp\ccmKsZee.s 			page 26


 146:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 148:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 149:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 150:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 151:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 152:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 153:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 154:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 155:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 156:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 157:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 158:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*---------------------------------------
 159:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Macros for the current color depth
 160:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * to set/get values of the color channels
 161:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *------------------------------------------*/
 162:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 163:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R1(c,v)
 164:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G1(c,v)
 165:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B1(c,v)
 166:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A1(c,v)
 167:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 168:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R1(c)
 169:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G1(c)
 170:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B1(c)
 171:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A1(c)
 172:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 173:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 174:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R8(c,v)
 175:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G8(c,v)
 176:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B8(c,v)
 177:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A8(c,v)
 178:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 179:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R8(c)
 180:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G8(c)
 181:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B8(c)
 182:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A8(c)
 183:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 184:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 185:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R16(c,v)
 186:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G16(c,v)
 187:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B16(c,v)
 188:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A16(c,v)
 189:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 190:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R16(c)
 191:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G16(c)
 192:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B16(c)
 193:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A16(c)
 194:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 195:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 196:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R32(c,v)
 197:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G32(c,v)
 198:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B32(c,v)
 199:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A32(c,v)
 200:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 201:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R32(c)
 202:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G32(c)
ARM GAS  D:\Temp\ccmKsZee.s 			page 27


 203:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B32(c)
 204:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A32(c)
 205:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 206:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 207:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**********************
 208:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *      TYPEDEFS
 209:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  **********************/
 210:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 211:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 212:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list */
 213:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     union {
 214:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t blue : 1;
 215:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t green : 1;
 216:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t red : 1;
 217:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 218:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color1_t;
 219:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 220:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 221:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     struct {
 222:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t blue : 2;
 223:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t green : 3;
 224:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t red : 3;
 225:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 226:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t full;
 227:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color8_t;
 228:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 229:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 230:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     struct {
 231:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 232:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t blue : 5;
 233:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t green : 6;
 234:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t red : 5;
 235:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 236:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t green_h : 3;
 237:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t red : 5;
 238:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t blue : 5;
 239:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint16_t green_l : 3;
 240:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 241:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 242:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint16_t full;
 243:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color16_t;
 244:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 245:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef union {
 246:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     struct {
 247:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t blue;
 248:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t green;
 249:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t red;
 250:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         uint8_t alpha;
 251:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     } ch;
 252:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint32_t full;
 253:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color32_t;
 254:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 255:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 256:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint8_t lv_color_int_t;
 257:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color1_t lv_color_t;
 258:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {0x00}
 259:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
ARM GAS  D:\Temp\ccmKsZee.s 			page 28


 260:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint8_t lv_color_int_t;
 261:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color8_t lv_color_t;
 262:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00}}
 263:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 264:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint16_t lv_color_int_t;
 265:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color16_t lv_color_t;
 266:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # if LV_COLOR_16_SWAP == 0
 267:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #  define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00}}
 268:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # else
 269:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #  define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00, 0x00}}
 270:lvgl/src/lv_draw/../lv_misc/lv_color.h **** # endif
 271:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 272:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint32_t lv_color_int_t;
 273:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef lv_color32_t lv_color_t;
 274:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00, 0x00}}
 275:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 276:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
 277:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 278:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 279:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef struct {
 280:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint16_t h;
 281:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t s;
 282:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint8_t v;
 283:lvgl/src/lv_draw/../lv_misc/lv_color.h **** } lv_color_hsv_t;
 284:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 285:lvgl/src/lv_draw/../lv_misc/lv_color.h **** //! @cond Doxygen_Suppress
 286:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 287:lvgl/src/lv_draw/../lv_misc/lv_color.h **** typedef uint8_t lv_opa_t;
 288:lvgl/src/lv_draw/../lv_misc/lv_color.h **** //! @endcond
 289:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 290:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**********************
 291:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * GLOBAL PROTOTYPES
 292:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  **********************/
 293:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 294:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /*In color conversations:
 295:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 296:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 297:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *         8 bit Red has 3 bits
 298:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        ----------------------
 299:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 300:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *
 301:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 302:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 303:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        16 bit Red has 5 bits
 304:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *        ----------------------
 305:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 306:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
 307:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 308:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 309:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 310:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
 311:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 312:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 313:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 1;
 314:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 315:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else {
 316:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
ARM GAS  D:\Temp\ccmKsZee.s 			page 29


 317:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 318:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 319:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 320:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 1;
 321:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 322:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else {
 323:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 324:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 325:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 326:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 327:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 1;
 328:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 329:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else {
 330:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 331:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 332:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 333:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 334:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 335:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 336:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 337:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 338:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if(color.full == 0)
 339:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 340:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else
 341:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFF;
 342:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 343:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
 344:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 345:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color8_t ret;
 346:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /* 5 - 3  = 2*/
 347:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /* 6 - 3  = 3*/
 348:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /* 5 - 2  = 3*/
 349:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 350:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 351:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color8_t ret;
 352:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /* 8 - 3  = 5*/
 353:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /* 8 - 3  = 5*/
 354:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /* 8 - 2  = 6*/
 355:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 356:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 357:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 358:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 359:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 360:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 361:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 362:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if(color.full == 0)
 363:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0;
 364:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else
 365:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFFFF;
 366:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 367:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color16_t ret;
 368:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 369:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 370:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 371:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 372:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 373:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
ARM GAS  D:\Temp\ccmKsZee.s 			page 30


 374:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 375:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color16_t ret;
 376:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /* 8 - 5  = 3*/
 377:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /* 8 - 6  = 2*/
 378:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /* 8 - 5  = 3*/
 379:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 380:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 381:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 382:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 383:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 384:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 385:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 386:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if(color.full == 0)
 387:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFF000000;
 388:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else
 389:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         return 0xFFFFFFFF;
 390:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 391:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color32_t ret;
 392:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 393:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 394:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 395:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 396:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 397:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 398:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /**
 399:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * The floating point math for conversion is:
 400:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 401:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * The faster integer math for conversion is:
 402:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 403:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 404:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *
 405:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 406:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *
 407:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 408:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 409:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       0           8      7        7       255
 410:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       1          16     14        7       255
 411:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       2          32     28        7       255
 412:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       3          65     25        3       255
 413:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       4         131     19        1       255
 414:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       5         263      7        0       255
 415:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *
 416:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 417:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 418:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       0           4      3        3       255
 419:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       1           8      6        3       255
 420:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       2          16     12        3       255
 421:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       3          32     24        3       255
 422:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       4          64     48        3       255
 423:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       5         129     33        1       255
 424:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      *       6         259      3        0       255
 425:lvgl/src/lv_draw/../lv_misc/lv_color.h ****      */
 426:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 427:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color32_t ret;
 428:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 429:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 430:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
ARM GAS  D:\Temp\ccmKsZee.s 			page 31


 431:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 432:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret.full;
 433:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 434:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return color.full;
 435:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 436:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 437:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 438:lvgl/src/lv_draw/../lv_misc/lv_color.h **** //! @cond Doxygen_Suppress
 439:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 440:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
 441:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Mix two colors with a given ratio.
 442:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 443:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 444:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 445:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @return the mixed color
 446:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
 447:lvgl/src/lv_draw/../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 448:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 449:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color_t ret;
 450:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 451:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 452:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 453:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 454:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 455:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 456:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 457:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 458:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 459:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 460:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 461:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 462:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 463:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 464:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret;
 465:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 466:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 467:lvgl/src/lv_draw/../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 468:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 469:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 470:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 471:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 472:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 473:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 474:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     (void) mix;
 475:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 476:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 477:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 478:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 479:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 480:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 481:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 482:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 483:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
 484:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 485:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 486:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 487:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
ARM GAS  D:\Temp\ccmKsZee.s 			page 32


 488:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 489:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @return the mixed color
 490:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 491:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
 492:lvgl/src/lv_draw/../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 493:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 494:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color_t ret;
 495:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 496:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 497:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_MATH_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROU
 498:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_MATH_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROU
 499:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_MATH_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROU
 500:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 501:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 502:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 503:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*Restore color1*/
 504:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color_t c1;
 505:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 506:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 507:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 508:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 509:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 510:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 511:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return ret;
 512:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 513:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 514:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
 515:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 516:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param bg_color background color
 517:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param bg_opa alpha of the background color
 518:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param fg_color foreground color
 519:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 520:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param res_color the result color
 521:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param res_opa the result opacity
 522:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
 523:lvgl/src/lv_draw/../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 524:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 525:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 526:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 527:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /* Pick the foreground if it's fully opaque or the Background is fully transparent*/
 528:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 529:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         res_color->full = fg_color.full;
 530:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         *res_opa = fg_opa;
 531:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 532:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 533:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 534:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         res_color->full = bg_color.full;
 535:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         *res_opa = bg_opa;
 536:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 537:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*Opaque background: use simple mix*/
 538:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 539:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 540:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 541:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 542:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 543:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     else {
 544:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
ARM GAS  D:\Temp\ccmKsZee.s 			page 33


 545:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 546:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 547:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 548:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 549:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 550:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 551:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 552:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 553:lvgl/src/lv_draw/../lv_misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 554:lvgl/src/lv_draw/../lv_misc/lv_color.h ****             fg_opa_save        = fg_opa;
 555:lvgl/src/lv_draw/../lv_misc/lv_color.h ****             bg_opa_save        = bg_opa;
 556:lvgl/src/lv_draw/../lv_misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 557:lvgl/src/lv_draw/../lv_misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 558:lvgl/src/lv_draw/../lv_misc/lv_color.h ****             /*Info:
 559:lvgl/src/lv_draw/../lv_misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 560:lvgl/src/lv_draw/../lv_misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 561:lvgl/src/lv_draw/../lv_misc/lv_color.h ****             if(res_opa_saved == 0) {
 562:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                 while(1)
 563:lvgl/src/lv_draw/../lv_misc/lv_color.h ****                     ;
 564:lvgl/src/lv_draw/../lv_misc/lv_color.h ****             }
 565:lvgl/src/lv_draw/../lv_misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 566:lvgl/src/lv_draw/../lv_misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 567:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 568:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         }
 569:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 570:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         res_color->full = res_color_saved.full;
 571:lvgl/src/lv_draw/../lv_misc/lv_color.h ****         *res_opa = res_opa_saved;
 572:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     }
 573:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 574:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 575:lvgl/src/lv_draw/../lv_misc/lv_color.h **** //! @endcond
 576:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 577:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
 578:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * Get the brightness of a color
 579:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @param color a color
 580:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  * @return the brightness [0..255]
 581:lvgl/src/lv_draw/../lv_misc/lv_color.h ****  */
 582:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 583:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 584:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     lv_color32_t c32;
 585:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 586:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 587:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 588:lvgl/src/lv_draw/../lv_misc/lv_color.h **** }
 589:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 590:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
 591:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /**
 592:lvgl/src/lv_draw/../lv_misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
 593:lvgl/src/lv_draw/../lv_misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
 594:lvgl/src/lv_draw/../lv_misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
 595:lvgl/src/lv_draw/../lv_misc/lv_color.h **** */
 596:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #ifdef _MSC_VER
 597:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if _MSC_VER >= 1900 /* Visual Studio 2015 */
 598:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 599:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 600:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 601:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if __cplusplus >= 201103L
ARM GAS  D:\Temp\ccmKsZee.s 			page 34


 602:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 603:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 604:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 605:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif /* __cplusplus */
 606:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 607:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 608:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 609:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 610:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 611:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 612:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /* Fix msvc compiler error C4576 inside C++ code */
 613:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 614:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 615:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 616:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 617:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 618:lvgl/src/lv_draw/../lv_misc/lv_color.h **** /* The most simple macro to create a color from R,G and B values */
 619:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 620:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) (_LV_COLOR_MAKE_TYPE_HELPER{(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8
 621:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 622:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) (_LV_COLOR_MAKE_TYPE_HELPER{{(uint8_t)((b8 >> 6) & 0x3U), (uint8_
 623:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 624:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 625:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) (_LV_COLOR_MAKE_TYPE_HELPER{{(uint8_t)((b8 >> 3) & 0x1FU), (uint8
 626:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #else
 627:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) (_LV_COLOR_MAKE_TYPE_HELPER{{(uint8_t)((g8 >> 5) & 0x7U), (uint8_
 628:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 629:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 630:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) (_LV_COLOR_MAKE_TYPE_HELPER{{b8, g8, r8, 0xff}}) /*Fix 0xff alpha
 631:lvgl/src/lv_draw/../lv_misc/lv_color.h **** #endif
 632:lvgl/src/lv_draw/../lv_misc/lv_color.h **** 
 633:lvgl/src/lv_draw/../lv_misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 543              		.loc 2 633 26 is_stmt 1 discriminator 3 view .LVU183
 544              	.LBB11:
 634:lvgl/src/lv_draw/../lv_misc/lv_color.h **** {
 635:lvgl/src/lv_draw/../lv_misc/lv_color.h ****     return LV_COLOR_MAKE(r, g, b);
 545              		.loc 2 635 5 discriminator 3 view .LVU184
 546              		.loc 2 635 12 is_stmt 0 discriminator 3 view .LVU185
 547 0106 4FEADC0C 		lsr	ip, ip, #3
 548              	.LVL54:
 549              		.loc 2 635 12 discriminator 3 view .LVU186
 550 010a B608     		lsrs	r6, r6, #2
 551              	.LVL55:
 552              		.loc 2 635 12 discriminator 3 view .LVU187
 553 010c C908     		lsrs	r1, r1, #3
 554              	.LVL56:
 555              		.loc 2 635 12 discriminator 3 view .LVU188
 556 010e 6CF30407 		bfi	r7, ip, #0, #5
 557 0112 66F34A17 		bfi	r7, r6, #5, #6
 558 0116 61F3CF27 		bfi	r7, r1, #11, #5
 559              	.LVL57:
 560              		.loc 2 635 12 discriminator 3 view .LVU189
 561              	.LBE11:
 562              	.LBE10:
 433:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 563              		.loc 1 433 41 discriminator 3 view .LVU190
 564 011a 2968     		ldr	r1, [r5]
ARM GAS  D:\Temp\ccmKsZee.s 			page 35


 565 011c 21F81370 		strh	r7, [r1, r3, lsl #1]	@ movhi
 434:lvgl/src/lv_draw/lv_img_decoder.c ****             }
 566              		.loc 1 434 17 is_stmt 1 discriminator 3 view .LVU191
 434:lvgl/src/lv_draw/lv_img_decoder.c ****             }
 567              		.loc 1 434 26 is_stmt 0 discriminator 3 view .LVU192
 568 0120 6968     		ldr	r1, [r5, #4]
 434:lvgl/src/lv_draw/lv_img_decoder.c ****             }
 569              		.loc 1 434 56 discriminator 3 view .LVU193
 570 0122 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 434:lvgl/src/lv_draw/lv_img_decoder.c ****             }
 571              		.loc 1 434 39 discriminator 3 view .LVU194
 572 0124 CA54     		strb	r2, [r1, r3]
 432:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 573              		.loc 1 432 43 discriminator 3 view .LVU195
 574 0126 0133     		adds	r3, r3, #1
 575              	.LVL58:
 576              	.L29:
 432:lvgl/src/lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 577              		.loc 1 432 13 discriminator 1 view .LVU196
 578 0128 4345     		cmp	r3, r8
 579 012a E6D3     		bcc	.L30
 580              	.LBE12:
 438:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_OK;
 581              		.loc 1 438 9 is_stmt 1 view .LVU197
 438:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_OK;
 582              		.loc 1 438 23 is_stmt 0 view .LVU198
 583 012c 0023     		movs	r3, #0
 584              	.LVL59:
 438:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_OK;
 585              		.loc 1 438 23 view .LVU199
 586 012e 2361     		str	r3, [r4, #16]
 439:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 587              		.loc 1 439 9 is_stmt 1 view .LVU200
 439:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 588              		.loc 1 439 16 is_stmt 0 view .LVU201
 589 0130 0120     		movs	r0, #1
 590              	.LVL60:
 439:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 591              		.loc 1 439 16 view .LVU202
 592 0132 7DE7     		b	.L14
 593              	.LVL61:
 594              	.L31:
 439:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 595              		.loc 1 439 16 view .LVU203
 596              	.LBE8:
 459:lvgl/src/lv_draw/lv_img_decoder.c **** 
 597              		.loc 1 459 9 is_stmt 1 view .LVU204
 598 0134 FFF7FEFF 		bl	lv_img_decoder_built_in_close
 599              	.LVL62:
 462:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 600              		.loc 1 462 9 view .LVU205
 462:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 601              		.loc 1 462 16 is_stmt 0 view .LVU206
 602 0138 0020     		movs	r0, #0
 603 013a 79E7     		b	.L14
 604              	.LVL63:
 605              	.L32:
ARM GAS  D:\Temp\ccmKsZee.s 			page 36


 606              	.LCFI3:
 607              		.cfi_def_cfa_offset 0
 608              		.cfi_restore 3
 609              		.cfi_restore 4
 610              		.cfi_restore 5
 611              		.cfi_restore 6
 612              		.cfi_restore 7
 613              		.cfi_restore 8
 614              		.cfi_restore 9
 615              		.cfi_restore 14
 355:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 616              		.loc 1 355 16 view .LVU207
 617 013c 0020     		movs	r0, #0
 618              	.LVL64:
 464:lvgl/src/lv_draw/lv_img_decoder.c **** 
 619              		.loc 1 464 1 view .LVU208
 620 013e 7047     		bx	lr
 621              	.LVL65:
 622              	.L33:
 623              	.LCFI4:
 624              		.cfi_def_cfa_offset 32
 625              		.cfi_offset 3, -32
 626              		.cfi_offset 4, -28
 627              		.cfi_offset 5, -24
 628              		.cfi_offset 6, -20
 629              		.cfi_offset 7, -16
 630              		.cfi_offset 8, -12
 631              		.cfi_offset 9, -8
 632              		.cfi_offset 14, -4
 361:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 633              		.loc 1 361 20 view .LVU209
 634 0140 0020     		movs	r0, #0
 635              	.LVL66:
 361:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 636              		.loc 1 361 20 view .LVU210
 637 0142 75E7     		b	.L14
 638              	.LVL67:
 639              	.L34:
 640              	.LBB13:
 424:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 641              		.loc 1 424 20 view .LVU211
 642 0144 0020     		movs	r0, #0
 643 0146 73E7     		b	.L14
 644              	.L45:
 645              		.align	2
 646              	.L44:
 647 0148 00000000 		.word	.LC2
 648              	.LBE13:
 649              		.cfi_endproc
 650              	.LFE179:
 652              		.section	.text.lv_img_decoder_built_in_line_alpha,"ax",%progbits
 653              		.align	1
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 657              		.fpu fpv4-sp-d16
 659              	lv_img_decoder_built_in_line_alpha:
ARM GAS  D:\Temp\ccmKsZee.s 			page 37


 660              	.LVL68:
 661              	.LFB183:
 573:lvgl/src/lv_draw/lv_img_decoder.c **** 
 574:lvgl/src/lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_alpha(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coo
 575:lvgl/src/lv_draw/lv_img_decoder.c ****                                                    lv_coord_t len, uint8_t * buf)
 576:lvgl/src/lv_draw/lv_img_decoder.c **** {
 662              		.loc 1 576 1 is_stmt 1 view -0
 663              		.cfi_startproc
 664              		@ args = 4, pretend = 0, frame = 24
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		.loc 1 576 1 is_stmt 0 view .LVU213
 667 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 668              	.LCFI5:
 669              		.cfi_def_cfa_offset 28
 670              		.cfi_offset 4, -28
 671              		.cfi_offset 5, -24
 672              		.cfi_offset 6, -20
 673              		.cfi_offset 7, -16
 674              		.cfi_offset 8, -12
 675              		.cfi_offset 9, -8
 676              		.cfi_offset 14, -4
 677 0004 87B0     		sub	sp, sp, #28
 678              	.LCFI6:
 679              		.cfi_def_cfa_offset 56
 680 0006 8046     		mov	r8, r0
 681 0008 0D46     		mov	r5, r1
 682 000a 9146     		mov	r9, r2
 683 000c 1F46     		mov	r7, r3
 684 000e 0E9E     		ldr	r6, [sp, #56]
 577:lvgl/src/lv_draw/lv_img_decoder.c **** 
 578:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_IMG_CF_ALPHA
 579:lvgl/src/lv_draw/lv_img_decoder.c ****     const lv_opa_t alpha1_opa_table[2]  = {0, 255};          /*Opacity mapping with bpp = 1 (Just f
 685              		.loc 1 579 5 is_stmt 1 view .LVU214
 686              		.loc 1 579 20 is_stmt 0 view .LVU215
 687 0010 0024     		movs	r4, #0
 688 0012 8DF81440 		strb	r4, [sp, #20]
 689 0016 FF23     		movs	r3, #255
 690              	.LVL69:
 691              		.loc 1 579 20 view .LVU216
 692 0018 8DF81530 		strb	r3, [sp, #21]
 580:lvgl/src/lv_draw/lv_img_decoder.c ****     const lv_opa_t alpha2_opa_table[4]  = {0, 85, 170, 255}; /*Opacity mapping with bpp = 2*/
 693              		.loc 1 580 5 is_stmt 1 view .LVU217
 694              		.loc 1 580 20 is_stmt 0 view .LVU218
 695 001c 544B     		ldr	r3, .L70
 696 001e 53F8042B 		ldr	r2, [r3], #4
 697              	.LVL70:
 698              		.loc 1 580 20 view .LVU219
 699 0022 0492     		str	r2, [sp, #16]
 581:lvgl/src/lv_draw/lv_img_decoder.c ****     const lv_opa_t alpha4_opa_table[16] = {0,  17, 34,  51,  /*Opacity mapping with bpp = 4*/
 700              		.loc 1 581 5 is_stmt 1 view .LVU220
 701              		.loc 1 581 20 is_stmt 0 view .LVU221
 702 0024 EC46     		mov	ip, sp
 703 0026 0FCB     		ldm	r3, {r0, r1, r2, r3}
 704              	.LVL71:
 705              		.loc 1 581 20 view .LVU222
 706 0028 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 582:lvgl/src/lv_draw/lv_img_decoder.c ****                                            68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
ARM GAS  D:\Temp\ccmKsZee.s 			page 38


 583:lvgl/src/lv_draw/lv_img_decoder.c ****                                           };
 584:lvgl/src/lv_draw/lv_img_decoder.c **** 
 585:lvgl/src/lv_draw/lv_img_decoder.c ****     /*Simply fill the buffer with the color. Later only the alpha value will be modified.*/
 586:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_color_t bg_color = dsc->color;
 707              		.loc 1 586 5 is_stmt 1 view .LVU223
 708              		.loc 1 586 16 is_stmt 0 view .LVU224
 709 002c B8F80800 		ldrh	r0, [r8, #8]
 587:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_coord_t i;
 710              		.loc 1 587 5 is_stmt 1 view .LVU225
 588:lvgl/src/lv_draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 711              		.loc 1 588 5 view .LVU226
 712              	.LVL72:
 713              		.loc 1 588 11 is_stmt 0 view .LVU227
 714 0030 2346     		mov	r3, r4
 715              	.LVL73:
 716              	.L47:
 717              		.loc 1 588 5 discriminator 1 view .LVU228
 718 0032 BB42     		cmp	r3, r7
 719 0034 09DA     		bge	.L67
 589:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 590:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = bg_color.full;
 591:lvgl/src/lv_draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 16
 592:lvgl/src/lv_draw/lv_img_decoder.c ****         /*Because of Alpha byte 16 bit color can start on odd address which can cause crash*/
 593:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = bg_color.full & 0xFF;
 720              		.loc 1 593 9 is_stmt 1 discriminator 3 view .LVU229
 721              		.loc 1 593 54 is_stmt 0 discriminator 3 view .LVU230
 722 0036 82B2     		uxth	r2, r0
 723              		.loc 1 593 15 discriminator 3 view .LVU231
 724 0038 03EB4301 		add	r1, r3, r3, lsl #1
 725              		.loc 1 593 44 discriminator 3 view .LVU232
 726 003c 7254     		strb	r2, [r6, r1]
 594:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + 1] = (bg_color.full >> 8) & 0xFF;
 727              		.loc 1 594 9 is_stmt 1 discriminator 3 view .LVU233
 728              		.loc 1 594 12 is_stmt 0 discriminator 3 view .LVU234
 729 003e 0131     		adds	r1, r1, #1
 730              		.loc 1 594 48 discriminator 3 view .LVU235
 731 0040 120A     		lsrs	r2, r2, #8
 732 0042 7254     		strb	r2, [r6, r1]
 588:lvgl/src/lv_draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 733              		.loc 1 588 26 discriminator 3 view .LVU236
 734 0044 0133     		adds	r3, r3, #1
 735              	.LVL74:
 588:lvgl/src/lv_draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 736              		.loc 1 588 26 discriminator 3 view .LVU237
 737 0046 1BB2     		sxth	r3, r3
 738              	.LVL75:
 588:lvgl/src/lv_draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 739              		.loc 1 588 26 discriminator 3 view .LVU238
 740 0048 F3E7     		b	.L47
 741              	.L67:
 595:lvgl/src/lv_draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 32
 596:lvgl/src/lv_draw/lv_img_decoder.c ****         *((uint32_t *)&buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE]) = bg_color.full;
 597:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 598:lvgl/src/lv_draw/lv_img_decoder.c **** #error "Invalid LV_COLOR_DEPTH. Check it in lv_conf.h"
 599:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 600:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 601:lvgl/src/lv_draw/lv_img_decoder.c **** 
ARM GAS  D:\Temp\ccmKsZee.s 			page 39


 602:lvgl/src/lv_draw/lv_img_decoder.c ****     const lv_opa_t * opa_table = NULL;
 742              		.loc 1 602 5 is_stmt 1 view .LVU239
 743              	.LVL76:
 603:lvgl/src/lv_draw/lv_img_decoder.c ****     uint8_t px_size            = lv_img_cf_get_px_size(dsc->header.cf);
 744              		.loc 1 603 5 view .LVU240
 745              		.loc 1 603 67 is_stmt 0 view .LVU241
 746 004a 98F80C00 		ldrb	r0, [r8, #12]	@ zero_extendqisi2
 747              	.LVL77:
 748              		.loc 1 603 34 view .LVU242
 749 004e 00F01F00 		and	r0, r0, #31
 750 0052 FFF7FEFF 		bl	lv_img_cf_get_px_size
 751              	.LVL78:
 604:lvgl/src/lv_draw/lv_img_decoder.c ****     uint16_t mask              = (1 << px_size) - 1; /*E.g. px_size = 2; mask = 0x03*/
 752              		.loc 1 604 5 is_stmt 1 view .LVU243
 753              		.loc 1 604 37 is_stmt 0 view .LVU244
 754 0056 0121     		movs	r1, #1
 755 0058 8140     		lsls	r1, r1, r0
 756              		.loc 1 604 49 view .LVU245
 757 005a 89B2     		uxth	r1, r1
 758              		.loc 1 604 14 view .LVU246
 759 005c 0139     		subs	r1, r1, #1
 760 005e 89B2     		uxth	r1, r1
 761              	.LVL79:
 605:lvgl/src/lv_draw/lv_img_decoder.c **** 
 606:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_coord_t w = 0;
 762              		.loc 1 606 5 is_stmt 1 view .LVU247
 607:lvgl/src/lv_draw/lv_img_decoder.c ****     uint32_t ofs = 0;
 763              		.loc 1 607 5 view .LVU248
 608:lvgl/src/lv_draw/lv_img_decoder.c ****     int8_t pos   = 0;
 764              		.loc 1 608 5 view .LVU249
 609:lvgl/src/lv_draw/lv_img_decoder.c ****     switch(dsc->header.cf) {
 765              		.loc 1 609 5 view .LVU250
 766              		.loc 1 609 23 is_stmt 0 view .LVU251
 767 0060 98F80C30 		ldrb	r3, [r8, #12]	@ zero_extendqisi2
 768 0064 03F01F03 		and	r3, r3, #31
 769              		.loc 1 609 5 view .LVU252
 770 0068 0B3B     		subs	r3, r3, #11
 771 006a 032B     		cmp	r3, #3
 772 006c 4ED8     		bhi	.L63
 773 006e DFE803F0 		tbb	[pc, r3]
 774              	.L51:
 775 0072 02       		.byte	(.L54-.L51)/2
 776 0073 1D       		.byte	(.L53-.L51)/2
 777 0074 31       		.byte	(.L52-.L51)/2
 778 0075 44       		.byte	(.L50-.L51)/2
 779              		.p2align 1
 780              	.L54:
 610:lvgl/src/lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_1BIT:
 611:lvgl/src/lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 3); /*E.g. w = 20 -> w = 2 + 1*/
 781              		.loc 1 611 13 is_stmt 1 view .LVU253
 782              		.loc 1 611 29 is_stmt 0 view .LVU254
 783 0076 D8F80C30 		ldr	r3, [r8, #12]
 784 007a C3F38A23 		ubfx	r3, r3, #10, #11
 785              		.loc 1 611 32 view .LVU255
 786 007e DC10     		asrs	r4, r3, #3
 787              		.loc 1 611 15 view .LVU256
 788 0080 22B2     		sxth	r2, r4
ARM GAS  D:\Temp\ccmKsZee.s 			page 40


 789              	.LVL80:
 612:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x7) w++;
 790              		.loc 1 612 13 is_stmt 1 view .LVU257
 791              		.loc 1 612 15 is_stmt 0 view .LVU258
 792 0082 13F0070F 		tst	r3, #7
 793 0086 00D0     		beq	.L55
 794              		.loc 1 612 37 is_stmt 1 discriminator 1 view .LVU259
 795              		.loc 1 612 38 is_stmt 0 discriminator 1 view .LVU260
 796 0088 621C     		adds	r2, r4, #1
 797              	.LVL81:
 798              	.L55:
 613:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 3); /*First pixel*/
 799              		.loc 1 613 13 is_stmt 1 view .LVU261
 800              		.loc 1 613 31 is_stmt 0 view .LVU262
 801 008a EB10     		asrs	r3, r5, #3
 802              		.loc 1 613 26 view .LVU263
 803 008c 09FB0239 		mla	r9, r9, r2, r3
 804              	.LVL82:
 614:lvgl/src/lv_draw/lv_img_decoder.c ****             pos       = 7 - (x & 0x7);
 805              		.loc 1 614 13 is_stmt 1 view .LVU264
 806              		.loc 1 614 27 is_stmt 0 view .LVU265
 807 0090 ED43     		mvns	r5, r5
 808              		.loc 1 614 23 view .LVU266
 809 0092 05F00705 		and	r5, r5, #7
 810              	.LVL83:
 615:lvgl/src/lv_draw/lv_img_decoder.c ****             opa_table = alpha1_opa_table;
 811              		.loc 1 615 13 is_stmt 1 view .LVU267
 616:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 812              		.loc 1 616 13 view .LVU268
 615:lvgl/src/lv_draw/lv_img_decoder.c ****             opa_table = alpha1_opa_table;
 813              		.loc 1 615 23 is_stmt 0 view .LVU269
 814 0096 05AC     		add	r4, sp, #20
 815              	.LVL84:
 816              	.L49:
 617:lvgl/src/lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_2BIT:
 618:lvgl/src/lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 2); /*E.g. w = 13 -> w = 3 + 1 (bytes)*/
 619:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
 620:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 621:lvgl/src/lv_draw/lv_img_decoder.c ****             pos       = 6 - ((x & 0x3) * 2);
 622:lvgl/src/lv_draw/lv_img_decoder.c ****             opa_table = alpha2_opa_table;
 623:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 624:lvgl/src/lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_4BIT:
 625:lvgl/src/lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 1); /*E.g. w = 13 -> w = 6 + 1 (bytes)*/
 626:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 627:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 628:lvgl/src/lv_draw/lv_img_decoder.c ****             pos       = 4 - ((x & 0x1) * 4);
 629:lvgl/src/lv_draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 630:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 631:lvgl/src/lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_8BIT:
 632:lvgl/src/lv_draw/lv_img_decoder.c ****             w = dsc->header.w; /*E.g. x = 7 -> w = 7 (bytes)*/
 633:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 634:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 0;
 635:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 636:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 637:lvgl/src/lv_draw/lv_img_decoder.c **** 
 638:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 639:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
ARM GAS  D:\Temp\ccmKsZee.s 			page 41


 640:lvgl/src/lv_draw/lv_img_decoder.c ****     uint8_t * fs_buf = _lv_mem_buf_get(w);
 641:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 642:lvgl/src/lv_draw/lv_img_decoder.c **** 
 643:lvgl/src/lv_draw/lv_img_decoder.c ****     const uint8_t * data_tmp = NULL;
 817              		.loc 1 643 5 is_stmt 1 view .LVU270
 644:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 818              		.loc 1 644 5 view .LVU271
 819              		.loc 1 644 11 is_stmt 0 view .LVU272
 820 0098 98F80A30 		ldrb	r3, [r8, #10]	@ zero_extendqisi2
 821              		.loc 1 644 7 view .LVU273
 822 009c 002B     		cmp	r3, #0
 823 009e 65D1     		bne	.L65
 824              	.LBB14:
 645:lvgl/src/lv_draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = dsc->src;
 825              		.loc 1 645 9 is_stmt 1 view .LVU274
 826              		.loc 1 645 30 is_stmt 0 view .LVU275
 827 00a0 D8F80430 		ldr	r3, [r8, #4]
 828              	.LVL85:
 646:lvgl/src/lv_draw/lv_img_decoder.c **** 
 647:lvgl/src/lv_draw/lv_img_decoder.c ****         data_tmp = img_dsc->data + ofs;
 829              		.loc 1 647 9 is_stmt 1 view .LVU276
 830              		.loc 1 647 27 is_stmt 0 view .LVU277
 831 00a4 9B68     		ldr	r3, [r3, #8]
 832              	.LVL86:
 833              		.loc 1 647 18 view .LVU278
 834 00a6 9944     		add	r9, r9, r3
 835              	.LVL87:
 836              		.loc 1 647 18 view .LVU279
 837              	.LBE14:
 648:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 649:lvgl/src/lv_draw/lv_img_decoder.c ****     else {
 650:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 651:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_fs_seek(user_data->f, ofs + 4); /*+4 to skip the header*/
 652:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_fs_read(user_data->f, fs_buf, w, NULL);
 653:lvgl/src/lv_draw/lv_img_decoder.c ****         data_tmp = fs_buf;
 654:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 655:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Image built-in alpha line reader can't read file because LV_USE_FILESYSTEM = 0
 656:lvgl/src/lv_draw/lv_img_decoder.c ****         data_tmp = NULL; /*To avoid warnings*/
 657:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 658:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 659:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 660:lvgl/src/lv_draw/lv_img_decoder.c **** 
 661:lvgl/src/lv_draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 838              		.loc 1 661 5 is_stmt 1 view .LVU280
 839              		.loc 1 661 11 is_stmt 0 view .LVU281
 840 00a8 0022     		movs	r2, #0
 841              		.loc 1 661 5 view .LVU282
 842 00aa 3DE0     		b	.L59
 843              	.LVL88:
 844              	.L53:
 618:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
 845              		.loc 1 618 13 is_stmt 1 view .LVU283
 618:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
 846              		.loc 1 618 29 is_stmt 0 view .LVU284
 847 00ac D8F80C30 		ldr	r3, [r8, #12]
 848 00b0 C3F38A23 		ubfx	r3, r3, #10, #11
 618:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
ARM GAS  D:\Temp\ccmKsZee.s 			page 42


 849              		.loc 1 618 32 view .LVU285
 850 00b4 9C10     		asrs	r4, r3, #2
 618:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
 851              		.loc 1 618 15 view .LVU286
 852 00b6 22B2     		sxth	r2, r4
 853              	.LVL89:
 619:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 854              		.loc 1 619 13 is_stmt 1 view .LVU287
 619:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 855              		.loc 1 619 15 is_stmt 0 view .LVU288
 856 00b8 13F0030F 		tst	r3, #3
 857 00bc 00D0     		beq	.L56
 619:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 858              		.loc 1 619 37 is_stmt 1 discriminator 1 view .LVU289
 619:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 859              		.loc 1 619 38 is_stmt 0 discriminator 1 view .LVU290
 860 00be 621C     		adds	r2, r4, #1
 861              	.LVL90:
 862              	.L56:
 620:lvgl/src/lv_draw/lv_img_decoder.c ****             pos       = 6 - ((x & 0x3) * 2);
 863              		.loc 1 620 13 is_stmt 1 view .LVU291
 620:lvgl/src/lv_draw/lv_img_decoder.c ****             pos       = 6 - ((x & 0x3) * 2);
 864              		.loc 1 620 31 is_stmt 0 view .LVU292
 865 00c0 AB10     		asrs	r3, r5, #2
 620:lvgl/src/lv_draw/lv_img_decoder.c ****             pos       = 6 - ((x & 0x3) * 2);
 866              		.loc 1 620 26 view .LVU293
 867 00c2 09FB0239 		mla	r9, r9, r2, r3
 868              	.LVL91:
 621:lvgl/src/lv_draw/lv_img_decoder.c ****             opa_table = alpha2_opa_table;
 869              		.loc 1 621 13 is_stmt 1 view .LVU294
 621:lvgl/src/lv_draw/lv_img_decoder.c ****             opa_table = alpha2_opa_table;
 870              		.loc 1 621 27 is_stmt 0 view .LVU295
 871 00c6 ADB2     		uxth	r5, r5
 872 00c8 ED43     		mvns	r5, r5
 621:lvgl/src/lv_draw/lv_img_decoder.c ****             opa_table = alpha2_opa_table;
 873              		.loc 1 621 23 view .LVU296
 874 00ca 05F00305 		and	r5, r5, #3
 875 00ce 6D00     		lsls	r5, r5, #1
 876              	.LVL92:
 622:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 877              		.loc 1 622 13 is_stmt 1 view .LVU297
 623:lvgl/src/lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_4BIT:
 878              		.loc 1 623 13 view .LVU298
 622:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 879              		.loc 1 622 23 is_stmt 0 view .LVU299
 880 00d0 04AC     		add	r4, sp, #16
 881              	.LVL93:
 623:lvgl/src/lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_4BIT:
 882              		.loc 1 623 13 view .LVU300
 883 00d2 E1E7     		b	.L49
 884              	.LVL94:
 885              	.L52:
 625:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 886              		.loc 1 625 13 is_stmt 1 view .LVU301
 625:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 887              		.loc 1 625 29 is_stmt 0 view .LVU302
 888 00d4 D8F80C30 		ldr	r3, [r8, #12]
ARM GAS  D:\Temp\ccmKsZee.s 			page 43


 889 00d8 C3F38A23 		ubfx	r3, r3, #10, #11
 625:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 890              		.loc 1 625 32 view .LVU303
 891 00dc 5C10     		asrs	r4, r3, #1
 625:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 892              		.loc 1 625 15 view .LVU304
 893 00de 22B2     		sxth	r2, r4
 894              	.LVL95:
 626:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 895              		.loc 1 626 13 is_stmt 1 view .LVU305
 626:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 896              		.loc 1 626 15 is_stmt 0 view .LVU306
 897 00e0 13F0010F 		tst	r3, #1
 898 00e4 00D0     		beq	.L57
 626:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 899              		.loc 1 626 37 is_stmt 1 discriminator 1 view .LVU307
 626:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 900              		.loc 1 626 38 is_stmt 0 discriminator 1 view .LVU308
 901 00e6 621C     		adds	r2, r4, #1
 902              	.LVL96:
 903              	.L57:
 627:lvgl/src/lv_draw/lv_img_decoder.c ****             pos       = 4 - ((x & 0x1) * 4);
 904              		.loc 1 627 13 is_stmt 1 view .LVU309
 627:lvgl/src/lv_draw/lv_img_decoder.c ****             pos       = 4 - ((x & 0x1) * 4);
 905              		.loc 1 627 31 is_stmt 0 view .LVU310
 906 00e8 6B10     		asrs	r3, r5, #1
 627:lvgl/src/lv_draw/lv_img_decoder.c ****             pos       = 4 - ((x & 0x1) * 4);
 907              		.loc 1 627 26 view .LVU311
 908 00ea 09FB0239 		mla	r9, r9, r2, r3
 909              	.LVL97:
 628:lvgl/src/lv_draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 910              		.loc 1 628 13 is_stmt 1 view .LVU312
 628:lvgl/src/lv_draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 911              		.loc 1 628 23 is_stmt 0 view .LVU313
 912 00ee 15F0010F 		tst	r5, #1
 913 00f2 0FD1     		bne	.L64
 628:lvgl/src/lv_draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 914              		.loc 1 628 23 view .LVU314
 915 00f4 0425     		movs	r5, #4
 629:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 916              		.loc 1 629 23 view .LVU315
 917 00f6 6C46     		mov	r4, sp
 918 00f8 CEE7     		b	.L49
 919              	.LVL98:
 920              	.L50:
 632:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 921              		.loc 1 632 13 is_stmt 1 view .LVU316
 632:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 922              		.loc 1 632 28 is_stmt 0 view .LVU317
 923 00fa D8F80C30 		ldr	r3, [r8, #12]
 924 00fe C3F38A23 		ubfx	r3, r3, #10, #11
 925              	.LVL99:
 633:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 0;
 926              		.loc 1 633 13 is_stmt 1 view .LVU318
 633:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 0;
 927              		.loc 1 633 26 is_stmt 0 view .LVU319
 928 0102 09FB0359 		mla	r9, r9, r3, r5
ARM GAS  D:\Temp\ccmKsZee.s 			page 44


 929              	.LVL100:
 634:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 930              		.loc 1 634 13 is_stmt 1 view .LVU320
 635:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 931              		.loc 1 635 13 view .LVU321
 634:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 932              		.loc 1 634 17 is_stmt 0 view .LVU322
 933 0106 0025     		movs	r5, #0
 602:lvgl/src/lv_draw/lv_img_decoder.c ****     uint8_t px_size            = lv_img_cf_get_px_size(dsc->header.cf);
 934              		.loc 1 602 22 view .LVU323
 935 0108 2C46     		mov	r4, r5
 635:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 936              		.loc 1 635 13 view .LVU324
 937 010a C5E7     		b	.L49
 938              	.LVL101:
 939              	.L63:
 608:lvgl/src/lv_draw/lv_img_decoder.c ****     switch(dsc->header.cf) {
 940              		.loc 1 608 12 view .LVU325
 941 010c 0025     		movs	r5, #0
 607:lvgl/src/lv_draw/lv_img_decoder.c ****     int8_t pos   = 0;
 942              		.loc 1 607 14 view .LVU326
 943 010e A946     		mov	r9, r5
 602:lvgl/src/lv_draw/lv_img_decoder.c ****     uint8_t px_size            = lv_img_cf_get_px_size(dsc->header.cf);
 944              		.loc 1 602 22 view .LVU327
 945 0110 2C46     		mov	r4, r5
 946 0112 C1E7     		b	.L49
 947              	.LVL102:
 948              	.L64:
 628:lvgl/src/lv_draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 949              		.loc 1 628 23 view .LVU328
 950 0114 0025     		movs	r5, #0
 629:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 951              		.loc 1 629 23 view .LVU329
 952 0116 6C46     		mov	r4, sp
 953 0118 BEE7     		b	.L49
 954              	.LVL103:
 955              	.L69:
 956              	.LBB15:
 662:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 663:lvgl/src/lv_draw/lv_img_decoder.c **** 
 664:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + LV_IMG_PX_SIZE_ALPHA_BYTE - 1] =
 665:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 666:lvgl/src/lv_draw/lv_img_decoder.c **** 
 667:lvgl/src/lv_draw/lv_img_decoder.c ****         pos -= px_size;
 668:lvgl/src/lv_draw/lv_img_decoder.c ****         if(pos < 0) {
 669:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 8 - px_size;
 957              		.loc 1 669 13 is_stmt 1 view .LVU330
 958              		.loc 1 669 21 is_stmt 0 view .LVU331
 959 011a C0F10805 		rsb	r5, r0, #8
 960              	.LVL104:
 961              		.loc 1 669 17 view .LVU332
 962 011e 6DB2     		sxtb	r5, r5
 963              	.LVL105:
 670:lvgl/src/lv_draw/lv_img_decoder.c ****             data_tmp++;
 964              		.loc 1 670 13 is_stmt 1 view .LVU333
 965              		.loc 1 670 21 is_stmt 0 view .LVU334
 966 0120 09F10109 		add	r9, r9, #1
ARM GAS  D:\Temp\ccmKsZee.s 			page 45


 967              	.LVL106:
 968              	.L61:
 969              		.loc 1 670 21 view .LVU335
 970              	.LBE15:
 661:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 971              		.loc 1 661 26 discriminator 2 view .LVU336
 972 0124 0132     		adds	r2, r2, #1
 973              	.LVL107:
 661:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 974              		.loc 1 661 26 discriminator 2 view .LVU337
 975 0126 12B2     		sxth	r2, r2
 976              	.LVL108:
 977              	.L59:
 661:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 978              		.loc 1 661 5 discriminator 1 view .LVU338
 979 0128 BA42     		cmp	r2, r7
 980 012a 1BDA     		bge	.L68
 981              	.LBB16:
 662:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 982              		.loc 1 662 9 is_stmt 1 view .LVU339
 662:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 983              		.loc 1 662 28 is_stmt 0 view .LVU340
 984 012c 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 662:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 985              		.loc 1 662 46 view .LVU341
 986 0130 01FA05FC 		lsl	ip, r1, r5
 662:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 987              		.loc 1 662 38 view .LVU342
 988 0134 03EA0C03 		and	r3, r3, ip
 662:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 989              		.loc 1 662 55 view .LVU343
 990 0138 2B41     		asrs	r3, r3, r5
 662:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 991              		.loc 1 662 17 view .LVU344
 992 013a 5FFA83FE 		uxtb	lr, r3
 993              	.LVL109:
 664:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 994              		.loc 1 664 9 is_stmt 1 view .LVU345
 665:lvgl/src/lv_draw/lv_img_decoder.c **** 
 995              		.loc 1 665 28 is_stmt 0 view .LVU346
 996 013e 98F80CC0 		ldrb	ip, [r8, #12]	@ zero_extendqisi2
 997 0142 0CF01F0C 		and	ip, ip, #31
 664:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 998              		.loc 1 664 76 view .LVU347
 999 0146 BCF10E0F 		cmp	ip, #14
 1000 014a 01D0     		beq	.L60
 664:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 1001              		.loc 1 664 76 discriminator 1 view .LVU348
 1002 014c 14F80EE0 		ldrb	lr, [r4, lr]	@ zero_extendqisi2
 1003              	.LVL110:
 1004              	.L60:
 664:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 1005              		.loc 1 664 15 discriminator 4 view .LVU349
 1006 0150 02EB4203 		add	r3, r2, r2, lsl #1
 1007              	.LVL111:
 664:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 1008              		.loc 1 664 12 discriminator 4 view .LVU350
ARM GAS  D:\Temp\ccmKsZee.s 			page 46


 1009 0154 0233     		adds	r3, r3, #2
 664:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 1010              		.loc 1 664 76 discriminator 4 view .LVU351
 1011 0156 06F803E0 		strb	lr, [r6, r3]
 1012              	.LVL112:
 667:lvgl/src/lv_draw/lv_img_decoder.c ****         if(pos < 0) {
 1013              		.loc 1 667 9 is_stmt 1 discriminator 4 view .LVU352
 667:lvgl/src/lv_draw/lv_img_decoder.c ****         if(pos < 0) {
 1014              		.loc 1 667 13 is_stmt 0 discriminator 4 view .LVU353
 1015 015a 2D1A     		subs	r5, r5, r0
 1016              	.LVL113:
 667:lvgl/src/lv_draw/lv_img_decoder.c ****         if(pos < 0) {
 1017              		.loc 1 667 13 discriminator 4 view .LVU354
 1018 015c 6DB2     		sxtb	r5, r5
 1019              	.LVL114:
 668:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 8 - px_size;
 1020              		.loc 1 668 9 is_stmt 1 discriminator 4 view .LVU355
 668:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 8 - px_size;
 1021              		.loc 1 668 11 is_stmt 0 discriminator 4 view .LVU356
 1022 015e 002D     		cmp	r5, #0
 1023 0160 E0DA     		bge	.L61
 1024 0162 DAE7     		b	.L69
 1025              	.L68:
 668:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 8 - px_size;
 1026              		.loc 1 668 11 discriminator 4 view .LVU357
 1027              	.LBE16:
 671:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 672:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 673:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 674:lvgl/src/lv_draw/lv_img_decoder.c ****     _lv_mem_buf_release(fs_buf);
 675:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 676:lvgl/src/lv_draw/lv_img_decoder.c ****     return LV_RES_OK;
 1028              		.loc 1 676 12 view .LVU358
 1029 0164 0120     		movs	r0, #1
 1030              	.LVL115:
 1031              	.L58:
 677:lvgl/src/lv_draw/lv_img_decoder.c **** 
 678:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 679:lvgl/src/lv_draw/lv_img_decoder.c ****     LV_LOG_WARN("Image built-in alpha line reader failed because LV_IMG_CF_ALPHA is 0 in lv_conf.h"
 680:lvgl/src/lv_draw/lv_img_decoder.c ****     return LV_RES_INV;
 681:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 682:lvgl/src/lv_draw/lv_img_decoder.c **** }
 1032              		.loc 1 682 1 view .LVU359
 1033 0166 07B0     		add	sp, sp, #28
 1034              	.LCFI7:
 1035              		.cfi_remember_state
 1036              		.cfi_def_cfa_offset 28
 1037              		@ sp needed
 1038 0168 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1039              	.LVL116:
 1040              	.L65:
 1041              	.LCFI8:
 1042              		.cfi_restore_state
 657:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 1043              		.loc 1 657 16 view .LVU360
 1044 016c 0020     		movs	r0, #0
 1045              	.LVL117:
ARM GAS  D:\Temp\ccmKsZee.s 			page 47


 657:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 1046              		.loc 1 657 16 view .LVU361
 1047 016e FAE7     		b	.L58
 1048              	.L71:
 1049              		.align	2
 1050              	.L70:
 1051 0170 00000000 		.word	.LANCHOR0
 1052              		.cfi_endproc
 1053              	.LFE183:
 1055              		.section	.text.lv_img_decoder_built_in_line_indexed,"ax",%progbits
 1056              		.align	1
 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
 1060              		.fpu fpv4-sp-d16
 1062              	lv_img_decoder_built_in_line_indexed:
 1063              	.LVL118:
 1064              	.LFB184:
 683:lvgl/src/lv_draw/lv_img_decoder.c **** 
 684:lvgl/src/lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_indexed(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_c
 685:lvgl/src/lv_draw/lv_img_decoder.c ****                                                      lv_coord_t len, uint8_t * buf)
 686:lvgl/src/lv_draw/lv_img_decoder.c **** {
 1065              		.loc 1 686 1 is_stmt 1 view -0
 1066              		.cfi_startproc
 1067              		@ args = 4, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069              		.loc 1 686 1 is_stmt 0 view .LVU363
 1070 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1071              	.LCFI9:
 1072              		.cfi_def_cfa_offset 32
 1073              		.cfi_offset 3, -32
 1074              		.cfi_offset 4, -28
 1075              		.cfi_offset 5, -24
 1076              		.cfi_offset 6, -20
 1077              		.cfi_offset 7, -16
 1078              		.cfi_offset 8, -12
 1079              		.cfi_offset 9, -8
 1080              		.cfi_offset 14, -4
 1081 0004 0446     		mov	r4, r0
 1082 0006 0F46     		mov	r7, r1
 1083 0008 9046     		mov	r8, r2
 1084 000a 1E46     		mov	r6, r3
 1085 000c 089D     		ldr	r5, [sp, #32]
 687:lvgl/src/lv_draw/lv_img_decoder.c **** 
 688:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_IMG_CF_INDEXED
 689:lvgl/src/lv_draw/lv_img_decoder.c ****     uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf);
 1086              		.loc 1 689 5 is_stmt 1 view .LVU364
 1087              		.loc 1 689 56 is_stmt 0 view .LVU365
 1088 000e 007B     		ldrb	r0, [r0, #12]	@ zero_extendqisi2
 1089              	.LVL119:
 1090              		.loc 1 689 23 view .LVU366
 1091 0010 00F01F00 		and	r0, r0, #31
 1092 0014 FFF7FEFF 		bl	lv_img_cf_get_px_size
 1093              	.LVL120:
 690:lvgl/src/lv_draw/lv_img_decoder.c ****     uint16_t mask   = (1 << px_size) - 1; /*E.g. px_size = 2; mask = 0x03*/
 1094              		.loc 1 690 5 is_stmt 1 view .LVU367
 1095              		.loc 1 690 26 is_stmt 0 view .LVU368
ARM GAS  D:\Temp\ccmKsZee.s 			page 48


 1096 0018 4FF0010C 		mov	ip, #1
 1097 001c 0CFA00FC 		lsl	ip, ip, r0
 1098              		.loc 1 690 38 view .LVU369
 1099 0020 1FFA8CFC 		uxth	ip, ip
 1100              		.loc 1 690 14 view .LVU370
 1101 0024 0CF1FF3C 		add	ip, ip, #-1
 1102 0028 1FFA8CFC 		uxth	ip, ip
 1103              	.LVL121:
 691:lvgl/src/lv_draw/lv_img_decoder.c **** 
 692:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_coord_t w = 0;
 1104              		.loc 1 692 5 is_stmt 1 view .LVU371
 693:lvgl/src/lv_draw/lv_img_decoder.c ****     int8_t pos   = 0;
 1105              		.loc 1 693 5 view .LVU372
 694:lvgl/src/lv_draw/lv_img_decoder.c ****     uint32_t ofs = 0;
 1106              		.loc 1 694 5 view .LVU373
 695:lvgl/src/lv_draw/lv_img_decoder.c ****     switch(dsc->header.cf) {
 1107              		.loc 1 695 5 view .LVU374
 1108              		.loc 1 695 23 is_stmt 0 view .LVU375
 1109 002c 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 1110 002e 03F01F03 		and	r3, r3, #31
 1111              		.loc 1 695 5 view .LVU376
 1112 0032 073B     		subs	r3, r3, #7
 1113 0034 032B     		cmp	r3, #3
 1114 0036 4FD8     		bhi	.L86
 1115 0038 DFE803F0 		tbb	[pc, r3]
 1116              	.L75:
 1117 003c 02       		.byte	(.L78-.L75)/2
 1118 003d 1E       		.byte	(.L77-.L75)/2
 1119 003e 32       		.byte	(.L76-.L75)/2
 1120 003f 45       		.byte	(.L74-.L75)/2
 1121              		.p2align 1
 1122              	.L78:
 696:lvgl/src/lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_1BIT:
 697:lvgl/src/lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 3); /*E.g. w = 20 -> w = 2 + 1*/
 1123              		.loc 1 697 13 is_stmt 1 view .LVU377
 1124              		.loc 1 697 29 is_stmt 0 view .LVU378
 1125 0040 E368     		ldr	r3, [r4, #12]
 1126 0042 C3F38A23 		ubfx	r3, r3, #10, #11
 1127              		.loc 1 697 32 view .LVU379
 1128 0046 D910     		asrs	r1, r3, #3
 1129              		.loc 1 697 15 view .LVU380
 1130 0048 0AB2     		sxth	r2, r1
 1131              	.LVL122:
 698:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x7) w++;
 1132              		.loc 1 698 13 is_stmt 1 view .LVU381
 1133              		.loc 1 698 15 is_stmt 0 view .LVU382
 1134 004a 13F0070F 		tst	r3, #7
 1135 004e 00D0     		beq	.L79
 1136              		.loc 1 698 37 is_stmt 1 discriminator 1 view .LVU383
 1137              		.loc 1 698 38 is_stmt 0 discriminator 1 view .LVU384
 1138 0050 4A1C     		adds	r2, r1, #1
 1139              	.LVL123:
 1140              	.L79:
 699:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 3); /*First pixel*/
 1141              		.loc 1 699 13 is_stmt 1 view .LVU385
 1142              		.loc 1 699 31 is_stmt 0 view .LVU386
 1143 0052 4FEAE70E 		asr	lr, r7, #3
ARM GAS  D:\Temp\ccmKsZee.s 			page 49


 1144              		.loc 1 699 26 view .LVU387
 1145 0056 08FB02E2 		mla	r2, r8, r2, lr
 1146              	.LVL124:
 700:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 8;                /*Skip the palette*/
 1147              		.loc 1 700 13 is_stmt 1 view .LVU388
 1148              		.loc 1 700 17 is_stmt 0 view .LVU389
 1149 005a 0832     		adds	r2, r2, #8
 1150              	.LVL125:
 701:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 7 - (x & 0x7);
 1151              		.loc 1 701 13 is_stmt 1 view .LVU390
 1152              		.loc 1 701 21 is_stmt 0 view .LVU391
 1153 005c FB43     		mvns	r3, r7
 1154              		.loc 1 701 17 view .LVU392
 1155 005e 03F00703 		and	r3, r3, #7
 1156              	.LVL126:
 702:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 1157              		.loc 1 702 13 is_stmt 1 view .LVU393
 1158              	.L73:
 703:lvgl/src/lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_2BIT:
 704:lvgl/src/lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 2); /*E.g. w = 13 -> w = 3 + 1 (bytes)*/
 705:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
 706:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 707:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 16;               /*Skip the palette*/
 708:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 6 - ((x & 0x3) * 2);
 709:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 710:lvgl/src/lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_4BIT:
 711:lvgl/src/lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 1); /*E.g. w = 13 -> w = 6 + 1 (bytes)*/
 712:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 713:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 714:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 64;               /*Skip the palette*/
 715:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 4 - ((x & 0x1) * 4);
 716:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 717:lvgl/src/lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_8BIT:
 718:lvgl/src/lv_draw/lv_img_decoder.c ****             w = dsc->header.w; /*E.g. x = 7 -> w = 7 (bytes)*/
 719:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 720:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 1024;       /*Skip the palette*/
 721:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 0;
 722:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 723:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 724:lvgl/src/lv_draw/lv_img_decoder.c **** 
 725:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 1159              		.loc 1 725 5 view .LVU394
 1160              		.loc 1 725 38 is_stmt 0 view .LVU395
 1161 0062 D4F81C80 		ldr	r8, [r4, #28]
 1162              	.LVL127:
 726:lvgl/src/lv_draw/lv_img_decoder.c **** 
 727:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 728:lvgl/src/lv_draw/lv_img_decoder.c ****     uint8_t * fs_buf = _lv_mem_buf_get(w);
 729:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 730:lvgl/src/lv_draw/lv_img_decoder.c ****     const uint8_t * data_tmp = NULL;
 1163              		.loc 1 730 5 is_stmt 1 view .LVU396
 731:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 1164              		.loc 1 731 5 view .LVU397
 1165              		.loc 1 731 11 is_stmt 0 view .LVU398
 1166 0066 A17A     		ldrb	r1, [r4, #10]	@ zero_extendqisi2
 1167              		.loc 1 731 7 view .LVU399
 1168 0068 0029     		cmp	r1, #0
ARM GAS  D:\Temp\ccmKsZee.s 			page 50


 1169 006a 63D1     		bne	.L88
 1170              	.LBB17:
 732:lvgl/src/lv_draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = dsc->src;
 1171              		.loc 1 732 9 is_stmt 1 view .LVU400
 1172              		.loc 1 732 30 is_stmt 0 view .LVU401
 1173 006c 6168     		ldr	r1, [r4, #4]
 1174              	.LVL128:
 733:lvgl/src/lv_draw/lv_img_decoder.c ****         data_tmp                     = img_dsc->data + ofs;
 1175              		.loc 1 733 9 is_stmt 1 view .LVU402
 1176              		.loc 1 733 47 is_stmt 0 view .LVU403
 1177 006e 8968     		ldr	r1, [r1, #8]
 1178              	.LVL129:
 1179              		.loc 1 733 38 view .LVU404
 1180 0070 01EB020E 		add	lr, r1, r2
 1181              	.LVL130:
 1182              		.loc 1 733 38 view .LVU405
 1183              	.LBE17:
 734:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 735:lvgl/src/lv_draw/lv_img_decoder.c ****     else {
 736:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 737:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_fs_seek(user_data->f, ofs + 4); /*+4 to skip the header*/
 738:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_fs_read(user_data->f, fs_buf, w, NULL);
 739:lvgl/src/lv_draw/lv_img_decoder.c ****         data_tmp = fs_buf;
 740:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 741:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Image built-in indexed line reader can't read file because LV_USE_FILESYSTEM =
 742:lvgl/src/lv_draw/lv_img_decoder.c ****         data_tmp = NULL; /*To avoid warnings*/
 743:lvgl/src/lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 744:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 745:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 746:lvgl/src/lv_draw/lv_img_decoder.c **** 
 747:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_coord_t i;
 1184              		.loc 1 747 5 is_stmt 1 view .LVU406
 748:lvgl/src/lv_draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 1185              		.loc 1 748 5 view .LVU407
 1186              		.loc 1 748 11 is_stmt 0 view .LVU408
 1187 0074 0024     		movs	r4, #0
 1188              	.LVL131:
 1189              		.loc 1 748 5 view .LVU409
 1190 0076 3BE0     		b	.L83
 1191              	.LVL132:
 1192              	.L77:
 704:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
 1193              		.loc 1 704 13 is_stmt 1 view .LVU410
 704:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
 1194              		.loc 1 704 29 is_stmt 0 view .LVU411
 1195 0078 E368     		ldr	r3, [r4, #12]
 1196 007a C3F38A23 		ubfx	r3, r3, #10, #11
 704:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
 1197              		.loc 1 704 32 view .LVU412
 1198 007e 9910     		asrs	r1, r3, #2
 704:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
 1199              		.loc 1 704 15 view .LVU413
 1200 0080 0AB2     		sxth	r2, r1
 1201              	.LVL133:
 705:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 1202              		.loc 1 705 13 is_stmt 1 view .LVU414
 705:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
ARM GAS  D:\Temp\ccmKsZee.s 			page 51


 1203              		.loc 1 705 15 is_stmt 0 view .LVU415
 1204 0082 13F0030F 		tst	r3, #3
 1205 0086 00D0     		beq	.L80
 705:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 1206              		.loc 1 705 37 is_stmt 1 discriminator 1 view .LVU416
 705:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 1207              		.loc 1 705 38 is_stmt 0 discriminator 1 view .LVU417
 1208 0088 4A1C     		adds	r2, r1, #1
 1209              	.LVL134:
 1210              	.L80:
 706:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 16;               /*Skip the palette*/
 1211              		.loc 1 706 13 is_stmt 1 view .LVU418
 706:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 16;               /*Skip the palette*/
 1212              		.loc 1 706 31 is_stmt 0 view .LVU419
 1213 008a 4FEAA70E 		asr	lr, r7, #2
 706:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 16;               /*Skip the palette*/
 1214              		.loc 1 706 26 view .LVU420
 1215 008e 08FB02E2 		mla	r2, r8, r2, lr
 1216              	.LVL135:
 707:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 6 - ((x & 0x3) * 2);
 1217              		.loc 1 707 13 is_stmt 1 view .LVU421
 707:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 6 - ((x & 0x3) * 2);
 1218              		.loc 1 707 17 is_stmt 0 view .LVU422
 1219 0092 1032     		adds	r2, r2, #16
 1220              	.LVL136:
 708:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 1221              		.loc 1 708 13 is_stmt 1 view .LVU423
 708:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 1222              		.loc 1 708 21 is_stmt 0 view .LVU424
 1223 0094 BBB2     		uxth	r3, r7
 1224 0096 DB43     		mvns	r3, r3
 708:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 1225              		.loc 1 708 17 view .LVU425
 1226 0098 03F00303 		and	r3, r3, #3
 1227 009c 5B00     		lsls	r3, r3, #1
 1228              	.LVL137:
 709:lvgl/src/lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_4BIT:
 1229              		.loc 1 709 13 is_stmt 1 view .LVU426
 1230 009e E0E7     		b	.L73
 1231              	.LVL138:
 1232              	.L76:
 711:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 1233              		.loc 1 711 13 view .LVU427
 711:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 1234              		.loc 1 711 29 is_stmt 0 view .LVU428
 1235 00a0 E368     		ldr	r3, [r4, #12]
 1236 00a2 C3F38A23 		ubfx	r3, r3, #10, #11
 711:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 1237              		.loc 1 711 32 view .LVU429
 1238 00a6 5910     		asrs	r1, r3, #1
 711:lvgl/src/lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 1239              		.loc 1 711 15 view .LVU430
 1240 00a8 0AB2     		sxth	r2, r1
 1241              	.LVL139:
 712:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 1242              		.loc 1 712 13 is_stmt 1 view .LVU431
 712:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
ARM GAS  D:\Temp\ccmKsZee.s 			page 52


 1243              		.loc 1 712 15 is_stmt 0 view .LVU432
 1244 00aa 13F0010F 		tst	r3, #1
 1245 00ae 00D0     		beq	.L81
 712:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 1246              		.loc 1 712 37 is_stmt 1 discriminator 1 view .LVU433
 712:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 1247              		.loc 1 712 38 is_stmt 0 discriminator 1 view .LVU434
 1248 00b0 4A1C     		adds	r2, r1, #1
 1249              	.LVL140:
 1250              	.L81:
 713:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 64;               /*Skip the palette*/
 1251              		.loc 1 713 13 is_stmt 1 view .LVU435
 713:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 64;               /*Skip the palette*/
 1252              		.loc 1 713 31 is_stmt 0 view .LVU436
 1253 00b2 4FEA670E 		asr	lr, r7, #1
 713:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 64;               /*Skip the palette*/
 1254              		.loc 1 713 26 view .LVU437
 1255 00b6 08FB02E2 		mla	r2, r8, r2, lr
 1256              	.LVL141:
 714:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 4 - ((x & 0x1) * 4);
 1257              		.loc 1 714 13 is_stmt 1 view .LVU438
 714:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 4 - ((x & 0x1) * 4);
 1258              		.loc 1 714 17 is_stmt 0 view .LVU439
 1259 00ba 4032     		adds	r2, r2, #64
 1260              	.LVL142:
 715:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 1261              		.loc 1 715 13 is_stmt 1 view .LVU440
 715:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 1262              		.loc 1 715 17 is_stmt 0 view .LVU441
 1263 00bc 17F0010F 		tst	r7, #1
 1264 00c0 0DD1     		bne	.L87
 1265 00c2 0423     		movs	r3, #4
 1266 00c4 CDE7     		b	.L73
 1267              	.LVL143:
 1268              	.L74:
 718:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 1269              		.loc 1 718 13 is_stmt 1 view .LVU442
 718:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 1270              		.loc 1 718 28 is_stmt 0 view .LVU443
 1271 00c6 E368     		ldr	r3, [r4, #12]
 1272 00c8 C3F38A23 		ubfx	r3, r3, #10, #11
 1273              	.LVL144:
 719:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 1024;       /*Skip the palette*/
 1274              		.loc 1 719 13 is_stmt 1 view .LVU444
 719:lvgl/src/lv_draw/lv_img_decoder.c ****             ofs += 1024;       /*Skip the palette*/
 1275              		.loc 1 719 26 is_stmt 0 view .LVU445
 1276 00cc 08FB0378 		mla	r8, r8, r3, r7
 1277              	.LVL145:
 720:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 0;
 1278              		.loc 1 720 13 is_stmt 1 view .LVU446
 720:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 0;
 1279              		.loc 1 720 17 is_stmt 0 view .LVU447
 1280 00d0 08F58062 		add	r2, r8, #1024
 1281              	.LVL146:
 721:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 1282              		.loc 1 721 13 is_stmt 1 view .LVU448
 722:lvgl/src/lv_draw/lv_img_decoder.c ****     }
ARM GAS  D:\Temp\ccmKsZee.s 			page 53


 1283              		.loc 1 722 13 view .LVU449
 721:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 1284              		.loc 1 721 17 is_stmt 0 view .LVU450
 1285 00d4 0023     		movs	r3, #0
 722:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1286              		.loc 1 722 13 view .LVU451
 1287 00d6 C4E7     		b	.L73
 1288              	.LVL147:
 1289              	.L86:
 694:lvgl/src/lv_draw/lv_img_decoder.c ****     switch(dsc->header.cf) {
 1290              		.loc 1 694 14 view .LVU452
 1291 00d8 0022     		movs	r2, #0
 693:lvgl/src/lv_draw/lv_img_decoder.c ****     uint32_t ofs = 0;
 1292              		.loc 1 693 12 view .LVU453
 1293 00da 1346     		mov	r3, r2
 1294 00dc C1E7     		b	.L73
 1295              	.LVL148:
 1296              	.L87:
 715:lvgl/src/lv_draw/lv_img_decoder.c ****             break;
 1297              		.loc 1 715 17 view .LVU454
 1298 00de 0023     		movs	r3, #0
 1299 00e0 BFE7     		b	.L73
 1300              	.LVL149:
 1301              	.L91:
 1302              	.LBB18:
 749:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 750:lvgl/src/lv_draw/lv_img_decoder.c **** 
 751:lvgl/src/lv_draw/lv_img_decoder.c ****         lv_color_t color = user_data->palette[val_act];
 752:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 753:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = color.full;
 754:lvgl/src/lv_draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 16
 755:lvgl/src/lv_draw/lv_img_decoder.c ****         /*Because of Alpha byte 16 bit color can start on odd address which can cause crash*/
 756:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = color.full & 0xFF;
 757:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + 1] = (color.full >> 8) & 0xFF;
 758:lvgl/src/lv_draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 32
 759:lvgl/src/lv_draw/lv_img_decoder.c ****         *((uint32_t *)&buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE]) = color.full;
 760:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 761:lvgl/src/lv_draw/lv_img_decoder.c **** #error "Invalid LV_COLOR_DEPTH. Check it in lv_conf.h"
 762:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 763:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + LV_IMG_PX_SIZE_ALPHA_BYTE - 1] = user_data->opa[val_act
 764:lvgl/src/lv_draw/lv_img_decoder.c **** 
 765:lvgl/src/lv_draw/lv_img_decoder.c ****         pos -= px_size;
 766:lvgl/src/lv_draw/lv_img_decoder.c ****         if(pos < 0) {
 767:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 8 - px_size;
 1303              		.loc 1 767 13 is_stmt 1 view .LVU455
 1304              		.loc 1 767 21 is_stmt 0 view .LVU456
 1305 00e2 C0F10803 		rsb	r3, r0, #8
 1306              	.LVL150:
 1307              		.loc 1 767 17 view .LVU457
 1308 00e6 5BB2     		sxtb	r3, r3
 1309              	.LVL151:
 768:lvgl/src/lv_draw/lv_img_decoder.c ****             data_tmp++;
 1310              		.loc 1 768 13 is_stmt 1 view .LVU458
 1311              		.loc 1 768 21 is_stmt 0 view .LVU459
 1312 00e8 0EF1010E 		add	lr, lr, #1
 1313              	.LVL152:
 1314              	.L84:
ARM GAS  D:\Temp\ccmKsZee.s 			page 54


 1315              		.loc 1 768 21 view .LVU460
 1316              	.LBE18:
 748:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 1317              		.loc 1 748 26 discriminator 2 view .LVU461
 1318 00ec 0134     		adds	r4, r4, #1
 1319              	.LVL153:
 748:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 1320              		.loc 1 748 26 discriminator 2 view .LVU462
 1321 00ee 24B2     		sxth	r4, r4
 1322              	.LVL154:
 1323              	.L83:
 748:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 1324              		.loc 1 748 5 discriminator 1 view .LVU463
 1325 00f0 B442     		cmp	r4, r6
 1326 00f2 1CDA     		bge	.L90
 1327              	.LBB19:
 749:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 1328              		.loc 1 749 9 is_stmt 1 view .LVU464
 749:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 1329              		.loc 1 749 28 is_stmt 0 view .LVU465
 1330 00f4 9EF80020 		ldrb	r2, [lr]	@ zero_extendqisi2
 749:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 1331              		.loc 1 749 46 view .LVU466
 1332 00f8 0CFA03F1 		lsl	r1, ip, r3
 749:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 1333              		.loc 1 749 38 view .LVU467
 1334 00fc 0A40     		ands	r2, r2, r1
 749:lvgl/src/lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 1335              		.loc 1 749 55 view .LVU468
 1336 00fe 1A41     		asrs	r2, r2, r3
 1337              	.LVL155:
 751:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 1338              		.loc 1 751 9 is_stmt 1 view .LVU469
 751:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 1339              		.loc 1 751 37 is_stmt 0 view .LVU470
 1340 0100 D8F80010 		ldr	r1, [r8]
 751:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 1341              		.loc 1 751 46 view .LVU471
 1342 0104 D2B2     		uxtb	r2, r2
 756:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + 1] = (color.full >> 8) & 0xFF;
 1343              		.loc 1 756 9 is_stmt 1 view .LVU472
 756:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + 1] = (color.full >> 8) & 0xFF;
 1344              		.loc 1 756 51 is_stmt 0 view .LVU473
 1345 0106 31F81270 		ldrh	r7, [r1, r2, lsl #1]
 756:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + 1] = (color.full >> 8) & 0xFF;
 1346              		.loc 1 756 15 view .LVU474
 1347 010a 04EB4401 		add	r1, r4, r4, lsl #1
 756:lvgl/src/lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + 1] = (color.full >> 8) & 0xFF;
 1348              		.loc 1 756 44 view .LVU475
 1349 010e 6F54     		strb	r7, [r5, r1]
 757:lvgl/src/lv_draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 32
 1350              		.loc 1 757 9 is_stmt 1 view .LVU476
 757:lvgl/src/lv_draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 32
 1351              		.loc 1 757 12 is_stmt 0 view .LVU477
 1352 0110 01F10109 		add	r9, r1, #1
 757:lvgl/src/lv_draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 32
 1353              		.loc 1 757 48 view .LVU478
ARM GAS  D:\Temp\ccmKsZee.s 			page 55


 1354 0114 3F0A     		lsrs	r7, r7, #8
 1355 0116 05F80970 		strb	r7, [r5, r9]
 763:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1356              		.loc 1 763 9 is_stmt 1 view .LVU479
 763:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1357              		.loc 1 763 87 is_stmt 0 view .LVU480
 1358 011a D8F80470 		ldr	r7, [r8, #4]
 763:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1359              		.loc 1 763 12 view .LVU481
 1360 011e 0231     		adds	r1, r1, #2
 763:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1361              		.loc 1 763 92 view .LVU482
 1362 0120 BA5C     		ldrb	r2, [r7, r2]	@ zero_extendqisi2
 1363              	.LVL156:
 763:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1364              		.loc 1 763 76 view .LVU483
 1365 0122 6A54     		strb	r2, [r5, r1]
 765:lvgl/src/lv_draw/lv_img_decoder.c ****         if(pos < 0) {
 1366              		.loc 1 765 9 is_stmt 1 view .LVU484
 765:lvgl/src/lv_draw/lv_img_decoder.c ****         if(pos < 0) {
 1367              		.loc 1 765 13 is_stmt 0 view .LVU485
 1368 0124 1B1A     		subs	r3, r3, r0
 1369              	.LVL157:
 765:lvgl/src/lv_draw/lv_img_decoder.c ****         if(pos < 0) {
 1370              		.loc 1 765 13 view .LVU486
 1371 0126 5BB2     		sxtb	r3, r3
 1372              	.LVL158:
 766:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 8 - px_size;
 1373              		.loc 1 766 9 is_stmt 1 view .LVU487
 766:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 8 - px_size;
 1374              		.loc 1 766 11 is_stmt 0 view .LVU488
 1375 0128 002B     		cmp	r3, #0
 1376 012a DFDA     		bge	.L84
 1377 012c D9E7     		b	.L91
 1378              	.L90:
 766:lvgl/src/lv_draw/lv_img_decoder.c ****             pos = 8 - px_size;
 1379              		.loc 1 766 11 view .LVU489
 1380              	.LBE19:
 769:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 770:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 771:lvgl/src/lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 772:lvgl/src/lv_draw/lv_img_decoder.c ****     _lv_mem_buf_release(fs_buf);
 773:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 774:lvgl/src/lv_draw/lv_img_decoder.c ****     return LV_RES_OK;
 1381              		.loc 1 774 12 view .LVU490
 1382 012e 0120     		movs	r0, #1
 1383              	.LVL159:
 1384              	.L82:
 775:lvgl/src/lv_draw/lv_img_decoder.c **** #else
 776:lvgl/src/lv_draw/lv_img_decoder.c ****     LV_LOG_WARN("Image built-in indexed line reader failed because LV_IMG_CF_INDEXED is 0 in lv_con
 777:lvgl/src/lv_draw/lv_img_decoder.c ****     return LV_RES_INV;
 778:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 779:lvgl/src/lv_draw/lv_img_decoder.c **** }
 1385              		.loc 1 779 1 view .LVU491
 1386 0130 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1387              	.LVL160:
 1388              	.L88:
ARM GAS  D:\Temp\ccmKsZee.s 			page 56


 743:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 1389              		.loc 1 743 16 view .LVU492
 1390 0134 0020     		movs	r0, #0
 1391              	.LVL161:
 743:lvgl/src/lv_draw/lv_img_decoder.c **** #endif
 1392              		.loc 1 743 16 view .LVU493
 1393 0136 FBE7     		b	.L82
 1394              		.cfi_endproc
 1395              	.LFE184:
 1397              		.section	.text.lv_img_decoder_built_in_read_line,"ax",%progbits
 1398              		.align	1
 1399              		.global	lv_img_decoder_built_in_read_line
 1400              		.syntax unified
 1401              		.thumb
 1402              		.thumb_func
 1403              		.fpu fpv4-sp-d16
 1405              	lv_img_decoder_built_in_read_line:
 1406              	.LVL162:
 1407              	.LFB180:
 479:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 1408              		.loc 1 479 1 is_stmt 1 view -0
 1409              		.cfi_startproc
 1410              		@ args = 8, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 479:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 1412              		.loc 1 479 1 is_stmt 0 view .LVU495
 1413 0000 30B5     		push	{r4, r5, lr}
 1414              	.LCFI10:
 1415              		.cfi_def_cfa_offset 12
 1416              		.cfi_offset 4, -12
 1417              		.cfi_offset 5, -8
 1418              		.cfi_offset 14, -4
 1419 0002 83B0     		sub	sp, sp, #12
 1420              	.LCFI11:
 1421              		.cfi_def_cfa_offset 24
 1422 0004 0846     		mov	r0, r1
 1423              	.LVL163:
 479:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 1424              		.loc 1 479 1 view .LVU496
 1425 0006 1146     		mov	r1, r2
 1426              	.LVL164:
 479:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 1427              		.loc 1 479 1 view .LVU497
 1428 0008 1A46     		mov	r2, r3
 1429              	.LVL165:
 479:lvgl/src/lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 1430              		.loc 1 479 1 view .LVU498
 1431 000a BDF91830 		ldrsh	r3, [sp, #24]
 1432              	.LVL166:
 480:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1433              		.loc 1 480 5 is_stmt 1 view .LVU499
 482:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1434              		.loc 1 482 5 view .LVU500
 484:lvgl/src/lv_draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 1435              		.loc 1 484 5 view .LVU501
 484:lvgl/src/lv_draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 1436              		.loc 1 484 23 is_stmt 0 view .LVU502
ARM GAS  D:\Temp\ccmKsZee.s 			page 57


 1437 000e 047B     		ldrb	r4, [r0, #12]	@ zero_extendqisi2
 484:lvgl/src/lv_draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 1438              		.loc 1 484 47 view .LVU503
 1439 0010 04F01E05 		and	r5, r4, #30
 484:lvgl/src/lv_draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 1440              		.loc 1 484 7 view .LVU504
 1441 0014 042D     		cmp	r5, #4
 1442 0016 0ED0     		beq	.L93
 485:lvgl/src/lv_draw/lv_img_decoder.c ****         /* For TRUE_COLOR images read line required only for files.
 1443              		.loc 1 485 23 discriminator 1 view .LVU505
 1444 0018 04F01F04 		and	r4, r4, #31
 484:lvgl/src/lv_draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 1445              		.loc 1 484 95 discriminator 1 view .LVU506
 1446 001c 062C     		cmp	r4, #6
 1447 001e 0AD0     		beq	.L93
 492:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 1448              		.loc 1 492 10 is_stmt 1 view .LVU507
 493:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1449              		.loc 1 493 52 is_stmt 0 view .LVU508
 1450 0020 A4F10B05 		sub	r5, r4, #11
 1451 0024 EDB2     		uxtb	r5, r5
 492:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 1452              		.loc 1 492 12 view .LVU509
 1453 0026 032D     		cmp	r5, #3
 1454 0028 10D9     		bls	.L100
 497:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_INDEXED_4BIT || dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 1455              		.loc 1 497 10 is_stmt 1 view .LVU510
 498:lvgl/src/lv_draw/lv_img_decoder.c ****         res = lv_img_decoder_built_in_line_indexed(dsc, x, y, len, buf);
 1456              		.loc 1 498 54 is_stmt 0 view .LVU511
 1457 002a 073C     		subs	r4, r4, #7
 1458 002c E4B2     		uxtb	r4, r4
 497:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_INDEXED_4BIT || dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 1459              		.loc 1 497 12 view .LVU512
 1460 002e 032C     		cmp	r4, #3
 1461 0030 11D9     		bls	.L101
 503:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1462              		.loc 1 503 16 view .LVU513
 1463 0032 0020     		movs	r0, #0
 1464              	.LVL167:
 503:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1465              		.loc 1 503 16 view .LVU514
 1466 0034 03E0     		b	.L95
 1467              	.LVL168:
 1468              	.L93:
 488:lvgl/src/lv_draw/lv_img_decoder.c ****             res = lv_img_decoder_built_in_line_true_color(dsc, x, y, len, buf);
 1469              		.loc 1 488 9 is_stmt 1 view .LVU515
 488:lvgl/src/lv_draw/lv_img_decoder.c ****             res = lv_img_decoder_built_in_line_true_color(dsc, x, y, len, buf);
 1470              		.loc 1 488 15 is_stmt 0 view .LVU516
 1471 0036 847A     		ldrb	r4, [r0, #10]	@ zero_extendqisi2
 488:lvgl/src/lv_draw/lv_img_decoder.c ****             res = lv_img_decoder_built_in_line_true_color(dsc, x, y, len, buf);
 1472              		.loc 1 488 11 view .LVU517
 1473 0038 012C     		cmp	r4, #1
 1474 003a 02D0     		beq	.L102
 482:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1475              		.loc 1 482 14 view .LVU518
 1476 003c 0020     		movs	r0, #0
 1477              	.LVL169:
ARM GAS  D:\Temp\ccmKsZee.s 			page 58


 1478              	.L95:
 507:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1479              		.loc 1 507 1 view .LVU519
 1480 003e 03B0     		add	sp, sp, #12
 1481              	.LCFI12:
 1482              		.cfi_remember_state
 1483              		.cfi_def_cfa_offset 12
 1484              		@ sp needed
 1485 0040 30BD     		pop	{r4, r5, pc}
 1486              	.LVL170:
 1487              	.L102:
 1488              	.LCFI13:
 1489              		.cfi_restore_state
 489:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 1490              		.loc 1 489 13 is_stmt 1 view .LVU520
 489:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 1491              		.loc 1 489 19 is_stmt 0 view .LVU521
 1492 0042 079C     		ldr	r4, [sp, #28]
 1493 0044 0094     		str	r4, [sp]
 1494 0046 FFF7FEFF 		bl	lv_img_decoder_built_in_line_true_color
 1495              	.LVL171:
 489:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 1496              		.loc 1 489 19 view .LVU522
 1497 004a F8E7     		b	.L95
 1498              	.LVL172:
 1499              	.L100:
 495:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1500              		.loc 1 495 9 is_stmt 1 view .LVU523
 495:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1501              		.loc 1 495 15 is_stmt 0 view .LVU524
 1502 004c 079C     		ldr	r4, [sp, #28]
 1503 004e 0094     		str	r4, [sp]
 1504 0050 FFF7FEFF 		bl	lv_img_decoder_built_in_line_alpha
 1505              	.LVL173:
 495:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1506              		.loc 1 495 15 view .LVU525
 1507 0054 F3E7     		b	.L95
 1508              	.LVL174:
 1509              	.L101:
 499:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1510              		.loc 1 499 9 is_stmt 1 view .LVU526
 499:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1511              		.loc 1 499 15 is_stmt 0 view .LVU527
 1512 0056 079C     		ldr	r4, [sp, #28]
 1513 0058 0094     		str	r4, [sp]
 1514 005a FFF7FEFF 		bl	lv_img_decoder_built_in_line_indexed
 1515              	.LVL175:
 499:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1516              		.loc 1 499 15 view .LVU528
 1517 005e EEE7     		b	.L95
 1518              		.cfi_endproc
 1519              	.LFE180:
 1521              		.section	.text.lv_img_decoder_get_info,"ax",%progbits
 1522              		.align	1
 1523              		.global	lv_img_decoder_get_info
 1524              		.syntax unified
 1525              		.thumb
ARM GAS  D:\Temp\ccmKsZee.s 			page 59


 1526              		.thumb_func
 1527              		.fpu fpv4-sp-d16
 1529              	lv_img_decoder_get_info:
 1530              	.LVL176:
 1531              	.LFB168:
  86:lvgl/src/lv_draw/lv_img_decoder.c ****     header->always_zero = 0;
 1532              		.loc 1 86 1 is_stmt 1 view -0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
  86:lvgl/src/lv_draw/lv_img_decoder.c ****     header->always_zero = 0;
 1536              		.loc 1 86 1 is_stmt 0 view .LVU530
 1537 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1538              	.LCFI14:
 1539              		.cfi_def_cfa_offset 24
 1540              		.cfi_offset 3, -24
 1541              		.cfi_offset 4, -20
 1542              		.cfi_offset 5, -16
 1543              		.cfi_offset 6, -12
 1544              		.cfi_offset 7, -8
 1545              		.cfi_offset 14, -4
 1546 0002 0746     		mov	r7, r0
 1547 0004 0E46     		mov	r6, r1
  87:lvgl/src/lv_draw/lv_img_decoder.c ****     header->h = 0;
 1548              		.loc 1 87 5 is_stmt 1 view .LVU531
  87:lvgl/src/lv_draw/lv_img_decoder.c ****     header->h = 0;
 1549              		.loc 1 87 25 is_stmt 0 view .LVU532
 1550 0006 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1551 0008 6FF34713 		bfc	r3, #5, #3
 1552 000c 0B70     		strb	r3, [r1]
  88:lvgl/src/lv_draw/lv_img_decoder.c ****     header->w = 0;
 1553              		.loc 1 88 5 is_stmt 1 view .LVU533
  88:lvgl/src/lv_draw/lv_img_decoder.c ****     header->w = 0;
 1554              		.loc 1 88 15 is_stmt 0 view .LVU534
 1555 000e 4B88     		ldrh	r3, [r1, #2]
 1556 0010 6FF34F13 		bfc	r3, #5, #11
 1557 0014 4B80     		strh	r3, [r1, #2]	@ movhi
  89:lvgl/src/lv_draw/lv_img_decoder.c ****     header->cf = LV_IMG_CF_UNKNOWN;
 1558              		.loc 1 89 5 is_stmt 1 view .LVU535
  89:lvgl/src/lv_draw/lv_img_decoder.c ****     header->cf = LV_IMG_CF_UNKNOWN;
 1559              		.loc 1 89 15 is_stmt 0 view .LVU536
 1560 0016 0B68     		ldr	r3, [r1]
 1561 0018 6FF39423 		bfc	r3, #10, #11
 1562 001c 0B60     		str	r3, [r1]
  90:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1563              		.loc 1 90 5 is_stmt 1 view .LVU537
  90:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1564              		.loc 1 90 16 is_stmt 0 view .LVU538
 1565 001e 6FF30403 		bfc	r3, #0, #5
 1566 0022 0B70     		strb	r3, [r1]
  92:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * d;
 1567              		.loc 1 92 5 is_stmt 1 view .LVU539
 1568              	.LVL177:
  93:lvgl/src/lv_draw/lv_img_decoder.c ****     _LV_LL_READ(LV_GC_ROOT(_lv_img_defoder_ll), d) {
 1569              		.loc 1 93 5 view .LVU540
  94:lvgl/src/lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
 1570              		.loc 1 94 5 view .LVU541
ARM GAS  D:\Temp\ccmKsZee.s 			page 60


 1571 0024 0C48     		ldr	r0, .L110
 1572              	.LVL178:
  94:lvgl/src/lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
 1573              		.loc 1 94 5 is_stmt 0 view .LVU542
 1574 0026 FFF7FEFF 		bl	_lv_ll_get_head
 1575              	.LVL179:
  94:lvgl/src/lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
 1576              		.loc 1 94 5 view .LVU543
 1577 002a 0446     		mov	r4, r0
 1578              	.LVL180:
  92:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * d;
 1579              		.loc 1 92 14 view .LVU544
 1580 002c 0025     		movs	r5, #0
  94:lvgl/src/lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
 1581              		.loc 1 94 5 view .LVU545
 1582 002e 05E0     		b	.L104
 1583              	.L108:
  95:lvgl/src/lv_draw/lv_img_decoder.c ****         if(d->info_cb) {
 1584              		.loc 1 95 13 view .LVU546
 1585 0030 0025     		movs	r5, #0
 1586              	.LVL181:
 1587              	.L105:
  94:lvgl/src/lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
 1588              		.loc 1 94 5 discriminator 2 view .LVU547
 1589 0032 2146     		mov	r1, r4
 1590 0034 0848     		ldr	r0, .L110
 1591 0036 FFF7FEFF 		bl	_lv_ll_get_next
 1592              	.LVL182:
 1593 003a 0446     		mov	r4, r0
 1594              	.LVL183:
 1595              	.L104:
  94:lvgl/src/lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
 1596              		.loc 1 94 5 discriminator 1 view .LVU548
 1597 003c 4CB1     		cbz	r4, .L106
  95:lvgl/src/lv_draw/lv_img_decoder.c ****         if(d->info_cb) {
 1598              		.loc 1 95 9 is_stmt 1 view .LVU549
 1599              	.LVL184:
  96:lvgl/src/lv_draw/lv_img_decoder.c ****             res = d->info_cb(d, src, header);
 1600              		.loc 1 96 9 view .LVU550
  96:lvgl/src/lv_draw/lv_img_decoder.c ****             res = d->info_cb(d, src, header);
 1601              		.loc 1 96 13 is_stmt 0 view .LVU551
 1602 003e 2368     		ldr	r3, [r4]
  96:lvgl/src/lv_draw/lv_img_decoder.c ****             res = d->info_cb(d, src, header);
 1603              		.loc 1 96 11 view .LVU552
 1604 0040 002B     		cmp	r3, #0
 1605 0042 F5D0     		beq	.L108
  97:lvgl/src/lv_draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
 1606              		.loc 1 97 13 is_stmt 1 view .LVU553
  97:lvgl/src/lv_draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
 1607              		.loc 1 97 19 is_stmt 0 view .LVU554
 1608 0044 3246     		mov	r2, r6
 1609 0046 3946     		mov	r1, r7
 1610 0048 2046     		mov	r0, r4
  97:lvgl/src/lv_draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
 1611              		.loc 1 97 19 view .LVU555
 1612 004a 9847     		blx	r3
 1613              	.LVL185:
ARM GAS  D:\Temp\ccmKsZee.s 			page 61


  97:lvgl/src/lv_draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
 1614              		.loc 1 97 19 view .LVU556
 1615 004c 0546     		mov	r5, r0
 1616              	.LVL186:
  98:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 1617              		.loc 1 98 13 is_stmt 1 view .LVU557
  98:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 1618              		.loc 1 98 15 is_stmt 0 view .LVU558
 1619 004e 0128     		cmp	r0, #1
 1620 0050 EFD1     		bne	.L105
 1621              	.LVL187:
 1622              	.L106:
 102:lvgl/src/lv_draw/lv_img_decoder.c **** }
 1623              		.loc 1 102 5 is_stmt 1 view .LVU559
 103:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1624              		.loc 1 103 1 is_stmt 0 view .LVU560
 1625 0052 2846     		mov	r0, r5
 1626 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1627              	.LVL188:
 1628              	.L111:
 103:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1629              		.loc 1 103 1 view .LVU561
 1630 0056 00BF     		.align	2
 1631              	.L110:
 1632 0058 00000000 		.word	_lv_img_defoder_ll
 1633              		.cfi_endproc
 1634              	.LFE168:
 1636              		.section	.text.lv_img_decoder_open,"ax",%progbits
 1637              		.align	1
 1638              		.global	lv_img_decoder_open
 1639              		.syntax unified
 1640              		.thumb
 1641              		.thumb_func
 1642              		.fpu fpv4-sp-d16
 1644              	lv_img_decoder_open:
 1645              	.LVL189:
 1646              	.LFB169:
 118:lvgl/src/lv_draw/lv_img_decoder.c ****     dsc->color     = color;
 1647              		.loc 1 118 1 is_stmt 1 view -0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 0
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
 118:lvgl/src/lv_draw/lv_img_decoder.c ****     dsc->color     = color;
 1651              		.loc 1 118 1 is_stmt 0 view .LVU563
 1652 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1653              	.LCFI15:
 1654              		.cfi_def_cfa_offset 24
 1655              		.cfi_offset 3, -24
 1656              		.cfi_offset 4, -20
 1657              		.cfi_offset 5, -16
 1658              		.cfi_offset 6, -12
 1659              		.cfi_offset 7, -8
 1660              		.cfi_offset 14, -4
 1661 0002 0546     		mov	r5, r0
 1662 0004 0F46     		mov	r7, r1
 119:lvgl/src/lv_draw/lv_img_decoder.c ****     dsc->src_type  = lv_img_src_get_type(src);
 1663              		.loc 1 119 5 is_stmt 1 view .LVU564
ARM GAS  D:\Temp\ccmKsZee.s 			page 62


 119:lvgl/src/lv_draw/lv_img_decoder.c ****     dsc->src_type  = lv_img_src_get_type(src);
 1664              		.loc 1 119 20 is_stmt 0 view .LVU565
 1665 0006 0281     		strh	r2, [r0, #8]	@ movhi
 120:lvgl/src/lv_draw/lv_img_decoder.c ****     dsc->user_data = NULL;
 1666              		.loc 1 120 5 is_stmt 1 view .LVU566
 120:lvgl/src/lv_draw/lv_img_decoder.c ****     dsc->user_data = NULL;
 1667              		.loc 1 120 22 is_stmt 0 view .LVU567
 1668 0008 0846     		mov	r0, r1
 1669              	.LVL190:
 120:lvgl/src/lv_draw/lv_img_decoder.c ****     dsc->user_data = NULL;
 1670              		.loc 1 120 22 view .LVU568
 1671 000a FFF7FEFF 		bl	lv_img_src_get_type
 1672              	.LVL191:
 120:lvgl/src/lv_draw/lv_img_decoder.c ****     dsc->user_data = NULL;
 1673              		.loc 1 120 20 view .LVU569
 1674 000e A872     		strb	r0, [r5, #10]
 121:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1675              		.loc 1 121 5 is_stmt 1 view .LVU570
 121:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1676              		.loc 1 121 20 is_stmt 0 view .LVU571
 1677 0010 0023     		movs	r3, #0
 1678 0012 EB61     		str	r3, [r5, #28]
 123:lvgl/src/lv_draw/lv_img_decoder.c ****         size_t fnlen = strlen(src);
 1679              		.loc 1 123 5 is_stmt 1 view .LVU572
 123:lvgl/src/lv_draw/lv_img_decoder.c ****         size_t fnlen = strlen(src);
 1680              		.loc 1 123 7 is_stmt 0 view .LVU573
 1681 0014 0128     		cmp	r0, #1
 1682 0016 06D0     		beq	.L120
 129:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1683              		.loc 1 129 9 is_stmt 1 view .LVU574
 129:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1684              		.loc 1 129 24 is_stmt 0 view .LVU575
 1685 0018 6F60     		str	r7, [r5, #4]
 1686              	.L114:
 132:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1687              		.loc 1 132 5 is_stmt 1 view .LVU576
 1688              	.LVL192:
 134:lvgl/src/lv_draw/lv_img_decoder.c ****     _LV_LL_READ(LV_GC_ROOT(_lv_img_defoder_ll), d) {
 1689              		.loc 1 134 5 view .LVU577
 135:lvgl/src/lv_draw/lv_img_decoder.c ****         /*Info an Open callbacks are required*/
 1690              		.loc 1 135 5 view .LVU578
 1691 001a 1948     		ldr	r0, .L121
 1692 001c FFF7FEFF 		bl	_lv_ll_get_head
 1693              	.LVL193:
 1694 0020 0446     		mov	r4, r0
 1695              	.LVL194:
 132:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1696              		.loc 1 132 14 is_stmt 0 view .LVU579
 1697 0022 0026     		movs	r6, #0
 135:lvgl/src/lv_draw/lv_img_decoder.c ****         /*Info an Open callbacks are required*/
 1698              		.loc 1 135 5 view .LVU580
 1699 0024 0FE0     		b	.L115
 1700              	.LVL195:
 1701              	.L120:
 1702              	.LBB20:
 124:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->src = lv_mem_alloc(fnlen + 1);
 1703              		.loc 1 124 9 is_stmt 1 view .LVU581
ARM GAS  D:\Temp\ccmKsZee.s 			page 63


 124:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->src = lv_mem_alloc(fnlen + 1);
 1704              		.loc 1 124 24 is_stmt 0 view .LVU582
 1705 0026 3846     		mov	r0, r7
 1706 0028 FFF7FEFF 		bl	strlen
 1707              	.LVL196:
 125:lvgl/src/lv_draw/lv_img_decoder.c ****         strcpy((char *)dsc->src, src);
 1708              		.loc 1 125 9 is_stmt 1 view .LVU583
 125:lvgl/src/lv_draw/lv_img_decoder.c ****         strcpy((char *)dsc->src, src);
 1709              		.loc 1 125 20 is_stmt 0 view .LVU584
 1710 002c 0130     		adds	r0, r0, #1
 1711              	.LVL197:
 125:lvgl/src/lv_draw/lv_img_decoder.c ****         strcpy((char *)dsc->src, src);
 1712              		.loc 1 125 20 view .LVU585
 1713 002e FFF7FEFF 		bl	lv_mem_alloc
 1714              	.LVL198:
 125:lvgl/src/lv_draw/lv_img_decoder.c ****         strcpy((char *)dsc->src, src);
 1715              		.loc 1 125 18 view .LVU586
 1716 0032 6860     		str	r0, [r5, #4]
 126:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1717              		.loc 1 126 9 is_stmt 1 view .LVU587
 1718 0034 3946     		mov	r1, r7
 1719 0036 FFF7FEFF 		bl	strcpy
 1720              	.LVL199:
 1721              	.LBE20:
 1722 003a EEE7     		b	.L114
 1723              	.LVL200:
 1724              	.L116:
 135:lvgl/src/lv_draw/lv_img_decoder.c ****         /*Info an Open callbacks are required*/
 1725              		.loc 1 135 5 is_stmt 0 discriminator 2 view .LVU588
 1726 003c 2146     		mov	r1, r4
 1727 003e 1048     		ldr	r0, .L121
 1728 0040 FFF7FEFF 		bl	_lv_ll_get_next
 1729              	.LVL201:
 1730 0044 0446     		mov	r4, r0
 1731              	.LVL202:
 1732              	.L115:
 135:lvgl/src/lv_draw/lv_img_decoder.c ****         /*Info an Open callbacks are required*/
 1733              		.loc 1 135 5 discriminator 1 view .LVU589
 1734 0046 C4B1     		cbz	r4, .L117
 137:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1735              		.loc 1 137 9 is_stmt 1 view .LVU590
 137:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1736              		.loc 1 137 13 is_stmt 0 view .LVU591
 1737 0048 2368     		ldr	r3, [r4]
 137:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1738              		.loc 1 137 11 view .LVU592
 1739 004a 002B     		cmp	r3, #0
 1740 004c F6D0     		beq	.L116
 137:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1741              		.loc 1 137 35 discriminator 2 view .LVU593
 1742 004e 6268     		ldr	r2, [r4, #4]
 137:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1743              		.loc 1 137 31 discriminator 2 view .LVU594
 1744 0050 002A     		cmp	r2, #0
 1745 0052 F3D0     		beq	.L116
 139:lvgl/src/lv_draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 1746              		.loc 1 139 9 is_stmt 1 view .LVU595
ARM GAS  D:\Temp\ccmKsZee.s 			page 64


 139:lvgl/src/lv_draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 1747              		.loc 1 139 15 is_stmt 0 view .LVU596
 1748 0054 05F10C02 		add	r2, r5, #12
 1749 0058 3946     		mov	r1, r7
 1750 005a 2046     		mov	r0, r4
 139:lvgl/src/lv_draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 1751              		.loc 1 139 15 view .LVU597
 1752 005c 9847     		blx	r3
 1753              	.LVL203:
 139:lvgl/src/lv_draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 1754              		.loc 1 139 15 view .LVU598
 1755 005e 0646     		mov	r6, r0
 1756              	.LVL204:
 140:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1757              		.loc 1 140 9 is_stmt 1 view .LVU599
 140:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1758              		.loc 1 140 11 is_stmt 0 view .LVU600
 1759 0060 0128     		cmp	r0, #1
 1760 0062 EBD1     		bne	.L116
 142:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->img_data  = NULL;
 1761              		.loc 1 142 9 is_stmt 1 view .LVU601
 142:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->img_data  = NULL;
 1762              		.loc 1 142 24 is_stmt 0 view .LVU602
 1763 0064 0023     		movs	r3, #0
 1764 0066 AB61     		str	r3, [r5, #24]
 143:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->decoder   = d;
 1765              		.loc 1 143 9 is_stmt 1 view .LVU603
 143:lvgl/src/lv_draw/lv_img_decoder.c ****         dsc->decoder   = d;
 1766              		.loc 1 143 24 is_stmt 0 view .LVU604
 1767 0068 2B61     		str	r3, [r5, #16]
 144:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1768              		.loc 1 144 9 is_stmt 1 view .LVU605
 144:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1769              		.loc 1 144 24 is_stmt 0 view .LVU606
 1770 006a 2C60     		str	r4, [r5]
 146:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1771              		.loc 1 146 9 is_stmt 1 view .LVU607
 146:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1772              		.loc 1 146 16 is_stmt 0 view .LVU608
 1773 006c 6368     		ldr	r3, [r4, #4]
 146:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1774              		.loc 1 146 15 view .LVU609
 1775 006e 2946     		mov	r1, r5
 1776 0070 2046     		mov	r0, r4
 1777              	.LVL205:
 146:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1778              		.loc 1 146 15 view .LVU610
 1779 0072 9847     		blx	r3
 1780              	.LVL206:
 1781 0074 0646     		mov	r6, r0
 1782              	.LVL207:
 149:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1783              		.loc 1 149 9 is_stmt 1 view .LVU611
 149:lvgl/src/lv_draw/lv_img_decoder.c ****     }
 1784              		.loc 1 149 11 is_stmt 0 view .LVU612
 1785 0076 0128     		cmp	r0, #1
 1786 0078 E0D1     		bne	.L116
ARM GAS  D:\Temp\ccmKsZee.s 			page 65


 1787              	.LVL208:
 1788              	.L117:
 152:lvgl/src/lv_draw/lv_img_decoder.c **** }
 1789              		.loc 1 152 5 is_stmt 1 view .LVU613
 153:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1790              		.loc 1 153 1 is_stmt 0 view .LVU614
 1791 007a 3046     		mov	r0, r6
 1792 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1793              	.LVL209:
 1794              	.L122:
 153:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1795              		.loc 1 153 1 view .LVU615
 1796 007e 00BF     		.align	2
 1797              	.L121:
 1798 0080 00000000 		.word	_lv_img_defoder_ll
 1799              		.cfi_endproc
 1800              	.LFE169:
 1802              		.section	.text.lv_img_decoder_read_line,"ax",%progbits
 1803              		.align	1
 1804              		.global	lv_img_decoder_read_line
 1805              		.syntax unified
 1806              		.thumb
 1807              		.thumb_func
 1808              		.fpu fpv4-sp-d16
 1810              	lv_img_decoder_read_line:
 1811              	.LVL210:
 1812              	.LFB170:
 165:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 1813              		.loc 1 165 1 is_stmt 1 view -0
 1814              		.cfi_startproc
 1815              		@ args = 4, pretend = 0, frame = 0
 1816              		@ frame_needed = 0, uses_anonymous_args = 0
 165:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 1817              		.loc 1 165 1 is_stmt 0 view .LVU617
 1818 0000 70B5     		push	{r4, r5, r6, lr}
 1819              	.LCFI16:
 1820              		.cfi_def_cfa_offset 16
 1821              		.cfi_offset 4, -16
 1822              		.cfi_offset 5, -12
 1823              		.cfi_offset 6, -8
 1824              		.cfi_offset 14, -4
 1825 0002 82B0     		sub	sp, sp, #8
 1826              	.LCFI17:
 1827              		.cfi_def_cfa_offset 24
 166:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->decoder->read_line_cb) res = dsc->decoder->read_line_cb(dsc->decoder, dsc, x, y, len, b
 1828              		.loc 1 166 5 is_stmt 1 view .LVU618
 1829              	.LVL211:
 167:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1830              		.loc 1 167 5 view .LVU619
 167:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1831              		.loc 1 167 11 is_stmt 0 view .LVU620
 1832 0004 0668     		ldr	r6, [r0]
 167:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1833              		.loc 1 167 20 view .LVU621
 1834 0006 B468     		ldr	r4, [r6, #8]
 167:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1835              		.loc 1 167 7 view .LVU622
ARM GAS  D:\Temp\ccmKsZee.s 			page 66


 1836 0008 54B1     		cbz	r4, .L125
 1837 000a 1D46     		mov	r5, r3
 1838 000c 1346     		mov	r3, r2
 1839              	.LVL212:
 167:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1840              		.loc 1 167 7 view .LVU623
 1841 000e 0A46     		mov	r2, r1
 1842              	.LVL213:
 167:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1843              		.loc 1 167 7 view .LVU624
 1844 0010 0146     		mov	r1, r0
 1845              	.LVL214:
 167:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1846              		.loc 1 167 36 is_stmt 1 discriminator 1 view .LVU625
 167:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1847              		.loc 1 167 42 is_stmt 0 discriminator 1 view .LVU626
 1848 0012 0698     		ldr	r0, [sp, #24]
 1849              	.LVL215:
 167:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1850              		.loc 1 167 42 discriminator 1 view .LVU627
 1851 0014 0190     		str	r0, [sp, #4]
 1852 0016 0095     		str	r5, [sp]
 1853 0018 3046     		mov	r0, r6
 1854 001a A047     		blx	r4
 1855              	.LVL216:
 1856              	.L124:
 169:lvgl/src/lv_draw/lv_img_decoder.c **** }
 1857              		.loc 1 169 5 is_stmt 1 view .LVU628
 170:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1858              		.loc 1 170 1 is_stmt 0 view .LVU629
 1859 001c 02B0     		add	sp, sp, #8
 1860              	.LCFI18:
 1861              		.cfi_remember_state
 1862              		.cfi_def_cfa_offset 16
 1863              		@ sp needed
 1864 001e 70BD     		pop	{r4, r5, r6, pc}
 1865              	.LVL217:
 1866              	.L125:
 1867              	.LCFI19:
 1868              		.cfi_restore_state
 166:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->decoder->read_line_cb) res = dsc->decoder->read_line_cb(dsc->decoder, dsc, x, y, len, b
 1869              		.loc 1 166 14 view .LVU630
 1870 0020 0020     		movs	r0, #0
 1871              	.LVL218:
 166:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->decoder->read_line_cb) res = dsc->decoder->read_line_cb(dsc->decoder, dsc, x, y, len, b
 1872              		.loc 1 166 14 view .LVU631
 1873 0022 FBE7     		b	.L124
 1874              		.cfi_endproc
 1875              	.LFE170:
 1877              		.section	.text.lv_img_decoder_close,"ax",%progbits
 1878              		.align	1
 1879              		.global	lv_img_decoder_close
 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
 1883              		.fpu fpv4-sp-d16
 1885              	lv_img_decoder_close:
ARM GAS  D:\Temp\ccmKsZee.s 			page 67


 1886              	.LVL219:
 1887              	.LFB171:
 177:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->decoder) {
 1888              		.loc 1 177 1 is_stmt 1 view -0
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 0, uses_anonymous_args = 0
 178:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->decoder->close_cb) dsc->decoder->close_cb(dsc->decoder, dsc);
 1892              		.loc 1 178 5 view .LVU633
 178:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->decoder->close_cb) dsc->decoder->close_cb(dsc->decoder, dsc);
 1893              		.loc 1 178 11 is_stmt 0 view .LVU634
 1894 0000 0368     		ldr	r3, [r0]
 178:lvgl/src/lv_draw/lv_img_decoder.c ****         if(dsc->decoder->close_cb) dsc->decoder->close_cb(dsc->decoder, dsc);
 1895              		.loc 1 178 7 view .LVU635
 1896 0002 83B1     		cbz	r3, .L131
 177:lvgl/src/lv_draw/lv_img_decoder.c ****     if(dsc->decoder) {
 1897              		.loc 1 177 1 view .LVU636
 1898 0004 10B5     		push	{r4, lr}
 1899              	.LCFI20:
 1900              		.cfi_def_cfa_offset 8
 1901              		.cfi_offset 4, -8
 1902              		.cfi_offset 14, -4
 1903 0006 0446     		mov	r4, r0
 179:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1904              		.loc 1 179 9 is_stmt 1 view .LVU637
 179:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1905              		.loc 1 179 24 is_stmt 0 view .LVU638
 1906 0008 DA68     		ldr	r2, [r3, #12]
 179:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1907              		.loc 1 179 11 view .LVU639
 1908 000a 12B1     		cbz	r2, .L129
 179:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1909              		.loc 1 179 36 is_stmt 1 discriminator 1 view .LVU640
 1910 000c 0146     		mov	r1, r0
 1911 000e 1846     		mov	r0, r3
 1912              	.LVL220:
 179:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1913              		.loc 1 179 36 is_stmt 0 discriminator 1 view .LVU641
 1914 0010 9047     		blx	r2
 1915              	.LVL221:
 1916              	.L129:
 181:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_mem_free(dsc->src);
 1917              		.loc 1 181 9 is_stmt 1 view .LVU642
 181:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_mem_free(dsc->src);
 1918              		.loc 1 181 15 is_stmt 0 view .LVU643
 1919 0012 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 181:lvgl/src/lv_draw/lv_img_decoder.c ****             lv_mem_free(dsc->src);
 1920              		.loc 1 181 11 view .LVU644
 1921 0014 012B     		cmp	r3, #1
 1922 0016 00D0     		beq	.L134
 1923              	.L127:
 186:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1924              		.loc 1 186 1 view .LVU645
 1925 0018 10BD     		pop	{r4, pc}
 1926              	.LVL222:
 1927              	.L134:
 182:lvgl/src/lv_draw/lv_img_decoder.c ****             dsc->src = NULL;
ARM GAS  D:\Temp\ccmKsZee.s 			page 68


 1928              		.loc 1 182 13 is_stmt 1 view .LVU646
 1929 001a 6068     		ldr	r0, [r4, #4]
 1930 001c FFF7FEFF 		bl	lv_mem_free
 1931              	.LVL223:
 183:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 1932              		.loc 1 183 13 view .LVU647
 183:lvgl/src/lv_draw/lv_img_decoder.c ****         }
 1933              		.loc 1 183 22 is_stmt 0 view .LVU648
 1934 0020 0023     		movs	r3, #0
 1935 0022 6360     		str	r3, [r4, #4]
 186:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1936              		.loc 1 186 1 view .LVU649
 1937 0024 F8E7     		b	.L127
 1938              	.LVL224:
 1939              	.L131:
 1940              	.LCFI21:
 1941              		.cfi_def_cfa_offset 0
 1942              		.cfi_restore 4
 1943              		.cfi_restore 14
 186:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1944              		.loc 1 186 1 view .LVU650
 1945 0026 7047     		bx	lr
 1946              		.cfi_endproc
 1947              	.LFE171:
 1949              		.section	.text.lv_img_decoder_create,"ax",%progbits
 1950              		.align	1
 1951              		.global	lv_img_decoder_create
 1952              		.syntax unified
 1953              		.thumb
 1954              		.thumb_func
 1955              		.fpu fpv4-sp-d16
 1957              	lv_img_decoder_create:
 1958              	.LFB172:
 193:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * decoder;
 1959              		.loc 1 193 1 is_stmt 1 view -0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 0
 1962              		@ frame_needed = 0, uses_anonymous_args = 0
 1963 0000 10B5     		push	{r4, lr}
 1964              	.LCFI22:
 1965              		.cfi_def_cfa_offset 8
 1966              		.cfi_offset 4, -8
 1967              		.cfi_offset 14, -4
 194:lvgl/src/lv_draw/lv_img_decoder.c ****     decoder = _lv_ll_ins_head(&LV_GC_ROOT(_lv_img_defoder_ll));
 1968              		.loc 1 194 5 view .LVU652
 195:lvgl/src/lv_draw/lv_img_decoder.c ****     LV_ASSERT_MEM(decoder);
 1969              		.loc 1 195 5 view .LVU653
 195:lvgl/src/lv_draw/lv_img_decoder.c ****     LV_ASSERT_MEM(decoder);
 1970              		.loc 1 195 15 is_stmt 0 view .LVU654
 1971 0002 0A48     		ldr	r0, .L141
 1972 0004 FFF7FEFF 		bl	_lv_ll_ins_head
 1973              	.LVL225:
 1974 0008 0446     		mov	r4, r0
 1975              	.LVL226:
 196:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 1976              		.loc 1 196 5 is_stmt 1 view .LVU655
 196:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
ARM GAS  D:\Temp\ccmKsZee.s 			page 69


 1977              		.loc 1 196 5 view .LVU656
 1978 000a FFF7FEFF 		bl	lv_debug_check_null
 1979              	.LVL227:
 196:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 1980              		.loc 1 196 5 is_stmt 0 view .LVU657
 1981 000e 30B1     		cbz	r0, .L140
 196:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 1982              		.loc 1 196 27 is_stmt 1 discriminator 2 view .LVU658
 197:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1983              		.loc 1 197 5 discriminator 2 view .LVU659
 197:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1984              		.loc 1 197 7 is_stmt 0 discriminator 2 view .LVU660
 1985 0010 1CB1     		cbz	r4, .L135
 199:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1986              		.loc 1 199 5 is_stmt 1 view .LVU661
 1987 0012 1021     		movs	r1, #16
 1988 0014 2046     		mov	r0, r4
 1989 0016 FFF7FEFF 		bl	_lv_memset_00
 1990              	.LVL228:
 201:lvgl/src/lv_draw/lv_img_decoder.c **** }
 1991              		.loc 1 201 5 view .LVU662
 1992              	.L135:
 202:lvgl/src/lv_draw/lv_img_decoder.c **** 
 1993              		.loc 1 202 1 is_stmt 0 view .LVU663
 1994 001a 2046     		mov	r0, r4
 1995 001c 10BD     		pop	{r4, pc}
 1996              	.LVL229:
 1997              	.L140:
 196:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 1998              		.loc 1 196 5 is_stmt 1 discriminator 1 view .LVU664
 196:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 1999              		.loc 1 196 5 discriminator 1 view .LVU665
 2000 001e 2246     		mov	r2, r4
 2001 0020 0023     		movs	r3, #0
 2002 0022 0348     		ldr	r0, .L141+4
 2003 0024 FFF7FEFF 		bl	lv_debug_log_error
 2004              	.LVL230:
 2005              	.L137:
 196:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 2006              		.loc 1 196 5 discriminator 1 view .LVU666
 196:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 2007              		.loc 1 196 5 discriminator 1 view .LVU667
 2008 0028 FEE7     		b	.L137
 2009              	.L142:
 2010 002a 00BF     		.align	2
 2011              	.L141:
 2012 002c 00000000 		.word	_lv_img_defoder_ll
 2013 0030 00000000 		.word	.LC2
 2014              		.cfi_endproc
 2015              	.LFE172:
 2017              		.section	.text.lv_img_decoder_delete,"ax",%progbits
 2018              		.align	1
 2019              		.global	lv_img_decoder_delete
 2020              		.syntax unified
 2021              		.thumb
 2022              		.thumb_func
 2023              		.fpu fpv4-sp-d16
ARM GAS  D:\Temp\ccmKsZee.s 			page 70


 2025              	lv_img_decoder_delete:
 2026              	.LVL231:
 2027              	.LFB173:
 209:lvgl/src/lv_draw/lv_img_decoder.c ****     _lv_ll_remove(&LV_GC_ROOT(_lv_img_defoder_ll), decoder);
 2028              		.loc 1 209 1 view -0
 2029              		.cfi_startproc
 2030              		@ args = 0, pretend = 0, frame = 0
 2031              		@ frame_needed = 0, uses_anonymous_args = 0
 209:lvgl/src/lv_draw/lv_img_decoder.c ****     _lv_ll_remove(&LV_GC_ROOT(_lv_img_defoder_ll), decoder);
 2032              		.loc 1 209 1 is_stmt 0 view .LVU669
 2033 0000 10B5     		push	{r4, lr}
 2034              	.LCFI23:
 2035              		.cfi_def_cfa_offset 8
 2036              		.cfi_offset 4, -8
 2037              		.cfi_offset 14, -4
 2038 0002 0446     		mov	r4, r0
 210:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_mem_free(decoder);
 2039              		.loc 1 210 5 is_stmt 1 view .LVU670
 2040 0004 0146     		mov	r1, r0
 2041 0006 0348     		ldr	r0, .L145
 2042              	.LVL232:
 210:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_mem_free(decoder);
 2043              		.loc 1 210 5 is_stmt 0 view .LVU671
 2044 0008 FFF7FEFF 		bl	_lv_ll_remove
 2045              	.LVL233:
 211:lvgl/src/lv_draw/lv_img_decoder.c **** }
 2046              		.loc 1 211 5 is_stmt 1 view .LVU672
 2047 000c 2046     		mov	r0, r4
 2048 000e FFF7FEFF 		bl	lv_mem_free
 2049              	.LVL234:
 212:lvgl/src/lv_draw/lv_img_decoder.c **** 
 2050              		.loc 1 212 1 is_stmt 0 view .LVU673
 2051 0012 10BD     		pop	{r4, pc}
 2052              	.LVL235:
 2053              	.L146:
 212:lvgl/src/lv_draw/lv_img_decoder.c **** 
 2054              		.loc 1 212 1 view .LVU674
 2055              		.align	2
 2056              	.L145:
 2057 0014 00000000 		.word	_lv_img_defoder_ll
 2058              		.cfi_endproc
 2059              	.LFE173:
 2061              		.section	.text.lv_img_decoder_set_info_cb,"ax",%progbits
 2062              		.align	1
 2063              		.global	lv_img_decoder_set_info_cb
 2064              		.syntax unified
 2065              		.thumb
 2066              		.thumb_func
 2067              		.fpu fpv4-sp-d16
 2069              	lv_img_decoder_set_info_cb:
 2070              	.LVL236:
 2071              	.LFB174:
 220:lvgl/src/lv_draw/lv_img_decoder.c ****     decoder->info_cb = info_cb;
 2072              		.loc 1 220 1 is_stmt 1 view -0
 2073              		.cfi_startproc
 2074              		@ args = 0, pretend = 0, frame = 0
 2075              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\Temp\ccmKsZee.s 			page 71


 2076              		@ link register save eliminated.
 221:lvgl/src/lv_draw/lv_img_decoder.c **** }
 2077              		.loc 1 221 5 view .LVU676
 221:lvgl/src/lv_draw/lv_img_decoder.c **** }
 2078              		.loc 1 221 22 is_stmt 0 view .LVU677
 2079 0000 0160     		str	r1, [r0]
 222:lvgl/src/lv_draw/lv_img_decoder.c **** 
 2080              		.loc 1 222 1 view .LVU678
 2081 0002 7047     		bx	lr
 2082              		.cfi_endproc
 2083              	.LFE174:
 2085              		.section	.text.lv_img_decoder_set_open_cb,"ax",%progbits
 2086              		.align	1
 2087              		.global	lv_img_decoder_set_open_cb
 2088              		.syntax unified
 2089              		.thumb
 2090              		.thumb_func
 2091              		.fpu fpv4-sp-d16
 2093              	lv_img_decoder_set_open_cb:
 2094              	.LVL237:
 2095              	.LFB175:
 230:lvgl/src/lv_draw/lv_img_decoder.c ****     decoder->open_cb = open_cb;
 2096              		.loc 1 230 1 is_stmt 1 view -0
 2097              		.cfi_startproc
 2098              		@ args = 0, pretend = 0, frame = 0
 2099              		@ frame_needed = 0, uses_anonymous_args = 0
 2100              		@ link register save eliminated.
 231:lvgl/src/lv_draw/lv_img_decoder.c **** }
 2101              		.loc 1 231 5 view .LVU680
 231:lvgl/src/lv_draw/lv_img_decoder.c **** }
 2102              		.loc 1 231 22 is_stmt 0 view .LVU681
 2103 0000 4160     		str	r1, [r0, #4]
 232:lvgl/src/lv_draw/lv_img_decoder.c **** 
 2104              		.loc 1 232 1 view .LVU682
 2105 0002 7047     		bx	lr
 2106              		.cfi_endproc
 2107              	.LFE175:
 2109              		.section	.text.lv_img_decoder_set_read_line_cb,"ax",%progbits
 2110              		.align	1
 2111              		.global	lv_img_decoder_set_read_line_cb
 2112              		.syntax unified
 2113              		.thumb
 2114              		.thumb_func
 2115              		.fpu fpv4-sp-d16
 2117              	lv_img_decoder_set_read_line_cb:
 2118              	.LVL238:
 2119              	.LFB176:
 240:lvgl/src/lv_draw/lv_img_decoder.c ****     decoder->read_line_cb = read_line_cb;
 2120              		.loc 1 240 1 is_stmt 1 view -0
 2121              		.cfi_startproc
 2122              		@ args = 0, pretend = 0, frame = 0
 2123              		@ frame_needed = 0, uses_anonymous_args = 0
 2124              		@ link register save eliminated.
 241:lvgl/src/lv_draw/lv_img_decoder.c **** }
 2125              		.loc 1 241 5 view .LVU684
 241:lvgl/src/lv_draw/lv_img_decoder.c **** }
 2126              		.loc 1 241 27 is_stmt 0 view .LVU685
ARM GAS  D:\Temp\ccmKsZee.s 			page 72


 2127 0000 8160     		str	r1, [r0, #8]
 242:lvgl/src/lv_draw/lv_img_decoder.c **** 
 2128              		.loc 1 242 1 view .LVU686
 2129 0002 7047     		bx	lr
 2130              		.cfi_endproc
 2131              	.LFE176:
 2133              		.section	.text.lv_img_decoder_set_close_cb,"ax",%progbits
 2134              		.align	1
 2135              		.global	lv_img_decoder_set_close_cb
 2136              		.syntax unified
 2137              		.thumb
 2138              		.thumb_func
 2139              		.fpu fpv4-sp-d16
 2141              	lv_img_decoder_set_close_cb:
 2142              	.LVL239:
 2143              	.LFB177:
 250:lvgl/src/lv_draw/lv_img_decoder.c ****     decoder->close_cb = close_cb;
 2144              		.loc 1 250 1 is_stmt 1 view -0
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 0
 2147              		@ frame_needed = 0, uses_anonymous_args = 0
 2148              		@ link register save eliminated.
 251:lvgl/src/lv_draw/lv_img_decoder.c **** }
 2149              		.loc 1 251 5 view .LVU688
 251:lvgl/src/lv_draw/lv_img_decoder.c **** }
 2150              		.loc 1 251 23 is_stmt 0 view .LVU689
 2151 0000 C160     		str	r1, [r0, #12]
 252:lvgl/src/lv_draw/lv_img_decoder.c **** 
 2152              		.loc 1 252 1 view .LVU690
 2153 0002 7047     		bx	lr
 2154              		.cfi_endproc
 2155              	.LFE177:
 2157              		.section	.text._lv_img_decoder_init,"ax",%progbits
 2158              		.align	1
 2159              		.global	_lv_img_decoder_init
 2160              		.syntax unified
 2161              		.thumb
 2162              		.thumb_func
 2163              		.fpu fpv4-sp-d16
 2165              	_lv_img_decoder_init:
 2166              	.LFB167:
  59:lvgl/src/lv_draw/lv_img_decoder.c ****     _lv_ll_init(&LV_GC_ROOT(_lv_img_defoder_ll), sizeof(lv_img_decoder_t));
 2167              		.loc 1 59 1 is_stmt 1 view -0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 0
 2170              		@ frame_needed = 0, uses_anonymous_args = 0
 2171 0000 10B5     		push	{r4, lr}
 2172              	.LCFI24:
 2173              		.cfi_def_cfa_offset 8
 2174              		.cfi_offset 4, -8
 2175              		.cfi_offset 14, -4
  60:lvgl/src/lv_draw/lv_img_decoder.c **** 
 2176              		.loc 1 60 5 view .LVU692
 2177 0002 1021     		movs	r1, #16
 2178 0004 1048     		ldr	r0, .L157
 2179 0006 FFF7FEFF 		bl	_lv_ll_init
 2180              	.LVL240:
ARM GAS  D:\Temp\ccmKsZee.s 			page 73


  62:lvgl/src/lv_draw/lv_img_decoder.c **** 
 2181              		.loc 1 62 5 view .LVU693
  65:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) {
 2182              		.loc 1 65 5 view .LVU694
  65:lvgl/src/lv_draw/lv_img_decoder.c ****     if(decoder == NULL) {
 2183              		.loc 1 65 15 is_stmt 0 view .LVU695
 2184 000a FFF7FEFF 		bl	lv_img_decoder_create
 2185              	.LVL241:
  66:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("lv_img_decoder_init: out of memory");
 2186              		.loc 1 66 5 is_stmt 1 view .LVU696
  66:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("lv_img_decoder_init: out of memory");
 2187              		.loc 1 66 7 is_stmt 0 view .LVU697
 2188 000e 0446     		mov	r4, r0
 2189 0010 78B1     		cbz	r0, .L156
  72:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_open_cb(decoder, lv_img_decoder_built_in_open);
 2190              		.loc 1 72 5 is_stmt 1 view .LVU698
 2191 0012 0E49     		ldr	r1, .L157+4
 2192 0014 FFF7FEFF 		bl	lv_img_decoder_set_info_cb
 2193              	.LVL242:
  73:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_read_line_cb(decoder, lv_img_decoder_built_in_read_line);
 2194              		.loc 1 73 5 view .LVU699
 2195 0018 0D49     		ldr	r1, .L157+8
 2196 001a 2046     		mov	r0, r4
 2197 001c FFF7FEFF 		bl	lv_img_decoder_set_open_cb
 2198              	.LVL243:
  74:lvgl/src/lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_close_cb(decoder, lv_img_decoder_built_in_close);
 2199              		.loc 1 74 5 view .LVU700
 2200 0020 0C49     		ldr	r1, .L157+12
 2201 0022 2046     		mov	r0, r4
 2202 0024 FFF7FEFF 		bl	lv_img_decoder_set_read_line_cb
 2203              	.LVL244:
  75:lvgl/src/lv_draw/lv_img_decoder.c **** }
 2204              		.loc 1 75 5 view .LVU701
 2205 0028 0B49     		ldr	r1, .L157+16
 2206 002a 2046     		mov	r0, r4
 2207 002c FFF7FEFF 		bl	lv_img_decoder_set_close_cb
 2208              	.LVL245:
 2209              	.L151:
  76:lvgl/src/lv_draw/lv_img_decoder.c **** 
 2210              		.loc 1 76 1 is_stmt 0 view .LVU702
 2211 0030 10BD     		pop	{r4, pc}
 2212              	.LVL246:
 2213              	.L156:
  67:lvgl/src/lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(decoder);
 2214              		.loc 1 67 58 is_stmt 1 view .LVU703
  68:lvgl/src/lv_draw/lv_img_decoder.c ****         return;
 2215              		.loc 1 68 9 view .LVU704
  68:lvgl/src/lv_draw/lv_img_decoder.c ****         return;
 2216              		.loc 1 68 9 view .LVU705
 2217 0032 FFF7FEFF 		bl	lv_debug_check_null
 2218              	.LVL247:
  68:lvgl/src/lv_draw/lv_img_decoder.c ****         return;
 2219              		.loc 1 68 9 is_stmt 0 view .LVU706
 2220 0036 0028     		cmp	r0, #0
 2221 0038 FAD1     		bne	.L151
  68:lvgl/src/lv_draw/lv_img_decoder.c ****         return;
 2222              		.loc 1 68 9 is_stmt 1 discriminator 1 view .LVU707
ARM GAS  D:\Temp\ccmKsZee.s 			page 74


  68:lvgl/src/lv_draw/lv_img_decoder.c ****         return;
 2223              		.loc 1 68 9 discriminator 1 view .LVU708
 2224 003a 2246     		mov	r2, r4
 2225 003c 0023     		movs	r3, #0
 2226 003e 0748     		ldr	r0, .L157+20
 2227 0040 FFF7FEFF 		bl	lv_debug_log_error
 2228              	.LVL248:
 2229              	.L154:
  68:lvgl/src/lv_draw/lv_img_decoder.c ****         return;
 2230              		.loc 1 68 9 discriminator 1 view .LVU709
  68:lvgl/src/lv_draw/lv_img_decoder.c ****         return;
 2231              		.loc 1 68 9 discriminator 1 view .LVU710
 2232 0044 FEE7     		b	.L154
 2233              	.L158:
 2234 0046 00BF     		.align	2
 2235              	.L157:
 2236 0048 00000000 		.word	_lv_img_defoder_ll
 2237 004c 00000000 		.word	lv_img_decoder_built_in_info
 2238 0050 00000000 		.word	lv_img_decoder_built_in_open
 2239 0054 00000000 		.word	lv_img_decoder_built_in_read_line
 2240 0058 00000000 		.word	lv_img_decoder_built_in_close
 2241 005c 00000000 		.word	.LC2
 2242              		.cfi_endproc
 2243              	.LFE167:
 2245              		.section	.rodata
 2246              		.align	2
 2247              		.set	.LANCHOR0,. + 0
 2248              	.LC0:
 2249 0000 00       		.byte	0
 2250 0001 55       		.byte	85
 2251 0002 AA       		.byte	-86
 2252 0003 FF       		.byte	-1
 2253              	.LC1:
 2254 0004 00       		.byte	0
 2255 0005 11       		.byte	17
 2256 0006 22       		.byte	34
 2257 0007 33       		.byte	51
 2258 0008 44       		.byte	68
 2259 0009 55       		.byte	85
 2260 000a 66       		.byte	102
 2261 000b 77       		.byte	119
 2262 000c 88       		.byte	-120
 2263 000d 99       		.byte	-103
 2264 000e AA       		.byte	-86
 2265 000f BB       		.byte	-69
 2266 0010 CC       		.byte	-52
 2267 0011 DD       		.byte	-35
 2268 0012 EE       		.byte	-18
 2269 0013 FF       		.byte	-1
 2270              		.section	.rodata.lv_img_decoder_built_in_open.str1.4,"aMS",%progbits,1
 2271              		.align	2
 2272              	.LC2:
 2273 0000 4F757420 		.ascii	"Out of memory\000"
 2273      6F66206D 
 2273      656D6F72 
 2273      7900
 2274              		.text
ARM GAS  D:\Temp\ccmKsZee.s 			page 75


 2275              	.Letext0:
 2276              		.file 3 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 2277              		.file 4 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 2278              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2279              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2280              		.file 7 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-none
 2281              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2282              		.file 9 "lvgl/lv_conf.h"
 2283              		.file 10 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2284              		.file 11 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2285              		.file 12 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2286              		.file 13 "lvgl/src/lv_draw/../lv_misc/lv_types.h"
 2287              		.file 14 "lvgl/src/lv_draw/../lv_misc/lv_mem.h"
 2288              		.file 15 "lvgl/src/lv_draw/lv_img_buf.h"
 2289              		.file 16 "lvgl/src/lv_draw/../lv_core/../lv_font/lv_font.h"
 2290              		.file 17 "lvgl/src/lv_draw/../lv_core/../lv_misc/lv_anim.h"
 2291              		.file 18 "lvgl/src/lv_draw/../lv_core/../lv_draw/lv_draw_mask.h"
 2292              		.file 19 "lvgl/src/lv_draw/lv_img_decoder.h"
 2293              		.file 20 "lvgl/src/lv_draw/../lv_misc/lv_ll.h"
 2294              		.file 21 "lvgl/src/lv_draw/../lv_misc/lv_task.h"
 2295              		.file 22 "lvgl/src/lv_draw/../lv_misc/../lv_draw/lv_img_cache.h"
 2296              		.file 23 "lvgl/src/lv_draw/../lv_misc/lv_gc.h"
 2297              		.file 24 "lvgl/src/lv_draw/../lv_draw/lv_draw_img.h"
 2298              		.file 25 "lvgl/src/lv_draw/../lv_core/../lv_misc/lv_debug.h"
 2299              		.file 26 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
ARM GAS  D:\Temp\ccmKsZee.s 			page 76


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_img_decoder.c
  D:\Temp\ccmKsZee.s:18     .text.lv_img_decoder_built_in_line_true_color:0000000000000000 $t
  D:\Temp\ccmKsZee.s:25     .text.lv_img_decoder_built_in_line_true_color:0000000000000000 lv_img_decoder_built_in_line_true_color
  D:\Temp\ccmKsZee.s:50     .text.lv_img_decoder_built_in_info:0000000000000000 $t
  D:\Temp\ccmKsZee.s:57     .text.lv_img_decoder_built_in_info:0000000000000000 lv_img_decoder_built_in_info
  D:\Temp\ccmKsZee.s:175    .text.lv_img_decoder_built_in_close:0000000000000000 $t
  D:\Temp\ccmKsZee.s:182    .text.lv_img_decoder_built_in_close:0000000000000000 lv_img_decoder_built_in_close
  D:\Temp\ccmKsZee.s:242    .text.lv_img_decoder_built_in_open:0000000000000000 $t
  D:\Temp\ccmKsZee.s:249    .text.lv_img_decoder_built_in_open:0000000000000000 lv_img_decoder_built_in_open
  D:\Temp\ccmKsZee.s:647    .text.lv_img_decoder_built_in_open:0000000000000148 $d
  D:\Temp\ccmKsZee.s:653    .text.lv_img_decoder_built_in_line_alpha:0000000000000000 $t
  D:\Temp\ccmKsZee.s:659    .text.lv_img_decoder_built_in_line_alpha:0000000000000000 lv_img_decoder_built_in_line_alpha
  D:\Temp\ccmKsZee.s:775    .text.lv_img_decoder_built_in_line_alpha:0000000000000072 $d
  D:\Temp\ccmKsZee.s:779    .text.lv_img_decoder_built_in_line_alpha:0000000000000076 $t
  D:\Temp\ccmKsZee.s:1051   .text.lv_img_decoder_built_in_line_alpha:0000000000000170 $d
  D:\Temp\ccmKsZee.s:1056   .text.lv_img_decoder_built_in_line_indexed:0000000000000000 $t
  D:\Temp\ccmKsZee.s:1062   .text.lv_img_decoder_built_in_line_indexed:0000000000000000 lv_img_decoder_built_in_line_indexed
  D:\Temp\ccmKsZee.s:1117   .text.lv_img_decoder_built_in_line_indexed:000000000000003c $d
  D:\Temp\ccmKsZee.s:1121   .text.lv_img_decoder_built_in_line_indexed:0000000000000040 $t
  D:\Temp\ccmKsZee.s:1398   .text.lv_img_decoder_built_in_read_line:0000000000000000 $t
  D:\Temp\ccmKsZee.s:1405   .text.lv_img_decoder_built_in_read_line:0000000000000000 lv_img_decoder_built_in_read_line
  D:\Temp\ccmKsZee.s:1522   .text.lv_img_decoder_get_info:0000000000000000 $t
  D:\Temp\ccmKsZee.s:1529   .text.lv_img_decoder_get_info:0000000000000000 lv_img_decoder_get_info
  D:\Temp\ccmKsZee.s:1632   .text.lv_img_decoder_get_info:0000000000000058 $d
  D:\Temp\ccmKsZee.s:1637   .text.lv_img_decoder_open:0000000000000000 $t
  D:\Temp\ccmKsZee.s:1644   .text.lv_img_decoder_open:0000000000000000 lv_img_decoder_open
  D:\Temp\ccmKsZee.s:1798   .text.lv_img_decoder_open:0000000000000080 $d
  D:\Temp\ccmKsZee.s:1803   .text.lv_img_decoder_read_line:0000000000000000 $t
  D:\Temp\ccmKsZee.s:1810   .text.lv_img_decoder_read_line:0000000000000000 lv_img_decoder_read_line
  D:\Temp\ccmKsZee.s:1878   .text.lv_img_decoder_close:0000000000000000 $t
  D:\Temp\ccmKsZee.s:1885   .text.lv_img_decoder_close:0000000000000000 lv_img_decoder_close
  D:\Temp\ccmKsZee.s:1950   .text.lv_img_decoder_create:0000000000000000 $t
  D:\Temp\ccmKsZee.s:1957   .text.lv_img_decoder_create:0000000000000000 lv_img_decoder_create
  D:\Temp\ccmKsZee.s:2012   .text.lv_img_decoder_create:000000000000002c $d
  D:\Temp\ccmKsZee.s:2018   .text.lv_img_decoder_delete:0000000000000000 $t
  D:\Temp\ccmKsZee.s:2025   .text.lv_img_decoder_delete:0000000000000000 lv_img_decoder_delete
  D:\Temp\ccmKsZee.s:2057   .text.lv_img_decoder_delete:0000000000000014 $d
  D:\Temp\ccmKsZee.s:2062   .text.lv_img_decoder_set_info_cb:0000000000000000 $t
  D:\Temp\ccmKsZee.s:2069   .text.lv_img_decoder_set_info_cb:0000000000000000 lv_img_decoder_set_info_cb
  D:\Temp\ccmKsZee.s:2086   .text.lv_img_decoder_set_open_cb:0000000000000000 $t
  D:\Temp\ccmKsZee.s:2093   .text.lv_img_decoder_set_open_cb:0000000000000000 lv_img_decoder_set_open_cb
  D:\Temp\ccmKsZee.s:2110   .text.lv_img_decoder_set_read_line_cb:0000000000000000 $t
  D:\Temp\ccmKsZee.s:2117   .text.lv_img_decoder_set_read_line_cb:0000000000000000 lv_img_decoder_set_read_line_cb
  D:\Temp\ccmKsZee.s:2134   .text.lv_img_decoder_set_close_cb:0000000000000000 $t
  D:\Temp\ccmKsZee.s:2141   .text.lv_img_decoder_set_close_cb:0000000000000000 lv_img_decoder_set_close_cb
  D:\Temp\ccmKsZee.s:2158   .text._lv_img_decoder_init:0000000000000000 $t
  D:\Temp\ccmKsZee.s:2165   .text._lv_img_decoder_init:0000000000000000 _lv_img_decoder_init
  D:\Temp\ccmKsZee.s:2236   .text._lv_img_decoder_init:0000000000000048 $d
  D:\Temp\ccmKsZee.s:2246   .rodata:0000000000000000 $d
  D:\Temp\ccmKsZee.s:2271   .rodata.lv_img_decoder_built_in_open.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
lv_img_src_get_type
lv_mem_free
lv_img_cf_get_px_size
lv_mem_alloc
ARM GAS  D:\Temp\ccmKsZee.s 			page 77


lv_debug_check_null
lv_debug_log_error
_lv_memset_00
_lv_ll_get_head
_lv_ll_get_next
_lv_img_defoder_ll
strlen
strcpy
_lv_ll_ins_head
_lv_ll_remove
_lv_ll_init
