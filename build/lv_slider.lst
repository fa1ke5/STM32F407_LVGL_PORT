ARM GAS  D:\Temp\ccqmjWev.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_slider.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_slider_get_style,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	lv_slider_get_style:
  26              	.LVL0:
  27              	.LFB484:
  28              		.file 1 "lvgl/src/lv_widgets/lv_slider.c"
   1:lvgl/src/lv_widgets/lv_slider.c **** 
   2:lvgl/src/lv_widgets/lv_slider.c **** /**
   3:lvgl/src/lv_widgets/lv_slider.c ****  * @file lv_slider.c
   4:lvgl/src/lv_widgets/lv_slider.c ****  *
   5:lvgl/src/lv_widgets/lv_slider.c ****  */
   6:lvgl/src/lv_widgets/lv_slider.c **** 
   7:lvgl/src/lv_widgets/lv_slider.c **** /*********************
   8:lvgl/src/lv_widgets/lv_slider.c ****  *      INCLUDES
   9:lvgl/src/lv_widgets/lv_slider.c ****  *********************/
  10:lvgl/src/lv_widgets/lv_slider.c **** #include "lv_slider.h"
  11:lvgl/src/lv_widgets/lv_slider.c **** #if LV_USE_SLIDER != 0
  12:lvgl/src/lv_widgets/lv_slider.c **** 
  13:lvgl/src/lv_widgets/lv_slider.c **** #include "../lv_misc/lv_debug.h"
  14:lvgl/src/lv_widgets/lv_slider.c **** #include "../lv_core/lv_group.h"
  15:lvgl/src/lv_widgets/lv_slider.c **** #include "../lv_core/lv_indev.h"
  16:lvgl/src/lv_widgets/lv_slider.c **** #include "../lv_draw/lv_draw.h"
  17:lvgl/src/lv_widgets/lv_slider.c **** #include "../lv_themes/lv_theme.h"
  18:lvgl/src/lv_widgets/lv_slider.c **** #include "../lv_misc/lv_math.h"
  19:lvgl/src/lv_widgets/lv_slider.c **** #include "lv_img.h"
  20:lvgl/src/lv_widgets/lv_slider.c **** 
  21:lvgl/src/lv_widgets/lv_slider.c **** /*********************
  22:lvgl/src/lv_widgets/lv_slider.c ****  *      DEFINES
  23:lvgl/src/lv_widgets/lv_slider.c ****  *********************/
  24:lvgl/src/lv_widgets/lv_slider.c **** #define LV_OBJX_NAME "lv_slider"
  25:lvgl/src/lv_widgets/lv_slider.c **** 
  26:lvgl/src/lv_widgets/lv_slider.c **** #define LV_SLIDER_KNOB_COORD(hor, is_rtl, area) (hor ? (is_rtl ? area.x1 : area.x2) : (is_rtl ? are
  27:lvgl/src/lv_widgets/lv_slider.c **** 
  28:lvgl/src/lv_widgets/lv_slider.c **** /**********************
  29:lvgl/src/lv_widgets/lv_slider.c ****  *      TYPEDEFS
  30:lvgl/src/lv_widgets/lv_slider.c ****  **********************/
ARM GAS  D:\Temp\ccqmjWev.s 			page 2


  31:lvgl/src/lv_widgets/lv_slider.c **** 
  32:lvgl/src/lv_widgets/lv_slider.c **** /**********************
  33:lvgl/src/lv_widgets/lv_slider.c ****  *  STATIC PROTOTYPES
  34:lvgl/src/lv_widgets/lv_slider.c ****  **********************/
  35:lvgl/src/lv_widgets/lv_slider.c **** static lv_design_res_t lv_slider_design(lv_obj_t * slider, const lv_area_t * clip_area, lv_design_m
  36:lvgl/src/lv_widgets/lv_slider.c **** static lv_res_t lv_slider_signal(lv_obj_t * slider, lv_signal_t sign, void * param);
  37:lvgl/src/lv_widgets/lv_slider.c **** static lv_style_list_t * lv_slider_get_style(lv_obj_t * slider, uint8_t part);
  38:lvgl/src/lv_widgets/lv_slider.c **** static void lv_slider_position_knob(lv_obj_t * slider, lv_area_t * knob_area, lv_coord_t knob_size,
  39:lvgl/src/lv_widgets/lv_slider.c **** static void lv_slider_draw_knob(lv_obj_t * slider, const lv_area_t * knob_area, const lv_area_t * c
  40:lvgl/src/lv_widgets/lv_slider.c **** 
  41:lvgl/src/lv_widgets/lv_slider.c **** /**********************
  42:lvgl/src/lv_widgets/lv_slider.c ****  *  STATIC VARIABLES
  43:lvgl/src/lv_widgets/lv_slider.c ****  **********************/
  44:lvgl/src/lv_widgets/lv_slider.c **** static lv_design_cb_t ancestor_design_f;
  45:lvgl/src/lv_widgets/lv_slider.c **** static lv_signal_cb_t ancestor_signal;
  46:lvgl/src/lv_widgets/lv_slider.c **** 
  47:lvgl/src/lv_widgets/lv_slider.c **** /**********************
  48:lvgl/src/lv_widgets/lv_slider.c ****  *      MACROS
  49:lvgl/src/lv_widgets/lv_slider.c ****  **********************/
  50:lvgl/src/lv_widgets/lv_slider.c **** 
  51:lvgl/src/lv_widgets/lv_slider.c **** /**********************
  52:lvgl/src/lv_widgets/lv_slider.c ****  *   GLOBAL FUNCTIONS
  53:lvgl/src/lv_widgets/lv_slider.c ****  **********************/
  54:lvgl/src/lv_widgets/lv_slider.c **** 
  55:lvgl/src/lv_widgets/lv_slider.c **** /**
  56:lvgl/src/lv_widgets/lv_slider.c ****  * Create a slider objects
  57:lvgl/src/lv_widgets/lv_slider.c ****  * @param par pointer to an object, it will be the parent of the new slider
  58:lvgl/src/lv_widgets/lv_slider.c ****  * @param copy pointer to a slider object, if not NULL then the new object will be copied from it
  59:lvgl/src/lv_widgets/lv_slider.c ****  * @return pointer to the created slider
  60:lvgl/src/lv_widgets/lv_slider.c ****  */
  61:lvgl/src/lv_widgets/lv_slider.c **** lv_obj_t * lv_slider_create(lv_obj_t * par, const lv_obj_t * copy)
  62:lvgl/src/lv_widgets/lv_slider.c **** {
  63:lvgl/src/lv_widgets/lv_slider.c ****     LV_LOG_TRACE("slider create started");
  64:lvgl/src/lv_widgets/lv_slider.c **** 
  65:lvgl/src/lv_widgets/lv_slider.c ****     /*Create the ancestor slider*/
  66:lvgl/src/lv_widgets/lv_slider.c ****     lv_obj_t * slider = lv_bar_create(par, copy);
  67:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_MEM(slider);
  68:lvgl/src/lv_widgets/lv_slider.c ****     if(slider == NULL) return NULL;
  69:lvgl/src/lv_widgets/lv_slider.c **** 
  70:lvgl/src/lv_widgets/lv_slider.c ****     if(ancestor_design_f == NULL) ancestor_design_f = lv_obj_get_design_cb(slider);
  71:lvgl/src/lv_widgets/lv_slider.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(slider);
  72:lvgl/src/lv_widgets/lv_slider.c **** 
  73:lvgl/src/lv_widgets/lv_slider.c ****     /*Allocate the slider type specific extended data*/
  74:lvgl/src/lv_widgets/lv_slider.c ****     lv_slider_ext_t * ext = lv_obj_allocate_ext_attr(slider, sizeof(lv_slider_ext_t));
  75:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_MEM(ext);
  76:lvgl/src/lv_widgets/lv_slider.c ****     if(ext == NULL) {
  77:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_del(slider);
  78:lvgl/src/lv_widgets/lv_slider.c ****         return NULL;
  79:lvgl/src/lv_widgets/lv_slider.c ****     }
  80:lvgl/src/lv_widgets/lv_slider.c **** 
  81:lvgl/src/lv_widgets/lv_slider.c ****     /*Initialize the allocated 'ext' */
  82:lvgl/src/lv_widgets/lv_slider.c ****     ext->value_to_set = NULL;
  83:lvgl/src/lv_widgets/lv_slider.c ****     ext->dragging = 0;
  84:lvgl/src/lv_widgets/lv_slider.c ****     ext->left_knob_focus = 0;
  85:lvgl/src/lv_widgets/lv_slider.c ****     lv_style_list_init(&ext->style_knob);
  86:lvgl/src/lv_widgets/lv_slider.c **** 
  87:lvgl/src/lv_widgets/lv_slider.c ****     /*The signal and design functions are not copied so set them here*/
ARM GAS  D:\Temp\ccqmjWev.s 			page 3


  88:lvgl/src/lv_widgets/lv_slider.c ****     lv_obj_set_signal_cb(slider, lv_slider_signal);
  89:lvgl/src/lv_widgets/lv_slider.c ****     lv_obj_set_design_cb(slider, lv_slider_design);
  90:lvgl/src/lv_widgets/lv_slider.c **** 
  91:lvgl/src/lv_widgets/lv_slider.c ****     /*Init the new slider slider*/
  92:lvgl/src/lv_widgets/lv_slider.c ****     if(copy == NULL) {
  93:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_set_click(slider, true);
  94:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_add_protect(slider, LV_PROTECT_PRESS_LOST);
  95:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_set_ext_click_area(slider, 0, 0, LV_DPI / 10, LV_DPI / 10);
  96:lvgl/src/lv_widgets/lv_slider.c **** 
  97:lvgl/src/lv_widgets/lv_slider.c ****         lv_theme_apply(slider, LV_THEME_SLIDER);
  98:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_set_height(slider, LV_DPI / 15);
  99:lvgl/src/lv_widgets/lv_slider.c ****     }
 100:lvgl/src/lv_widgets/lv_slider.c ****     /*Copy an existing slider*/
 101:lvgl/src/lv_widgets/lv_slider.c ****     else {
 102:lvgl/src/lv_widgets/lv_slider.c ****         lv_slider_ext_t * copy_ext = lv_obj_get_ext_attr(copy);
 103:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_list_copy(&ext->style_knob, &copy_ext->style_knob);
 104:lvgl/src/lv_widgets/lv_slider.c ****         lv_area_copy(&ext->left_knob_area, &copy_ext->left_knob_area);
 105:lvgl/src/lv_widgets/lv_slider.c ****         lv_area_copy(&ext->right_knob_area, &copy_ext->right_knob_area);
 106:lvgl/src/lv_widgets/lv_slider.c **** 
 107:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_refresh_style(slider, LV_OBJ_PART_ALL, LV_STYLE_PROP_ALL);
 108:lvgl/src/lv_widgets/lv_slider.c ****     }
 109:lvgl/src/lv_widgets/lv_slider.c **** 
 110:lvgl/src/lv_widgets/lv_slider.c ****     LV_LOG_INFO("slider created");
 111:lvgl/src/lv_widgets/lv_slider.c **** 
 112:lvgl/src/lv_widgets/lv_slider.c ****     return slider;
 113:lvgl/src/lv_widgets/lv_slider.c **** }
 114:lvgl/src/lv_widgets/lv_slider.c **** 
 115:lvgl/src/lv_widgets/lv_slider.c **** /*=====================
 116:lvgl/src/lv_widgets/lv_slider.c ****  * Setter functions
 117:lvgl/src/lv_widgets/lv_slider.c ****  *====================*/
 118:lvgl/src/lv_widgets/lv_slider.c **** 
 119:lvgl/src/lv_widgets/lv_slider.c **** /*=====================
 120:lvgl/src/lv_widgets/lv_slider.c ****  * Getter functions
 121:lvgl/src/lv_widgets/lv_slider.c ****  *====================*/
 122:lvgl/src/lv_widgets/lv_slider.c **** 
 123:lvgl/src/lv_widgets/lv_slider.c **** /**
 124:lvgl/src/lv_widgets/lv_slider.c ****  * Get the value of a slider
 125:lvgl/src/lv_widgets/lv_slider.c ****  * @param slider pointer to a slider object
 126:lvgl/src/lv_widgets/lv_slider.c ****  * @return the value of the slider
 127:lvgl/src/lv_widgets/lv_slider.c ****  */
 128:lvgl/src/lv_widgets/lv_slider.c **** int16_t lv_slider_get_value(const lv_obj_t * slider)
 129:lvgl/src/lv_widgets/lv_slider.c **** {
 130:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_OBJ(slider, LV_OBJX_NAME);
 131:lvgl/src/lv_widgets/lv_slider.c ****     return lv_bar_get_value(slider);
 132:lvgl/src/lv_widgets/lv_slider.c **** }
 133:lvgl/src/lv_widgets/lv_slider.c **** 
 134:lvgl/src/lv_widgets/lv_slider.c **** /**
 135:lvgl/src/lv_widgets/lv_slider.c ****  * Give the slider is being dragged or not
 136:lvgl/src/lv_widgets/lv_slider.c ****  * @param slider pointer to a slider object
 137:lvgl/src/lv_widgets/lv_slider.c ****  * @return true: drag in progress false: not dragged
 138:lvgl/src/lv_widgets/lv_slider.c ****  */
 139:lvgl/src/lv_widgets/lv_slider.c **** bool lv_slider_is_dragged(const lv_obj_t * slider)
 140:lvgl/src/lv_widgets/lv_slider.c **** {
 141:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_OBJ(slider, LV_OBJX_NAME);
 142:lvgl/src/lv_widgets/lv_slider.c **** 
 143:lvgl/src/lv_widgets/lv_slider.c ****     lv_slider_ext_t * ext = lv_obj_get_ext_attr(slider);
 144:lvgl/src/lv_widgets/lv_slider.c ****     return ext->dragging ? true : false;
ARM GAS  D:\Temp\ccqmjWev.s 			page 4


 145:lvgl/src/lv_widgets/lv_slider.c **** }
 146:lvgl/src/lv_widgets/lv_slider.c **** 
 147:lvgl/src/lv_widgets/lv_slider.c **** /**********************
 148:lvgl/src/lv_widgets/lv_slider.c ****  *   STATIC FUNCTIONS
 149:lvgl/src/lv_widgets/lv_slider.c ****  **********************/
 150:lvgl/src/lv_widgets/lv_slider.c **** 
 151:lvgl/src/lv_widgets/lv_slider.c **** /**
 152:lvgl/src/lv_widgets/lv_slider.c ****  * Handle the drawing related tasks of the sliders
 153:lvgl/src/lv_widgets/lv_slider.c ****  * @param slider pointer to an object
 154:lvgl/src/lv_widgets/lv_slider.c ****  * @param clip_area the object will be drawn only in this area
 155:lvgl/src/lv_widgets/lv_slider.c ****  * @param mode LV_DESIGN_COVER_CHK: only check if the object fully covers the 'mask_p' area
 156:lvgl/src/lv_widgets/lv_slider.c ****  *                                  (return 'true' if yes)
 157:lvgl/src/lv_widgets/lv_slider.c ****  *             LV_DESIGN_DRAW: draw the object (always return 'true')
 158:lvgl/src/lv_widgets/lv_slider.c ****  *             LV_DESIGN_DRAW_POST: drawing after every children are drawn
 159:lvgl/src/lv_widgets/lv_slider.c ****  * @param return an element of `lv_design_res_t`
 160:lvgl/src/lv_widgets/lv_slider.c ****  */
 161:lvgl/src/lv_widgets/lv_slider.c **** static lv_design_res_t lv_slider_design(lv_obj_t * slider, const lv_area_t * clip_area, lv_design_m
 162:lvgl/src/lv_widgets/lv_slider.c **** {
 163:lvgl/src/lv_widgets/lv_slider.c ****     /*Return false if the object is not covers the mask_p area*/
 164:lvgl/src/lv_widgets/lv_slider.c ****     if(mode == LV_DESIGN_COVER_CHK) {
 165:lvgl/src/lv_widgets/lv_slider.c ****         return LV_DESIGN_RES_NOT_COVER;
 166:lvgl/src/lv_widgets/lv_slider.c ****     }
 167:lvgl/src/lv_widgets/lv_slider.c ****     /*Draw the object*/
 168:lvgl/src/lv_widgets/lv_slider.c ****     else if(mode == LV_DESIGN_DRAW_MAIN) {
 169:lvgl/src/lv_widgets/lv_slider.c ****         /* The ancestor design function will draw the background and the indicator.
 170:lvgl/src/lv_widgets/lv_slider.c ****          * It also sets ext->bar.indic_area*/
 171:lvgl/src/lv_widgets/lv_slider.c ****         ancestor_design_f(slider, clip_area, mode);
 172:lvgl/src/lv_widgets/lv_slider.c **** 
 173:lvgl/src/lv_widgets/lv_slider.c ****         lv_slider_ext_t * ext = lv_obj_get_ext_attr(slider);
 174:lvgl/src/lv_widgets/lv_slider.c ****         lv_bidi_dir_t base_dir = lv_obj_get_base_dir(slider);
 175:lvgl/src/lv_widgets/lv_slider.c **** 
 176:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t objw = lv_obj_get_width(slider);
 177:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t objh = lv_obj_get_height(slider);
 178:lvgl/src/lv_widgets/lv_slider.c ****         bool hor = objw >= objh ? true : false;
 179:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t knob_size = hor ? objh : objw;
 180:lvgl/src/lv_widgets/lv_slider.c ****         bool sym = false;
 181:lvgl/src/lv_widgets/lv_slider.c ****         if(ext->bar.type == LV_BAR_TYPE_SYMMETRICAL && ext->bar.min_value < 0 && ext->bar.max_value
 182:lvgl/src/lv_widgets/lv_slider.c **** 
 183:lvgl/src/lv_widgets/lv_slider.c ****         lv_area_t knob_area;
 184:lvgl/src/lv_widgets/lv_slider.c **** 
 185:lvgl/src/lv_widgets/lv_slider.c ****         /*Horizontal*/
 186:lvgl/src/lv_widgets/lv_slider.c ****         if(hor) {
 187:lvgl/src/lv_widgets/lv_slider.c ****             if(!sym) {
 188:lvgl/src/lv_widgets/lv_slider.c ****                 knob_area.x1 = LV_SLIDER_KNOB_COORD(hor, base_dir == LV_BIDI_DIR_RTL, ext->bar.indi
 189:lvgl/src/lv_widgets/lv_slider.c ****             }
 190:lvgl/src/lv_widgets/lv_slider.c ****             else {
 191:lvgl/src/lv_widgets/lv_slider.c ****                 if(ext->bar.cur_value >= 0) {
 192:lvgl/src/lv_widgets/lv_slider.c ****                     knob_area.x1 = LV_SLIDER_KNOB_COORD(hor, base_dir == LV_BIDI_DIR_RTL, ext->bar.
 193:lvgl/src/lv_widgets/lv_slider.c ****                 }
 194:lvgl/src/lv_widgets/lv_slider.c ****                 else {
 195:lvgl/src/lv_widgets/lv_slider.c ****                     knob_area.x1 = LV_SLIDER_KNOB_COORD(hor, base_dir != LV_BIDI_DIR_RTL, ext->bar.
 196:lvgl/src/lv_widgets/lv_slider.c ****                 }
 197:lvgl/src/lv_widgets/lv_slider.c ****             }
 198:lvgl/src/lv_widgets/lv_slider.c ****         }
 199:lvgl/src/lv_widgets/lv_slider.c ****         /*Vertical*/
 200:lvgl/src/lv_widgets/lv_slider.c ****         else {
 201:lvgl/src/lv_widgets/lv_slider.c ****             if(!sym) {
ARM GAS  D:\Temp\ccqmjWev.s 			page 5


 202:lvgl/src/lv_widgets/lv_slider.c ****                 knob_area.y1 = ext->bar.indic_area.y1;
 203:lvgl/src/lv_widgets/lv_slider.c ****             }
 204:lvgl/src/lv_widgets/lv_slider.c ****             else {
 205:lvgl/src/lv_widgets/lv_slider.c ****                 if(ext->bar.cur_value >= 0) {
 206:lvgl/src/lv_widgets/lv_slider.c ****                     knob_area.y1 = ext->bar.indic_area.y1;
 207:lvgl/src/lv_widgets/lv_slider.c ****                 }
 208:lvgl/src/lv_widgets/lv_slider.c ****                 else {
 209:lvgl/src/lv_widgets/lv_slider.c ****                     knob_area.y1 = ext->bar.indic_area.y2;
 210:lvgl/src/lv_widgets/lv_slider.c ****                 }
 211:lvgl/src/lv_widgets/lv_slider.c ****             }
 212:lvgl/src/lv_widgets/lv_slider.c ****         }
 213:lvgl/src/lv_widgets/lv_slider.c ****         lv_slider_position_knob(slider, &knob_area, knob_size, hor);
 214:lvgl/src/lv_widgets/lv_slider.c **** 
 215:lvgl/src/lv_widgets/lv_slider.c ****         lv_area_copy(&ext->right_knob_area, &knob_area);
 216:lvgl/src/lv_widgets/lv_slider.c ****         lv_slider_draw_knob(slider, &knob_area, clip_area);
 217:lvgl/src/lv_widgets/lv_slider.c **** 
 218:lvgl/src/lv_widgets/lv_slider.c ****         if(lv_slider_get_type(slider) == LV_SLIDER_TYPE_RANGE) {
 219:lvgl/src/lv_widgets/lv_slider.c ****             /* Draw a second knob for the start_value side */
 220:lvgl/src/lv_widgets/lv_slider.c ****             if(hor) {
 221:lvgl/src/lv_widgets/lv_slider.c ****                 knob_area.x1 = LV_SLIDER_KNOB_COORD(hor, base_dir != LV_BIDI_DIR_RTL, ext->bar.indi
 222:lvgl/src/lv_widgets/lv_slider.c ****             }
 223:lvgl/src/lv_widgets/lv_slider.c ****             else {
 224:lvgl/src/lv_widgets/lv_slider.c ****                 knob_area.y1 = ext->bar.indic_area.y2;
 225:lvgl/src/lv_widgets/lv_slider.c ****             }
 226:lvgl/src/lv_widgets/lv_slider.c ****             lv_slider_position_knob(slider, &knob_area, knob_size, hor);
 227:lvgl/src/lv_widgets/lv_slider.c **** 
 228:lvgl/src/lv_widgets/lv_slider.c ****             lv_area_copy(&ext->left_knob_area, &knob_area);
 229:lvgl/src/lv_widgets/lv_slider.c ****             lv_slider_draw_knob(slider, &knob_area, clip_area);
 230:lvgl/src/lv_widgets/lv_slider.c ****         }
 231:lvgl/src/lv_widgets/lv_slider.c ****     }
 232:lvgl/src/lv_widgets/lv_slider.c ****     /*Post draw when the children are drawn*/
 233:lvgl/src/lv_widgets/lv_slider.c ****     else if(mode == LV_DESIGN_DRAW_POST) {
 234:lvgl/src/lv_widgets/lv_slider.c ****         return ancestor_design_f(slider, clip_area, mode);
 235:lvgl/src/lv_widgets/lv_slider.c ****     }
 236:lvgl/src/lv_widgets/lv_slider.c **** 
 237:lvgl/src/lv_widgets/lv_slider.c ****     return LV_DESIGN_RES_OK;
 238:lvgl/src/lv_widgets/lv_slider.c **** }
 239:lvgl/src/lv_widgets/lv_slider.c **** 
 240:lvgl/src/lv_widgets/lv_slider.c **** /**
 241:lvgl/src/lv_widgets/lv_slider.c ****  * Signal function of the slider
 242:lvgl/src/lv_widgets/lv_slider.c ****  * @param slider pointer to a slider object
 243:lvgl/src/lv_widgets/lv_slider.c ****  * @param sign a signal type from lv_signal_t enum
 244:lvgl/src/lv_widgets/lv_slider.c ****  * @param param pointer to a signal specific variable
 245:lvgl/src/lv_widgets/lv_slider.c ****  * @return LV_RES_OK: the object is not deleted in the function; LV_RES_INV: the object is deleted
 246:lvgl/src/lv_widgets/lv_slider.c ****  */
 247:lvgl/src/lv_widgets/lv_slider.c **** static lv_res_t lv_slider_signal(lv_obj_t * slider, lv_signal_t sign, void * param)
 248:lvgl/src/lv_widgets/lv_slider.c **** {
 249:lvgl/src/lv_widgets/lv_slider.c ****     lv_res_t res;
 250:lvgl/src/lv_widgets/lv_slider.c **** 
 251:lvgl/src/lv_widgets/lv_slider.c ****     if(sign == LV_SIGNAL_GET_STYLE) {
 252:lvgl/src/lv_widgets/lv_slider.c ****         lv_get_style_info_t * info = param;
 253:lvgl/src/lv_widgets/lv_slider.c ****         info->result = lv_slider_get_style(slider, info->part);
 254:lvgl/src/lv_widgets/lv_slider.c ****         if(info->result != NULL) return LV_RES_OK;
 255:lvgl/src/lv_widgets/lv_slider.c ****         else return ancestor_signal(slider, sign, param);
 256:lvgl/src/lv_widgets/lv_slider.c ****     }
 257:lvgl/src/lv_widgets/lv_slider.c **** 
 258:lvgl/src/lv_widgets/lv_slider.c ****     /* Include the ancient signal function */
ARM GAS  D:\Temp\ccqmjWev.s 			page 6


 259:lvgl/src/lv_widgets/lv_slider.c ****     res = ancestor_signal(slider, sign, param);
 260:lvgl/src/lv_widgets/lv_slider.c ****     if(res != LV_RES_OK) return res;
 261:lvgl/src/lv_widgets/lv_slider.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 262:lvgl/src/lv_widgets/lv_slider.c **** 
 263:lvgl/src/lv_widgets/lv_slider.c ****     lv_slider_type_t type = lv_slider_get_type(slider);
 264:lvgl/src/lv_widgets/lv_slider.c ****     lv_slider_ext_t * ext = lv_obj_get_ext_attr(slider);
 265:lvgl/src/lv_widgets/lv_slider.c **** 
 266:lvgl/src/lv_widgets/lv_slider.c ****     /* Advanced hit testing: react only on dragging the knob(s) */
 267:lvgl/src/lv_widgets/lv_slider.c ****     if(sign == LV_SIGNAL_HIT_TEST) {
 268:lvgl/src/lv_widgets/lv_slider.c ****         lv_hit_test_info_t * info = param;
 269:lvgl/src/lv_widgets/lv_slider.c **** 
 270:lvgl/src/lv_widgets/lv_slider.c ****         /* Ordinary slider: was the knob area hit? */
 271:lvgl/src/lv_widgets/lv_slider.c ****         info->result = _lv_area_is_point_on(&ext->right_knob_area, info->point, 0);
 272:lvgl/src/lv_widgets/lv_slider.c **** 
 273:lvgl/src/lv_widgets/lv_slider.c ****         /* There's still a change we have a hit, if we have another knob */
 274:lvgl/src/lv_widgets/lv_slider.c ****         if((info->result == false) && (type == LV_SLIDER_TYPE_RANGE)) {
 275:lvgl/src/lv_widgets/lv_slider.c ****             info->result = _lv_area_is_point_on(&ext->left_knob_area, info->point, 0);
 276:lvgl/src/lv_widgets/lv_slider.c ****         }
 277:lvgl/src/lv_widgets/lv_slider.c ****     }
 278:lvgl/src/lv_widgets/lv_slider.c **** 
 279:lvgl/src/lv_widgets/lv_slider.c ****     lv_point_t p;
 280:lvgl/src/lv_widgets/lv_slider.c **** 
 281:lvgl/src/lv_widgets/lv_slider.c ****     if(sign == LV_SIGNAL_PRESSED) {
 282:lvgl/src/lv_widgets/lv_slider.c ****         ext->dragging = true;
 283:lvgl/src/lv_widgets/lv_slider.c ****         if(type == LV_SLIDER_TYPE_NORMAL || type == LV_SLIDER_TYPE_SYMMETRICAL) {
 284:lvgl/src/lv_widgets/lv_slider.c ****             ext->value_to_set = &ext->bar.cur_value;
 285:lvgl/src/lv_widgets/lv_slider.c ****         }
 286:lvgl/src/lv_widgets/lv_slider.c ****         else if(type == LV_SLIDER_TYPE_RANGE) {
 287:lvgl/src/lv_widgets/lv_slider.c ****             lv_indev_get_point(param, &p);
 288:lvgl/src/lv_widgets/lv_slider.c ****             bool hor = lv_obj_get_width(slider) >= lv_obj_get_height(slider);
 289:lvgl/src/lv_widgets/lv_slider.c ****             lv_bidi_dir_t base_dir = lv_obj_get_base_dir(slider);
 290:lvgl/src/lv_widgets/lv_slider.c **** 
 291:lvgl/src/lv_widgets/lv_slider.c ****             lv_coord_t dist_left, dist_right;
 292:lvgl/src/lv_widgets/lv_slider.c ****             if(hor) {
 293:lvgl/src/lv_widgets/lv_slider.c ****                 if((base_dir != LV_BIDI_DIR_RTL && p.x > ext->right_knob_area.x2) || (base_dir == L
 294:lvgl/src/lv_widgets/lv_slider.c ****                                                                                       p.x < ext->ri
 295:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.cur_value;
 296:lvgl/src/lv_widgets/lv_slider.c ****                 }
 297:lvgl/src/lv_widgets/lv_slider.c ****                 else if((base_dir != LV_BIDI_DIR_RTL && p.x < ext->left_knob_area.x1) || (base_dir 
 298:lvgl/src/lv_widgets/lv_slider.c ****                                                                                           p.x > ext
 299:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.start_value;
 300:lvgl/src/lv_widgets/lv_slider.c ****                 }
 301:lvgl/src/lv_widgets/lv_slider.c ****                 else {
 302:lvgl/src/lv_widgets/lv_slider.c ****                     /* Calculate the distance from each knob */
 303:lvgl/src/lv_widgets/lv_slider.c ****                     dist_left = LV_MATH_ABS((ext->left_knob_area.x1 + (ext->left_knob_area.x2 - ext
 304:lvgl/src/lv_widgets/lv_slider.c ****                     dist_right = LV_MATH_ABS((ext->right_knob_area.x1 + (ext->right_knob_area.x2 - 
 305:lvgl/src/lv_widgets/lv_slider.c **** 
 306:lvgl/src/lv_widgets/lv_slider.c ****                     /* Use whichever one is closer */
 307:lvgl/src/lv_widgets/lv_slider.c ****                     if(dist_right < dist_left)ext->value_to_set = &ext->bar.cur_value;
 308:lvgl/src/lv_widgets/lv_slider.c ****                     else ext->value_to_set = &ext->bar.start_value;
 309:lvgl/src/lv_widgets/lv_slider.c ****                 }
 310:lvgl/src/lv_widgets/lv_slider.c ****             }
 311:lvgl/src/lv_widgets/lv_slider.c ****             else {
 312:lvgl/src/lv_widgets/lv_slider.c ****                 if(p.y < ext->right_knob_area.y1) {
 313:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.cur_value;
 314:lvgl/src/lv_widgets/lv_slider.c ****                 }
 315:lvgl/src/lv_widgets/lv_slider.c ****                 else if(p.y > ext->left_knob_area.y2) {
ARM GAS  D:\Temp\ccqmjWev.s 			page 7


 316:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.start_value;
 317:lvgl/src/lv_widgets/lv_slider.c ****                 }
 318:lvgl/src/lv_widgets/lv_slider.c ****                 else {
 319:lvgl/src/lv_widgets/lv_slider.c ****                     /* Calculate the distance from each knob */
 320:lvgl/src/lv_widgets/lv_slider.c ****                     dist_left = LV_MATH_ABS((ext->left_knob_area.y1 + (ext->left_knob_area.y2 - ext
 321:lvgl/src/lv_widgets/lv_slider.c ****                     dist_right = LV_MATH_ABS((ext->right_knob_area.y1 + (ext->right_knob_area.y2 - 
 322:lvgl/src/lv_widgets/lv_slider.c **** 
 323:lvgl/src/lv_widgets/lv_slider.c ****                     /* Use whichever one is closer */
 324:lvgl/src/lv_widgets/lv_slider.c ****                     if(dist_right < dist_left)ext->value_to_set = &ext->bar.cur_value;
 325:lvgl/src/lv_widgets/lv_slider.c ****                     else ext->value_to_set = &ext->bar.start_value;
 326:lvgl/src/lv_widgets/lv_slider.c ****                 }
 327:lvgl/src/lv_widgets/lv_slider.c ****             }
 328:lvgl/src/lv_widgets/lv_slider.c ****         }
 329:lvgl/src/lv_widgets/lv_slider.c ****     }
 330:lvgl/src/lv_widgets/lv_slider.c ****     else if(sign == LV_SIGNAL_PRESSING && ext->value_to_set != NULL) {
 331:lvgl/src/lv_widgets/lv_slider.c ****         if(lv_indev_get_type(param) != LV_INDEV_TYPE_POINTER) return res;
 332:lvgl/src/lv_widgets/lv_slider.c **** 
 333:lvgl/src/lv_widgets/lv_slider.c ****         lv_indev_get_point(param, &p);
 334:lvgl/src/lv_widgets/lv_slider.c ****         lv_bidi_dir_t base_dir = lv_obj_get_base_dir(slider);
 335:lvgl/src/lv_widgets/lv_slider.c **** 
 336:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t w = lv_obj_get_width(slider);
 337:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t h = lv_obj_get_height(slider);
 338:lvgl/src/lv_widgets/lv_slider.c **** 
 339:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t bg_left = lv_obj_get_style_pad_left(slider,   LV_SLIDER_PART_BG);
 340:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t bg_right = lv_obj_get_style_pad_right(slider,  LV_SLIDER_PART_BG);
 341:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t bg_top = lv_obj_get_style_pad_top(slider,    LV_SLIDER_PART_BG);
 342:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t bg_bottom = lv_obj_get_style_pad_bottom(slider, LV_SLIDER_PART_BG);
 343:lvgl/src/lv_widgets/lv_slider.c **** 
 344:lvgl/src/lv_widgets/lv_slider.c ****         int32_t range = ext->bar.max_value - ext->bar.min_value;
 345:lvgl/src/lv_widgets/lv_slider.c ****         int16_t new_value = 0;
 346:lvgl/src/lv_widgets/lv_slider.c ****         int16_t real_max_value = ext->bar.max_value;
 347:lvgl/src/lv_widgets/lv_slider.c ****         int16_t real_min_value = ext->bar.min_value;
 348:lvgl/src/lv_widgets/lv_slider.c **** 
 349:lvgl/src/lv_widgets/lv_slider.c ****         if(w >= h) {
 350:lvgl/src/lv_widgets/lv_slider.c ****             lv_coord_t indic_w = w - bg_left - bg_right;
 351:lvgl/src/lv_widgets/lv_slider.c ****             if(base_dir == LV_BIDI_DIR_RTL) {
 352:lvgl/src/lv_widgets/lv_slider.c ****                 new_value = (slider->coords.x2 - bg_right) - p.x; /*Make the point relative to the 
 353:lvgl/src/lv_widgets/lv_slider.c ****             }
 354:lvgl/src/lv_widgets/lv_slider.c ****             else {
 355:lvgl/src/lv_widgets/lv_slider.c ****                 new_value = p.x - (slider->coords.x1 + bg_left); /*Make the point relative to the i
 356:lvgl/src/lv_widgets/lv_slider.c ****             }
 357:lvgl/src/lv_widgets/lv_slider.c ****             new_value = (new_value * range) / indic_w;
 358:lvgl/src/lv_widgets/lv_slider.c ****             new_value += ext->bar.min_value;
 359:lvgl/src/lv_widgets/lv_slider.c ****         }
 360:lvgl/src/lv_widgets/lv_slider.c ****         else {
 361:lvgl/src/lv_widgets/lv_slider.c ****             lv_coord_t indic_h = h - bg_bottom - bg_top;
 362:lvgl/src/lv_widgets/lv_slider.c ****             new_value = p.y - (slider->coords.y2 + bg_bottom); /*Make the point relative to the ind
 363:lvgl/src/lv_widgets/lv_slider.c ****             new_value = (-new_value * range) / indic_h;
 364:lvgl/src/lv_widgets/lv_slider.c ****             new_value += ext->bar.min_value;
 365:lvgl/src/lv_widgets/lv_slider.c **** 
 366:lvgl/src/lv_widgets/lv_slider.c ****         }
 367:lvgl/src/lv_widgets/lv_slider.c **** 
 368:lvgl/src/lv_widgets/lv_slider.c ****         /* Figure out the min. and max. for this mode */
 369:lvgl/src/lv_widgets/lv_slider.c ****         if(ext->value_to_set == &ext->bar.start_value) {
 370:lvgl/src/lv_widgets/lv_slider.c ****             real_max_value = ext->bar.cur_value;
 371:lvgl/src/lv_widgets/lv_slider.c ****         }
 372:lvgl/src/lv_widgets/lv_slider.c ****         else {
ARM GAS  D:\Temp\ccqmjWev.s 			page 8


 373:lvgl/src/lv_widgets/lv_slider.c ****             real_min_value = ext->bar.start_value;
 374:lvgl/src/lv_widgets/lv_slider.c ****         }
 375:lvgl/src/lv_widgets/lv_slider.c **** 
 376:lvgl/src/lv_widgets/lv_slider.c ****         if(new_value < real_min_value) new_value = real_min_value;
 377:lvgl/src/lv_widgets/lv_slider.c ****         else if(new_value > real_max_value) new_value = real_max_value;
 378:lvgl/src/lv_widgets/lv_slider.c ****         if(*ext->value_to_set != new_value) {
 379:lvgl/src/lv_widgets/lv_slider.c ****             *ext->value_to_set = new_value;
 380:lvgl/src/lv_widgets/lv_slider.c ****             lv_obj_invalidate(slider);
 381:lvgl/src/lv_widgets/lv_slider.c ****             res = lv_event_send(slider, LV_EVENT_VALUE_CHANGED, NULL);
 382:lvgl/src/lv_widgets/lv_slider.c ****             if(res != LV_RES_OK) return res;
 383:lvgl/src/lv_widgets/lv_slider.c ****         }
 384:lvgl/src/lv_widgets/lv_slider.c **** 
 385:lvgl/src/lv_widgets/lv_slider.c ****     }
 386:lvgl/src/lv_widgets/lv_slider.c ****     else if(sign == LV_SIGNAL_RELEASED || sign == LV_SIGNAL_PRESS_LOST) {
 387:lvgl/src/lv_widgets/lv_slider.c ****         ext->dragging = false;
 388:lvgl/src/lv_widgets/lv_slider.c ****         ext->value_to_set = NULL;
 389:lvgl/src/lv_widgets/lv_slider.c **** 
 390:lvgl/src/lv_widgets/lv_slider.c **** #if LV_USE_GROUP
 391:lvgl/src/lv_widgets/lv_slider.c ****         /*Leave edit mode if released. (No need to wait for LONG_PRESS) */
 392:lvgl/src/lv_widgets/lv_slider.c ****         lv_group_t * g             = lv_obj_get_group(slider);
 393:lvgl/src/lv_widgets/lv_slider.c ****         bool editing               = lv_group_get_editing(g);
 394:lvgl/src/lv_widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 395:lvgl/src/lv_widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 396:lvgl/src/lv_widgets/lv_slider.c ****             if(editing) {
 397:lvgl/src/lv_widgets/lv_slider.c ****                 if(lv_slider_get_type(slider) == LV_SLIDER_TYPE_RANGE) {
 398:lvgl/src/lv_widgets/lv_slider.c ****                     if(ext->left_knob_focus == 0) ext->left_knob_focus = 1;
 399:lvgl/src/lv_widgets/lv_slider.c ****                     else {
 400:lvgl/src/lv_widgets/lv_slider.c ****                         ext->left_knob_focus = 0;
 401:lvgl/src/lv_widgets/lv_slider.c ****                         lv_group_set_editing(g, false);
 402:lvgl/src/lv_widgets/lv_slider.c ****                     }
 403:lvgl/src/lv_widgets/lv_slider.c ****                 }
 404:lvgl/src/lv_widgets/lv_slider.c ****                 else {
 405:lvgl/src/lv_widgets/lv_slider.c ****                     lv_group_set_editing(g, false);
 406:lvgl/src/lv_widgets/lv_slider.c ****                 }
 407:lvgl/src/lv_widgets/lv_slider.c ****             }
 408:lvgl/src/lv_widgets/lv_slider.c ****         }
 409:lvgl/src/lv_widgets/lv_slider.c **** #endif
 410:lvgl/src/lv_widgets/lv_slider.c **** 
 411:lvgl/src/lv_widgets/lv_slider.c ****     }
 412:lvgl/src/lv_widgets/lv_slider.c ****     else if(sign == LV_SIGNAL_FOCUS) {
 413:lvgl/src/lv_widgets/lv_slider.c ****         ext->left_knob_focus = 0;
 414:lvgl/src/lv_widgets/lv_slider.c ****     }
 415:lvgl/src/lv_widgets/lv_slider.c ****     else if(sign == LV_SIGNAL_COORD_CHG) {
 416:lvgl/src/lv_widgets/lv_slider.c ****         /* The knob size depends on slider size.
 417:lvgl/src/lv_widgets/lv_slider.c ****          * During the drawing method the ext. size is used by the knob so refresh the ext. size.*/
 418:lvgl/src/lv_widgets/lv_slider.c ****         if(lv_obj_get_width(slider) != lv_area_get_width(param) ||
 419:lvgl/src/lv_widgets/lv_slider.c ****            lv_obj_get_height(slider) != lv_area_get_height(param)) {
 420:lvgl/src/lv_widgets/lv_slider.c ****             slider->signal_cb(slider, LV_SIGNAL_REFR_EXT_DRAW_PAD, NULL);
 421:lvgl/src/lv_widgets/lv_slider.c ****         }
 422:lvgl/src/lv_widgets/lv_slider.c ****     }
 423:lvgl/src/lv_widgets/lv_slider.c ****     else if(sign == LV_SIGNAL_REFR_EXT_DRAW_PAD) {
 424:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t knob_left = lv_obj_get_style_pad_left(slider,   LV_SLIDER_PART_KNOB);
 425:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t knob_right = lv_obj_get_style_pad_right(slider,  LV_SLIDER_PART_KNOB);
 426:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t knob_top = lv_obj_get_style_pad_top(slider,    LV_SLIDER_PART_KNOB);
 427:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t knob_bottom = lv_obj_get_style_pad_bottom(slider, LV_SLIDER_PART_KNOB);
 428:lvgl/src/lv_widgets/lv_slider.c **** 
 429:lvgl/src/lv_widgets/lv_slider.c ****         /* The smaller size is the knob diameter*/
ARM GAS  D:\Temp\ccqmjWev.s 			page 9


 430:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t knob_size = LV_MATH_MIN(lv_obj_get_width(slider), lv_obj_get_height(slider)) >> 
 431:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 432:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 433:lvgl/src/lv_widgets/lv_slider.c **** 
 434:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += lv_obj_get_draw_rect_ext_pad_size(slider, LV_SLIDER_PART_KNOB);
 435:lvgl/src/lv_widgets/lv_slider.c **** 
 436:lvgl/src/lv_widgets/lv_slider.c ****         /*Indic. size is handled by bar*/
 437:lvgl/src/lv_widgets/lv_slider.c ****         slider->ext_draw_pad = LV_MATH_MAX(slider->ext_draw_pad, knob_size);
 438:lvgl/src/lv_widgets/lv_slider.c **** 
 439:lvgl/src/lv_widgets/lv_slider.c ****     }
 440:lvgl/src/lv_widgets/lv_slider.c ****     else if(sign == LV_SIGNAL_CONTROL) {
 441:lvgl/src/lv_widgets/lv_slider.c **** #if LV_USE_GROUP
 442:lvgl/src/lv_widgets/lv_slider.c ****         char c = *((char *)param);
 443:lvgl/src/lv_widgets/lv_slider.c **** 
 444:lvgl/src/lv_widgets/lv_slider.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_UP) {
 445:lvgl/src/lv_widgets/lv_slider.c ****             if(!ext->left_knob_focus) lv_slider_set_value(slider, lv_slider_get_value(slider) + 1, 
 446:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) + 1, LV_ANIM_ON)
 447:lvgl/src/lv_widgets/lv_slider.c **** 
 448:lvgl/src/lv_widgets/lv_slider.c ****             res = lv_event_send(slider, LV_EVENT_VALUE_CHANGED, NULL);
 449:lvgl/src/lv_widgets/lv_slider.c ****             if(res != LV_RES_OK) return res;
 450:lvgl/src/lv_widgets/lv_slider.c ****         }
 451:lvgl/src/lv_widgets/lv_slider.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_DOWN) {
 452:lvgl/src/lv_widgets/lv_slider.c ****             if(!ext->left_knob_focus) lv_slider_set_value(slider, lv_slider_get_value(slider) - 1, 
 453:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) - 1, LV_ANIM_ON)
 454:lvgl/src/lv_widgets/lv_slider.c **** 
 455:lvgl/src/lv_widgets/lv_slider.c ****             res = lv_event_send(slider, LV_EVENT_VALUE_CHANGED, NULL);
 456:lvgl/src/lv_widgets/lv_slider.c ****             if(res != LV_RES_OK) return res;
 457:lvgl/src/lv_widgets/lv_slider.c ****         }
 458:lvgl/src/lv_widgets/lv_slider.c **** #endif
 459:lvgl/src/lv_widgets/lv_slider.c ****     }
 460:lvgl/src/lv_widgets/lv_slider.c ****     else if(sign == LV_SIGNAL_CLEANUP) {
 461:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_clean_style_list(slider, LV_SLIDER_PART_KNOB);
 462:lvgl/src/lv_widgets/lv_slider.c ****     }
 463:lvgl/src/lv_widgets/lv_slider.c ****     else if(sign == LV_SIGNAL_GET_EDITABLE) {
 464:lvgl/src/lv_widgets/lv_slider.c **** #if LV_USE_GROUP
 465:lvgl/src/lv_widgets/lv_slider.c ****         bool * editable = (bool *)param;
 466:lvgl/src/lv_widgets/lv_slider.c ****         *editable       = true;
 467:lvgl/src/lv_widgets/lv_slider.c **** #endif
 468:lvgl/src/lv_widgets/lv_slider.c ****     }
 469:lvgl/src/lv_widgets/lv_slider.c **** 
 470:lvgl/src/lv_widgets/lv_slider.c ****     return res;
 471:lvgl/src/lv_widgets/lv_slider.c **** }
 472:lvgl/src/lv_widgets/lv_slider.c **** 
 473:lvgl/src/lv_widgets/lv_slider.c **** static lv_style_list_t * lv_slider_get_style(lv_obj_t * slider, uint8_t part)
 474:lvgl/src/lv_widgets/lv_slider.c **** {
  29              		.loc 1 474 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 474 1 is_stmt 0 view .LVU1
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
ARM GAS  D:\Temp\ccqmjWev.s 			page 10


  41 0002 0446     		mov	r4, r0
  42 0004 0D46     		mov	r5, r1
 475:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_OBJ(slider, LV_OBJX_NAME);
  43              		.loc 1 475 5 is_stmt 1 view .LVU2
  44              		.loc 1 475 5 view .LVU3
  45 0006 FFF7FEFF 		bl	lv_debug_check_null
  46              	.LVL1:
  47              		.loc 1 475 5 is_stmt 0 view .LVU4
  48 000a 28B9     		cbnz	r0, .L2
  49              		.loc 1 475 5 is_stmt 1 discriminator 1 view .LVU5
  50              		.loc 1 475 5 discriminator 1 view .LVU6
  51 000c 2246     		mov	r2, r4
  52 000e 0023     		movs	r3, #0
  53 0010 0A48     		ldr	r0, .L9
  54 0012 FFF7FEFF 		bl	lv_debug_log_error
  55              	.LVL2:
  56              	.L3:
  57              		.loc 1 475 5 discriminator 1 view .LVU7
  58              		.loc 1 475 5 discriminator 1 view .LVU8
  59 0016 FEE7     		b	.L3
  60              	.L2:
  61              		.loc 1 475 40 discriminator 2 view .LVU9
 476:lvgl/src/lv_widgets/lv_slider.c **** 
 477:lvgl/src/lv_widgets/lv_slider.c ****     lv_slider_ext_t * ext = lv_obj_get_ext_attr(slider);
  62              		.loc 1 477 5 discriminator 2 view .LVU10
  63              		.loc 1 477 29 is_stmt 0 discriminator 2 view .LVU11
  64 0018 2046     		mov	r0, r4
  65 001a FFF7FEFF 		bl	lv_obj_get_ext_attr
  66              	.LVL3:
 478:lvgl/src/lv_widgets/lv_slider.c ****     lv_style_list_t * style_dsc_p;
  67              		.loc 1 478 5 is_stmt 1 discriminator 2 view .LVU12
 479:lvgl/src/lv_widgets/lv_slider.c **** 
 480:lvgl/src/lv_widgets/lv_slider.c ****     switch(part) {
  68              		.loc 1 480 5 discriminator 2 view .LVU13
  69 001e 012D     		cmp	r5, #1
  70 0020 08D0     		beq	.L4
  71              		.loc 1 480 5 is_stmt 0 view .LVU14
  72 0022 6BB2     		sxtb	r3, r5
  73 0024 1BB1     		cbz	r3, .L5
  74 0026 022D     		cmp	r5, #2
  75 0028 06D0     		beq	.L6
 481:lvgl/src/lv_widgets/lv_slider.c ****         case LV_SLIDER_PART_BG:
 482:lvgl/src/lv_widgets/lv_slider.c ****             style_dsc_p = &slider->style_list;
 483:lvgl/src/lv_widgets/lv_slider.c ****             break;
 484:lvgl/src/lv_widgets/lv_slider.c ****         case LV_SLIDER_PART_INDIC:
 485:lvgl/src/lv_widgets/lv_slider.c ****             style_dsc_p = &ext->bar.style_indic;
 486:lvgl/src/lv_widgets/lv_slider.c ****             break;
 487:lvgl/src/lv_widgets/lv_slider.c ****         case LV_SLIDER_PART_KNOB:
 488:lvgl/src/lv_widgets/lv_slider.c ****             style_dsc_p = &ext->style_knob;
 489:lvgl/src/lv_widgets/lv_slider.c ****             break;
 490:lvgl/src/lv_widgets/lv_slider.c ****         default:
 491:lvgl/src/lv_widgets/lv_slider.c ****             style_dsc_p = NULL;
  76              		.loc 1 491 25 view .LVU15
  77 002a 0020     		movs	r0, #0
  78              	.LVL4:
  79              	.L1:
 492:lvgl/src/lv_widgets/lv_slider.c ****     }
ARM GAS  D:\Temp\ccqmjWev.s 			page 11


 493:lvgl/src/lv_widgets/lv_slider.c **** 
 494:lvgl/src/lv_widgets/lv_slider.c ****     return style_dsc_p;
 495:lvgl/src/lv_widgets/lv_slider.c **** }
  80              		.loc 1 495 1 view .LVU16
  81 002c 38BD     		pop	{r3, r4, r5, pc}
  82              	.LVL5:
  83              	.L5:
 482:lvgl/src/lv_widgets/lv_slider.c ****             break;
  84              		.loc 1 482 13 is_stmt 1 view .LVU17
 482:lvgl/src/lv_widgets/lv_slider.c ****             break;
  85              		.loc 1 482 25 is_stmt 0 view .LVU18
  86 002e 04F12800 		add	r0, r4, #40
  87              	.LVL6:
 483:lvgl/src/lv_widgets/lv_slider.c ****         case LV_SLIDER_PART_INDIC:
  88              		.loc 1 483 13 is_stmt 1 view .LVU19
  89 0032 FBE7     		b	.L1
  90              	.LVL7:
  91              	.L4:
 485:lvgl/src/lv_widgets/lv_slider.c ****             break;
  92              		.loc 1 485 13 view .LVU20
 485:lvgl/src/lv_widgets/lv_slider.c ****             break;
  93              		.loc 1 485 25 is_stmt 0 view .LVU21
  94 0034 3030     		adds	r0, r0, #48
  95              	.LVL8:
 486:lvgl/src/lv_widgets/lv_slider.c ****         case LV_SLIDER_PART_KNOB:
  96              		.loc 1 486 13 is_stmt 1 view .LVU22
  97 0036 F9E7     		b	.L1
  98              	.LVL9:
  99              	.L6:
 488:lvgl/src/lv_widgets/lv_slider.c ****             break;
 100              		.loc 1 488 13 view .LVU23
 488:lvgl/src/lv_widgets/lv_slider.c ****             break;
 101              		.loc 1 488 25 is_stmt 0 view .LVU24
 102 0038 3830     		adds	r0, r0, #56
 103              	.LVL10:
 489:lvgl/src/lv_widgets/lv_slider.c ****         default:
 104              		.loc 1 489 13 is_stmt 1 view .LVU25
 494:lvgl/src/lv_widgets/lv_slider.c **** }
 105              		.loc 1 494 5 view .LVU26
 494:lvgl/src/lv_widgets/lv_slider.c **** }
 106              		.loc 1 494 12 is_stmt 0 view .LVU27
 107 003a F7E7     		b	.L1
 108              	.L10:
 109              		.align	2
 110              	.L9:
 111 003c 00000000 		.word	.LC0
 112              		.cfi_endproc
 113              	.LFE484:
 115              		.section	.text.lv_slider_position_knob,"ax",%progbits
 116              		.align	1
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv4-sp-d16
 122              	lv_slider_position_knob:
 123              	.LVL11:
 124              	.LFB485:
ARM GAS  D:\Temp\ccqmjWev.s 			page 12


 496:lvgl/src/lv_widgets/lv_slider.c **** 
 497:lvgl/src/lv_widgets/lv_slider.c **** static void lv_slider_position_knob(lv_obj_t * slider, lv_area_t * knob_area, lv_coord_t knob_size,
 498:lvgl/src/lv_widgets/lv_slider.c **** {
 125              		.loc 1 498 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		.loc 1 498 1 is_stmt 0 view .LVU29
 130 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 131              	.LCFI1:
 132              		.cfi_def_cfa_offset 24
 133              		.cfi_offset 4, -24
 134              		.cfi_offset 5, -20
 135              		.cfi_offset 6, -16
 136              		.cfi_offset 7, -12
 137              		.cfi_offset 8, -8
 138              		.cfi_offset 14, -4
 139 0004 0546     		mov	r5, r0
 140 0006 0C46     		mov	r4, r1
 499:lvgl/src/lv_widgets/lv_slider.c **** 
 500:lvgl/src/lv_widgets/lv_slider.c ****     if(hor) {
 141              		.loc 1 500 5 is_stmt 1 view .LVU30
 142              		.loc 1 500 7 is_stmt 0 view .LVU31
 143 0008 002B     		cmp	r3, #0
 144 000a 34D0     		beq	.L12
 501:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->x1 -= (knob_size >> 1);
 145              		.loc 1 501 9 is_stmt 1 view .LVU32
 146              		.loc 1 501 23 is_stmt 0 view .LVU33
 147 000c 0B88     		ldrh	r3, [r1]
 148              	.LVL12:
 149              		.loc 1 501 23 view .LVU34
 150 000e A3EB6203 		sub	r3, r3, r2, asr #1
 151 0012 9BB2     		uxth	r3, r3
 152 0014 0B80     		strh	r3, [r1]	@ movhi
 502:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->x2 = knob_area->x1 + knob_size - 1;
 153              		.loc 1 502 9 is_stmt 1 view .LVU35
 154              		.loc 1 502 39 is_stmt 0 view .LVU36
 155 0016 1344     		add	r3, r3, r2
 156 0018 9BB2     		uxth	r3, r3
 157              		.loc 1 502 51 view .LVU37
 158 001a 013B     		subs	r3, r3, #1
 159              		.loc 1 502 23 view .LVU38
 160 001c 8B80     		strh	r3, [r1, #4]	@ movhi
 503:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->y1 = slider->coords.y1;
 161              		.loc 1 503 9 is_stmt 1 view .LVU39
 162              		.loc 1 503 39 is_stmt 0 view .LVU40
 163 001e B0F91230 		ldrsh	r3, [r0, #18]
 164              		.loc 1 503 23 view .LVU41
 165 0022 4B80     		strh	r3, [r1, #2]	@ movhi
 504:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->y2 = slider->coords.y2;
 166              		.loc 1 504 9 is_stmt 1 view .LVU42
 167              		.loc 1 504 39 is_stmt 0 view .LVU43
 168 0024 B0F91630 		ldrsh	r3, [r0, #22]
 169              		.loc 1 504 23 view .LVU44
 170 0028 CB80     		strh	r3, [r1, #6]	@ movhi
 171              	.L13:
 505:lvgl/src/lv_widgets/lv_slider.c ****     }
ARM GAS  D:\Temp\ccqmjWev.s 			page 13


 506:lvgl/src/lv_widgets/lv_slider.c ****     else {
 507:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->y1 -= (knob_size >> 1);
 508:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->y2 = knob_area->y1 + knob_size - 1;
 509:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->x1 = slider->coords.x1;
 510:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->x2 = slider->coords.x2;
 511:lvgl/src/lv_widgets/lv_slider.c ****     }
 512:lvgl/src/lv_widgets/lv_slider.c **** 
 513:lvgl/src/lv_widgets/lv_slider.c ****     lv_style_int_t knob_left = lv_obj_get_style_pad_left(slider,   LV_SLIDER_PART_KNOB);
 172              		.loc 1 513 5 is_stmt 1 view .LVU45
 173              	.LVL13:
 174              	.LBB78:
 175              	.LBI78:
 176              		.file 2 "lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h"
   1:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   2:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
   3:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * @file lv_obj_style_dec.h
   4:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
   5:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
   6:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
   7:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifndef LV_OBJ_STYLE_DEC_H
   8:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define LV_OBJ_STYLE_DEC_H
   9:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  10:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #ifdef __cplusplus
  11:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** extern "C" {
  12:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #endif
  13:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  14:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /*********************
  15:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      DEFINES
  16:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *********************/
  17:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  18:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** /**
  19:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Macro to declare the most important style set/get API functions.
  20:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  21:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value of a style property from an object in the object's current state
  22:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -----------------------------------------------------------------------------
  23:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Get the value of a style property from an object in the object's current state.
  24:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Transition animation is taken into account.
  25:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not set in the object's styles check the parent(s) if the property can be 
  26:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If still not found return a default value.
  27:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  28:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t w = lv_obj_get_style_border_width(btn1, LV_BTN_PART_MAIN);`
  29:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  30:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a local style property for an object in a given state
  31:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------------------------
  32:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  33:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_set_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, 2);`
  34:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  35:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get a local style property's value of an object in a given state
  36:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ----------------------------------------------------------------
  37:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - Return the best matching property in the given state.
  38:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - E.g. if `state` parameter is LV_STATE_PRESSED | LV_STATE_CHECKED` but the property defined on
  39:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    `LV_STATE_PRESSED` and `LV_STATE_DEFAULT` the best matching state is `LV_STATE_PRESSED`
  40:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *    (because it has higher precedence) and it will be returned.
  41:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - If the property is not found even in `LV_STATE_DEFAULT` `-1` is returned.
  42:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *  - For example:
  43:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `//Type of result should be lv_style_int_t/lv_opa_t/lv_color_t/const void * according to th
  44:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_int_t result;`
ARM GAS  D:\Temp\ccqmjWev.s 			page 14


  45:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_obj_get_style_local_border_width(btn1, LV_BTN_PART_MAIN, LV_STATE_PRESSED, &result);`
  46:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  47:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *
  48:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Get the value from a style in a given state
  49:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * -------------------------------------------
  50:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - The same rules applies to the return value then for "lv_obj_get_style_local_...()" above
  51:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  52:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `int16_t weight = lv_style_get_border_width(&style1, LV_STATE_PRESSED, &result);`
  53:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `if(weight > 0) ...the property is found and loaded into result...`
  54:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  55:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * Set a value in a style in a given state
  56:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * ---------------------------------------
  57:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  * - For example
  58:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  *      `lv_style_set_border_width(&style1, LV_STATE_PRESSED, 2);`
  59:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****  */
  60:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  61:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  62:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  63:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  64:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return (value_type) _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);       
  65:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  66:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  67:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_GET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  68:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline value_type lv_obj_get_style_##func_name (const lv_obj_t * obj, uint8_t part)     
  69:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  70:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         return _lv_obj_get_style##style_type (obj, part, LV_STYLE_##prop_name);                    
  71:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  72:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  73:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_scalar(prop_name, func_name, value_type, style_type)                  
  74:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  75:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  76:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  77:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  78:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  79:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_LOCAL_nonscalar(prop_name, func_name, value_type, style_type)               
  80:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_obj_set_style_local_##func_name (lv_obj_t * obj, uint8_t part, lv_state_t
  81:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  82:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_obj_set_style_local##style_type (obj, part, LV_STYLE_##prop_name | (state << LV_STYLE_S
  83:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  84:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  85:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_scalar(prop_name, func_name, value_type, style_type)                        
  86:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  87:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  88:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  89:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  90:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  91:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _OBJ_SET_STYLE_nonscalar(prop_name, func_name, value_type, style_type)                     
  92:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     static inline void lv_style_set_##func_name (lv_style_t * style, lv_state_t state, value_type v
  93:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     {                                                                                              
  94:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****         _lv_style_set##style_type (style, LV_STYLE_##prop_name | (state << LV_STYLE_STATE_POS), val
  95:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     }
  96:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
  97:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** #define _LV_OBJ_STYLE_SET_GET_DECLARE(prop_name, func_name, value_type, style_type, scalar)        
  98:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_GET_STYLE_##scalar(prop_name, func_name, value_type, style_type)                          
  99:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_LOCAL_##scalar(prop_name, func_name, value_type, style_type)                    
 100:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h ****     _OBJ_SET_STYLE_##scalar(prop_name, func_name, value_type, style_type)
 101:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** 
ARM GAS  D:\Temp\ccqmjWev.s 			page 15


 102:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(RADIUS, radius, lv_style_int_t, _int, scalar)
 103:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(CLIP_CORNER, clip_corner, bool, _int, scalar)
 104:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(SIZE, size, lv_style_int_t, _int, scalar)
 105:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_WIDTH, transform_width, lv_style_int_t, _int, scalar)
 106:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_HEIGHT, transform_height, lv_style_int_t, _int, scalar)
 107:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ANGLE, transform_angle, lv_style_int_t, _int, scalar)
 108:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(TRANSFORM_ZOOM, transform_zoom, lv_style_int_t, _int, scalar)
 109:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(OPA_SCALE, opa_scale, lv_opa_t, _opa, scalar)
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_TOP, pad_top, lv_style_int_t, _int, scalar)
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 177              		.loc 2 112 1 view .LVU46
 178              	.LBB79:
 179              		.loc 2 112 1 view .LVU47
 180 002a 1222     		movs	r2, #18
 181              	.LVL14:
 182              		.loc 2 112 1 is_stmt 0 view .LVU48
 183 002c 0221     		movs	r1, #2
 184              	.LVL15:
 185              		.loc 2 112 1 view .LVU49
 186 002e 2846     		mov	r0, r5
 187              	.LVL16:
 188              		.loc 2 112 1 view .LVU50
 189 0030 FFF7FEFF 		bl	_lv_obj_get_style_int
 190              	.LVL17:
 191              		.loc 2 112 1 view .LVU51
 192 0034 8046     		mov	r8, r0
 193              	.LVL18:
 194              		.loc 2 112 1 view .LVU52
 195              	.LBE79:
 196              	.LBE78:
 514:lvgl/src/lv_widgets/lv_slider.c ****     lv_style_int_t knob_right = lv_obj_get_style_pad_right(slider,  LV_SLIDER_PART_KNOB);
 197              		.loc 1 514 5 is_stmt 1 view .LVU53
 198              	.LBB80:
 199              	.LBI80:
 113:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 200              		.loc 2 113 1 view .LVU54
 201              	.LBB81:
 202              		.loc 2 113 1 view .LVU55
 203 0036 1322     		movs	r2, #19
 204 0038 0221     		movs	r1, #2
 205 003a 2846     		mov	r0, r5
 206 003c FFF7FEFF 		bl	_lv_obj_get_style_int
 207              	.LVL19:
 208 0040 0646     		mov	r6, r0
 209              	.LVL20:
 210              		.loc 2 113 1 is_stmt 0 view .LVU56
 211              	.LBE81:
 212              	.LBE80:
 515:lvgl/src/lv_widgets/lv_slider.c ****     lv_style_int_t knob_top = lv_obj_get_style_pad_top(slider,    LV_SLIDER_PART_KNOB);
 213              		.loc 1 515 5 is_stmt 1 view .LVU57
 214              	.LBB82:
 215              	.LBI82:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 216              		.loc 2 110 1 view .LVU58
 217              	.LBB83:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
ARM GAS  D:\Temp\ccqmjWev.s 			page 16


 218              		.loc 2 110 1 view .LVU59
 219 0042 1022     		movs	r2, #16
 220 0044 0221     		movs	r1, #2
 221 0046 2846     		mov	r0, r5
 222 0048 FFF7FEFF 		bl	_lv_obj_get_style_int
 223              	.LVL21:
 224 004c 0746     		mov	r7, r0
 225              	.LVL22:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 226              		.loc 2 110 1 is_stmt 0 view .LVU60
 227              	.LBE83:
 228              	.LBE82:
 516:lvgl/src/lv_widgets/lv_slider.c ****     lv_style_int_t knob_bottom = lv_obj_get_style_pad_bottom(slider, LV_SLIDER_PART_KNOB);
 229              		.loc 1 516 5 is_stmt 1 view .LVU61
 230              	.LBB84:
 231              	.LBI84:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 232              		.loc 2 111 1 view .LVU62
 233              	.LBB85:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 234              		.loc 2 111 1 view .LVU63
 235 004e 1122     		movs	r2, #17
 236 0050 0221     		movs	r1, #2
 237 0052 2846     		mov	r0, r5
 238 0054 FFF7FEFF 		bl	_lv_obj_get_style_int
 239              	.LVL23:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 240              		.loc 2 111 1 is_stmt 0 view .LVU64
 241              	.LBE85:
 242              	.LBE84:
 517:lvgl/src/lv_widgets/lv_slider.c **** 
 518:lvgl/src/lv_widgets/lv_slider.c ****     /*Apply the paddings on the knob area*/
 519:lvgl/src/lv_widgets/lv_slider.c ****     knob_area->x1 -= knob_left;
 243              		.loc 1 519 5 is_stmt 1 view .LVU65
 244              		.loc 1 519 19 is_stmt 0 view .LVU66
 245 0058 2388     		ldrh	r3, [r4]
 246 005a A3EB0803 		sub	r3, r3, r8
 247 005e 2380     		strh	r3, [r4]	@ movhi
 520:lvgl/src/lv_widgets/lv_slider.c ****     knob_area->x2 += knob_right;
 248              		.loc 1 520 5 is_stmt 1 view .LVU67
 249              		.loc 1 520 19 is_stmt 0 view .LVU68
 250 0060 A388     		ldrh	r3, [r4, #4]
 251 0062 1E44     		add	r6, r6, r3
 252              	.LVL24:
 253              		.loc 1 520 19 view .LVU69
 254 0064 A680     		strh	r6, [r4, #4]	@ movhi
 521:lvgl/src/lv_widgets/lv_slider.c ****     knob_area->y1 -= knob_top;
 255              		.loc 1 521 5 is_stmt 1 view .LVU70
 256              		.loc 1 521 19 is_stmt 0 view .LVU71
 257 0066 6388     		ldrh	r3, [r4, #2]
 258 0068 DB1B     		subs	r3, r3, r7
 259 006a 6380     		strh	r3, [r4, #2]	@ movhi
 522:lvgl/src/lv_widgets/lv_slider.c ****     knob_area->y2 += knob_bottom;
 260              		.loc 1 522 5 is_stmt 1 view .LVU72
 261              		.loc 1 522 19 is_stmt 0 view .LVU73
 262 006c E388     		ldrh	r3, [r4, #6]
 263 006e 1844     		add	r0, r0, r3
ARM GAS  D:\Temp\ccqmjWev.s 			page 17


 264              	.LVL25:
 265              		.loc 1 522 19 view .LVU74
 266 0070 E080     		strh	r0, [r4, #6]	@ movhi
 523:lvgl/src/lv_widgets/lv_slider.c **** }
 267              		.loc 1 523 1 view .LVU75
 268 0072 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 269              	.LVL26:
 270              	.L12:
 507:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->y2 = knob_area->y1 + knob_size - 1;
 271              		.loc 1 507 9 is_stmt 1 view .LVU76
 507:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->y2 = knob_area->y1 + knob_size - 1;
 272              		.loc 1 507 23 is_stmt 0 view .LVU77
 273 0076 4B88     		ldrh	r3, [r1, #2]
 274              	.LVL27:
 507:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->y2 = knob_area->y1 + knob_size - 1;
 275              		.loc 1 507 23 view .LVU78
 276 0078 A3EB6203 		sub	r3, r3, r2, asr #1
 277 007c 9BB2     		uxth	r3, r3
 278 007e 4B80     		strh	r3, [r1, #2]	@ movhi
 508:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->x1 = slider->coords.x1;
 279              		.loc 1 508 9 is_stmt 1 view .LVU79
 508:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->x1 = slider->coords.x1;
 280              		.loc 1 508 39 is_stmt 0 view .LVU80
 281 0080 1344     		add	r3, r3, r2
 282 0082 9BB2     		uxth	r3, r3
 508:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->x1 = slider->coords.x1;
 283              		.loc 1 508 51 view .LVU81
 284 0084 013B     		subs	r3, r3, #1
 508:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->x1 = slider->coords.x1;
 285              		.loc 1 508 23 view .LVU82
 286 0086 CB80     		strh	r3, [r1, #6]	@ movhi
 509:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->x2 = slider->coords.x2;
 287              		.loc 1 509 9 is_stmt 1 view .LVU83
 509:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->x2 = slider->coords.x2;
 288              		.loc 1 509 39 is_stmt 0 view .LVU84
 289 0088 B0F91030 		ldrsh	r3, [r0, #16]
 509:lvgl/src/lv_widgets/lv_slider.c ****         knob_area->x2 = slider->coords.x2;
 290              		.loc 1 509 23 view .LVU85
 291 008c 0B80     		strh	r3, [r1]	@ movhi
 510:lvgl/src/lv_widgets/lv_slider.c ****     }
 292              		.loc 1 510 9 is_stmt 1 view .LVU86
 510:lvgl/src/lv_widgets/lv_slider.c ****     }
 293              		.loc 1 510 39 is_stmt 0 view .LVU87
 294 008e B0F91430 		ldrsh	r3, [r0, #20]
 510:lvgl/src/lv_widgets/lv_slider.c ****     }
 295              		.loc 1 510 23 view .LVU88
 296 0092 8B80     		strh	r3, [r1, #4]	@ movhi
 297 0094 C9E7     		b	.L13
 298              		.cfi_endproc
 299              	.LFE485:
 301              		.section	.text.lv_slider_draw_knob,"ax",%progbits
 302              		.align	1
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	lv_slider_draw_knob:
ARM GAS  D:\Temp\ccqmjWev.s 			page 18


 309              	.LVL28:
 310              	.LFB486:
 524:lvgl/src/lv_widgets/lv_slider.c **** 
 525:lvgl/src/lv_widgets/lv_slider.c **** static void lv_slider_draw_knob(lv_obj_t * slider, const lv_area_t * knob_area, const lv_area_t * c
 526:lvgl/src/lv_widgets/lv_slider.c **** {
 311              		.loc 1 526 1 is_stmt 1 view -0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 88
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		.loc 1 526 1 is_stmt 0 view .LVU90
 316 0000 70B5     		push	{r4, r5, r6, lr}
 317              	.LCFI2:
 318              		.cfi_def_cfa_offset 16
 319              		.cfi_offset 4, -16
 320              		.cfi_offset 5, -12
 321              		.cfi_offset 6, -8
 322              		.cfi_offset 14, -4
 323 0002 96B0     		sub	sp, sp, #88
 324              	.LCFI3:
 325              		.cfi_def_cfa_offset 104
 326 0004 0646     		mov	r6, r0
 327 0006 0C46     		mov	r4, r1
 328 0008 1546     		mov	r5, r2
 527:lvgl/src/lv_widgets/lv_slider.c ****     lv_draw_rect_dsc_t knob_rect_dsc;
 329              		.loc 1 527 5 is_stmt 1 view .LVU91
 528:lvgl/src/lv_widgets/lv_slider.c ****     lv_draw_rect_dsc_init(&knob_rect_dsc);
 330              		.loc 1 528 5 view .LVU92
 331 000a 01A8     		add	r0, sp, #4
 332              	.LVL29:
 333              		.loc 1 528 5 is_stmt 0 view .LVU93
 334 000c FFF7FEFF 		bl	lv_draw_rect_dsc_init
 335              	.LVL30:
 529:lvgl/src/lv_widgets/lv_slider.c ****     lv_obj_init_draw_rect_dsc(slider, LV_SLIDER_PART_KNOB, &knob_rect_dsc);
 336              		.loc 1 529 5 is_stmt 1 view .LVU94
 337 0010 01AA     		add	r2, sp, #4
 338 0012 0221     		movs	r1, #2
 339 0014 3046     		mov	r0, r6
 340 0016 FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 341              	.LVL31:
 530:lvgl/src/lv_widgets/lv_slider.c **** 
 531:lvgl/src/lv_widgets/lv_slider.c ****     lv_draw_rect(knob_area, clip_area, &knob_rect_dsc);
 342              		.loc 1 531 5 view .LVU95
 343 001a 01AA     		add	r2, sp, #4
 344 001c 2946     		mov	r1, r5
 345 001e 2046     		mov	r0, r4
 346 0020 FFF7FEFF 		bl	lv_draw_rect
 347              	.LVL32:
 532:lvgl/src/lv_widgets/lv_slider.c **** }
 348              		.loc 1 532 1 is_stmt 0 view .LVU96
 349 0024 16B0     		add	sp, sp, #88
 350              	.LCFI4:
 351              		.cfi_def_cfa_offset 16
 352              		@ sp needed
 353 0026 70BD     		pop	{r4, r5, r6, pc}
 354              		.loc 1 532 1 view .LVU97
 355              		.cfi_endproc
 356              	.LFE486:
ARM GAS  D:\Temp\ccqmjWev.s 			page 19


 358              		.section	.text.lv_slider_design,"ax",%progbits
 359              		.align	1
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv4-sp-d16
 365              	lv_slider_design:
 366              	.LVL33:
 367              	.LFB482:
 162:lvgl/src/lv_widgets/lv_slider.c ****     /*Return false if the object is not covers the mask_p area*/
 368              		.loc 1 162 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 164:lvgl/src/lv_widgets/lv_slider.c ****         return LV_DESIGN_RES_NOT_COVER;
 372              		.loc 1 164 5 view .LVU99
 164:lvgl/src/lv_widgets/lv_slider.c ****         return LV_DESIGN_RES_NOT_COVER;
 373              		.loc 1 164 7 is_stmt 0 view .LVU100
 374 0000 022A     		cmp	r2, #2
 375 0002 00F0C780 		beq	.L43
 162:lvgl/src/lv_widgets/lv_slider.c ****     /*Return false if the object is not covers the mask_p area*/
 376              		.loc 1 162 1 view .LVU101
 377 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 378              	.LCFI5:
 379              		.cfi_def_cfa_offset 36
 380              		.cfi_offset 4, -36
 381              		.cfi_offset 5, -32
 382              		.cfi_offset 6, -28
 383              		.cfi_offset 7, -24
 384              		.cfi_offset 8, -20
 385              		.cfi_offset 9, -16
 386              		.cfi_offset 10, -12
 387              		.cfi_offset 11, -8
 388              		.cfi_offset 14, -4
 389 000a 83B0     		sub	sp, sp, #12
 390              	.LCFI6:
 391              		.cfi_def_cfa_offset 48
 392 000c 0D46     		mov	r5, r1
 393 000e 0446     		mov	r4, r0
 168:lvgl/src/lv_widgets/lv_slider.c ****         /* The ancestor design function will draw the background and the indicator.
 394              		.loc 1 168 10 is_stmt 1 view .LVU102
 168:lvgl/src/lv_widgets/lv_slider.c ****         /* The ancestor design function will draw the background and the indicator.
 395              		.loc 1 168 12 is_stmt 0 view .LVU103
 396 0010 002A     		cmp	r2, #0
 397 0012 40F0B780 		bne	.L19
 398              	.LBB86:
 171:lvgl/src/lv_widgets/lv_slider.c **** 
 399              		.loc 1 171 9 is_stmt 1 view .LVU104
 400 0016 604B     		ldr	r3, .L61
 401 0018 1B68     		ldr	r3, [r3]
 402 001a 9847     		blx	r3
 403              	.LVL34:
 173:lvgl/src/lv_widgets/lv_slider.c ****         lv_bidi_dir_t base_dir = lv_obj_get_base_dir(slider);
 404              		.loc 1 173 9 view .LVU105
 173:lvgl/src/lv_widgets/lv_slider.c ****         lv_bidi_dir_t base_dir = lv_obj_get_base_dir(slider);
 405              		.loc 1 173 33 is_stmt 0 view .LVU106
 406 001c 2046     		mov	r0, r4
ARM GAS  D:\Temp\ccqmjWev.s 			page 20


 407 001e FFF7FEFF 		bl	lv_obj_get_ext_attr
 408              	.LVL35:
 409 0022 0646     		mov	r6, r0
 410              	.LVL36:
 174:lvgl/src/lv_widgets/lv_slider.c **** 
 411              		.loc 1 174 9 is_stmt 1 view .LVU107
 174:lvgl/src/lv_widgets/lv_slider.c **** 
 412              		.loc 1 174 34 is_stmt 0 view .LVU108
 413 0024 2046     		mov	r0, r4
 414              	.LVL37:
 174:lvgl/src/lv_widgets/lv_slider.c **** 
 415              		.loc 1 174 34 view .LVU109
 416 0026 FFF7FEFF 		bl	lv_obj_get_base_dir
 417              	.LVL38:
 418 002a 8346     		mov	fp, r0
 419              	.LVL39:
 176:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t objh = lv_obj_get_height(slider);
 420              		.loc 1 176 9 is_stmt 1 view .LVU110
 176:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t objh = lv_obj_get_height(slider);
 421              		.loc 1 176 27 is_stmt 0 view .LVU111
 422 002c 2046     		mov	r0, r4
 423 002e FFF7FEFF 		bl	lv_obj_get_width
 424              	.LVL40:
 425 0032 8046     		mov	r8, r0
 426              	.LVL41:
 177:lvgl/src/lv_widgets/lv_slider.c ****         bool hor = objw >= objh ? true : false;
 427              		.loc 1 177 9 is_stmt 1 view .LVU112
 177:lvgl/src/lv_widgets/lv_slider.c ****         bool hor = objw >= objh ? true : false;
 428              		.loc 1 177 27 is_stmt 0 view .LVU113
 429 0034 2046     		mov	r0, r4
 430 0036 FFF7FEFF 		bl	lv_obj_get_height
 431              	.LVL42:
 432 003a 0746     		mov	r7, r0
 433              	.LVL43:
 178:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t knob_size = hor ? objh : objw;
 434              		.loc 1 178 9 is_stmt 1 view .LVU114
 178:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t knob_size = hor ? objh : objw;
 435              		.loc 1 178 14 is_stmt 0 view .LVU115
 436 003c 8045     		cmp	r8, r0
 437 003e ACBF     		ite	ge
 438 0040 4FF0010A 		movge	r10, #1
 439 0044 4FF0000A 		movlt	r10, #0
 440              	.LVL44:
 179:lvgl/src/lv_widgets/lv_slider.c ****         bool sym = false;
 441              		.loc 1 179 9 is_stmt 1 view .LVU116
 179:lvgl/src/lv_widgets/lv_slider.c ****         bool sym = false;
 442              		.loc 1 179 20 is_stmt 0 view .LVU117
 443 0048 23DB     		blt	.L44
 444 004a 8146     		mov	r9, r0
 445              	.L20:
 446              	.LVL45:
 180:lvgl/src/lv_widgets/lv_slider.c ****         if(ext->bar.type == LV_BAR_TYPE_SYMMETRICAL && ext->bar.min_value < 0 && ext->bar.max_value
 447              		.loc 1 180 9 is_stmt 1 discriminator 4 view .LVU118
 181:lvgl/src/lv_widgets/lv_slider.c **** 
 448              		.loc 1 181 9 discriminator 4 view .LVU119
 181:lvgl/src/lv_widgets/lv_slider.c **** 
 449              		.loc 1 181 26 is_stmt 0 discriminator 4 view .LVU120
ARM GAS  D:\Temp\ccqmjWev.s 			page 21


 450 004c 96F82C30 		ldrb	r3, [r6, #44]	@ zero_extendqisi2
 451 0050 03F00303 		and	r3, r3, #3
 181:lvgl/src/lv_widgets/lv_slider.c **** 
 452              		.loc 1 181 11 discriminator 4 view .LVU121
 453 0054 012B     		cmp	r3, #1
 454 0056 1ED0     		beq	.L53
 180:lvgl/src/lv_widgets/lv_slider.c ****         if(ext->bar.type == LV_BAR_TYPE_SYMMETRICAL && ext->bar.min_value < 0 && ext->bar.max_value
 455              		.loc 1 180 14 view .LVU122
 456 0058 0023     		movs	r3, #0
 457              	.L21:
 458              	.LVL46:
 183:lvgl/src/lv_widgets/lv_slider.c **** 
 459              		.loc 1 183 9 is_stmt 1 view .LVU123
 186:lvgl/src/lv_widgets/lv_slider.c ****             if(!sym) {
 460              		.loc 1 186 9 view .LVU124
 186:lvgl/src/lv_widgets/lv_slider.c ****             if(!sym) {
 461              		.loc 1 186 11 is_stmt 0 view .LVU125
 462 005a B845     		cmp	r8, r7
 463 005c 46DB     		blt	.L22
 187:lvgl/src/lv_widgets/lv_slider.c ****                 knob_area.x1 = LV_SLIDER_KNOB_COORD(hor, base_dir == LV_BIDI_DIR_RTL, ext->bar.indi
 464              		.loc 1 187 13 is_stmt 1 view .LVU126
 187:lvgl/src/lv_widgets/lv_slider.c ****                 knob_area.x1 = LV_SLIDER_KNOB_COORD(hor, base_dir == LV_BIDI_DIR_RTL, ext->bar.indi
 465              		.loc 1 187 15 is_stmt 0 view .LVU127
 466 005e 5BBB     		cbnz	r3, .L23
 188:lvgl/src/lv_widgets/lv_slider.c ****             }
 467              		.loc 1 188 17 is_stmt 1 discriminator 1 view .LVU128
 188:lvgl/src/lv_widgets/lv_slider.c ****             }
 468              		.loc 1 188 30 is_stmt 0 discriminator 1 view .LVU129
 469 0060 BBF1010F 		cmp	fp, #1
 470 0064 25D0     		beq	.L54
 188:lvgl/src/lv_widgets/lv_slider.c ****             }
 471              		.loc 1 188 30 discriminator 4 view .LVU130
 472 0066 B6F90C30 		ldrsh	r3, [r6, #12]
 473              	.LVL47:
 474              	.L25:
 188:lvgl/src/lv_widgets/lv_slider.c ****             }
 475              		.loc 1 188 30 discriminator 6 view .LVU131
 476 006a ADF80030 		strh	r3, [sp]	@ movhi
 477              	.L26:
 213:lvgl/src/lv_widgets/lv_slider.c **** 
 478              		.loc 1 213 9 is_stmt 1 view .LVU132
 479 006e 5346     		mov	r3, r10
 480 0070 4A46     		mov	r2, r9
 481 0072 6946     		mov	r1, sp
 482 0074 2046     		mov	r0, r4
 483              	.LVL48:
 213:lvgl/src/lv_widgets/lv_slider.c **** 
 484              		.loc 1 213 9 is_stmt 0 view .LVU133
 485 0076 FFF7FEFF 		bl	lv_slider_position_knob
 486              	.LVL49:
 215:lvgl/src/lv_widgets/lv_slider.c ****         lv_slider_draw_knob(slider, &knob_area, clip_area);
 487              		.loc 1 215 9 is_stmt 1 view .LVU134
 488 007a 06F14801 		add	r1, r6, #72
 489              	.LVL50:
 490              	.LBB87:
 491              	.LBI87:
 492              		.file 3 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_area.h"
ARM GAS  D:\Temp\ccqmjWev.s 			page 22


   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @file lv_area.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_AREA_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <string.h>
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdbool.h>
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include <stdint.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #include "lv_mem.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*********************
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      DEFINES
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *********************/
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /*To avoid overflow don't let the max ranges (reduce with 1000) */
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - 1000))
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  *      TYPEDEFS
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Represents a point on the screen.
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x;
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y;
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_point_t;
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Represents an area of the screen. */
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef struct {
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x1;
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y1;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t x2;
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     lv_coord_t y2;
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** } lv_area_t;
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /** Alignments */
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** enum {
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_CENTER = 0,
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_LEFT,
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_MID,
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_TOP_RIGHT,
ARM GAS  D:\Temp\ccqmjWev.s 			page 23


  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_LEFT,
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_MID,
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_BOTTOM_RIGHT,
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_LEFT_MID,
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_IN_RIGHT_MID,
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** };
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** typedef uint8_t lv_align_t;
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**********************
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * GLOBAL PROTOTYPES
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  **********************/
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Initialize an area
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x1 left coordinate of the area
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y1 top coordinate of the area
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param x2 right coordinate of the area
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param y2 bottom coordinate of the area
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Copy an area
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param dest pointer to the destination area
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param src pointer to the source area
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 493              		.loc 3 97 20 view .LVU135
 494              	.LBE87:
 495              	.LBE86:
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     _lv_memcpy_small(dest, src, sizeof(lv_area_t));
 496              		.loc 3 99 5 view .LVU136
 497              	.LBB106:
 498              	.LBB94:
 499              	.LBB88:
 500              	.LBI88:
 501              		.file 4 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_mem.h"
   1:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
   2:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @file lv_mem.h
   3:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *
   4:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
   5:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
   6:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifndef LV_MEM_H
ARM GAS  D:\Temp\ccqmjWev.s 			page 24


   7:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #define LV_MEM_H
   8:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
   9:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifdef __cplusplus
  10:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** extern "C" {
  11:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  12:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  13:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /*********************
  14:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      INCLUDES
  15:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *********************/
  16:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "../lv_conf_internal.h"
  17:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  18:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <stdint.h>
  19:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <stddef.h>
  20:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "lv_log.h"
  21:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include "lv_types.h"
  22:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  23:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
  24:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #include <string.h>
  25:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  26:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  27:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /*********************
  28:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      DEFINES
  29:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *********************/
  30:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  31:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #ifndef LV_MEM_BUF_MAX_NUM
  32:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #define LV_MEM_BUF_MAX_NUM    16
  33:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #endif
  34:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  35:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**********************
  36:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *      TYPEDEFS
  37:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  **********************/
  38:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  39:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  40:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Heap information structure.
  41:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  42:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef struct {
  43:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t total_size; /**< Total heap size */
  44:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_cnt;
  45:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_size; /**< Size of available memory */
  46:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t free_biggest_size;
  47:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t used_cnt;
  48:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used */
  49:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t used_pct; /**< Percentage used */
  50:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation */
  51:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** } lv_mem_monitor_t;
  52:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  53:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef struct {
  54:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     void * p;
  55:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint16_t size;
  56:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t used    : 1;
  57:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** } lv_mem_buf_t;
  58:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  59:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  60:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** extern lv_mem_buf_arr_t _lv_mem_buf;
  61:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  62:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**********************
  63:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * GLOBAL PROTOTYPES
ARM GAS  D:\Temp\ccqmjWev.s 			page 25


  64:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  **********************/
  65:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  66:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  67:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  68:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  69:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_init(void);
  70:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  71:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  72:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
  73:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  74:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  75:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_deinit(void);
  76:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  77:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  78:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Allocate a memory dynamically
  79:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param size size of the memory to allocate in bytes
  80:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return pointer to the allocated memory
  81:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  82:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * lv_mem_alloc(size_t size);
  83:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  84:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  85:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Free an allocated data
  86:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory
  87:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  88:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_free(const void * data);
  89:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  90:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
  91:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  92:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory.
  93:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Its content will be copied to the new memory block and freed
  94:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param new_size the desired new size in byte
  95:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return pointer to the new memory
  96:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  98:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
  99:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Join the adjacent free memory blocks
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_defrag(void);
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** lv_res_t lv_mem_test(void);
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Give information about the work memory of dynamic allocation
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param mon_p pointer to a dm_mon_p variable,
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  *              the result of the analysis will be stored here
 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Give the size of an allocated memory
 119:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param data pointer to an allocated memory
 120:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @return the size of data memory in bytes
ARM GAS  D:\Temp\ccqmjWev.s 			page 26


 121:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 122:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** uint32_t _lv_mem_get_size(const void * data);
 123:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 124:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 125:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Get a temporal buffer with the given size.
 126:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param size the required size
 127:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 128:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void * _lv_mem_buf_get(uint32_t size);
 129:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 130:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 131:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Release a memory buffer
 132:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param p buffer to release
 133:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 134:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_buf_release(void * p);
 135:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 136:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 137:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Free all memory buffers
 138:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 139:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** void _lv_mem_buf_free_all(void);
 140:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 141:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** //! @cond Doxygen_Suppress
 142:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 143:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 144:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 145:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 146:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memcpy
 147:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 148:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 149:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 150:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 151:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void * _lv_memcpy(void * dst, const void * src, size_t len)
 152:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 153:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return memcpy(dst, src, len);
 154:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 155:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 156:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 157:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memcpy
 158:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 159:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 160:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 161:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 162:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void * _lv_memcpy_small(void * dst, const void * src, size_t len)
 163:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 164:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return memcpy(dst, src, len);
 165:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 166:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 167:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 168:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset
 169:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 170:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param v value to set [0..255]
 171:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 172:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 173:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset(void * dst, uint8_t v, size_t len)
 174:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 175:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, v, len);
 176:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 177:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
ARM GAS  D:\Temp\ccqmjWev.s 			page 27


 178:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 179:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 180:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 181:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 182:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 183:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset_00(void * dst, size_t len)
 184:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 185:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, 0x00, len);
 186:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 187:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 188:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 189:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 190:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 191:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to set
 192:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 193:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** static inline void _lv_memset_ff(void * dst, size_t len)
 194:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 195:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     memset(dst, 0xFF, len);
 196:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** }
 197:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 198:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** #else
 199:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 200:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 201:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 202:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 203:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 204:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 205:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * _lv_memcpy(void * dst, const void * src, size_t len);
 206:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 207:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** /**
 208:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 209:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param dst pointer to the destination buffer
 210:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param src pointer to the source buffer
 211:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  * @param len number of byte to copy
 212:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****  */
 213:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * _lv_memcpy_small(void * dst, const void * src, size_t le
 502              		.loc 4 213 44 view .LVU137
 503              	.LBB89:
 214:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 504              		.loc 4 215 5 view .LVU138
 216:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 505              		.loc 4 216 5 view .LVU139
 217:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     while(len) {
 506              		.loc 4 218 5 view .LVU140
 216:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 507              		.loc 4 216 21 is_stmt 0 view .LVU141
 508 007e 6A46     		mov	r2, sp
 509              	.LBE89:
 510              	.LBE88:
 511              	.LBE94:
 215:lvgl/src/lv_widgets/lv_slider.c ****         lv_slider_draw_knob(slider, &knob_area, clip_area);
 512              		.loc 1 215 9 view .LVU142
 513 0080 0823     		movs	r3, #8
 514              	.LVL51:
 515              	.L34:
ARM GAS  D:\Temp\ccqmjWev.s 			page 28


 516              	.LBB95:
 517              	.LBB92:
 518              	.LBB90:
 519              		.loc 4 218 10 view .LVU143
 520 0082 002B     		cmp	r3, #0
 521 0084 46D0     		beq	.L55
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 522              		.loc 4 219 9 is_stmt 1 view .LVU144
 523              		.loc 4 219 15 is_stmt 0 view .LVU145
 524 0086 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 525              	.LVL52:
 526              		.loc 4 219 13 view .LVU146
 527 008a 01F8010B 		strb	r0, [r1], #1
 528              	.LVL53:
 220:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 529              		.loc 4 220 9 is_stmt 1 view .LVU147
 221:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         s8++;
 530              		.loc 4 221 9 view .LVU148
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         len--;
 531              		.loc 4 222 9 view .LVU149
 532              		.loc 4 222 12 is_stmt 0 view .LVU150
 533 008e 013B     		subs	r3, r3, #1
 534              	.LVL54:
 535              		.loc 4 222 12 view .LVU151
 536 0090 F7E7     		b	.L34
 537              	.LVL55:
 538              	.L44:
 539              		.loc 4 222 12 view .LVU152
 540              	.LBE90:
 541              	.LBE92:
 542              	.LBE95:
 179:lvgl/src/lv_widgets/lv_slider.c ****         bool sym = false;
 543              		.loc 1 179 20 view .LVU153
 544 0092 C146     		mov	r9, r8
 545 0094 DAE7     		b	.L20
 546              	.LVL56:
 547              	.L53:
 181:lvgl/src/lv_widgets/lv_slider.c **** 
 548              		.loc 1 181 64 discriminator 1 view .LVU154
 549 0096 B6F90230 		ldrsh	r3, [r6, #2]
 181:lvgl/src/lv_widgets/lv_slider.c **** 
 550              		.loc 1 181 53 discriminator 1 view .LVU155
 551 009a 002B     		cmp	r3, #0
 552 009c 01DB     		blt	.L56
 180:lvgl/src/lv_widgets/lv_slider.c ****         if(ext->bar.type == LV_BAR_TYPE_SYMMETRICAL && ext->bar.min_value < 0 && ext->bar.max_value
 553              		.loc 1 180 14 view .LVU156
 554 009e 0023     		movs	r3, #0
 555 00a0 DBE7     		b	.L21
 556              	.L56:
 181:lvgl/src/lv_widgets/lv_slider.c **** 
 557              		.loc 1 181 90 discriminator 2 view .LVU157
 558 00a2 B6F90430 		ldrsh	r3, [r6, #4]
 181:lvgl/src/lv_widgets/lv_slider.c **** 
 559              		.loc 1 181 79 discriminator 2 view .LVU158
 560 00a6 002B     		cmp	r3, #0
 561 00a8 01DD     		ble	.L57
 181:lvgl/src/lv_widgets/lv_slider.c **** 
ARM GAS  D:\Temp\ccqmjWev.s 			page 29


 562              		.loc 1 181 110 view .LVU159
 563 00aa 0123     		movs	r3, #1
 564 00ac D5E7     		b	.L21
 565              	.L57:
 180:lvgl/src/lv_widgets/lv_slider.c ****         if(ext->bar.type == LV_BAR_TYPE_SYMMETRICAL && ext->bar.min_value < 0 && ext->bar.max_value
 566              		.loc 1 180 14 view .LVU160
 567 00ae 0023     		movs	r3, #0
 568 00b0 D3E7     		b	.L21
 569              	.LVL57:
 570              	.L54:
 188:lvgl/src/lv_widgets/lv_slider.c ****             }
 571              		.loc 1 188 30 discriminator 3 view .LVU161
 572 00b2 B6F90830 		ldrsh	r3, [r6, #8]
 573              	.LVL58:
 188:lvgl/src/lv_widgets/lv_slider.c ****             }
 574              		.loc 1 188 30 discriminator 3 view .LVU162
 575 00b6 D8E7     		b	.L25
 576              	.LVL59:
 577              	.L23:
 191:lvgl/src/lv_widgets/lv_slider.c ****                     knob_area.x1 = LV_SLIDER_KNOB_COORD(hor, base_dir == LV_BIDI_DIR_RTL, ext->bar.
 578              		.loc 1 191 17 is_stmt 1 view .LVU163
 191:lvgl/src/lv_widgets/lv_slider.c ****                     knob_area.x1 = LV_SLIDER_KNOB_COORD(hor, base_dir == LV_BIDI_DIR_RTL, ext->bar.
 579              		.loc 1 191 28 is_stmt 0 view .LVU164
 580 00b8 B6F90030 		ldrsh	r3, [r6]
 581              	.LVL60:
 191:lvgl/src/lv_widgets/lv_slider.c ****                     knob_area.x1 = LV_SLIDER_KNOB_COORD(hor, base_dir == LV_BIDI_DIR_RTL, ext->bar.
 582              		.loc 1 191 19 view .LVU165
 583 00bc 002B     		cmp	r3, #0
 584 00be 0ADB     		blt	.L27
 192:lvgl/src/lv_widgets/lv_slider.c ****                 }
 585              		.loc 1 192 21 is_stmt 1 discriminator 1 view .LVU166
 192:lvgl/src/lv_widgets/lv_slider.c ****                 }
 586              		.loc 1 192 34 is_stmt 0 discriminator 1 view .LVU167
 587 00c0 BBF1010F 		cmp	fp, #1
 588 00c4 04D0     		beq	.L58
 192:lvgl/src/lv_widgets/lv_slider.c ****                 }
 589              		.loc 1 192 34 discriminator 4 view .LVU168
 590 00c6 B6F90C30 		ldrsh	r3, [r6, #12]
 591              	.L29:
 192:lvgl/src/lv_widgets/lv_slider.c ****                 }
 592              		.loc 1 192 34 discriminator 6 view .LVU169
 593 00ca ADF80030 		strh	r3, [sp]	@ movhi
 594 00ce CEE7     		b	.L26
 595              	.L58:
 192:lvgl/src/lv_widgets/lv_slider.c ****                 }
 596              		.loc 1 192 34 discriminator 3 view .LVU170
 597 00d0 B6F90830 		ldrsh	r3, [r6, #8]
 598 00d4 F9E7     		b	.L29
 599              	.L27:
 195:lvgl/src/lv_widgets/lv_slider.c ****                 }
 600              		.loc 1 195 21 is_stmt 1 discriminator 1 view .LVU171
 195:lvgl/src/lv_widgets/lv_slider.c ****                 }
 601              		.loc 1 195 34 is_stmt 0 discriminator 1 view .LVU172
 602 00d6 BBF1010F 		cmp	fp, #1
 603 00da 04D0     		beq	.L30
 195:lvgl/src/lv_widgets/lv_slider.c ****                 }
 604              		.loc 1 195 34 discriminator 3 view .LVU173
ARM GAS  D:\Temp\ccqmjWev.s 			page 30


 605 00dc B6F90830 		ldrsh	r3, [r6, #8]
 606              	.L31:
 195:lvgl/src/lv_widgets/lv_slider.c ****                 }
 607              		.loc 1 195 34 discriminator 6 view .LVU174
 608 00e0 ADF80030 		strh	r3, [sp]	@ movhi
 609 00e4 C3E7     		b	.L26
 610              	.L30:
 195:lvgl/src/lv_widgets/lv_slider.c ****                 }
 611              		.loc 1 195 34 discriminator 4 view .LVU175
 612 00e6 B6F90C30 		ldrsh	r3, [r6, #12]
 613 00ea F9E7     		b	.L31
 614              	.LVL61:
 615              	.L22:
 201:lvgl/src/lv_widgets/lv_slider.c ****                 knob_area.y1 = ext->bar.indic_area.y1;
 616              		.loc 1 201 13 is_stmt 1 view .LVU176
 201:lvgl/src/lv_widgets/lv_slider.c ****                 knob_area.y1 = ext->bar.indic_area.y1;
 617              		.loc 1 201 15 is_stmt 0 view .LVU177
 618 00ec 23B9     		cbnz	r3, .L32
 202:lvgl/src/lv_widgets/lv_slider.c ****             }
 619              		.loc 1 202 17 is_stmt 1 view .LVU178
 202:lvgl/src/lv_widgets/lv_slider.c ****             }
 620              		.loc 1 202 51 is_stmt 0 view .LVU179
 621 00ee B6F90A30 		ldrsh	r3, [r6, #10]
 622              	.LVL62:
 202:lvgl/src/lv_widgets/lv_slider.c ****             }
 623              		.loc 1 202 30 view .LVU180
 624 00f2 ADF80230 		strh	r3, [sp, #2]	@ movhi
 625 00f6 BAE7     		b	.L26
 626              	.LVL63:
 627              	.L32:
 205:lvgl/src/lv_widgets/lv_slider.c ****                     knob_area.y1 = ext->bar.indic_area.y1;
 628              		.loc 1 205 17 is_stmt 1 view .LVU181
 205:lvgl/src/lv_widgets/lv_slider.c ****                     knob_area.y1 = ext->bar.indic_area.y1;
 629              		.loc 1 205 28 is_stmt 0 view .LVU182
 630 00f8 B6F90030 		ldrsh	r3, [r6]
 631              	.LVL64:
 205:lvgl/src/lv_widgets/lv_slider.c ****                     knob_area.y1 = ext->bar.indic_area.y1;
 632              		.loc 1 205 19 view .LVU183
 633 00fc 002B     		cmp	r3, #0
 634 00fe 04DB     		blt	.L33
 206:lvgl/src/lv_widgets/lv_slider.c ****                 }
 635              		.loc 1 206 21 is_stmt 1 view .LVU184
 206:lvgl/src/lv_widgets/lv_slider.c ****                 }
 636              		.loc 1 206 55 is_stmt 0 view .LVU185
 637 0100 B6F90A30 		ldrsh	r3, [r6, #10]
 206:lvgl/src/lv_widgets/lv_slider.c ****                 }
 638              		.loc 1 206 34 view .LVU186
 639 0104 ADF80230 		strh	r3, [sp, #2]	@ movhi
 640 0108 B1E7     		b	.L26
 641              	.L33:
 209:lvgl/src/lv_widgets/lv_slider.c ****                 }
 642              		.loc 1 209 21 is_stmt 1 view .LVU187
 209:lvgl/src/lv_widgets/lv_slider.c ****                 }
 643              		.loc 1 209 55 is_stmt 0 view .LVU188
 644 010a B6F90E30 		ldrsh	r3, [r6, #14]
 209:lvgl/src/lv_widgets/lv_slider.c ****                 }
 645              		.loc 1 209 34 view .LVU189
ARM GAS  D:\Temp\ccqmjWev.s 			page 31


 646 010e ADF80230 		strh	r3, [sp, #2]	@ movhi
 647 0112 ACE7     		b	.L26
 648              	.LVL65:
 649              	.L55:
 650              	.LBB96:
 651              	.LBB93:
 652              	.LBB91:
 223:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 224:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 225:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     return dst;
 653              		.loc 4 225 5 is_stmt 1 view .LVU190
 654              		.loc 4 225 5 is_stmt 0 view .LVU191
 655              	.LBE91:
 656              	.LBE93:
 657              	.LBE96:
 216:lvgl/src/lv_widgets/lv_slider.c **** 
 658              		.loc 1 216 9 is_stmt 1 view .LVU192
 659 0114 2A46     		mov	r2, r5
 660 0116 6946     		mov	r1, sp
 661 0118 2046     		mov	r0, r4
 662 011a FFF7FEFF 		bl	lv_slider_draw_knob
 663              	.LVL66:
 218:lvgl/src/lv_widgets/lv_slider.c ****             /* Draw a second knob for the start_value side */
 664              		.loc 1 218 9 view .LVU193
 665              	.LBB97:
 666              	.LBI97:
 667              		.file 5 "lvgl/src/lv_widgets/lv_slider.h"
   1:lvgl/src/lv_widgets/lv_slider.h **** /**
   2:lvgl/src/lv_widgets/lv_slider.h ****  * @file lv_slider.h
   3:lvgl/src/lv_widgets/lv_slider.h ****  *
   4:lvgl/src/lv_widgets/lv_slider.h ****  */
   5:lvgl/src/lv_widgets/lv_slider.h **** 
   6:lvgl/src/lv_widgets/lv_slider.h **** #ifndef LV_SLIDER_H
   7:lvgl/src/lv_widgets/lv_slider.h **** #define LV_SLIDER_H
   8:lvgl/src/lv_widgets/lv_slider.h **** 
   9:lvgl/src/lv_widgets/lv_slider.h **** #ifdef __cplusplus
  10:lvgl/src/lv_widgets/lv_slider.h **** extern "C" {
  11:lvgl/src/lv_widgets/lv_slider.h **** #endif
  12:lvgl/src/lv_widgets/lv_slider.h **** 
  13:lvgl/src/lv_widgets/lv_slider.h **** /*********************
  14:lvgl/src/lv_widgets/lv_slider.h ****  *      INCLUDES
  15:lvgl/src/lv_widgets/lv_slider.h ****  *********************/
  16:lvgl/src/lv_widgets/lv_slider.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_widgets/lv_slider.h **** 
  18:lvgl/src/lv_widgets/lv_slider.h **** #if LV_USE_SLIDER != 0
  19:lvgl/src/lv_widgets/lv_slider.h **** 
  20:lvgl/src/lv_widgets/lv_slider.h **** /*Testing of dependencies*/
  21:lvgl/src/lv_widgets/lv_slider.h **** #if LV_USE_BAR == 0
  22:lvgl/src/lv_widgets/lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:lvgl/src/lv_widgets/lv_slider.h **** #endif
  24:lvgl/src/lv_widgets/lv_slider.h **** 
  25:lvgl/src/lv_widgets/lv_slider.h **** #include "../lv_core/lv_obj.h"
  26:lvgl/src/lv_widgets/lv_slider.h **** #include "lv_bar.h"
  27:lvgl/src/lv_widgets/lv_slider.h **** 
  28:lvgl/src/lv_widgets/lv_slider.h **** /*********************
  29:lvgl/src/lv_widgets/lv_slider.h ****  *      DEFINES
  30:lvgl/src/lv_widgets/lv_slider.h ****  *********************/
ARM GAS  D:\Temp\ccqmjWev.s 			page 32


  31:lvgl/src/lv_widgets/lv_slider.h **** 
  32:lvgl/src/lv_widgets/lv_slider.h **** /**********************
  33:lvgl/src/lv_widgets/lv_slider.h ****  *      TYPEDEFS
  34:lvgl/src/lv_widgets/lv_slider.h ****  **********************/
  35:lvgl/src/lv_widgets/lv_slider.h **** 
  36:lvgl/src/lv_widgets/lv_slider.h **** enum {
  37:lvgl/src/lv_widgets/lv_slider.h ****     LV_SLIDER_TYPE_NORMAL,
  38:lvgl/src/lv_widgets/lv_slider.h ****     LV_SLIDER_TYPE_SYMMETRICAL,
  39:lvgl/src/lv_widgets/lv_slider.h ****     LV_SLIDER_TYPE_RANGE
  40:lvgl/src/lv_widgets/lv_slider.h **** };
  41:lvgl/src/lv_widgets/lv_slider.h **** typedef uint8_t lv_slider_type_t;
  42:lvgl/src/lv_widgets/lv_slider.h **** 
  43:lvgl/src/lv_widgets/lv_slider.h **** /*Data of slider*/
  44:lvgl/src/lv_widgets/lv_slider.h **** typedef struct {
  45:lvgl/src/lv_widgets/lv_slider.h ****     lv_bar_ext_t bar; /*Ext. of ancestor*/
  46:lvgl/src/lv_widgets/lv_slider.h ****     /*New data for this type */
  47:lvgl/src/lv_widgets/lv_slider.h ****     lv_style_list_t style_knob; /*Style of the knob*/
  48:lvgl/src/lv_widgets/lv_slider.h ****     lv_area_t left_knob_area;
  49:lvgl/src/lv_widgets/lv_slider.h ****     lv_area_t right_knob_area;
  50:lvgl/src/lv_widgets/lv_slider.h ****     int16_t * value_to_set; /* Which bar value to set */
  51:lvgl/src/lv_widgets/lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  52:lvgl/src/lv_widgets/lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  53:lvgl/src/lv_widgets/lv_slider.h **** } lv_slider_ext_t;
  54:lvgl/src/lv_widgets/lv_slider.h **** 
  55:lvgl/src/lv_widgets/lv_slider.h **** /** Built-in styles of slider*/
  56:lvgl/src/lv_widgets/lv_slider.h **** enum {
  57:lvgl/src/lv_widgets/lv_slider.h ****     LV_SLIDER_PART_BG, /** Slider background style. */
  58:lvgl/src/lv_widgets/lv_slider.h ****     LV_SLIDER_PART_INDIC, /** Slider indicator (filled area) style. */
  59:lvgl/src/lv_widgets/lv_slider.h ****     LV_SLIDER_PART_KNOB, /** Slider knob style. */
  60:lvgl/src/lv_widgets/lv_slider.h **** };
  61:lvgl/src/lv_widgets/lv_slider.h **** 
  62:lvgl/src/lv_widgets/lv_slider.h **** /**********************
  63:lvgl/src/lv_widgets/lv_slider.h ****  * GLOBAL PROTOTYPES
  64:lvgl/src/lv_widgets/lv_slider.h ****  **********************/
  65:lvgl/src/lv_widgets/lv_slider.h **** 
  66:lvgl/src/lv_widgets/lv_slider.h **** /**
  67:lvgl/src/lv_widgets/lv_slider.h ****  * Create a slider objects
  68:lvgl/src/lv_widgets/lv_slider.h ****  * @param par pointer to an object, it will be the parent of the new slider
  69:lvgl/src/lv_widgets/lv_slider.h ****  * @param copy pointer to a slider object, if not NULL then the new object will be copied from it
  70:lvgl/src/lv_widgets/lv_slider.h ****  * @return pointer to the created slider
  71:lvgl/src/lv_widgets/lv_slider.h ****  */
  72:lvgl/src/lv_widgets/lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * par, const lv_obj_t * copy);
  73:lvgl/src/lv_widgets/lv_slider.h **** 
  74:lvgl/src/lv_widgets/lv_slider.h **** /*=====================
  75:lvgl/src/lv_widgets/lv_slider.h ****  * Setter functions
  76:lvgl/src/lv_widgets/lv_slider.h ****  *====================*/
  77:lvgl/src/lv_widgets/lv_slider.h **** 
  78:lvgl/src/lv_widgets/lv_slider.h **** /**
  79:lvgl/src/lv_widgets/lv_slider.h ****  * Set a new value on the slider
  80:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to a slider object
  81:lvgl/src/lv_widgets/lv_slider.h ****  * @param value new value
  82:lvgl/src/lv_widgets/lv_slider.h ****  * @param anim LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediate
  83:lvgl/src/lv_widgets/lv_slider.h ****  */
  84:lvgl/src/lv_widgets/lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * slider, int16_t value, lv_anim_enable_t anim)
  85:lvgl/src/lv_widgets/lv_slider.h **** {
  86:lvgl/src/lv_widgets/lv_slider.h ****     lv_bar_set_value(slider, value, anim);
  87:lvgl/src/lv_widgets/lv_slider.h **** }
ARM GAS  D:\Temp\ccqmjWev.s 			page 33


  88:lvgl/src/lv_widgets/lv_slider.h **** 
  89:lvgl/src/lv_widgets/lv_slider.h **** /**
  90:lvgl/src/lv_widgets/lv_slider.h ****  * Set a new value for the left knob of a slider
  91:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to a slider object
  92:lvgl/src/lv_widgets/lv_slider.h ****  * @param left_value new value
  93:lvgl/src/lv_widgets/lv_slider.h ****  * @param anim LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediate
  94:lvgl/src/lv_widgets/lv_slider.h ****  */
  95:lvgl/src/lv_widgets/lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * slider, int16_t left_value, lv_anim_enable_t
  96:lvgl/src/lv_widgets/lv_slider.h **** {
  97:lvgl/src/lv_widgets/lv_slider.h ****     lv_bar_set_start_value(slider, left_value, anim);
  98:lvgl/src/lv_widgets/lv_slider.h **** }
  99:lvgl/src/lv_widgets/lv_slider.h **** 
 100:lvgl/src/lv_widgets/lv_slider.h **** /**
 101:lvgl/src/lv_widgets/lv_slider.h ****  * Set minimum and the maximum values of a bar
 102:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to the slider object
 103:lvgl/src/lv_widgets/lv_slider.h ****  * @param min minimum value
 104:lvgl/src/lv_widgets/lv_slider.h ****  * @param max maximum value
 105:lvgl/src/lv_widgets/lv_slider.h ****  */
 106:lvgl/src/lv_widgets/lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * slider, int16_t min, int16_t max)
 107:lvgl/src/lv_widgets/lv_slider.h **** {
 108:lvgl/src/lv_widgets/lv_slider.h ****     lv_bar_set_range(slider, min, max);
 109:lvgl/src/lv_widgets/lv_slider.h **** }
 110:lvgl/src/lv_widgets/lv_slider.h **** 
 111:lvgl/src/lv_widgets/lv_slider.h **** /**
 112:lvgl/src/lv_widgets/lv_slider.h ****  * Set the animation time of the slider
 113:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to a bar object
 114:lvgl/src/lv_widgets/lv_slider.h ****  * @param anim_time the animation time in milliseconds.
 115:lvgl/src/lv_widgets/lv_slider.h ****  */
 116:lvgl/src/lv_widgets/lv_slider.h **** static inline void lv_slider_set_anim_time(lv_obj_t * slider, uint16_t anim_time)
 117:lvgl/src/lv_widgets/lv_slider.h **** {
 118:lvgl/src/lv_widgets/lv_slider.h ****     lv_bar_set_anim_time(slider, anim_time);
 119:lvgl/src/lv_widgets/lv_slider.h **** }
 120:lvgl/src/lv_widgets/lv_slider.h **** 
 121:lvgl/src/lv_widgets/lv_slider.h **** /**
 122:lvgl/src/lv_widgets/lv_slider.h ****  * Make the slider symmetric to zero. The indicator will grow from zero instead of the minimum
 123:lvgl/src/lv_widgets/lv_slider.h ****  * position.
 124:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to a slider object
 125:lvgl/src/lv_widgets/lv_slider.h ****  * @param en true: enable disable symmetric behavior; false: disable
 126:lvgl/src/lv_widgets/lv_slider.h ****  */
 127:lvgl/src/lv_widgets/lv_slider.h **** static inline void lv_slider_set_type(lv_obj_t * slider, lv_slider_type_t type)
 128:lvgl/src/lv_widgets/lv_slider.h **** {
 129:lvgl/src/lv_widgets/lv_slider.h ****     if(type == LV_SLIDER_TYPE_NORMAL)
 130:lvgl/src/lv_widgets/lv_slider.h ****         lv_bar_set_type(slider, LV_BAR_TYPE_NORMAL);
 131:lvgl/src/lv_widgets/lv_slider.h ****     else if(type == LV_SLIDER_TYPE_SYMMETRICAL)
 132:lvgl/src/lv_widgets/lv_slider.h ****         lv_bar_set_type(slider, LV_BAR_TYPE_SYMMETRICAL);
 133:lvgl/src/lv_widgets/lv_slider.h ****     else if(type == LV_SLIDER_TYPE_RANGE)
 134:lvgl/src/lv_widgets/lv_slider.h ****         lv_bar_set_type(slider, LV_BAR_TYPE_CUSTOM);
 135:lvgl/src/lv_widgets/lv_slider.h **** }
 136:lvgl/src/lv_widgets/lv_slider.h **** 
 137:lvgl/src/lv_widgets/lv_slider.h **** /*=====================
 138:lvgl/src/lv_widgets/lv_slider.h ****  * Getter functions
 139:lvgl/src/lv_widgets/lv_slider.h ****  *====================*/
 140:lvgl/src/lv_widgets/lv_slider.h **** 
 141:lvgl/src/lv_widgets/lv_slider.h **** /**
 142:lvgl/src/lv_widgets/lv_slider.h ****  * Get the value of the main knob of a slider
 143:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to a slider object
 144:lvgl/src/lv_widgets/lv_slider.h ****  * @return the value of the main knob of the slider
ARM GAS  D:\Temp\ccqmjWev.s 			page 34


 145:lvgl/src/lv_widgets/lv_slider.h ****  */
 146:lvgl/src/lv_widgets/lv_slider.h **** int16_t lv_slider_get_value(const lv_obj_t * slider);
 147:lvgl/src/lv_widgets/lv_slider.h **** 
 148:lvgl/src/lv_widgets/lv_slider.h **** /**
 149:lvgl/src/lv_widgets/lv_slider.h ****  * Get the value of the left knob of a slider
 150:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to a slider object
 151:lvgl/src/lv_widgets/lv_slider.h ****  * @return the value of the left knob of the slider
 152:lvgl/src/lv_widgets/lv_slider.h ****  */
 153:lvgl/src/lv_widgets/lv_slider.h **** static inline int16_t lv_slider_get_left_value(const lv_obj_t * slider)
 154:lvgl/src/lv_widgets/lv_slider.h **** {
 155:lvgl/src/lv_widgets/lv_slider.h ****     return lv_bar_get_start_value(slider);
 156:lvgl/src/lv_widgets/lv_slider.h **** }
 157:lvgl/src/lv_widgets/lv_slider.h **** 
 158:lvgl/src/lv_widgets/lv_slider.h **** /**
 159:lvgl/src/lv_widgets/lv_slider.h ****  * Get the minimum value of a slider
 160:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to a slider object
 161:lvgl/src/lv_widgets/lv_slider.h ****  * @return the minimum value of the slider
 162:lvgl/src/lv_widgets/lv_slider.h ****  */
 163:lvgl/src/lv_widgets/lv_slider.h **** static inline int16_t lv_slider_get_min_value(const lv_obj_t * slider)
 164:lvgl/src/lv_widgets/lv_slider.h **** {
 165:lvgl/src/lv_widgets/lv_slider.h ****     return lv_bar_get_min_value(slider);
 166:lvgl/src/lv_widgets/lv_slider.h **** }
 167:lvgl/src/lv_widgets/lv_slider.h **** 
 168:lvgl/src/lv_widgets/lv_slider.h **** /**
 169:lvgl/src/lv_widgets/lv_slider.h ****  * Get the maximum value of a slider
 170:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to a slider object
 171:lvgl/src/lv_widgets/lv_slider.h ****  * @return the maximum value of the slider
 172:lvgl/src/lv_widgets/lv_slider.h ****  */
 173:lvgl/src/lv_widgets/lv_slider.h **** static inline int16_t lv_slider_get_max_value(const lv_obj_t * slider)
 174:lvgl/src/lv_widgets/lv_slider.h **** {
 175:lvgl/src/lv_widgets/lv_slider.h ****     return lv_bar_get_max_value(slider);
 176:lvgl/src/lv_widgets/lv_slider.h **** }
 177:lvgl/src/lv_widgets/lv_slider.h **** 
 178:lvgl/src/lv_widgets/lv_slider.h **** /**
 179:lvgl/src/lv_widgets/lv_slider.h ****  * Give the slider is being dragged or not
 180:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to a slider object
 181:lvgl/src/lv_widgets/lv_slider.h ****  * @return true: drag in progress false: not dragged
 182:lvgl/src/lv_widgets/lv_slider.h ****  */
 183:lvgl/src/lv_widgets/lv_slider.h **** bool lv_slider_is_dragged(const lv_obj_t * slider);
 184:lvgl/src/lv_widgets/lv_slider.h **** 
 185:lvgl/src/lv_widgets/lv_slider.h **** /**
 186:lvgl/src/lv_widgets/lv_slider.h ****  * Get the animation time of the slider
 187:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to a slider object
 188:lvgl/src/lv_widgets/lv_slider.h ****  * @return the animation time in milliseconds.
 189:lvgl/src/lv_widgets/lv_slider.h ****  */
 190:lvgl/src/lv_widgets/lv_slider.h **** static inline uint16_t lv_slider_get_anim_time(lv_obj_t * slider)
 191:lvgl/src/lv_widgets/lv_slider.h **** {
 192:lvgl/src/lv_widgets/lv_slider.h ****     return lv_bar_get_anim_time(slider);
 193:lvgl/src/lv_widgets/lv_slider.h **** }
 194:lvgl/src/lv_widgets/lv_slider.h **** 
 195:lvgl/src/lv_widgets/lv_slider.h **** /**
 196:lvgl/src/lv_widgets/lv_slider.h ****  * Get whether the slider is symmetric or not.
 197:lvgl/src/lv_widgets/lv_slider.h ****  * @param slider pointer to a bar object
 198:lvgl/src/lv_widgets/lv_slider.h ****  * @return true: symmetric is enabled; false: disable
 199:lvgl/src/lv_widgets/lv_slider.h ****  */
 200:lvgl/src/lv_widgets/lv_slider.h **** static inline lv_slider_type_t lv_slider_get_type(lv_obj_t * slider)
 668              		.loc 5 200 32 view .LVU194
ARM GAS  D:\Temp\ccqmjWev.s 			page 35


 669              	.LBB98:
 201:lvgl/src/lv_widgets/lv_slider.h **** {
 202:lvgl/src/lv_widgets/lv_slider.h ****     lv_bar_type_t type = lv_bar_get_type(slider);
 670              		.loc 5 202 5 view .LVU195
 671              		.loc 5 202 26 is_stmt 0 view .LVU196
 672 011e 2046     		mov	r0, r4
 673 0120 FFF7FEFF 		bl	lv_bar_get_type
 674              	.LVL67:
 203:lvgl/src/lv_widgets/lv_slider.h ****     if(type == LV_BAR_TYPE_SYMMETRICAL)
 675              		.loc 5 203 5 is_stmt 1 view .LVU197
 676              		.loc 5 203 7 is_stmt 0 view .LVU198
 677 0124 0128     		cmp	r0, #1
 678 0126 01D0     		beq	.L36
 204:lvgl/src/lv_widgets/lv_slider.h ****         return LV_SLIDER_TYPE_SYMMETRICAL;
 205:lvgl/src/lv_widgets/lv_slider.h ****     else if(type == LV_BAR_TYPE_CUSTOM)
 679              		.loc 5 205 10 is_stmt 1 view .LVU199
 680              		.loc 5 205 12 is_stmt 0 view .LVU200
 681 0128 0228     		cmp	r0, #2
 682 012a 03D0     		beq	.L59
 683              	.LVL68:
 684              	.L36:
 685              		.loc 5 205 12 view .LVU201
 686              	.LBE98:
 687              	.LBE97:
 688              	.LBE106:
 237:lvgl/src/lv_widgets/lv_slider.c **** }
 689              		.loc 1 237 12 view .LVU202
 690 012c 0020     		movs	r0, #0
 691              	.LVL69:
 692              	.L18:
 238:lvgl/src/lv_widgets/lv_slider.c **** 
 693              		.loc 1 238 1 view .LVU203
 694 012e 03B0     		add	sp, sp, #12
 695              	.LCFI7:
 696              		.cfi_remember_state
 697              		.cfi_def_cfa_offset 36
 698              		@ sp needed
 699 0130 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 700              	.LVL70:
 701              	.L59:
 702              	.LCFI8:
 703              		.cfi_restore_state
 704              	.LBB107:
 220:lvgl/src/lv_widgets/lv_slider.c ****                 knob_area.x1 = LV_SLIDER_KNOB_COORD(hor, base_dir != LV_BIDI_DIR_RTL, ext->bar.indi
 705              		.loc 1 220 13 is_stmt 1 view .LVU204
 220:lvgl/src/lv_widgets/lv_slider.c ****                 knob_area.x1 = LV_SLIDER_KNOB_COORD(hor, base_dir != LV_BIDI_DIR_RTL, ext->bar.indi
 706              		.loc 1 220 15 is_stmt 0 view .LVU205
 707 0134 B845     		cmp	r8, r7
 708 0136 13DB     		blt	.L37
 221:lvgl/src/lv_widgets/lv_slider.c ****             }
 709              		.loc 1 221 17 is_stmt 1 discriminator 1 view .LVU206
 221:lvgl/src/lv_widgets/lv_slider.c ****             }
 710              		.loc 1 221 30 is_stmt 0 discriminator 1 view .LVU207
 711 0138 BBF1010F 		cmp	fp, #1
 712 013c 0DD0     		beq	.L38
 221:lvgl/src/lv_widgets/lv_slider.c ****             }
 713              		.loc 1 221 30 discriminator 3 view .LVU208
ARM GAS  D:\Temp\ccqmjWev.s 			page 36


 714 013e B6F90830 		ldrsh	r3, [r6, #8]
 715              	.L39:
 221:lvgl/src/lv_widgets/lv_slider.c ****             }
 716              		.loc 1 221 30 discriminator 6 view .LVU209
 717 0142 ADF80030 		strh	r3, [sp]	@ movhi
 718              	.L40:
 226:lvgl/src/lv_widgets/lv_slider.c **** 
 719              		.loc 1 226 13 is_stmt 1 view .LVU210
 720 0146 5346     		mov	r3, r10
 721 0148 4A46     		mov	r2, r9
 722 014a 6946     		mov	r1, sp
 723 014c 2046     		mov	r0, r4
 724 014e FFF7FEFF 		bl	lv_slider_position_knob
 725              	.LVL71:
 228:lvgl/src/lv_widgets/lv_slider.c ****             lv_slider_draw_knob(slider, &knob_area, clip_area);
 726              		.loc 1 228 13 view .LVU211
 727 0152 4036     		adds	r6, r6, #64
 728              	.LVL72:
 729              	.LBB99:
 730              	.LBI99:
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 731              		.loc 3 97 20 view .LVU212
 732              	.LBE99:
 733              	.LBE107:
 734              		.loc 3 99 5 view .LVU213
 735              	.LBB108:
 736              	.LBB104:
 737              	.LBB100:
 738              	.LBI100:
 213:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 739              		.loc 4 213 44 view .LVU214
 740              	.LBB101:
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 741              		.loc 4 215 5 view .LVU215
 216:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 742              		.loc 4 216 5 view .LVU216
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 743              		.loc 4 218 5 view .LVU217
 216:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 744              		.loc 4 216 21 is_stmt 0 view .LVU218
 745 0154 6A46     		mov	r2, sp
 746              	.LBE101:
 747              	.LBE100:
 748              	.LBE104:
 228:lvgl/src/lv_widgets/lv_slider.c ****             lv_slider_draw_knob(slider, &knob_area, clip_area);
 749              		.loc 1 228 13 view .LVU219
 750 0156 0823     		movs	r3, #8
 751 0158 0CE0     		b	.L41
 752              	.LVL73:
 753              	.L38:
 221:lvgl/src/lv_widgets/lv_slider.c ****             }
 754              		.loc 1 221 30 discriminator 4 view .LVU220
 755 015a B6F90C30 		ldrsh	r3, [r6, #12]
 756 015e F0E7     		b	.L39
 757              	.L37:
 224:lvgl/src/lv_widgets/lv_slider.c ****             }
 758              		.loc 1 224 17 is_stmt 1 view .LVU221
ARM GAS  D:\Temp\ccqmjWev.s 			page 37


 224:lvgl/src/lv_widgets/lv_slider.c ****             }
 759              		.loc 1 224 51 is_stmt 0 view .LVU222
 760 0160 B6F90E30 		ldrsh	r3, [r6, #14]
 224:lvgl/src/lv_widgets/lv_slider.c ****             }
 761              		.loc 1 224 30 view .LVU223
 762 0164 ADF80230 		strh	r3, [sp, #2]	@ movhi
 763 0168 EDE7     		b	.L40
 764              	.LVL74:
 765              	.L42:
 766              	.LBB105:
 767              	.LBB103:
 768              	.LBB102:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 769              		.loc 4 219 9 is_stmt 1 view .LVU224
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 770              		.loc 4 219 15 is_stmt 0 view .LVU225
 771 016a 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 772              	.LVL75:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 773              		.loc 4 219 13 view .LVU226
 774 016e 06F8011B 		strb	r1, [r6], #1
 775              	.LVL76:
 220:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         s8++;
 776              		.loc 4 220 9 is_stmt 1 view .LVU227
 221:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         len--;
 777              		.loc 4 221 9 view .LVU228
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 778              		.loc 4 222 9 view .LVU229
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 779              		.loc 4 222 12 is_stmt 0 view .LVU230
 780 0172 013B     		subs	r3, r3, #1
 781              	.LVL77:
 782              	.L41:
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 783              		.loc 4 218 10 view .LVU231
 784 0174 002B     		cmp	r3, #0
 785 0176 F8D1     		bne	.L42
 786              		.loc 4 225 5 is_stmt 1 view .LVU232
 787              	.LVL78:
 788              		.loc 4 225 5 is_stmt 0 view .LVU233
 789              	.LBE102:
 790              	.LBE103:
 791              	.LBE105:
 229:lvgl/src/lv_widgets/lv_slider.c ****         }
 792              		.loc 1 229 13 is_stmt 1 view .LVU234
 793 0178 2A46     		mov	r2, r5
 794 017a 6946     		mov	r1, sp
 795 017c 2046     		mov	r0, r4
 796 017e FFF7FEFF 		bl	lv_slider_draw_knob
 797              	.LVL79:
 798 0182 D3E7     		b	.L36
 799              	.LVL80:
 800              	.L19:
 229:lvgl/src/lv_widgets/lv_slider.c ****         }
 801              		.loc 1 229 13 is_stmt 0 view .LVU235
 802              	.LBE108:
 233:lvgl/src/lv_widgets/lv_slider.c ****         return ancestor_design_f(slider, clip_area, mode);
ARM GAS  D:\Temp\ccqmjWev.s 			page 38


 803              		.loc 1 233 10 is_stmt 1 view .LVU236
 233:lvgl/src/lv_widgets/lv_slider.c ****         return ancestor_design_f(slider, clip_area, mode);
 804              		.loc 1 233 12 is_stmt 0 view .LVU237
 805 0184 012A     		cmp	r2, #1
 806 0186 01D0     		beq	.L60
 237:lvgl/src/lv_widgets/lv_slider.c **** }
 807              		.loc 1 237 12 view .LVU238
 808 0188 0020     		movs	r0, #0
 809              	.LVL81:
 237:lvgl/src/lv_widgets/lv_slider.c **** }
 810              		.loc 1 237 12 view .LVU239
 811 018a D0E7     		b	.L18
 812              	.LVL82:
 813              	.L60:
 234:lvgl/src/lv_widgets/lv_slider.c ****     }
 814              		.loc 1 234 9 is_stmt 1 view .LVU240
 234:lvgl/src/lv_widgets/lv_slider.c ****     }
 815              		.loc 1 234 16 is_stmt 0 view .LVU241
 816 018c 024B     		ldr	r3, .L61
 817 018e 1B68     		ldr	r3, [r3]
 818 0190 9847     		blx	r3
 819              	.LVL83:
 234:lvgl/src/lv_widgets/lv_slider.c ****     }
 820              		.loc 1 234 16 view .LVU242
 821 0192 CCE7     		b	.L18
 822              	.LVL84:
 823              	.L43:
 824              	.LCFI9:
 825              		.cfi_def_cfa_offset 0
 826              		.cfi_restore 4
 827              		.cfi_restore 5
 828              		.cfi_restore 6
 829              		.cfi_restore 7
 830              		.cfi_restore 8
 831              		.cfi_restore 9
 832              		.cfi_restore 10
 833              		.cfi_restore 11
 834              		.cfi_restore 14
 165:lvgl/src/lv_widgets/lv_slider.c ****     }
 835              		.loc 1 165 16 view .LVU243
 836 0194 0220     		movs	r0, #2
 837              	.LVL85:
 238:lvgl/src/lv_widgets/lv_slider.c **** 
 838              		.loc 1 238 1 view .LVU244
 839 0196 7047     		bx	lr
 840              	.L62:
 841              		.align	2
 842              	.L61:
 843 0198 00000000 		.word	.LANCHOR0
 844              		.cfi_endproc
 845              	.LFE482:
 847              		.section	.text.lv_slider_create,"ax",%progbits
 848              		.align	1
 849              		.global	lv_slider_create
 850              		.syntax unified
 851              		.thumb
 852              		.thumb_func
ARM GAS  D:\Temp\ccqmjWev.s 			page 39


 853              		.fpu fpv4-sp-d16
 855              	lv_slider_create:
 856              	.LVL86:
 857              	.LFB479:
  62:lvgl/src/lv_widgets/lv_slider.c ****     LV_LOG_TRACE("slider create started");
 858              		.loc 1 62 1 is_stmt 1 view -0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
  62:lvgl/src/lv_widgets/lv_slider.c ****     LV_LOG_TRACE("slider create started");
 862              		.loc 1 62 1 is_stmt 0 view .LVU246
 863 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 864              	.LCFI10:
 865              		.cfi_def_cfa_offset 20
 866              		.cfi_offset 4, -20
 867              		.cfi_offset 5, -16
 868              		.cfi_offset 6, -12
 869              		.cfi_offset 7, -8
 870              		.cfi_offset 14, -4
 871 0002 83B0     		sub	sp, sp, #12
 872              	.LCFI11:
 873              		.cfi_def_cfa_offset 32
 874 0004 0E46     		mov	r6, r1
  63:lvgl/src/lv_widgets/lv_slider.c **** 
 875              		.loc 1 63 42 is_stmt 1 view .LVU247
  66:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_MEM(slider);
 876              		.loc 1 66 5 view .LVU248
  66:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_MEM(slider);
 877              		.loc 1 66 25 is_stmt 0 view .LVU249
 878 0006 FFF7FEFF 		bl	lv_bar_create
 879              	.LVL87:
  66:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_MEM(slider);
 880              		.loc 1 66 25 view .LVU250
 881 000a 0446     		mov	r4, r0
 882              	.LVL88:
  67:lvgl/src/lv_widgets/lv_slider.c ****     if(slider == NULL) return NULL;
 883              		.loc 1 67 5 is_stmt 1 view .LVU251
  67:lvgl/src/lv_widgets/lv_slider.c ****     if(slider == NULL) return NULL;
 884              		.loc 1 67 5 view .LVU252
 885 000c FFF7FEFF 		bl	lv_debug_check_null
 886              	.LVL89:
  67:lvgl/src/lv_widgets/lv_slider.c ****     if(slider == NULL) return NULL;
 887              		.loc 1 67 5 is_stmt 0 view .LVU253
 888 0010 0028     		cmp	r0, #0
 889 0012 3CD0     		beq	.L78
  67:lvgl/src/lv_widgets/lv_slider.c ****     if(slider == NULL) return NULL;
 890              		.loc 1 67 26 is_stmt 1 discriminator 2 view .LVU254
  68:lvgl/src/lv_widgets/lv_slider.c **** 
 891              		.loc 1 68 5 discriminator 2 view .LVU255
  68:lvgl/src/lv_widgets/lv_slider.c **** 
 892              		.loc 1 68 7 is_stmt 0 discriminator 2 view .LVU256
 893 0014 002C     		cmp	r4, #0
 894 0016 00F08680 		beq	.L63
  70:lvgl/src/lv_widgets/lv_slider.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(slider);
 895              		.loc 1 70 5 is_stmt 1 view .LVU257
  70:lvgl/src/lv_widgets/lv_slider.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(slider);
 896              		.loc 1 70 26 is_stmt 0 view .LVU258
ARM GAS  D:\Temp\ccqmjWev.s 			page 40


 897 001a 444B     		ldr	r3, .L84
 898 001c 1B68     		ldr	r3, [r3]
  70:lvgl/src/lv_widgets/lv_slider.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(slider);
 899              		.loc 1 70 7 view .LVU259
 900 001e 002B     		cmp	r3, #0
 901 0020 3BD0     		beq	.L79
 902              	.L67:
  71:lvgl/src/lv_widgets/lv_slider.c **** 
 903              		.loc 1 71 5 is_stmt 1 view .LVU260
  71:lvgl/src/lv_widgets/lv_slider.c **** 
 904              		.loc 1 71 24 is_stmt 0 view .LVU261
 905 0022 434B     		ldr	r3, .L84+4
 906 0024 1B68     		ldr	r3, [r3]
  71:lvgl/src/lv_widgets/lv_slider.c **** 
 907              		.loc 1 71 7 view .LVU262
 908 0026 002B     		cmp	r3, #0
 909 0028 3DD0     		beq	.L80
 910              	.L68:
  74:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_MEM(ext);
 911              		.loc 1 74 5 is_stmt 1 view .LVU263
  74:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_MEM(ext);
 912              		.loc 1 74 29 is_stmt 0 view .LVU264
 913 002a 5821     		movs	r1, #88
 914 002c 2046     		mov	r0, r4
 915 002e FFF7FEFF 		bl	lv_obj_allocate_ext_attr
 916              	.LVL90:
 917 0032 0546     		mov	r5, r0
 918              	.LVL91:
  75:lvgl/src/lv_widgets/lv_slider.c ****     if(ext == NULL) {
 919              		.loc 1 75 5 is_stmt 1 view .LVU265
  75:lvgl/src/lv_widgets/lv_slider.c ****     if(ext == NULL) {
 920              		.loc 1 75 5 view .LVU266
 921 0034 FFF7FEFF 		bl	lv_debug_check_null
 922              	.LVL92:
  75:lvgl/src/lv_widgets/lv_slider.c ****     if(ext == NULL) {
 923              		.loc 1 75 5 is_stmt 0 view .LVU267
 924 0038 0028     		cmp	r0, #0
 925 003a 3AD0     		beq	.L81
  75:lvgl/src/lv_widgets/lv_slider.c ****     if(ext == NULL) {
 926              		.loc 1 75 23 is_stmt 1 discriminator 2 view .LVU268
  76:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_del(slider);
 927              		.loc 1 76 5 discriminator 2 view .LVU269
  76:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_del(slider);
 928              		.loc 1 76 7 is_stmt 0 discriminator 2 view .LVU270
 929 003c 002D     		cmp	r5, #0
 930 003e 3ED0     		beq	.L82
  82:lvgl/src/lv_widgets/lv_slider.c ****     ext->dragging = 0;
 931              		.loc 1 82 5 is_stmt 1 view .LVU271
  82:lvgl/src/lv_widgets/lv_slider.c ****     ext->dragging = 0;
 932              		.loc 1 82 23 is_stmt 0 view .LVU272
 933 0040 0022     		movs	r2, #0
 934 0042 2A65     		str	r2, [r5, #80]
  83:lvgl/src/lv_widgets/lv_slider.c ****     ext->left_knob_focus = 0;
 935              		.loc 1 83 5 is_stmt 1 view .LVU273
  83:lvgl/src/lv_widgets/lv_slider.c ****     ext->left_knob_focus = 0;
 936              		.loc 1 83 19 is_stmt 0 view .LVU274
 937 0044 95F85430 		ldrb	r3, [r5, #84]	@ zero_extendqisi2
ARM GAS  D:\Temp\ccqmjWev.s 			page 41


  84:lvgl/src/lv_widgets/lv_slider.c ****     lv_style_list_init(&ext->style_knob);
 938              		.loc 1 84 5 is_stmt 1 view .LVU275
  84:lvgl/src/lv_widgets/lv_slider.c ****     lv_style_list_init(&ext->style_knob);
 939              		.loc 1 84 26 is_stmt 0 view .LVU276
 940 0048 03F0FE03 		and	r3, r3, #254
 941 004c 62F34103 		bfi	r3, r2, #1, #1
 942 0050 85F85430 		strb	r3, [r5, #84]
  85:lvgl/src/lv_widgets/lv_slider.c **** 
 943              		.loc 1 85 5 is_stmt 1 view .LVU277
 944 0054 05F13807 		add	r7, r5, #56
 945 0058 3846     		mov	r0, r7
 946 005a FFF7FEFF 		bl	lv_style_list_init
 947              	.LVL93:
  88:lvgl/src/lv_widgets/lv_slider.c ****     lv_obj_set_design_cb(slider, lv_slider_design);
 948              		.loc 1 88 5 view .LVU278
 949 005e 3549     		ldr	r1, .L84+8
 950 0060 2046     		mov	r0, r4
 951 0062 FFF7FEFF 		bl	lv_obj_set_signal_cb
 952              	.LVL94:
  89:lvgl/src/lv_widgets/lv_slider.c **** 
 953              		.loc 1 89 5 view .LVU279
 954 0066 3449     		ldr	r1, .L84+12
 955 0068 2046     		mov	r0, r4
 956 006a FFF7FEFF 		bl	lv_obj_set_design_cb
 957              	.LVL95:
  92:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_set_click(slider, true);
 958              		.loc 1 92 5 view .LVU280
  92:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_set_click(slider, true);
 959              		.loc 1 92 7 is_stmt 0 view .LVU281
 960 006e 5EB3     		cbz	r6, .L83
 961              	.LBB109:
 102:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_list_copy(&ext->style_knob, &copy_ext->style_knob);
 962              		.loc 1 102 9 is_stmt 1 view .LVU282
 102:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_list_copy(&ext->style_knob, &copy_ext->style_knob);
 963              		.loc 1 102 38 is_stmt 0 view .LVU283
 964 0070 3046     		mov	r0, r6
 965 0072 FFF7FEFF 		bl	lv_obj_get_ext_attr
 966              	.LVL96:
 967 0076 0646     		mov	r6, r0
 968              	.LVL97:
 103:lvgl/src/lv_widgets/lv_slider.c ****         lv_area_copy(&ext->left_knob_area, &copy_ext->left_knob_area);
 969              		.loc 1 103 9 is_stmt 1 view .LVU284
 970 0078 00F13801 		add	r1, r0, #56
 971 007c 3846     		mov	r0, r7
 972              	.LVL98:
 103:lvgl/src/lv_widgets/lv_slider.c ****         lv_area_copy(&ext->left_knob_area, &copy_ext->left_knob_area);
 973              		.loc 1 103 9 is_stmt 0 view .LVU285
 974 007e FFF7FEFF 		bl	lv_style_list_copy
 975              	.LVL99:
 104:lvgl/src/lv_widgets/lv_slider.c ****         lv_area_copy(&ext->right_knob_area, &copy_ext->right_knob_area);
 976              		.loc 1 104 9 is_stmt 1 view .LVU286
 977 0082 05F14001 		add	r1, r5, #64
 104:lvgl/src/lv_widgets/lv_slider.c ****         lv_area_copy(&ext->right_knob_area, &copy_ext->right_knob_area);
 978              		.loc 1 104 44 is_stmt 0 view .LVU287
 979 0086 06F14002 		add	r2, r6, #64
 980              	.LVL100:
 981              	.LBB110:
ARM GAS  D:\Temp\ccqmjWev.s 			page 42


 982              	.LBI110:
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 983              		.loc 3 97 20 is_stmt 1 view .LVU288
 984              	.LBE110:
 985              	.LBE109:
 986              		.loc 3 99 5 view .LVU289
 987              	.LBB121:
 988              	.LBB115:
 989              	.LBB111:
 990              	.LBI111:
 213:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** {
 991              		.loc 4 213 44 view .LVU290
 992              	.LBB112:
 215:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 993              		.loc 4 215 5 view .LVU291
 216:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h **** 
 994              		.loc 4 216 5 view .LVU292
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 995              		.loc 4 218 5 view .LVU293
 996              	.LBE112:
 997              	.LBE111:
 998              	.LBE115:
 104:lvgl/src/lv_widgets/lv_slider.c ****         lv_area_copy(&ext->right_knob_area, &copy_ext->right_knob_area);
 999              		.loc 1 104 44 is_stmt 0 view .LVU294
 1000 008a 0823     		movs	r3, #8
 1001 008c 39E0     		b	.L73
 1002              	.LVL101:
 1003              	.L78:
 104:lvgl/src/lv_widgets/lv_slider.c ****         lv_area_copy(&ext->right_knob_area, &copy_ext->right_knob_area);
 1004              		.loc 1 104 44 view .LVU295
 1005              	.LBE121:
  67:lvgl/src/lv_widgets/lv_slider.c ****     if(slider == NULL) return NULL;
 1006              		.loc 1 67 5 is_stmt 1 discriminator 1 view .LVU296
  67:lvgl/src/lv_widgets/lv_slider.c ****     if(slider == NULL) return NULL;
 1007              		.loc 1 67 5 discriminator 1 view .LVU297
 1008 008e 2246     		mov	r2, r4
 1009 0090 0023     		movs	r3, #0
 1010 0092 2A48     		ldr	r0, .L84+16
 1011 0094 FFF7FEFF 		bl	lv_debug_log_error
 1012              	.LVL102:
 1013              	.L65:
  67:lvgl/src/lv_widgets/lv_slider.c ****     if(slider == NULL) return NULL;
 1014              		.loc 1 67 5 discriminator 1 view .LVU298
  67:lvgl/src/lv_widgets/lv_slider.c ****     if(slider == NULL) return NULL;
 1015              		.loc 1 67 5 discriminator 1 view .LVU299
 1016 0098 FEE7     		b	.L65
 1017              	.L79:
  70:lvgl/src/lv_widgets/lv_slider.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(slider);
 1018              		.loc 1 70 35 discriminator 1 view .LVU300
  70:lvgl/src/lv_widgets/lv_slider.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(slider);
 1019              		.loc 1 70 55 is_stmt 0 discriminator 1 view .LVU301
 1020 009a 2046     		mov	r0, r4
 1021 009c FFF7FEFF 		bl	lv_obj_get_design_cb
 1022              	.LVL103:
  70:lvgl/src/lv_widgets/lv_slider.c ****     if(ancestor_signal == NULL) ancestor_signal = lv_obj_get_signal_cb(slider);
 1023              		.loc 1 70 53 discriminator 1 view .LVU302
 1024 00a0 224B     		ldr	r3, .L84
ARM GAS  D:\Temp\ccqmjWev.s 			page 43


 1025 00a2 1860     		str	r0, [r3]
 1026 00a4 BDE7     		b	.L67
 1027              	.L80:
  71:lvgl/src/lv_widgets/lv_slider.c **** 
 1028              		.loc 1 71 33 is_stmt 1 discriminator 1 view .LVU303
  71:lvgl/src/lv_widgets/lv_slider.c **** 
 1029              		.loc 1 71 51 is_stmt 0 discriminator 1 view .LVU304
 1030 00a6 2046     		mov	r0, r4
 1031 00a8 FFF7FEFF 		bl	lv_obj_get_signal_cb
 1032              	.LVL104:
  71:lvgl/src/lv_widgets/lv_slider.c **** 
 1033              		.loc 1 71 49 discriminator 1 view .LVU305
 1034 00ac 204B     		ldr	r3, .L84+4
 1035 00ae 1860     		str	r0, [r3]
 1036 00b0 BBE7     		b	.L68
 1037              	.LVL105:
 1038              	.L81:
  75:lvgl/src/lv_widgets/lv_slider.c ****     if(ext == NULL) {
 1039              		.loc 1 75 5 is_stmt 1 discriminator 1 view .LVU306
  75:lvgl/src/lv_widgets/lv_slider.c ****     if(ext == NULL) {
 1040              		.loc 1 75 5 discriminator 1 view .LVU307
 1041 00b2 2A46     		mov	r2, r5
 1042 00b4 0023     		movs	r3, #0
 1043 00b6 2148     		ldr	r0, .L84+16
 1044 00b8 FFF7FEFF 		bl	lv_debug_log_error
 1045              	.LVL106:
 1046              	.L70:
  75:lvgl/src/lv_widgets/lv_slider.c ****     if(ext == NULL) {
 1047              		.loc 1 75 5 discriminator 2 view .LVU308
  75:lvgl/src/lv_widgets/lv_slider.c ****     if(ext == NULL) {
 1048              		.loc 1 75 5 discriminator 2 view .LVU309
 1049 00bc FEE7     		b	.L70
 1050              	.L82:
  77:lvgl/src/lv_widgets/lv_slider.c ****         return NULL;
 1051              		.loc 1 77 9 view .LVU310
 1052 00be 2046     		mov	r0, r4
 1053 00c0 FFF7FEFF 		bl	lv_obj_del
 1054              	.LVL107:
  78:lvgl/src/lv_widgets/lv_slider.c ****     }
 1055              		.loc 1 78 9 view .LVU311
  78:lvgl/src/lv_widgets/lv_slider.c ****     }
 1056              		.loc 1 78 16 is_stmt 0 view .LVU312
 1057 00c4 0024     		movs	r4, #0
 1058              	.LVL108:
  78:lvgl/src/lv_widgets/lv_slider.c ****     }
 1059              		.loc 1 78 16 view .LVU313
 1060 00c6 2EE0     		b	.L63
 1061              	.LVL109:
 1062              	.L83:
  93:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_add_protect(slider, LV_PROTECT_PRESS_LOST);
 1063              		.loc 1 93 9 is_stmt 1 view .LVU314
 1064 00c8 0121     		movs	r1, #1
 1065 00ca 2046     		mov	r0, r4
 1066 00cc FFF7FEFF 		bl	lv_obj_set_click
 1067              	.LVL110:
  94:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_set_ext_click_area(slider, 0, 0, LV_DPI / 10, LV_DPI / 10);
 1068              		.loc 1 94 9 view .LVU315
ARM GAS  D:\Temp\ccqmjWev.s 			page 44


 1069 00d0 1021     		movs	r1, #16
 1070 00d2 2046     		mov	r0, r4
 1071 00d4 FFF7FEFF 		bl	lv_obj_add_protect
 1072              	.LVL111:
  95:lvgl/src/lv_widgets/lv_slider.c **** 
 1073              		.loc 1 95 9 view .LVU316
 1074 00d8 0823     		movs	r3, #8
 1075 00da 0093     		str	r3, [sp]
 1076 00dc 0022     		movs	r2, #0
 1077 00de 1146     		mov	r1, r2
 1078 00e0 2046     		mov	r0, r4
 1079 00e2 FFF7FEFF 		bl	lv_obj_set_ext_click_area
 1080              	.LVL112:
  97:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_set_height(slider, LV_DPI / 15);
 1081              		.loc 1 97 9 view .LVU317
 1082 00e6 1D21     		movs	r1, #29
 1083 00e8 2046     		mov	r0, r4
 1084 00ea FFF7FEFF 		bl	lv_theme_apply
 1085              	.LVL113:
  98:lvgl/src/lv_widgets/lv_slider.c ****     }
 1086              		.loc 1 98 9 view .LVU318
 1087 00ee 0521     		movs	r1, #5
 1088 00f0 2046     		mov	r0, r4
 1089 00f2 FFF7FEFF 		bl	lv_obj_set_height
 1090              	.LVL114:
 1091 00f6 16E0     		b	.L63
 1092              	.LVL115:
 1093              	.L74:
 1094              	.LBB122:
 1095              	.LBB116:
 1096              	.LBB114:
 1097              	.LBB113:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 1098              		.loc 4 219 9 view .LVU319
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 1099              		.loc 4 219 15 is_stmt 0 view .LVU320
 1100 00f8 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1101              	.LVL116:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 1102              		.loc 4 219 13 view .LVU321
 1103 00fc 01F8010B 		strb	r0, [r1], #1
 1104              	.LVL117:
 220:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         s8++;
 1105              		.loc 4 220 9 is_stmt 1 view .LVU322
 221:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         len--;
 1106              		.loc 4 221 9 view .LVU323
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 1107              		.loc 4 222 9 view .LVU324
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 1108              		.loc 4 222 12 is_stmt 0 view .LVU325
 1109 0100 013B     		subs	r3, r3, #1
 1110              	.LVL118:
 1111              	.L73:
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 1112              		.loc 4 218 10 view .LVU326
 1113 0102 002B     		cmp	r3, #0
 1114 0104 F8D1     		bne	.L74
ARM GAS  D:\Temp\ccqmjWev.s 			page 45


 1115              		.loc 4 225 5 is_stmt 1 view .LVU327
 1116              	.LVL119:
 1117              		.loc 4 225 5 is_stmt 0 view .LVU328
 1118              	.LBE113:
 1119              	.LBE114:
 1120              	.LBE116:
 105:lvgl/src/lv_widgets/lv_slider.c **** 
 1121              		.loc 1 105 9 is_stmt 1 view .LVU329
 1122 0106 4835     		adds	r5, r5, #72
 1123              	.LVL120:
 105:lvgl/src/lv_widgets/lv_slider.c **** 
 1124              		.loc 1 105 45 is_stmt 0 view .LVU330
 1125 0108 4836     		adds	r6, r6, #72
 1126              	.LVL121:
 1127              	.LBB117:
 1128              	.LBI117:
  97:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 1129              		.loc 3 97 20 is_stmt 1 view .LVU331
 1130              	.LBE117:
 105:lvgl/src/lv_widgets/lv_slider.c **** 
 1131              		.loc 1 105 45 is_stmt 0 view .LVU332
 1132 010a 0823     		movs	r3, #8
 1133 010c 04E0     		b	.L75
 1134              	.LVL122:
 1135              	.L76:
 1136              	.LBB120:
 1137              	.LBB118:
 1138              	.LBB119:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 1139              		.loc 4 219 9 is_stmt 1 view .LVU333
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 1140              		.loc 4 219 15 is_stmt 0 view .LVU334
 1141 010e 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 1142              	.LVL123:
 219:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         d8++;
 1143              		.loc 4 219 13 view .LVU335
 1144 0112 05F8012B 		strb	r2, [r5], #1
 1145              	.LVL124:
 220:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         s8++;
 1146              		.loc 4 220 9 is_stmt 1 view .LVU336
 221:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         len--;
 1147              		.loc 4 221 9 view .LVU337
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 1148              		.loc 4 222 9 view .LVU338
 222:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****     }
 1149              		.loc 4 222 12 is_stmt 0 view .LVU339
 1150 0116 013B     		subs	r3, r3, #1
 1151              	.LVL125:
 1152              	.L75:
 218:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_mem.h ****         *d8 = *s8;
 1153              		.loc 4 218 10 view .LVU340
 1154 0118 002B     		cmp	r3, #0
 1155 011a F8D1     		bne	.L76
 1156              		.loc 4 225 5 is_stmt 1 view .LVU341
 1157              	.LVL126:
 1158              		.loc 4 225 5 is_stmt 0 view .LVU342
 1159              	.LBE119:
ARM GAS  D:\Temp\ccqmjWev.s 			page 46


 1160              	.LBE118:
 1161              	.LBE120:
 107:lvgl/src/lv_widgets/lv_slider.c ****     }
 1162              		.loc 1 107 9 is_stmt 1 view .LVU343
 1163 011c FF22     		movs	r2, #255
 1164 011e 1146     		mov	r1, r2
 1165 0120 2046     		mov	r0, r4
 1166 0122 FFF7FEFF 		bl	lv_obj_refresh_style
 1167              	.LVL127:
 1168              	.L63:
 107:lvgl/src/lv_widgets/lv_slider.c ****     }
 1169              		.loc 1 107 9 is_stmt 0 view .LVU344
 1170              	.LBE122:
 113:lvgl/src/lv_widgets/lv_slider.c **** 
 1171              		.loc 1 113 1 view .LVU345
 1172 0126 2046     		mov	r0, r4
 1173 0128 03B0     		add	sp, sp, #12
 1174              	.LCFI12:
 1175              		.cfi_def_cfa_offset 20
 1176              		@ sp needed
 1177 012a F0BD     		pop	{r4, r5, r6, r7, pc}
 1178              	.L85:
 1179              		.align	2
 1180              	.L84:
 1181 012c 00000000 		.word	.LANCHOR0
 1182 0130 00000000 		.word	.LANCHOR1
 1183 0134 00000000 		.word	lv_slider_signal
 1184 0138 00000000 		.word	lv_slider_design
 1185 013c 00000000 		.word	.LC1
 1186              		.cfi_endproc
 1187              	.LFE479:
 1189              		.section	.text.lv_slider_get_value,"ax",%progbits
 1190              		.align	1
 1191              		.global	lv_slider_get_value
 1192              		.syntax unified
 1193              		.thumb
 1194              		.thumb_func
 1195              		.fpu fpv4-sp-d16
 1197              	lv_slider_get_value:
 1198              	.LVL128:
 1199              	.LFB480:
 129:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_OBJ(slider, LV_OBJX_NAME);
 1200              		.loc 1 129 1 is_stmt 1 view -0
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 0
 1203              		@ frame_needed = 0, uses_anonymous_args = 0
 129:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_OBJ(slider, LV_OBJX_NAME);
 1204              		.loc 1 129 1 is_stmt 0 view .LVU347
 1205 0000 10B5     		push	{r4, lr}
 1206              	.LCFI13:
 1207              		.cfi_def_cfa_offset 8
 1208              		.cfi_offset 4, -8
 1209              		.cfi_offset 14, -4
 1210 0002 0446     		mov	r4, r0
 130:lvgl/src/lv_widgets/lv_slider.c ****     return lv_bar_get_value(slider);
 1211              		.loc 1 130 5 is_stmt 1 view .LVU348
 130:lvgl/src/lv_widgets/lv_slider.c ****     return lv_bar_get_value(slider);
ARM GAS  D:\Temp\ccqmjWev.s 			page 47


 1212              		.loc 1 130 5 view .LVU349
 1213 0004 FFF7FEFF 		bl	lv_debug_check_null
 1214              	.LVL129:
 130:lvgl/src/lv_widgets/lv_slider.c ****     return lv_bar_get_value(slider);
 1215              		.loc 1 130 5 is_stmt 0 view .LVU350
 1216 0008 28B9     		cbnz	r0, .L87
 130:lvgl/src/lv_widgets/lv_slider.c ****     return lv_bar_get_value(slider);
 1217              		.loc 1 130 5 is_stmt 1 discriminator 1 view .LVU351
 130:lvgl/src/lv_widgets/lv_slider.c ****     return lv_bar_get_value(slider);
 1218              		.loc 1 130 5 discriminator 1 view .LVU352
 1219 000a 2246     		mov	r2, r4
 1220 000c 0023     		movs	r3, #0
 1221 000e 0448     		ldr	r0, .L90
 1222 0010 FFF7FEFF 		bl	lv_debug_log_error
 1223              	.LVL130:
 1224              	.L88:
 130:lvgl/src/lv_widgets/lv_slider.c ****     return lv_bar_get_value(slider);
 1225              		.loc 1 130 5 discriminator 1 view .LVU353
 130:lvgl/src/lv_widgets/lv_slider.c ****     return lv_bar_get_value(slider);
 1226              		.loc 1 130 5 discriminator 1 view .LVU354
 1227 0014 FEE7     		b	.L88
 1228              	.L87:
 130:lvgl/src/lv_widgets/lv_slider.c ****     return lv_bar_get_value(slider);
 1229              		.loc 1 130 40 discriminator 2 view .LVU355
 131:lvgl/src/lv_widgets/lv_slider.c **** }
 1230              		.loc 1 131 5 discriminator 2 view .LVU356
 131:lvgl/src/lv_widgets/lv_slider.c **** }
 1231              		.loc 1 131 12 is_stmt 0 discriminator 2 view .LVU357
 1232 0016 2046     		mov	r0, r4
 1233 0018 FFF7FEFF 		bl	lv_bar_get_value
 1234              	.LVL131:
 132:lvgl/src/lv_widgets/lv_slider.c **** 
 1235              		.loc 1 132 1 discriminator 2 view .LVU358
 1236 001c 10BD     		pop	{r4, pc}
 1237              	.LVL132:
 1238              	.L91:
 132:lvgl/src/lv_widgets/lv_slider.c **** 
 1239              		.loc 1 132 1 discriminator 2 view .LVU359
 1240 001e 00BF     		.align	2
 1241              	.L90:
 1242 0020 00000000 		.word	.LC0
 1243              		.cfi_endproc
 1244              	.LFE480:
 1246              		.section	.text.lv_slider_signal,"ax",%progbits
 1247              		.align	1
 1248              		.syntax unified
 1249              		.thumb
 1250              		.thumb_func
 1251              		.fpu fpv4-sp-d16
 1253              	lv_slider_signal:
 1254              	.LVL133:
 1255              	.LFB483:
 248:lvgl/src/lv_widgets/lv_slider.c ****     lv_res_t res;
 1256              		.loc 1 248 1 is_stmt 1 view -0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 16
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\Temp\ccqmjWev.s 			page 48


 248:lvgl/src/lv_widgets/lv_slider.c ****     lv_res_t res;
 1260              		.loc 1 248 1 is_stmt 0 view .LVU361
 1261 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1262              	.LCFI14:
 1263              		.cfi_def_cfa_offset 36
 1264              		.cfi_offset 4, -36
 1265              		.cfi_offset 5, -32
 1266              		.cfi_offset 6, -28
 1267              		.cfi_offset 7, -24
 1268              		.cfi_offset 8, -20
 1269              		.cfi_offset 9, -16
 1270              		.cfi_offset 10, -12
 1271              		.cfi_offset 11, -8
 1272              		.cfi_offset 14, -4
 1273 0004 85B0     		sub	sp, sp, #20
 1274              	.LCFI15:
 1275              		.cfi_def_cfa_offset 56
 1276 0006 0446     		mov	r4, r0
 1277 0008 0F46     		mov	r7, r1
 1278 000a 9046     		mov	r8, r2
 249:lvgl/src/lv_widgets/lv_slider.c **** 
 1279              		.loc 1 249 5 is_stmt 1 view .LVU362
 251:lvgl/src/lv_widgets/lv_slider.c ****         lv_get_style_info_t * info = param;
 1280              		.loc 1 251 5 view .LVU363
 251:lvgl/src/lv_widgets/lv_slider.c ****         lv_get_style_info_t * info = param;
 1281              		.loc 1 251 7 is_stmt 0 view .LVU364
 1282 000c 0829     		cmp	r1, #8
 1283 000e 36D0     		beq	.L142
 259:lvgl/src/lv_widgets/lv_slider.c ****     if(res != LV_RES_OK) return res;
 1284              		.loc 1 259 5 is_stmt 1 view .LVU365
 259:lvgl/src/lv_widgets/lv_slider.c ****     if(res != LV_RES_OK) return res;
 1285              		.loc 1 259 11 is_stmt 0 view .LVU366
 1286 0010 CC4B     		ldr	r3, .L162
 1287 0012 1B68     		ldr	r3, [r3]
 1288 0014 9847     		blx	r3
 1289              	.LVL134:
 259:lvgl/src/lv_widgets/lv_slider.c ****     if(res != LV_RES_OK) return res;
 1290              		.loc 1 259 11 view .LVU367
 1291 0016 0546     		mov	r5, r0
 1292              	.LVL135:
 260:lvgl/src/lv_widgets/lv_slider.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 1293              		.loc 1 260 5 is_stmt 1 view .LVU368
 260:lvgl/src/lv_widgets/lv_slider.c ****     if(sign == LV_SIGNAL_GET_TYPE) return lv_obj_handle_get_type_signal(param, LV_OBJX_NAME);
 1294              		.loc 1 260 7 is_stmt 0 view .LVU369
 1295 0018 0128     		cmp	r0, #1
 1296 001a 37D1     		bne	.L94
 261:lvgl/src/lv_widgets/lv_slider.c **** 
 1297              		.loc 1 261 5 is_stmt 1 view .LVU370
 261:lvgl/src/lv_widgets/lv_slider.c **** 
 1298              		.loc 1 261 7 is_stmt 0 view .LVU371
 1299 001c 072F     		cmp	r7, #7
 1300 001e 41D0     		beq	.L143
 263:lvgl/src/lv_widgets/lv_slider.c ****     lv_slider_ext_t * ext = lv_obj_get_ext_attr(slider);
 1301              		.loc 1 263 5 is_stmt 1 view .LVU372
 1302              	.LVL136:
 1303              	.LBB123:
 1304              	.LBI123:
ARM GAS  D:\Temp\ccqmjWev.s 			page 49


 200:lvgl/src/lv_widgets/lv_slider.h **** {
 1305              		.loc 5 200 32 view .LVU373
 1306              	.LBB124:
 202:lvgl/src/lv_widgets/lv_slider.h ****     if(type == LV_BAR_TYPE_SYMMETRICAL)
 1307              		.loc 5 202 5 view .LVU374
 202:lvgl/src/lv_widgets/lv_slider.h ****     if(type == LV_BAR_TYPE_SYMMETRICAL)
 1308              		.loc 5 202 26 is_stmt 0 view .LVU375
 1309 0020 2046     		mov	r0, r4
 1310              	.LVL137:
 202:lvgl/src/lv_widgets/lv_slider.h ****     if(type == LV_BAR_TYPE_SYMMETRICAL)
 1311              		.loc 5 202 26 view .LVU376
 1312 0022 FFF7FEFF 		bl	lv_bar_get_type
 1313              	.LVL138:
 203:lvgl/src/lv_widgets/lv_slider.h ****         return LV_SLIDER_TYPE_SYMMETRICAL;
 1314              		.loc 5 203 5 is_stmt 1 view .LVU377
 203:lvgl/src/lv_widgets/lv_slider.h ****         return LV_SLIDER_TYPE_SYMMETRICAL;
 1315              		.loc 5 203 7 is_stmt 0 view .LVU378
 1316 0026 0128     		cmp	r0, #1
 1317 0028 45D0     		beq	.L138
 1318              		.loc 5 205 10 is_stmt 1 view .LVU379
 1319              		.loc 5 205 12 is_stmt 0 view .LVU380
 1320 002a 0228     		cmp	r0, #2
 1321 002c 40D0     		beq	.L144
 206:lvgl/src/lv_widgets/lv_slider.h ****         return LV_SLIDER_TYPE_RANGE;
 207:lvgl/src/lv_widgets/lv_slider.h ****     else
 208:lvgl/src/lv_widgets/lv_slider.h ****         return LV_SLIDER_TYPE_NORMAL;
 1322              		.loc 5 208 16 view .LVU381
 1323 002e 4FF00009 		mov	r9, #0
 1324              	.L96:
 1325              	.LVL139:
 1326              		.loc 5 208 16 view .LVU382
 1327              	.LBE124:
 1328              	.LBE123:
 264:lvgl/src/lv_widgets/lv_slider.c **** 
 1329              		.loc 1 264 5 is_stmt 1 view .LVU383
 264:lvgl/src/lv_widgets/lv_slider.c **** 
 1330              		.loc 1 264 29 is_stmt 0 view .LVU384
 1331 0032 2046     		mov	r0, r4
 1332 0034 FFF7FEFF 		bl	lv_obj_get_ext_attr
 1333              	.LVL140:
 1334 0038 0646     		mov	r6, r0
 1335              	.LVL141:
 267:lvgl/src/lv_widgets/lv_slider.c ****         lv_hit_test_info_t * info = param;
 1336              		.loc 1 267 5 is_stmt 1 view .LVU385
 267:lvgl/src/lv_widgets/lv_slider.c ****         lv_hit_test_info_t * info = param;
 1337              		.loc 1 267 7 is_stmt 0 view .LVU386
 1338 003a 0A2F     		cmp	r7, #10
 1339 003c 3ED0     		beq	.L145
 1340              	.LVL142:
 1341              	.L97:
 279:lvgl/src/lv_widgets/lv_slider.c **** 
 1342              		.loc 1 279 5 is_stmt 1 view .LVU387
 281:lvgl/src/lv_widgets/lv_slider.c ****         ext->dragging = true;
 1343              		.loc 1 281 5 view .LVU388
 281:lvgl/src/lv_widgets/lv_slider.c ****         ext->dragging = true;
 1344              		.loc 1 281 7 is_stmt 0 view .LVU389
 1345 003e 0B2F     		cmp	r7, #11
ARM GAS  D:\Temp\ccqmjWev.s 			page 50


 1346 0040 53D0     		beq	.L146
 330:lvgl/src/lv_widgets/lv_slider.c ****         if(lv_indev_get_type(param) != LV_INDEV_TYPE_POINTER) return res;
 1347              		.loc 1 330 10 is_stmt 1 view .LVU390
 330:lvgl/src/lv_widgets/lv_slider.c ****         if(lv_indev_get_type(param) != LV_INDEV_TYPE_POINTER) return res;
 1348              		.loc 1 330 12 is_stmt 0 view .LVU391
 1349 0042 0C2F     		cmp	r7, #12
 1350 0044 00F0E880 		beq	.L147
 1351              	.L111:
 386:lvgl/src/lv_widgets/lv_slider.c ****         ext->dragging = false;
 1352              		.loc 1 386 10 is_stmt 1 view .LVU392
 386:lvgl/src/lv_widgets/lv_slider.c ****         ext->dragging = false;
 1353              		.loc 1 386 40 is_stmt 0 view .LVU393
 1354 0048 A7F10D03 		sub	r3, r7, #13
 1355 004c DBB2     		uxtb	r3, r3
 386:lvgl/src/lv_widgets/lv_slider.c ****         ext->dragging = false;
 1356              		.loc 1 386 12 view .LVU394
 1357 004e 012B     		cmp	r3, #1
 1358 0050 40F28181 		bls	.L148
 412:lvgl/src/lv_widgets/lv_slider.c ****         ext->left_knob_focus = 0;
 1359              		.loc 1 412 10 is_stmt 1 view .LVU395
 412:lvgl/src/lv_widgets/lv_slider.c ****         ext->left_knob_focus = 0;
 1360              		.loc 1 412 12 is_stmt 0 view .LVU396
 1361 0054 162F     		cmp	r7, #22
 1362 0056 00F0B881 		beq	.L149
 415:lvgl/src/lv_widgets/lv_slider.c ****         /* The knob size depends on slider size.
 1363              		.loc 1 415 10 is_stmt 1 view .LVU397
 415:lvgl/src/lv_widgets/lv_slider.c ****         /* The knob size depends on slider size.
 1364              		.loc 1 415 12 is_stmt 0 view .LVU398
 1365 005a 022F     		cmp	r7, #2
 1366 005c 00F0BC81 		beq	.L150
 423:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t knob_left = lv_obj_get_style_pad_left(slider,   LV_SLIDER_PART_KNOB);
 1367              		.loc 1 423 10 is_stmt 1 view .LVU399
 423:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t knob_left = lv_obj_get_style_pad_left(slider,   LV_SLIDER_PART_KNOB);
 1368              		.loc 1 423 12 is_stmt 0 view .LVU400
 1369 0060 062F     		cmp	r7, #6
 1370 0062 00F0DA81 		beq	.L151
 440:lvgl/src/lv_widgets/lv_slider.c **** #if LV_USE_GROUP
 1371              		.loc 1 440 10 is_stmt 1 view .LVU401
 440:lvgl/src/lv_widgets/lv_slider.c **** #if LV_USE_GROUP
 1372              		.loc 1 440 12 is_stmt 0 view .LVU402
 1373 0066 182F     		cmp	r7, #24
 1374 0068 00F02182 		beq	.L152
 460:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_clean_style_list(slider, LV_SLIDER_PART_KNOB);
 1375              		.loc 1 460 10 is_stmt 1 view .LVU403
 460:lvgl/src/lv_widgets/lv_slider.c ****         lv_obj_clean_style_list(slider, LV_SLIDER_PART_KNOB);
 1376              		.loc 1 460 12 is_stmt 0 view .LVU404
 1377 006c 002F     		cmp	r7, #0
 1378 006e 00F06B82 		beq	.L153
 463:lvgl/src/lv_widgets/lv_slider.c **** #if LV_USE_GROUP
 1379              		.loc 1 463 10 is_stmt 1 view .LVU405
 463:lvgl/src/lv_widgets/lv_slider.c **** #if LV_USE_GROUP
 1380              		.loc 1 463 12 is_stmt 0 view .LVU406
 1381 0072 192F     		cmp	r7, #25
 1382 0074 0AD1     		bne	.L94
 1383              	.LBB126:
 465:lvgl/src/lv_widgets/lv_slider.c ****         *editable       = true;
 1384              		.loc 1 465 9 is_stmt 1 view .LVU407
ARM GAS  D:\Temp\ccqmjWev.s 			page 51


 1385              	.LVL143:
 466:lvgl/src/lv_widgets/lv_slider.c **** #endif
 1386              		.loc 1 466 9 view .LVU408
 466:lvgl/src/lv_widgets/lv_slider.c **** #endif
 1387              		.loc 1 466 25 is_stmt 0 view .LVU409
 1388 0076 0123     		movs	r3, #1
 1389 0078 88F80030 		strb	r3, [r8]
 1390 007c 06E0     		b	.L94
 1391              	.LVL144:
 1392              	.L142:
 466:lvgl/src/lv_widgets/lv_slider.c **** #endif
 1393              		.loc 1 466 25 view .LVU410
 1394              	.LBE126:
 1395              	.LBB127:
 252:lvgl/src/lv_widgets/lv_slider.c ****         info->result = lv_slider_get_style(slider, info->part);
 1396              		.loc 1 252 9 is_stmt 1 view .LVU411
 253:lvgl/src/lv_widgets/lv_slider.c ****         if(info->result != NULL) return LV_RES_OK;
 1397              		.loc 1 253 9 view .LVU412
 253:lvgl/src/lv_widgets/lv_slider.c ****         if(info->result != NULL) return LV_RES_OK;
 1398              		.loc 1 253 24 is_stmt 0 view .LVU413
 1399 007e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1400              	.LVL145:
 253:lvgl/src/lv_widgets/lv_slider.c ****         if(info->result != NULL) return LV_RES_OK;
 1401              		.loc 1 253 24 view .LVU414
 1402 0080 FFF7FEFF 		bl	lv_slider_get_style
 1403              	.LVL146:
 253:lvgl/src/lv_widgets/lv_slider.c ****         if(info->result != NULL) return LV_RES_OK;
 1404              		.loc 1 253 22 view .LVU415
 1405 0084 C8F80400 		str	r0, [r8, #4]
 254:lvgl/src/lv_widgets/lv_slider.c ****         else return ancestor_signal(slider, sign, param);
 1406              		.loc 1 254 9 is_stmt 1 view .LVU416
 254:lvgl/src/lv_widgets/lv_slider.c ****         else return ancestor_signal(slider, sign, param);
 1407              		.loc 1 254 11 is_stmt 0 view .LVU417
 1408 0088 20B1     		cbz	r0, .L154
 254:lvgl/src/lv_widgets/lv_slider.c ****         else return ancestor_signal(slider, sign, param);
 1409              		.loc 1 254 41 view .LVU418
 1410 008a 0125     		movs	r5, #1
 1411              	.LVL147:
 1412              	.L94:
 254:lvgl/src/lv_widgets/lv_slider.c ****         else return ancestor_signal(slider, sign, param);
 1413              		.loc 1 254 41 view .LVU419
 1414              	.LBE127:
 471:lvgl/src/lv_widgets/lv_slider.c **** 
 1415              		.loc 1 471 1 view .LVU420
 1416 008c 2846     		mov	r0, r5
 1417 008e 05B0     		add	sp, sp, #20
 1418              	.LCFI16:
 1419              		.cfi_remember_state
 1420              		.cfi_def_cfa_offset 36
 1421              		@ sp needed
 1422 0090 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1423              	.LVL148:
 1424              	.L154:
 1425              	.LCFI17:
 1426              		.cfi_restore_state
 1427              	.LBB128:
 255:lvgl/src/lv_widgets/lv_slider.c ****     }
ARM GAS  D:\Temp\ccqmjWev.s 			page 52


 1428              		.loc 1 255 14 is_stmt 1 view .LVU421
 255:lvgl/src/lv_widgets/lv_slider.c ****     }
 1429              		.loc 1 255 21 is_stmt 0 view .LVU422
 1430 0094 AB4B     		ldr	r3, .L162
 1431 0096 1B68     		ldr	r3, [r3]
 1432 0098 4246     		mov	r2, r8
 1433 009a 3946     		mov	r1, r7
 1434 009c 2046     		mov	r0, r4
 1435 009e 9847     		blx	r3
 1436              	.LVL149:
 1437 00a0 0546     		mov	r5, r0
 1438 00a2 F3E7     		b	.L94
 1439              	.LVL150:
 1440              	.L143:
 255:lvgl/src/lv_widgets/lv_slider.c ****     }
 1441              		.loc 1 255 21 view .LVU423
 1442              	.LBE128:
 261:lvgl/src/lv_widgets/lv_slider.c **** 
 1443              		.loc 1 261 36 is_stmt 1 discriminator 1 view .LVU424
 261:lvgl/src/lv_widgets/lv_slider.c **** 
 1444              		.loc 1 261 43 is_stmt 0 discriminator 1 view .LVU425
 1445 00a4 A849     		ldr	r1, .L162+4
 1446 00a6 4046     		mov	r0, r8
 1447              	.LVL151:
 261:lvgl/src/lv_widgets/lv_slider.c **** 
 1448              		.loc 1 261 43 discriminator 1 view .LVU426
 1449 00a8 FFF7FEFF 		bl	lv_obj_handle_get_type_signal
 1450              	.LVL152:
 1451 00ac 0546     		mov	r5, r0
 1452 00ae EDE7     		b	.L94
 1453              	.LVL153:
 1454              	.L144:
 1455              	.LBB129:
 1456              	.LBB125:
 206:lvgl/src/lv_widgets/lv_slider.h ****     else
 1457              		.loc 5 206 16 view .LVU427
 1458 00b0 4FF00209 		mov	r9, #2
 1459 00b4 BDE7     		b	.L96
 1460              	.L138:
 204:lvgl/src/lv_widgets/lv_slider.h ****     else if(type == LV_BAR_TYPE_CUSTOM)
 1461              		.loc 5 204 16 view .LVU428
 1462 00b6 4FF00109 		mov	r9, #1
 1463 00ba BAE7     		b	.L96
 1464              	.LVL154:
 1465              	.L145:
 204:lvgl/src/lv_widgets/lv_slider.h ****     else if(type == LV_BAR_TYPE_CUSTOM)
 1466              		.loc 5 204 16 view .LVU429
 1467              	.LBE125:
 1468              	.LBE129:
 1469              	.LBB130:
 268:lvgl/src/lv_widgets/lv_slider.c **** 
 1470              		.loc 1 268 9 is_stmt 1 view .LVU430
 271:lvgl/src/lv_widgets/lv_slider.c **** 
 1471              		.loc 1 271 9 view .LVU431
 271:lvgl/src/lv_widgets/lv_slider.c **** 
 1472              		.loc 1 271 24 is_stmt 0 view .LVU432
 1473 00bc 0022     		movs	r2, #0
ARM GAS  D:\Temp\ccqmjWev.s 			page 53


 1474 00be D8F80010 		ldr	r1, [r8]
 1475 00c2 4830     		adds	r0, r0, #72
 1476              	.LVL155:
 271:lvgl/src/lv_widgets/lv_slider.c **** 
 1477              		.loc 1 271 24 view .LVU433
 1478 00c4 FFF7FEFF 		bl	_lv_area_is_point_on
 1479              	.LVL156:
 271:lvgl/src/lv_widgets/lv_slider.c **** 
 1480              		.loc 1 271 22 view .LVU434
 1481 00c8 88F80400 		strb	r0, [r8, #4]
 274:lvgl/src/lv_widgets/lv_slider.c ****             info->result = _lv_area_is_point_on(&ext->left_knob_area, info->point, 0);
 1482              		.loc 1 274 9 is_stmt 1 view .LVU435
 274:lvgl/src/lv_widgets/lv_slider.c ****             info->result = _lv_area_is_point_on(&ext->left_knob_area, info->point, 0);
 1483              		.loc 1 274 11 is_stmt 0 view .LVU436
 1484 00cc 0028     		cmp	r0, #0
 1485 00ce B6D1     		bne	.L97
 274:lvgl/src/lv_widgets/lv_slider.c ****             info->result = _lv_area_is_point_on(&ext->left_knob_area, info->point, 0);
 1486              		.loc 1 274 36 discriminator 1 view .LVU437
 1487 00d0 B9F1020F 		cmp	r9, #2
 1488 00d4 B3D1     		bne	.L97
 275:lvgl/src/lv_widgets/lv_slider.c ****         }
 1489              		.loc 1 275 13 is_stmt 1 view .LVU438
 275:lvgl/src/lv_widgets/lv_slider.c ****         }
 1490              		.loc 1 275 28 is_stmt 0 view .LVU439
 1491 00d6 0022     		movs	r2, #0
 1492 00d8 D8F80010 		ldr	r1, [r8]
 1493 00dc 06F14000 		add	r0, r6, #64
 1494 00e0 FFF7FEFF 		bl	_lv_area_is_point_on
 1495              	.LVL157:
 275:lvgl/src/lv_widgets/lv_slider.c ****         }
 1496              		.loc 1 275 26 view .LVU440
 1497 00e4 88F80400 		strb	r0, [r8, #4]
 1498 00e8 A9E7     		b	.L97
 1499              	.LVL158:
 1500              	.L146:
 275:lvgl/src/lv_widgets/lv_slider.c ****         }
 1501              		.loc 1 275 26 view .LVU441
 1502              	.LBE130:
 282:lvgl/src/lv_widgets/lv_slider.c ****         if(type == LV_SLIDER_TYPE_NORMAL || type == LV_SLIDER_TYPE_SYMMETRICAL) {
 1503              		.loc 1 282 9 is_stmt 1 view .LVU442
 282:lvgl/src/lv_widgets/lv_slider.c ****         if(type == LV_SLIDER_TYPE_NORMAL || type == LV_SLIDER_TYPE_SYMMETRICAL) {
 1504              		.loc 1 282 23 is_stmt 0 view .LVU443
 1505 00ea 96F85430 		ldrb	r3, [r6, #84]	@ zero_extendqisi2
 1506 00ee 43F00103 		orr	r3, r3, #1
 1507 00f2 86F85430 		strb	r3, [r6, #84]
 283:lvgl/src/lv_widgets/lv_slider.c ****             ext->value_to_set = &ext->bar.cur_value;
 1508              		.loc 1 283 9 is_stmt 1 view .LVU444
 283:lvgl/src/lv_widgets/lv_slider.c ****             ext->value_to_set = &ext->bar.cur_value;
 1509              		.loc 1 283 11 is_stmt 0 view .LVU445
 1510 00f6 B9F1010F 		cmp	r9, #1
 1511 00fa 49D9     		bls	.L155
 286:lvgl/src/lv_widgets/lv_slider.c ****             lv_indev_get_point(param, &p);
 1512              		.loc 1 286 14 is_stmt 1 view .LVU446
 286:lvgl/src/lv_widgets/lv_slider.c ****             lv_indev_get_point(param, &p);
 1513              		.loc 1 286 16 is_stmt 0 view .LVU447
 1514 00fc B9F1020F 		cmp	r9, #2
 1515 0100 C4D1     		bne	.L94
ARM GAS  D:\Temp\ccqmjWev.s 			page 54


 1516              	.LBB131:
 287:lvgl/src/lv_widgets/lv_slider.c ****             bool hor = lv_obj_get_width(slider) >= lv_obj_get_height(slider);
 1517              		.loc 1 287 13 is_stmt 1 view .LVU448
 1518 0102 03A9     		add	r1, sp, #12
 1519 0104 4046     		mov	r0, r8
 1520 0106 FFF7FEFF 		bl	lv_indev_get_point
 1521              	.LVL159:
 288:lvgl/src/lv_widgets/lv_slider.c ****             lv_bidi_dir_t base_dir = lv_obj_get_base_dir(slider);
 1522              		.loc 1 288 13 view .LVU449
 288:lvgl/src/lv_widgets/lv_slider.c ****             lv_bidi_dir_t base_dir = lv_obj_get_base_dir(slider);
 1523              		.loc 1 288 24 is_stmt 0 view .LVU450
 1524 010a 2046     		mov	r0, r4
 1525 010c FFF7FEFF 		bl	lv_obj_get_width
 1526              	.LVL160:
 1527 0110 8046     		mov	r8, r0
 1528              	.LVL161:
 288:lvgl/src/lv_widgets/lv_slider.c ****             lv_bidi_dir_t base_dir = lv_obj_get_base_dir(slider);
 1529              		.loc 1 288 52 view .LVU451
 1530 0112 2046     		mov	r0, r4
 1531 0114 FFF7FEFF 		bl	lv_obj_get_height
 1532              	.LVL162:
 1533 0118 0746     		mov	r7, r0
 1534              	.LVL163:
 289:lvgl/src/lv_widgets/lv_slider.c **** 
 1535              		.loc 1 289 13 is_stmt 1 view .LVU452
 289:lvgl/src/lv_widgets/lv_slider.c **** 
 1536              		.loc 1 289 38 is_stmt 0 view .LVU453
 1537 011a 2046     		mov	r0, r4
 1538 011c FFF7FEFF 		bl	lv_obj_get_base_dir
 1539              	.LVL164:
 291:lvgl/src/lv_widgets/lv_slider.c ****             if(hor) {
 1540              		.loc 1 291 13 is_stmt 1 view .LVU454
 292:lvgl/src/lv_widgets/lv_slider.c ****                 if((base_dir != LV_BIDI_DIR_RTL && p.x > ext->right_knob_area.x2) || (base_dir == L
 1541              		.loc 1 292 13 view .LVU455
 292:lvgl/src/lv_widgets/lv_slider.c ****                 if((base_dir != LV_BIDI_DIR_RTL && p.x > ext->right_knob_area.x2) || (base_dir == L
 1542              		.loc 1 292 15 is_stmt 0 view .LVU456
 1543 0120 B845     		cmp	r8, r7
 1544 0122 4BDB     		blt	.L100
 293:lvgl/src/lv_widgets/lv_slider.c ****                                                                                       p.x < ext->ri
 1545              		.loc 1 293 17 is_stmt 1 view .LVU457
 293:lvgl/src/lv_widgets/lv_slider.c ****                                                                                       p.x < ext->ri
 1546              		.loc 1 293 19 is_stmt 0 view .LVU458
 1547 0124 0128     		cmp	r0, #1
 1548 0126 05D0     		beq	.L101
 293:lvgl/src/lv_widgets/lv_slider.c ****                                                                                       p.x < ext->ri
 1549              		.loc 1 293 53 discriminator 1 view .LVU459
 1550 0128 BDF90C20 		ldrsh	r2, [sp, #12]
 293:lvgl/src/lv_widgets/lv_slider.c ****                                                                                       p.x < ext->ri
 1551              		.loc 1 293 78 discriminator 1 view .LVU460
 1552 012c B6F94C30 		ldrsh	r3, [r6, #76]
 293:lvgl/src/lv_widgets/lv_slider.c ****                                                                                       p.x < ext->ri
 1553              		.loc 1 293 49 discriminator 1 view .LVU461
 1554 0130 9A42     		cmp	r2, r3
 1555 0132 35DC     		bgt	.L102
 1556              	.L101:
 293:lvgl/src/lv_widgets/lv_slider.c ****                                                                                       p.x < ext->ri
 1557              		.loc 1 293 83 discriminator 3 view .LVU462
ARM GAS  D:\Temp\ccqmjWev.s 			page 55


 1558 0134 0128     		cmp	r0, #1
 1559 0136 2DD0     		beq	.L156
 1560              	.L103:
 297:lvgl/src/lv_widgets/lv_slider.c ****                                                                                           p.x > ext
 1561              		.loc 1 297 22 is_stmt 1 view .LVU463
 297:lvgl/src/lv_widgets/lv_slider.c ****                                                                                           p.x > ext
 1562              		.loc 1 297 24 is_stmt 0 view .LVU464
 1563 0138 0128     		cmp	r0, #1
 1564 013a 05D0     		beq	.L104
 297:lvgl/src/lv_widgets/lv_slider.c ****                                                                                           p.x > ext
 1565              		.loc 1 297 58 discriminator 1 view .LVU465
 1566 013c BDF90C20 		ldrsh	r2, [sp, #12]
 297:lvgl/src/lv_widgets/lv_slider.c ****                                                                                           p.x > ext
 1567              		.loc 1 297 82 discriminator 1 view .LVU466
 1568 0140 B6F94030 		ldrsh	r3, [r6, #64]
 297:lvgl/src/lv_widgets/lv_slider.c ****                                                                                           p.x > ext
 1569              		.loc 1 297 54 discriminator 1 view .LVU467
 1570 0144 9A42     		cmp	r2, r3
 1571 0146 33DB     		blt	.L105
 1572              	.L104:
 297:lvgl/src/lv_widgets/lv_slider.c ****                                                                                           p.x > ext
 1573              		.loc 1 297 87 discriminator 3 view .LVU468
 1574 0148 0128     		cmp	r0, #1
 1575 014a 2BD0     		beq	.L157
 1576              	.L106:
 303:lvgl/src/lv_widgets/lv_slider.c ****                     dist_right = LV_MATH_ABS((ext->right_knob_area.x1 + (ext->right_knob_area.x2 - 
 1577              		.loc 1 303 21 is_stmt 1 view .LVU469
 303:lvgl/src/lv_widgets/lv_slider.c ****                     dist_right = LV_MATH_ABS((ext->right_knob_area.x1 + (ext->right_knob_area.x2 - 
 1578              		.loc 1 303 33 is_stmt 0 view .LVU470
 1579 014c B6F94030 		ldrsh	r3, [r6, #64]
 1580 0150 B6F94420 		ldrsh	r2, [r6, #68]
 1581 0154 D21A     		subs	r2, r2, r3
 1582 0156 02EBD272 		add	r2, r2, r2, lsr #31
 1583 015a 03EB6202 		add	r2, r3, r2, asr #1
 1584 015e BDF90C00 		ldrsh	r0, [sp, #12]
 1585              	.LVL165:
 303:lvgl/src/lv_widgets/lv_slider.c ****                     dist_right = LV_MATH_ABS((ext->right_knob_area.x1 + (ext->right_knob_area.x2 - 
 1586              		.loc 1 303 33 view .LVU471
 1587 0162 121A     		subs	r2, r2, r0
 1588 0164 002A     		cmp	r2, #0
 1589 0166 B8BF     		it	lt
 1590 0168 5242     		rsblt	r2, r2, #0
 303:lvgl/src/lv_widgets/lv_slider.c ****                     dist_right = LV_MATH_ABS((ext->right_knob_area.x1 + (ext->right_knob_area.x2 - 
 1591              		.loc 1 303 31 view .LVU472
 1592 016a 12B2     		sxth	r2, r2
 1593              	.LVL166:
 304:lvgl/src/lv_widgets/lv_slider.c **** 
 1594              		.loc 1 304 21 is_stmt 1 view .LVU473
 304:lvgl/src/lv_widgets/lv_slider.c **** 
 1595              		.loc 1 304 34 is_stmt 0 view .LVU474
 1596 016c B6F94830 		ldrsh	r3, [r6, #72]
 1597 0170 B6F94C10 		ldrsh	r1, [r6, #76]
 1598 0174 C91A     		subs	r1, r1, r3
 1599 0176 01EBD171 		add	r1, r1, r1, lsr #31
 1600 017a 03EB6103 		add	r3, r3, r1, asr #1
 1601 017e 1B1A     		subs	r3, r3, r0
 1602 0180 002B     		cmp	r3, #0
ARM GAS  D:\Temp\ccqmjWev.s 			page 56


 1603 0182 B8BF     		it	lt
 1604 0184 5B42     		rsblt	r3, r3, #0
 304:lvgl/src/lv_widgets/lv_slider.c **** 
 1605              		.loc 1 304 32 view .LVU475
 1606 0186 1BB2     		sxth	r3, r3
 1607              	.LVL167:
 307:lvgl/src/lv_widgets/lv_slider.c ****                     else ext->value_to_set = &ext->bar.start_value;
 1608              		.loc 1 307 21 is_stmt 1 view .LVU476
 307:lvgl/src/lv_widgets/lv_slider.c ****                     else ext->value_to_set = &ext->bar.start_value;
 1609              		.loc 1 307 23 is_stmt 0 view .LVU477
 1610 0188 9A42     		cmp	r2, r3
 1611 018a 14DD     		ble	.L107
 307:lvgl/src/lv_widgets/lv_slider.c ****                     else ext->value_to_set = &ext->bar.start_value;
 1612              		.loc 1 307 47 is_stmt 1 discriminator 1 view .LVU478
 307:lvgl/src/lv_widgets/lv_slider.c ****                     else ext->value_to_set = &ext->bar.start_value;
 1613              		.loc 1 307 65 is_stmt 0 discriminator 1 view .LVU479
 1614 018c 3665     		str	r6, [r6, #80]
 1615 018e 7DE7     		b	.L94
 1616              	.LVL168:
 1617              	.L155:
 307:lvgl/src/lv_widgets/lv_slider.c ****                     else ext->value_to_set = &ext->bar.start_value;
 1618              		.loc 1 307 65 discriminator 1 view .LVU480
 1619              	.LBE131:
 284:lvgl/src/lv_widgets/lv_slider.c ****         }
 1620              		.loc 1 284 13 is_stmt 1 view .LVU481
 284:lvgl/src/lv_widgets/lv_slider.c ****         }
 1621              		.loc 1 284 31 is_stmt 0 view .LVU482
 1622 0190 3665     		str	r6, [r6, #80]
 1623 0192 7BE7     		b	.L94
 1624              	.LVL169:
 1625              	.L156:
 1626              	.LBB132:
 294:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.cur_value;
 1627              		.loc 1 294 88 discriminator 4 view .LVU483
 1628 0194 BDF90C20 		ldrsh	r2, [sp, #12]
 294:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.cur_value;
 1629              		.loc 1 294 113 discriminator 4 view .LVU484
 1630 0198 B6F94830 		ldrsh	r3, [r6, #72]
 293:lvgl/src/lv_widgets/lv_slider.c ****                                                                                       p.x < ext->ri
 1631              		.loc 1 293 115 discriminator 4 view .LVU485
 1632 019c 9A42     		cmp	r2, r3
 1633 019e CBDA     		bge	.L103
 1634              	.L102:
 295:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1635              		.loc 1 295 21 is_stmt 1 view .LVU486
 295:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1636              		.loc 1 295 39 is_stmt 0 view .LVU487
 1637 01a0 3665     		str	r6, [r6, #80]
 1638 01a2 73E7     		b	.L94
 1639              	.L157:
 298:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.start_value;
 1640              		.loc 1 298 92 discriminator 4 view .LVU488
 1641 01a4 BDF90C20 		ldrsh	r2, [sp, #12]
 298:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.start_value;
 1642              		.loc 1 298 116 discriminator 4 view .LVU489
 1643 01a8 B6F94430 		ldrsh	r3, [r6, #68]
 297:lvgl/src/lv_widgets/lv_slider.c ****                                                                                           p.x > ext
ARM GAS  D:\Temp\ccqmjWev.s 			page 57


 1644              		.loc 1 297 119 discriminator 4 view .LVU490
 1645 01ac 9A42     		cmp	r2, r3
 1646 01ae CDDD     		ble	.L106
 1647              	.L105:
 299:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1648              		.loc 1 299 21 is_stmt 1 view .LVU491
 299:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1649              		.loc 1 299 41 is_stmt 0 view .LVU492
 1650 01b0 B31D     		adds	r3, r6, #6
 299:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1651              		.loc 1 299 39 view .LVU493
 1652 01b2 3365     		str	r3, [r6, #80]
 1653 01b4 6AE7     		b	.L94
 1654              	.LVL170:
 1655              	.L107:
 308:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1656              		.loc 1 308 26 is_stmt 1 view .LVU494
 308:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1657              		.loc 1 308 46 is_stmt 0 view .LVU495
 1658 01b6 B31D     		adds	r3, r6, #6
 1659              	.LVL171:
 308:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1660              		.loc 1 308 44 view .LVU496
 1661 01b8 3365     		str	r3, [r6, #80]
 1662 01ba 67E7     		b	.L94
 1663              	.LVL172:
 1664              	.L100:
 312:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.cur_value;
 1665              		.loc 1 312 17 is_stmt 1 view .LVU497
 312:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.cur_value;
 1666              		.loc 1 312 21 is_stmt 0 view .LVU498
 1667 01bc BDF90E20 		ldrsh	r2, [sp, #14]
 312:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.cur_value;
 1668              		.loc 1 312 46 view .LVU499
 1669 01c0 B6F94A30 		ldrsh	r3, [r6, #74]
 312:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.cur_value;
 1670              		.loc 1 312 19 view .LVU500
 1671 01c4 9A42     		cmp	r2, r3
 1672 01c6 01DA     		bge	.L108
 313:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1673              		.loc 1 313 21 is_stmt 1 view .LVU501
 313:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1674              		.loc 1 313 39 is_stmt 0 view .LVU502
 1675 01c8 3665     		str	r6, [r6, #80]
 1676 01ca 5FE7     		b	.L94
 1677              	.L108:
 315:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.start_value;
 1678              		.loc 1 315 22 is_stmt 1 view .LVU503
 315:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.start_value;
 1679              		.loc 1 315 50 is_stmt 0 view .LVU504
 1680 01cc B6F94610 		ldrsh	r1, [r6, #70]
 315:lvgl/src/lv_widgets/lv_slider.c ****                     ext->value_to_set = &ext->bar.start_value;
 1681              		.loc 1 315 24 view .LVU505
 1682 01d0 8A42     		cmp	r2, r1
 1683 01d2 02DD     		ble	.L109
 316:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1684              		.loc 1 316 21 is_stmt 1 view .LVU506
ARM GAS  D:\Temp\ccqmjWev.s 			page 58


 316:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1685              		.loc 1 316 41 is_stmt 0 view .LVU507
 1686 01d4 B31D     		adds	r3, r6, #6
 316:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1687              		.loc 1 316 39 view .LVU508
 1688 01d6 3365     		str	r3, [r6, #80]
 1689 01d8 58E7     		b	.L94
 1690              	.L109:
 320:lvgl/src/lv_widgets/lv_slider.c ****                     dist_right = LV_MATH_ABS((ext->right_knob_area.y1 + (ext->right_knob_area.y2 - 
 1691              		.loc 1 320 21 is_stmt 1 view .LVU509
 320:lvgl/src/lv_widgets/lv_slider.c ****                     dist_right = LV_MATH_ABS((ext->right_knob_area.y1 + (ext->right_knob_area.y2 - 
 1692              		.loc 1 320 33 is_stmt 0 view .LVU510
 1693 01da B6F94200 		ldrsh	r0, [r6, #66]
 1694              	.LVL173:
 320:lvgl/src/lv_widgets/lv_slider.c ****                     dist_right = LV_MATH_ABS((ext->right_knob_area.y1 + (ext->right_knob_area.y2 - 
 1695              		.loc 1 320 33 view .LVU511
 1696 01de 091A     		subs	r1, r1, r0
 1697 01e0 01EBD171 		add	r1, r1, r1, lsr #31
 1698 01e4 00EB6101 		add	r1, r0, r1, asr #1
 1699 01e8 891A     		subs	r1, r1, r2
 1700 01ea 0029     		cmp	r1, #0
 1701 01ec B8BF     		it	lt
 1702 01ee 4942     		rsblt	r1, r1, #0
 320:lvgl/src/lv_widgets/lv_slider.c ****                     dist_right = LV_MATH_ABS((ext->right_knob_area.y1 + (ext->right_knob_area.y2 - 
 1703              		.loc 1 320 31 view .LVU512
 1704 01f0 09B2     		sxth	r1, r1
 1705              	.LVL174:
 321:lvgl/src/lv_widgets/lv_slider.c **** 
 1706              		.loc 1 321 21 is_stmt 1 view .LVU513
 321:lvgl/src/lv_widgets/lv_slider.c **** 
 1707              		.loc 1 321 34 is_stmt 0 view .LVU514
 1708 01f2 B6F94E00 		ldrsh	r0, [r6, #78]
 1709 01f6 C01A     		subs	r0, r0, r3
 1710 01f8 00EBD070 		add	r0, r0, r0, lsr #31
 1711 01fc 03EB6003 		add	r3, r3, r0, asr #1
 1712 0200 9B1A     		subs	r3, r3, r2
 1713 0202 002B     		cmp	r3, #0
 1714 0204 B8BF     		it	lt
 1715 0206 5B42     		rsblt	r3, r3, #0
 321:lvgl/src/lv_widgets/lv_slider.c **** 
 1716              		.loc 1 321 32 view .LVU515
 1717 0208 1BB2     		sxth	r3, r3
 1718              	.LVL175:
 324:lvgl/src/lv_widgets/lv_slider.c ****                     else ext->value_to_set = &ext->bar.start_value;
 1719              		.loc 1 324 21 is_stmt 1 view .LVU516
 324:lvgl/src/lv_widgets/lv_slider.c ****                     else ext->value_to_set = &ext->bar.start_value;
 1720              		.loc 1 324 23 is_stmt 0 view .LVU517
 1721 020a 9942     		cmp	r1, r3
 1722 020c 01DD     		ble	.L110
 324:lvgl/src/lv_widgets/lv_slider.c ****                     else ext->value_to_set = &ext->bar.start_value;
 1723              		.loc 1 324 47 is_stmt 1 discriminator 1 view .LVU518
 324:lvgl/src/lv_widgets/lv_slider.c ****                     else ext->value_to_set = &ext->bar.start_value;
 1724              		.loc 1 324 65 is_stmt 0 discriminator 1 view .LVU519
 1725 020e 3665     		str	r6, [r6, #80]
 1726 0210 3CE7     		b	.L94
 1727              	.L110:
 325:lvgl/src/lv_widgets/lv_slider.c ****                 }
ARM GAS  D:\Temp\ccqmjWev.s 			page 59


 1728              		.loc 1 325 26 is_stmt 1 view .LVU520
 325:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1729              		.loc 1 325 46 is_stmt 0 view .LVU521
 1730 0212 B31D     		adds	r3, r6, #6
 1731              	.LVL176:
 325:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1732              		.loc 1 325 44 view .LVU522
 1733 0214 3365     		str	r3, [r6, #80]
 1734 0216 39E7     		b	.L94
 1735              	.LVL177:
 1736              	.L147:
 325:lvgl/src/lv_widgets/lv_slider.c ****                 }
 1737              		.loc 1 325 44 view .LVU523
 1738              	.LBE132:
 330:lvgl/src/lv_widgets/lv_slider.c ****         if(lv_indev_get_type(param) != LV_INDEV_TYPE_POINTER) return res;
 1739              		.loc 1 330 46 discriminator 1 view .LVU524
 1740 0218 336D     		ldr	r3, [r6, #80]
 330:lvgl/src/lv_widgets/lv_slider.c ****         if(lv_indev_get_type(param) != LV_INDEV_TYPE_POINTER) return res;
 1741              		.loc 1 330 40 discriminator 1 view .LVU525
 1742 021a 002B     		cmp	r3, #0
 1743 021c 3FF414AF 		beq	.L111
 1744              	.LBB133:
 331:lvgl/src/lv_widgets/lv_slider.c **** 
 1745              		.loc 1 331 9 is_stmt 1 view .LVU526
 331:lvgl/src/lv_widgets/lv_slider.c **** 
 1746              		.loc 1 331 12 is_stmt 0 view .LVU527
 1747 0220 4046     		mov	r0, r8
 1748 0222 FFF7FEFF 		bl	lv_indev_get_type
 1749              	.LVL178:
 331:lvgl/src/lv_widgets/lv_slider.c **** 
 1750              		.loc 1 331 11 view .LVU528
 1751 0226 0128     		cmp	r0, #1
 1752 0228 7FF430AF 		bne	.L94
 333:lvgl/src/lv_widgets/lv_slider.c ****         lv_bidi_dir_t base_dir = lv_obj_get_base_dir(slider);
 1753              		.loc 1 333 9 is_stmt 1 view .LVU529
 1754 022c 03A9     		add	r1, sp, #12
 1755 022e 4046     		mov	r0, r8
 1756 0230 FFF7FEFF 		bl	lv_indev_get_point
 1757              	.LVL179:
 334:lvgl/src/lv_widgets/lv_slider.c **** 
 1758              		.loc 1 334 9 view .LVU530
 334:lvgl/src/lv_widgets/lv_slider.c **** 
 1759              		.loc 1 334 34 is_stmt 0 view .LVU531
 1760 0234 2046     		mov	r0, r4
 1761 0236 FFF7FEFF 		bl	lv_obj_get_base_dir
 1762              	.LVL180:
 1763 023a 8346     		mov	fp, r0
 1764              	.LVL181:
 336:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t h = lv_obj_get_height(slider);
 1765              		.loc 1 336 9 is_stmt 1 view .LVU532
 336:lvgl/src/lv_widgets/lv_slider.c ****         lv_coord_t h = lv_obj_get_height(slider);
 1766              		.loc 1 336 24 is_stmt 0 view .LVU533
 1767 023c 2046     		mov	r0, r4
 1768 023e FFF7FEFF 		bl	lv_obj_get_width
 1769              	.LVL182:
 1770 0242 8046     		mov	r8, r0
 1771              	.LVL183:
ARM GAS  D:\Temp\ccqmjWev.s 			page 60


 337:lvgl/src/lv_widgets/lv_slider.c **** 
 1772              		.loc 1 337 9 is_stmt 1 view .LVU534
 337:lvgl/src/lv_widgets/lv_slider.c **** 
 1773              		.loc 1 337 24 is_stmt 0 view .LVU535
 1774 0244 2046     		mov	r0, r4
 1775 0246 FFF7FEFF 		bl	lv_obj_get_height
 1776              	.LVL184:
 1777 024a 0746     		mov	r7, r0
 1778              	.LVL185:
 339:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t bg_right = lv_obj_get_style_pad_right(slider,  LV_SLIDER_PART_BG);
 1779              		.loc 1 339 9 is_stmt 1 view .LVU536
 1780              	.LBB134:
 1781              	.LBI134:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 1782              		.loc 2 112 1 view .LVU537
 1783              	.LBB135:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 1784              		.loc 2 112 1 view .LVU538
 1785 024c 1222     		movs	r2, #18
 1786 024e 0021     		movs	r1, #0
 1787 0250 2046     		mov	r0, r4
 1788 0252 FFF7FEFF 		bl	_lv_obj_get_style_int
 1789              	.LVL186:
 1790 0256 8146     		mov	r9, r0
 1791              	.LVL187:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 1792              		.loc 2 112 1 is_stmt 0 view .LVU539
 1793              	.LBE135:
 1794              	.LBE134:
 340:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t bg_top = lv_obj_get_style_pad_top(slider,    LV_SLIDER_PART_BG);
 1795              		.loc 1 340 9 is_stmt 1 view .LVU540
 1796              	.LBB136:
 1797              	.LBI136:
 1798              		.loc 2 113 1 view .LVU541
 1799              	.LBB137:
 1800              		.loc 2 113 1 view .LVU542
 1801 0258 1322     		movs	r2, #19
 1802 025a 0021     		movs	r1, #0
 1803 025c 2046     		mov	r0, r4
 1804 025e FFF7FEFF 		bl	_lv_obj_get_style_int
 1805              	.LVL188:
 1806 0262 0190     		str	r0, [sp, #4]
 1807              	.LVL189:
 1808              		.loc 2 113 1 is_stmt 0 view .LVU543
 1809              	.LBE137:
 1810              	.LBE136:
 341:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t bg_bottom = lv_obj_get_style_pad_bottom(slider, LV_SLIDER_PART_BG);
 1811              		.loc 1 341 9 is_stmt 1 view .LVU544
 1812              	.LBB138:
 1813              	.LBI138:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 1814              		.loc 2 110 1 view .LVU545
 1815              	.LBB139:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 1816              		.loc 2 110 1 view .LVU546
 1817 0264 1022     		movs	r2, #16
 1818 0266 0021     		movs	r1, #0
ARM GAS  D:\Temp\ccqmjWev.s 			page 61


 1819 0268 2046     		mov	r0, r4
 1820 026a FFF7FEFF 		bl	_lv_obj_get_style_int
 1821              	.LVL190:
 1822 026e 8246     		mov	r10, r0
 1823              	.LVL191:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 1824              		.loc 2 110 1 is_stmt 0 view .LVU547
 1825              	.LBE139:
 1826              	.LBE138:
 342:lvgl/src/lv_widgets/lv_slider.c **** 
 1827              		.loc 1 342 9 is_stmt 1 view .LVU548
 1828              	.LBB140:
 1829              	.LBI140:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 1830              		.loc 2 111 1 view .LVU549
 1831              	.LBB141:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 1832              		.loc 2 111 1 view .LVU550
 1833 0270 1122     		movs	r2, #17
 1834 0272 0021     		movs	r1, #0
 1835 0274 2046     		mov	r0, r4
 1836 0276 FFF7FEFF 		bl	_lv_obj_get_style_int
 1837              	.LVL192:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 1838              		.loc 2 111 1 is_stmt 0 view .LVU551
 1839              	.LBE141:
 1840              	.LBE140:
 344:lvgl/src/lv_widgets/lv_slider.c ****         int16_t new_value = 0;
 1841              		.loc 1 344 9 is_stmt 1 view .LVU552
 344:lvgl/src/lv_widgets/lv_slider.c ****         int16_t new_value = 0;
 1842              		.loc 1 344 33 is_stmt 0 view .LVU553
 1843 027a B6F90410 		ldrsh	r1, [r6, #4]
 344:lvgl/src/lv_widgets/lv_slider.c ****         int16_t new_value = 0;
 1844              		.loc 1 344 54 view .LVU554
 1845 027e B6F90220 		ldrsh	r2, [r6, #2]
 344:lvgl/src/lv_widgets/lv_slider.c ****         int16_t new_value = 0;
 1846              		.loc 1 344 17 view .LVU555
 1847 0282 8B1A     		subs	r3, r1, r2
 1848              	.LVL193:
 345:lvgl/src/lv_widgets/lv_slider.c ****         int16_t real_max_value = ext->bar.max_value;
 1849              		.loc 1 345 9 is_stmt 1 view .LVU556
 346:lvgl/src/lv_widgets/lv_slider.c ****         int16_t real_min_value = ext->bar.min_value;
 1850              		.loc 1 346 9 view .LVU557
 347:lvgl/src/lv_widgets/lv_slider.c **** 
 1851              		.loc 1 347 9 view .LVU558
 349:lvgl/src/lv_widgets/lv_slider.c ****             lv_coord_t indic_w = w - bg_left - bg_right;
 1852              		.loc 1 349 9 view .LVU559
 349:lvgl/src/lv_widgets/lv_slider.c ****             lv_coord_t indic_w = w - bg_left - bg_right;
 1853              		.loc 1 349 11 is_stmt 0 view .LVU560
 1854 0284 B845     		cmp	r8, r7
 1855 0286 42DB     		blt	.L112
 1856              	.LBB142:
 350:lvgl/src/lv_widgets/lv_slider.c ****             if(base_dir == LV_BIDI_DIR_RTL) {
 1857              		.loc 1 350 13 is_stmt 1 view .LVU561
 350:lvgl/src/lv_widgets/lv_slider.c ****             if(base_dir == LV_BIDI_DIR_RTL) {
 1858              		.loc 1 350 36 is_stmt 0 view .LVU562
 1859 0288 1FFA89F9 		uxth	r9, r9
ARM GAS  D:\Temp\ccqmjWev.s 			page 62


 350:lvgl/src/lv_widgets/lv_slider.c ****             if(base_dir == LV_BIDI_DIR_RTL) {
 1860              		.loc 1 350 36 view .LVU563
 1861 028c A8EB0907 		sub	r7, r8, r9
 1862              	.LVL194:
 350:lvgl/src/lv_widgets/lv_slider.c ****             if(base_dir == LV_BIDI_DIR_RTL) {
 1863              		.loc 1 350 36 view .LVU564
 1864 0290 BFB2     		uxth	r7, r7
 350:lvgl/src/lv_widgets/lv_slider.c ****             if(base_dir == LV_BIDI_DIR_RTL) {
 1865              		.loc 1 350 46 view .LVU565
 1866 0292 BDF804C0 		ldrh	ip, [sp, #4]
 1867 0296 A7EB0C07 		sub	r7, r7, ip
 350:lvgl/src/lv_widgets/lv_slider.c ****             if(base_dir == LV_BIDI_DIR_RTL) {
 1868              		.loc 1 350 24 view .LVU566
 1869 029a 3FB2     		sxth	r7, r7
 1870              	.LVL195:
 351:lvgl/src/lv_widgets/lv_slider.c ****                 new_value = (slider->coords.x2 - bg_right) - p.x; /*Make the point relative to the 
 1871              		.loc 1 351 13 is_stmt 1 view .LVU567
 351:lvgl/src/lv_widgets/lv_slider.c ****                 new_value = (slider->coords.x2 - bg_right) - p.x; /*Make the point relative to the 
 1872              		.loc 1 351 15 is_stmt 0 view .LVU568
 1873 029c BBF1010F 		cmp	fp, #1
 1874 02a0 2BD0     		beq	.L158
 355:lvgl/src/lv_widgets/lv_slider.c ****             }
 1875              		.loc 1 355 17 is_stmt 1 view .LVU569
 355:lvgl/src/lv_widgets/lv_slider.c ****             }
 1876              		.loc 1 355 30 is_stmt 0 view .LVU570
 1877 02a2 BDF80C00 		ldrh	r0, [sp, #12]
 1878              	.LVL196:
 355:lvgl/src/lv_widgets/lv_slider.c ****             }
 1879              		.loc 1 355 50 view .LVU571
 1880 02a6 B4F810C0 		ldrh	ip, [r4, #16]
 355:lvgl/src/lv_widgets/lv_slider.c ****             }
 1881              		.loc 1 355 54 view .LVU572
 1882 02aa E144     		add	r9, r9, ip
 1883              	.LVL197:
 355:lvgl/src/lv_widgets/lv_slider.c ****             }
 1884              		.loc 1 355 54 view .LVU573
 1885 02ac 1FFA89FC 		uxth	ip, r9
 355:lvgl/src/lv_widgets/lv_slider.c ****             }
 1886              		.loc 1 355 33 view .LVU574
 1887 02b0 A0EB0C00 		sub	r0, r0, ip
 355:lvgl/src/lv_widgets/lv_slider.c ****             }
 1888              		.loc 1 355 27 view .LVU575
 1889 02b4 00B2     		sxth	r0, r0
 1890              	.LVL198:
 1891              	.L114:
 357:lvgl/src/lv_widgets/lv_slider.c ****             new_value += ext->bar.min_value;
 1892              		.loc 1 357 13 is_stmt 1 view .LVU576
 357:lvgl/src/lv_widgets/lv_slider.c ****             new_value += ext->bar.min_value;
 1893              		.loc 1 357 36 is_stmt 0 view .LVU577
 1894 02b6 03FB00F3 		mul	r3, r3, r0
 1895              	.LVL199:
 357:lvgl/src/lv_widgets/lv_slider.c ****             new_value += ext->bar.min_value;
 1896              		.loc 1 357 45 view .LVU578
 1897 02ba 93FBF7F3 		sdiv	r3, r3, r7
 1898              	.LVL200:
 358:lvgl/src/lv_widgets/lv_slider.c ****         }
 1899              		.loc 1 358 13 is_stmt 1 view .LVU579
ARM GAS  D:\Temp\ccqmjWev.s 			page 63


 358:lvgl/src/lv_widgets/lv_slider.c ****         }
 1900              		.loc 1 358 23 is_stmt 0 view .LVU580
 1901 02be 13FA82F3 		uxtah	r3, r3, r2
 1902              	.LVL201:
 358:lvgl/src/lv_widgets/lv_slider.c ****         }
 1903              		.loc 1 358 23 view .LVU581
 1904 02c2 1BB2     		sxth	r3, r3
 1905              	.LVL202:
 1906              	.L115:
 358:lvgl/src/lv_widgets/lv_slider.c ****         }
 1907              		.loc 1 358 23 view .LVU582
 1908              	.LBE142:
 369:lvgl/src/lv_widgets/lv_slider.c ****             real_max_value = ext->bar.cur_value;
 1909              		.loc 1 369 9 is_stmt 1 view .LVU583
 369:lvgl/src/lv_widgets/lv_slider.c ****             real_max_value = ext->bar.cur_value;
 1910              		.loc 1 369 15 is_stmt 0 view .LVU584
 1911 02c4 306D     		ldr	r0, [r6, #80]
 369:lvgl/src/lv_widgets/lv_slider.c ****             real_max_value = ext->bar.cur_value;
 1912              		.loc 1 369 33 view .LVU585
 1913 02c6 B71D     		adds	r7, r6, #6
 369:lvgl/src/lv_widgets/lv_slider.c ****             real_max_value = ext->bar.cur_value;
 1914              		.loc 1 369 11 view .LVU586
 1915 02c8 B842     		cmp	r0, r7
 1916 02ca 3FD0     		beq	.L159
 373:lvgl/src/lv_widgets/lv_slider.c ****         }
 1917              		.loc 1 373 13 is_stmt 1 view .LVU587
 373:lvgl/src/lv_widgets/lv_slider.c ****         }
 1918              		.loc 1 373 28 is_stmt 0 view .LVU588
 1919 02cc B6F90620 		ldrsh	r2, [r6, #6]
 1920              	.LVL203:
 1921              	.L117:
 376:lvgl/src/lv_widgets/lv_slider.c ****         else if(new_value > real_max_value) new_value = real_max_value;
 1922              		.loc 1 376 9 is_stmt 1 view .LVU589
 376:lvgl/src/lv_widgets/lv_slider.c ****         else if(new_value > real_max_value) new_value = real_max_value;
 1923              		.loc 1 376 11 is_stmt 0 view .LVU590
 1924 02d0 9342     		cmp	r3, r2
 1925 02d2 02DB     		blt	.L118
 377:lvgl/src/lv_widgets/lv_slider.c ****         if(*ext->value_to_set != new_value) {
 1926              		.loc 1 377 14 is_stmt 1 view .LVU591
 377:lvgl/src/lv_widgets/lv_slider.c ****         if(*ext->value_to_set != new_value) {
 1927              		.loc 1 377 16 is_stmt 0 view .LVU592
 1928 02d4 8B42     		cmp	r3, r1
 1929 02d6 3CDC     		bgt	.L140
 1930 02d8 1A46     		mov	r2, r3
 1931              	.LVL204:
 1932              	.L118:
 378:lvgl/src/lv_widgets/lv_slider.c ****             *ext->value_to_set = new_value;
 1933              		.loc 1 378 9 is_stmt 1 view .LVU593
 378:lvgl/src/lv_widgets/lv_slider.c ****             *ext->value_to_set = new_value;
 1934              		.loc 1 378 12 is_stmt 0 view .LVU594
 1935 02da B0F90030 		ldrsh	r3, [r0]
 378:lvgl/src/lv_widgets/lv_slider.c ****             *ext->value_to_set = new_value;
 1936              		.loc 1 378 11 view .LVU595
 1937 02de 9342     		cmp	r3, r2
 1938 02e0 3FF4D4AE 		beq	.L94
 379:lvgl/src/lv_widgets/lv_slider.c ****             lv_obj_invalidate(slider);
 1939              		.loc 1 379 13 is_stmt 1 view .LVU596
ARM GAS  D:\Temp\ccqmjWev.s 			page 64


 379:lvgl/src/lv_widgets/lv_slider.c ****             lv_obj_invalidate(slider);
 1940              		.loc 1 379 32 is_stmt 0 view .LVU597
 1941 02e4 0280     		strh	r2, [r0]	@ movhi
 1942              	.LVL205:
 380:lvgl/src/lv_widgets/lv_slider.c ****             res = lv_event_send(slider, LV_EVENT_VALUE_CHANGED, NULL);
 1943              		.loc 1 380 13 is_stmt 1 view .LVU598
 1944 02e6 2046     		mov	r0, r4
 1945 02e8 FFF7FEFF 		bl	lv_obj_invalidate
 1946              	.LVL206:
 381:lvgl/src/lv_widgets/lv_slider.c ****             if(res != LV_RES_OK) return res;
 1947              		.loc 1 381 13 view .LVU599
 381:lvgl/src/lv_widgets/lv_slider.c ****             if(res != LV_RES_OK) return res;
 1948              		.loc 1 381 19 is_stmt 0 view .LVU600
 1949 02ec 0022     		movs	r2, #0
 1950 02ee 1021     		movs	r1, #16
 1951 02f0 2046     		mov	r0, r4
 1952 02f2 FFF7FEFF 		bl	lv_event_send
 1953              	.LVL207:
 1954 02f6 0546     		mov	r5, r0
 1955              	.LVL208:
 382:lvgl/src/lv_widgets/lv_slider.c ****         }
 1956              		.loc 1 382 13 is_stmt 1 view .LVU601
 1957 02f8 C8E6     		b	.L94
 1958              	.LVL209:
 1959              	.L158:
 1960              	.LBB143:
 352:lvgl/src/lv_widgets/lv_slider.c ****             }
 1961              		.loc 1 352 17 view .LVU602
 352:lvgl/src/lv_widgets/lv_slider.c ****             }
 1962              		.loc 1 352 44 is_stmt 0 view .LVU603
 1963 02fa A08A     		ldrh	r0, [r4, #20]
 1964              	.LVL210:
 352:lvgl/src/lv_widgets/lv_slider.c ****             }
 1965              		.loc 1 352 48 view .LVU604
 1966 02fc A0EB0C00 		sub	r0, r0, ip
 1967 0300 80B2     		uxth	r0, r0
 352:lvgl/src/lv_widgets/lv_slider.c ****             }
 1968              		.loc 1 352 63 view .LVU605
 1969 0302 BDF80CC0 		ldrh	ip, [sp, #12]
 352:lvgl/src/lv_widgets/lv_slider.c ****             }
 1970              		.loc 1 352 60 view .LVU606
 1971 0306 A0EB0C00 		sub	r0, r0, ip
 352:lvgl/src/lv_widgets/lv_slider.c ****             }
 1972              		.loc 1 352 27 view .LVU607
 1973 030a 00B2     		sxth	r0, r0
 1974              	.LVL211:
 352:lvgl/src/lv_widgets/lv_slider.c ****             }
 1975              		.loc 1 352 27 view .LVU608
 1976 030c D3E7     		b	.L114
 1977              	.LVL212:
 1978              	.L112:
 352:lvgl/src/lv_widgets/lv_slider.c ****             }
 1979              		.loc 1 352 27 view .LVU609
 1980              	.LBE143:
 1981              	.LBB144:
 361:lvgl/src/lv_widgets/lv_slider.c ****             new_value = p.y - (slider->coords.y2 + bg_bottom); /*Make the point relative to the ind
 1982              		.loc 1 361 13 is_stmt 1 view .LVU610
ARM GAS  D:\Temp\ccqmjWev.s 			page 65


 361:lvgl/src/lv_widgets/lv_slider.c ****             new_value = p.y - (slider->coords.y2 + bg_bottom); /*Make the point relative to the ind
 1983              		.loc 1 361 36 is_stmt 0 view .LVU611
 1984 030e 1FFA80FC 		uxth	ip, r0
 1985 0312 A7EB0C00 		sub	r0, r7, ip
 1986              	.LVL213:
 361:lvgl/src/lv_widgets/lv_slider.c ****             new_value = p.y - (slider->coords.y2 + bg_bottom); /*Make the point relative to the ind
 1987              		.loc 1 361 36 view .LVU612
 1988 0316 80B2     		uxth	r0, r0
 361:lvgl/src/lv_widgets/lv_slider.c ****             new_value = p.y - (slider->coords.y2 + bg_bottom); /*Make the point relative to the ind
 1989              		.loc 1 361 48 view .LVU613
 1990 0318 A0EB0A00 		sub	r0, r0, r10
 361:lvgl/src/lv_widgets/lv_slider.c ****             new_value = p.y - (slider->coords.y2 + bg_bottom); /*Make the point relative to the ind
 1991              		.loc 1 361 24 view .LVU614
 1992 031c 00B2     		sxth	r0, r0
 1993              	.LVL214:
 362:lvgl/src/lv_widgets/lv_slider.c ****             new_value = (-new_value * range) / indic_h;
 1994              		.loc 1 362 13 is_stmt 1 view .LVU615
 362:lvgl/src/lv_widgets/lv_slider.c ****             new_value = (-new_value * range) / indic_h;
 1995              		.loc 1 362 26 is_stmt 0 view .LVU616
 1996 031e BDF80E70 		ldrh	r7, [sp, #14]
 1997              	.LVL215:
 362:lvgl/src/lv_widgets/lv_slider.c ****             new_value = (-new_value * range) / indic_h;
 1998              		.loc 1 362 46 view .LVU617
 1999 0322 B4F816E0 		ldrh	lr, [r4, #22]
 362:lvgl/src/lv_widgets/lv_slider.c ****             new_value = (-new_value * range) / indic_h;
 2000              		.loc 1 362 50 view .LVU618
 2001 0326 F444     		add	ip, ip, lr
 2002              	.LVL216:
 362:lvgl/src/lv_widgets/lv_slider.c ****             new_value = (-new_value * range) / indic_h;
 2003              		.loc 1 362 50 view .LVU619
 2004 0328 1FFA8CFC 		uxth	ip, ip
 362:lvgl/src/lv_widgets/lv_slider.c ****             new_value = (-new_value * range) / indic_h;
 2005              		.loc 1 362 29 view .LVU620
 2006 032c A7EB0C07 		sub	r7, r7, ip
 362:lvgl/src/lv_widgets/lv_slider.c ****             new_value = (-new_value * range) / indic_h;
 2007              		.loc 1 362 23 view .LVU621
 2008 0330 3FB2     		sxth	r7, r7
 2009              	.LVL217:
 363:lvgl/src/lv_widgets/lv_slider.c ****             new_value += ext->bar.min_value;
 2010              		.loc 1 363 13 is_stmt 1 view .LVU622
 363:lvgl/src/lv_widgets/lv_slider.c ****             new_value += ext->bar.min_value;
 2011              		.loc 1 363 26 is_stmt 0 view .LVU623
 2012 0332 7F42     		rsbs	r7, r7, #0
 2013              	.LVL218:
 363:lvgl/src/lv_widgets/lv_slider.c ****             new_value += ext->bar.min_value;
 2014              		.loc 1 363 37 view .LVU624
 2015 0334 03FB07F3 		mul	r3, r3, r7
 2016              	.LVL219:
 363:lvgl/src/lv_widgets/lv_slider.c ****             new_value += ext->bar.min_value;
 2017              		.loc 1 363 46 view .LVU625
 2018 0338 93FBF0F3 		sdiv	r3, r3, r0
 2019              	.LVL220:
 364:lvgl/src/lv_widgets/lv_slider.c **** 
 2020              		.loc 1 364 13 is_stmt 1 view .LVU626
 364:lvgl/src/lv_widgets/lv_slider.c **** 
 2021              		.loc 1 364 23 is_stmt 0 view .LVU627
 2022 033c 13FA82F3 		uxtah	r3, r3, r2
ARM GAS  D:\Temp\ccqmjWev.s 			page 66


 2023              	.LVL221:
 364:lvgl/src/lv_widgets/lv_slider.c **** 
 2024              		.loc 1 364 23 view .LVU628
 2025 0340 1BB2     		sxth	r3, r3
 2026              	.LVL222:
 364:lvgl/src/lv_widgets/lv_slider.c **** 
 2027              		.loc 1 364 23 view .LVU629
 2028 0342 BFE7     		b	.L115
 2029              	.L163:
 2030              		.align	2
 2031              	.L162:
 2032 0344 00000000 		.word	.LANCHOR1
 2033 0348 00000000 		.word	.LC2
 2034              	.LVL223:
 2035              	.L159:
 364:lvgl/src/lv_widgets/lv_slider.c **** 
 2036              		.loc 1 364 23 view .LVU630
 2037              	.LBE144:
 370:lvgl/src/lv_widgets/lv_slider.c ****         }
 2038              		.loc 1 370 13 is_stmt 1 view .LVU631
 370:lvgl/src/lv_widgets/lv_slider.c ****         }
 2039              		.loc 1 370 28 is_stmt 0 view .LVU632
 2040 034c B6F90010 		ldrsh	r1, [r6]
 2041              	.LVL224:
 370:lvgl/src/lv_widgets/lv_slider.c ****         }
 2042              		.loc 1 370 28 view .LVU633
 2043 0350 BEE7     		b	.L117
 2044              	.LVL225:
 2045              	.L140:
 377:lvgl/src/lv_widgets/lv_slider.c ****         if(*ext->value_to_set != new_value) {
 2046              		.loc 1 377 55 view .LVU634
 2047 0352 0A46     		mov	r2, r1
 2048              	.LVL226:
 377:lvgl/src/lv_widgets/lv_slider.c ****         if(*ext->value_to_set != new_value) {
 2049              		.loc 1 377 55 view .LVU635
 2050 0354 C1E7     		b	.L118
 2051              	.LVL227:
 2052              	.L148:
 377:lvgl/src/lv_widgets/lv_slider.c ****         if(*ext->value_to_set != new_value) {
 2053              		.loc 1 377 55 view .LVU636
 2054              	.LBE133:
 2055              	.LBB145:
 387:lvgl/src/lv_widgets/lv_slider.c ****         ext->value_to_set = NULL;
 2056              		.loc 1 387 9 is_stmt 1 view .LVU637
 387:lvgl/src/lv_widgets/lv_slider.c ****         ext->value_to_set = NULL;
 2057              		.loc 1 387 23 is_stmt 0 view .LVU638
 2058 0356 96F85430 		ldrb	r3, [r6, #84]	@ zero_extendqisi2
 2059 035a 6FF30003 		bfc	r3, #0, #1
 2060 035e 86F85430 		strb	r3, [r6, #84]
 388:lvgl/src/lv_widgets/lv_slider.c **** 
 2061              		.loc 1 388 9 is_stmt 1 view .LVU639
 388:lvgl/src/lv_widgets/lv_slider.c **** 
 2062              		.loc 1 388 27 is_stmt 0 view .LVU640
 2063 0362 0023     		movs	r3, #0
 2064 0364 3365     		str	r3, [r6, #80]
 392:lvgl/src/lv_widgets/lv_slider.c ****         bool editing               = lv_group_get_editing(g);
 2065              		.loc 1 392 9 is_stmt 1 view .LVU641
ARM GAS  D:\Temp\ccqmjWev.s 			page 67


 392:lvgl/src/lv_widgets/lv_slider.c ****         bool editing               = lv_group_get_editing(g);
 2066              		.loc 1 392 38 is_stmt 0 view .LVU642
 2067 0366 2046     		mov	r0, r4
 2068 0368 FFF7FEFF 		bl	lv_obj_get_group
 2069              	.LVL228:
 2070 036c 8046     		mov	r8, r0
 2071              	.LVL229:
 393:lvgl/src/lv_widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 2072              		.loc 1 393 9 is_stmt 1 view .LVU643
 393:lvgl/src/lv_widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 2073              		.loc 1 393 38 is_stmt 0 view .LVU644
 2074 036e FFF7FEFF 		bl	lv_group_get_editing
 2075              	.LVL230:
 393:lvgl/src/lv_widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 2076              		.loc 1 393 38 view .LVU645
 2077 0372 0746     		mov	r7, r0
 2078              	.LVL231:
 394:lvgl/src/lv_widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 2079              		.loc 1 394 9 is_stmt 1 view .LVU646
 394:lvgl/src/lv_widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 2080              		.loc 1 394 56 is_stmt 0 view .LVU647
 2081 0374 FFF7FEFF 		bl	lv_indev_get_act
 2082              	.LVL232:
 394:lvgl/src/lv_widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 2083              		.loc 1 394 38 view .LVU648
 2084 0378 FFF7FEFF 		bl	lv_indev_get_type
 2085              	.LVL233:
 395:lvgl/src/lv_widgets/lv_slider.c ****             if(editing) {
 2086              		.loc 1 395 9 is_stmt 1 view .LVU649
 395:lvgl/src/lv_widgets/lv_slider.c ****             if(editing) {
 2087              		.loc 1 395 11 is_stmt 0 view .LVU650
 2088 037c 0428     		cmp	r0, #4
 2089 037e 7FF485AE 		bne	.L94
 396:lvgl/src/lv_widgets/lv_slider.c ****                 if(lv_slider_get_type(slider) == LV_SLIDER_TYPE_RANGE) {
 2090              		.loc 1 396 13 is_stmt 1 view .LVU651
 396:lvgl/src/lv_widgets/lv_slider.c ****                 if(lv_slider_get_type(slider) == LV_SLIDER_TYPE_RANGE) {
 2091              		.loc 1 396 15 is_stmt 0 view .LVU652
 2092 0382 002F     		cmp	r7, #0
 2093 0384 3FF482AE 		beq	.L94
 397:lvgl/src/lv_widgets/lv_slider.c ****                     if(ext->left_knob_focus == 0) ext->left_knob_focus = 1;
 2094              		.loc 1 397 17 is_stmt 1 view .LVU653
 2095              	.LVL234:
 2096              	.LBB146:
 2097              	.LBI146:
 200:lvgl/src/lv_widgets/lv_slider.h **** {
 2098              		.loc 5 200 32 view .LVU654
 2099              	.LBB147:
 202:lvgl/src/lv_widgets/lv_slider.h ****     if(type == LV_BAR_TYPE_SYMMETRICAL)
 2100              		.loc 5 202 5 view .LVU655
 202:lvgl/src/lv_widgets/lv_slider.h ****     if(type == LV_BAR_TYPE_SYMMETRICAL)
 2101              		.loc 5 202 26 is_stmt 0 view .LVU656
 2102 0388 2046     		mov	r0, r4
 2103              	.LVL235:
 202:lvgl/src/lv_widgets/lv_slider.h ****     if(type == LV_BAR_TYPE_SYMMETRICAL)
 2104              		.loc 5 202 26 view .LVU657
 2105 038a FFF7FEFF 		bl	lv_bar_get_type
 2106              	.LVL236:
ARM GAS  D:\Temp\ccqmjWev.s 			page 68


 203:lvgl/src/lv_widgets/lv_slider.h ****         return LV_SLIDER_TYPE_SYMMETRICAL;
 2107              		.loc 5 203 5 is_stmt 1 view .LVU658
 203:lvgl/src/lv_widgets/lv_slider.h ****         return LV_SLIDER_TYPE_SYMMETRICAL;
 2108              		.loc 5 203 7 is_stmt 0 view .LVU659
 2109 038e 0128     		cmp	r0, #1
 2110 0390 01D0     		beq	.L120
 205:lvgl/src/lv_widgets/lv_slider.h ****         return LV_SLIDER_TYPE_RANGE;
 2111              		.loc 5 205 10 is_stmt 1 view .LVU660
 205:lvgl/src/lv_widgets/lv_slider.h ****         return LV_SLIDER_TYPE_RANGE;
 2112              		.loc 5 205 12 is_stmt 0 view .LVU661
 2113 0392 0228     		cmp	r0, #2
 2114 0394 04D0     		beq	.L160
 2115              	.L120:
 205:lvgl/src/lv_widgets/lv_slider.h ****         return LV_SLIDER_TYPE_RANGE;
 2116              		.loc 5 205 12 view .LVU662
 2117              	.LBE147:
 2118              	.LBE146:
 405:lvgl/src/lv_widgets/lv_slider.c ****                 }
 2119              		.loc 1 405 21 is_stmt 1 view .LVU663
 2120 0396 0021     		movs	r1, #0
 2121 0398 4046     		mov	r0, r8
 2122              	.LVL237:
 405:lvgl/src/lv_widgets/lv_slider.c ****                 }
 2123              		.loc 1 405 21 is_stmt 0 view .LVU664
 2124 039a FFF7FEFF 		bl	lv_group_set_editing
 2125              	.LVL238:
 2126 039e 75E6     		b	.L94
 2127              	.LVL239:
 2128              	.L160:
 398:lvgl/src/lv_widgets/lv_slider.c ****                     else {
 2129              		.loc 1 398 21 is_stmt 1 view .LVU665
 398:lvgl/src/lv_widgets/lv_slider.c ****                     else {
 2130              		.loc 1 398 45 is_stmt 0 view .LVU666
 2131 03a0 96F85430 		ldrb	r3, [r6, #84]	@ zero_extendqisi2
 398:lvgl/src/lv_widgets/lv_slider.c ****                     else {
 2132              		.loc 1 398 23 view .LVU667
 2133 03a4 13F0020F 		tst	r3, #2
 2134 03a8 04D1     		bne	.L121
 398:lvgl/src/lv_widgets/lv_slider.c ****                     else {
 2135              		.loc 1 398 51 is_stmt 1 discriminator 1 view .LVU668
 398:lvgl/src/lv_widgets/lv_slider.c ****                     else {
 2136              		.loc 1 398 72 is_stmt 0 discriminator 1 view .LVU669
 2137 03aa 43F00203 		orr	r3, r3, #2
 2138 03ae 86F85430 		strb	r3, [r6, #84]
 2139 03b2 6BE6     		b	.L94
 2140              	.L121:
 400:lvgl/src/lv_widgets/lv_slider.c ****                         lv_group_set_editing(g, false);
 2141              		.loc 1 400 25 is_stmt 1 view .LVU670
 400:lvgl/src/lv_widgets/lv_slider.c ****                         lv_group_set_editing(g, false);
 2142              		.loc 1 400 46 is_stmt 0 view .LVU671
 2143 03b4 96F85430 		ldrb	r3, [r6, #84]	@ zero_extendqisi2
 2144 03b8 6FF34103 		bfc	r3, #1, #1
 2145 03bc 86F85430 		strb	r3, [r6, #84]
 401:lvgl/src/lv_widgets/lv_slider.c ****                     }
 2146              		.loc 1 401 25 is_stmt 1 view .LVU672
 2147 03c0 0021     		movs	r1, #0
 2148 03c2 4046     		mov	r0, r8
ARM GAS  D:\Temp\ccqmjWev.s 			page 69


 2149 03c4 FFF7FEFF 		bl	lv_group_set_editing
 2150              	.LVL240:
 2151 03c8 60E6     		b	.L94
 2152              	.LVL241:
 2153              	.L149:
 401:lvgl/src/lv_widgets/lv_slider.c ****                     }
 2154              		.loc 1 401 25 is_stmt 0 view .LVU673
 2155              	.LBE145:
 413:lvgl/src/lv_widgets/lv_slider.c ****     }
 2156              		.loc 1 413 9 is_stmt 1 view .LVU674
 413:lvgl/src/lv_widgets/lv_slider.c ****     }
 2157              		.loc 1 413 30 is_stmt 0 view .LVU675
 2158 03ca 96F85430 		ldrb	r3, [r6, #84]	@ zero_extendqisi2
 2159 03ce 6FF34103 		bfc	r3, #1, #1
 2160 03d2 86F85430 		strb	r3, [r6, #84]
 2161 03d6 59E6     		b	.L94
 2162              	.L150:
 418:lvgl/src/lv_widgets/lv_slider.c ****            lv_obj_get_height(slider) != lv_area_get_height(param)) {
 2163              		.loc 1 418 9 is_stmt 1 view .LVU676
 418:lvgl/src/lv_widgets/lv_slider.c ****            lv_obj_get_height(slider) != lv_area_get_height(param)) {
 2164              		.loc 1 418 12 is_stmt 0 view .LVU677
 2165 03d8 2046     		mov	r0, r4
 2166 03da FFF7FEFF 		bl	lv_obj_get_width
 2167              	.LVL242:
 2168              	.LBB148:
 2169              	.LBI148:
 100:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** }
 101:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
 102:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
 103:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Get the width of an area
 104:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
 105:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 106:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
 107:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 2170              		.loc 3 107 26 is_stmt 1 view .LVU678
 2171              	.LBB149:
 108:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 109:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 2172              		.loc 3 109 5 view .LVU679
 2173              		.loc 3 109 31 is_stmt 0 view .LVU680
 2174 03de B8F80430 		ldrh	r3, [r8, #4]
 2175              		.loc 3 109 44 view .LVU681
 2176 03e2 B8F80020 		ldrh	r2, [r8]
 2177              		.loc 3 109 36 view .LVU682
 2178 03e6 9B1A     		subs	r3, r3, r2
 2179 03e8 9BB2     		uxth	r3, r3
 2180              		.loc 3 109 49 view .LVU683
 2181 03ea 0133     		adds	r3, r3, #1
 2182              		.loc 3 109 12 view .LVU684
 2183 03ec 1BB2     		sxth	r3, r3
 2184              	.LVL243:
 2185              		.loc 3 109 12 view .LVU685
 2186              	.LBE149:
 2187              	.LBE148:
 418:lvgl/src/lv_widgets/lv_slider.c ****            lv_obj_get_height(slider) != lv_area_get_height(param)) {
 2188              		.loc 1 418 11 view .LVU686
 2189 03ee 9842     		cmp	r0, r3
ARM GAS  D:\Temp\ccqmjWev.s 			page 70


 2190 03f0 05D0     		beq	.L161
 2191              	.L124:
 420:lvgl/src/lv_widgets/lv_slider.c ****         }
 2192              		.loc 1 420 13 is_stmt 1 view .LVU687
 420:lvgl/src/lv_widgets/lv_slider.c ****         }
 2193              		.loc 1 420 19 is_stmt 0 view .LVU688
 2194 03f2 E369     		ldr	r3, [r4, #28]
 420:lvgl/src/lv_widgets/lv_slider.c ****         }
 2195              		.loc 1 420 13 view .LVU689
 2196 03f4 0022     		movs	r2, #0
 2197 03f6 0621     		movs	r1, #6
 2198 03f8 2046     		mov	r0, r4
 2199 03fa 9847     		blx	r3
 2200              	.LVL244:
 2201 03fc 46E6     		b	.L94
 2202              	.L161:
 419:lvgl/src/lv_widgets/lv_slider.c ****             slider->signal_cb(slider, LV_SIGNAL_REFR_EXT_DRAW_PAD, NULL);
 2203              		.loc 1 419 12 discriminator 1 view .LVU690
 2204 03fe 2046     		mov	r0, r4
 2205 0400 FFF7FEFF 		bl	lv_obj_get_height
 2206              	.LVL245:
 2207              	.LBB150:
 2208              	.LBI150:
 110:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** }
 111:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** 
 112:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** /**
 113:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * Get the height of an area
 114:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @param area_p pointer to an area
 115:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 116:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****  */
 117:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 2209              		.loc 3 117 26 is_stmt 1 discriminator 1 view .LVU691
 2210              	.LBB151:
 118:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h **** {
 119:d:\_project\stm32\f407\hack_rf_new\lvgl\src\lv_misc\lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 2211              		.loc 3 119 5 discriminator 1 view .LVU692
 2212              		.loc 3 119 31 is_stmt 0 discriminator 1 view .LVU693
 2213 0404 B8F80630 		ldrh	r3, [r8, #6]
 2214              		.loc 3 119 44 discriminator 1 view .LVU694
 2215 0408 B8F80220 		ldrh	r2, [r8, #2]
 2216              		.loc 3 119 36 discriminator 1 view .LVU695
 2217 040c 9B1A     		subs	r3, r3, r2
 2218 040e 9BB2     		uxth	r3, r3
 2219              		.loc 3 119 49 discriminator 1 view .LVU696
 2220 0410 0133     		adds	r3, r3, #1
 2221              		.loc 3 119 12 discriminator 1 view .LVU697
 2222 0412 1BB2     		sxth	r3, r3
 2223              	.LVL246:
 2224              		.loc 3 119 12 discriminator 1 view .LVU698
 2225              	.LBE151:
 2226              	.LBE150:
 418:lvgl/src/lv_widgets/lv_slider.c ****            lv_obj_get_height(slider) != lv_area_get_height(param)) {
 2227              		.loc 1 418 65 discriminator 1 view .LVU699
 2228 0414 9842     		cmp	r0, r3
 2229 0416 ECD1     		bne	.L124
 2230 0418 38E6     		b	.L94
 2231              	.L151:
ARM GAS  D:\Temp\ccqmjWev.s 			page 71


 2232              	.LBB152:
 424:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t knob_right = lv_obj_get_style_pad_right(slider,  LV_SLIDER_PART_KNOB);
 2233              		.loc 1 424 9 is_stmt 1 view .LVU700
 2234              	.LVL247:
 2235              	.LBB153:
 2236              	.LBI153:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2237              		.loc 2 112 1 view .LVU701
 2238              	.LBB154:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2239              		.loc 2 112 1 view .LVU702
 2240 041a 1222     		movs	r2, #18
 2241 041c 0221     		movs	r1, #2
 2242 041e 2046     		mov	r0, r4
 2243 0420 FFF7FEFF 		bl	_lv_obj_get_style_int
 2244              	.LVL248:
 2245 0424 8046     		mov	r8, r0
 2246              	.LVL249:
 112:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_RIGHT, pad_right, lv_style_int_t, _int, scalar)
 2247              		.loc 2 112 1 is_stmt 0 view .LVU703
 2248              	.LBE154:
 2249              	.LBE153:
 425:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t knob_top = lv_obj_get_style_pad_top(slider,    LV_SLIDER_PART_KNOB);
 2250              		.loc 1 425 9 is_stmt 1 view .LVU704
 2251              	.LBB155:
 2252              	.LBI155:
 2253              		.loc 2 113 1 view .LVU705
 2254              	.LBB156:
 2255              		.loc 2 113 1 view .LVU706
 2256 0426 1322     		movs	r2, #19
 2257 0428 0221     		movs	r1, #2
 2258 042a 2046     		mov	r0, r4
 2259 042c FFF7FEFF 		bl	_lv_obj_get_style_int
 2260              	.LVL250:
 2261 0430 0746     		mov	r7, r0
 2262              	.LVL251:
 2263              		.loc 2 113 1 is_stmt 0 view .LVU707
 2264              	.LBE156:
 2265              	.LBE155:
 426:lvgl/src/lv_widgets/lv_slider.c ****         lv_style_int_t knob_bottom = lv_obj_get_style_pad_bottom(slider, LV_SLIDER_PART_KNOB);
 2266              		.loc 1 426 9 is_stmt 1 view .LVU708
 2267              	.LBB157:
 2268              	.LBI157:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 2269              		.loc 2 110 1 view .LVU709
 2270              	.LBB158:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 2271              		.loc 2 110 1 view .LVU710
 2272 0432 1022     		movs	r2, #16
 2273 0434 0221     		movs	r1, #2
 2274 0436 2046     		mov	r0, r4
 2275 0438 FFF7FEFF 		bl	_lv_obj_get_style_int
 2276              	.LVL252:
 2277 043c 8146     		mov	r9, r0
 2278              	.LVL253:
 110:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_BOTTOM, pad_bottom, lv_style_int_t, _int, scalar)
 2279              		.loc 2 110 1 is_stmt 0 view .LVU711
ARM GAS  D:\Temp\ccqmjWev.s 			page 72


 2280              	.LBE158:
 2281              	.LBE157:
 427:lvgl/src/lv_widgets/lv_slider.c **** 
 2282              		.loc 1 427 9 is_stmt 1 view .LVU712
 2283              	.LBB159:
 2284              	.LBI159:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 2285              		.loc 2 111 1 view .LVU713
 2286              	.LBB160:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 2287              		.loc 2 111 1 view .LVU714
 2288 043e 1122     		movs	r2, #17
 2289 0440 0221     		movs	r1, #2
 2290 0442 2046     		mov	r0, r4
 2291 0444 FFF7FEFF 		bl	_lv_obj_get_style_int
 2292              	.LVL254:
 2293 0448 0646     		mov	r6, r0
 2294              	.LVL255:
 111:lvgl/src/lv_widgets/../lv_core/lv_obj_style_dec.h **** _LV_OBJ_STYLE_SET_GET_DECLARE(PAD_LEFT, pad_left, lv_style_int_t, _int, scalar)
 2295              		.loc 2 111 1 is_stmt 0 view .LVU715
 2296              	.LBE160:
 2297              	.LBE159:
 430:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 2298              		.loc 1 430 9 is_stmt 1 view .LVU716
 430:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 2299              		.loc 1 430 32 is_stmt 0 view .LVU717
 2300 044a 2046     		mov	r0, r4
 2301 044c FFF7FEFF 		bl	lv_obj_get_width
 2302              	.LVL256:
 2303 0450 8246     		mov	r10, r0
 2304 0452 2046     		mov	r0, r4
 2305 0454 FFF7FEFF 		bl	lv_obj_get_height
 2306              	.LVL257:
 430:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 2307              		.loc 1 430 20 view .LVU718
 2308 0458 8245     		cmp	r10, r0
 2309 045a 22DA     		bge	.L126
 430:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 2310              		.loc 1 430 32 discriminator 1 view .LVU719
 2311 045c 2046     		mov	r0, r4
 2312 045e FFF7FEFF 		bl	lv_obj_get_width
 2313              	.LVL258:
 430:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 2314              		.loc 1 430 20 discriminator 1 view .LVU720
 2315 0462 40F34F00 		sbfx	r0, r0, #1, #16
 2316              	.L127:
 2317              	.LVL259:
 431:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 2318              		.loc 1 431 9 is_stmt 1 discriminator 4 view .LVU721
 431:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 2319              		.loc 1 431 22 is_stmt 0 discriminator 4 view .LVU722
 2320 0466 4E45     		cmp	r6, r9
 2321 0468 B8BF     		it	lt
 2322 046a 4E46     		movlt	r6, r9
 2323              	.LVL260:
 431:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 2324              		.loc 1 431 22 discriminator 4 view .LVU723
ARM GAS  D:\Temp\ccqmjWev.s 			page 73


 2325 046c 33B2     		sxth	r3, r6
 2326 046e 4745     		cmp	r7, r8
 2327 0470 B8BF     		it	lt
 2328 0472 4746     		movlt	r7, r8
 2329              	.LVL261:
 431:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 2330              		.loc 1 431 22 discriminator 4 view .LVU724
 2331 0474 3AB2     		sxth	r2, r7
 2332 0476 9342     		cmp	r3, r2
 2333 0478 B8BF     		it	lt
 2334 047a 1346     		movlt	r3, r2
 431:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 2335              		.loc 1 431 19 discriminator 4 view .LVU725
 2336 047c 10FA83F6 		uxtah	r6, r0, r3
 2337 0480 B6B2     		uxth	r6, r6
 2338              	.LVL262:
 432:lvgl/src/lv_widgets/lv_slider.c **** 
 2339              		.loc 1 432 9 is_stmt 1 discriminator 4 view .LVU726
 432:lvgl/src/lv_widgets/lv_slider.c **** 
 2340              		.loc 1 432 19 is_stmt 0 discriminator 4 view .LVU727
 2341 0482 0236     		adds	r6, r6, #2
 2342              	.LVL263:
 432:lvgl/src/lv_widgets/lv_slider.c **** 
 2343              		.loc 1 432 19 discriminator 4 view .LVU728
 2344 0484 B6B2     		uxth	r6, r6
 2345              	.LVL264:
 434:lvgl/src/lv_widgets/lv_slider.c **** 
 2346              		.loc 1 434 9 is_stmt 1 discriminator 4 view .LVU729
 434:lvgl/src/lv_widgets/lv_slider.c **** 
 2347              		.loc 1 434 22 is_stmt 0 discriminator 4 view .LVU730
 2348 0486 0221     		movs	r1, #2
 2349 0488 2046     		mov	r0, r4
 2350 048a FFF7FEFF 		bl	lv_obj_get_draw_rect_ext_pad_size
 2351              	.LVL265:
 434:lvgl/src/lv_widgets/lv_slider.c **** 
 2352              		.loc 1 434 19 discriminator 4 view .LVU731
 2353 048e 16FA80F3 		uxtah	r3, r6, r0
 2354 0492 1BB2     		sxth	r3, r3
 2355              	.LVL266:
 437:lvgl/src/lv_widgets/lv_slider.c **** 
 2356              		.loc 1 437 9 is_stmt 1 discriminator 4 view .LVU732
 437:lvgl/src/lv_widgets/lv_slider.c **** 
 2357              		.loc 1 437 32 is_stmt 0 discriminator 4 view .LVU733
 2358 0494 B4F93220 		ldrsh	r2, [r4, #50]
 2359 0498 9342     		cmp	r3, r2
 2360 049a B8BF     		it	lt
 2361 049c 1346     		movlt	r3, r2
 2362              	.LVL267:
 437:lvgl/src/lv_widgets/lv_slider.c **** 
 2363              		.loc 1 437 30 discriminator 4 view .LVU734
 2364 049e 6386     		strh	r3, [r4, #50]	@ movhi
 2365              	.LBE152:
 2366 04a0 F4E5     		b	.L94
 2367              	.LVL268:
 2368              	.L126:
 2369              	.LBB161:
 430:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
ARM GAS  D:\Temp\ccqmjWev.s 			page 74


 2370              		.loc 1 430 32 discriminator 2 view .LVU735
 2371 04a2 2046     		mov	r0, r4
 2372 04a4 FFF7FEFF 		bl	lv_obj_get_height
 2373              	.LVL269:
 430:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 2374              		.loc 1 430 20 discriminator 2 view .LVU736
 2375 04a8 40F34F00 		sbfx	r0, r0, #1, #16
 2376 04ac DBE7     		b	.L127
 2377              	.LVL270:
 2378              	.L152:
 430:lvgl/src/lv_widgets/lv_slider.c ****         knob_size += LV_MATH_MAX(LV_MATH_MAX(knob_left, knob_right), LV_MATH_MAX(knob_bottom, knob_
 2379              		.loc 1 430 20 discriminator 2 view .LVU737
 2380              	.LBE161:
 2381              	.LBB162:
 442:lvgl/src/lv_widgets/lv_slider.c **** 
 2382              		.loc 1 442 9 is_stmt 1 view .LVU738
 442:lvgl/src/lv_widgets/lv_slider.c **** 
 2383              		.loc 1 442 14 is_stmt 0 view .LVU739
 2384 04ae 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 2385              	.LVL271:
 444:lvgl/src/lv_widgets/lv_slider.c ****             if(!ext->left_knob_focus) lv_slider_set_value(slider, lv_slider_get_value(slider) + 1, 
 2386              		.loc 1 444 9 is_stmt 1 view .LVU740
 444:lvgl/src/lv_widgets/lv_slider.c ****             if(!ext->left_knob_focus) lv_slider_set_value(slider, lv_slider_get_value(slider) + 1, 
 2387              		.loc 1 444 11 is_stmt 0 view .LVU741
 2388 04b2 132B     		cmp	r3, #19
 2389 04b4 1CD0     		beq	.L129
 444:lvgl/src/lv_widgets/lv_slider.c ****             if(!ext->left_knob_focus) lv_slider_set_value(slider, lv_slider_get_value(slider) + 1, 
 2390              		.loc 1 444 30 discriminator 1 view .LVU742
 2391 04b6 112B     		cmp	r3, #17
 2392 04b8 1AD0     		beq	.L129
 451:lvgl/src/lv_widgets/lv_slider.c ****             if(!ext->left_knob_focus) lv_slider_set_value(slider, lv_slider_get_value(slider) - 1, 
 2393              		.loc 1 451 14 is_stmt 1 view .LVU743
 451:lvgl/src/lv_widgets/lv_slider.c ****             if(!ext->left_knob_focus) lv_slider_set_value(slider, lv_slider_get_value(slider) - 1, 
 2394              		.loc 1 451 16 is_stmt 0 view .LVU744
 2395 04ba 142B     		cmp	r3, #20
 2396 04bc 02D0     		beq	.L133
 451:lvgl/src/lv_widgets/lv_slider.c ****             if(!ext->left_knob_focus) lv_slider_set_value(slider, lv_slider_get_value(slider) - 1, 
 2397              		.loc 1 451 34 discriminator 1 view .LVU745
 2398 04be 122B     		cmp	r3, #18
 2399 04c0 7FF4E4AD 		bne	.L94
 2400              	.L133:
 452:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) - 1, LV_ANIM_ON)
 2401              		.loc 1 452 13 is_stmt 1 view .LVU746
 452:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) - 1, LV_ANIM_ON)
 2402              		.loc 1 452 16 is_stmt 0 view .LVU747
 2403 04c4 96F85430 		ldrb	r3, [r6, #84]	@ zero_extendqisi2
 2404              	.LVL272:
 452:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) - 1, LV_ANIM_ON)
 2405              		.loc 1 452 15 view .LVU748
 2406 04c8 13F0020F 		tst	r3, #2
 2407 04cc 31D1     		bne	.L134
 452:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) - 1, LV_ANIM_ON)
 2408              		.loc 1 452 39 is_stmt 1 discriminator 1 view .LVU749
 452:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) - 1, LV_ANIM_ON)
 2409              		.loc 1 452 67 is_stmt 0 discriminator 1 view .LVU750
 2410 04ce 2046     		mov	r0, r4
 2411 04d0 FFF7FEFF 		bl	lv_slider_get_value
ARM GAS  D:\Temp\ccqmjWev.s 			page 75


 2412              	.LVL273:
 452:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) - 1, LV_ANIM_ON)
 2413              		.loc 1 452 67 discriminator 1 view .LVU751
 2414 04d4 81B2     		uxth	r1, r0
 452:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) - 1, LV_ANIM_ON)
 2415              		.loc 1 452 95 discriminator 1 view .LVU752
 2416 04d6 0139     		subs	r1, r1, #1
 2417              	.LVL274:
 2418              	.LBB163:
 2419              	.LBI163:
  84:lvgl/src/lv_widgets/lv_slider.h **** {
 2420              		.loc 5 84 20 is_stmt 1 discriminator 1 view .LVU753
 2421              	.LBB164:
  86:lvgl/src/lv_widgets/lv_slider.h **** }
 2422              		.loc 5 86 5 discriminator 1 view .LVU754
 2423 04d8 0122     		movs	r2, #1
 2424 04da 09B2     		sxth	r1, r1
  86:lvgl/src/lv_widgets/lv_slider.h **** }
 2425              		.loc 5 86 5 is_stmt 0 discriminator 1 view .LVU755
 2426 04dc 2046     		mov	r0, r4
 2427 04de FFF7FEFF 		bl	lv_bar_set_value
 2428              	.LVL275:
 2429              	.L135:
  86:lvgl/src/lv_widgets/lv_slider.h **** }
 2430              		.loc 5 86 5 discriminator 1 view .LVU756
 2431              	.LBE164:
 2432              	.LBE163:
 455:lvgl/src/lv_widgets/lv_slider.c ****             if(res != LV_RES_OK) return res;
 2433              		.loc 1 455 13 is_stmt 1 view .LVU757
 455:lvgl/src/lv_widgets/lv_slider.c ****             if(res != LV_RES_OK) return res;
 2434              		.loc 1 455 19 is_stmt 0 view .LVU758
 2435 04e2 0022     		movs	r2, #0
 2436 04e4 1021     		movs	r1, #16
 2437 04e6 2046     		mov	r0, r4
 2438 04e8 FFF7FEFF 		bl	lv_event_send
 2439              	.LVL276:
 2440 04ec 0546     		mov	r5, r0
 2441              	.LVL277:
 456:lvgl/src/lv_widgets/lv_slider.c ****         }
 2442              		.loc 1 456 13 is_stmt 1 view .LVU759
 2443 04ee CDE5     		b	.L94
 2444              	.LVL278:
 2445              	.L129:
 445:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) + 1, LV_ANIM_ON)
 2446              		.loc 1 445 13 view .LVU760
 445:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) + 1, LV_ANIM_ON)
 2447              		.loc 1 445 16 is_stmt 0 view .LVU761
 2448 04f0 96F85430 		ldrb	r3, [r6, #84]	@ zero_extendqisi2
 2449              	.LVL279:
 445:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) + 1, LV_ANIM_ON)
 2450              		.loc 1 445 15 view .LVU762
 2451 04f4 13F0020F 		tst	r3, #2
 2452 04f8 10D1     		bne	.L131
 445:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) + 1, LV_ANIM_ON)
 2453              		.loc 1 445 39 is_stmt 1 discriminator 1 view .LVU763
 445:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) + 1, LV_ANIM_ON)
 2454              		.loc 1 445 67 is_stmt 0 discriminator 1 view .LVU764
ARM GAS  D:\Temp\ccqmjWev.s 			page 76


 2455 04fa 2046     		mov	r0, r4
 2456 04fc FFF7FEFF 		bl	lv_slider_get_value
 2457              	.LVL280:
 445:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) + 1, LV_ANIM_ON)
 2458              		.loc 1 445 67 discriminator 1 view .LVU765
 2459 0500 81B2     		uxth	r1, r0
 445:lvgl/src/lv_widgets/lv_slider.c ****             else lv_slider_set_left_value(slider, lv_slider_get_left_value(slider) + 1, LV_ANIM_ON)
 2460              		.loc 1 445 95 discriminator 1 view .LVU766
 2461 0502 0131     		adds	r1, r1, #1
 2462              	.LVL281:
 2463              	.LBB165:
 2464              	.LBI165:
  84:lvgl/src/lv_widgets/lv_slider.h **** {
 2465              		.loc 5 84 20 is_stmt 1 discriminator 1 view .LVU767
 2466              	.LBB166:
  86:lvgl/src/lv_widgets/lv_slider.h **** }
 2467              		.loc 5 86 5 discriminator 1 view .LVU768
 2468 0504 0122     		movs	r2, #1
 2469 0506 09B2     		sxth	r1, r1
  86:lvgl/src/lv_widgets/lv_slider.h **** }
 2470              		.loc 5 86 5 is_stmt 0 discriminator 1 view .LVU769
 2471 0508 2046     		mov	r0, r4
 2472 050a FFF7FEFF 		bl	lv_bar_set_value
 2473              	.LVL282:
 2474              	.L132:
  86:lvgl/src/lv_widgets/lv_slider.h **** }
 2475              		.loc 5 86 5 discriminator 1 view .LVU770
 2476              	.LBE166:
 2477              	.LBE165:
 448:lvgl/src/lv_widgets/lv_slider.c ****             if(res != LV_RES_OK) return res;
 2478              		.loc 1 448 13 is_stmt 1 view .LVU771
 448:lvgl/src/lv_widgets/lv_slider.c ****             if(res != LV_RES_OK) return res;
 2479              		.loc 1 448 19 is_stmt 0 view .LVU772
 2480 050e 0022     		movs	r2, #0
 2481 0510 1021     		movs	r1, #16
 2482 0512 2046     		mov	r0, r4
 2483 0514 FFF7FEFF 		bl	lv_event_send
 2484              	.LVL283:
 2485 0518 0546     		mov	r5, r0
 2486              	.LVL284:
 449:lvgl/src/lv_widgets/lv_slider.c ****         }
 2487              		.loc 1 449 13 is_stmt 1 view .LVU773
 2488 051a B7E5     		b	.L94
 2489              	.LVL285:
 2490              	.L131:
 446:lvgl/src/lv_widgets/lv_slider.c **** 
 2491              		.loc 1 446 18 view .LVU774
 2492              	.LBB167:
 2493              	.LBI167:
 153:lvgl/src/lv_widgets/lv_slider.h **** {
 2494              		.loc 5 153 23 view .LVU775
 2495              	.LBB168:
 155:lvgl/src/lv_widgets/lv_slider.h **** }
 2496              		.loc 5 155 5 view .LVU776
 155:lvgl/src/lv_widgets/lv_slider.h **** }
 2497              		.loc 5 155 12 is_stmt 0 view .LVU777
 2498 051c 2046     		mov	r0, r4
ARM GAS  D:\Temp\ccqmjWev.s 			page 77


 2499 051e FFF7FEFF 		bl	lv_bar_get_start_value
 2500              	.LVL286:
 155:lvgl/src/lv_widgets/lv_slider.h **** }
 2501              		.loc 5 155 12 view .LVU778
 2502              	.LBE168:
 2503              	.LBE167:
 446:lvgl/src/lv_widgets/lv_slider.c **** 
 2504              		.loc 1 446 51 view .LVU779
 2505 0522 81B2     		uxth	r1, r0
 446:lvgl/src/lv_widgets/lv_slider.c **** 
 2506              		.loc 1 446 84 view .LVU780
 2507 0524 0131     		adds	r1, r1, #1
 2508              	.LVL287:
 2509              	.LBB169:
 2510              	.LBI169:
  95:lvgl/src/lv_widgets/lv_slider.h **** {
 2511              		.loc 5 95 20 is_stmt 1 view .LVU781
 2512              	.LBB170:
  97:lvgl/src/lv_widgets/lv_slider.h **** }
 2513              		.loc 5 97 5 view .LVU782
 2514 0526 0122     		movs	r2, #1
 2515 0528 09B2     		sxth	r1, r1
  97:lvgl/src/lv_widgets/lv_slider.h **** }
 2516              		.loc 5 97 5 is_stmt 0 view .LVU783
 2517 052a 2046     		mov	r0, r4
 2518 052c FFF7FEFF 		bl	lv_bar_set_start_value
 2519              	.LVL288:
  97:lvgl/src/lv_widgets/lv_slider.h **** }
 2520              		.loc 5 97 5 view .LVU784
 2521 0530 EDE7     		b	.L132
 2522              	.LVL289:
 2523              	.L134:
  97:lvgl/src/lv_widgets/lv_slider.h **** }
 2524              		.loc 5 97 5 view .LVU785
 2525              	.LBE170:
 2526              	.LBE169:
 453:lvgl/src/lv_widgets/lv_slider.c **** 
 2527              		.loc 1 453 18 is_stmt 1 view .LVU786
 2528              	.LBB171:
 2529              	.LBI171:
 153:lvgl/src/lv_widgets/lv_slider.h **** {
 2530              		.loc 5 153 23 view .LVU787
 2531              	.LBB172:
 155:lvgl/src/lv_widgets/lv_slider.h **** }
 2532              		.loc 5 155 5 view .LVU788
 155:lvgl/src/lv_widgets/lv_slider.h **** }
 2533              		.loc 5 155 12 is_stmt 0 view .LVU789
 2534 0532 2046     		mov	r0, r4
 2535 0534 FFF7FEFF 		bl	lv_bar_get_start_value
 2536              	.LVL290:
 155:lvgl/src/lv_widgets/lv_slider.h **** }
 2537              		.loc 5 155 12 view .LVU790
 2538              	.LBE172:
 2539              	.LBE171:
 453:lvgl/src/lv_widgets/lv_slider.c **** 
 2540              		.loc 1 453 51 view .LVU791
 2541 0538 81B2     		uxth	r1, r0
ARM GAS  D:\Temp\ccqmjWev.s 			page 78


 453:lvgl/src/lv_widgets/lv_slider.c **** 
 2542              		.loc 1 453 84 view .LVU792
 2543 053a 0139     		subs	r1, r1, #1
 2544              	.LVL291:
 2545              	.LBB173:
 2546              	.LBI173:
  95:lvgl/src/lv_widgets/lv_slider.h **** {
 2547              		.loc 5 95 20 is_stmt 1 view .LVU793
 2548              	.LBB174:
  97:lvgl/src/lv_widgets/lv_slider.h **** }
 2549              		.loc 5 97 5 view .LVU794
 2550 053c 0122     		movs	r2, #1
 2551 053e 09B2     		sxth	r1, r1
  97:lvgl/src/lv_widgets/lv_slider.h **** }
 2552              		.loc 5 97 5 is_stmt 0 view .LVU795
 2553 0540 2046     		mov	r0, r4
 2554 0542 FFF7FEFF 		bl	lv_bar_set_start_value
 2555              	.LVL292:
  97:lvgl/src/lv_widgets/lv_slider.h **** }
 2556              		.loc 5 97 5 view .LVU796
 2557 0546 CCE7     		b	.L135
 2558              	.LVL293:
 2559              	.L153:
  97:lvgl/src/lv_widgets/lv_slider.h **** }
 2560              		.loc 5 97 5 view .LVU797
 2561              	.LBE174:
 2562              	.LBE173:
 2563              	.LBE162:
 461:lvgl/src/lv_widgets/lv_slider.c ****     }
 2564              		.loc 1 461 9 is_stmt 1 view .LVU798
 2565 0548 0221     		movs	r1, #2
 2566 054a 2046     		mov	r0, r4
 2567 054c FFF7FEFF 		bl	lv_obj_clean_style_list
 2568              	.LVL294:
 2569 0550 9CE5     		b	.L94
 2570              		.cfi_endproc
 2571              	.LFE483:
 2573 0552 00BF     		.section	.text.lv_slider_is_dragged,"ax",%progbits
 2574              		.align	1
 2575              		.global	lv_slider_is_dragged
 2576              		.syntax unified
 2577              		.thumb
 2578              		.thumb_func
 2579              		.fpu fpv4-sp-d16
 2581              	lv_slider_is_dragged:
 2582              	.LVL295:
 2583              	.LFB481:
 140:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_OBJ(slider, LV_OBJX_NAME);
 2584              		.loc 1 140 1 view -0
 2585              		.cfi_startproc
 2586              		@ args = 0, pretend = 0, frame = 0
 2587              		@ frame_needed = 0, uses_anonymous_args = 0
 140:lvgl/src/lv_widgets/lv_slider.c ****     LV_ASSERT_OBJ(slider, LV_OBJX_NAME);
 2588              		.loc 1 140 1 is_stmt 0 view .LVU800
 2589 0000 10B5     		push	{r4, lr}
 2590              	.LCFI18:
 2591              		.cfi_def_cfa_offset 8
ARM GAS  D:\Temp\ccqmjWev.s 			page 79


 2592              		.cfi_offset 4, -8
 2593              		.cfi_offset 14, -4
 2594 0002 0446     		mov	r4, r0
 141:lvgl/src/lv_widgets/lv_slider.c **** 
 2595              		.loc 1 141 5 is_stmt 1 view .LVU801
 141:lvgl/src/lv_widgets/lv_slider.c **** 
 2596              		.loc 1 141 5 view .LVU802
 2597 0004 FFF7FEFF 		bl	lv_debug_check_null
 2598              	.LVL296:
 141:lvgl/src/lv_widgets/lv_slider.c **** 
 2599              		.loc 1 141 5 is_stmt 0 view .LVU803
 2600 0008 28B9     		cbnz	r0, .L165
 141:lvgl/src/lv_widgets/lv_slider.c **** 
 2601              		.loc 1 141 5 is_stmt 1 discriminator 1 view .LVU804
 141:lvgl/src/lv_widgets/lv_slider.c **** 
 2602              		.loc 1 141 5 discriminator 1 view .LVU805
 2603 000a 2246     		mov	r2, r4
 2604 000c 0023     		movs	r3, #0
 2605 000e 0648     		ldr	r0, .L168
 2606 0010 FFF7FEFF 		bl	lv_debug_log_error
 2607              	.LVL297:
 2608              	.L166:
 141:lvgl/src/lv_widgets/lv_slider.c **** 
 2609              		.loc 1 141 5 discriminator 1 view .LVU806
 141:lvgl/src/lv_widgets/lv_slider.c **** 
 2610              		.loc 1 141 5 discriminator 1 view .LVU807
 2611 0014 FEE7     		b	.L166
 2612              	.L165:
 141:lvgl/src/lv_widgets/lv_slider.c **** 
 2613              		.loc 1 141 40 discriminator 2 view .LVU808
 143:lvgl/src/lv_widgets/lv_slider.c ****     return ext->dragging ? true : false;
 2614              		.loc 1 143 5 discriminator 2 view .LVU809
 143:lvgl/src/lv_widgets/lv_slider.c ****     return ext->dragging ? true : false;
 2615              		.loc 1 143 29 is_stmt 0 discriminator 2 view .LVU810
 2616 0016 2046     		mov	r0, r4
 2617 0018 FFF7FEFF 		bl	lv_obj_get_ext_attr
 2618              	.LVL298:
 144:lvgl/src/lv_widgets/lv_slider.c **** }
 2619              		.loc 1 144 5 is_stmt 1 discriminator 2 view .LVU811
 144:lvgl/src/lv_widgets/lv_slider.c **** }
 2620              		.loc 1 144 26 is_stmt 0 discriminator 2 view .LVU812
 2621 001c 90F85400 		ldrb	r0, [r0, #84]	@ zero_extendqisi2
 2622              	.LVL299:
 145:lvgl/src/lv_widgets/lv_slider.c **** 
 2623              		.loc 1 145 1 discriminator 2 view .LVU813
 2624 0020 00F00100 		and	r0, r0, #1
 2625 0024 10BD     		pop	{r4, pc}
 2626              	.LVL300:
 2627              	.L169:
 145:lvgl/src/lv_widgets/lv_slider.c **** 
 2628              		.loc 1 145 1 discriminator 2 view .LVU814
 2629 0026 00BF     		.align	2
 2630              	.L168:
 2631 0028 00000000 		.word	.LC0
 2632              		.cfi_endproc
 2633              	.LFE481:
 2635              		.section	.bss.ancestor_design_f,"aw",%nobits
ARM GAS  D:\Temp\ccqmjWev.s 			page 80


 2636              		.align	2
 2637              		.set	.LANCHOR0,. + 0
 2640              	ancestor_design_f:
 2641 0000 00000000 		.space	4
 2642              		.section	.bss.ancestor_signal,"aw",%nobits
 2643              		.align	2
 2644              		.set	.LANCHOR1,. + 0
 2647              	ancestor_signal:
 2648 0000 00000000 		.space	4
 2649              		.section	.rodata.lv_slider_create.str1.4,"aMS",%progbits,1
 2650              		.align	2
 2651              	.LC1:
 2652 0000 4F757420 		.ascii	"Out of memory\000"
 2652      6F66206D 
 2652      656D6F72 
 2652      7900
 2653              		.section	.rodata.lv_slider_get_style.str1.4,"aMS",%progbits,1
 2654              		.align	2
 2655              	.LC0:
 2656 0000 4E554C4C 		.ascii	"NULL pointer\000"
 2656      20706F69 
 2656      6E746572 
 2656      00
 2657              		.section	.rodata.lv_slider_signal.str1.4,"aMS",%progbits,1
 2658              		.align	2
 2659              	.LC2:
 2660 0000 6C765F73 		.ascii	"lv_slider\000"
 2660      6C696465 
 2660      7200
 2661              		.text
 2662              	.Letext0:
 2663              		.file 6 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 2664              		.file 7 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 2665              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 2666              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2667              		.file 10 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-non
 2668              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2669              		.file 12 "lvgl/lv_conf.h"
 2670              		.file 13 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2671              		.file 14 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2672              		.file 15 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 2673              		.file 16 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_types.h"
 2674              		.file 17 "lvgl/src/lv_widgets/../lv_core/../lv_font/lv_font.h"
 2675              		.file 18 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_color.h"
 2676              		.file 19 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_anim.h"
 2677              		.file 20 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_blend.h"
 2678              		.file 21 "lvgl/src/lv_widgets/../lv_core/lv_style.h"
 2679              		.file 22 "lvgl/src/lv_widgets/../lv_core/../lv_hal/../lv_misc/lv_ll.h"
 2680              		.file 23 "lvgl/src/lv_widgets/../lv_core/lv_obj.h"
 2681              		.file 24 "lvgl/src/lv_widgets/../lv_core/../lv_hal/lv_hal_indev.h"
 2682              		.file 25 "lvgl/src/lv_widgets/../lv_core/../lv_core/lv_group.h"
 2683              		.file 26 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_rect.h"
 2684              		.file 27 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_bidi.h"
 2685              		.file 28 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_txt.h"
 2686              		.file 29 "lvgl/src/lv_widgets/../lv_core/../lv_draw/lv_draw_label.h"
 2687              		.file 30 "lvgl/src/lv_widgets/lv_bar.h"
 2688              		.file 31 "lvgl/src/lv_widgets/../lv_themes/lv_theme.h"
ARM GAS  D:\Temp\ccqmjWev.s 			page 81


 2689              		.file 32 "lvgl/src/lv_widgets/../lv_core/../lv_misc/lv_debug.h"
 2690              		.file 33 "lvgl/src/lv_widgets/../lv_core/lv_indev.h"
ARM GAS  D:\Temp\ccqmjWev.s 			page 82


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_slider.c
  D:\Temp\ccqmjWev.s:18     .text.lv_slider_get_style:0000000000000000 $t
  D:\Temp\ccqmjWev.s:25     .text.lv_slider_get_style:0000000000000000 lv_slider_get_style
  D:\Temp\ccqmjWev.s:111    .text.lv_slider_get_style:000000000000003c $d
  D:\Temp\ccqmjWev.s:116    .text.lv_slider_position_knob:0000000000000000 $t
  D:\Temp\ccqmjWev.s:122    .text.lv_slider_position_knob:0000000000000000 lv_slider_position_knob
  D:\Temp\ccqmjWev.s:302    .text.lv_slider_draw_knob:0000000000000000 $t
  D:\Temp\ccqmjWev.s:308    .text.lv_slider_draw_knob:0000000000000000 lv_slider_draw_knob
  D:\Temp\ccqmjWev.s:359    .text.lv_slider_design:0000000000000000 $t
  D:\Temp\ccqmjWev.s:365    .text.lv_slider_design:0000000000000000 lv_slider_design
  D:\Temp\ccqmjWev.s:843    .text.lv_slider_design:0000000000000198 $d
  D:\Temp\ccqmjWev.s:848    .text.lv_slider_create:0000000000000000 $t
  D:\Temp\ccqmjWev.s:855    .text.lv_slider_create:0000000000000000 lv_slider_create
  D:\Temp\ccqmjWev.s:1181   .text.lv_slider_create:000000000000012c $d
  D:\Temp\ccqmjWev.s:1253   .text.lv_slider_signal:0000000000000000 lv_slider_signal
  D:\Temp\ccqmjWev.s:1190   .text.lv_slider_get_value:0000000000000000 $t
  D:\Temp\ccqmjWev.s:1197   .text.lv_slider_get_value:0000000000000000 lv_slider_get_value
  D:\Temp\ccqmjWev.s:1242   .text.lv_slider_get_value:0000000000000020 $d
  D:\Temp\ccqmjWev.s:1247   .text.lv_slider_signal:0000000000000000 $t
  D:\Temp\ccqmjWev.s:2032   .text.lv_slider_signal:0000000000000344 $d
  D:\Temp\ccqmjWev.s:2040   .text.lv_slider_signal:000000000000034c $t
  D:\Temp\ccqmjWev.s:2574   .text.lv_slider_is_dragged:0000000000000000 $t
  D:\Temp\ccqmjWev.s:2581   .text.lv_slider_is_dragged:0000000000000000 lv_slider_is_dragged
  D:\Temp\ccqmjWev.s:2631   .text.lv_slider_is_dragged:0000000000000028 $d
  D:\Temp\ccqmjWev.s:2636   .bss.ancestor_design_f:0000000000000000 $d
  D:\Temp\ccqmjWev.s:2640   .bss.ancestor_design_f:0000000000000000 ancestor_design_f
  D:\Temp\ccqmjWev.s:2643   .bss.ancestor_signal:0000000000000000 $d
  D:\Temp\ccqmjWev.s:2647   .bss.ancestor_signal:0000000000000000 ancestor_signal
  D:\Temp\ccqmjWev.s:2650   .rodata.lv_slider_create.str1.4:0000000000000000 $d
  D:\Temp\ccqmjWev.s:2654   .rodata.lv_slider_get_style.str1.4:0000000000000000 $d
  D:\Temp\ccqmjWev.s:2658   .rodata.lv_slider_signal.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
lv_debug_check_null
lv_debug_log_error
lv_obj_get_ext_attr
_lv_obj_get_style_int
lv_draw_rect_dsc_init
lv_obj_init_draw_rect_dsc
lv_draw_rect
lv_obj_get_base_dir
lv_obj_get_width
lv_obj_get_height
lv_bar_get_type
lv_bar_create
lv_obj_allocate_ext_attr
lv_style_list_init
lv_obj_set_signal_cb
lv_obj_set_design_cb
lv_style_list_copy
lv_obj_get_design_cb
lv_obj_get_signal_cb
lv_obj_del
lv_obj_set_click
lv_obj_add_protect
lv_obj_set_ext_click_area
ARM GAS  D:\Temp\ccqmjWev.s 			page 83


lv_theme_apply
lv_obj_set_height
lv_obj_refresh_style
lv_bar_get_value
lv_obj_handle_get_type_signal
_lv_area_is_point_on
lv_indev_get_point
lv_indev_get_type
lv_obj_invalidate
lv_event_send
lv_obj_get_group
lv_group_get_editing
lv_indev_get_act
lv_group_set_editing
lv_obj_get_draw_rect_ext_pad_size
lv_bar_set_value
lv_bar_get_start_value
lv_bar_set_start_value
lv_obj_clean_style_list
