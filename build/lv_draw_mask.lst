ARM GAS  D:\Temp\ccPmLtDk.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_draw_mask.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_draw_mask_fade,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	lv_draw_mask_fade:
  26              	.LVL0:
  27              	.LFB183:
  28              		.file 1 "lvgl/src/lv_draw/lv_draw_mask.c"
   1:lvgl/src/lv_draw/lv_draw_mask.c **** /**
   2:lvgl/src/lv_draw/lv_draw_mask.c ****  * @file lv_mask.c
   3:lvgl/src/lv_draw/lv_draw_mask.c ****  *
   4:lvgl/src/lv_draw/lv_draw_mask.c ****  */
   5:lvgl/src/lv_draw/lv_draw_mask.c **** 
   6:lvgl/src/lv_draw/lv_draw_mask.c **** /*********************
   7:lvgl/src/lv_draw/lv_draw_mask.c ****  *      INCLUDES
   8:lvgl/src/lv_draw/lv_draw_mask.c ****  *********************/
   9:lvgl/src/lv_draw/lv_draw_mask.c **** #include "lv_draw_mask.h"
  10:lvgl/src/lv_draw/lv_draw_mask.c **** #include "../lv_misc/lv_math.h"
  11:lvgl/src/lv_draw/lv_draw_mask.c **** #include "../lv_misc/lv_log.h"
  12:lvgl/src/lv_draw/lv_draw_mask.c **** #include "../lv_misc/lv_debug.h"
  13:lvgl/src/lv_draw/lv_draw_mask.c **** #include "../lv_misc/lv_gc.h"
  14:lvgl/src/lv_draw/lv_draw_mask.c **** 
  15:lvgl/src/lv_draw/lv_draw_mask.c **** /*********************
  16:lvgl/src/lv_draw/lv_draw_mask.c ****  *      DEFINES
  17:lvgl/src/lv_draw/lv_draw_mask.c ****  *********************/
  18:lvgl/src/lv_draw/lv_draw_mask.c **** 
  19:lvgl/src/lv_draw/lv_draw_mask.c **** /**********************
  20:lvgl/src/lv_draw/lv_draw_mask.c ****  *      TYPEDEFS
  21:lvgl/src/lv_draw/lv_draw_mask.c ****  **********************/
  22:lvgl/src/lv_draw/lv_draw_mask.c **** 
  23:lvgl/src/lv_draw/lv_draw_mask.c **** /**********************
  24:lvgl/src/lv_draw/lv_draw_mask.c ****  *  STATIC PROTOTYPES
  25:lvgl/src/lv_draw/lv_draw_mask.c ****  **********************/
  26:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_line(lv_opa_t * mask_buf, lv_coord_t a
  27:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                   lv_coord_t abs_y, lv_coord_t len,
  28:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                   lv_draw_mask_line_param_t * param
  29:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_radius(lv_opa_t * mask_buf, lv_coord_t
  30:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                     lv_coord_t abs_y, lv_coord_t le
ARM GAS  D:\Temp\ccPmLtDk.s 			page 2


  31:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                     lv_draw_mask_radius_param_t * p
  32:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_angle(lv_opa_t * mask_buf, lv_coord_t 
  33:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                    lv_coord_t abs_y, lv_coord_t len
  34:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                    lv_draw_mask_angle_param_t * par
  35:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_fade(lv_opa_t * mask_buf, lv_coord_t a
  36:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                   lv_coord_t abs_y, lv_coord_t len,
  37:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                   lv_draw_mask_fade_param_t * param
  38:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_map(lv_opa_t * mask_buf, lv_coord_t ab
  39:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                  lv_coord_t abs_y, lv_coord_t len,
  40:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                  lv_draw_mask_map_param_t * param);
  41:lvgl/src/lv_draw/lv_draw_mask.c **** 
  42:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_flat(lv_opa_t * mask_buf, lv_coord_t abs_
  43:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                lv_coord_t len,
  44:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                lv_draw_mask_line_param_t * p);
  45:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_steep(lv_opa_t * mask_buf, lv_coord_t abs
  46:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                 lv_coord_t len,
  47:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                 lv_draw_mask_line_param_t * p);
  48:lvgl/src/lv_draw/lv_draw_mask.c **** 
  49:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static inline lv_opa_t mask_mix(lv_opa_t mask_act, lv_opa_t mask_new);
  50:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static inline void sqrt_approx(lv_sqrt_res_t * q, lv_sqrt_res_t * ref, uint32
  51:lvgl/src/lv_draw/lv_draw_mask.c **** 
  52:lvgl/src/lv_draw/lv_draw_mask.c **** /**********************
  53:lvgl/src/lv_draw/lv_draw_mask.c ****  *  STATIC VARIABLES
  54:lvgl/src/lv_draw/lv_draw_mask.c ****  **********************/
  55:lvgl/src/lv_draw/lv_draw_mask.c **** 
  56:lvgl/src/lv_draw/lv_draw_mask.c **** /**********************
  57:lvgl/src/lv_draw/lv_draw_mask.c ****  *      MACROS
  58:lvgl/src/lv_draw/lv_draw_mask.c ****  **********************/
  59:lvgl/src/lv_draw/lv_draw_mask.c **** 
  60:lvgl/src/lv_draw/lv_draw_mask.c **** /**********************
  61:lvgl/src/lv_draw/lv_draw_mask.c ****  *   GLOBAL FUNCTIONS
  62:lvgl/src/lv_draw/lv_draw_mask.c ****  **********************/
  63:lvgl/src/lv_draw/lv_draw_mask.c **** 
  64:lvgl/src/lv_draw/lv_draw_mask.c **** /**
  65:lvgl/src/lv_draw/lv_draw_mask.c ****  * Add a draw mask. Everything drawn after it (until removing the mask) will be affected by the mas
  66:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param param an initialized mask parameter. Only the pointer is saved.
  67:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param custom_id a custom pointer to identify the mask. Used in `lv_draw_mask_remove_custom`.
  68:lvgl/src/lv_draw/lv_draw_mask.c ****  * @return the an integer, the ID of the mask. Can be used in `lv_draw_mask_remove_id`.
  69:lvgl/src/lv_draw/lv_draw_mask.c ****  */
  70:lvgl/src/lv_draw/lv_draw_mask.c **** int16_t lv_draw_mask_add(void * param, void * custom_id)
  71:lvgl/src/lv_draw/lv_draw_mask.c **** {
  72:lvgl/src/lv_draw/lv_draw_mask.c ****     /*Look for a free entry*/
  73:lvgl/src/lv_draw/lv_draw_mask.c ****     uint8_t i;
  74:lvgl/src/lv_draw/lv_draw_mask.c ****     for(i = 0; i < _LV_MASK_MAX_NUM; i++) {
  75:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param == NULL) break;
  76:lvgl/src/lv_draw/lv_draw_mask.c ****     }
  77:lvgl/src/lv_draw/lv_draw_mask.c **** 
  78:lvgl/src/lv_draw/lv_draw_mask.c ****     if(i >= _LV_MASK_MAX_NUM) {
  79:lvgl/src/lv_draw/lv_draw_mask.c ****         LV_LOG_WARN("lv_mask_add: no place to add the mask");
  80:lvgl/src/lv_draw/lv_draw_mask.c ****         return LV_MASK_ID_INV;
  81:lvgl/src/lv_draw/lv_draw_mask.c ****     }
  82:lvgl/src/lv_draw/lv_draw_mask.c **** 
  83:lvgl/src/lv_draw/lv_draw_mask.c ****     LV_GC_ROOT(_lv_draw_mask_list[i]).param = param;
  84:lvgl/src/lv_draw/lv_draw_mask.c ****     LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id = custom_id;
  85:lvgl/src/lv_draw/lv_draw_mask.c **** 
  86:lvgl/src/lv_draw/lv_draw_mask.c ****     return i;
  87:lvgl/src/lv_draw/lv_draw_mask.c **** }
ARM GAS  D:\Temp\ccPmLtDk.s 			page 3


  88:lvgl/src/lv_draw/lv_draw_mask.c **** 
  89:lvgl/src/lv_draw/lv_draw_mask.c **** /**
  90:lvgl/src/lv_draw/lv_draw_mask.c ****  * Apply the added buffers on a line. Used internally by the library's drawing routines.
  91:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param mask_buf store the result mask here. Has to be `len` byte long. Should be initialized wit
  92:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param abs_x absolute X coordinate where the line to calculate start
  93:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param abs_y absolute Y coordinate where the line to calculate start
  94:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param len length of the line to calculate (in pixel count)
  95:lvgl/src/lv_draw/lv_draw_mask.c ****  * @return One of these values:
  96:lvgl/src/lv_draw/lv_draw_mask.c ****  * - `LV_DRAW_MASK_RES_FULL_TRANSP`: the whole line is transparent. `mask_buf` is not set to zero
  97:lvgl/src/lv_draw/lv_draw_mask.c ****  * - `LV_DRAW_MASK_RES_FULL_COVER`: the whole line is fully visible. `mask_buf` is unchanged
  98:lvgl/src/lv_draw/lv_draw_mask.c ****  * - `LV_DRAW_MASK_RES_CHANGED`: `mask_buf` has changed, it shows the desired opacity of each pixel
  99:lvgl/src/lv_draw/lv_draw_mask.c ****  */
 100:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM lv_draw_mask_res_t lv_draw_mask_apply(lv_opa_t * mask_buf, lv_coord_t abs_x, 
 101:lvgl/src/lv_draw/lv_draw_mask.c ****                                                             lv_coord_t len)
 102:lvgl/src/lv_draw/lv_draw_mask.c **** {
 103:lvgl/src/lv_draw/lv_draw_mask.c ****     bool changed = false;
 104:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_common_dsc_t * dsc;
 105:lvgl/src/lv_draw/lv_draw_mask.c **** 
 106:lvgl/src/lv_draw/lv_draw_mask.c ****     _lv_draw_mask_saved_t * m = LV_GC_ROOT(_lv_draw_mask_list);
 107:lvgl/src/lv_draw/lv_draw_mask.c **** 
 108:lvgl/src/lv_draw/lv_draw_mask.c ****     while(m->param) {
 109:lvgl/src/lv_draw/lv_draw_mask.c ****         dsc = m->param;
 110:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res = LV_DRAW_MASK_RES_FULL_COVER;
 111:lvgl/src/lv_draw/lv_draw_mask.c ****         res = dsc->cb(mask_buf, abs_x, abs_y, len, (void *)m->param);
 112:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res == LV_DRAW_MASK_RES_TRANSP) return LV_DRAW_MASK_RES_TRANSP;
 113:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res == LV_DRAW_MASK_RES_CHANGED) changed = true;
 114:lvgl/src/lv_draw/lv_draw_mask.c **** 
 115:lvgl/src/lv_draw/lv_draw_mask.c ****         m++;
 116:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 117:lvgl/src/lv_draw/lv_draw_mask.c **** 
 118:lvgl/src/lv_draw/lv_draw_mask.c ****     return changed ? LV_DRAW_MASK_RES_CHANGED : LV_DRAW_MASK_RES_FULL_COVER;
 119:lvgl/src/lv_draw/lv_draw_mask.c **** }
 120:lvgl/src/lv_draw/lv_draw_mask.c **** 
 121:lvgl/src/lv_draw/lv_draw_mask.c **** /**
 122:lvgl/src/lv_draw/lv_draw_mask.c ****  * Remove a mask with a given ID
 123:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param id the ID of the mask.  Returned by `lv_draw_mask_add`
 124:lvgl/src/lv_draw/lv_draw_mask.c ****  * @return the parameter of the removed mask.
 125:lvgl/src/lv_draw/lv_draw_mask.c ****  * If more masks have `custom_id` ID then the last mask's parameter will be returned
 126:lvgl/src/lv_draw/lv_draw_mask.c ****  */
 127:lvgl/src/lv_draw/lv_draw_mask.c **** void * lv_draw_mask_remove_id(int16_t id)
 128:lvgl/src/lv_draw/lv_draw_mask.c **** {
 129:lvgl/src/lv_draw/lv_draw_mask.c ****     void * p = NULL;
 130:lvgl/src/lv_draw/lv_draw_mask.c **** 
 131:lvgl/src/lv_draw/lv_draw_mask.c ****     if(id != LV_MASK_ID_INV) {
 132:lvgl/src/lv_draw/lv_draw_mask.c ****         p = LV_GC_ROOT(_lv_draw_mask_list[id]).param;
 133:lvgl/src/lv_draw/lv_draw_mask.c ****         LV_GC_ROOT(_lv_draw_mask_list[id]).param = NULL;
 134:lvgl/src/lv_draw/lv_draw_mask.c ****         LV_GC_ROOT(_lv_draw_mask_list[id]).custom_id = NULL;
 135:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 136:lvgl/src/lv_draw/lv_draw_mask.c **** 
 137:lvgl/src/lv_draw/lv_draw_mask.c ****     return p;
 138:lvgl/src/lv_draw/lv_draw_mask.c **** }
 139:lvgl/src/lv_draw/lv_draw_mask.c **** 
 140:lvgl/src/lv_draw/lv_draw_mask.c **** /**
 141:lvgl/src/lv_draw/lv_draw_mask.c ****  * Remove all mask with a given custom ID
 142:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param custom_id a pointer used in `lv_draw_mask_add`
 143:lvgl/src/lv_draw/lv_draw_mask.c ****  * @return return the parameter of the removed mask.
 144:lvgl/src/lv_draw/lv_draw_mask.c ****  * If more masks have `custom_id` ID then the last mask's parameter will be returned
ARM GAS  D:\Temp\ccPmLtDk.s 			page 4


 145:lvgl/src/lv_draw/lv_draw_mask.c ****  */
 146:lvgl/src/lv_draw/lv_draw_mask.c **** void * lv_draw_mask_remove_custom(void * custom_id)
 147:lvgl/src/lv_draw/lv_draw_mask.c **** {
 148:lvgl/src/lv_draw/lv_draw_mask.c ****     void * p = NULL;
 149:lvgl/src/lv_draw/lv_draw_mask.c ****     uint8_t i;
 150:lvgl/src/lv_draw/lv_draw_mask.c ****     for(i = 0; i < _LV_MASK_MAX_NUM; i++) {
 151:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id == custom_id) {
 152:lvgl/src/lv_draw/lv_draw_mask.c ****             p = LV_GC_ROOT(_lv_draw_mask_list[i]).param;
 153:lvgl/src/lv_draw/lv_draw_mask.c ****             LV_GC_ROOT(_lv_draw_mask_list[i]).param = NULL;
 154:lvgl/src/lv_draw/lv_draw_mask.c ****             LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id = NULL;
 155:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 156:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 157:lvgl/src/lv_draw/lv_draw_mask.c ****     return p;
 158:lvgl/src/lv_draw/lv_draw_mask.c **** }
 159:lvgl/src/lv_draw/lv_draw_mask.c **** 
 160:lvgl/src/lv_draw/lv_draw_mask.c **** /**
 161:lvgl/src/lv_draw/lv_draw_mask.c ****  * Count the currently added masks
 162:lvgl/src/lv_draw/lv_draw_mask.c ****  * @return number of active masks
 163:lvgl/src/lv_draw/lv_draw_mask.c ****  */
 164:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM uint8_t lv_draw_mask_get_cnt(void)
 165:lvgl/src/lv_draw/lv_draw_mask.c **** {
 166:lvgl/src/lv_draw/lv_draw_mask.c ****     uint8_t cnt = 0;
 167:lvgl/src/lv_draw/lv_draw_mask.c ****     uint8_t i;
 168:lvgl/src/lv_draw/lv_draw_mask.c ****     for(i = 0; i < _LV_MASK_MAX_NUM; i++) {
 169:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param) cnt++;
 170:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 171:lvgl/src/lv_draw/lv_draw_mask.c ****     return cnt;
 172:lvgl/src/lv_draw/lv_draw_mask.c **** }
 173:lvgl/src/lv_draw/lv_draw_mask.c **** 
 174:lvgl/src/lv_draw/lv_draw_mask.c **** /**
 175:lvgl/src/lv_draw/lv_draw_mask.c ****  *Initialize a line mask from two points.
 176:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param param pointer to a `lv_draw_mask_param_t` to initialize
 177:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param p1x X coordinate of the first point of the line
 178:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param p1y Y coordinate of the first point of the line
 179:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param p2x X coordinate of the second point of the line
 180:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param p2y y coordinate of the second point of the line
 181:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param side and element of `lv_draw_mask_line_side_t` to describe which side to keep.
 182:lvgl/src/lv_draw/lv_draw_mask.c ****  * With `LV_DRAW_MASK_LINE_SIDE_LEFT/RIGHT` and horizontal line all pixels are kept
 183:lvgl/src/lv_draw/lv_draw_mask.c ****  * With `LV_DRAW_MASK_LINE_SIDE_TOP/BOTTOM` and vertical line all pixels are kept
 184:lvgl/src/lv_draw/lv_draw_mask.c ****  */
 185:lvgl/src/lv_draw/lv_draw_mask.c **** void lv_draw_mask_line_points_init(lv_draw_mask_line_param_t * param, lv_coord_t p1x, lv_coord_t p1
 186:lvgl/src/lv_draw/lv_draw_mask.c ****                                    lv_coord_t p2y, lv_draw_mask_line_side_t side)
 187:lvgl/src/lv_draw/lv_draw_mask.c **** {
 188:lvgl/src/lv_draw/lv_draw_mask.c ****     _lv_memset_00(param, sizeof(lv_draw_mask_line_param_t));
 189:lvgl/src/lv_draw/lv_draw_mask.c **** 
 190:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p1y > p2y) {
 191:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_coord_t t;
 192:lvgl/src/lv_draw/lv_draw_mask.c ****         t = p2x;
 193:lvgl/src/lv_draw/lv_draw_mask.c ****         p2x = p1x;
 194:lvgl/src/lv_draw/lv_draw_mask.c ****         p1x = t;
 195:lvgl/src/lv_draw/lv_draw_mask.c **** 
 196:lvgl/src/lv_draw/lv_draw_mask.c ****         t = p2y;
 197:lvgl/src/lv_draw/lv_draw_mask.c ****         p2y = p1y;
 198:lvgl/src/lv_draw/lv_draw_mask.c ****         p1y = t;
 199:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 200:lvgl/src/lv_draw/lv_draw_mask.c **** 
 201:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.p1.x = p1x;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 5


 202:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.p1.y = p1y;
 203:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.p2.x = p2x;
 204:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.p2.y = p2y;
 205:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.side = side;
 206:lvgl/src/lv_draw/lv_draw_mask.c **** 
 207:lvgl/src/lv_draw/lv_draw_mask.c ****     param->origo.x = p1x;
 208:lvgl/src/lv_draw/lv_draw_mask.c ****     param->origo.y = p1y;
 209:lvgl/src/lv_draw/lv_draw_mask.c ****     param->flat = (LV_MATH_ABS(p2x - p1x) > LV_MATH_ABS(p2y - p1y)) ? 1 : 0;
 210:lvgl/src/lv_draw/lv_draw_mask.c ****     param->yx_steep = 0;
 211:lvgl/src/lv_draw/lv_draw_mask.c ****     param->xy_steep = 0;
 212:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_line;
 213:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_LINE;
 214:lvgl/src/lv_draw/lv_draw_mask.c **** 
 215:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t dx = p2x - p1x;
 216:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t dy = p2y - p1y;
 217:lvgl/src/lv_draw/lv_draw_mask.c **** 
 218:lvgl/src/lv_draw/lv_draw_mask.c ****     if(param->flat) {
 219:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Normalize the steep. Delta x should be relative to delta x = 1024*/
 220:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t m;
 221:lvgl/src/lv_draw/lv_draw_mask.c **** 
 222:lvgl/src/lv_draw/lv_draw_mask.c ****         if(dx) {
 223:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dx;  /*m is multiplier to normalize y (upscaled by 1024)*/
 224:lvgl/src/lv_draw/lv_draw_mask.c ****             param->yx_steep = (m * dy) >> 10;
 225:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 226:lvgl/src/lv_draw/lv_draw_mask.c **** 
 227:lvgl/src/lv_draw/lv_draw_mask.c ****         if(dy) {
 228:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dy;  /*m is multiplier to normalize x (upscaled by 1024)*/
 229:lvgl/src/lv_draw/lv_draw_mask.c ****             param->xy_steep = (m * dx) >> 10;
 230:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 231:lvgl/src/lv_draw/lv_draw_mask.c ****         param->steep = param->yx_steep;
 232:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 233:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
 234:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Normalize the steep. Delta y should be relative to delta x = 1024*/
 235:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t m;
 236:lvgl/src/lv_draw/lv_draw_mask.c **** 
 237:lvgl/src/lv_draw/lv_draw_mask.c ****         if(dy) {
 238:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dy;  /*m is multiplier to normalize x (upscaled by 1024)*/
 239:lvgl/src/lv_draw/lv_draw_mask.c ****             param->xy_steep = (m * dx) >> 10;
 240:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 241:lvgl/src/lv_draw/lv_draw_mask.c **** 
 242:lvgl/src/lv_draw/lv_draw_mask.c ****         if(dx) {
 243:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dx;  /*m is multiplier to normalize x (upscaled by 1024)*/
 244:lvgl/src/lv_draw/lv_draw_mask.c ****             param->yx_steep = (m * dy) >> 10;
 245:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 246:lvgl/src/lv_draw/lv_draw_mask.c ****         param->steep = param->xy_steep;
 247:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 248:lvgl/src/lv_draw/lv_draw_mask.c **** 
 249:lvgl/src/lv_draw/lv_draw_mask.c ****     if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_LEFT) param->inv = 0;
 250:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT) param->inv = 1;
 251:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_TOP) {
 252:lvgl/src/lv_draw/lv_draw_mask.c ****         if(param->steep > 0) param->inv = 1;
 253:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 0;
 254:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 255:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM) {
 256:lvgl/src/lv_draw/lv_draw_mask.c ****         if(param->steep > 0) param->inv = 0;
 257:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 1;
 258:lvgl/src/lv_draw/lv_draw_mask.c ****     }
ARM GAS  D:\Temp\ccPmLtDk.s 			page 6


 259:lvgl/src/lv_draw/lv_draw_mask.c **** 
 260:lvgl/src/lv_draw/lv_draw_mask.c ****     param->spx = param->steep >> 2;
 261:lvgl/src/lv_draw/lv_draw_mask.c ****     if(param->steep < 0) param->spx = -param->spx;
 262:lvgl/src/lv_draw/lv_draw_mask.c **** }
 263:lvgl/src/lv_draw/lv_draw_mask.c **** 
 264:lvgl/src/lv_draw/lv_draw_mask.c **** /**
 265:lvgl/src/lv_draw/lv_draw_mask.c ****  *Initialize a line mask from a point and an angle.
 266:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param param pointer to a `lv_draw_mask_param_t` to initialize
 267:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param px X coordinate of a point of the line
 268:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param py X coordinate of a point of the line
 269:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param angle right 0 deg, bottom: 90
 270:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param side and element of `lv_draw_mask_line_side_t` to describe which side to keep.
 271:lvgl/src/lv_draw/lv_draw_mask.c ****  * With `LV_DRAW_MASK_LINE_SIDE_LEFT/RIGHT` and horizontal line all pixels are kept
 272:lvgl/src/lv_draw/lv_draw_mask.c ****  * With `LV_DRAW_MASK_LINE_SIDE_TOP/BOTTOM` and vertical line all pixels are kept
 273:lvgl/src/lv_draw/lv_draw_mask.c ****  */
 274:lvgl/src/lv_draw/lv_draw_mask.c **** void lv_draw_mask_line_angle_init(lv_draw_mask_line_param_t * param, lv_coord_t p1x, lv_coord_t py,
 275:lvgl/src/lv_draw/lv_draw_mask.c ****                                   lv_draw_mask_line_side_t side)
 276:lvgl/src/lv_draw/lv_draw_mask.c **** {
 277:lvgl/src/lv_draw/lv_draw_mask.c ****     /* Find an optimal degree.
 278:lvgl/src/lv_draw/lv_draw_mask.c ****      * lv_mask_line_points_init will swap the points to keep the smaller y in p1
 279:lvgl/src/lv_draw/lv_draw_mask.c ****      * Theoretically a line with `angle` or `angle+180` is the same only the points are swapped
 280:lvgl/src/lv_draw/lv_draw_mask.c ****      * Find the degree which keeps the origo in place */
 281:lvgl/src/lv_draw/lv_draw_mask.c ****     if(angle > 180) angle -= 180; /*> 180 will swap the origo*/
 282:lvgl/src/lv_draw/lv_draw_mask.c **** 
 283:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t p2x;
 284:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t p2y;
 285:lvgl/src/lv_draw/lv_draw_mask.c **** 
 286:lvgl/src/lv_draw/lv_draw_mask.c ****     p2x = (_lv_trigo_sin(angle + 90) >> 5) + p1x;
 287:lvgl/src/lv_draw/lv_draw_mask.c ****     p2y = (_lv_trigo_sin(angle) >> 5) + py;
 288:lvgl/src/lv_draw/lv_draw_mask.c **** 
 289:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_line_points_init(param, p1x, py, p2x, p2y, side);
 290:lvgl/src/lv_draw/lv_draw_mask.c **** }
 291:lvgl/src/lv_draw/lv_draw_mask.c **** 
 292:lvgl/src/lv_draw/lv_draw_mask.c **** /**
 293:lvgl/src/lv_draw/lv_draw_mask.c ****  * Initialize an angle mask.
 294:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param param pointer to a `lv_draw_mask_param_t` to initialize
 295:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param vertex_x X coordinate of the angle vertex (absolute coordinates)
 296:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param vertex_y Y coordinate of the angle vertex (absolute coordinates)
 297:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param start_angle start angle in degrees. 0 deg on the right, 90 deg, on the bottom
 298:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param end_angle end angle
 299:lvgl/src/lv_draw/lv_draw_mask.c ****  */
 300:lvgl/src/lv_draw/lv_draw_mask.c **** void lv_draw_mask_angle_init(lv_draw_mask_angle_param_t * param, lv_coord_t vertex_x, lv_coord_t ve
 301:lvgl/src/lv_draw/lv_draw_mask.c ****                              lv_coord_t start_angle, lv_coord_t end_angle)
 302:lvgl/src/lv_draw/lv_draw_mask.c **** {
 303:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_line_side_t start_side;
 304:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_line_side_t end_side;
 305:lvgl/src/lv_draw/lv_draw_mask.c **** 
 306:lvgl/src/lv_draw/lv_draw_mask.c ****     /* Constrain the input angles */
 307:lvgl/src/lv_draw/lv_draw_mask.c ****     if(start_angle < 0)
 308:lvgl/src/lv_draw/lv_draw_mask.c ****         start_angle = 0;
 309:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(start_angle > 359)
 310:lvgl/src/lv_draw/lv_draw_mask.c ****         start_angle = 359;
 311:lvgl/src/lv_draw/lv_draw_mask.c **** 
 312:lvgl/src/lv_draw/lv_draw_mask.c ****     if(end_angle < 0)
 313:lvgl/src/lv_draw/lv_draw_mask.c ****         end_angle = 0;
 314:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(end_angle > 359)
 315:lvgl/src/lv_draw/lv_draw_mask.c ****         end_angle = 359;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 7


 316:lvgl/src/lv_draw/lv_draw_mask.c **** 
 317:lvgl/src/lv_draw/lv_draw_mask.c ****     if(end_angle < start_angle) {
 318:lvgl/src/lv_draw/lv_draw_mask.c ****         param->delta_deg = 360 - start_angle + end_angle;
 319:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 320:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
 321:lvgl/src/lv_draw/lv_draw_mask.c ****         param->delta_deg = LV_MATH_ABS(end_angle - start_angle);
 322:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 323:lvgl/src/lv_draw/lv_draw_mask.c **** 
 324:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.start_angle = start_angle;
 325:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.end_angle = end_angle;
 326:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.vertex_p.x = vertex_x;
 327:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.vertex_p.y = vertex_y;
 328:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_angle;
 329:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_ANGLE;
 330:lvgl/src/lv_draw/lv_draw_mask.c **** 
 331:lvgl/src/lv_draw/lv_draw_mask.c ****     if(start_angle >= 0 && start_angle < 180) {
 332:lvgl/src/lv_draw/lv_draw_mask.c ****         start_side = LV_DRAW_MASK_LINE_SIDE_LEFT;
 333:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 334:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(start_angle >= 180 && start_angle < 360) {
 335:lvgl/src/lv_draw/lv_draw_mask.c ****         start_side = LV_DRAW_MASK_LINE_SIDE_RIGHT;
 336:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 337:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
 338:lvgl/src/lv_draw/lv_draw_mask.c ****         LV_DEBUG_ASSERT(false, "Unexpected start_angle", start_angle);
 339:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 340:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 341:lvgl/src/lv_draw/lv_draw_mask.c **** 
 342:lvgl/src/lv_draw/lv_draw_mask.c ****     if(end_angle >= 0 && end_angle < 180) {
 343:lvgl/src/lv_draw/lv_draw_mask.c ****         end_side = LV_DRAW_MASK_LINE_SIDE_RIGHT;
 344:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 345:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(end_angle >= 180 && end_angle < 360) {
 346:lvgl/src/lv_draw/lv_draw_mask.c ****         end_side = LV_DRAW_MASK_LINE_SIDE_LEFT;
 347:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 348:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
 349:lvgl/src/lv_draw/lv_draw_mask.c ****         LV_DEBUG_ASSERT(false, "Unexpected end_angle", end_angle);
 350:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 351:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 352:lvgl/src/lv_draw/lv_draw_mask.c **** 
 353:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_line_angle_init(&param->start_line, vertex_x, vertex_y, start_angle, start_side);
 354:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_line_angle_init(&param->end_line, vertex_x, vertex_y, end_angle, end_side);
 355:lvgl/src/lv_draw/lv_draw_mask.c **** }
 356:lvgl/src/lv_draw/lv_draw_mask.c **** 
 357:lvgl/src/lv_draw/lv_draw_mask.c **** /**
 358:lvgl/src/lv_draw/lv_draw_mask.c ****  * Initialize a fade mask.
 359:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param param param pointer to a `lv_draw_mask_param_t` to initialize
 360:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param rect coordinates of the rectangle to affect (absolute coordinates)
 361:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param radius radius of the rectangle
 362:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param inv: true: keep the pixels inside the rectangle; keep the pixels outside of the rectangle
 363:lvgl/src/lv_draw/lv_draw_mask.c ****  */
 364:lvgl/src/lv_draw/lv_draw_mask.c **** void lv_draw_mask_radius_init(lv_draw_mask_radius_param_t * param, const lv_area_t * rect, lv_coord
 365:lvgl/src/lv_draw/lv_draw_mask.c **** {
 366:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_coord_t w = lv_area_get_width(rect);
 367:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_coord_t h = lv_area_get_height(rect);
 368:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t short_side = LV_MATH_MIN(w, h);
 369:lvgl/src/lv_draw/lv_draw_mask.c ****     if(radius > short_side >> 1) radius = short_side >> 1;
 370:lvgl/src/lv_draw/lv_draw_mask.c **** 
 371:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_copy(&param->cfg.rect, rect);
 372:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.radius = radius;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 8


 373:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.outer = inv ? 1 : 0;
 374:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_radius;
 375:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_RADIUS;
 376:lvgl/src/lv_draw/lv_draw_mask.c ****     param->y_prev = INT32_MIN;
 377:lvgl/src/lv_draw/lv_draw_mask.c ****     param->y_prev_x.f = 0;
 378:lvgl/src/lv_draw/lv_draw_mask.c ****     param->y_prev_x.i = 0;
 379:lvgl/src/lv_draw/lv_draw_mask.c **** }
 380:lvgl/src/lv_draw/lv_draw_mask.c **** 
 381:lvgl/src/lv_draw/lv_draw_mask.c **** /**
 382:lvgl/src/lv_draw/lv_draw_mask.c ****  * Initialize a fade mask.
 383:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param param pointer to a `lv_draw_mask_param_t` to initialize
 384:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param coords coordinates of the area to affect (absolute coordinates)
 385:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param opa_top opacity on the top
 386:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param y_top at which coordinate start to change to opacity to `opa_bottom`
 387:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param opa_bottom opacity at the bottom
 388:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param y_bottom at which coordinate reach `opa_bottom`.
 389:lvgl/src/lv_draw/lv_draw_mask.c ****  */
 390:lvgl/src/lv_draw/lv_draw_mask.c **** void lv_draw_mask_fade_init(lv_draw_mask_fade_param_t * param, const lv_area_t * coords, lv_opa_t o
 391:lvgl/src/lv_draw/lv_draw_mask.c ****                             lv_coord_t y_top,
 392:lvgl/src/lv_draw/lv_draw_mask.c ****                             lv_opa_t opa_bottom, lv_coord_t y_bottom)
 393:lvgl/src/lv_draw/lv_draw_mask.c **** {
 394:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_copy(&param->cfg.coords, coords);
 395:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.opa_top = opa_top;
 396:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.opa_bottom = opa_bottom;
 397:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.y_top = y_top;
 398:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.y_bottom = y_bottom;
 399:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_fade;
 400:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_FADE;
 401:lvgl/src/lv_draw/lv_draw_mask.c **** }
 402:lvgl/src/lv_draw/lv_draw_mask.c **** 
 403:lvgl/src/lv_draw/lv_draw_mask.c **** /**
 404:lvgl/src/lv_draw/lv_draw_mask.c ****  * Initialize a map mask.
 405:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param param pointer to a `lv_draw_mask_param_t` to initialize
 406:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param coords coordinates of the map (absolute coordinates)
 407:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param map array of bytes with the mask values
 408:lvgl/src/lv_draw/lv_draw_mask.c ****  */
 409:lvgl/src/lv_draw/lv_draw_mask.c **** void lv_draw_mask_map_init(lv_draw_mask_map_param_t * param, const lv_area_t * coords, const lv_opa
 410:lvgl/src/lv_draw/lv_draw_mask.c **** {
 411:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_copy(&param->cfg.coords, coords);
 412:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.map = map;
 413:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_map;
 414:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_MAP;
 415:lvgl/src/lv_draw/lv_draw_mask.c **** }
 416:lvgl/src/lv_draw/lv_draw_mask.c **** 
 417:lvgl/src/lv_draw/lv_draw_mask.c **** /**********************
 418:lvgl/src/lv_draw/lv_draw_mask.c ****  *   STATIC FUNCTIONS
 419:lvgl/src/lv_draw/lv_draw_mask.c ****  **********************/
 420:lvgl/src/lv_draw/lv_draw_mask.c **** 
 421:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_line(lv_opa_t * mask_buf, lv_coord_t a
 422:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                   lv_coord_t abs_y, lv_coord_t len,
 423:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                   lv_draw_mask_line_param_t * p)
 424:lvgl/src/lv_draw/lv_draw_mask.c **** {
 425:lvgl/src/lv_draw/lv_draw_mask.c ****     /*Make to points relative to the vertex*/
 426:lvgl/src/lv_draw/lv_draw_mask.c ****     abs_y -= p->origo.y;
 427:lvgl/src/lv_draw/lv_draw_mask.c ****     abs_x -= p->origo.x;
 428:lvgl/src/lv_draw/lv_draw_mask.c **** 
 429:lvgl/src/lv_draw/lv_draw_mask.c ****     /*Handle special cases*/
ARM GAS  D:\Temp\ccPmLtDk.s 			page 9


 430:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->steep == 0) {
 431:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Horizontal*/
 432:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->flat) {
 433:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Non sense: Can't be on the right/left of a horizontal line*/
 434:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_LEFT ||
 435:lvgl/src/lv_draw/lv_draw_mask.c ****                p->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT) return LV_DRAW_MASK_RES_FULL_COVER;
 436:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_TOP && abs_y + 1 < 0) return LV_DRAW_MASK
 437:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM && abs_y > 0) return LV_DRAW_MASK_
 438:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 439:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 440:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 441:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 442:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Vertical*/
 443:lvgl/src/lv_draw/lv_draw_mask.c ****         else {
 444:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Non sense: Can't be on the top/bottom of a vertical line*/
 445:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_TOP ||
 446:lvgl/src/lv_draw/lv_draw_mask.c ****                p->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM) return LV_DRAW_MASK_RES_FULL_COVER;
 447:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT && abs_x > 0) return LV_DRAW_MASK_R
 448:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_LEFT) {
 449:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(abs_x + len < 0) return LV_DRAW_MASK_RES_FULL_COVER;
 450:lvgl/src/lv_draw/lv_draw_mask.c ****                 else {
 451:lvgl/src/lv_draw/lv_draw_mask.c ****                     int32_t k = - abs_x;
 452:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k < 0) return LV_DRAW_MASK_RES_TRANSP;
 453:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k >= 0 && k < len) _lv_memset_00(&mask_buf[k], len - k);
 454:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 455:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 456:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 457:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 458:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(abs_x + len < 0) return LV_DRAW_MASK_RES_TRANSP;
 459:lvgl/src/lv_draw/lv_draw_mask.c ****                 else {
 460:lvgl/src/lv_draw/lv_draw_mask.c ****                     int32_t k = - abs_x;
 461:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k < 0) k = 0;
 462:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k >= len) return LV_DRAW_MASK_RES_TRANSP;
 463:lvgl/src/lv_draw/lv_draw_mask.c ****                     else if(k >= 0 && k < len) _lv_memset_00(&mask_buf[0], k);
 464:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 465:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 466:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 467:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 468:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 469:lvgl/src/lv_draw/lv_draw_mask.c **** 
 470:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_res_t res;
 471:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->flat) {
 472:lvgl/src/lv_draw/lv_draw_mask.c ****         res = line_mask_flat(mask_buf, abs_x, abs_y, len, p);
 473:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 474:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
 475:lvgl/src/lv_draw/lv_draw_mask.c ****         res = line_mask_steep(mask_buf, abs_x, abs_y, len, p);
 476:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 477:lvgl/src/lv_draw/lv_draw_mask.c **** 
 478:lvgl/src/lv_draw/lv_draw_mask.c ****     return res;
 479:lvgl/src/lv_draw/lv_draw_mask.c **** }
 480:lvgl/src/lv_draw/lv_draw_mask.c **** 
 481:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_flat(lv_opa_t * mask_buf, lv_coord_t abs_
 482:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                lv_coord_t len,
 483:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                lv_draw_mask_line_param_t * p)
 484:lvgl/src/lv_draw/lv_draw_mask.c **** {
 485:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t y_at_x;
 486:lvgl/src/lv_draw/lv_draw_mask.c ****     y_at_x = (int32_t)((int32_t)p->yx_steep * abs_x) >> 10;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 10


 487:lvgl/src/lv_draw/lv_draw_mask.c **** 
 488:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->yx_steep > 0) {
 489:lvgl/src/lv_draw/lv_draw_mask.c ****         if(y_at_x > abs_y) {
 490:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 491:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_FULL_COVER;
 492:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 493:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 494:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 495:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 496:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 497:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 498:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
 499:lvgl/src/lv_draw/lv_draw_mask.c ****         if(y_at_x < abs_y) {
 500:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 501:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_FULL_COVER;
 502:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 503:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 504:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 505:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 506:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 507:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 508:lvgl/src/lv_draw/lv_draw_mask.c **** 
 509:lvgl/src/lv_draw/lv_draw_mask.c ****     /* At the end of the mask if the limit line is smaller then the mask's y.
 510:lvgl/src/lv_draw/lv_draw_mask.c ****      * Then the mask is in the "good" area*/
 511:lvgl/src/lv_draw/lv_draw_mask.c ****     y_at_x = (int32_t)((int32_t)p->yx_steep * (abs_x + len)) >> 10;
 512:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->yx_steep > 0) {
 513:lvgl/src/lv_draw/lv_draw_mask.c ****         if(y_at_x < abs_y) {
 514:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 515:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 516:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 517:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 518:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_FULL_COVER;
 519:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 520:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 521:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 522:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
 523:lvgl/src/lv_draw/lv_draw_mask.c ****         if(y_at_x > abs_y) {
 524:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 525:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 526:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 527:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 528:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_FULL_COVER;
 529:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 530:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 531:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 532:lvgl/src/lv_draw/lv_draw_mask.c **** 
 533:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xe;
 534:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->yx_steep > 0) xe = ((abs_y << 8) * p->xy_steep) >> 10;
 535:lvgl/src/lv_draw/lv_draw_mask.c ****     else xe = (((abs_y + 1) << 8) * p->xy_steep) >> 10;
 536:lvgl/src/lv_draw/lv_draw_mask.c **** 
 537:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xei = xe >> 8;
 538:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xef = xe & 0xFF;
 539:lvgl/src/lv_draw/lv_draw_mask.c **** 
 540:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t px_h;
 541:lvgl/src/lv_draw/lv_draw_mask.c ****     if(xef == 0) px_h = 255;
 542:lvgl/src/lv_draw/lv_draw_mask.c ****     else px_h = 255 - (((255 - xef) * p->spx) >> 8);
 543:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t k = xei - abs_x;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 11


 544:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_opa_t m;
 545:lvgl/src/lv_draw/lv_draw_mask.c **** 
 546:lvgl/src/lv_draw/lv_draw_mask.c ****     if(xef) {
 547:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= 0 && k < len) {
 548:lvgl/src/lv_draw/lv_draw_mask.c ****             m = 255 - (((255 - xef) * (255 - px_h)) >> 9);
 549:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 550:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 551:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 552:lvgl/src/lv_draw/lv_draw_mask.c ****         k++;
 553:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 554:lvgl/src/lv_draw/lv_draw_mask.c **** 
 555:lvgl/src/lv_draw/lv_draw_mask.c ****     while(px_h > p->spx) {
 556:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= 0 && k < len) {
 557:lvgl/src/lv_draw/lv_draw_mask.c ****             m = px_h - (p->spx >> 1);
 558:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 559:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 560:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 561:lvgl/src/lv_draw/lv_draw_mask.c ****         px_h -= p->spx;
 562:lvgl/src/lv_draw/lv_draw_mask.c ****         k++;
 563:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= len) break;
 564:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 565:lvgl/src/lv_draw/lv_draw_mask.c **** 
 566:lvgl/src/lv_draw/lv_draw_mask.c ****     if(k < len && k >= 0) {
 567:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t x_inters = (px_h * p->xy_steep) >> 10;
 568:lvgl/src/lv_draw/lv_draw_mask.c ****         m = (x_inters * px_h) >> 9;
 569:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->yx_steep < 0) m = 255 - m;
 570:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) m = 255 - m;
 571:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[k] = mask_mix(mask_buf[k], m);
 572:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 573:lvgl/src/lv_draw/lv_draw_mask.c **** 
 574:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->inv) {
 575:lvgl/src/lv_draw/lv_draw_mask.c ****         k = xei - abs_x;
 576:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k > len) {
 577:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 578:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 579:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= 0) {
 580:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[0], k);
 581:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 582:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 583:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
 584:lvgl/src/lv_draw/lv_draw_mask.c ****         k++;
 585:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k < 0) {
 586:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 587:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 588:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k <= len) {
 589:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[k], len - k);
 590:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 591:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 592:lvgl/src/lv_draw/lv_draw_mask.c **** 
 593:lvgl/src/lv_draw/lv_draw_mask.c ****     return LV_DRAW_MASK_RES_CHANGED;
 594:lvgl/src/lv_draw/lv_draw_mask.c **** }
 595:lvgl/src/lv_draw/lv_draw_mask.c **** 
 596:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_steep(lv_opa_t * mask_buf, lv_coord_t abs
 597:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                 lv_coord_t len,
 598:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                 lv_draw_mask_line_param_t * p)
 599:lvgl/src/lv_draw/lv_draw_mask.c **** {
 600:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t k;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 12


 601:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t x_at_y;
 602:lvgl/src/lv_draw/lv_draw_mask.c ****     /* At the beginning of the mask if the limit line is greater then the mask's y.
 603:lvgl/src/lv_draw/lv_draw_mask.c ****      * Then the mask is in the "wrong" area*/
 604:lvgl/src/lv_draw/lv_draw_mask.c ****     x_at_y = (int32_t)((int32_t)p->xy_steep * abs_y) >> 10;
 605:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->xy_steep > 0) x_at_y++;
 606:lvgl/src/lv_draw/lv_draw_mask.c ****     if(x_at_y < abs_x) {
 607:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) {
 608:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 609:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 610:lvgl/src/lv_draw/lv_draw_mask.c ****         else {
 611:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 612:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 613:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 614:lvgl/src/lv_draw/lv_draw_mask.c **** 
 615:lvgl/src/lv_draw/lv_draw_mask.c ****     /* At the end of the mask if the limit line is smaller then the mask's y.
 616:lvgl/src/lv_draw/lv_draw_mask.c ****      * Then the mask is in the "good" area*/
 617:lvgl/src/lv_draw/lv_draw_mask.c ****     x_at_y = (int32_t)((int32_t)p->xy_steep * (abs_y)) >> 10;
 618:lvgl/src/lv_draw/lv_draw_mask.c ****     if(x_at_y > abs_x + len) {
 619:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) {
 620:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 621:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 622:lvgl/src/lv_draw/lv_draw_mask.c ****         else {
 623:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 624:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 625:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 626:lvgl/src/lv_draw/lv_draw_mask.c **** 
 627:lvgl/src/lv_draw/lv_draw_mask.c ****     /*X start*/
 628:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xs = ((abs_y << 8) * p->xy_steep) >> 10;
 629:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xsi = xs >> 8;
 630:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xsf = xs & 0xFF;
 631:lvgl/src/lv_draw/lv_draw_mask.c **** 
 632:lvgl/src/lv_draw/lv_draw_mask.c ****     /*X end*/
 633:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xe = (((abs_y + 1) << 8) * p->xy_steep) >> 10;
 634:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xei = xe >> 8;
 635:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xef = xe & 0xFF;
 636:lvgl/src/lv_draw/lv_draw_mask.c **** 
 637:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_opa_t m;
 638:lvgl/src/lv_draw/lv_draw_mask.c **** 
 639:lvgl/src/lv_draw/lv_draw_mask.c ****     k = xsi - abs_x;
 640:lvgl/src/lv_draw/lv_draw_mask.c ****     if(xsi != xei && (p->xy_steep < 0 && xsf == 0)) {
 641:lvgl/src/lv_draw/lv_draw_mask.c ****         xsf = 0xFF;
 642:lvgl/src/lv_draw/lv_draw_mask.c ****         xsi = xei;
 643:lvgl/src/lv_draw/lv_draw_mask.c ****         k--;
 644:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 645:lvgl/src/lv_draw/lv_draw_mask.c **** 
 646:lvgl/src/lv_draw/lv_draw_mask.c ****     if(xsi == xei) {
 647:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= 0 && k < len) {
 648:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (xsf + xef) >> 1;
 649:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 650:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 651:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 652:lvgl/src/lv_draw/lv_draw_mask.c ****         k++;
 653:lvgl/src/lv_draw/lv_draw_mask.c **** 
 654:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) {
 655:lvgl/src/lv_draw/lv_draw_mask.c ****             k = xsi - abs_x;
 656:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= len) {
 657:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 13


 658:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 659:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0) _lv_memset_00(&mask_buf[0], k);
 660:lvgl/src/lv_draw/lv_draw_mask.c **** 
 661:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 662:lvgl/src/lv_draw/lv_draw_mask.c ****         else {
 663:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k > len) k = len;
 664:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k == 0) return LV_DRAW_MASK_RES_TRANSP;
 665:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(k > 0) _lv_memset_00(&mask_buf[k],  len - k);
 666:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 667:lvgl/src/lv_draw/lv_draw_mask.c **** 
 668:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 669:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
 670:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t y_inters;
 671:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->xy_steep < 0) {
 672:lvgl/src/lv_draw/lv_draw_mask.c ****             y_inters = (xsf * (-p->yx_steep)) >> 10;
 673:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 674:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = (y_inters * xsf) >> 9;
 675:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 676:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 677:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 678:lvgl/src/lv_draw/lv_draw_mask.c ****             k--;
 679:lvgl/src/lv_draw/lv_draw_mask.c **** 
 680:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t x_inters = ((255 - y_inters) * (-p->xy_steep)) >> 10;
 681:lvgl/src/lv_draw/lv_draw_mask.c **** 
 682:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 683:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = 255 - (((255 - y_inters) * x_inters) >> 9);
 684:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 685:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 686:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 687:lvgl/src/lv_draw/lv_draw_mask.c **** 
 688:lvgl/src/lv_draw/lv_draw_mask.c ****             k += 2;
 689:lvgl/src/lv_draw/lv_draw_mask.c **** 
 690:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 691:lvgl/src/lv_draw/lv_draw_mask.c ****                 k = xsi - abs_x - 1;
 692:lvgl/src/lv_draw/lv_draw_mask.c **** 
 693:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k > len) k = len;
 694:lvgl/src/lv_draw/lv_draw_mask.c ****                 else if(k > 0) _lv_memset_00(&mask_buf[0],  k);
 695:lvgl/src/lv_draw/lv_draw_mask.c **** 
 696:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 697:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 698:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k > len) return LV_DRAW_MASK_RES_FULL_COVER;
 699:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k >= 0) _lv_memset_00(&mask_buf[k],  len - k);
 700:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 701:lvgl/src/lv_draw/lv_draw_mask.c **** 
 702:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 703:lvgl/src/lv_draw/lv_draw_mask.c ****         else {
 704:lvgl/src/lv_draw/lv_draw_mask.c ****             y_inters = ((255 - xsf) * p->yx_steep) >> 10;
 705:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 706:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = 255 - ((y_inters * (255 - xsf)) >> 9);
 707:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 708:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 709:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 710:lvgl/src/lv_draw/lv_draw_mask.c **** 
 711:lvgl/src/lv_draw/lv_draw_mask.c ****             k++;
 712:lvgl/src/lv_draw/lv_draw_mask.c **** 
 713:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t x_inters = ((255 - y_inters) * p->xy_steep) >> 10;
 714:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
ARM GAS  D:\Temp\ccPmLtDk.s 			page 14


 715:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = ((255 - y_inters) * x_inters) >> 9;
 716:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 717:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 718:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 719:lvgl/src/lv_draw/lv_draw_mask.c ****             k++;
 720:lvgl/src/lv_draw/lv_draw_mask.c **** 
 721:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 722:lvgl/src/lv_draw/lv_draw_mask.c ****                 k = xsi - abs_x;
 723:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k > len)  return LV_DRAW_MASK_RES_TRANSP;
 724:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k >= 0) _lv_memset_00(&mask_buf[0],  k);
 725:lvgl/src/lv_draw/lv_draw_mask.c **** 
 726:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 727:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 728:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k > len) k = len;
 729:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k == 0) return LV_DRAW_MASK_RES_TRANSP;
 730:lvgl/src/lv_draw/lv_draw_mask.c ****                 else if(k > 0) _lv_memset_00(&mask_buf[k],  len - k);
 731:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 732:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 733:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 734:lvgl/src/lv_draw/lv_draw_mask.c **** 
 735:lvgl/src/lv_draw/lv_draw_mask.c ****     return LV_DRAW_MASK_RES_CHANGED;
 736:lvgl/src/lv_draw/lv_draw_mask.c **** }
 737:lvgl/src/lv_draw/lv_draw_mask.c **** 
 738:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_angle(lv_opa_t * mask_buf, lv_coord_t 
 739:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                    lv_coord_t abs_y, lv_coord_t len
 740:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                    lv_draw_mask_angle_param_t * p)
 741:lvgl/src/lv_draw/lv_draw_mask.c **** {
 742:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t rel_y = abs_y - p->cfg.vertex_p.y;
 743:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t rel_x = abs_x - p->cfg.vertex_p.x;
 744:lvgl/src/lv_draw/lv_draw_mask.c **** 
 745:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->cfg.start_angle < 180 && p->cfg.end_angle < 180 &&
 746:lvgl/src/lv_draw/lv_draw_mask.c ****        p->cfg.start_angle != 0  && p->cfg.end_angle != 0 &&
 747:lvgl/src/lv_draw/lv_draw_mask.c ****        p->cfg.start_angle > p->cfg.end_angle) {
 748:lvgl/src/lv_draw/lv_draw_mask.c **** 
 749:lvgl/src/lv_draw/lv_draw_mask.c ****         if(abs_y < p->cfg.vertex_p.y) {
 750:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 751:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 752:lvgl/src/lv_draw/lv_draw_mask.c **** 
 753:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Start angle mask can work only from the end of end angle mask */
 754:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t end_angle_first = (rel_y * p->end_line.xy_steep) >> 10;
 755:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t start_angle_last = ((rel_y + 1) * p->start_line.xy_steep) >> 10;
 756:lvgl/src/lv_draw/lv_draw_mask.c **** 
 757:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Do not let the line end cross the vertex else it will affect the opposite part*/
 758:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->cfg.start_angle > 270 && p->cfg.start_angle <= 359 && start_angle_last < 0) start_ang
 759:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 760:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 761:lvgl/src/lv_draw/lv_draw_mask.c **** 
 762:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->cfg.end_angle > 270 && p->cfg.end_angle <= 359 && start_angle_last < 0) start_angle_l
 763:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 764:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 765:lvgl/src/lv_draw/lv_draw_mask.c **** 
 766:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t dist = (end_angle_first - start_angle_last) >> 1;
 767:lvgl/src/lv_draw/lv_draw_mask.c **** 
 768:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res1 = LV_DRAW_MASK_RES_FULL_COVER;
 769:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res2 = LV_DRAW_MASK_RES_FULL_COVER;
 770:lvgl/src/lv_draw/lv_draw_mask.c **** 
 771:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t tmp = start_angle_last + dist - rel_x;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 15


 772:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > len) tmp = len;
 773:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > 0) {
 774:lvgl/src/lv_draw/lv_draw_mask.c ****             res1 = lv_draw_mask_line(&mask_buf[0], abs_x, abs_y, tmp, &p->start_line);
 775:lvgl/src/lv_draw/lv_draw_mask.c ****             if(res1 == LV_DRAW_MASK_RES_TRANSP) {
 776:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[0], tmp);
 777:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 778:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 779:lvgl/src/lv_draw/lv_draw_mask.c **** 
 780:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > len) tmp = len;
 781:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp < 0) tmp = 0;
 782:lvgl/src/lv_draw/lv_draw_mask.c ****         res2 = lv_draw_mask_line(&mask_buf[tmp], abs_x + tmp, abs_y, len - tmp, &p->end_line);
 783:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 784:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[tmp], len - tmp);
 785:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 786:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res1 == res2) return res1;
 787:lvgl/src/lv_draw/lv_draw_mask.c ****         else return LV_DRAW_MASK_RES_CHANGED;
 788:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 789:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(p->cfg.start_angle > 180 && p->cfg.end_angle > 180 && p->cfg.start_angle > p->cfg.end_a
 790:lvgl/src/lv_draw/lv_draw_mask.c **** 
 791:lvgl/src/lv_draw/lv_draw_mask.c ****         if(abs_y > p->cfg.vertex_p.y) {
 792:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 793:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 794:lvgl/src/lv_draw/lv_draw_mask.c **** 
 795:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Start angle mask can work only from the end of end angle mask */
 796:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t end_angle_first = (rel_y * p->end_line.xy_steep) >> 10;
 797:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t start_angle_last = ((rel_y + 1) * p->start_line.xy_steep) >> 10;
 798:lvgl/src/lv_draw/lv_draw_mask.c **** 
 799:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Do not let the line end cross the vertex else it will affect the opposite part*/
 800:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->cfg.start_angle > 270 && p->cfg.start_angle <= 359 && start_angle_last < 0) start_ang
 801:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 802:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 803:lvgl/src/lv_draw/lv_draw_mask.c **** 
 804:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->cfg.end_angle > 270 && p->cfg.end_angle <= 359 && start_angle_last < 0) start_angle_l
 805:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 806:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 807:lvgl/src/lv_draw/lv_draw_mask.c **** 
 808:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t dist = (end_angle_first - start_angle_last) >> 1;
 809:lvgl/src/lv_draw/lv_draw_mask.c **** 
 810:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res1 = LV_DRAW_MASK_RES_FULL_COVER;
 811:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res2 = LV_DRAW_MASK_RES_FULL_COVER;
 812:lvgl/src/lv_draw/lv_draw_mask.c **** 
 813:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t tmp = start_angle_last + dist - rel_x;
 814:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > len) tmp = len;
 815:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > 0) {
 816:lvgl/src/lv_draw/lv_draw_mask.c ****             res1 = lv_draw_mask_line(&mask_buf[0], abs_x, abs_y, tmp, (lv_draw_mask_line_param_t *)
 817:lvgl/src/lv_draw/lv_draw_mask.c ****             if(res1 == LV_DRAW_MASK_RES_TRANSP) {
 818:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[0], tmp);
 819:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 820:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 821:lvgl/src/lv_draw/lv_draw_mask.c **** 
 822:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > len) tmp = len;
 823:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp < 0) tmp = 0;
 824:lvgl/src/lv_draw/lv_draw_mask.c ****         res2 = lv_draw_mask_line(&mask_buf[tmp], abs_x + tmp, abs_y, len - tmp, (lv_draw_mask_line_
 825:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 826:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[tmp], len - tmp);
 827:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 828:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res1 == res2) return res1;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 16


 829:lvgl/src/lv_draw/lv_draw_mask.c ****         else return LV_DRAW_MASK_RES_CHANGED;
 830:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 831:lvgl/src/lv_draw/lv_draw_mask.c ****     else  {
 832:lvgl/src/lv_draw/lv_draw_mask.c **** 
 833:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res1 = LV_DRAW_MASK_RES_FULL_COVER;
 834:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res2 = LV_DRAW_MASK_RES_FULL_COVER;
 835:lvgl/src/lv_draw/lv_draw_mask.c **** 
 836:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->cfg.start_angle == 180) {
 837:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res1 = LV_DRAW_MASK_RES_FULL_COVER;
 838:lvgl/src/lv_draw/lv_draw_mask.c ****             else res1 = LV_DRAW_MASK_RES_UNKNOWN;
 839:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 840:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle == 0) {
 841:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res1 = LV_DRAW_MASK_RES_UNKNOWN;
 842:lvgl/src/lv_draw/lv_draw_mask.c ****             else res1 = LV_DRAW_MASK_RES_FULL_COVER;
 843:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 844:lvgl/src/lv_draw/lv_draw_mask.c ****         else if((p->cfg.start_angle < 180 && abs_y < p->cfg.vertex_p.y) ||
 845:lvgl/src/lv_draw/lv_draw_mask.c ****                 (p->cfg.start_angle > 180 && abs_y >= p->cfg.vertex_p.y)) {
 846:lvgl/src/lv_draw/lv_draw_mask.c ****             res1 = LV_DRAW_MASK_RES_UNKNOWN;
 847:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 848:lvgl/src/lv_draw/lv_draw_mask.c ****         else  {
 849:lvgl/src/lv_draw/lv_draw_mask.c ****             res1 = lv_draw_mask_line(mask_buf, abs_x, abs_y, len, &p->start_line);
 850:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 851:lvgl/src/lv_draw/lv_draw_mask.c **** 
 852:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->cfg.end_angle == 180) {
 853:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res2 = LV_DRAW_MASK_RES_UNKNOWN;
 854:lvgl/src/lv_draw/lv_draw_mask.c ****             else res2 = LV_DRAW_MASK_RES_FULL_COVER;
 855:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 856:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle == 0) {
 857:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res2 = LV_DRAW_MASK_RES_FULL_COVER;
 858:lvgl/src/lv_draw/lv_draw_mask.c ****             else res2 = LV_DRAW_MASK_RES_UNKNOWN;
 859:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 860:lvgl/src/lv_draw/lv_draw_mask.c ****         else if((p->cfg.end_angle < 180 && abs_y < p->cfg.vertex_p.y) ||
 861:lvgl/src/lv_draw/lv_draw_mask.c ****                 (p->cfg.end_angle > 180 && abs_y >= p->cfg.vertex_p.y)) {
 862:lvgl/src/lv_draw/lv_draw_mask.c ****             res2 = LV_DRAW_MASK_RES_UNKNOWN;
 863:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 864:lvgl/src/lv_draw/lv_draw_mask.c ****         else {
 865:lvgl/src/lv_draw/lv_draw_mask.c ****             res2 = lv_draw_mask_line(mask_buf, abs_x, abs_y, len, &p->end_line);
 866:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 867:lvgl/src/lv_draw/lv_draw_mask.c **** 
 868:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res1 == LV_DRAW_MASK_RES_TRANSP || res2 == LV_DRAW_MASK_RES_TRANSP) return LV_DRAW_MASK_
 869:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_UNKNOWN && res2 == LV_DRAW_MASK_RES_UNKNOWN) return LV_DRA
 870:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_FULL_COVER &&  res2 == LV_DRAW_MASK_RES_FULL_COVER) return
 871:lvgl/src/lv_draw/lv_draw_mask.c ****         else return LV_DRAW_MASK_RES_CHANGED;
 872:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 873:lvgl/src/lv_draw/lv_draw_mask.c **** }
 874:lvgl/src/lv_draw/lv_draw_mask.c **** 
 875:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_radius(lv_opa_t * mask_buf, lv_coord_t
 876:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                     lv_coord_t abs_y, lv_coord_t le
 877:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                     lv_draw_mask_radius_param_t * p
 878:lvgl/src/lv_draw/lv_draw_mask.c **** {
 879:lvgl/src/lv_draw/lv_draw_mask.c ****     bool outer = p->cfg.outer;
 880:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t radius = p->cfg.radius;
 881:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_t rect;
 882:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_copy(&rect, &p->cfg.rect);
 883:lvgl/src/lv_draw/lv_draw_mask.c **** 
 884:lvgl/src/lv_draw/lv_draw_mask.c ****     if(outer == false) {
 885:lvgl/src/lv_draw/lv_draw_mask.c ****         if(abs_y < rect.y1 || abs_y > rect.y2) {
ARM GAS  D:\Temp\ccPmLtDk.s 			page 17


 886:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 887:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 888:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 889:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
 890:lvgl/src/lv_draw/lv_draw_mask.c ****         if(abs_y < rect.y1 || abs_y > rect.y2) {
 891:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 892:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 893:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 894:lvgl/src/lv_draw/lv_draw_mask.c **** 
 895:lvgl/src/lv_draw/lv_draw_mask.c ****     if((abs_x >= rect.x1 + radius && abs_x + len <= rect.x2 - radius) ||
 896:lvgl/src/lv_draw/lv_draw_mask.c ****        (abs_y >= rect.y1 + radius && abs_y <= rect.y2 - radius)) {
 897:lvgl/src/lv_draw/lv_draw_mask.c ****         if(outer == false) {
 898:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Remove the edges*/
 899:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t last =  rect.x1 - abs_x;
 900:lvgl/src/lv_draw/lv_draw_mask.c ****             if(last > len) return LV_DRAW_MASK_RES_TRANSP;
 901:lvgl/src/lv_draw/lv_draw_mask.c ****             if(last >= 0) {
 902:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[0], last);
 903:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 904:lvgl/src/lv_draw/lv_draw_mask.c **** 
 905:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t first = rect.x2 - abs_x + 1;
 906:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first <= 0) return LV_DRAW_MASK_RES_TRANSP;
 907:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(first < len) {
 908:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[first], len - first);
 909:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 910:lvgl/src/lv_draw/lv_draw_mask.c ****             if(last == 0 && first == len) return LV_DRAW_MASK_RES_FULL_COVER;
 911:lvgl/src/lv_draw/lv_draw_mask.c ****             else return LV_DRAW_MASK_RES_CHANGED;
 912:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 913:lvgl/src/lv_draw/lv_draw_mask.c ****         else {
 914:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t first = rect.x1 - abs_x;
 915:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first < 0) first = 0;
 916:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first <= len) {
 917:lvgl/src/lv_draw/lv_draw_mask.c ****                 int32_t last =  rect.x2 - abs_x - first + 1;
 918:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first + last > len) last = len - first;
 919:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(last >= 0) {
 920:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], last);
 921:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 922:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 923:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 924:lvgl/src/lv_draw/lv_draw_mask.c ****         return LV_DRAW_MASK_RES_CHANGED;
 925:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 926:lvgl/src/lv_draw/lv_draw_mask.c **** 
 927:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t k = rect.x1 - abs_x; /*First relevant coordinate on the of the mask*/
 928:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t w = lv_area_get_width(&rect);
 929:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t h = lv_area_get_height(&rect);
 930:lvgl/src/lv_draw/lv_draw_mask.c ****     abs_x -= rect.x1;
 931:lvgl/src/lv_draw/lv_draw_mask.c ****     abs_y -= rect.y1;
 932:lvgl/src/lv_draw/lv_draw_mask.c **** 
 933:lvgl/src/lv_draw/lv_draw_mask.c ****     uint32_t r2 = p->cfg.radius * p->cfg.radius;
 934:lvgl/src/lv_draw/lv_draw_mask.c **** 
 935:lvgl/src/lv_draw/lv_draw_mask.c ****     /*Handle corner areas*/
 936:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_y < radius || abs_y > h - radius - 1) {
 937:lvgl/src/lv_draw/lv_draw_mask.c **** 
 938:lvgl/src/lv_draw/lv_draw_mask.c ****         uint32_t sqrt_mask;
 939:lvgl/src/lv_draw/lv_draw_mask.c ****         if(radius <= 32) sqrt_mask = 0x200;
 940:lvgl/src/lv_draw/lv_draw_mask.c ****         if(radius <= 256) sqrt_mask = 0x800;
 941:lvgl/src/lv_draw/lv_draw_mask.c ****         else sqrt_mask = 0x8000;
 942:lvgl/src/lv_draw/lv_draw_mask.c **** 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 18


 943:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_sqrt_res_t x0;
 944:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_sqrt_res_t x1;
 945:lvgl/src/lv_draw/lv_draw_mask.c ****         /* y = 0 should mean the top of the circle */
 946:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t y;
 947:lvgl/src/lv_draw/lv_draw_mask.c ****         if(abs_y < radius) {
 948:lvgl/src/lv_draw/lv_draw_mask.c ****             y = radius - abs_y;
 949:lvgl/src/lv_draw/lv_draw_mask.c **** 
 950:lvgl/src/lv_draw/lv_draw_mask.c ****             /* Get the x intersection points for `abs_y` and `abs_y-1`
 951:lvgl/src/lv_draw/lv_draw_mask.c ****              * Use the circle's equation x = sqrt(r^2 - y^2)
 952:lvgl/src/lv_draw/lv_draw_mask.c ****              * Try to use the values from the previous run*/
 953:lvgl/src/lv_draw/lv_draw_mask.c ****             if(y == p->y_prev) {
 954:lvgl/src/lv_draw/lv_draw_mask.c ****                 x0.f = p->y_prev_x.f;
 955:lvgl/src/lv_draw/lv_draw_mask.c ****                 x0.i = p->y_prev_x.i;
 956:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 957:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 958:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_sqrt(r2 - (y * y), &x0, sqrt_mask);
 959:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 960:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_sqrt(r2 - ((y - 1) * (y - 1)), &x1, sqrt_mask);
 961:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev = y - 1;
 962:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.f = x1.f;
 963:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.i = x1.i;
 964:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 965:lvgl/src/lv_draw/lv_draw_mask.c ****         else {
 966:lvgl/src/lv_draw/lv_draw_mask.c ****             y = radius - (h - abs_y) + 1;
 967:lvgl/src/lv_draw/lv_draw_mask.c **** 
 968:lvgl/src/lv_draw/lv_draw_mask.c ****             /* Get the x intersection points for `abs_y` and `abs_y-1`
 969:lvgl/src/lv_draw/lv_draw_mask.c ****              * Use the circle's equation x = sqrt(r^2 - y^2)
 970:lvgl/src/lv_draw/lv_draw_mask.c ****              * Try to use the values from the previous run*/
 971:lvgl/src/lv_draw/lv_draw_mask.c ****             if((y - 1) == p->y_prev) {
 972:lvgl/src/lv_draw/lv_draw_mask.c ****                 x1.f = p->y_prev_x.f;
 973:lvgl/src/lv_draw/lv_draw_mask.c ****                 x1.i = p->y_prev_x.i;
 974:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 975:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 976:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_sqrt(r2 - ((y - 1) * (y - 1)), &x1, sqrt_mask);
 977:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 978:lvgl/src/lv_draw/lv_draw_mask.c **** 
 979:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_sqrt(r2 - (y * y), &x0, sqrt_mask);
 980:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev = y;
 981:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.f = x0.f;
 982:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.i = x0.i;
 983:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 984:lvgl/src/lv_draw/lv_draw_mask.c **** 
 985:lvgl/src/lv_draw/lv_draw_mask.c ****         /* If x1 is on the next round coordinate (e.g. x0: 3.5, x1:4.0)
 986:lvgl/src/lv_draw/lv_draw_mask.c ****          * then treat x1 as x1: 3.99 to handle them as they were on the same pixel*/
 987:lvgl/src/lv_draw/lv_draw_mask.c ****         if(x0.i == x1.i - 1 && x1.f == 0) {
 988:lvgl/src/lv_draw/lv_draw_mask.c ****             x1.i--;
 989:lvgl/src/lv_draw/lv_draw_mask.c ****             x1.f = 0xFF;
 990:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 991:lvgl/src/lv_draw/lv_draw_mask.c **** 
 992:lvgl/src/lv_draw/lv_draw_mask.c ****         /*If the two x intersections are on the same x then just get average of the fractions*/
 993:lvgl/src/lv_draw/lv_draw_mask.c ****         if(x0.i == x1.i) {
 994:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_opa_t m = (x0.f + x1.f) >> 1;
 995:lvgl/src/lv_draw/lv_draw_mask.c ****             if(outer) m = 255 - m;
 996:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t ofs = radius - x0.i - 1;
 997:lvgl/src/lv_draw/lv_draw_mask.c **** 
 998:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Left corner*/
 999:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t kl = k + ofs;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 19


1000:lvgl/src/lv_draw/lv_draw_mask.c **** 
1001:lvgl/src/lv_draw/lv_draw_mask.c ****             if(kl >= 0 && kl < len) {
1002:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[kl] = mask_mix(mask_buf[kl], m);
1003:lvgl/src/lv_draw/lv_draw_mask.c ****             }
1004:lvgl/src/lv_draw/lv_draw_mask.c **** 
1005:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Right corner*/
1006:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t kr = k + (w - ofs - 1);
1007:lvgl/src/lv_draw/lv_draw_mask.c ****             if(kr >= 0 && kr < len) {
1008:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[kr] = mask_mix(mask_buf[kr], m);
1009:lvgl/src/lv_draw/lv_draw_mask.c ****             }
1010:lvgl/src/lv_draw/lv_draw_mask.c **** 
1011:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Clear the unused parts*/
1012:lvgl/src/lv_draw/lv_draw_mask.c ****             if(outer == false) {
1013:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
1014:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl > len)  {
1015:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
1016:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
1017:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0) {
1018:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[0], kl);
1019:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
1020:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr < 0) {
1021:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
1022:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
1023:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr <= len) {
1024:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[kr], len - kr);
1025:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
1026:lvgl/src/lv_draw/lv_draw_mask.c ****             }
1027:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
1028:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl++;
1029:lvgl/src/lv_draw/lv_draw_mask.c ****                 int32_t first = kl;
1030:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < 0) first = 0;
1031:lvgl/src/lv_draw/lv_draw_mask.c **** 
1032:lvgl/src/lv_draw/lv_draw_mask.c ****                 int32_t len_tmp = kr - first;
1033:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(len_tmp + first > len) len_tmp = len - first;
1034:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < len && len_tmp >= 0) {
1035:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], len_tmp);
1036:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
1037:lvgl/src/lv_draw/lv_draw_mask.c ****             }
1038:lvgl/src/lv_draw/lv_draw_mask.c ****         }
1039:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Multiple pixels are affected. Get y intersection of the pixels*/
1040:lvgl/src/lv_draw/lv_draw_mask.c ****         else {
1041:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t ofs = radius - (x0.i + 1);
1042:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t kl = k + ofs;
1043:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t kr = k + (w - ofs - 1);
1044:lvgl/src/lv_draw/lv_draw_mask.c **** 
1045:lvgl/src/lv_draw/lv_draw_mask.c ****             if(outer) {
1046:lvgl/src/lv_draw/lv_draw_mask.c ****                 int32_t first = kl + 1;
1047:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < 0) first = 0;
1048:lvgl/src/lv_draw/lv_draw_mask.c **** 
1049:lvgl/src/lv_draw/lv_draw_mask.c ****                 int32_t len_tmp = kr - first;
1050:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(len_tmp + first > len) len_tmp = len - first;
1051:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < len && len_tmp >= 0) {
1052:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], len_tmp);
1053:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
1054:lvgl/src/lv_draw/lv_draw_mask.c ****             }
1055:lvgl/src/lv_draw/lv_draw_mask.c **** 
1056:lvgl/src/lv_draw/lv_draw_mask.c ****             uint32_t i = x0.i + 1;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 20


1057:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_opa_t m;
1058:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_sqrt_res_t y_prev;
1059:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_sqrt_res_t y_next;
1060:lvgl/src/lv_draw/lv_draw_mask.c **** 
1061:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_sqrt(r2 - (x0.i * x0.i), &y_prev, sqrt_mask);
1062:lvgl/src/lv_draw/lv_draw_mask.c **** 
1063:lvgl/src/lv_draw/lv_draw_mask.c ****             if(y_prev.f == 0) {
1064:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.i--;
1065:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.f = 0xFF;
1066:lvgl/src/lv_draw/lv_draw_mask.c ****             }
1067:lvgl/src/lv_draw/lv_draw_mask.c **** 
1068:lvgl/src/lv_draw/lv_draw_mask.c ****             /*The first y intersection is special as it might be in the previous line*/
1069:lvgl/src/lv_draw/lv_draw_mask.c ****             if(y_prev.i >= y) {
1070:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_sqrt(r2 - (i * i), &y_next, sqrt_mask);
1071:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = 255 - (((255 - x0.f) * (255 - y_next.f)) >> 9);
1072:lvgl/src/lv_draw/lv_draw_mask.c **** 
1073:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(outer) m = 255 - m;
1074:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
1075:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
1076:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
1077:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
1078:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.f = y_next.f;
1079:lvgl/src/lv_draw/lv_draw_mask.c ****                 i++;
1080:lvgl/src/lv_draw/lv_draw_mask.c ****             }
1081:lvgl/src/lv_draw/lv_draw_mask.c **** 
1082:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Set all points which are crossed by the circle*/
1083:lvgl/src/lv_draw/lv_draw_mask.c ****             for(; i <= x1.i; i++) {
1084:lvgl/src/lv_draw/lv_draw_mask.c ****                 /* These values are very close to each other. It's enough to approximate sqrt
1085:lvgl/src/lv_draw/lv_draw_mask.c ****                  * The non-approximated version is lv_sqrt(r2 - (i * i), &y_next, sqrt_mask); */
1086:lvgl/src/lv_draw/lv_draw_mask.c ****                 sqrt_approx(&y_next, &y_prev, r2 - (i * i));
1087:lvgl/src/lv_draw/lv_draw_mask.c **** 
1088:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = (y_prev.f + y_next.f) >> 1;
1089:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(outer) m = 255 - m;
1090:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
1091:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
1092:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
1093:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
1094:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.f = y_next.f;
1095:lvgl/src/lv_draw/lv_draw_mask.c ****             }
1096:lvgl/src/lv_draw/lv_draw_mask.c **** 
1097:lvgl/src/lv_draw/lv_draw_mask.c ****             /*If the last pixel was left in its middle therefore
1098:lvgl/src/lv_draw/lv_draw_mask.c ****              * the circle still has parts on the next one*/
1099:lvgl/src/lv_draw/lv_draw_mask.c ****             if(y_prev.f) {
1100:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = (y_prev.f * x1.f) >> 9;
1101:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(outer) m = 255 - m;
1102:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
1103:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
1104:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
1105:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
1106:lvgl/src/lv_draw/lv_draw_mask.c ****             }
1107:lvgl/src/lv_draw/lv_draw_mask.c **** 
1108:lvgl/src/lv_draw/lv_draw_mask.c ****             if(outer == 0) {
1109:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl++;
1110:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl > len) {
1111:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
1112:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
1113:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0) _lv_memset_00(&mask_buf[0], kl);
ARM GAS  D:\Temp\ccPmLtDk.s 			page 21


1114:lvgl/src/lv_draw/lv_draw_mask.c **** 
1115:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr < 0) {
1116:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
1117:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
1118:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr < len) _lv_memset_00(&mask_buf[kr], len - kr);
1119:lvgl/src/lv_draw/lv_draw_mask.c ****             }
1120:lvgl/src/lv_draw/lv_draw_mask.c ****         }
1121:lvgl/src/lv_draw/lv_draw_mask.c ****     }
1122:lvgl/src/lv_draw/lv_draw_mask.c **** 
1123:lvgl/src/lv_draw/lv_draw_mask.c ****     return LV_DRAW_MASK_RES_CHANGED;
1124:lvgl/src/lv_draw/lv_draw_mask.c **** }
1125:lvgl/src/lv_draw/lv_draw_mask.c **** 
1126:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_fade(lv_opa_t * mask_buf, lv_coord_t a
1127:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                   lv_coord_t abs_y, lv_coord_t len,
1128:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                   lv_draw_mask_fade_param_t * p)
1129:lvgl/src/lv_draw/lv_draw_mask.c **** {
  29              		.loc 1 1129 1 view -0
  30              		.cfi_startproc
  31              		@ args = 4, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 1129 1 is_stmt 0 view .LVU1
  35 0000 F0B4     		push	{r4, r5, r6, r7}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 4, -16
  39              		.cfi_offset 5, -12
  40              		.cfi_offset 6, -8
  41              		.cfi_offset 7, -4
  42 0002 049C     		ldr	r4, [sp, #16]
1130:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_y < p->cfg.coords.y1) return LV_DRAW_MASK_RES_FULL_COVER;
  43              		.loc 1 1130 5 is_stmt 1 view .LVU2
  44              		.loc 1 1130 29 is_stmt 0 view .LVU3
  45 0004 B4F90A50 		ldrsh	r5, [r4, #10]
  46              		.loc 1 1130 7 view .LVU4
  47 0008 9542     		cmp	r5, r2
  48 000a 7EDC     		bgt	.L16
1131:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_y > p->cfg.coords.y2) return LV_DRAW_MASK_RES_FULL_COVER;
  49              		.loc 1 1131 5 is_stmt 1 view .LVU5
  50              		.loc 1 1131 29 is_stmt 0 view .LVU6
  51 000c B4F90E50 		ldrsh	r5, [r4, #14]
  52              		.loc 1 1131 7 view .LVU7
  53 0010 9542     		cmp	r5, r2
  54 0012 7DDB     		blt	.L17
1132:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x + len < p->cfg.coords.x1) return LV_DRAW_MASK_RES_FULL_COVER;
  55              		.loc 1 1132 5 is_stmt 1 view .LVU8
  56              		.loc 1 1132 14 is_stmt 0 view .LVU9
  57 0014 5F18     		adds	r7, r3, r1
  58              		.loc 1 1132 35 view .LVU10
  59 0016 B4F90860 		ldrsh	r6, [r4, #8]
  60              		.loc 1 1132 7 view .LVU11
  61 001a B742     		cmp	r7, r6
  62 001c 7ADB     		blt	.L18
1133:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x > p->cfg.coords.x2) return LV_DRAW_MASK_RES_FULL_COVER;
  63              		.loc 1 1133 5 is_stmt 1 view .LVU12
  64              		.loc 1 1133 29 is_stmt 0 view .LVU13
  65 001e B4F90C50 		ldrsh	r5, [r4, #12]
ARM GAS  D:\Temp\ccPmLtDk.s 			page 22


  66              		.loc 1 1133 7 view .LVU14
  67 0022 8D42     		cmp	r5, r1
  68 0024 78DB     		blt	.L19
1134:lvgl/src/lv_draw/lv_draw_mask.c **** 
1135:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x + len > p->cfg.coords.x2) len -= abs_x + len - p->cfg.coords.x2 - 1;
  69              		.loc 1 1135 5 is_stmt 1 view .LVU15
  70              		.loc 1 1135 7 is_stmt 0 view .LVU16
  71 0026 AF42     		cmp	r7, r5
  72 0028 0ADD     		ble	.L3
  73              		.loc 1 1135 40 is_stmt 1 discriminator 1 view .LVU17
  74              		.loc 1 1135 74 is_stmt 0 discriminator 1 view .LVU18
  75 002a ADB2     		uxth	r5, r5
  76              		.loc 1 1135 53 discriminator 1 view .LVU19
  77 002c 1FFA83FC 		uxth	ip, r3
  78 0030 0CEB0107 		add	r7, ip, r1
  79 0034 BBB2     		uxth	r3, r7
  80              	.LVL1:
  81              		.loc 1 1135 78 discriminator 1 view .LVU20
  82 0036 ED1A     		subs	r5, r5, r3
  83              		.loc 1 1135 44 discriminator 1 view .LVU21
  84 0038 1CFA85F3 		uxtah	r3, ip, r5
  85 003c 0133     		adds	r3, r3, #1
  86 003e 1BB2     		sxth	r3, r3
  87              	.LVL2:
  88              	.L3:
1136:lvgl/src/lv_draw/lv_draw_mask.c **** 
1137:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x < p->cfg.coords.x1) {
  89              		.loc 1 1137 5 is_stmt 1 view .LVU22
  90              		.loc 1 1137 7 is_stmt 0 view .LVU23
  91 0040 8E42     		cmp	r6, r1
  92 0042 03DD     		ble	.L4
  93              	.LBB87:
1138:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t x_ofs = 0;
  94              		.loc 1 1138 9 is_stmt 1 view .LVU24
  95              	.LVL3:
1139:lvgl/src/lv_draw/lv_draw_mask.c ****         x_ofs = p->cfg.coords.x1 - abs_x;
  96              		.loc 1 1139 9 view .LVU25
  97              		.loc 1 1139 15 is_stmt 0 view .LVU26
  98 0044 711A     		subs	r1, r6, r1
  99              	.LVL4:
1140:lvgl/src/lv_draw/lv_draw_mask.c ****         len -= x_ofs;
 100              		.loc 1 1140 9 is_stmt 1 view .LVU27
 101              		.loc 1 1140 13 is_stmt 0 view .LVU28
 102 0046 5B1A     		subs	r3, r3, r1
 103              	.LVL5:
 104              		.loc 1 1140 13 view .LVU29
 105 0048 1BB2     		sxth	r3, r3
 106              	.LVL6:
1141:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf += x_ofs;
 107              		.loc 1 1141 9 is_stmt 1 view .LVU30
 108              		.loc 1 1141 18 is_stmt 0 view .LVU31
 109 004a 0844     		add	r0, r0, r1
 110              	.LVL7:
 111              	.L4:
 112              		.loc 1 1141 18 view .LVU32
 113              	.LBE87:
1142:lvgl/src/lv_draw/lv_draw_mask.c ****     }
ARM GAS  D:\Temp\ccPmLtDk.s 			page 23


1143:lvgl/src/lv_draw/lv_draw_mask.c **** 
1144:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t i;
 114              		.loc 1 1144 5 is_stmt 1 view .LVU33
1145:lvgl/src/lv_draw/lv_draw_mask.c **** 
1146:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_y <= p->cfg.y_top) {
 115              		.loc 1 1146 5 view .LVU34
 116              		.loc 1 1146 23 is_stmt 0 view .LVU35
 117 004c B4F91050 		ldrsh	r5, [r4, #16]
 118              		.loc 1 1146 7 view .LVU36
 119 0050 9542     		cmp	r5, r2
 120 0052 27DA     		bge	.L28
1147:lvgl/src/lv_draw/lv_draw_mask.c ****         for(i = 0; i < len; i++) {
1148:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[i] = mask_mix(mask_buf[i], p->cfg.opa_top);
1149:lvgl/src/lv_draw/lv_draw_mask.c ****         }
1150:lvgl/src/lv_draw/lv_draw_mask.c ****         return LV_DRAW_MASK_RES_CHANGED;
1151:lvgl/src/lv_draw/lv_draw_mask.c ****     }
1152:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(abs_y >= p->cfg.y_bottom) {
 121              		.loc 1 1152 10 is_stmt 1 view .LVU37
 122              		.loc 1 1152 28 is_stmt 0 view .LVU38
 123 0054 B4F91210 		ldrsh	r1, [r4, #18]
 124              		.loc 1 1152 12 view .LVU39
 125 0058 9142     		cmp	r1, r2
 126 005a 3CDD     		ble	.L22
 127              	.LBB88:
1153:lvgl/src/lv_draw/lv_draw_mask.c ****         for(i = 0; i < len; i++) {
1154:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[i] = mask_mix(mask_buf[i], p->cfg.opa_bottom);
1155:lvgl/src/lv_draw/lv_draw_mask.c ****         }
1156:lvgl/src/lv_draw/lv_draw_mask.c ****         return LV_DRAW_MASK_RES_CHANGED;
1157:lvgl/src/lv_draw/lv_draw_mask.c ****     }
1158:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
1159:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Calculate the opa proportionally*/
1160:lvgl/src/lv_draw/lv_draw_mask.c ****         int16_t opa_diff = p->cfg.opa_bottom - p->cfg.opa_top;
 128              		.loc 1 1160 9 is_stmt 1 view .LVU40
 129              		.loc 1 1160 34 is_stmt 0 view .LVU41
 130 005c 667D     		ldrb	r6, [r4, #21]	@ zero_extendqisi2
 131              		.loc 1 1160 54 view .LVU42
 132 005e 277D     		ldrb	r7, [r4, #20]	@ zero_extendqisi2
 133              		.loc 1 1160 17 view .LVU43
 134 0060 F41B     		subs	r4, r6, r7
 135              	.LVL8:
1161:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t y_diff = p->cfg.y_bottom - p->cfg.y_top + 1;
 136              		.loc 1 1161 9 is_stmt 1 view .LVU44
 137              		.loc 1 1161 42 is_stmt 0 view .LVU45
 138 0062 491B     		subs	r1, r1, r5
 139              		.loc 1 1161 17 view .LVU46
 140 0064 0131     		adds	r1, r1, #1
 141              	.LVL9:
1162:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_opa_t opa_act = (int32_t)((int32_t)(abs_y - p->cfg.y_top) * opa_diff) / y_diff;
 142              		.loc 1 1162 9 is_stmt 1 view .LVU47
 143              		.loc 1 1162 54 is_stmt 0 view .LVU48
 144 0066 521B     		subs	r2, r2, r5
 145              	.LVL10:
 146              		.loc 1 1162 28 view .LVU49
 147 0068 02FB04F2 		mul	r2, r2, r4
 148              		.loc 1 1162 82 view .LVU50
 149 006c 92FBF1F2 		sdiv	r2, r2, r1
 150              	.LVL11:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 24


1163:lvgl/src/lv_draw/lv_draw_mask.c ****         opa_act += p->cfg.opa_top;
 151              		.loc 1 1163 9 is_stmt 1 view .LVU51
 152              		.loc 1 1163 17 is_stmt 0 view .LVU52
 153 0070 57FA82F2 		uxtab	r2, r7, r2
 154              	.LVL12:
 155              		.loc 1 1163 17 view .LVU53
 156 0074 D2B2     		uxtb	r2, r2
 157              	.LVL13:
1164:lvgl/src/lv_draw/lv_draw_mask.c **** 
1165:lvgl/src/lv_draw/lv_draw_mask.c ****         for(i = 0; i < len; i++) {
 158              		.loc 1 1165 9 is_stmt 1 view .LVU54
 159              		.loc 1 1165 15 is_stmt 0 view .LVU55
 160 0076 0024     		movs	r4, #0
 161              	.LVL14:
 162              		.loc 1 1165 9 view .LVU56
 163 0078 3BE0     		b	.L13
 164              	.LVL15:
 165              	.L30:
 166              		.loc 1 1165 9 view .LVU57
 167              	.LBE88:
 168              	.LBB93:
 169              	.LBB94:
1166:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[i] = mask_mix(mask_buf[i], opa_act);
1167:lvgl/src/lv_draw/lv_draw_mask.c ****         }
1168:lvgl/src/lv_draw/lv_draw_mask.c ****         return LV_DRAW_MASK_RES_CHANGED;
1169:lvgl/src/lv_draw/lv_draw_mask.c ****     }
1170:lvgl/src/lv_draw/lv_draw_mask.c **** }
1171:lvgl/src/lv_draw/lv_draw_mask.c **** 
1172:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_map(lv_opa_t * mask_buf, lv_coord_t ab
1173:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                  lv_coord_t abs_y, lv_coord_t len,
1174:lvgl/src/lv_draw/lv_draw_mask.c ****                                                                  lv_draw_mask_map_param_t * p)
1175:lvgl/src/lv_draw/lv_draw_mask.c **** {
1176:lvgl/src/lv_draw/lv_draw_mask.c ****     /*Handle out of the mask cases*/
1177:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_y < p->cfg.coords.y1) return LV_DRAW_MASK_RES_FULL_COVER;
1178:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_y > p->cfg.coords.y2) return LV_DRAW_MASK_RES_FULL_COVER;
1179:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x + len < p->cfg.coords.x1) return LV_DRAW_MASK_RES_FULL_COVER;
1180:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x > p->cfg.coords.x2) return LV_DRAW_MASK_RES_FULL_COVER;
1181:lvgl/src/lv_draw/lv_draw_mask.c **** 
1182:lvgl/src/lv_draw/lv_draw_mask.c ****     /*Got to the current row in the map*/
1183:lvgl/src/lv_draw/lv_draw_mask.c ****     const lv_opa_t * map_tmp = p->cfg.map;
1184:lvgl/src/lv_draw/lv_draw_mask.c ****     map_tmp += (abs_y - p->cfg.coords.y1) * lv_area_get_width(&p->cfg.coords);
1185:lvgl/src/lv_draw/lv_draw_mask.c **** 
1186:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x + len > p->cfg.coords.x2) len -= abs_x + len - p->cfg.coords.x2 - 1;
1187:lvgl/src/lv_draw/lv_draw_mask.c **** 
1188:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x < p->cfg.coords.x1) {
1189:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t x_ofs = 0;
1190:lvgl/src/lv_draw/lv_draw_mask.c ****         x_ofs = p->cfg.coords.x1 - abs_x;
1191:lvgl/src/lv_draw/lv_draw_mask.c ****         len -= x_ofs;
1192:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf += x_ofs;
1193:lvgl/src/lv_draw/lv_draw_mask.c ****     }
1194:lvgl/src/lv_draw/lv_draw_mask.c ****     else {
1195:lvgl/src/lv_draw/lv_draw_mask.c ****         map_tmp += (abs_x - p->cfg.coords.x1);
1196:lvgl/src/lv_draw/lv_draw_mask.c ****     }
1197:lvgl/src/lv_draw/lv_draw_mask.c **** 
1198:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t i;
1199:lvgl/src/lv_draw/lv_draw_mask.c ****     for(i = 0; i < len; i++) {
1200:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[i] = mask_mix(mask_buf[i], map_tmp[i]);
ARM GAS  D:\Temp\ccPmLtDk.s 			page 25


1201:lvgl/src/lv_draw/lv_draw_mask.c ****     }
1202:lvgl/src/lv_draw/lv_draw_mask.c **** 
1203:lvgl/src/lv_draw/lv_draw_mask.c ****     return LV_DRAW_MASK_RES_CHANGED;
1204:lvgl/src/lv_draw/lv_draw_mask.c **** }
1205:lvgl/src/lv_draw/lv_draw_mask.c **** 
1206:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static inline lv_opa_t mask_mix(lv_opa_t mask_act, lv_opa_t mask_new)
1207:lvgl/src/lv_draw/lv_draw_mask.c **** {
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new >= LV_OPA_MAX) return mask_act;
1209:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
1210:lvgl/src/lv_draw/lv_draw_mask.c **** 
1211:lvgl/src/lv_draw/lv_draw_mask.c ****     return LV_MATH_UDIV255(mask_act * mask_new);// >> 8);
 170              		.loc 1 1211 5 is_stmt 1 view .LVU58
 171              		.loc 1 1211 12 is_stmt 0 view .LVU59
 172 007a 02FB05F2 		mul	r2, r2, r5
 173              	.LVL16:
 174              		.loc 1 1211 12 view .LVU60
 175 007e 02EB0225 		add	r5, r2, r2, lsl #8
 176              	.LVL17:
 177              		.loc 1 1211 12 view .LVU61
 178 0082 02EBC512 		add	r2, r2, r5, lsl #7
 179 0086 C2F3C752 		ubfx	r2, r2, #23, #8
 180              	.L7:
 181              	.LVL18:
 182              		.loc 1 1211 12 view .LVU62
 183              	.LBE94:
 184              	.LBE93:
1148:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 185              		.loc 1 1148 25 view .LVU63
 186 008a 3270     		strb	r2, [r6]
1147:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[i] = mask_mix(mask_buf[i], p->cfg.opa_top);
 187              		.loc 1 1147 30 view .LVU64
 188 008c 0131     		adds	r1, r1, #1
 189              	.LVL19:
 190              	.L5:
1147:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[i] = mask_mix(mask_buf[i], p->cfg.opa_top);
 191              		.loc 1 1147 9 discriminator 1 view .LVU65
 192 008e 8B42     		cmp	r3, r1
 193 0090 0ADD     		ble	.L29
1148:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 194              		.loc 1 1148 13 is_stmt 1 discriminator 3 view .LVU66
1148:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 195              		.loc 1 1148 44 is_stmt 0 discriminator 3 view .LVU67
 196 0092 4618     		adds	r6, r0, r1
1148:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 197              		.loc 1 1148 27 discriminator 3 view .LVU68
 198 0094 425C     		ldrb	r2, [r0, r1]	@ zero_extendqisi2
 199 0096 257D     		ldrb	r5, [r4, #20]	@ zero_extendqisi2
 200              	.LVL20:
 201              	.LBB96:
 202              	.LBI93:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 203              		.loc 1 1206 46 is_stmt 1 discriminator 3 view .LVU69
 204              	.LBB95:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 205              		.loc 1 1208 5 discriminator 3 view .LVU70
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 206              		.loc 1 1208 7 is_stmt 0 discriminator 3 view .LVU71
ARM GAS  D:\Temp\ccPmLtDk.s 			page 26


 207 0098 FC2D     		cmp	r5, #252
 208 009a F6D8     		bhi	.L7
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 209              		.loc 1 1209 5 is_stmt 1 view .LVU72
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 210              		.loc 1 1209 7 is_stmt 0 view .LVU73
 211 009c 022D     		cmp	r5, #2
 212 009e ECD8     		bhi	.L30
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 213              		.loc 1 1209 39 view .LVU74
 214 00a0 0022     		movs	r2, #0
 215              	.LVL21:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 216              		.loc 1 1209 39 view .LVU75
 217 00a2 F2E7     		b	.L7
 218              	.LVL22:
 219              	.L28:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 220              		.loc 1 1209 39 view .LVU76
 221              	.LBE95:
 222              	.LBE96:
1147:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[i] = mask_mix(mask_buf[i], p->cfg.opa_top);
 223              		.loc 1 1147 15 view .LVU77
 224 00a4 0021     		movs	r1, #0
 225 00a6 F2E7     		b	.L5
 226              	.LVL23:
 227              	.L29:
1150:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 228              		.loc 1 1150 16 view .LVU78
 229 00a8 0220     		movs	r0, #2
 230              	.LVL24:
1150:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 231              		.loc 1 1150 16 view .LVU79
 232 00aa 2FE0     		b	.L2
 233              	.LVL25:
 234              	.L32:
 235              	.LBB97:
 236              	.LBB98:
 237              		.loc 1 1211 5 is_stmt 1 view .LVU80
 238              		.loc 1 1211 12 is_stmt 0 view .LVU81
 239 00ac 02FB05F2 		mul	r2, r2, r5
 240              	.LVL26:
 241              		.loc 1 1211 12 view .LVU82
 242 00b0 02EB0225 		add	r5, r2, r2, lsl #8
 243              	.LVL27:
 244              		.loc 1 1211 12 view .LVU83
 245 00b4 02EBC512 		add	r2, r2, r5, lsl #7
 246 00b8 C2F3C755 		ubfx	r5, r2, #23, #8
 247              	.L11:
 248              	.LVL28:
 249              		.loc 1 1211 12 view .LVU84
 250              	.LBE98:
 251              	.LBE97:
1154:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 252              		.loc 1 1154 25 view .LVU85
 253 00bc 3570     		strb	r5, [r6]
1153:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[i] = mask_mix(mask_buf[i], p->cfg.opa_bottom);
ARM GAS  D:\Temp\ccPmLtDk.s 			page 27


 254              		.loc 1 1153 30 view .LVU86
 255 00be 0131     		adds	r1, r1, #1
 256              	.LVL29:
 257              	.L9:
1153:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[i] = mask_mix(mask_buf[i], p->cfg.opa_bottom);
 258              		.loc 1 1153 9 discriminator 1 view .LVU87
 259 00c0 8B42     		cmp	r3, r1
 260 00c2 0ADD     		ble	.L31
1154:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 261              		.loc 1 1154 13 is_stmt 1 discriminator 3 view .LVU88
1154:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 262              		.loc 1 1154 44 is_stmt 0 discriminator 3 view .LVU89
 263 00c4 4618     		adds	r6, r0, r1
1154:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 264              		.loc 1 1154 27 discriminator 3 view .LVU90
 265 00c6 455C     		ldrb	r5, [r0, r1]	@ zero_extendqisi2
 266 00c8 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 267              	.LVL30:
 268              	.LBB100:
 269              	.LBI97:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 270              		.loc 1 1206 46 is_stmt 1 discriminator 3 view .LVU91
 271              	.LBB99:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 272              		.loc 1 1208 5 discriminator 3 view .LVU92
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 273              		.loc 1 1208 7 is_stmt 0 discriminator 3 view .LVU93
 274 00ca FC2A     		cmp	r2, #252
 275 00cc F6D8     		bhi	.L11
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 276              		.loc 1 1209 5 is_stmt 1 view .LVU94
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 277              		.loc 1 1209 7 is_stmt 0 view .LVU95
 278 00ce 022A     		cmp	r2, #2
 279 00d0 ECD8     		bhi	.L32
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 280              		.loc 1 1209 39 view .LVU96
 281 00d2 0025     		movs	r5, #0
 282              	.LVL31:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 283              		.loc 1 1209 39 view .LVU97
 284 00d4 F2E7     		b	.L11
 285              	.LVL32:
 286              	.L22:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 287              		.loc 1 1209 39 view .LVU98
 288              	.LBE99:
 289              	.LBE100:
1153:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[i] = mask_mix(mask_buf[i], p->cfg.opa_bottom);
 290              		.loc 1 1153 15 view .LVU99
 291 00d6 0021     		movs	r1, #0
 292 00d8 F2E7     		b	.L9
 293              	.LVL33:
 294              	.L31:
1156:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 295              		.loc 1 1156 16 view .LVU100
 296 00da 0220     		movs	r0, #2
ARM GAS  D:\Temp\ccPmLtDk.s 			page 28


 297              	.LVL34:
1156:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 298              		.loc 1 1156 16 view .LVU101
 299 00dc 16E0     		b	.L2
 300              	.LVL35:
 301              	.L34:
 302              	.LBB101:
 303              	.LBB89:
 304              	.LBB90:
 305              		.loc 1 1211 5 is_stmt 1 view .LVU102
 306              		.loc 1 1211 12 is_stmt 0 view .LVU103
 307 00de 02FB01F1 		mul	r1, r2, r1
 308              	.LVL36:
 309              		.loc 1 1211 12 view .LVU104
 310 00e2 01EB0126 		add	r6, r1, r1, lsl #8
 311 00e6 01EBC611 		add	r1, r1, r6, lsl #7
 312 00ea C1F3C751 		ubfx	r1, r1, #23, #8
 313              	.L14:
 314              	.LVL37:
 315              		.loc 1 1211 12 view .LVU105
 316              	.LBE90:
 317              	.LBE89:
1166:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 318              		.loc 1 1166 25 view .LVU106
 319 00ee 2970     		strb	r1, [r5]
1165:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[i] = mask_mix(mask_buf[i], opa_act);
 320              		.loc 1 1165 30 view .LVU107
 321 00f0 0134     		adds	r4, r4, #1
 322              	.LVL38:
 323              	.L13:
1165:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[i] = mask_mix(mask_buf[i], opa_act);
 324              		.loc 1 1165 9 discriminator 1 view .LVU108
 325 00f2 A342     		cmp	r3, r4
 326 00f4 07DD     		ble	.L33
1166:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 327              		.loc 1 1166 13 is_stmt 1 discriminator 3 view .LVU109
1166:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 328              		.loc 1 1166 44 is_stmt 0 discriminator 3 view .LVU110
 329 00f6 0519     		adds	r5, r0, r4
1166:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 330              		.loc 1 1166 27 discriminator 3 view .LVU111
 331 00f8 015D     		ldrb	r1, [r0, r4]	@ zero_extendqisi2
 332              	.LVL39:
 333              	.LBB92:
 334              	.LBI89:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 335              		.loc 1 1206 46 is_stmt 1 discriminator 3 view .LVU112
 336              	.LBB91:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 337              		.loc 1 1208 5 discriminator 3 view .LVU113
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 338              		.loc 1 1208 7 is_stmt 0 discriminator 3 view .LVU114
 339 00fa FC2A     		cmp	r2, #252
 340 00fc F7D8     		bhi	.L14
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 341              		.loc 1 1209 5 is_stmt 1 view .LVU115
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 29


 342              		.loc 1 1209 7 is_stmt 0 view .LVU116
 343 00fe 022A     		cmp	r2, #2
 344 0100 EDD8     		bhi	.L34
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 345              		.loc 1 1209 39 view .LVU117
 346 0102 0021     		movs	r1, #0
 347              	.LVL40:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 348              		.loc 1 1209 39 view .LVU118
 349 0104 F3E7     		b	.L14
 350              	.LVL41:
 351              	.L33:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 352              		.loc 1 1209 39 view .LVU119
 353              	.LBE91:
 354              	.LBE92:
1168:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 355              		.loc 1 1168 16 view .LVU120
 356 0106 0220     		movs	r0, #2
 357              	.LVL42:
1168:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 358              		.loc 1 1168 16 view .LVU121
 359 0108 00E0     		b	.L2
 360              	.LVL43:
 361              	.L16:
1168:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 362              		.loc 1 1168 16 view .LVU122
 363              	.LBE101:
1130:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_y > p->cfg.coords.y2) return LV_DRAW_MASK_RES_FULL_COVER;
 364              		.loc 1 1130 41 view .LVU123
 365 010a 0120     		movs	r0, #1
 366              	.LVL44:
 367              	.L2:
1170:lvgl/src/lv_draw/lv_draw_mask.c **** 
 368              		.loc 1 1170 1 view .LVU124
 369 010c F0BC     		pop	{r4, r5, r6, r7}
 370              	.LCFI1:
 371              		.cfi_remember_state
 372              		.cfi_restore 7
 373              		.cfi_restore 6
 374              		.cfi_restore 5
 375              		.cfi_restore 4
 376              		.cfi_def_cfa_offset 0
 377              	.LVL45:
1170:lvgl/src/lv_draw/lv_draw_mask.c **** 
 378              		.loc 1 1170 1 view .LVU125
 379 010e 7047     		bx	lr
 380              	.LVL46:
 381              	.L17:
 382              	.LCFI2:
 383              		.cfi_restore_state
1131:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x + len < p->cfg.coords.x1) return LV_DRAW_MASK_RES_FULL_COVER;
 384              		.loc 1 1131 41 view .LVU126
 385 0110 0120     		movs	r0, #1
 386              	.LVL47:
1131:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x + len < p->cfg.coords.x1) return LV_DRAW_MASK_RES_FULL_COVER;
 387              		.loc 1 1131 41 view .LVU127
ARM GAS  D:\Temp\ccPmLtDk.s 			page 30


 388 0112 FBE7     		b	.L2
 389              	.LVL48:
 390              	.L18:
1132:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x > p->cfg.coords.x2) return LV_DRAW_MASK_RES_FULL_COVER;
 391              		.loc 1 1132 47 view .LVU128
 392 0114 0120     		movs	r0, #1
 393              	.LVL49:
1132:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x > p->cfg.coords.x2) return LV_DRAW_MASK_RES_FULL_COVER;
 394              		.loc 1 1132 47 view .LVU129
 395 0116 F9E7     		b	.L2
 396              	.LVL50:
 397              	.L19:
1133:lvgl/src/lv_draw/lv_draw_mask.c **** 
 398              		.loc 1 1133 41 view .LVU130
 399 0118 0120     		movs	r0, #1
 400              	.LVL51:
1133:lvgl/src/lv_draw/lv_draw_mask.c **** 
 401              		.loc 1 1133 41 view .LVU131
 402 011a F7E7     		b	.L2
 403              		.cfi_endproc
 404              	.LFE183:
 406              		.section	.text.lv_draw_mask_map,"ax",%progbits
 407              		.align	1
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu fpv4-sp-d16
 413              	lv_draw_mask_map:
 414              	.LVL52:
 415              	.LFB184:
1175:lvgl/src/lv_draw/lv_draw_mask.c ****     /*Handle out of the mask cases*/
 416              		.loc 1 1175 1 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 4, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
1175:lvgl/src/lv_draw/lv_draw_mask.c ****     /*Handle out of the mask cases*/
 420              		.loc 1 1175 1 is_stmt 0 view .LVU133
 421 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 422              	.LCFI3:
 423              		.cfi_def_cfa_offset 20
 424              		.cfi_offset 4, -20
 425              		.cfi_offset 5, -16
 426              		.cfi_offset 6, -12
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 059C     		ldr	r4, [sp, #20]
1177:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_y > p->cfg.coords.y2) return LV_DRAW_MASK_RES_FULL_COVER;
 430              		.loc 1 1177 5 is_stmt 1 view .LVU134
1177:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_y > p->cfg.coords.y2) return LV_DRAW_MASK_RES_FULL_COVER;
 431              		.loc 1 1177 29 is_stmt 0 view .LVU135
 432 0004 B4F90A50 		ldrsh	r5, [r4, #10]
1177:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_y > p->cfg.coords.y2) return LV_DRAW_MASK_RES_FULL_COVER;
 433              		.loc 1 1177 7 view .LVU136
 434 0008 9542     		cmp	r5, r2
 435 000a 45DC     		bgt	.L43
1178:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x + len < p->cfg.coords.x1) return LV_DRAW_MASK_RES_FULL_COVER;
 436              		.loc 1 1178 5 is_stmt 1 view .LVU137
ARM GAS  D:\Temp\ccPmLtDk.s 			page 31


1178:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x + len < p->cfg.coords.x1) return LV_DRAW_MASK_RES_FULL_COVER;
 437              		.loc 1 1178 29 is_stmt 0 view .LVU138
 438 000c B4F90E60 		ldrsh	r6, [r4, #14]
1178:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x + len < p->cfg.coords.x1) return LV_DRAW_MASK_RES_FULL_COVER;
 439              		.loc 1 1178 7 view .LVU139
 440 0010 9642     		cmp	r6, r2
 441 0012 43DB     		blt	.L44
1179:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x > p->cfg.coords.x2) return LV_DRAW_MASK_RES_FULL_COVER;
 442              		.loc 1 1179 5 is_stmt 1 view .LVU140
1179:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x > p->cfg.coords.x2) return LV_DRAW_MASK_RES_FULL_COVER;
 443              		.loc 1 1179 14 is_stmt 0 view .LVU141
 444 0014 5F18     		adds	r7, r3, r1
1179:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x > p->cfg.coords.x2) return LV_DRAW_MASK_RES_FULL_COVER;
 445              		.loc 1 1179 35 view .LVU142
 446 0016 B4F90860 		ldrsh	r6, [r4, #8]
1179:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x > p->cfg.coords.x2) return LV_DRAW_MASK_RES_FULL_COVER;
 447              		.loc 1 1179 7 view .LVU143
 448 001a B742     		cmp	r7, r6
 449 001c 40DB     		blt	.L45
1180:lvgl/src/lv_draw/lv_draw_mask.c **** 
 450              		.loc 1 1180 5 is_stmt 1 view .LVU144
1180:lvgl/src/lv_draw/lv_draw_mask.c **** 
 451              		.loc 1 1180 29 is_stmt 0 view .LVU145
 452 001e B4F90CC0 		ldrsh	ip, [r4, #12]
1180:lvgl/src/lv_draw/lv_draw_mask.c **** 
 453              		.loc 1 1180 7 view .LVU146
 454 0022 8C45     		cmp	ip, r1
 455 0024 3EDB     		blt	.L46
1183:lvgl/src/lv_draw/lv_draw_mask.c ****     map_tmp += (abs_y - p->cfg.coords.y1) * lv_area_get_width(&p->cfg.coords);
 456              		.loc 1 1183 5 is_stmt 1 view .LVU147
1183:lvgl/src/lv_draw/lv_draw_mask.c ****     map_tmp += (abs_y - p->cfg.coords.y1) * lv_area_get_width(&p->cfg.coords);
 457              		.loc 1 1183 22 is_stmt 0 view .LVU148
 458 0026 2469     		ldr	r4, [r4, #16]
 459              	.LVL53:
1184:lvgl/src/lv_draw/lv_draw_mask.c **** 
 460              		.loc 1 1184 5 is_stmt 1 view .LVU149
1184:lvgl/src/lv_draw/lv_draw_mask.c **** 
 461              		.loc 1 1184 23 is_stmt 0 view .LVU150
 462 0028 521B     		subs	r2, r2, r5
 463              	.LVL54:
 464              	.LBB102:
 465              	.LBI102:
 466              		.file 2 "lvgl/src/lv_draw/../lv_misc/lv_area.h"
   1:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
   2:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *
   4:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
   5:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
   6:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
   9:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/lv_draw/../lv_misc/lv_area.h **** extern "C" {
  11:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #endif
  12:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  13:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /*********************
  14:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *      INCLUDES
ARM GAS  D:\Temp\ccPmLtDk.s 			page 32


  15:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *********************/
  16:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #include <string.h>
  18:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #include <stdbool.h>
  19:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #include <stdint.h>
  20:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #include "lv_mem.h"
  21:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  22:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /*********************
  23:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *      DEFINES
  24:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *********************/
  25:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /*To avoid overflow don't let the max ranges (reduce with 1000) */
  26:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - 1000))
  27:lvgl/src/lv_draw/../lv_misc/lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  28:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  29:lvgl/src/lv_draw/../lv_misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  30:lvgl/src/lv_draw/../lv_misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  31:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  32:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**********************
  33:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  *      TYPEDEFS
  34:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  **********************/
  35:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  36:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
  37:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * Represents a point on the screen.
  38:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
  39:lvgl/src/lv_draw/../lv_misc/lv_area.h **** typedef struct {
  40:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t x;
  41:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t y;
  42:lvgl/src/lv_draw/../lv_misc/lv_area.h **** } lv_point_t;
  43:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  44:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /** Represents an area of the screen. */
  45:lvgl/src/lv_draw/../lv_misc/lv_area.h **** typedef struct {
  46:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t x1;
  47:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t y1;
  48:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t x2;
  49:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     lv_coord_t y2;
  50:lvgl/src/lv_draw/../lv_misc/lv_area.h **** } lv_area_t;
  51:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  52:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /** Alignments */
  53:lvgl/src/lv_draw/../lv_misc/lv_area.h **** enum {
  54:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_CENTER = 0,
  55:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_TOP_LEFT,
  56:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_TOP_MID,
  57:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_TOP_RIGHT,
  58:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_BOTTOM_LEFT,
  59:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_BOTTOM_MID,
  60:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_BOTTOM_RIGHT,
  61:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_LEFT_MID,
  62:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_IN_RIGHT_MID,
  63:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
ARM GAS  D:\Temp\ccPmLtDk.s 			page 33


  72:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/lv_draw/../lv_misc/lv_area.h **** };
  76:lvgl/src/lv_draw/../lv_misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  78:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**********************
  79:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * GLOBAL PROTOTYPES
  80:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  **********************/
  81:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  82:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
  83:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * Initialize an area
  84:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param area_p pointer to an area
  85:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param x1 left coordinate of the area
  86:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param y1 top coordinate of the area
  87:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param x2 right coordinate of the area
  88:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param y2 bottom coordinate of the area
  89:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
  90:lvgl/src/lv_draw/../lv_misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
  91:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
  92:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
  93:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * Copy an area
  94:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param dest pointer to the destination area
  95:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param src pointer to the source area
  96:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
  97:lvgl/src/lv_draw/../lv_misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
  98:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
  99:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     _lv_memcpy_small(dest, src, sizeof(lv_area_t));
 100:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 101:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
 102:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
 103:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * Get the width of an area
 104:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param area_p pointer to an area
 105:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 106:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 467              		.loc 2 107 26 is_stmt 1 view .LVU151
 468              	.LBB103:
 108:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 469              		.loc 2 109 5 view .LVU152
 470              		.loc 2 109 31 is_stmt 0 view .LVU153
 471 002a 1FFA8CFE 		uxth	lr, ip
 472              		.loc 2 109 44 view .LVU154
 473 002e B5B2     		uxth	r5, r6
 474              		.loc 2 109 36 view .LVU155
 475 0030 AEEB0505 		sub	r5, lr, r5
 476 0034 ADB2     		uxth	r5, r5
 477              		.loc 2 109 49 view .LVU156
 478 0036 0135     		adds	r5, r5, #1
 479              		.loc 2 109 12 view .LVU157
 480 0038 2DB2     		sxth	r5, r5
 481              	.LVL55:
 482              		.loc 2 109 12 view .LVU158
 483              	.LBE103:
 484              	.LBE102:
1184:lvgl/src/lv_draw/lv_draw_mask.c **** 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 34


 485              		.loc 1 1184 13 view .LVU159
 486 003a 05FB0245 		mla	r5, r5, r2, r4
 487              	.LVL56:
1186:lvgl/src/lv_draw/lv_draw_mask.c **** 
 488              		.loc 1 1186 5 is_stmt 1 view .LVU160
1186:lvgl/src/lv_draw/lv_draw_mask.c **** 
 489              		.loc 1 1186 7 is_stmt 0 view .LVU161
 490 003e 6745     		cmp	r7, ip
 491 0040 08DD     		ble	.L37
1186:lvgl/src/lv_draw/lv_draw_mask.c **** 
 492              		.loc 1 1186 40 is_stmt 1 discriminator 1 view .LVU162
1186:lvgl/src/lv_draw/lv_draw_mask.c **** 
 493              		.loc 1 1186 53 is_stmt 0 discriminator 1 view .LVU163
 494 0042 9AB2     		uxth	r2, r3
 495 0044 5318     		adds	r3, r2, r1
 496              	.LVL57:
1186:lvgl/src/lv_draw/lv_draw_mask.c **** 
 497              		.loc 1 1186 53 discriminator 1 view .LVU164
 498 0046 9BB2     		uxth	r3, r3
1186:lvgl/src/lv_draw/lv_draw_mask.c **** 
 499              		.loc 1 1186 78 discriminator 1 view .LVU165
 500 0048 AEEB0303 		sub	r3, lr, r3
1186:lvgl/src/lv_draw/lv_draw_mask.c **** 
 501              		.loc 1 1186 44 discriminator 1 view .LVU166
 502 004c 12FA83F3 		uxtah	r3, r2, r3
 503 0050 0133     		adds	r3, r3, #1
 504 0052 1BB2     		sxth	r3, r3
 505              	.LVL58:
 506              	.L37:
1188:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t x_ofs = 0;
 507              		.loc 1 1188 5 is_stmt 1 view .LVU167
1188:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t x_ofs = 0;
 508              		.loc 1 1188 7 is_stmt 0 view .LVU168
 509 0054 8E42     		cmp	r6, r1
 510 0056 05DD     		ble	.L38
 511              	.LBB104:
1189:lvgl/src/lv_draw/lv_draw_mask.c ****         x_ofs = p->cfg.coords.x1 - abs_x;
 512              		.loc 1 1189 9 is_stmt 1 view .LVU169
 513              	.LVL59:
1190:lvgl/src/lv_draw/lv_draw_mask.c ****         len -= x_ofs;
 514              		.loc 1 1190 9 view .LVU170
1190:lvgl/src/lv_draw/lv_draw_mask.c ****         len -= x_ofs;
 515              		.loc 1 1190 15 is_stmt 0 view .LVU171
 516 0058 711A     		subs	r1, r6, r1
 517              	.LVL60:
1191:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf += x_ofs;
 518              		.loc 1 1191 9 is_stmt 1 view .LVU172
1191:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf += x_ofs;
 519              		.loc 1 1191 13 is_stmt 0 view .LVU173
 520 005a 5B1A     		subs	r3, r3, r1
 521              	.LVL61:
1191:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf += x_ofs;
 522              		.loc 1 1191 13 view .LVU174
 523 005c 1BB2     		sxth	r3, r3
 524              	.LVL62:
1192:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 525              		.loc 1 1192 9 is_stmt 1 view .LVU175
ARM GAS  D:\Temp\ccPmLtDk.s 			page 35


1192:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 526              		.loc 1 1192 18 is_stmt 0 view .LVU176
 527 005e 0844     		add	r0, r0, r1
 528              	.LVL63:
 529              	.L39:
1192:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 530              		.loc 1 1192 18 view .LVU177
 531              	.LBE104:
1198:lvgl/src/lv_draw/lv_draw_mask.c ****     for(i = 0; i < len; i++) {
 532              		.loc 1 1198 5 is_stmt 1 view .LVU178
1199:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[i] = mask_mix(mask_buf[i], map_tmp[i]);
 533              		.loc 1 1199 5 view .LVU179
1199:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[i] = mask_mix(mask_buf[i], map_tmp[i]);
 534              		.loc 1 1199 11 is_stmt 0 view .LVU180
 535 0060 0022     		movs	r2, #0
1199:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[i] = mask_mix(mask_buf[i], map_tmp[i]);
 536              		.loc 1 1199 5 view .LVU181
 537 0062 0CE0     		b	.L40
 538              	.LVL64:
 539              	.L38:
1195:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 540              		.loc 1 1195 9 is_stmt 1 view .LVU182
1195:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 541              		.loc 1 1195 27 is_stmt 0 view .LVU183
 542 0064 891B     		subs	r1, r1, r6
 543              	.LVL65:
1195:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 544              		.loc 1 1195 17 view .LVU184
 545 0066 0D44     		add	r5, r5, r1
 546              	.LVL66:
1195:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 547              		.loc 1 1195 17 view .LVU185
 548 0068 FAE7     		b	.L39
 549              	.LVL67:
 550              	.L50:
 551              	.LBB105:
 552              	.LBB106:
 553              		.loc 1 1211 5 is_stmt 1 view .LVU186
 554              		.loc 1 1211 12 is_stmt 0 view .LVU187
 555 006a 01FB04F1 		mul	r1, r1, r4
 556              	.LVL68:
 557              		.loc 1 1211 12 view .LVU188
 558 006e 01EB0124 		add	r4, r1, r1, lsl #8
 559              	.LVL69:
 560              		.loc 1 1211 12 view .LVU189
 561 0072 01EBC411 		add	r1, r1, r4, lsl #7
 562 0076 C1F3C754 		ubfx	r4, r1, #23, #8
 563              	.L41:
 564              	.LVL70:
 565              		.loc 1 1211 12 view .LVU190
 566              	.LBE106:
 567              	.LBE105:
1200:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 568              		.loc 1 1200 21 view .LVU191
 569 007a 3470     		strb	r4, [r6]
1199:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[i] = mask_mix(mask_buf[i], map_tmp[i]);
 570              		.loc 1 1199 26 view .LVU192
ARM GAS  D:\Temp\ccPmLtDk.s 			page 36


 571 007c 0132     		adds	r2, r2, #1
 572              	.LVL71:
 573              	.L40:
1199:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[i] = mask_mix(mask_buf[i], map_tmp[i]);
 574              		.loc 1 1199 5 discriminator 1 view .LVU193
 575 007e 9342     		cmp	r3, r2
 576 0080 08DD     		ble	.L49
1200:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 577              		.loc 1 1200 9 is_stmt 1 discriminator 3 view .LVU194
1200:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 578              		.loc 1 1200 40 is_stmt 0 discriminator 3 view .LVU195
 579 0082 8618     		adds	r6, r0, r2
1200:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 580              		.loc 1 1200 23 discriminator 3 view .LVU196
 581 0084 845C     		ldrb	r4, [r0, r2]	@ zero_extendqisi2
 582 0086 A95C     		ldrb	r1, [r5, r2]	@ zero_extendqisi2
 583              	.LVL72:
 584              	.LBB108:
 585              	.LBI105:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 586              		.loc 1 1206 46 is_stmt 1 discriminator 3 view .LVU197
 587              	.LBB107:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 588              		.loc 1 1208 5 discriminator 3 view .LVU198
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 589              		.loc 1 1208 7 is_stmt 0 discriminator 3 view .LVU199
 590 0088 FC29     		cmp	r1, #252
 591 008a F6D8     		bhi	.L41
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 592              		.loc 1 1209 5 is_stmt 1 view .LVU200
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 593              		.loc 1 1209 7 is_stmt 0 view .LVU201
 594 008c 0229     		cmp	r1, #2
 595 008e ECD8     		bhi	.L50
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 596              		.loc 1 1209 39 view .LVU202
 597 0090 0024     		movs	r4, #0
 598              	.LVL73:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 599              		.loc 1 1209 39 view .LVU203
 600 0092 F2E7     		b	.L41
 601              	.LVL74:
 602              	.L49:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 603              		.loc 1 1209 39 view .LVU204
 604              	.LBE107:
 605              	.LBE108:
1203:lvgl/src/lv_draw/lv_draw_mask.c **** }
 606              		.loc 1 1203 12 view .LVU205
 607 0094 0220     		movs	r0, #2
 608              	.LVL75:
1203:lvgl/src/lv_draw/lv_draw_mask.c **** }
 609              		.loc 1 1203 12 view .LVU206
 610 0096 00E0     		b	.L36
 611              	.LVL76:
 612              	.L43:
1177:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_y > p->cfg.coords.y2) return LV_DRAW_MASK_RES_FULL_COVER;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 37


 613              		.loc 1 1177 41 view .LVU207
 614 0098 0120     		movs	r0, #1
 615              	.LVL77:
 616              	.L36:
1204:lvgl/src/lv_draw/lv_draw_mask.c **** 
 617              		.loc 1 1204 1 view .LVU208
 618 009a F0BD     		pop	{r4, r5, r6, r7, pc}
 619              	.LVL78:
 620              	.L44:
1178:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x + len < p->cfg.coords.x1) return LV_DRAW_MASK_RES_FULL_COVER;
 621              		.loc 1 1178 41 view .LVU209
 622 009c 0120     		movs	r0, #1
 623              	.LVL79:
1178:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x + len < p->cfg.coords.x1) return LV_DRAW_MASK_RES_FULL_COVER;
 624              		.loc 1 1178 41 view .LVU210
 625 009e FCE7     		b	.L36
 626              	.LVL80:
 627              	.L45:
1179:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x > p->cfg.coords.x2) return LV_DRAW_MASK_RES_FULL_COVER;
 628              		.loc 1 1179 47 view .LVU211
 629 00a0 0120     		movs	r0, #1
 630              	.LVL81:
1179:lvgl/src/lv_draw/lv_draw_mask.c ****     if(abs_x > p->cfg.coords.x2) return LV_DRAW_MASK_RES_FULL_COVER;
 631              		.loc 1 1179 47 view .LVU212
 632 00a2 FAE7     		b	.L36
 633              	.LVL82:
 634              	.L46:
1180:lvgl/src/lv_draw/lv_draw_mask.c **** 
 635              		.loc 1 1180 41 view .LVU213
 636 00a4 0120     		movs	r0, #1
 637              	.LVL83:
1180:lvgl/src/lv_draw/lv_draw_mask.c **** 
 638              		.loc 1 1180 41 view .LVU214
 639 00a6 F8E7     		b	.L36
 640              		.cfi_endproc
 641              	.LFE184:
 643              		.section	.text.line_mask_flat,"ax",%progbits
 644              		.align	1
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv4-sp-d16
 650              	line_mask_flat:
 651              	.LVL84:
 652              	.LFB179:
 484:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t y_at_x;
 653              		.loc 1 484 1 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ args = 4, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 484:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t y_at_x;
 657              		.loc 1 484 1 is_stmt 0 view .LVU216
 658 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 659              	.LCFI4:
 660              		.cfi_def_cfa_offset 24
 661              		.cfi_offset 3, -24
 662              		.cfi_offset 4, -20
ARM GAS  D:\Temp\ccPmLtDk.s 			page 38


 663              		.cfi_offset 5, -16
 664              		.cfi_offset 6, -12
 665              		.cfi_offset 7, -8
 666              		.cfi_offset 14, -4
 667 0002 069D     		ldr	r5, [sp, #24]
 485:lvgl/src/lv_draw/lv_draw_mask.c ****     y_at_x = (int32_t)((int32_t)p->yx_steep * abs_x) >> 10;
 668              		.loc 1 485 5 is_stmt 1 view .LVU217
 486:lvgl/src/lv_draw/lv_draw_mask.c **** 
 669              		.loc 1 486 5 view .LVU218
 486:lvgl/src/lv_draw/lv_draw_mask.c **** 
 670              		.loc 1 486 34 is_stmt 0 view .LVU219
 671 0004 EC69     		ldr	r4, [r5, #28]
 486:lvgl/src/lv_draw/lv_draw_mask.c **** 
 672              		.loc 1 486 14 view .LVU220
 673 0006 01FB04F6 		mul	r6, r1, r4
 486:lvgl/src/lv_draw/lv_draw_mask.c **** 
 674              		.loc 1 486 12 view .LVU221
 675 000a B612     		asrs	r6, r6, #10
 676              	.LVL85:
 488:lvgl/src/lv_draw/lv_draw_mask.c ****         if(y_at_x > abs_y) {
 677              		.loc 1 488 5 is_stmt 1 view .LVU222
 488:lvgl/src/lv_draw/lv_draw_mask.c ****         if(y_at_x > abs_y) {
 678              		.loc 1 488 7 is_stmt 0 view .LVU223
 679 000c 002C     		cmp	r4, #0
 680 000e 09DD     		ble	.L52
 489:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 681              		.loc 1 489 9 is_stmt 1 view .LVU224
 489:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 682              		.loc 1 489 11 is_stmt 0 view .LVU225
 683 0010 B242     		cmp	r2, r6
 684 0012 11DA     		bge	.L53
 490:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_FULL_COVER;
 685              		.loc 1 490 13 is_stmt 1 view .LVU226
 490:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_FULL_COVER;
 686              		.loc 1 490 16 is_stmt 0 view .LVU227
 687 0014 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 688              	.LVL86:
 490:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_FULL_COVER;
 689              		.loc 1 490 15 view .LVU228
 690 0018 13F0020F 		tst	r3, #2
 691 001c 00F0E480 		beq	.L75
 491:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 692              		.loc 1 491 24 view .LVU229
 693 0020 0120     		movs	r0, #1
 694              	.LVL87:
 695              	.L54:
 594:lvgl/src/lv_draw/lv_draw_mask.c **** 
 696              		.loc 1 594 1 view .LVU230
 697 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 698              	.LVL88:
 699              	.L52:
 499:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 700              		.loc 1 499 9 is_stmt 1 view .LVU231
 499:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 701              		.loc 1 499 11 is_stmt 0 view .LVU232
 702 0024 B242     		cmp	r2, r6
 703 0026 07DD     		ble	.L53
ARM GAS  D:\Temp\ccPmLtDk.s 			page 39


 500:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_FULL_COVER;
 704              		.loc 1 500 13 is_stmt 1 view .LVU233
 500:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_FULL_COVER;
 705              		.loc 1 500 16 is_stmt 0 view .LVU234
 706 0028 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 707              	.LVL89:
 500:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_FULL_COVER;
 708              		.loc 1 500 15 view .LVU235
 709 002c 13F0020F 		tst	r3, #2
 710 0030 00F0DC80 		beq	.L76
 501:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 711              		.loc 1 501 24 view .LVU236
 712 0034 0120     		movs	r0, #1
 713              	.LVL90:
 501:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 714              		.loc 1 501 24 view .LVU237
 715 0036 F4E7     		b	.L54
 716              	.LVL91:
 717              	.L53:
 511:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->yx_steep > 0) {
 718              		.loc 1 511 5 is_stmt 1 view .LVU238
 511:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->yx_steep > 0) {
 719              		.loc 1 511 54 is_stmt 0 view .LVU239
 720 0038 1F46     		mov	r7, r3
 721 003a CE18     		adds	r6, r1, r3
 722              	.LVL92:
 511:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->yx_steep > 0) {
 723              		.loc 1 511 14 view .LVU240
 724 003c 06FB04F6 		mul	r6, r6, r4
 511:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->yx_steep > 0) {
 725              		.loc 1 511 12 view .LVU241
 726 0040 B612     		asrs	r6, r6, #10
 727              	.LVL93:
 512:lvgl/src/lv_draw/lv_draw_mask.c ****         if(y_at_x < abs_y) {
 728              		.loc 1 512 5 is_stmt 1 view .LVU242
 512:lvgl/src/lv_draw/lv_draw_mask.c ****         if(y_at_x < abs_y) {
 729              		.loc 1 512 7 is_stmt 0 view .LVU243
 730 0042 002C     		cmp	r4, #0
 731 0044 09DD     		ble	.L55
 513:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 732              		.loc 1 513 9 is_stmt 1 view .LVU244
 513:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 733              		.loc 1 513 11 is_stmt 0 view .LVU245
 734 0046 B242     		cmp	r2, r6
 735 0048 11DD     		ble	.L56
 514:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 736              		.loc 1 514 13 is_stmt 1 view .LVU246
 514:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 737              		.loc 1 514 16 is_stmt 0 view .LVU247
 738 004a 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 739              	.LVL94:
 514:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 740              		.loc 1 514 15 view .LVU248
 741 004e 13F0020F 		tst	r3, #2
 742 0052 00F0CD80 		beq	.L77
 515:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 743              		.loc 1 515 24 view .LVU249
ARM GAS  D:\Temp\ccPmLtDk.s 			page 40


 744 0056 0020     		movs	r0, #0
 745              	.LVL95:
 515:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 746              		.loc 1 515 24 view .LVU250
 747 0058 E3E7     		b	.L54
 748              	.LVL96:
 749              	.L55:
 523:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 750              		.loc 1 523 9 is_stmt 1 view .LVU251
 523:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) {
 751              		.loc 1 523 11 is_stmt 0 view .LVU252
 752 005a B242     		cmp	r2, r6
 753 005c 07DA     		bge	.L56
 524:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 754              		.loc 1 524 13 is_stmt 1 view .LVU253
 524:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 755              		.loc 1 524 16 is_stmt 0 view .LVU254
 756 005e 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 757              	.LVL97:
 524:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 758              		.loc 1 524 15 view .LVU255
 759 0062 13F0020F 		tst	r3, #2
 760 0066 00F0C580 		beq	.L78
 525:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 761              		.loc 1 525 24 view .LVU256
 762 006a 0020     		movs	r0, #0
 763              	.LVL98:
 525:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 764              		.loc 1 525 24 view .LVU257
 765 006c D9E7     		b	.L54
 766              	.LVL99:
 767              	.L56:
 533:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->yx_steep > 0) xe = ((abs_y << 8) * p->xy_steep) >> 10;
 768              		.loc 1 533 5 is_stmt 1 view .LVU258
 534:lvgl/src/lv_draw/lv_draw_mask.c ****     else xe = (((abs_y + 1) << 8) * p->xy_steep) >> 10;
 769              		.loc 1 534 5 view .LVU259
 534:lvgl/src/lv_draw/lv_draw_mask.c ****     else xe = (((abs_y + 1) << 8) * p->xy_steep) >> 10;
 770              		.loc 1 534 7 is_stmt 0 view .LVU260
 771 006e 002C     		cmp	r4, #0
 772 0070 39DD     		ble	.L57
 534:lvgl/src/lv_draw/lv_draw_mask.c ****     else xe = (((abs_y + 1) << 8) * p->xy_steep) >> 10;
 773              		.loc 1 534 25 is_stmt 1 discriminator 1 view .LVU261
 534:lvgl/src/lv_draw/lv_draw_mask.c ****     else xe = (((abs_y + 1) << 8) * p->xy_steep) >> 10;
 774              		.loc 1 534 38 is_stmt 0 discriminator 1 view .LVU262
 775 0072 1202     		lsls	r2, r2, #8
 776              	.LVL100:
 534:lvgl/src/lv_draw/lv_draw_mask.c ****     else xe = (((abs_y + 1) << 8) * p->xy_steep) >> 10;
 777              		.loc 1 534 47 discriminator 1 view .LVU263
 778 0074 AC69     		ldr	r4, [r5, #24]
 534:lvgl/src/lv_draw/lv_draw_mask.c ****     else xe = (((abs_y + 1) << 8) * p->xy_steep) >> 10;
 779              		.loc 1 534 44 discriminator 1 view .LVU264
 780 0076 04FB02F2 		mul	r2, r4, r2
 534:lvgl/src/lv_draw/lv_draw_mask.c ****     else xe = (((abs_y + 1) << 8) * p->xy_steep) >> 10;
 781              		.loc 1 534 28 discriminator 1 view .LVU265
 782 007a 9212     		asrs	r2, r2, #10
 783              	.LVL101:
 784              	.L58:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 41


 537:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xef = xe & 0xFF;
 785              		.loc 1 537 5 is_stmt 1 view .LVU266
 537:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xef = xe & 0xFF;
 786              		.loc 1 537 13 is_stmt 0 view .LVU267
 787 007c 4FEA222C 		asr	ip, r2, #8
 788              	.LVL102:
 538:lvgl/src/lv_draw/lv_draw_mask.c **** 
 789              		.loc 1 538 5 is_stmt 1 view .LVU268
 540:lvgl/src/lv_draw/lv_draw_mask.c ****     if(xef == 0) px_h = 255;
 790              		.loc 1 540 5 view .LVU269
 541:lvgl/src/lv_draw/lv_draw_mask.c ****     else px_h = 255 - (((255 - xef) * p->spx) >> 8);
 791              		.loc 1 541 5 view .LVU270
 541:lvgl/src/lv_draw/lv_draw_mask.c ****     else px_h = 255 - (((255 - xef) * p->spx) >> 8);
 792              		.loc 1 541 7 is_stmt 0 view .LVU271
 793 0080 12F0FF02 		ands	r2, r2, #255
 794              	.LVL103:
 541:lvgl/src/lv_draw/lv_draw_mask.c ****     else px_h = 255 - (((255 - xef) * p->spx) >> 8);
 795              		.loc 1 541 7 view .LVU272
 796 0084 36D0     		beq	.L79
 542:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t k = xei - abs_x;
 797              		.loc 1 542 10 is_stmt 1 view .LVU273
 542:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t k = xei - abs_x;
 798              		.loc 1 542 30 is_stmt 0 view .LVU274
 799 0086 C2F1FF06 		rsb	r6, r2, #255
 800              	.LVL104:
 542:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t k = xei - abs_x;
 801              		.loc 1 542 40 view .LVU275
 802 008a 6C6A     		ldr	r4, [r5, #36]
 542:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t k = xei - abs_x;
 803              		.loc 1 542 37 view .LVU276
 804 008c 04FB06F6 		mul	r6, r4, r6
 542:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t k = xei - abs_x;
 805              		.loc 1 542 47 view .LVU277
 806 0090 3612     		asrs	r6, r6, #8
 542:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t k = xei - abs_x;
 807              		.loc 1 542 15 view .LVU278
 808 0092 C6F1FF06 		rsb	r6, r6, #255
 809              	.LVL105:
 810              	.L59:
 543:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_opa_t m;
 811              		.loc 1 543 5 is_stmt 1 view .LVU279
 543:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_opa_t m;
 812              		.loc 1 543 13 is_stmt 0 view .LVU280
 813 0096 ACEB0101 		sub	r1, ip, r1
 814              	.LVL106:
 544:lvgl/src/lv_draw/lv_draw_mask.c **** 
 815              		.loc 1 544 5 is_stmt 1 view .LVU281
 546:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= 0 && k < len) {
 816              		.loc 1 546 5 view .LVU282
 546:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= 0 && k < len) {
 817              		.loc 1 546 7 is_stmt 0 view .LVU283
 818 009a 002A     		cmp	r2, #0
 819 009c 5DD0     		beq	.L80
 547:lvgl/src/lv_draw/lv_draw_mask.c ****             m = 255 - (((255 - xef) * (255 - px_h)) >> 9);
 820              		.loc 1 547 9 is_stmt 1 view .LVU284
 547:lvgl/src/lv_draw/lv_draw_mask.c ****             m = 255 - (((255 - xef) * (255 - px_h)) >> 9);
 821              		.loc 1 547 11 is_stmt 0 view .LVU285
ARM GAS  D:\Temp\ccPmLtDk.s 			page 42


 822 009e 0029     		cmp	r1, #0
 823 00a0 1FDB     		blt	.L61
 547:lvgl/src/lv_draw/lv_draw_mask.c ****             m = 255 - (((255 - xef) * (255 - px_h)) >> 9);
 824              		.loc 1 547 19 discriminator 1 view .LVU286
 825 00a2 8B42     		cmp	r3, r1
 826 00a4 1DDD     		ble	.L61
 548:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 827              		.loc 1 548 13 is_stmt 1 view .LVU287
 548:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 828              		.loc 1 548 30 is_stmt 0 view .LVU288
 829 00a6 C2F1FF02 		rsb	r2, r2, #255
 548:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 830              		.loc 1 548 44 view .LVU289
 831 00aa C6F1FF04 		rsb	r4, r6, #255
 548:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 832              		.loc 1 548 37 view .LVU290
 833 00ae 04FB02F2 		mul	r2, r4, r2
 548:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 834              		.loc 1 548 21 view .LVU291
 835 00b2 C2F34722 		ubfx	r2, r2, #9, #8
 548:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 836              		.loc 1 548 15 view .LVU292
 837 00b6 D443     		mvns	r4, r2
 838 00b8 E4B2     		uxtb	r4, r4
 839              	.LVL107:
 549:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 840              		.loc 1 549 13 is_stmt 1 view .LVU293
 549:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 841              		.loc 1 549 16 is_stmt 0 view .LVU294
 842 00ba 95F828C0 		ldrb	ip, [r5, #40]	@ zero_extendqisi2
 843              	.LVL108:
 549:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 844              		.loc 1 549 15 view .LVU295
 845 00be 1CF0020F 		tst	ip, #2
 846 00c2 00D1     		bne	.L62
 548:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 847              		.loc 1 548 15 view .LVU296
 848 00c4 2246     		mov	r2, r4
 849              	.L62:
 850              	.LVL109:
 550:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 851              		.loc 1 550 13 is_stmt 1 view .LVU297
 550:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 852              		.loc 1 550 27 is_stmt 0 view .LVU298
 853 00c6 445C     		ldrb	r4, [r0, r1]	@ zero_extendqisi2
 854              	.LVL110:
 855              	.LBB109:
 856              	.LBI109:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 857              		.loc 1 1206 46 is_stmt 1 view .LVU299
 858              	.LBB110:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 859              		.loc 1 1208 5 view .LVU300
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 860              		.loc 1 1208 7 is_stmt 0 view .LVU301
 861 00c8 FC2A     		cmp	r2, #252
 862 00ca 09D8     		bhi	.L63
ARM GAS  D:\Temp\ccPmLtDk.s 			page 43


1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 863              		.loc 1 1209 5 is_stmt 1 view .LVU302
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 864              		.loc 1 1209 7 is_stmt 0 view .LVU303
 865 00cc 022A     		cmp	r2, #2
 866 00ce 13D9     		bls	.L81
 867              		.loc 1 1211 5 is_stmt 1 view .LVU304
 868              		.loc 1 1211 12 is_stmt 0 view .LVU305
 869 00d0 04FB02F2 		mul	r2, r4, r2
 870              	.LVL111:
 871              		.loc 1 1211 12 view .LVU306
 872 00d4 02EB0224 		add	r4, r2, r2, lsl #8
 873              	.LVL112:
 874              		.loc 1 1211 12 view .LVU307
 875 00d8 02EBC412 		add	r2, r2, r4, lsl #7
 876 00dc C2F3C754 		ubfx	r4, r2, #23, #8
 877              	.L63:
 878              	.LVL113:
 879              		.loc 1 1211 12 view .LVU308
 880              	.LBE110:
 881              	.LBE109:
 550:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 882              		.loc 1 550 25 view .LVU309
 883 00e0 4454     		strb	r4, [r0, r1]
 884              	.L61:
 552:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 885              		.loc 1 552 9 is_stmt 1 view .LVU310
 552:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 886              		.loc 1 552 10 is_stmt 0 view .LVU311
 887 00e2 4A1C     		adds	r2, r1, #1
 888              	.LVL114:
 552:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 889              		.loc 1 552 10 view .LVU312
 890 00e4 19E0     		b	.L68
 891              	.LVL115:
 892              	.L57:
 535:lvgl/src/lv_draw/lv_draw_mask.c **** 
 893              		.loc 1 535 10 is_stmt 1 view .LVU313
 535:lvgl/src/lv_draw/lv_draw_mask.c **** 
 894              		.loc 1 535 24 is_stmt 0 view .LVU314
 895 00e6 0132     		adds	r2, r2, #1
 896              	.LVL116:
 535:lvgl/src/lv_draw/lv_draw_mask.c **** 
 897              		.loc 1 535 29 view .LVU315
 898 00e8 1202     		lsls	r2, r2, #8
 535:lvgl/src/lv_draw/lv_draw_mask.c **** 
 899              		.loc 1 535 38 view .LVU316
 900 00ea AC69     		ldr	r4, [r5, #24]
 535:lvgl/src/lv_draw/lv_draw_mask.c **** 
 901              		.loc 1 535 35 view .LVU317
 902 00ec 04FB02F2 		mul	r2, r4, r2
 535:lvgl/src/lv_draw/lv_draw_mask.c **** 
 903              		.loc 1 535 13 view .LVU318
 904 00f0 9212     		asrs	r2, r2, #10
 905              	.LVL117:
 535:lvgl/src/lv_draw/lv_draw_mask.c **** 
 906              		.loc 1 535 13 view .LVU319
ARM GAS  D:\Temp\ccPmLtDk.s 			page 44


 907 00f2 C3E7     		b	.L58
 908              	.LVL118:
 909              	.L79:
 541:lvgl/src/lv_draw/lv_draw_mask.c ****     else px_h = 255 - (((255 - xef) * p->spx) >> 8);
 910              		.loc 1 541 23 view .LVU320
 911 00f4 FF26     		movs	r6, #255
 912              	.LVL119:
 541:lvgl/src/lv_draw/lv_draw_mask.c ****     else px_h = 255 - (((255 - xef) * p->spx) >> 8);
 913              		.loc 1 541 23 view .LVU321
 914 00f6 CEE7     		b	.L59
 915              	.LVL120:
 916              	.L81:
 917              	.LBB112:
 918              	.LBB111:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 919              		.loc 1 1209 39 view .LVU322
 920 00f8 0024     		movs	r4, #0
 921              	.LVL121:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 922              		.loc 1 1209 39 view .LVU323
 923 00fa F1E7     		b	.L63
 924              	.LVL122:
 925              	.L89:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 926              		.loc 1 1209 39 view .LVU324
 927              	.LBE111:
 928              	.LBE112:
 929              	.LBB113:
 930              	.LBB114:
 931              		.loc 1 1211 5 is_stmt 1 view .LVU325
 932              		.loc 1 1211 12 is_stmt 0 view .LVU326
 933 00fc 04FB0CF4 		mul	r4, r4, ip
 934              	.LVL123:
 935              		.loc 1 1211 12 view .LVU327
 936 0100 04EB042C 		add	ip, r4, r4, lsl #8
 937              	.LVL124:
 938              		.loc 1 1211 12 view .LVU328
 939 0104 04EBCC14 		add	r4, r4, ip, lsl #7
 940 0108 C4F3C75C 		ubfx	ip, r4, #23, #8
 941              	.L66:
 942              	.LVL125:
 943              		.loc 1 1211 12 view .LVU329
 944              	.LBE114:
 945              	.LBE113:
 559:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 946              		.loc 1 559 25 view .LVU330
 947 010c 8EF800C0 		strb	ip, [lr]
 948              	.L64:
 561:lvgl/src/lv_draw/lv_draw_mask.c ****         k++;
 949              		.loc 1 561 9 is_stmt 1 view .LVU331
 561:lvgl/src/lv_draw/lv_draw_mask.c ****         k++;
 950              		.loc 1 561 18 is_stmt 0 view .LVU332
 951 0110 6C6A     		ldr	r4, [r5, #36]
 561:lvgl/src/lv_draw/lv_draw_mask.c ****         k++;
 952              		.loc 1 561 14 view .LVU333
 953 0112 361B     		subs	r6, r6, r4
 954              	.LVL126:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 45


 562:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= len) break;
 955              		.loc 1 562 9 is_stmt 1 view .LVU334
 562:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= len) break;
 956              		.loc 1 562 10 is_stmt 0 view .LVU335
 957 0114 0132     		adds	r2, r2, #1
 958              	.LVL127:
 563:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 959              		.loc 1 563 9 is_stmt 1 view .LVU336
 563:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 960              		.loc 1 563 11 is_stmt 0 view .LVU337
 961 0116 9742     		cmp	r7, r2
 962 0118 21DD     		ble	.L67
 963              	.L68:
 555:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= 0 && k < len) {
 964              		.loc 1 555 19 view .LVU338
 965 011a D5F824C0 		ldr	ip, [r5, #36]
 555:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= 0 && k < len) {
 966              		.loc 1 555 10 view .LVU339
 967 011e B445     		cmp	ip, r6
 968 0120 1DDA     		bge	.L67
 556:lvgl/src/lv_draw/lv_draw_mask.c ****             m = px_h - (p->spx >> 1);
 969              		.loc 1 556 9 is_stmt 1 view .LVU340
 556:lvgl/src/lv_draw/lv_draw_mask.c ****             m = px_h - (p->spx >> 1);
 970              		.loc 1 556 11 is_stmt 0 view .LVU341
 971 0122 002A     		cmp	r2, #0
 972 0124 F4DB     		blt	.L64
 556:lvgl/src/lv_draw/lv_draw_mask.c ****             m = px_h - (p->spx >> 1);
 973              		.loc 1 556 19 discriminator 1 view .LVU342
 974 0126 9742     		cmp	r7, r2
 975 0128 F2DD     		ble	.L64
 557:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 976              		.loc 1 557 13 is_stmt 1 view .LVU343
 557:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 977              		.loc 1 557 22 is_stmt 0 view .LVU344
 978 012a F4B2     		uxtb	r4, r6
 979 012c CCF3470C 		ubfx	ip, ip, #1, #8
 557:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 980              		.loc 1 557 15 view .LVU345
 981 0130 A4EB0C04 		sub	r4, r4, ip
 982 0134 E4B2     		uxtb	r4, r4
 983              	.LVL128:
 558:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 984              		.loc 1 558 13 is_stmt 1 view .LVU346
 558:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 985              		.loc 1 558 16 is_stmt 0 view .LVU347
 986 0136 95F828C0 		ldrb	ip, [r5, #40]	@ zero_extendqisi2
 558:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 987              		.loc 1 558 15 view .LVU348
 988 013a 1CF0020F 		tst	ip, #2
 989 013e 01D0     		beq	.L65
 558:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 990              		.loc 1 558 24 is_stmt 1 discriminator 1 view .LVU349
 558:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 991              		.loc 1 558 26 is_stmt 0 discriminator 1 view .LVU350
 992 0140 E443     		mvns	r4, r4
 993              	.LVL129:
 558:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
ARM GAS  D:\Temp\ccPmLtDk.s 			page 46


 994              		.loc 1 558 26 discriminator 1 view .LVU351
 995 0142 E4B2     		uxtb	r4, r4
 996              	.LVL130:
 997              	.L65:
 559:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 998              		.loc 1 559 13 is_stmt 1 view .LVU352
 559:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 999              		.loc 1 559 44 is_stmt 0 view .LVU353
 1000 0144 00EB020E 		add	lr, r0, r2
 559:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1001              		.loc 1 559 27 view .LVU354
 1002 0148 10F802C0 		ldrb	ip, [r0, r2]	@ zero_extendqisi2
 1003              	.LVL131:
 1004              	.LBB116:
 1005              	.LBI113:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 1006              		.loc 1 1206 46 is_stmt 1 view .LVU355
 1007              	.LBB115:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1008              		.loc 1 1208 5 view .LVU356
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1009              		.loc 1 1208 7 is_stmt 0 view .LVU357
 1010 014c FC2C     		cmp	r4, #252
 1011 014e DDD8     		bhi	.L66
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1012              		.loc 1 1209 5 is_stmt 1 view .LVU358
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1013              		.loc 1 1209 7 is_stmt 0 view .LVU359
 1014 0150 022C     		cmp	r4, #2
 1015 0152 D3D8     		bhi	.L89
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1016              		.loc 1 1209 39 view .LVU360
 1017 0154 4FF0000C 		mov	ip, #0
 1018              	.LVL132:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1019              		.loc 1 1209 39 view .LVU361
 1020 0158 D8E7     		b	.L66
 1021              	.LVL133:
 1022              	.L80:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1023              		.loc 1 1209 39 view .LVU362
 1024              	.LBE115:
 1025              	.LBE116:
 543:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_opa_t m;
 1026              		.loc 1 543 13 view .LVU363
 1027 015a 0A46     		mov	r2, r1
 1028 015c DDE7     		b	.L68
 1029              	.LVL134:
 1030              	.L67:
 566:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t x_inters = (px_h * p->xy_steep) >> 10;
 1031              		.loc 1 566 5 is_stmt 1 view .LVU364
 566:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t x_inters = (px_h * p->xy_steep) >> 10;
 1032              		.loc 1 566 7 is_stmt 0 view .LVU365
 1033 015e 9342     		cmp	r3, r2
 1034 0160 22DD     		ble	.L70
 566:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t x_inters = (px_h * p->xy_steep) >> 10;
 1035              		.loc 1 566 16 discriminator 1 view .LVU366
ARM GAS  D:\Temp\ccPmLtDk.s 			page 47


 1036 0162 002A     		cmp	r2, #0
 1037 0164 20DB     		blt	.L70
 1038              	.LBB117:
 567:lvgl/src/lv_draw/lv_draw_mask.c ****         m = (x_inters * px_h) >> 9;
 1039              		.loc 1 567 9 is_stmt 1 view .LVU367
 567:lvgl/src/lv_draw/lv_draw_mask.c ****         m = (x_inters * px_h) >> 9;
 1040              		.loc 1 567 37 is_stmt 0 view .LVU368
 1041 0166 AC69     		ldr	r4, [r5, #24]
 567:lvgl/src/lv_draw/lv_draw_mask.c ****         m = (x_inters * px_h) >> 9;
 1042              		.loc 1 567 34 view .LVU369
 1043 0168 06FB04F4 		mul	r4, r6, r4
 567:lvgl/src/lv_draw/lv_draw_mask.c ****         m = (x_inters * px_h) >> 9;
 1044              		.loc 1 567 17 view .LVU370
 1045 016c A412     		asrs	r4, r4, #10
 1046              	.LVL135:
 568:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->yx_steep < 0) m = 255 - m;
 1047              		.loc 1 568 9 is_stmt 1 view .LVU371
 568:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->yx_steep < 0) m = 255 - m;
 1048              		.loc 1 568 23 is_stmt 0 view .LVU372
 1049 016e 04FB06F6 		mul	r6, r4, r6
 1050              	.LVL136:
 568:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->yx_steep < 0) m = 255 - m;
 1051              		.loc 1 568 11 view .LVU373
 1052 0172 C6F34726 		ubfx	r6, r6, #9, #8
 1053              	.LVL137:
 569:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) m = 255 - m;
 1054              		.loc 1 569 9 is_stmt 1 view .LVU374
 569:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) m = 255 - m;
 1055              		.loc 1 569 13 is_stmt 0 view .LVU375
 1056 0176 EC69     		ldr	r4, [r5, #28]
 1057              	.LVL138:
 569:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) m = 255 - m;
 1058              		.loc 1 569 11 view .LVU376
 1059 0178 002C     		cmp	r4, #0
 1060 017a 20DB     		blt	.L90
 1061              	.L71:
 570:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[k] = mask_mix(mask_buf[k], m);
 1062              		.loc 1 570 9 is_stmt 1 view .LVU377
 570:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[k] = mask_mix(mask_buf[k], m);
 1063              		.loc 1 570 12 is_stmt 0 view .LVU378
 1064 017c 95F82840 		ldrb	r4, [r5, #40]	@ zero_extendqisi2
 570:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[k] = mask_mix(mask_buf[k], m);
 1065              		.loc 1 570 11 view .LVU379
 1066 0180 14F0020F 		tst	r4, #2
 1067 0184 01D0     		beq	.L72
 570:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[k] = mask_mix(mask_buf[k], m);
 1068              		.loc 1 570 20 is_stmt 1 discriminator 1 view .LVU380
 570:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[k] = mask_mix(mask_buf[k], m);
 1069              		.loc 1 570 22 is_stmt 0 discriminator 1 view .LVU381
 1070 0186 F643     		mvns	r6, r6
 1071              	.LVL139:
 570:lvgl/src/lv_draw/lv_draw_mask.c ****         mask_buf[k] = mask_mix(mask_buf[k], m);
 1072              		.loc 1 570 22 discriminator 1 view .LVU382
 1073 0188 F6B2     		uxtb	r6, r6
 1074              	.LVL140:
 1075              	.L72:
 571:lvgl/src/lv_draw/lv_draw_mask.c ****     }
ARM GAS  D:\Temp\ccPmLtDk.s 			page 48


 1076              		.loc 1 571 9 is_stmt 1 view .LVU383
 571:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 1077              		.loc 1 571 40 is_stmt 0 view .LVU384
 1078 018a 8718     		adds	r7, r0, r2
 571:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 1079              		.loc 1 571 23 view .LVU385
 1080 018c 845C     		ldrb	r4, [r0, r2]	@ zero_extendqisi2
 1081              	.LVL141:
 1082              	.LBB118:
 1083              	.LBI118:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 1084              		.loc 1 1206 46 is_stmt 1 view .LVU386
 1085              	.LBB119:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1086              		.loc 1 1208 5 view .LVU387
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1087              		.loc 1 1208 7 is_stmt 0 view .LVU388
 1088 018e FC2E     		cmp	r6, #252
 1089 0190 09D8     		bhi	.L73
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1090              		.loc 1 1209 5 is_stmt 1 view .LVU389
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1091              		.loc 1 1209 7 is_stmt 0 view .LVU390
 1092 0192 022E     		cmp	r6, #2
 1093 0194 16D9     		bls	.L83
 1094              		.loc 1 1211 5 is_stmt 1 view .LVU391
 1095              		.loc 1 1211 12 is_stmt 0 view .LVU392
 1096 0196 06FB04F6 		mul	r6, r6, r4
 1097              	.LVL142:
 1098              		.loc 1 1211 12 view .LVU393
 1099 019a 06EB0624 		add	r4, r6, r6, lsl #8
 1100              	.LVL143:
 1101              		.loc 1 1211 12 view .LVU394
 1102 019e 06EBC416 		add	r6, r6, r4, lsl #7
 1103 01a2 C6F3C754 		ubfx	r4, r6, #23, #8
 1104              	.L73:
 1105              	.LVL144:
 1106              		.loc 1 1211 12 view .LVU395
 1107              	.LBE119:
 1108              	.LBE118:
 571:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 1109              		.loc 1 571 21 view .LVU396
 1110 01a6 3C70     		strb	r4, [r7]
 1111              	.L70:
 571:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 1112              		.loc 1 571 21 view .LVU397
 1113              	.LBE117:
 574:lvgl/src/lv_draw/lv_draw_mask.c ****         k = xei - abs_x;
 1114              		.loc 1 574 5 is_stmt 1 view .LVU398
 574:lvgl/src/lv_draw/lv_draw_mask.c ****         k = xei - abs_x;
 1115              		.loc 1 574 8 is_stmt 0 view .LVU399
 1116 01a8 95F82840 		ldrb	r4, [r5, #40]	@ zero_extendqisi2
 574:lvgl/src/lv_draw/lv_draw_mask.c ****         k = xei - abs_x;
 1117              		.loc 1 574 7 view .LVU400
 1118 01ac 14F0020F 		tst	r4, #2
 1119 01b0 0ED0     		beq	.L74
 575:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k > len) {
ARM GAS  D:\Temp\ccPmLtDk.s 			page 49


 1120              		.loc 1 575 9 is_stmt 1 view .LVU401
 1121              	.LVL145:
 576:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 1122              		.loc 1 576 9 view .LVU402
 576:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 1123              		.loc 1 576 11 is_stmt 0 view .LVU403
 1124 01b2 8B42     		cmp	r3, r1
 1125 01b4 20DB     		blt	.L84
 579:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[0], k);
 1126              		.loc 1 579 9 is_stmt 1 view .LVU404
 579:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[0], k);
 1127              		.loc 1 579 11 is_stmt 0 view .LVU405
 1128 01b6 0029     		cmp	r1, #0
 1129 01b8 06DA     		bge	.L91
 593:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1130              		.loc 1 593 12 view .LVU406
 1131 01ba 0220     		movs	r0, #2
 1132              	.LVL146:
 593:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1133              		.loc 1 593 12 view .LVU407
 1134 01bc 31E7     		b	.L54
 1135              	.LVL147:
 1136              	.L90:
 1137              	.LBB122:
 569:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) m = 255 - m;
 1138              		.loc 1 569 29 is_stmt 1 discriminator 1 view .LVU408
 569:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) m = 255 - m;
 1139              		.loc 1 569 31 is_stmt 0 discriminator 1 view .LVU409
 1140 01be F643     		mvns	r6, r6
 1141              	.LVL148:
 569:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) m = 255 - m;
 1142              		.loc 1 569 31 discriminator 1 view .LVU410
 1143 01c0 F6B2     		uxtb	r6, r6
 1144              	.LVL149:
 569:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) m = 255 - m;
 1145              		.loc 1 569 31 discriminator 1 view .LVU411
 1146 01c2 DBE7     		b	.L71
 1147              	.LVL150:
 1148              	.L83:
 1149              	.LBB121:
 1150              	.LBB120:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1151              		.loc 1 1209 39 view .LVU412
 1152 01c4 0024     		movs	r4, #0
 1153              	.LVL151:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1154              		.loc 1 1209 39 view .LVU413
 1155 01c6 EEE7     		b	.L73
 1156              	.LVL152:
 1157              	.L91:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1158              		.loc 1 1209 39 view .LVU414
 1159              	.LBE120:
 1160              	.LBE121:
 1161              	.LBE122:
 580:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1162              		.loc 1 580 13 is_stmt 1 view .LVU415
ARM GAS  D:\Temp\ccPmLtDk.s 			page 50


 1163 01c8 FFF7FEFF 		bl	_lv_memset_00
 1164              	.LVL153:
 593:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1165              		.loc 1 593 12 is_stmt 0 view .LVU416
 1166 01cc 0220     		movs	r0, #2
 1167 01ce 28E7     		b	.L54
 1168              	.LVL154:
 1169              	.L74:
 584:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k < 0) {
 1170              		.loc 1 584 9 is_stmt 1 view .LVU417
 585:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 1171              		.loc 1 585 9 view .LVU418
 585:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 1172              		.loc 1 585 11 is_stmt 0 view .LVU419
 1173 01d0 0132     		adds	r2, r2, #1
 1174              	.LVL155:
 585:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 1175              		.loc 1 585 11 view .LVU420
 1176 01d2 13D4     		bmi	.L86
 588:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[k], len - k);
 1177              		.loc 1 588 9 is_stmt 1 view .LVU421
 588:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[k], len - k);
 1178              		.loc 1 588 11 is_stmt 0 view .LVU422
 1179 01d4 9342     		cmp	r3, r2
 1180 01d6 01DA     		bge	.L92
 593:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1181              		.loc 1 593 12 view .LVU423
 1182 01d8 0220     		movs	r0, #2
 1183              	.LVL156:
 593:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1184              		.loc 1 593 12 view .LVU424
 1185 01da 22E7     		b	.L54
 1186              	.LVL157:
 1187              	.L92:
 589:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1188              		.loc 1 589 13 is_stmt 1 view .LVU425
 1189 01dc 991A     		subs	r1, r3, r2
 1190 01de 1044     		add	r0, r0, r2
 1191              	.LVL158:
 589:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1192              		.loc 1 589 13 is_stmt 0 view .LVU426
 1193 01e0 FFF7FEFF 		bl	_lv_memset_00
 1194              	.LVL159:
 593:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1195              		.loc 1 593 12 view .LVU427
 1196 01e4 0220     		movs	r0, #2
 1197 01e6 1CE7     		b	.L54
 1198              	.LVL160:
 1199              	.L75:
 494:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1200              		.loc 1 494 24 view .LVU428
 1201 01e8 0020     		movs	r0, #0
 1202              	.LVL161:
 494:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1203              		.loc 1 494 24 view .LVU429
 1204 01ea 1AE7     		b	.L54
 1205              	.LVL162:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 51


 1206              	.L76:
 504:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1207              		.loc 1 504 24 view .LVU430
 1208 01ec 0020     		movs	r0, #0
 1209              	.LVL163:
 504:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1210              		.loc 1 504 24 view .LVU431
 1211 01ee 18E7     		b	.L54
 1212              	.LVL164:
 1213              	.L77:
 518:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1214              		.loc 1 518 24 view .LVU432
 1215 01f0 0120     		movs	r0, #1
 1216              	.LVL165:
 518:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1217              		.loc 1 518 24 view .LVU433
 1218 01f2 16E7     		b	.L54
 1219              	.LVL166:
 1220              	.L78:
 528:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1221              		.loc 1 528 24 view .LVU434
 1222 01f4 0120     		movs	r0, #1
 1223              	.LVL167:
 528:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1224              		.loc 1 528 24 view .LVU435
 1225 01f6 14E7     		b	.L54
 1226              	.LVL168:
 1227              	.L84:
 577:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1228              		.loc 1 577 20 view .LVU436
 1229 01f8 0020     		movs	r0, #0
 1230              	.LVL169:
 577:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1231              		.loc 1 577 20 view .LVU437
 1232 01fa 12E7     		b	.L54
 1233              	.LVL170:
 1234              	.L86:
 586:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1235              		.loc 1 586 20 view .LVU438
 1236 01fc 0020     		movs	r0, #0
 1237              	.LVL171:
 586:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1238              		.loc 1 586 20 view .LVU439
 1239 01fe 10E7     		b	.L54
 1240              		.cfi_endproc
 1241              	.LFE179:
 1243              		.section	.text.line_mask_steep,"ax",%progbits
 1244              		.align	1
 1245              		.syntax unified
 1246              		.thumb
 1247              		.thumb_func
 1248              		.fpu fpv4-sp-d16
 1250              	line_mask_steep:
 1251              	.LVL172:
 1252              	.LFB180:
 599:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t k;
 1253              		.loc 1 599 1 is_stmt 1 view -0
ARM GAS  D:\Temp\ccPmLtDk.s 			page 52


 1254              		.cfi_startproc
 1255              		@ args = 4, pretend = 0, frame = 0
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 599:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t k;
 1257              		.loc 1 599 1 is_stmt 0 view .LVU441
 1258 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1259              	.LCFI5:
 1260              		.cfi_def_cfa_offset 24
 1261              		.cfi_offset 3, -24
 1262              		.cfi_offset 4, -20
 1263              		.cfi_offset 5, -16
 1264              		.cfi_offset 6, -12
 1265              		.cfi_offset 7, -8
 1266              		.cfi_offset 14, -4
 1267 0002 069E     		ldr	r6, [sp, #24]
 600:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t x_at_y;
 1268              		.loc 1 600 5 is_stmt 1 view .LVU442
 601:lvgl/src/lv_draw/lv_draw_mask.c ****     /* At the beginning of the mask if the limit line is greater then the mask's y.
 1269              		.loc 1 601 5 view .LVU443
 604:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->xy_steep > 0) x_at_y++;
 1270              		.loc 1 604 5 view .LVU444
 604:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->xy_steep > 0) x_at_y++;
 1271              		.loc 1 604 34 is_stmt 0 view .LVU445
 1272 0004 B569     		ldr	r5, [r6, #24]
 604:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->xy_steep > 0) x_at_y++;
 1273              		.loc 1 604 14 view .LVU446
 1274 0006 02FB05F4 		mul	r4, r2, r5
 604:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->xy_steep > 0) x_at_y++;
 1275              		.loc 1 604 12 view .LVU447
 1276 000a A412     		asrs	r4, r4, #10
 1277              	.LVL173:
 605:lvgl/src/lv_draw/lv_draw_mask.c ****     if(x_at_y < abs_x) {
 1278              		.loc 1 605 5 is_stmt 1 view .LVU448
 605:lvgl/src/lv_draw/lv_draw_mask.c ****     if(x_at_y < abs_x) {
 1279              		.loc 1 605 7 is_stmt 0 view .LVU449
 1280 000c 002D     		cmp	r5, #0
 1281 000e 0ADD     		ble	.L121
 605:lvgl/src/lv_draw/lv_draw_mask.c ****     if(x_at_y < abs_x) {
 1282              		.loc 1 605 25 is_stmt 1 discriminator 1 view .LVU450
 605:lvgl/src/lv_draw/lv_draw_mask.c ****     if(x_at_y < abs_x) {
 1283              		.loc 1 605 31 is_stmt 0 discriminator 1 view .LVU451
 1284 0010 671C     		adds	r7, r4, #1
 1285              	.LVL174:
 1286              	.L94:
 606:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) {
 1287              		.loc 1 606 5 is_stmt 1 view .LVU452
 606:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) {
 1288              		.loc 1 606 7 is_stmt 0 view .LVU453
 1289 0012 B942     		cmp	r1, r7
 1290 0014 09DD     		ble	.L95
 607:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 1291              		.loc 1 607 9 is_stmt 1 view .LVU454
 607:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 1292              		.loc 1 607 12 is_stmt 0 view .LVU455
 1293 0016 96F82830 		ldrb	r3, [r6, #40]	@ zero_extendqisi2
 1294              	.LVL175:
 607:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 53


 1295              		.loc 1 607 11 view .LVU456
 1296 001a 13F0020F 		tst	r3, #2
 1297 001e 00F05E81 		beq	.L122
 608:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1298              		.loc 1 608 20 view .LVU457
 1299 0022 0120     		movs	r0, #1
 1300              	.LVL176:
 1301              	.L96:
 736:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1302              		.loc 1 736 1 view .LVU458
 1303 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1304              	.LVL177:
 1305              	.L121:
 604:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->xy_steep > 0) x_at_y++;
 1306              		.loc 1 604 12 view .LVU459
 1307 0026 2746     		mov	r7, r4
 1308 0028 F3E7     		b	.L94
 1309              	.LVL178:
 1310              	.L95:
 617:lvgl/src/lv_draw/lv_draw_mask.c ****     if(x_at_y > abs_x + len) {
 1311              		.loc 1 617 5 is_stmt 1 view .LVU460
 618:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) {
 1312              		.loc 1 618 5 view .LVU461
 618:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) {
 1313              		.loc 1 618 23 is_stmt 0 view .LVU462
 1314 002a CF18     		adds	r7, r1, r3
 618:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->inv) {
 1315              		.loc 1 618 7 view .LVU463
 1316 002c A742     		cmp	r7, r4
 1317 002e 07DA     		bge	.L97
 619:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 1318              		.loc 1 619 9 is_stmt 1 view .LVU464
 619:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 1319              		.loc 1 619 12 is_stmt 0 view .LVU465
 1320 0030 96F82830 		ldrb	r3, [r6, #40]	@ zero_extendqisi2
 1321              	.LVL179:
 619:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 1322              		.loc 1 619 11 view .LVU466
 1323 0034 13F0020F 		tst	r3, #2
 1324 0038 00F05381 		beq	.L123
 620:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1325              		.loc 1 620 20 view .LVU467
 1326 003c 0020     		movs	r0, #0
 1327              	.LVL180:
 620:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1328              		.loc 1 620 20 view .LVU468
 1329 003e F1E7     		b	.L96
 1330              	.LVL181:
 1331              	.L97:
 628:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xsi = xs >> 8;
 1332              		.loc 1 628 5 is_stmt 1 view .LVU469
 628:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xsi = xs >> 8;
 1333              		.loc 1 628 26 is_stmt 0 view .LVU470
 1334 0040 1702     		lsls	r7, r2, #8
 628:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xsi = xs >> 8;
 1335              		.loc 1 628 32 view .LVU471
 1336 0042 07FB05F7 		mul	r7, r7, r5
ARM GAS  D:\Temp\ccPmLtDk.s 			page 54


 1337              	.LVL182:
 629:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xsf = xs & 0xFF;
 1338              		.loc 1 629 5 is_stmt 1 view .LVU472
 629:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xsf = xs & 0xFF;
 1339              		.loc 1 629 13 is_stmt 0 view .LVU473
 1340 0046 BC14     		asrs	r4, r7, #18
 1341              	.LVL183:
 630:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1342              		.loc 1 630 5 is_stmt 1 view .LVU474
 630:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1343              		.loc 1 630 13 is_stmt 0 view .LVU475
 1344 0048 C7F3872C 		ubfx	ip, r7, #10, #8
 1345              	.LVL184:
 633:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xei = xe >> 8;
 1346              		.loc 1 633 5 is_stmt 1 view .LVU476
 633:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xei = xe >> 8;
 1347              		.loc 1 633 27 is_stmt 0 view .LVU477
 1348 004c 0132     		adds	r2, r2, #1
 1349              	.LVL185:
 633:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xei = xe >> 8;
 1350              		.loc 1 633 32 view .LVU478
 1351 004e 1202     		lsls	r2, r2, #8
 1352              	.LVL186:
 633:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xei = xe >> 8;
 1353              		.loc 1 633 38 view .LVU479
 1354 0050 02FB05F2 		mul	r2, r2, r5
 1355              	.LVL187:
 634:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xef = xe & 0xFF;
 1356              		.loc 1 634 5 is_stmt 1 view .LVU480
 634:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t xef = xe & 0xFF;
 1357              		.loc 1 634 13 is_stmt 0 view .LVU481
 1358 0054 4FEAA24E 		asr	lr, r2, #18
 1359              	.LVL188:
 635:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1360              		.loc 1 635 5 is_stmt 1 view .LVU482
 635:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1361              		.loc 1 635 13 is_stmt 0 view .LVU483
 1362 0058 C2F38722 		ubfx	r2, r2, #10, #8
 1363              	.LVL189:
 637:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1364              		.loc 1 637 5 is_stmt 1 view .LVU484
 639:lvgl/src/lv_draw/lv_draw_mask.c ****     if(xsi != xei && (p->xy_steep < 0 && xsf == 0)) {
 1365              		.loc 1 639 5 view .LVU485
 639:lvgl/src/lv_draw/lv_draw_mask.c ****     if(xsi != xei && (p->xy_steep < 0 && xsf == 0)) {
 1366              		.loc 1 639 7 is_stmt 0 view .LVU486
 1367 005c 671A     		subs	r7, r4, r1
 1368              	.LVL190:
 640:lvgl/src/lv_draw/lv_draw_mask.c ****         xsf = 0xFF;
 1369              		.loc 1 640 5 is_stmt 1 view .LVU487
 640:lvgl/src/lv_draw/lv_draw_mask.c ****         xsf = 0xFF;
 1370              		.loc 1 640 7 is_stmt 0 view .LVU488
 1371 005e 7445     		cmp	r4, lr
 1372 0060 01D0     		beq	.L98
 640:lvgl/src/lv_draw/lv_draw_mask.c ****         xsf = 0xFF;
 1373              		.loc 1 640 19 discriminator 1 view .LVU489
 1374 0062 002D     		cmp	r5, #0
 1375 0064 66DB     		blt	.L144
ARM GAS  D:\Temp\ccPmLtDk.s 			page 55


 1376              	.LVL191:
 1377              	.L98:
 646:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= 0 && k < len) {
 1378              		.loc 1 646 5 is_stmt 1 view .LVU490
 646:lvgl/src/lv_draw/lv_draw_mask.c ****         if(k >= 0 && k < len) {
 1379              		.loc 1 646 7 is_stmt 0 view .LVU491
 1380 0066 7445     		cmp	r4, lr
 1381 0068 6CD0     		beq	.L145
 1382              	.LBB123:
 670:lvgl/src/lv_draw/lv_draw_mask.c ****         if(p->xy_steep < 0) {
 1383              		.loc 1 670 9 is_stmt 1 view .LVU492
 671:lvgl/src/lv_draw/lv_draw_mask.c ****             y_inters = (xsf * (-p->yx_steep)) >> 10;
 1384              		.loc 1 671 9 view .LVU493
 671:lvgl/src/lv_draw/lv_draw_mask.c ****             y_inters = (xsf * (-p->yx_steep)) >> 10;
 1385              		.loc 1 671 11 is_stmt 0 view .LVU494
 1386 006a 002D     		cmp	r5, #0
 1387 006c C0F2AD80 		blt	.L146
 1388              	.LBB124:
 704:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1389              		.loc 1 704 13 is_stmt 1 view .LVU495
 704:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1390              		.loc 1 704 30 is_stmt 0 view .LVU496
 1391 0070 CCF1FF02 		rsb	r2, ip, #255
 1392              	.LVL192:
 704:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1393              		.loc 1 704 40 view .LVU497
 1394 0074 F569     		ldr	r5, [r6, #28]
 704:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1395              		.loc 1 704 37 view .LVU498
 1396 0076 05FB02F5 		mul	r5, r5, r2
 704:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1397              		.loc 1 704 22 view .LVU499
 1398 007a AD12     		asrs	r5, r5, #10
 1399              	.LVL193:
 705:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = 255 - ((y_inters * (255 - xsf)) >> 9);
 1400              		.loc 1 705 13 is_stmt 1 view .LVU500
 705:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = 255 - ((y_inters * (255 - xsf)) >> 9);
 1401              		.loc 1 705 15 is_stmt 0 view .LVU501
 1402 007c 002F     		cmp	r7, #0
 1403 007e 22DB     		blt	.L113
 705:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = 255 - ((y_inters * (255 - xsf)) >> 9);
 1404              		.loc 1 705 23 discriminator 1 view .LVU502
 1405 0080 BB42     		cmp	r3, r7
 1406 0082 20DD     		ble	.L113
 706:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1407              		.loc 1 706 17 is_stmt 1 view .LVU503
 706:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1408              		.loc 1 706 38 is_stmt 0 view .LVU504
 1409 0084 05FB02F2 		mul	r2, r5, r2
 706:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1410              		.loc 1 706 25 view .LVU505
 1411 0088 C2F34722 		ubfx	r2, r2, #9, #8
 706:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1412              		.loc 1 706 19 view .LVU506
 1413 008c 6FEA020C 		mvn	ip, r2
 1414              	.LVL194:
 706:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 56


 1415              		.loc 1 706 19 view .LVU507
 1416 0090 5FFA8CFC 		uxtb	ip, ip
 1417              	.LVL195:
 707:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1418              		.loc 1 707 17 is_stmt 1 view .LVU508
 707:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1419              		.loc 1 707 20 is_stmt 0 view .LVU509
 1420 0094 96F828E0 		ldrb	lr, [r6, #40]	@ zero_extendqisi2
 1421              	.LVL196:
 707:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1422              		.loc 1 707 19 view .LVU510
 1423 0098 1EF0020F 		tst	lr, #2
 1424 009c 00D1     		bne	.L114
 706:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1425              		.loc 1 706 19 view .LVU511
 1426 009e 6246     		mov	r2, ip
 1427              	.L114:
 1428              	.LVL197:
 708:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1429              		.loc 1 708 17 is_stmt 1 view .LVU512
 708:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1430              		.loc 1 708 48 is_stmt 0 view .LVU513
 1431 00a0 00EB070E 		add	lr, r0, r7
 708:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1432              		.loc 1 708 31 view .LVU514
 1433 00a4 10F807C0 		ldrb	ip, [r0, r7]	@ zero_extendqisi2
 1434              	.LVL198:
 1435              	.LBB125:
 1436              	.LBI125:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 1437              		.loc 1 1206 46 is_stmt 1 view .LVU515
 1438              	.LBB126:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1439              		.loc 1 1208 5 view .LVU516
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1440              		.loc 1 1208 7 is_stmt 0 view .LVU517
 1441 00a8 FC2A     		cmp	r2, #252
 1442 00aa 0AD8     		bhi	.L115
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1443              		.loc 1 1209 5 is_stmt 1 view .LVU518
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1444              		.loc 1 1209 7 is_stmt 0 view .LVU519
 1445 00ac 022A     		cmp	r2, #2
 1446 00ae 40F2FF80 		bls	.L136
 1447              		.loc 1 1211 5 is_stmt 1 view .LVU520
 1448              		.loc 1 1211 12 is_stmt 0 view .LVU521
 1449 00b2 02FB0CF2 		mul	r2, r2, ip
 1450              	.LVL199:
 1451              		.loc 1 1211 12 view .LVU522
 1452 00b6 02EB022C 		add	ip, r2, r2, lsl #8
 1453              	.LVL200:
 1454              		.loc 1 1211 12 view .LVU523
 1455 00ba 02EBCC12 		add	r2, r2, ip, lsl #7
 1456 00be C2F3C75C 		ubfx	ip, r2, #23, #8
 1457              	.L115:
 1458              	.LVL201:
 1459              		.loc 1 1211 12 view .LVU524
ARM GAS  D:\Temp\ccPmLtDk.s 			page 57


 1460              	.LBE126:
 1461              	.LBE125:
 708:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1462              		.loc 1 708 29 view .LVU525
 1463 00c2 8EF800C0 		strb	ip, [lr]
 1464              	.L113:
 711:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1465              		.loc 1 711 13 is_stmt 1 view .LVU526
 1466              	.LVL202:
 713:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1467              		.loc 1 713 13 view .LVU527
 713:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1468              		.loc 1 713 38 is_stmt 0 view .LVU528
 1469 00c6 C5F1FF05 		rsb	r5, r5, #255
 1470              	.LVL203:
 713:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1471              		.loc 1 713 53 view .LVU529
 1472 00ca B269     		ldr	r2, [r6, #24]
 713:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1473              		.loc 1 713 50 view .LVU530
 1474 00cc 02FB05F2 		mul	r2, r2, r5
 713:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1475              		.loc 1 713 21 view .LVU531
 1476 00d0 9212     		asrs	r2, r2, #10
 1477              	.LVL204:
 714:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = ((255 - y_inters) * x_inters) >> 9;
 1478              		.loc 1 714 13 is_stmt 1 view .LVU532
 714:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = ((255 - y_inters) * x_inters) >> 9;
 1479              		.loc 1 714 15 is_stmt 0 view .LVU533
 1480 00d2 17F1010C 		adds	ip, r7, #1
 1481              	.LVL205:
 714:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = ((255 - y_inters) * x_inters) >> 9;
 1482              		.loc 1 714 15 view .LVU534
 1483 00d6 1DD4     		bmi	.L116
 714:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = ((255 - y_inters) * x_inters) >> 9;
 1484              		.loc 1 714 23 discriminator 1 view .LVU535
 1485 00d8 6345     		cmp	r3, ip
 1486 00da 1BDD     		ble	.L116
 715:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1487              		.loc 1 715 17 is_stmt 1 view .LVU536
 715:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1488              		.loc 1 715 39 is_stmt 0 view .LVU537
 1489 00dc 02FB05F2 		mul	r2, r2, r5
 1490              	.LVL206:
 715:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1491              		.loc 1 715 19 view .LVU538
 1492 00e0 C2F34722 		ubfx	r2, r2, #9, #8
 1493              	.LVL207:
 716:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1494              		.loc 1 716 17 is_stmt 1 view .LVU539
 716:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1495              		.loc 1 716 20 is_stmt 0 view .LVU540
 1496 00e4 96F82850 		ldrb	r5, [r6, #40]	@ zero_extendqisi2
 1497              	.LVL208:
 716:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1498              		.loc 1 716 19 view .LVU541
 1499 00e8 15F0020F 		tst	r5, #2
ARM GAS  D:\Temp\ccPmLtDk.s 			page 58


 1500 00ec 01D0     		beq	.L117
 716:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1501              		.loc 1 716 28 is_stmt 1 discriminator 1 view .LVU542
 716:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1502              		.loc 1 716 30 is_stmt 0 discriminator 1 view .LVU543
 1503 00ee D243     		mvns	r2, r2
 1504              	.LVL209:
 716:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1505              		.loc 1 716 30 discriminator 1 view .LVU544
 1506 00f0 D2B2     		uxtb	r2, r2
 1507              	.LVL210:
 1508              	.L117:
 717:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1509              		.loc 1 717 17 is_stmt 1 view .LVU545
 717:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1510              		.loc 1 717 31 is_stmt 0 view .LVU546
 1511 00f2 10F80C50 		ldrb	r5, [r0, ip]	@ zero_extendqisi2
 1512              	.LVL211:
 1513              	.LBB128:
 1514              	.LBI128:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 1515              		.loc 1 1206 46 is_stmt 1 view .LVU547
 1516              	.LBB129:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1517              		.loc 1 1208 5 view .LVU548
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1518              		.loc 1 1208 7 is_stmt 0 view .LVU549
 1519 00f6 FC2A     		cmp	r2, #252
 1520 00f8 0AD8     		bhi	.L118
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1521              		.loc 1 1209 5 is_stmt 1 view .LVU550
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1522              		.loc 1 1209 7 is_stmt 0 view .LVU551
 1523 00fa 022A     		cmp	r2, #2
 1524 00fc 40F2DB80 		bls	.L137
 1525              		.loc 1 1211 5 is_stmt 1 view .LVU552
 1526              		.loc 1 1211 12 is_stmt 0 view .LVU553
 1527 0100 02FB05F2 		mul	r2, r2, r5
 1528              	.LVL212:
 1529              		.loc 1 1211 12 view .LVU554
 1530 0104 02EB0225 		add	r5, r2, r2, lsl #8
 1531              	.LVL213:
 1532              		.loc 1 1211 12 view .LVU555
 1533 0108 02EBC512 		add	r2, r2, r5, lsl #7
 1534 010c C2F3C755 		ubfx	r5, r2, #23, #8
 1535              	.L118:
 1536              	.LVL214:
 1537              		.loc 1 1211 12 view .LVU556
 1538              	.LBE129:
 1539              	.LBE128:
 717:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1540              		.loc 1 717 29 view .LVU557
 1541 0110 00F80C50 		strb	r5, [r0, ip]
 1542              	.L116:
 719:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1543              		.loc 1 719 13 is_stmt 1 view .LVU558
 719:lvgl/src/lv_draw/lv_draw_mask.c **** 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 59


 1544              		.loc 1 719 14 is_stmt 0 view .LVU559
 1545 0114 0237     		adds	r7, r7, #2
 1546              	.LVL215:
 721:lvgl/src/lv_draw/lv_draw_mask.c ****                 k = xsi - abs_x;
 1547              		.loc 1 721 13 is_stmt 1 view .LVU560
 721:lvgl/src/lv_draw/lv_draw_mask.c ****                 k = xsi - abs_x;
 1548              		.loc 1 721 16 is_stmt 0 view .LVU561
 1549 0116 96F82820 		ldrb	r2, [r6, #40]	@ zero_extendqisi2
 721:lvgl/src/lv_draw/lv_draw_mask.c ****                 k = xsi - abs_x;
 1550              		.loc 1 721 15 view .LVU562
 1551 011a 12F0020F 		tst	r2, #2
 1552 011e 00F0D080 		beq	.L119
 722:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k > len)  return LV_DRAW_MASK_RES_TRANSP;
 1553              		.loc 1 722 17 is_stmt 1 view .LVU563
 722:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k > len)  return LV_DRAW_MASK_RES_TRANSP;
 1554              		.loc 1 722 19 is_stmt 0 view .LVU564
 1555 0122 611A     		subs	r1, r4, r1
 1556              	.LVL216:
 723:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k >= 0) _lv_memset_00(&mask_buf[0],  k);
 1557              		.loc 1 723 17 is_stmt 1 view .LVU565
 723:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k >= 0) _lv_memset_00(&mask_buf[0],  k);
 1558              		.loc 1 723 19 is_stmt 0 view .LVU566
 1559 0124 8B42     		cmp	r3, r1
 1560 0126 C0F2E680 		blt	.L138
 724:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1561              		.loc 1 724 17 is_stmt 1 view .LVU567
 724:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1562              		.loc 1 724 19 is_stmt 0 view .LVU568
 1563 012a 0029     		cmp	r1, #0
 1564 012c 80F2C580 		bge	.L147
 1565              	.LBE124:
 1566              	.LBE123:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1567              		.loc 1 735 12 view .LVU569
 1568 0130 0220     		movs	r0, #2
 1569              	.LVL217:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1570              		.loc 1 735 12 view .LVU570
 1571 0132 77E7     		b	.L96
 1572              	.LVL218:
 1573              	.L144:
 640:lvgl/src/lv_draw/lv_draw_mask.c ****         xsf = 0xFF;
 1574              		.loc 1 640 39 discriminator 2 view .LVU571
 1575 0134 BCF1000F 		cmp	ip, #0
 1576 0138 95D1     		bne	.L98
 641:lvgl/src/lv_draw/lv_draw_mask.c ****         xsi = xei;
 1577              		.loc 1 641 9 is_stmt 1 view .LVU572
 1578              	.LVL219:
 642:lvgl/src/lv_draw/lv_draw_mask.c ****         k--;
 1579              		.loc 1 642 9 view .LVU573
 643:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 1580              		.loc 1 643 9 view .LVU574
 643:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 1581              		.loc 1 643 10 is_stmt 0 view .LVU575
 1582 013a 013F     		subs	r7, r7, #1
 1583              	.LVL220:
 642:lvgl/src/lv_draw/lv_draw_mask.c ****         k--;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 60


 1584              		.loc 1 642 13 view .LVU576
 1585 013c 7446     		mov	r4, lr
 641:lvgl/src/lv_draw/lv_draw_mask.c ****         xsi = xei;
 1586              		.loc 1 641 13 view .LVU577
 1587 013e 4FF0FF0C 		mov	ip, #255
 1588 0142 90E7     		b	.L98
 1589              	.LVL221:
 1590              	.L145:
 647:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (xsf + xef) >> 1;
 1591              		.loc 1 647 9 is_stmt 1 view .LVU578
 647:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (xsf + xef) >> 1;
 1592              		.loc 1 647 11 is_stmt 0 view .LVU579
 1593 0144 002F     		cmp	r7, #0
 1594 0146 1CDB     		blt	.L100
 647:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (xsf + xef) >> 1;
 1595              		.loc 1 647 19 discriminator 1 view .LVU580
 1596 0148 BB42     		cmp	r3, r7
 1597 014a 1ADD     		ble	.L100
 648:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 1598              		.loc 1 648 13 is_stmt 1 view .LVU581
 648:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 1599              		.loc 1 648 22 is_stmt 0 view .LVU582
 1600 014c 6244     		add	r2, r2, ip
 1601              	.LVL222:
 648:lvgl/src/lv_draw/lv_draw_mask.c ****             if(p->inv) m = 255 - m;
 1602              		.loc 1 648 15 view .LVU583
 1603 014e C2F34702 		ubfx	r2, r2, #1, #8
 1604              	.LVL223:
 649:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 1605              		.loc 1 649 13 is_stmt 1 view .LVU584
 649:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 1606              		.loc 1 649 16 is_stmt 0 view .LVU585
 1607 0152 96F82850 		ldrb	r5, [r6, #40]	@ zero_extendqisi2
 649:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 1608              		.loc 1 649 15 view .LVU586
 1609 0156 15F0020F 		tst	r5, #2
 1610 015a 01D0     		beq	.L101
 649:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 1611              		.loc 1 649 24 is_stmt 1 discriminator 1 view .LVU587
 649:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 1612              		.loc 1 649 26 is_stmt 0 discriminator 1 view .LVU588
 1613 015c D243     		mvns	r2, r2
 1614              	.LVL224:
 649:lvgl/src/lv_draw/lv_draw_mask.c ****             mask_buf[k] = mask_mix(mask_buf[k], m);
 1615              		.loc 1 649 26 discriminator 1 view .LVU589
 1616 015e D2B2     		uxtb	r2, r2
 1617              	.LVL225:
 1618              	.L101:
 650:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1619              		.loc 1 650 13 is_stmt 1 view .LVU590
 650:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1620              		.loc 1 650 44 is_stmt 0 view .LVU591
 1621 0160 00EB070C 		add	ip, r0, r7
 1622              	.LVL226:
 650:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1623              		.loc 1 650 27 view .LVU592
 1624 0164 C55D     		ldrb	r5, [r0, r7]	@ zero_extendqisi2
ARM GAS  D:\Temp\ccPmLtDk.s 			page 61


 1625              	.LVL227:
 1626              	.LBB150:
 1627              	.LBI150:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 1628              		.loc 1 1206 46 is_stmt 1 view .LVU593
 1629              	.LBB151:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1630              		.loc 1 1208 5 view .LVU594
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1631              		.loc 1 1208 7 is_stmt 0 view .LVU595
 1632 0166 FC2A     		cmp	r2, #252
 1633 0168 09D8     		bhi	.L102
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1634              		.loc 1 1209 5 is_stmt 1 view .LVU596
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1635              		.loc 1 1209 7 is_stmt 0 view .LVU597
 1636 016a 022A     		cmp	r2, #2
 1637 016c 17D9     		bls	.L124
 1638              		.loc 1 1211 5 is_stmt 1 view .LVU598
 1639              		.loc 1 1211 12 is_stmt 0 view .LVU599
 1640 016e 05FB02F2 		mul	r2, r5, r2
 1641              	.LVL228:
 1642              		.loc 1 1211 12 view .LVU600
 1643 0172 02EB0225 		add	r5, r2, r2, lsl #8
 1644              	.LVL229:
 1645              		.loc 1 1211 12 view .LVU601
 1646 0176 02EBC512 		add	r2, r2, r5, lsl #7
 1647 017a C2F3C755 		ubfx	r5, r2, #23, #8
 1648              	.L102:
 1649              	.LVL230:
 1650              		.loc 1 1211 12 view .LVU602
 1651              	.LBE151:
 1652              	.LBE150:
 650:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1653              		.loc 1 650 25 view .LVU603
 1654 017e 8CF80050 		strb	r5, [ip]
 1655              	.L100:
 652:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1656              		.loc 1 652 9 is_stmt 1 view .LVU604
 652:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1657              		.loc 1 652 10 is_stmt 0 view .LVU605
 1658 0182 0137     		adds	r7, r7, #1
 1659              	.LVL231:
 654:lvgl/src/lv_draw/lv_draw_mask.c ****             k = xsi - abs_x;
 1660              		.loc 1 654 9 is_stmt 1 view .LVU606
 654:lvgl/src/lv_draw/lv_draw_mask.c ****             k = xsi - abs_x;
 1661              		.loc 1 654 12 is_stmt 0 view .LVU607
 1662 0184 96F82820 		ldrb	r2, [r6, #40]	@ zero_extendqisi2
 654:lvgl/src/lv_draw/lv_draw_mask.c ****             k = xsi - abs_x;
 1663              		.loc 1 654 11 view .LVU608
 1664 0188 12F0020F 		tst	r2, #2
 1665 018c 0DD0     		beq	.L103
 655:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= len) {
 1666              		.loc 1 655 13 is_stmt 1 view .LVU609
 655:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= len) {
 1667              		.loc 1 655 15 is_stmt 0 view .LVU610
 1668 018e 611A     		subs	r1, r4, r1
ARM GAS  D:\Temp\ccPmLtDk.s 			page 62


 1669              	.LVL232:
 656:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 1670              		.loc 1 656 13 is_stmt 1 view .LVU611
 656:lvgl/src/lv_draw/lv_draw_mask.c ****                 return LV_DRAW_MASK_RES_TRANSP;
 1671              		.loc 1 656 15 is_stmt 0 view .LVU612
 1672 0190 8B42     		cmp	r3, r1
 1673 0192 40F3A880 		ble	.L125
 659:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1674              		.loc 1 659 13 is_stmt 1 view .LVU613
 659:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1675              		.loc 1 659 15 is_stmt 0 view .LVU614
 1676 0196 0029     		cmp	r1, #0
 1677 0198 03DA     		bge	.L148
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1678              		.loc 1 735 12 view .LVU615
 1679 019a 0220     		movs	r0, #2
 1680              	.LVL233:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1681              		.loc 1 735 12 view .LVU616
 1682 019c 42E7     		b	.L96
 1683              	.LVL234:
 1684              	.L124:
 1685              	.LBB153:
 1686              	.LBB152:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1687              		.loc 1 1209 39 view .LVU617
 1688 019e 0025     		movs	r5, #0
 1689              	.LVL235:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1690              		.loc 1 1209 39 view .LVU618
 1691 01a0 EDE7     		b	.L102
 1692              	.LVL236:
 1693              	.L148:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1694              		.loc 1 1209 39 view .LVU619
 1695              	.LBE152:
 1696              	.LBE153:
 659:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1697              		.loc 1 659 24 is_stmt 1 discriminator 1 view .LVU620
 1698 01a2 FFF7FEFF 		bl	_lv_memset_00
 1699              	.LVL237:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1700              		.loc 1 735 12 is_stmt 0 discriminator 1 view .LVU621
 1701 01a6 0220     		movs	r0, #2
 1702 01a8 3CE7     		b	.L96
 1703              	.LVL238:
 1704              	.L103:
 663:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k == 0) return LV_DRAW_MASK_RES_TRANSP;
 1705              		.loc 1 663 13 is_stmt 1 view .LVU622
 663:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k == 0) return LV_DRAW_MASK_RES_TRANSP;
 1706              		.loc 1 663 15 is_stmt 0 view .LVU623
 1707 01aa BB42     		cmp	r3, r7
 1708 01ac 00DA     		bge	.L104
 663:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k == 0) return LV_DRAW_MASK_RES_TRANSP;
 1709              		.loc 1 663 27 view .LVU624
 1710 01ae 1F46     		mov	r7, r3
 1711              	.LVL239:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 63


 1712              	.L104:
 664:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(k > 0) _lv_memset_00(&mask_buf[k],  len - k);
 1713              		.loc 1 664 13 is_stmt 1 view .LVU625
 664:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(k > 0) _lv_memset_00(&mask_buf[k],  len - k);
 1714              		.loc 1 664 15 is_stmt 0 view .LVU626
 1715 01b0 002F     		cmp	r7, #0
 1716 01b2 00F09A80 		beq	.L128
 665:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1717              		.loc 1 665 18 is_stmt 1 view .LVU627
 665:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1718              		.loc 1 665 20 is_stmt 0 view .LVU628
 1719 01b6 002F     		cmp	r7, #0
 1720 01b8 01DC     		bgt	.L149
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1721              		.loc 1 735 12 view .LVU629
 1722 01ba 0220     		movs	r0, #2
 1723              	.LVL240:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1724              		.loc 1 735 12 view .LVU630
 1725 01bc 32E7     		b	.L96
 1726              	.LVL241:
 1727              	.L149:
 665:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1728              		.loc 1 665 28 is_stmt 1 discriminator 1 view .LVU631
 1729 01be D91B     		subs	r1, r3, r7
 1730              	.LVL242:
 665:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1731              		.loc 1 665 28 is_stmt 0 discriminator 1 view .LVU632
 1732 01c0 3844     		add	r0, r0, r7
 1733              	.LVL243:
 665:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 1734              		.loc 1 665 28 discriminator 1 view .LVU633
 1735 01c2 FFF7FEFF 		bl	_lv_memset_00
 1736              	.LVL244:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1737              		.loc 1 735 12 discriminator 1 view .LVU634
 1738 01c6 0220     		movs	r0, #2
 1739 01c8 2CE7     		b	.L96
 1740              	.LVL245:
 1741              	.L146:
 1742              	.LBB154:
 1743              	.LBB133:
 672:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1744              		.loc 1 672 13 is_stmt 1 view .LVU635
 672:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1745              		.loc 1 672 34 is_stmt 0 view .LVU636
 1746 01ca F269     		ldr	r2, [r6, #28]
 1747              	.LVL246:
 672:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1748              		.loc 1 672 32 view .LVU637
 1749 01cc 5242     		rsbs	r2, r2, #0
 672:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1750              		.loc 1 672 29 view .LVU638
 1751 01ce 0CFB02F2 		mul	r2, ip, r2
 672:lvgl/src/lv_draw/lv_draw_mask.c ****             if(k >= 0 && k < len) {
 1752              		.loc 1 672 22 view .LVU639
 1753 01d2 9212     		asrs	r2, r2, #10
ARM GAS  D:\Temp\ccPmLtDk.s 			page 64


 1754              	.LVL247:
 673:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = (y_inters * xsf) >> 9;
 1755              		.loc 1 673 13 is_stmt 1 view .LVU640
 673:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = (y_inters * xsf) >> 9;
 1756              		.loc 1 673 15 is_stmt 0 view .LVU641
 1757 01d4 002F     		cmp	r7, #0
 1758 01d6 21DB     		blt	.L106
 673:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = (y_inters * xsf) >> 9;
 1759              		.loc 1 673 23 discriminator 1 view .LVU642
 1760 01d8 BB42     		cmp	r3, r7
 1761 01da 1FDD     		ble	.L106
 674:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1762              		.loc 1 674 17 is_stmt 1 view .LVU643
 674:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1763              		.loc 1 674 31 is_stmt 0 view .LVU644
 1764 01dc 02FB0CFC 		mul	ip, r2, ip
 1765              	.LVL248:
 674:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1766              		.loc 1 674 19 view .LVU645
 1767 01e0 CCF3472C 		ubfx	ip, ip, #9, #8
 1768              	.LVL249:
 675:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1769              		.loc 1 675 17 is_stmt 1 view .LVU646
 675:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1770              		.loc 1 675 20 is_stmt 0 view .LVU647
 1771 01e4 96F82850 		ldrb	r5, [r6, #40]	@ zero_extendqisi2
 675:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1772              		.loc 1 675 19 view .LVU648
 1773 01e8 15F0020F 		tst	r5, #2
 1774 01ec 03D0     		beq	.L107
 675:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1775              		.loc 1 675 28 is_stmt 1 discriminator 1 view .LVU649
 675:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1776              		.loc 1 675 30 is_stmt 0 discriminator 1 view .LVU650
 1777 01ee 6FEA0C0C 		mvn	ip, ip
 1778              	.LVL250:
 675:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1779              		.loc 1 675 30 discriminator 1 view .LVU651
 1780 01f2 5FFA8CFC 		uxtb	ip, ip
 1781              	.LVL251:
 1782              	.L107:
 676:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1783              		.loc 1 676 17 is_stmt 1 view .LVU652
 676:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1784              		.loc 1 676 48 is_stmt 0 view .LVU653
 1785 01f6 00EB070E 		add	lr, r0, r7
 1786              	.LVL252:
 676:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1787              		.loc 1 676 31 view .LVU654
 1788 01fa C55D     		ldrb	r5, [r0, r7]	@ zero_extendqisi2
 1789              	.LVL253:
 1790              	.LBB134:
 1791              	.LBI134:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 1792              		.loc 1 1206 46 is_stmt 1 view .LVU655
 1793              	.LBB135:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 65


 1794              		.loc 1 1208 5 view .LVU656
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1795              		.loc 1 1208 7 is_stmt 0 view .LVU657
 1796 01fc BCF1FC0F 		cmp	ip, #252
 1797 0200 0AD8     		bhi	.L108
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1798              		.loc 1 1209 5 is_stmt 1 view .LVU658
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1799              		.loc 1 1209 7 is_stmt 0 view .LVU659
 1800 0202 BCF1020F 		cmp	ip, #2
 1801 0206 3FD9     		bls	.L130
 1802              		.loc 1 1211 5 is_stmt 1 view .LVU660
 1803              		.loc 1 1211 12 is_stmt 0 view .LVU661
 1804 0208 0CFB05FC 		mul	ip, ip, r5
 1805              	.LVL254:
 1806              		.loc 1 1211 12 view .LVU662
 1807 020c 0CEB0C25 		add	r5, ip, ip, lsl #8
 1808              	.LVL255:
 1809              		.loc 1 1211 12 view .LVU663
 1810 0210 0CEBC51C 		add	ip, ip, r5, lsl #7
 1811 0214 CCF3C755 		ubfx	r5, ip, #23, #8
 1812              	.L108:
 1813              	.LVL256:
 1814              		.loc 1 1211 12 view .LVU664
 1815              	.LBE135:
 1816              	.LBE134:
 676:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1817              		.loc 1 676 29 view .LVU665
 1818 0218 8EF80050 		strb	r5, [lr]
 1819              	.L106:
 678:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1820              		.loc 1 678 13 is_stmt 1 view .LVU666
 1821              	.LVL257:
 680:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1822              		.loc 1 680 13 view .LVU667
 680:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1823              		.loc 1 680 38 is_stmt 0 view .LVU668
 1824 021c C2F1FF05 		rsb	r5, r2, #255
 680:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1825              		.loc 1 680 55 view .LVU669
 1826 0220 B269     		ldr	r2, [r6, #24]
 1827              	.LVL258:
 680:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1828              		.loc 1 680 53 view .LVU670
 1829 0222 5242     		rsbs	r2, r2, #0
 680:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1830              		.loc 1 680 50 view .LVU671
 1831 0224 02FB05F2 		mul	r2, r2, r5
 680:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1832              		.loc 1 680 21 view .LVU672
 1833 0228 9212     		asrs	r2, r2, #10
 1834              	.LVL259:
 682:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = 255 - (((255 - y_inters) * x_inters) >> 9);
 1835              		.loc 1 682 13 is_stmt 1 view .LVU673
 682:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = 255 - (((255 - y_inters) * x_inters) >> 9);
 1836              		.loc 1 682 15 is_stmt 0 view .LVU674
 1837 022a B7F1010C 		subs	ip, r7, #1
ARM GAS  D:\Temp\ccPmLtDk.s 			page 66


 1838              	.LVL260:
 682:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = 255 - (((255 - y_inters) * x_inters) >> 9);
 1839              		.loc 1 682 15 view .LVU675
 1840 022e 1DD4     		bmi	.L109
 682:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = 255 - (((255 - y_inters) * x_inters) >> 9);
 1841              		.loc 1 682 23 discriminator 1 view .LVU676
 1842 0230 6345     		cmp	r3, ip
 1843 0232 1BDD     		ble	.L109
 683:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1844              		.loc 1 683 17 is_stmt 1 view .LVU677
 683:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1845              		.loc 1 683 46 is_stmt 0 view .LVU678
 1846 0234 02FB05F2 		mul	r2, r2, r5
 1847              	.LVL261:
 683:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1848              		.loc 1 683 25 view .LVU679
 1849 0238 C2F34722 		ubfx	r2, r2, #9, #8
 683:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1850              		.loc 1 683 19 view .LVU680
 1851 023c D543     		mvns	r5, r2
 1852              	.LVL262:
 683:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1853              		.loc 1 683 19 view .LVU681
 1854 023e EDB2     		uxtb	r5, r5
 1855              	.LVL263:
 684:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1856              		.loc 1 684 17 is_stmt 1 view .LVU682
 684:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1857              		.loc 1 684 20 is_stmt 0 view .LVU683
 1858 0240 96F828E0 		ldrb	lr, [r6, #40]	@ zero_extendqisi2
 684:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[k] = mask_mix(mask_buf[k], m);
 1859              		.loc 1 684 19 view .LVU684
 1860 0244 1EF0020F 		tst	lr, #2
 1861 0248 00D1     		bne	.L110
 683:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(p->inv) m = 255 - m;
 1862              		.loc 1 683 19 view .LVU685
 1863 024a 2A46     		mov	r2, r5
 1864              	.L110:
 1865              	.LVL264:
 685:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1866              		.loc 1 685 17 is_stmt 1 view .LVU686
 685:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1867              		.loc 1 685 31 is_stmt 0 view .LVU687
 1868 024c 10F80C50 		ldrb	r5, [r0, ip]	@ zero_extendqisi2
 1869              	.LVL265:
 1870              	.LBB137:
 1871              	.LBI137:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 1872              		.loc 1 1206 46 is_stmt 1 view .LVU688
 1873              	.LBB138:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1874              		.loc 1 1208 5 view .LVU689
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 1875              		.loc 1 1208 7 is_stmt 0 view .LVU690
 1876 0250 FC2A     		cmp	r2, #252
 1877 0252 09D8     		bhi	.L111
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 67


 1878              		.loc 1 1209 5 is_stmt 1 view .LVU691
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1879              		.loc 1 1209 7 is_stmt 0 view .LVU692
 1880 0254 022A     		cmp	r2, #2
 1881 0256 19D9     		bls	.L131
 1882              		.loc 1 1211 5 is_stmt 1 view .LVU693
 1883              		.loc 1 1211 12 is_stmt 0 view .LVU694
 1884 0258 02FB05F2 		mul	r2, r2, r5
 1885              	.LVL266:
 1886              		.loc 1 1211 12 view .LVU695
 1887 025c 02EB0225 		add	r5, r2, r2, lsl #8
 1888              	.LVL267:
 1889              		.loc 1 1211 12 view .LVU696
 1890 0260 02EBC512 		add	r2, r2, r5, lsl #7
 1891 0264 C2F3C755 		ubfx	r5, r2, #23, #8
 1892              	.L111:
 1893              	.LVL268:
 1894              		.loc 1 1211 12 view .LVU697
 1895              	.LBE138:
 1896              	.LBE137:
 685:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1897              		.loc 1 685 29 view .LVU698
 1898 0268 00F80C50 		strb	r5, [r0, ip]
 1899              	.L109:
 688:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1900              		.loc 1 688 13 is_stmt 1 view .LVU699
 688:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1901              		.loc 1 688 15 is_stmt 0 view .LVU700
 1902 026c 0137     		adds	r7, r7, #1
 1903              	.LVL269:
 690:lvgl/src/lv_draw/lv_draw_mask.c ****                 k = xsi - abs_x - 1;
 1904              		.loc 1 690 13 is_stmt 1 view .LVU701
 690:lvgl/src/lv_draw/lv_draw_mask.c ****                 k = xsi - abs_x - 1;
 1905              		.loc 1 690 16 is_stmt 0 view .LVU702
 1906 026e 96F82820 		ldrb	r2, [r6, #40]	@ zero_extendqisi2
 690:lvgl/src/lv_draw/lv_draw_mask.c ****                 k = xsi - abs_x - 1;
 1907              		.loc 1 690 15 view .LVU703
 1908 0272 12F0020F 		tst	r2, #2
 1909 0276 0FD0     		beq	.L112
 691:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1910              		.loc 1 691 17 is_stmt 1 view .LVU704
 691:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1911              		.loc 1 691 25 is_stmt 0 view .LVU705
 1912 0278 611A     		subs	r1, r4, r1
 1913              	.LVL270:
 691:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1914              		.loc 1 691 19 view .LVU706
 1915 027a 0139     		subs	r1, r1, #1
 1916              	.LVL271:
 693:lvgl/src/lv_draw/lv_draw_mask.c ****                 else if(k > 0) _lv_memset_00(&mask_buf[0],  k);
 1917              		.loc 1 693 17 is_stmt 1 view .LVU707
 693:lvgl/src/lv_draw/lv_draw_mask.c ****                 else if(k > 0) _lv_memset_00(&mask_buf[0],  k);
 1918              		.loc 1 693 19 is_stmt 0 view .LVU708
 1919 027c 8B42     		cmp	r3, r1
 1920 027e 36DB     		blt	.L132
 694:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1921              		.loc 1 694 22 is_stmt 1 view .LVU709
ARM GAS  D:\Temp\ccPmLtDk.s 			page 68


 694:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1922              		.loc 1 694 24 is_stmt 0 view .LVU710
 1923 0280 0029     		cmp	r1, #0
 1924 0282 05DC     		bgt	.L150
 1925              	.LBE133:
 1926              	.LBE154:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1927              		.loc 1 735 12 view .LVU711
 1928 0284 0220     		movs	r0, #2
 1929              	.LVL272:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1930              		.loc 1 735 12 view .LVU712
 1931 0286 CDE6     		b	.L96
 1932              	.LVL273:
 1933              	.L130:
 1934              	.LBB155:
 1935              	.LBB142:
 1936              	.LBB140:
 1937              	.LBB136:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1938              		.loc 1 1209 39 view .LVU713
 1939 0288 0025     		movs	r5, #0
 1940              	.LVL274:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1941              		.loc 1 1209 39 view .LVU714
 1942 028a C5E7     		b	.L108
 1943              	.LVL275:
 1944              	.L131:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1945              		.loc 1 1209 39 view .LVU715
 1946              	.LBE136:
 1947              	.LBE140:
 1948              	.LBB141:
 1949              	.LBB139:
 1950 028c 0025     		movs	r5, #0
 1951              	.LVL276:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1952              		.loc 1 1209 39 view .LVU716
 1953 028e EBE7     		b	.L111
 1954              	.LVL277:
 1955              	.L150:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1956              		.loc 1 1209 39 view .LVU717
 1957              	.LBE139:
 1958              	.LBE141:
 694:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1959              		.loc 1 694 32 is_stmt 1 discriminator 1 view .LVU718
 1960 0290 FFF7FEFF 		bl	_lv_memset_00
 1961              	.LVL278:
 694:lvgl/src/lv_draw/lv_draw_mask.c **** 
 1962              		.loc 1 694 32 is_stmt 0 discriminator 1 view .LVU719
 1963              	.LBE142:
 1964              	.LBE155:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1965              		.loc 1 735 12 discriminator 1 view .LVU720
 1966 0294 0220     		movs	r0, #2
 1967 0296 C5E6     		b	.L96
ARM GAS  D:\Temp\ccPmLtDk.s 			page 69


 1968              	.LVL279:
 1969              	.L112:
 1970              	.LBB156:
 1971              	.LBB143:
 698:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k >= 0) _lv_memset_00(&mask_buf[k],  len - k);
 1972              		.loc 1 698 17 is_stmt 1 view .LVU721
 698:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k >= 0) _lv_memset_00(&mask_buf[k],  len - k);
 1973              		.loc 1 698 19 is_stmt 0 view .LVU722
 1974 0298 BB42     		cmp	r3, r7
 1975 029a 2ADB     		blt	.L134
 699:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1976              		.loc 1 699 17 is_stmt 1 view .LVU723
 699:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1977              		.loc 1 699 19 is_stmt 0 view .LVU724
 1978 029c 002F     		cmp	r7, #0
 1979 029e 01DA     		bge	.L151
 1980              	.LBE143:
 1981              	.LBE156:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1982              		.loc 1 735 12 view .LVU725
 1983 02a0 0220     		movs	r0, #2
 1984              	.LVL280:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 1985              		.loc 1 735 12 view .LVU726
 1986 02a2 BFE6     		b	.L96
 1987              	.LVL281:
 1988              	.L151:
 1989              	.LBB157:
 1990              	.LBB144:
 699:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1991              		.loc 1 699 28 is_stmt 1 discriminator 1 view .LVU727
 1992 02a4 D91B     		subs	r1, r3, r7
 1993              	.LVL282:
 699:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1994              		.loc 1 699 28 is_stmt 0 discriminator 1 view .LVU728
 1995 02a6 3844     		add	r0, r0, r7
 1996              	.LVL283:
 699:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 1997              		.loc 1 699 28 discriminator 1 view .LVU729
 1998 02a8 FFF7FEFF 		bl	_lv_memset_00
 1999              	.LVL284:
 699:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2000              		.loc 1 699 28 discriminator 1 view .LVU730
 2001              	.LBE144:
 2002              	.LBE157:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 2003              		.loc 1 735 12 discriminator 1 view .LVU731
 2004 02ac 0220     		movs	r0, #2
 2005 02ae B9E6     		b	.L96
 2006              	.LVL285:
 2007              	.L136:
 2008              	.LBB158:
 2009              	.LBB145:
 2010              	.LBB131:
 2011              	.LBB127:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2012              		.loc 1 1209 39 view .LVU732
ARM GAS  D:\Temp\ccPmLtDk.s 			page 70


 2013 02b0 4FF0000C 		mov	ip, #0
 2014              	.LVL286:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2015              		.loc 1 1209 39 view .LVU733
 2016 02b4 05E7     		b	.L115
 2017              	.LVL287:
 2018              	.L137:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2019              		.loc 1 1209 39 view .LVU734
 2020              	.LBE127:
 2021              	.LBE131:
 2022              	.LBB132:
 2023              	.LBB130:
 2024 02b6 0025     		movs	r5, #0
 2025              	.LVL288:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2026              		.loc 1 1209 39 view .LVU735
 2027 02b8 2AE7     		b	.L118
 2028              	.LVL289:
 2029              	.L147:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2030              		.loc 1 1209 39 view .LVU736
 2031              	.LBE130:
 2032              	.LBE132:
 724:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2033              		.loc 1 724 28 is_stmt 1 discriminator 1 view .LVU737
 2034 02ba FFF7FEFF 		bl	_lv_memset_00
 2035              	.LVL290:
 724:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2036              		.loc 1 724 28 is_stmt 0 discriminator 1 view .LVU738
 2037              	.LBE145:
 2038              	.LBE158:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 2039              		.loc 1 735 12 discriminator 1 view .LVU739
 2040 02be 0220     		movs	r0, #2
 2041 02c0 B0E6     		b	.L96
 2042              	.LVL291:
 2043              	.L119:
 2044              	.LBB159:
 2045              	.LBB146:
 728:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k == 0) return LV_DRAW_MASK_RES_TRANSP;
 2046              		.loc 1 728 17 is_stmt 1 view .LVU740
 728:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k == 0) return LV_DRAW_MASK_RES_TRANSP;
 2047              		.loc 1 728 19 is_stmt 0 view .LVU741
 2048 02c2 BB42     		cmp	r3, r7
 2049 02c4 00DA     		bge	.L120
 728:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k == 0) return LV_DRAW_MASK_RES_TRANSP;
 2050              		.loc 1 728 31 view .LVU742
 2051 02c6 1F46     		mov	r7, r3
 2052              	.LVL292:
 2053              	.L120:
 729:lvgl/src/lv_draw/lv_draw_mask.c ****                 else if(k > 0) _lv_memset_00(&mask_buf[k],  len - k);
 2054              		.loc 1 729 17 is_stmt 1 view .LVU743
 729:lvgl/src/lv_draw/lv_draw_mask.c ****                 else if(k > 0) _lv_memset_00(&mask_buf[k],  len - k);
 2055              		.loc 1 729 19 is_stmt 0 view .LVU744
 2056 02c8 BFB1     		cbz	r7, .L141
 730:lvgl/src/lv_draw/lv_draw_mask.c ****             }
ARM GAS  D:\Temp\ccPmLtDk.s 			page 71


 2057              		.loc 1 730 22 is_stmt 1 view .LVU745
 730:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2058              		.loc 1 730 24 is_stmt 0 view .LVU746
 2059 02ca 002F     		cmp	r7, #0
 2060 02cc 01DC     		bgt	.L152
 2061              	.LBE146:
 2062              	.LBE159:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 2063              		.loc 1 735 12 view .LVU747
 2064 02ce 0220     		movs	r0, #2
 2065              	.LVL293:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 2066              		.loc 1 735 12 view .LVU748
 2067 02d0 A8E6     		b	.L96
 2068              	.LVL294:
 2069              	.L152:
 2070              	.LBB160:
 2071              	.LBB147:
 730:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2072              		.loc 1 730 32 is_stmt 1 discriminator 1 view .LVU749
 2073 02d2 D91B     		subs	r1, r3, r7
 2074              	.LVL295:
 730:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2075              		.loc 1 730 32 is_stmt 0 discriminator 1 view .LVU750
 2076 02d4 3844     		add	r0, r0, r7
 2077              	.LVL296:
 730:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2078              		.loc 1 730 32 discriminator 1 view .LVU751
 2079 02d6 FFF7FEFF 		bl	_lv_memset_00
 2080              	.LVL297:
 730:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2081              		.loc 1 730 32 discriminator 1 view .LVU752
 2082              	.LBE147:
 2083              	.LBE160:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 2084              		.loc 1 735 12 discriminator 1 view .LVU753
 2085 02da 0220     		movs	r0, #2
 2086 02dc A2E6     		b	.L96
 2087              	.LVL298:
 2088              	.L122:
 611:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 2089              		.loc 1 611 20 view .LVU754
 2090 02de 0020     		movs	r0, #0
 2091              	.LVL299:
 611:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 2092              		.loc 1 611 20 view .LVU755
 2093 02e0 A0E6     		b	.L96
 2094              	.LVL300:
 2095              	.L123:
 623:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 2096              		.loc 1 623 20 view .LVU756
 2097 02e2 0120     		movs	r0, #1
 2098              	.LVL301:
 623:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 2099              		.loc 1 623 20 view .LVU757
 2100 02e4 9EE6     		b	.L96
 2101              	.LVL302:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 72


 2102              	.L125:
 657:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2103              		.loc 1 657 24 view .LVU758
 2104 02e6 0020     		movs	r0, #0
 2105              	.LVL303:
 657:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2106              		.loc 1 657 24 view .LVU759
 2107 02e8 9CE6     		b	.L96
 2108              	.LVL304:
 2109              	.L128:
 664:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(k > 0) _lv_memset_00(&mask_buf[k],  len - k);
 2110              		.loc 1 664 31 view .LVU760
 2111 02ea 0020     		movs	r0, #0
 2112              	.LVL305:
 664:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(k > 0) _lv_memset_00(&mask_buf[k],  len - k);
 2113              		.loc 1 664 31 view .LVU761
 2114 02ec 9AE6     		b	.L96
 2115              	.LVL306:
 2116              	.L132:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 2117              		.loc 1 735 12 view .LVU762
 2118 02ee 0220     		movs	r0, #2
 2119              	.LVL307:
 735:lvgl/src/lv_draw/lv_draw_mask.c **** }
 2120              		.loc 1 735 12 view .LVU763
 2121 02f0 98E6     		b	.L96
 2122              	.LVL308:
 2123              	.L134:
 2124              	.LBB161:
 2125              	.LBB148:
 698:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k >= 0) _lv_memset_00(&mask_buf[k],  len - k);
 2126              		.loc 1 698 36 view .LVU764
 2127 02f2 0120     		movs	r0, #1
 2128              	.LVL309:
 698:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k >= 0) _lv_memset_00(&mask_buf[k],  len - k);
 2129              		.loc 1 698 36 view .LVU765
 2130 02f4 96E6     		b	.L96
 2131              	.LVL310:
 2132              	.L138:
 698:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k >= 0) _lv_memset_00(&mask_buf[k],  len - k);
 2133              		.loc 1 698 36 view .LVU766
 2134              	.LBE148:
 2135              	.LBB149:
 723:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k >= 0) _lv_memset_00(&mask_buf[0],  k);
 2136              		.loc 1 723 37 view .LVU767
 2137 02f6 0020     		movs	r0, #0
 2138              	.LVL311:
 723:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(k >= 0) _lv_memset_00(&mask_buf[0],  k);
 2139              		.loc 1 723 37 view .LVU768
 2140 02f8 94E6     		b	.L96
 2141              	.LVL312:
 2142              	.L141:
 729:lvgl/src/lv_draw/lv_draw_mask.c ****                 else if(k > 0) _lv_memset_00(&mask_buf[k],  len - k);
 2143              		.loc 1 729 35 view .LVU769
 2144 02fa 0020     		movs	r0, #0
 2145              	.LVL313:
 729:lvgl/src/lv_draw/lv_draw_mask.c ****                 else if(k > 0) _lv_memset_00(&mask_buf[k],  len - k);
ARM GAS  D:\Temp\ccPmLtDk.s 			page 73


 2146              		.loc 1 729 35 view .LVU770
 2147 02fc 92E6     		b	.L96
 2148              	.LBE149:
 2149              	.LBE161:
 2150              		.cfi_endproc
 2151              	.LFE180:
 2153              		.section	.text.lv_draw_mask_line,"ax",%progbits
 2154              		.align	1
 2155              		.syntax unified
 2156              		.thumb
 2157              		.thumb_func
 2158              		.fpu fpv4-sp-d16
 2160              	lv_draw_mask_line:
 2161              	.LVL314:
 2162              	.LFB178:
 424:lvgl/src/lv_draw/lv_draw_mask.c ****     /*Make to points relative to the vertex*/
 2163              		.loc 1 424 1 is_stmt 1 view -0
 2164              		.cfi_startproc
 2165              		@ args = 4, pretend = 0, frame = 0
 2166              		@ frame_needed = 0, uses_anonymous_args = 0
 424:lvgl/src/lv_draw/lv_draw_mask.c ****     /*Make to points relative to the vertex*/
 2167              		.loc 1 424 1 is_stmt 0 view .LVU772
 2168 0000 70B5     		push	{r4, r5, r6, lr}
 2169              	.LCFI6:
 2170              		.cfi_def_cfa_offset 16
 2171              		.cfi_offset 4, -16
 2172              		.cfi_offset 5, -12
 2173              		.cfi_offset 6, -8
 2174              		.cfi_offset 14, -4
 2175 0002 82B0     		sub	sp, sp, #8
 2176              	.LCFI7:
 2177              		.cfi_def_cfa_offset 24
 2178 0004 069C     		ldr	r4, [sp, #24]
 426:lvgl/src/lv_draw/lv_draw_mask.c ****     abs_x -= p->origo.x;
 2179              		.loc 1 426 5 is_stmt 1 view .LVU773
 426:lvgl/src/lv_draw/lv_draw_mask.c ****     abs_x -= p->origo.x;
 2180              		.loc 1 426 22 is_stmt 0 view .LVU774
 2181 0006 A58A     		ldrh	r5, [r4, #20]
 426:lvgl/src/lv_draw/lv_draw_mask.c ****     abs_x -= p->origo.x;
 2182              		.loc 1 426 11 view .LVU775
 2183 0008 521B     		subs	r2, r2, r5
 2184              	.LVL315:
 426:lvgl/src/lv_draw/lv_draw_mask.c ****     abs_x -= p->origo.x;
 2185              		.loc 1 426 11 view .LVU776
 2186 000a 12B2     		sxth	r2, r2
 2187              	.LVL316:
 427:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2188              		.loc 1 427 5 is_stmt 1 view .LVU777
 427:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2189              		.loc 1 427 22 is_stmt 0 view .LVU778
 2190 000c 658A     		ldrh	r5, [r4, #18]
 427:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2191              		.loc 1 427 11 view .LVU779
 2192 000e 491B     		subs	r1, r1, r5
 2193              	.LVL317:
 427:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2194              		.loc 1 427 11 view .LVU780
ARM GAS  D:\Temp\ccPmLtDk.s 			page 74


 2195 0010 09B2     		sxth	r1, r1
 2196              	.LVL318:
 430:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Horizontal*/
 2197              		.loc 1 430 5 is_stmt 1 view .LVU781
 430:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Horizontal*/
 2198              		.loc 1 430 9 is_stmt 0 view .LVU782
 2199 0012 256A     		ldr	r5, [r4, #32]
 430:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Horizontal*/
 2200              		.loc 1 430 7 view .LVU783
 2201 0014 002D     		cmp	r5, #0
 2202 0016 49D1     		bne	.L154
 432:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Non sense: Can't be on the right/left of a horizontal line*/
 2203              		.loc 1 432 9 is_stmt 1 view .LVU784
 432:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Non sense: Can't be on the right/left of a horizontal line*/
 2204              		.loc 1 432 12 is_stmt 0 view .LVU785
 2205 0018 94F82860 		ldrb	r6, [r4, #40]	@ zero_extendqisi2
 432:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Non sense: Can't be on the right/left of a horizontal line*/
 2206              		.loc 1 432 11 view .LVU786
 2207 001c 16F0010F 		tst	r6, #1
 2208 0020 14D0     		beq	.L155
 434:lvgl/src/lv_draw/lv_draw_mask.c ****                p->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT) return LV_DRAW_MASK_RES_FULL_COVER;
 2209              		.loc 1 434 13 is_stmt 1 view .LVU787
 434:lvgl/src/lv_draw/lv_draw_mask.c ****                p->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT) return LV_DRAW_MASK_RES_FULL_COVER;
 2210              		.loc 1 434 28 is_stmt 0 view .LVU788
 2211 0022 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2212              	.LVL319:
 434:lvgl/src/lv_draw/lv_draw_mask.c ****                p->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT) return LV_DRAW_MASK_RES_FULL_COVER;
 2213              		.loc 1 434 15 view .LVU789
 2214 0024 13F0020F 		tst	r3, #2
 2215 0028 4ED0     		beq	.L164
 436:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM && abs_y > 0) return LV_DRAW_MASK_
 2216              		.loc 1 436 18 is_stmt 1 view .LVU790
 436:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM && abs_y > 0) return LV_DRAW_MASK_
 2217              		.loc 1 436 33 is_stmt 0 view .LVU791
 2218 002a 03F00303 		and	r3, r3, #3
 436:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM && abs_y > 0) return LV_DRAW_MASK_
 2219              		.loc 1 436 20 view .LVU792
 2220 002e 022B     		cmp	r3, #2
 2221 0030 05D0     		beq	.L175
 2222              	.L157:
 437:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 2223              		.loc 1 437 18 is_stmt 1 view .LVU793
 437:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 2224              		.loc 1 437 20 is_stmt 0 view .LVU794
 2225 0032 032B     		cmp	r3, #3
 2226 0034 4AD1     		bne	.L166
 437:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 2227              		.loc 1 437 66 discriminator 1 view .LVU795
 2228 0036 002A     		cmp	r2, #0
 2229 0038 06DD     		ble	.L176
 437:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 2230              		.loc 1 437 87 view .LVU796
 2231 003a 0120     		movs	r0, #1
 2232              	.LVL320:
 437:lvgl/src/lv_draw/lv_draw_mask.c ****             else {
 2233              		.loc 1 437 87 view .LVU797
 2234 003c 3EE0     		b	.L156
ARM GAS  D:\Temp\ccPmLtDk.s 			page 75


 2235              	.LVL321:
 2236              	.L175:
 436:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM && abs_y > 0) return LV_DRAW_MASK_
 2237              		.loc 1 436 63 discriminator 1 view .LVU798
 2238 003e B2F1FF3F 		cmp	r2, #-1
 2239 0042 F6DA     		bge	.L157
 436:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM && abs_y > 0) return LV_DRAW_MASK_
 2240              		.loc 1 436 88 view .LVU799
 2241 0044 0120     		movs	r0, #1
 2242              	.LVL322:
 436:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM && abs_y > 0) return LV_DRAW_MASK_
 2243              		.loc 1 436 88 view .LVU800
 2244 0046 39E0     		b	.L156
 2245              	.LVL323:
 2246              	.L176:
 439:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2247              		.loc 1 439 24 view .LVU801
 2248 0048 0020     		movs	r0, #0
 2249              	.LVL324:
 439:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2250              		.loc 1 439 24 view .LVU802
 2251 004a 37E0     		b	.L156
 2252              	.LVL325:
 2253              	.L155:
 445:lvgl/src/lv_draw/lv_draw_mask.c ****                p->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM) return LV_DRAW_MASK_RES_FULL_COVER;
 2254              		.loc 1 445 13 is_stmt 1 view .LVU803
 445:lvgl/src/lv_draw/lv_draw_mask.c ****                p->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM) return LV_DRAW_MASK_RES_FULL_COVER;
 2255              		.loc 1 445 28 is_stmt 0 view .LVU804
 2256 004c 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 2257              	.LVL326:
 445:lvgl/src/lv_draw/lv_draw_mask.c ****                p->cfg.side == LV_DRAW_MASK_LINE_SIDE_BOTTOM) return LV_DRAW_MASK_RES_FULL_COVER;
 2258              		.loc 1 445 15 view .LVU805
 2259 004e 12F0020F 		tst	r2, #2
 2260 0052 3DD1     		bne	.L168
 447:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_LEFT) {
 2261              		.loc 1 447 18 is_stmt 1 view .LVU806
 447:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_LEFT) {
 2262              		.loc 1 447 33 is_stmt 0 view .LVU807
 2263 0054 02F00302 		and	r2, r2, #3
 447:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_LEFT) {
 2264              		.loc 1 447 20 view .LVU808
 2265 0058 012A     		cmp	r2, #1
 2266 005a 07D0     		beq	.L177
 2267              	.L158:
 448:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(abs_x + len < 0) return LV_DRAW_MASK_RES_FULL_COVER;
 2268              		.loc 1 448 18 is_stmt 1 view .LVU809
 448:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(abs_x + len < 0) return LV_DRAW_MASK_RES_FULL_COVER;
 2269              		.loc 1 448 20 is_stmt 0 view .LVU810
 2270 005c 9AB9     		cbnz	r2, .L159
 449:lvgl/src/lv_draw/lv_draw_mask.c ****                 else {
 2271              		.loc 1 449 17 is_stmt 1 view .LVU811
 449:lvgl/src/lv_draw/lv_draw_mask.c ****                 else {
 2272              		.loc 1 449 19 is_stmt 0 view .LVU812
 2273 005e CA18     		adds	r2, r1, r3
 2274 0060 38D4     		bmi	.L170
 2275              	.LBB162:
 451:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k < 0) return LV_DRAW_MASK_RES_TRANSP;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 76


 2276              		.loc 1 451 21 is_stmt 1 view .LVU813
 451:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k < 0) return LV_DRAW_MASK_RES_TRANSP;
 2277              		.loc 1 451 29 is_stmt 0 view .LVU814
 2278 0062 4C42     		rsbs	r4, r1, #0
 2279              	.LVL327:
 452:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k >= 0 && k < len) _lv_memset_00(&mask_buf[k], len - k);
 2280              		.loc 1 452 21 is_stmt 1 view .LVU815
 452:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k >= 0 && k < len) _lv_memset_00(&mask_buf[k], len - k);
 2281              		.loc 1 452 23 is_stmt 0 view .LVU816
 2282 0064 0029     		cmp	r1, #0
 2283 0066 05DD     		ble	.L178
 452:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k >= 0 && k < len) _lv_memset_00(&mask_buf[k], len - k);
 2284              		.loc 1 452 38 view .LVU817
 2285 0068 0020     		movs	r0, #0
 2286              	.LVL328:
 452:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k >= 0 && k < len) _lv_memset_00(&mask_buf[k], len - k);
 2287              		.loc 1 452 38 view .LVU818
 2288 006a 27E0     		b	.L156
 2289              	.LVL329:
 2290              	.L177:
 452:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k >= 0 && k < len) _lv_memset_00(&mask_buf[k], len - k);
 2291              		.loc 1 452 38 view .LVU819
 2292              	.LBE162:
 447:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_LEFT) {
 2293              		.loc 1 447 65 discriminator 1 view .LVU820
 2294 006c 0029     		cmp	r1, #0
 2295 006e F5DD     		ble	.L158
 447:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_LEFT) {
 2296              		.loc 1 447 86 view .LVU821
 2297 0070 0120     		movs	r0, #1
 2298              	.LVL330:
 447:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_LEFT) {
 2299              		.loc 1 447 86 view .LVU822
 2300 0072 23E0     		b	.L156
 2301              	.LVL331:
 2302              	.L178:
 2303              	.LBB163:
 453:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2304              		.loc 1 453 21 is_stmt 1 discriminator 1 view .LVU823
 453:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2305              		.loc 1 453 31 is_stmt 0 discriminator 1 view .LVU824
 2306 0074 A342     		cmp	r3, r4
 2307 0076 01DC     		bgt	.L179
 2308              	.LVL332:
 2309              	.L160:
 454:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 2310              		.loc 1 454 21 is_stmt 1 view .LVU825
 454:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 2311              		.loc 1 454 28 is_stmt 0 view .LVU826
 2312 0078 0220     		movs	r0, #2
 2313 007a 1FE0     		b	.L156
 2314              	.LVL333:
 2315              	.L179:
 453:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2316              		.loc 1 453 43 is_stmt 1 discriminator 2 view .LVU827
 2317 007c 1146     		mov	r1, r2
 2318              	.LVL334:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 77


 453:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2319              		.loc 1 453 43 is_stmt 0 discriminator 2 view .LVU828
 2320 007e 2044     		add	r0, r0, r4
 2321              	.LVL335:
 453:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2322              		.loc 1 453 43 discriminator 2 view .LVU829
 2323 0080 FFF7FEFF 		bl	_lv_memset_00
 2324              	.LVL336:
 453:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2325              		.loc 1 453 43 discriminator 2 view .LVU830
 2326 0084 F8E7     		b	.L160
 2327              	.LVL337:
 2328              	.L159:
 453:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2329              		.loc 1 453 43 discriminator 2 view .LVU831
 2330              	.LBE163:
 458:lvgl/src/lv_draw/lv_draw_mask.c ****                 else {
 2331              		.loc 1 458 17 is_stmt 1 view .LVU832
 458:lvgl/src/lv_draw/lv_draw_mask.c ****                 else {
 2332              		.loc 1 458 19 is_stmt 0 view .LVU833
 2333 0086 D942     		cmn	r1, r3
 2334 0088 26D4     		bmi	.L172
 2335              	.LBB164:
 460:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k < 0) k = 0;
 2336              		.loc 1 460 21 is_stmt 1 view .LVU834
 460:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k < 0) k = 0;
 2337              		.loc 1 460 29 is_stmt 0 view .LVU835
 2338 008a 4A42     		rsbs	r2, r1, #0
 2339              	.LVL338:
 461:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k >= len) return LV_DRAW_MASK_RES_TRANSP;
 2340              		.loc 1 461 21 is_stmt 1 view .LVU836
 461:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k >= len) return LV_DRAW_MASK_RES_TRANSP;
 2341              		.loc 1 461 23 is_stmt 0 view .LVU837
 2342 008c 0029     		cmp	r1, #0
 2343 008e 03DD     		ble	.L180
 2344              	.L161:
 2345              	.LVL339:
 462:lvgl/src/lv_draw/lv_draw_mask.c ****                     else if(k >= 0 && k < len) _lv_memset_00(&mask_buf[0], k);
 2346              		.loc 1 462 21 is_stmt 1 view .LVU838
 462:lvgl/src/lv_draw/lv_draw_mask.c ****                     else if(k >= 0 && k < len) _lv_memset_00(&mask_buf[0], k);
 2347              		.loc 1 462 23 is_stmt 0 view .LVU839
 2348 0090 AB42     		cmp	r3, r5
 2349 0092 03DC     		bgt	.L181
 462:lvgl/src/lv_draw/lv_draw_mask.c ****                     else if(k >= 0 && k < len) _lv_memset_00(&mask_buf[0], k);
 2350              		.loc 1 462 41 view .LVU840
 2351 0094 0020     		movs	r0, #0
 2352              	.LVL340:
 462:lvgl/src/lv_draw/lv_draw_mask.c ****                     else if(k >= 0 && k < len) _lv_memset_00(&mask_buf[0], k);
 2353              		.loc 1 462 41 view .LVU841
 2354 0096 11E0     		b	.L156
 2355              	.LVL341:
 2356              	.L180:
 460:lvgl/src/lv_draw/lv_draw_mask.c ****                     if(k < 0) k = 0;
 2357              		.loc 1 460 29 view .LVU842
 2358 0098 1546     		mov	r5, r2
 2359 009a F9E7     		b	.L161
 2360              	.LVL342:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 78


 2361              	.L181:
 463:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2362              		.loc 1 463 26 is_stmt 1 view .LVU843
 463:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2363              		.loc 1 463 28 is_stmt 0 view .LVU844
 2364 009c 002D     		cmp	r5, #0
 2365 009e 01DA     		bge	.L182
 2366              	.LVL343:
 2367              	.L162:
 464:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 2368              		.loc 1 464 21 is_stmt 1 view .LVU845
 464:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 2369              		.loc 1 464 28 is_stmt 0 view .LVU846
 2370 00a0 0220     		movs	r0, #2
 2371 00a2 0BE0     		b	.L156
 2372              	.LVL344:
 2373              	.L182:
 463:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2374              		.loc 1 463 48 is_stmt 1 discriminator 2 view .LVU847
 2375 00a4 2946     		mov	r1, r5
 2376              	.LVL345:
 463:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2377              		.loc 1 463 48 is_stmt 0 discriminator 2 view .LVU848
 2378 00a6 FFF7FEFF 		bl	_lv_memset_00
 2379              	.LVL346:
 463:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2380              		.loc 1 463 48 discriminator 2 view .LVU849
 2381 00aa F9E7     		b	.L162
 2382              	.LVL347:
 2383              	.L154:
 463:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_CHANGED;
 2384              		.loc 1 463 48 discriminator 2 view .LVU850
 2385              	.LBE164:
 470:lvgl/src/lv_draw/lv_draw_mask.c ****     if(p->flat) {
 2386              		.loc 1 470 5 is_stmt 1 view .LVU851
 471:lvgl/src/lv_draw/lv_draw_mask.c ****         res = line_mask_flat(mask_buf, abs_x, abs_y, len, p);
 2387              		.loc 1 471 5 view .LVU852
 471:lvgl/src/lv_draw/lv_draw_mask.c ****         res = line_mask_flat(mask_buf, abs_x, abs_y, len, p);
 2388              		.loc 1 471 8 is_stmt 0 view .LVU853
 2389 00ac 94F82850 		ldrb	r5, [r4, #40]	@ zero_extendqisi2
 471:lvgl/src/lv_draw/lv_draw_mask.c ****         res = line_mask_flat(mask_buf, abs_x, abs_y, len, p);
 2390              		.loc 1 471 7 view .LVU854
 2391 00b0 15F0010F 		tst	r5, #1
 2392 00b4 04D0     		beq	.L163
 472:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 2393              		.loc 1 472 9 is_stmt 1 view .LVU855
 472:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 2394              		.loc 1 472 15 is_stmt 0 view .LVU856
 2395 00b6 0094     		str	r4, [sp]
 2396 00b8 FFF7FEFF 		bl	line_mask_flat
 2397              	.LVL348:
 2398              	.L156:
 479:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2399              		.loc 1 479 1 view .LVU857
 2400 00bc 02B0     		add	sp, sp, #8
 2401              	.LCFI8:
 2402              		.cfi_remember_state
ARM GAS  D:\Temp\ccPmLtDk.s 			page 79


 2403              		.cfi_def_cfa_offset 16
 2404              		@ sp needed
 2405 00be 70BD     		pop	{r4, r5, r6, pc}
 2406              	.LVL349:
 2407              	.L163:
 2408              	.LCFI9:
 2409              		.cfi_restore_state
 475:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 2410              		.loc 1 475 9 is_stmt 1 view .LVU858
 475:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 2411              		.loc 1 475 15 is_stmt 0 view .LVU859
 2412 00c0 0094     		str	r4, [sp]
 2413 00c2 FFF7FEFF 		bl	line_mask_steep
 2414              	.LVL350:
 475:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 2415              		.loc 1 475 15 view .LVU860
 2416 00c6 F9E7     		b	.L156
 2417              	.LVL351:
 2418              	.L164:
 435:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_TOP && abs_y + 1 < 0) return LV_DRAW_MASK
 2419              		.loc 1 435 68 view .LVU861
 2420 00c8 0120     		movs	r0, #1
 2421              	.LVL352:
 435:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_TOP && abs_y + 1 < 0) return LV_DRAW_MASK
 2422              		.loc 1 435 68 view .LVU862
 2423 00ca F7E7     		b	.L156
 2424              	.LVL353:
 2425              	.L166:
 439:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2426              		.loc 1 439 24 view .LVU863
 2427 00cc 0020     		movs	r0, #0
 2428              	.LVL354:
 439:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2429              		.loc 1 439 24 view .LVU864
 2430 00ce F5E7     		b	.L156
 2431              	.LVL355:
 2432              	.L168:
 446:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT && abs_x > 0) return LV_DRAW_MASK_R
 2433              		.loc 1 446 69 view .LVU865
 2434 00d0 0120     		movs	r0, #1
 2435              	.LVL356:
 446:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(p->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT && abs_x > 0) return LV_DRAW_MASK_R
 2436              		.loc 1 446 69 view .LVU866
 2437 00d2 F3E7     		b	.L156
 2438              	.LVL357:
 2439              	.L170:
 449:lvgl/src/lv_draw/lv_draw_mask.c ****                 else {
 2440              		.loc 1 449 44 view .LVU867
 2441 00d4 0120     		movs	r0, #1
 2442              	.LVL358:
 449:lvgl/src/lv_draw/lv_draw_mask.c ****                 else {
 2443              		.loc 1 449 44 view .LVU868
 2444 00d6 F1E7     		b	.L156
 2445              	.LVL359:
 2446              	.L172:
 458:lvgl/src/lv_draw/lv_draw_mask.c ****                 else {
 2447              		.loc 1 458 44 view .LVU869
ARM GAS  D:\Temp\ccPmLtDk.s 			page 80


 2448 00d8 0020     		movs	r0, #0
 2449              	.LVL360:
 458:lvgl/src/lv_draw/lv_draw_mask.c ****                 else {
 2450              		.loc 1 458 44 view .LVU870
 2451 00da EFE7     		b	.L156
 2452              		.cfi_endproc
 2453              	.LFE178:
 2455              		.section	.text.lv_draw_mask_angle,"ax",%progbits
 2456              		.align	1
 2457              		.syntax unified
 2458              		.thumb
 2459              		.thumb_func
 2460              		.fpu fpv4-sp-d16
 2462              	lv_draw_mask_angle:
 2463              	.LVL361:
 2464              	.LFB181:
 741:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t rel_y = abs_y - p->cfg.vertex_p.y;
 2465              		.loc 1 741 1 is_stmt 1 view -0
 2466              		.cfi_startproc
 2467              		@ args = 4, pretend = 0, frame = 0
 2468              		@ frame_needed = 0, uses_anonymous_args = 0
 741:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t rel_y = abs_y - p->cfg.vertex_p.y;
 2469              		.loc 1 741 1 is_stmt 0 view .LVU872
 2470 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2471              	.LCFI10:
 2472              		.cfi_def_cfa_offset 32
 2473              		.cfi_offset 4, -32
 2474              		.cfi_offset 5, -28
 2475              		.cfi_offset 6, -24
 2476              		.cfi_offset 7, -20
 2477              		.cfi_offset 8, -16
 2478              		.cfi_offset 9, -12
 2479              		.cfi_offset 10, -8
 2480              		.cfi_offset 14, -4
 2481 0004 82B0     		sub	sp, sp, #8
 2482              	.LCFI11:
 2483              		.cfi_def_cfa_offset 40
 2484 0006 8146     		mov	r9, r0
 2485 0008 0F46     		mov	r7, r1
 2486 000a 1546     		mov	r5, r2
 2487 000c 9846     		mov	r8, r3
 2488 000e 0A9C     		ldr	r4, [sp, #40]
 742:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t rel_x = abs_x - p->cfg.vertex_p.x;
 2489              		.loc 1 742 5 is_stmt 1 view .LVU873
 742:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t rel_x = abs_x - p->cfg.vertex_p.x;
 2490              		.loc 1 742 44 is_stmt 0 view .LVU874
 2491 0010 B4F90A20 		ldrsh	r2, [r4, #10]
 2492              	.LVL362:
 742:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t rel_x = abs_x - p->cfg.vertex_p.x;
 2493              		.loc 1 742 13 view .LVU875
 2494 0014 AE1A     		subs	r6, r5, r2
 2495              	.LVL363:
 743:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2496              		.loc 1 743 5 is_stmt 1 view .LVU876
 743:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2497              		.loc 1 743 44 is_stmt 0 view .LVU877
 2498 0016 B4F90830 		ldrsh	r3, [r4, #8]
ARM GAS  D:\Temp\ccPmLtDk.s 			page 81


 2499              	.LVL364:
 743:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2500              		.loc 1 743 13 view .LVU878
 2501 001a C91A     		subs	r1, r1, r3
 2502              	.LVL365:
 745:lvgl/src/lv_draw/lv_draw_mask.c ****        p->cfg.start_angle != 0  && p->cfg.end_angle != 0 &&
 2503              		.loc 1 745 5 is_stmt 1 view .LVU879
 745:lvgl/src/lv_draw/lv_draw_mask.c ****        p->cfg.start_angle != 0  && p->cfg.end_angle != 0 &&
 2504              		.loc 1 745 14 is_stmt 0 view .LVU880
 2505 001c B4F90C30 		ldrsh	r3, [r4, #12]
 745:lvgl/src/lv_draw/lv_draw_mask.c ****        p->cfg.start_angle != 0  && p->cfg.end_angle != 0 &&
 2506              		.loc 1 745 7 view .LVU881
 2507 0020 B32B     		cmp	r3, #179
 2508 0022 00F39380 		bgt	.L184
 745:lvgl/src/lv_draw/lv_draw_mask.c ****        p->cfg.start_angle != 0  && p->cfg.end_angle != 0 &&
 2509              		.loc 1 745 42 discriminator 1 view .LVU882
 2510 0026 B4F90E00 		ldrsh	r0, [r4, #14]
 2511              	.LVL366:
 745:lvgl/src/lv_draw/lv_draw_mask.c ****        p->cfg.start_angle != 0  && p->cfg.end_angle != 0 &&
 2512              		.loc 1 745 33 discriminator 1 view .LVU883
 2513 002a B328     		cmp	r0, #179
 2514 002c 00F38E80 		bgt	.L184
 745:lvgl/src/lv_draw/lv_draw_mask.c ****        p->cfg.start_angle != 0  && p->cfg.end_angle != 0 &&
 2515              		.loc 1 745 59 discriminator 2 view .LVU884
 2516 0030 002B     		cmp	r3, #0
 2517 0032 00F08B80 		beq	.L184
 746:lvgl/src/lv_draw/lv_draw_mask.c ****        p->cfg.start_angle > p->cfg.end_angle) {
 2518              		.loc 1 746 33 view .LVU885
 2519 0036 0028     		cmp	r0, #0
 2520 0038 00F08880 		beq	.L184
 746:lvgl/src/lv_draw/lv_draw_mask.c ****        p->cfg.start_angle > p->cfg.end_angle) {
 2521              		.loc 1 746 58 discriminator 1 view .LVU886
 2522 003c 8342     		cmp	r3, r0
 2523 003e 40F38580 		ble	.L184
 2524              	.LBB165:
 749:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 2525              		.loc 1 749 9 is_stmt 1 view .LVU887
 749:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 2526              		.loc 1 749 11 is_stmt 0 view .LVU888
 2527 0042 AA42     		cmp	r2, r5
 2528 0044 00F38681 		bgt	.L220
 754:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t start_angle_last = ((rel_y + 1) * p->start_line.xy_steep) >> 10;
 2529              		.loc 1 754 9 is_stmt 1 view .LVU889
 754:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t start_angle_last = ((rel_y + 1) * p->start_line.xy_steep) >> 10;
 2530              		.loc 1 754 55 is_stmt 0 view .LVU890
 2531 0048 626D     		ldr	r2, [r4, #84]
 754:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t start_angle_last = ((rel_y + 1) * p->start_line.xy_steep) >> 10;
 2532              		.loc 1 754 42 view .LVU891
 2533 004a 06FB02F2 		mul	r2, r6, r2
 754:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t start_angle_last = ((rel_y + 1) * p->start_line.xy_steep) >> 10;
 2534              		.loc 1 754 17 view .LVU892
 2535 004e 9212     		asrs	r2, r2, #10
 2536              	.LVL367:
 755:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2537              		.loc 1 755 9 is_stmt 1 view .LVU893
 755:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2538              		.loc 1 755 64 is_stmt 0 view .LVU894
ARM GAS  D:\Temp\ccPmLtDk.s 			page 82


 2539 0050 D4F828C0 		ldr	ip, [r4, #40]
 755:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2540              		.loc 1 755 49 view .LVU895
 2541 0054 06FB0CC6 		mla	r6, r6, ip, ip
 2542              	.LVL368:
 755:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2543              		.loc 1 755 17 view .LVU896
 2544 0058 B612     		asrs	r6, r6, #10
 2545              	.LVL369:
 758:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 2546              		.loc 1 758 9 is_stmt 1 view .LVU897
 758:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 2547              		.loc 1 758 37 is_stmt 0 view .LVU898
 2548 005a 9BB2     		uxth	r3, r3
 2549 005c A3F20F1C 		subw	ip, r3, #271
 2550 0060 1FFA8CFC 		uxth	ip, ip
 758:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 2551              		.loc 1 758 11 view .LVU899
 2552 0064 BCF1580F 		cmp	ip, #88
 2553 0068 01D8     		bhi	.L186
 758:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 2554              		.loc 1 758 66 discriminator 1 view .LVU900
 2555 006a 002E     		cmp	r6, #0
 2556 006c 10DB     		blt	.L221
 2557              	.L186:
 759:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2558              		.loc 1 759 14 is_stmt 1 view .LVU901
 759:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2559              		.loc 1 759 40 is_stmt 0 view .LVU902
 2560 006e 03F1FF3C 		add	ip, r3, #-1
 2561 0072 1FFA8CFC 		uxth	ip, ip
 759:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2562              		.loc 1 759 16 view .LVU903
 2563 0076 BCF1590F 		cmp	ip, #89
 2564 007a 01D8     		bhi	.L188
 759:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2565              		.loc 1 759 68 discriminator 1 view .LVU904
 2566 007c 002E     		cmp	r6, #0
 2567 007e 1EDB     		blt	.L222
 2568              	.L188:
 760:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2569              		.loc 1 760 14 is_stmt 1 view .LVU905
 760:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2570              		.loc 1 760 41 is_stmt 0 view .LVU906
 2571 0080 5B3B     		subs	r3, r3, #91
 2572 0082 9BB2     		uxth	r3, r3
 760:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2573              		.loc 1 760 16 view .LVU907
 2574 0084 B22B     		cmp	r3, #178
 2575 0086 04D8     		bhi	.L187
 760:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2576              		.loc 1 760 69 discriminator 1 view .LVU908
 2577 0088 002E     		cmp	r6, #0
 2578 008a 02DD     		ble	.L187
 760:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2579              		.loc 1 760 111 view .LVU909
 2580 008c 0026     		movs	r6, #0
ARM GAS  D:\Temp\ccPmLtDk.s 			page 83


 2581              	.LVL370:
 760:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2582              		.loc 1 760 111 view .LVU910
 2583 008e 00E0     		b	.L187
 2584              	.LVL371:
 2585              	.L221:
 758:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 2586              		.loc 1 758 108 view .LVU911
 2587 0090 0026     		movs	r6, #0
 2588              	.LVL372:
 2589              	.L187:
 762:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 2590              		.loc 1 762 9 is_stmt 1 view .LVU912
 762:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 2591              		.loc 1 762 35 is_stmt 0 view .LVU913
 2592 0092 80B2     		uxth	r0, r0
 2593 0094 A0F20F13 		subw	r3, r0, #271
 2594 0098 9BB2     		uxth	r3, r3
 762:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 2595              		.loc 1 762 11 view .LVU914
 2596 009a 582B     		cmp	r3, #88
 2597 009c 01D8     		bhi	.L189
 762:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 2598              		.loc 1 762 62 discriminator 1 view .LVU915
 2599 009e 002E     		cmp	r6, #0
 2600 00a0 0FDB     		blt	.L224
 2601              	.L189:
 763:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2602              		.loc 1 763 14 is_stmt 1 view .LVU916
 763:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2603              		.loc 1 763 38 is_stmt 0 view .LVU917
 2604 00a2 431E     		subs	r3, r0, #1
 2605 00a4 9BB2     		uxth	r3, r3
 763:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2606              		.loc 1 763 16 view .LVU918
 2607 00a6 592B     		cmp	r3, #89
 2608 00a8 01D8     		bhi	.L191
 763:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2609              		.loc 1 763 66 discriminator 1 view .LVU919
 2610 00aa 002E     		cmp	r6, #0
 2611 00ac 31DB     		blt	.L225
 2612              	.L191:
 764:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2613              		.loc 1 764 14 is_stmt 1 view .LVU920
 764:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2614              		.loc 1 764 39 is_stmt 0 view .LVU921
 2615 00ae 5B38     		subs	r0, r0, #91
 2616 00b0 83B2     		uxth	r3, r0
 764:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2617              		.loc 1 764 16 view .LVU922
 2618 00b2 B22B     		cmp	r3, #178
 2619 00b4 06D8     		bhi	.L190
 764:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2620              		.loc 1 764 66 discriminator 1 view .LVU923
 2621 00b6 002E     		cmp	r6, #0
 2622 00b8 04DD     		ble	.L190
 764:lvgl/src/lv_draw/lv_draw_mask.c **** 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 84


 2623              		.loc 1 764 108 view .LVU924
 2624 00ba 0026     		movs	r6, #0
 2625              	.LVL373:
 764:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2626              		.loc 1 764 108 view .LVU925
 2627 00bc 02E0     		b	.L190
 2628              	.LVL374:
 2629              	.L222:
 759:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2630              		.loc 1 759 110 view .LVU926
 2631 00be 0026     		movs	r6, #0
 2632              	.LVL375:
 759:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2633              		.loc 1 759 110 view .LVU927
 2634 00c0 E7E7     		b	.L187
 2635              	.LVL376:
 2636              	.L224:
 762:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 2637              		.loc 1 762 104 view .LVU928
 2638 00c2 0026     		movs	r6, #0
 2639              	.LVL377:
 2640              	.L190:
 766:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2641              		.loc 1 766 9 is_stmt 1 view .LVU929
 766:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2642              		.loc 1 766 41 is_stmt 0 view .LVU930
 2643 00c4 921B     		subs	r2, r2, r6
 2644              	.LVL378:
 768:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res2 = LV_DRAW_MASK_RES_FULL_COVER;
 2645              		.loc 1 768 9 is_stmt 1 view .LVU931
 769:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2646              		.loc 1 769 9 view .LVU932
 771:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > len) tmp = len;
 2647              		.loc 1 771 9 view .LVU933
 771:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > len) tmp = len;
 2648              		.loc 1 771 40 is_stmt 0 view .LVU934
 2649 00c6 06EB6206 		add	r6, r6, r2, asr #1
 2650              	.LVL379:
 771:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > len) tmp = len;
 2651              		.loc 1 771 17 view .LVU935
 2652 00ca A6EB010A 		sub	r10, r6, r1
 2653              	.LVL380:
 772:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > 0) {
 2654              		.loc 1 772 9 is_stmt 1 view .LVU936
 772:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > 0) {
 2655              		.loc 1 772 11 is_stmt 0 view .LVU937
 2656 00ce D045     		cmp	r8, r10
 2657 00d0 00DA     		bge	.L192
 772:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > 0) {
 2658              		.loc 1 772 27 view .LVU938
 2659 00d2 C246     		mov	r10, r8
 2660              	.LVL381:
 2661              	.L192:
 773:lvgl/src/lv_draw/lv_draw_mask.c ****             res1 = lv_draw_mask_line(&mask_buf[0], abs_x, abs_y, tmp, &p->start_line);
 2662              		.loc 1 773 9 is_stmt 1 view .LVU939
 773:lvgl/src/lv_draw/lv_draw_mask.c ****             res1 = lv_draw_mask_line(&mask_buf[0], abs_x, abs_y, tmp, &p->start_line);
 2663              		.loc 1 773 11 is_stmt 0 view .LVU940
ARM GAS  D:\Temp\ccPmLtDk.s 			page 85


 2664 00d4 BAF1000F 		cmp	r10, #0
 2665 00d8 1DDC     		bgt	.L256
 768:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res2 = LV_DRAW_MASK_RES_FULL_COVER;
 2666              		.loc 1 768 28 view .LVU941
 2667 00da 0126     		movs	r6, #1
 2668              	.LVL382:
 2669              	.L193:
 780:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp < 0) tmp = 0;
 2670              		.loc 1 780 9 is_stmt 1 view .LVU942
 780:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp < 0) tmp = 0;
 2671              		.loc 1 780 11 is_stmt 0 view .LVU943
 2672 00dc D045     		cmp	r8, r10
 2673 00de 00DA     		bge	.L194
 780:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp < 0) tmp = 0;
 2674              		.loc 1 780 27 view .LVU944
 2675 00e0 C246     		mov	r10, r8
 2676              	.LVL383:
 2677              	.L194:
 781:lvgl/src/lv_draw/lv_draw_mask.c ****         res2 = lv_draw_mask_line(&mask_buf[tmp], abs_x + tmp, abs_y, len - tmp, &p->end_line);
 2678              		.loc 1 781 9 is_stmt 1 view .LVU945
 781:lvgl/src/lv_draw/lv_draw_mask.c ****         res2 = lv_draw_mask_line(&mask_buf[tmp], abs_x + tmp, abs_y, len - tmp, &p->end_line);
 2679              		.loc 1 781 11 is_stmt 0 view .LVU946
 2680 00e2 BAF1000F 		cmp	r10, #0
 2681 00e6 28DB     		blt	.L257
 2682              	.LVL384:
 2683              	.L195:
 782:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 2684              		.loc 1 782 9 is_stmt 1 view .LVU947
 782:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 2685              		.loc 1 782 16 is_stmt 0 view .LVU948
 2686 00e8 D144     		add	r9, r9, r10
 2687              	.LVL385:
 782:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 2688              		.loc 1 782 56 view .LVU949
 2689 00ea 1FFA8AF3 		uxth	r3, r10
 2690 00ee D919     		adds	r1, r3, r7
 782:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 2691              		.loc 1 782 74 view .LVU950
 2692 00f0 A8EB0303 		sub	r3, r8, r3
 782:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 2693              		.loc 1 782 16 view .LVU951
 2694 00f4 3C34     		adds	r4, r4, #60
 2695 00f6 0094     		str	r4, [sp]
 2696 00f8 1BB2     		sxth	r3, r3
 2697 00fa 2A46     		mov	r2, r5
 2698 00fc 09B2     		sxth	r1, r1
 2699 00fe 4846     		mov	r0, r9
 2700 0100 FFF7FEFF 		bl	lv_draw_mask_line
 2701              	.LVL386:
 783:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[tmp], len - tmp);
 2702              		.loc 1 783 9 is_stmt 1 view .LVU952
 783:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[tmp], len - tmp);
 2703              		.loc 1 783 11 is_stmt 0 view .LVU953
 2704 0104 0446     		mov	r4, r0
 2705 0106 D8B1     		cbz	r0, .L258
 2706              	.LVL387:
 2707              	.L196:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 86


 786:lvgl/src/lv_draw/lv_draw_mask.c ****         else return LV_DRAW_MASK_RES_CHANGED;
 2708              		.loc 1 786 9 is_stmt 1 view .LVU954
 786:lvgl/src/lv_draw/lv_draw_mask.c ****         else return LV_DRAW_MASK_RES_CHANGED;
 2709              		.loc 1 786 11 is_stmt 0 view .LVU955
 2710 0108 A642     		cmp	r6, r4
 2711 010a 00F02881 		beq	.L185
 787:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 2712              		.loc 1 787 21 view .LVU956
 2713 010e 0226     		movs	r6, #2
 2714              	.LVL388:
 787:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 2715              		.loc 1 787 21 view .LVU957
 2716 0110 25E1     		b	.L185
 2717              	.LVL389:
 2718              	.L225:
 763:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2719              		.loc 1 763 108 view .LVU958
 2720 0112 0026     		movs	r6, #0
 2721              	.LVL390:
 763:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2722              		.loc 1 763 108 view .LVU959
 2723 0114 D6E7     		b	.L190
 2724              	.LVL391:
 2725              	.L256:
 774:lvgl/src/lv_draw/lv_draw_mask.c ****             if(res1 == LV_DRAW_MASK_RES_TRANSP) {
 2726              		.loc 1 774 13 is_stmt 1 view .LVU960
 774:lvgl/src/lv_draw/lv_draw_mask.c ****             if(res1 == LV_DRAW_MASK_RES_TRANSP) {
 2727              		.loc 1 774 20 is_stmt 0 view .LVU961
 2728 0116 04F11003 		add	r3, r4, #16
 2729 011a 0093     		str	r3, [sp]
 2730              	.LVL392:
 774:lvgl/src/lv_draw/lv_draw_mask.c ****             if(res1 == LV_DRAW_MASK_RES_TRANSP) {
 2731              		.loc 1 774 20 view .LVU962
 2732 011c 0FFA8AF3 		sxth	r3, r10
 2733 0120 2A46     		mov	r2, r5
 2734              	.LVL393:
 774:lvgl/src/lv_draw/lv_draw_mask.c ****             if(res1 == LV_DRAW_MASK_RES_TRANSP) {
 2735              		.loc 1 774 20 view .LVU963
 2736 0122 3946     		mov	r1, r7
 2737              	.LVL394:
 774:lvgl/src/lv_draw/lv_draw_mask.c ****             if(res1 == LV_DRAW_MASK_RES_TRANSP) {
 2738              		.loc 1 774 20 view .LVU964
 2739 0124 4846     		mov	r0, r9
 2740 0126 FFF7FEFF 		bl	lv_draw_mask_line
 2741              	.LVL395:
 775:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[0], tmp);
 2742              		.loc 1 775 13 is_stmt 1 view .LVU965
 775:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[0], tmp);
 2743              		.loc 1 775 15 is_stmt 0 view .LVU966
 2744 012a 0646     		mov	r6, r0
 2745 012c 0028     		cmp	r0, #0
 2746 012e D5D1     		bne	.L193
 776:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2747              		.loc 1 776 17 is_stmt 1 view .LVU967
 2748 0130 5146     		mov	r1, r10
 2749 0132 4846     		mov	r0, r9
 2750              	.LVL396:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 87


 776:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 2751              		.loc 1 776 17 is_stmt 0 view .LVU968
 2752 0134 FFF7FEFF 		bl	_lv_memset_00
 2753              	.LVL397:
 2754 0138 D0E7     		b	.L193
 2755              	.LVL398:
 2756              	.L257:
 781:lvgl/src/lv_draw/lv_draw_mask.c ****         res2 = lv_draw_mask_line(&mask_buf[tmp], abs_x + tmp, abs_y, len - tmp, &p->end_line);
 2757              		.loc 1 781 25 view .LVU969
 2758 013a 4FF0000A 		mov	r10, #0
 2759              	.LVL399:
 781:lvgl/src/lv_draw/lv_draw_mask.c ****         res2 = lv_draw_mask_line(&mask_buf[tmp], abs_x + tmp, abs_y, len - tmp, &p->end_line);
 2760              		.loc 1 781 25 view .LVU970
 2761 013e D3E7     		b	.L195
 2762              	.LVL400:
 2763              	.L258:
 784:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 2764              		.loc 1 784 13 is_stmt 1 view .LVU971
 2765 0140 A8EB0A01 		sub	r1, r8, r10
 2766 0144 4846     		mov	r0, r9
 2767              	.LVL401:
 784:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 2768              		.loc 1 784 13 is_stmt 0 view .LVU972
 2769 0146 FFF7FEFF 		bl	_lv_memset_00
 2770              	.LVL402:
 2771 014a DDE7     		b	.L196
 2772              	.LVL403:
 2773              	.L184:
 784:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 2774              		.loc 1 784 13 view .LVU973
 2775              	.LBE165:
 789:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2776              		.loc 1 789 10 is_stmt 1 view .LVU974
 789:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2777              		.loc 1 789 12 is_stmt 0 view .LVU975
 2778 014c B42B     		cmp	r3, #180
 2779 014e 40F39680 		ble	.L197
 789:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2780              		.loc 1 789 47 discriminator 1 view .LVU976
 2781 0152 B4F90E00 		ldrsh	r0, [r4, #14]
 789:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2782              		.loc 1 789 38 discriminator 1 view .LVU977
 2783 0156 B428     		cmp	r0, #180
 2784 0158 40F39180 		ble	.L197
 789:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2785              		.loc 1 789 64 discriminator 2 view .LVU978
 2786 015c 8342     		cmp	r3, r0
 2787 015e 40F38E80 		ble	.L197
 2788              	.LBB166:
 791:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 2789              		.loc 1 791 9 is_stmt 1 view .LVU979
 791:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 2790              		.loc 1 791 11 is_stmt 0 view .LVU980
 2791 0162 AA42     		cmp	r2, r5
 2792 0164 C0F2F880 		blt	.L232
 796:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t start_angle_last = ((rel_y + 1) * p->start_line.xy_steep) >> 10;
 2793              		.loc 1 796 9 is_stmt 1 view .LVU981
ARM GAS  D:\Temp\ccPmLtDk.s 			page 88


 796:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t start_angle_last = ((rel_y + 1) * p->start_line.xy_steep) >> 10;
 2794              		.loc 1 796 55 is_stmt 0 view .LVU982
 2795 0168 626D     		ldr	r2, [r4, #84]
 796:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t start_angle_last = ((rel_y + 1) * p->start_line.xy_steep) >> 10;
 2796              		.loc 1 796 42 view .LVU983
 2797 016a 06FB02F2 		mul	r2, r6, r2
 796:lvgl/src/lv_draw/lv_draw_mask.c ****         int32_t start_angle_last = ((rel_y + 1) * p->start_line.xy_steep) >> 10;
 2798              		.loc 1 796 17 view .LVU984
 2799 016e 4FEAA22C 		asr	ip, r2, #10
 2800              	.LVL404:
 797:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2801              		.loc 1 797 9 is_stmt 1 view .LVU985
 797:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2802              		.loc 1 797 64 is_stmt 0 view .LVU986
 2803 0172 A26A     		ldr	r2, [r4, #40]
 797:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2804              		.loc 1 797 49 view .LVU987
 2805 0174 06FB0222 		mla	r2, r6, r2, r2
 797:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2806              		.loc 1 797 17 view .LVU988
 2807 0178 4FEAA22A 		asr	r10, r2, #10
 2808              	.LVL405:
 800:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 2809              		.loc 1 800 9 is_stmt 1 view .LVU989
 800:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 2810              		.loc 1 800 37 is_stmt 0 view .LVU990
 2811 017c 9BB2     		uxth	r3, r3
 2812 017e A3F20F12 		subw	r2, r3, #271
 2813 0182 92B2     		uxth	r2, r2
 800:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 2814              		.loc 1 800 11 view .LVU991
 2815 0184 582A     		cmp	r2, #88
 2816 0186 02D8     		bhi	.L198
 800:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 2817              		.loc 1 800 66 discriminator 1 view .LVU992
 2818 0188 BAF1000F 		cmp	r10, #0
 2819 018c 10DB     		blt	.L233
 2820              	.L198:
 801:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2821              		.loc 1 801 14 is_stmt 1 view .LVU993
 801:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2822              		.loc 1 801 40 is_stmt 0 view .LVU994
 2823 018e 5A1E     		subs	r2, r3, #1
 2824 0190 92B2     		uxth	r2, r2
 801:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2825              		.loc 1 801 16 view .LVU995
 2826 0192 592A     		cmp	r2, #89
 2827 0194 02D8     		bhi	.L200
 801:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2828              		.loc 1 801 68 discriminator 1 view .LVU996
 2829 0196 BAF1000F 		cmp	r10, #0
 2830 019a 25DB     		blt	.L234
 2831              	.L200:
 802:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2832              		.loc 1 802 14 is_stmt 1 view .LVU997
 802:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2833              		.loc 1 802 41 is_stmt 0 view .LVU998
ARM GAS  D:\Temp\ccPmLtDk.s 			page 89


 2834 019c 5B3B     		subs	r3, r3, #91
 2835 019e 9BB2     		uxth	r3, r3
 802:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2836              		.loc 1 802 16 view .LVU999
 2837 01a0 B22B     		cmp	r3, #178
 2838 01a2 07D8     		bhi	.L199
 802:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2839              		.loc 1 802 69 discriminator 1 view .LVU1000
 2840 01a4 BAF1000F 		cmp	r10, #0
 2841 01a8 04DD     		ble	.L199
 802:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2842              		.loc 1 802 111 view .LVU1001
 2843 01aa 4FF0000A 		mov	r10, #0
 2844              	.LVL406:
 802:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2845              		.loc 1 802 111 view .LVU1002
 2846 01ae 01E0     		b	.L199
 2847              	.LVL407:
 2848              	.L233:
 800:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 0 && p->cfg.start_angle <= 90 && start_angle_last < 0) start_a
 2849              		.loc 1 800 108 view .LVU1003
 2850 01b0 4FF0000A 		mov	r10, #0
 2851              	.LVL408:
 2852              	.L199:
 804:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 2853              		.loc 1 804 9 is_stmt 1 view .LVU1004
 804:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 2854              		.loc 1 804 35 is_stmt 0 view .LVU1005
 2855 01b4 82B2     		uxth	r2, r0
 2856 01b6 A2F20F13 		subw	r3, r2, #271
 2857 01ba 9BB2     		uxth	r3, r3
 804:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 2858              		.loc 1 804 11 view .LVU1006
 2859 01bc 582B     		cmp	r3, #88
 2860 01be 02D8     		bhi	.L201
 804:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 2861              		.loc 1 804 62 discriminator 1 view .LVU1007
 2862 01c0 BAF1000F 		cmp	r10, #0
 2863 01c4 13DB     		blt	.L236
 2864              	.L201:
 805:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2865              		.loc 1 805 14 is_stmt 1 view .LVU1008
 805:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2866              		.loc 1 805 38 is_stmt 0 view .LVU1009
 2867 01c6 531E     		subs	r3, r2, #1
 2868 01c8 9BB2     		uxth	r3, r3
 805:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2869              		.loc 1 805 16 view .LVU1010
 2870 01ca 592B     		cmp	r3, #89
 2871 01cc 02D8     		bhi	.L203
 805:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2872              		.loc 1 805 66 discriminator 1 view .LVU1011
 2873 01ce BAF1000F 		cmp	r10, #0
 2874 01d2 36DB     		blt	.L237
 2875              	.L203:
 806:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2876              		.loc 1 806 14 is_stmt 1 view .LVU1012
ARM GAS  D:\Temp\ccPmLtDk.s 			page 90


 806:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2877              		.loc 1 806 39 is_stmt 0 view .LVU1013
 2878 01d4 5B3A     		subs	r2, r2, #91
 2879 01d6 92B2     		uxth	r2, r2
 806:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2880              		.loc 1 806 16 view .LVU1014
 2881 01d8 B22A     		cmp	r2, #178
 2882 01da 0AD8     		bhi	.L202
 806:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2883              		.loc 1 806 66 discriminator 1 view .LVU1015
 2884 01dc BAF1000F 		cmp	r10, #0
 2885 01e0 07DD     		ble	.L202
 806:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2886              		.loc 1 806 108 view .LVU1016
 2887 01e2 4FF0000A 		mov	r10, #0
 2888              	.LVL409:
 806:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2889              		.loc 1 806 108 view .LVU1017
 2890 01e6 04E0     		b	.L202
 2891              	.LVL410:
 2892              	.L234:
 801:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2893              		.loc 1 801 110 view .LVU1018
 2894 01e8 4FF0000A 		mov	r10, #0
 2895              	.LVL411:
 801:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.start_angle > 90 && p->cfg.start_angle < 270 && start_angle_last > 0) start_
 2896              		.loc 1 801 110 view .LVU1019
 2897 01ec E2E7     		b	.L199
 2898              	.LVL412:
 2899              	.L236:
 804:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 0 &&   p->cfg.end_angle <= 90 && start_angle_last < 0) start_ang
 2900              		.loc 1 804 104 view .LVU1020
 2901 01ee 4FF0000A 		mov	r10, #0
 2902              	.LVL413:
 2903              	.L202:
 808:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2904              		.loc 1 808 9 is_stmt 1 view .LVU1021
 808:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2905              		.loc 1 808 41 is_stmt 0 view .LVU1022
 2906 01f2 ACEB0A0C 		sub	ip, ip, r10
 2907              	.LVL414:
 810:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res2 = LV_DRAW_MASK_RES_FULL_COVER;
 2908              		.loc 1 810 9 is_stmt 1 view .LVU1023
 811:lvgl/src/lv_draw/lv_draw_mask.c **** 
 2909              		.loc 1 811 9 view .LVU1024
 813:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > len) tmp = len;
 2910              		.loc 1 813 9 view .LVU1025
 813:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > len) tmp = len;
 2911              		.loc 1 813 40 is_stmt 0 view .LVU1026
 2912 01f6 0AEB6C0A 		add	r10, r10, ip, asr #1
 2913              	.LVL415:
 813:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > len) tmp = len;
 2914              		.loc 1 813 17 view .LVU1027
 2915 01fa AAEB010A 		sub	r10, r10, r1
 2916              	.LVL416:
 814:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > 0) {
 2917              		.loc 1 814 9 is_stmt 1 view .LVU1028
ARM GAS  D:\Temp\ccPmLtDk.s 			page 91


 814:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > 0) {
 2918              		.loc 1 814 11 is_stmt 0 view .LVU1029
 2919 01fe D045     		cmp	r8, r10
 2920 0200 00DA     		bge	.L204
 814:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp > 0) {
 2921              		.loc 1 814 27 view .LVU1030
 2922 0202 C246     		mov	r10, r8
 2923              	.LVL417:
 2924              	.L204:
 815:lvgl/src/lv_draw/lv_draw_mask.c ****             res1 = lv_draw_mask_line(&mask_buf[0], abs_x, abs_y, tmp, (lv_draw_mask_line_param_t *)
 2925              		.loc 1 815 9 is_stmt 1 view .LVU1031
 815:lvgl/src/lv_draw/lv_draw_mask.c ****             res1 = lv_draw_mask_line(&mask_buf[0], abs_x, abs_y, tmp, (lv_draw_mask_line_param_t *)
 2926              		.loc 1 815 11 is_stmt 0 view .LVU1032
 2927 0204 BAF1000F 		cmp	r10, #0
 2928 0208 1EDC     		bgt	.L259
 810:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res2 = LV_DRAW_MASK_RES_FULL_COVER;
 2929              		.loc 1 810 28 view .LVU1033
 2930 020a 0126     		movs	r6, #1
 2931              	.LVL418:
 2932              	.L205:
 822:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp < 0) tmp = 0;
 2933              		.loc 1 822 9 is_stmt 1 view .LVU1034
 822:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp < 0) tmp = 0;
 2934              		.loc 1 822 11 is_stmt 0 view .LVU1035
 2935 020c D045     		cmp	r8, r10
 2936 020e 00DA     		bge	.L206
 822:lvgl/src/lv_draw/lv_draw_mask.c ****         if(tmp < 0) tmp = 0;
 2937              		.loc 1 822 27 view .LVU1036
 2938 0210 C246     		mov	r10, r8
 2939              	.LVL419:
 2940              	.L206:
 823:lvgl/src/lv_draw/lv_draw_mask.c ****         res2 = lv_draw_mask_line(&mask_buf[tmp], abs_x + tmp, abs_y, len - tmp, (lv_draw_mask_line_
 2941              		.loc 1 823 9 is_stmt 1 view .LVU1037
 823:lvgl/src/lv_draw/lv_draw_mask.c ****         res2 = lv_draw_mask_line(&mask_buf[tmp], abs_x + tmp, abs_y, len - tmp, (lv_draw_mask_line_
 2942              		.loc 1 823 11 is_stmt 0 view .LVU1038
 2943 0212 BAF1000F 		cmp	r10, #0
 2944 0216 29DB     		blt	.L260
 2945              	.LVL420:
 2946              	.L207:
 824:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 2947              		.loc 1 824 9 is_stmt 1 view .LVU1039
 824:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 2948              		.loc 1 824 16 is_stmt 0 view .LVU1040
 2949 0218 D144     		add	r9, r9, r10
 2950              	.LVL421:
 824:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 2951              		.loc 1 824 56 view .LVU1041
 2952 021a 1FFA8AF3 		uxth	r3, r10
 2953 021e D919     		adds	r1, r3, r7
 824:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 2954              		.loc 1 824 74 view .LVU1042
 2955 0220 A8EB0303 		sub	r3, r8, r3
 824:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res2 == LV_DRAW_MASK_RES_TRANSP) {
 2956              		.loc 1 824 16 view .LVU1043
 2957 0224 1034     		adds	r4, r4, #16
 2958 0226 0094     		str	r4, [sp]
 2959 0228 1BB2     		sxth	r3, r3
ARM GAS  D:\Temp\ccPmLtDk.s 			page 92


 2960 022a 2A46     		mov	r2, r5
 2961 022c 09B2     		sxth	r1, r1
 2962 022e 4846     		mov	r0, r9
 2963 0230 FFF7FEFF 		bl	lv_draw_mask_line
 2964              	.LVL422:
 825:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[tmp], len - tmp);
 2965              		.loc 1 825 9 is_stmt 1 view .LVU1044
 825:lvgl/src/lv_draw/lv_draw_mask.c ****             _lv_memset_00(&mask_buf[tmp], len - tmp);
 2966              		.loc 1 825 11 is_stmt 0 view .LVU1045
 2967 0234 0446     		mov	r4, r0
 2968 0236 E0B1     		cbz	r0, .L261
 2969              	.LVL423:
 2970              	.L208:
 828:lvgl/src/lv_draw/lv_draw_mask.c ****         else return LV_DRAW_MASK_RES_CHANGED;
 2971              		.loc 1 828 9 is_stmt 1 view .LVU1046
 828:lvgl/src/lv_draw/lv_draw_mask.c ****         else return LV_DRAW_MASK_RES_CHANGED;
 2972              		.loc 1 828 11 is_stmt 0 view .LVU1047
 2973 0238 A642     		cmp	r6, r4
 2974 023a 00F09080 		beq	.L185
 829:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 2975              		.loc 1 829 21 view .LVU1048
 2976 023e 0226     		movs	r6, #2
 2977              	.LVL424:
 829:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 2978              		.loc 1 829 21 view .LVU1049
 2979 0240 8DE0     		b	.L185
 2980              	.LVL425:
 2981              	.L237:
 805:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2982              		.loc 1 805 108 view .LVU1050
 2983 0242 4FF0000A 		mov	r10, #0
 2984              	.LVL426:
 805:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(p->cfg.end_angle > 90 &&  p->cfg.end_angle < 270 && start_angle_last > 0) start_ang
 2985              		.loc 1 805 108 view .LVU1051
 2986 0246 D4E7     		b	.L202
 2987              	.LVL427:
 2988              	.L259:
 816:lvgl/src/lv_draw/lv_draw_mask.c ****             if(res1 == LV_DRAW_MASK_RES_TRANSP) {
 2989              		.loc 1 816 13 is_stmt 1 view .LVU1052
 816:lvgl/src/lv_draw/lv_draw_mask.c ****             if(res1 == LV_DRAW_MASK_RES_TRANSP) {
 2990              		.loc 1 816 20 is_stmt 0 view .LVU1053
 2991 0248 04F13C03 		add	r3, r4, #60
 2992 024c 0093     		str	r3, [sp]
 2993              	.LVL428:
 816:lvgl/src/lv_draw/lv_draw_mask.c ****             if(res1 == LV_DRAW_MASK_RES_TRANSP) {
 2994              		.loc 1 816 20 view .LVU1054
 2995 024e 0FFA8AF3 		sxth	r3, r10
 2996 0252 2A46     		mov	r2, r5
 2997 0254 3946     		mov	r1, r7
 2998              	.LVL429:
 816:lvgl/src/lv_draw/lv_draw_mask.c ****             if(res1 == LV_DRAW_MASK_RES_TRANSP) {
 2999              		.loc 1 816 20 view .LVU1055
 3000 0256 4846     		mov	r0, r9
 3001 0258 FFF7FEFF 		bl	lv_draw_mask_line
 3002              	.LVL430:
 817:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[0], tmp);
 3003              		.loc 1 817 13 is_stmt 1 view .LVU1056
ARM GAS  D:\Temp\ccPmLtDk.s 			page 93


 817:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[0], tmp);
 3004              		.loc 1 817 15 is_stmt 0 view .LVU1057
 3005 025c 0646     		mov	r6, r0
 3006              	.LVL431:
 817:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[0], tmp);
 3007              		.loc 1 817 15 view .LVU1058
 3008 025e 0028     		cmp	r0, #0
 3009 0260 D4D1     		bne	.L205
 818:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3010              		.loc 1 818 17 is_stmt 1 view .LVU1059
 3011 0262 5146     		mov	r1, r10
 3012 0264 4846     		mov	r0, r9
 3013              	.LVL432:
 818:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3014              		.loc 1 818 17 is_stmt 0 view .LVU1060
 3015 0266 FFF7FEFF 		bl	_lv_memset_00
 3016              	.LVL433:
 3017 026a CFE7     		b	.L205
 3018              	.LVL434:
 3019              	.L260:
 823:lvgl/src/lv_draw/lv_draw_mask.c ****         res2 = lv_draw_mask_line(&mask_buf[tmp], abs_x + tmp, abs_y, len - tmp, (lv_draw_mask_line_
 3020              		.loc 1 823 25 view .LVU1061
 3021 026c 4FF0000A 		mov	r10, #0
 3022              	.LVL435:
 823:lvgl/src/lv_draw/lv_draw_mask.c ****         res2 = lv_draw_mask_line(&mask_buf[tmp], abs_x + tmp, abs_y, len - tmp, (lv_draw_mask_line_
 3023              		.loc 1 823 25 view .LVU1062
 3024 0270 D2E7     		b	.L207
 3025              	.LVL436:
 3026              	.L261:
 826:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3027              		.loc 1 826 13 is_stmt 1 view .LVU1063
 3028 0272 A8EB0A01 		sub	r1, r8, r10
 3029 0276 4846     		mov	r0, r9
 3030              	.LVL437:
 826:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3031              		.loc 1 826 13 is_stmt 0 view .LVU1064
 3032 0278 FFF7FEFF 		bl	_lv_memset_00
 3033              	.LVL438:
 3034 027c DCE7     		b	.L208
 3035              	.LVL439:
 3036              	.L197:
 826:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3037              		.loc 1 826 13 view .LVU1065
 3038              	.LBE166:
 3039              	.LBB167:
 833:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res2 = LV_DRAW_MASK_RES_FULL_COVER;
 3040              		.loc 1 833 9 is_stmt 1 view .LVU1066
 834:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3041              		.loc 1 834 9 view .LVU1067
 836:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res1 = LV_DRAW_MASK_RES_FULL_COVER;
 3042              		.loc 1 836 9 view .LVU1068
 836:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res1 = LV_DRAW_MASK_RES_FULL_COVER;
 3043              		.loc 1 836 11 is_stmt 0 view .LVU1069
 3044 027e B42B     		cmp	r3, #180
 3045 0280 05D0     		beq	.L262
 840:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res1 = LV_DRAW_MASK_RES_UNKNOWN;
 3046              		.loc 1 840 14 is_stmt 1 view .LVU1070
ARM GAS  D:\Temp\ccPmLtDk.s 			page 94


 840:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res1 = LV_DRAW_MASK_RES_UNKNOWN;
 3047              		.loc 1 840 16 is_stmt 0 view .LVU1071
 3048 0282 9BB9     		cbnz	r3, .L211
 841:lvgl/src/lv_draw/lv_draw_mask.c ****             else res1 = LV_DRAW_MASK_RES_FULL_COVER;
 3049              		.loc 1 841 13 is_stmt 1 view .LVU1072
 841:lvgl/src/lv_draw/lv_draw_mask.c ****             else res1 = LV_DRAW_MASK_RES_FULL_COVER;
 3050              		.loc 1 841 15 is_stmt 0 view .LVU1073
 3051 0284 AA42     		cmp	r2, r5
 3052 0286 27DD     		ble	.L245
 841:lvgl/src/lv_draw/lv_draw_mask.c ****             else res1 = LV_DRAW_MASK_RES_FULL_COVER;
 3053              		.loc 1 841 48 view .LVU1074
 3054 0288 4FF0030A 		mov	r10, #3
 3055 028c 03E0     		b	.L210
 3056              	.L262:
 837:lvgl/src/lv_draw/lv_draw_mask.c ****             else res1 = LV_DRAW_MASK_RES_UNKNOWN;
 3057              		.loc 1 837 13 is_stmt 1 view .LVU1075
 837:lvgl/src/lv_draw/lv_draw_mask.c ****             else res1 = LV_DRAW_MASK_RES_UNKNOWN;
 3058              		.loc 1 837 15 is_stmt 0 view .LVU1076
 3059 028e AA42     		cmp	r2, r5
 3060 0290 1FDD     		ble	.L244
 837:lvgl/src/lv_draw/lv_draw_mask.c ****             else res1 = LV_DRAW_MASK_RES_UNKNOWN;
 3061              		.loc 1 837 48 view .LVU1077
 3062 0292 4FF0010A 		mov	r10, #1
 3063              	.LVL440:
 3064              	.L210:
 852:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res2 = LV_DRAW_MASK_RES_UNKNOWN;
 3065              		.loc 1 852 9 is_stmt 1 view .LVU1078
 852:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res2 = LV_DRAW_MASK_RES_UNKNOWN;
 3066              		.loc 1 852 18 is_stmt 0 view .LVU1079
 3067 0296 B4F90E30 		ldrsh	r3, [r4, #14]
 852:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res2 = LV_DRAW_MASK_RES_UNKNOWN;
 3068              		.loc 1 852 11 view .LVU1080
 3069 029a B42B     		cmp	r3, #180
 3070 029c 25D0     		beq	.L263
 856:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res2 = LV_DRAW_MASK_RES_FULL_COVER;
 3071              		.loc 1 856 14 is_stmt 1 view .LVU1081
 856:lvgl/src/lv_draw/lv_draw_mask.c ****             if(abs_y < p->cfg.vertex_p.y) res2 = LV_DRAW_MASK_RES_FULL_COVER;
 3072              		.loc 1 856 16 is_stmt 0 view .LVU1082
 3073 029e BBBB     		cbnz	r3, .L216
 857:lvgl/src/lv_draw/lv_draw_mask.c ****             else res2 = LV_DRAW_MASK_RES_UNKNOWN;
 3074              		.loc 1 857 13 is_stmt 1 view .LVU1083
 857:lvgl/src/lv_draw/lv_draw_mask.c ****             else res2 = LV_DRAW_MASK_RES_UNKNOWN;
 3075              		.loc 1 857 39 is_stmt 0 view .LVU1084
 3076 02a0 B4F90A30 		ldrsh	r3, [r4, #10]
 857:lvgl/src/lv_draw/lv_draw_mask.c ****             else res2 = LV_DRAW_MASK_RES_UNKNOWN;
 3077              		.loc 1 857 15 view .LVU1085
 3078 02a4 AB42     		cmp	r3, r5
 3079 02a6 4BDD     		ble	.L249
 857:lvgl/src/lv_draw/lv_draw_mask.c ****             else res2 = LV_DRAW_MASK_RES_UNKNOWN;
 3080              		.loc 1 857 48 view .LVU1086
 3081 02a8 0126     		movs	r6, #1
 3082              	.LVL441:
 857:lvgl/src/lv_draw/lv_draw_mask.c ****             else res2 = LV_DRAW_MASK_RES_UNKNOWN;
 3083              		.loc 1 857 48 view .LVU1087
 3084 02aa 23E0     		b	.L215
 3085              	.LVL442:
 3086              	.L211:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 95


 844:lvgl/src/lv_draw/lv_draw_mask.c ****                 (p->cfg.start_angle > 180 && abs_y >= p->cfg.vertex_p.y)) {
 3087              		.loc 1 844 14 is_stmt 1 view .LVU1088
 844:lvgl/src/lv_draw/lv_draw_mask.c ****                 (p->cfg.start_angle > 180 && abs_y >= p->cfg.vertex_p.y)) {
 3088              		.loc 1 844 16 is_stmt 0 view .LVU1089
 3089 02ac B32B     		cmp	r3, #179
 3090 02ae 01DC     		bgt	.L212
 844:lvgl/src/lv_draw/lv_draw_mask.c ****                 (p->cfg.start_angle > 180 && abs_y >= p->cfg.vertex_p.y)) {
 3091              		.loc 1 844 43 discriminator 1 view .LVU1090
 3092 02b0 AA42     		cmp	r2, r5
 3093 02b2 14DC     		bgt	.L246
 3094              	.L212:
 844:lvgl/src/lv_draw/lv_draw_mask.c ****                 (p->cfg.start_angle > 180 && abs_y >= p->cfg.vertex_p.y)) {
 3095              		.loc 1 844 73 discriminator 3 view .LVU1091
 3096 02b4 B42B     		cmp	r3, #180
 3097 02b6 01DD     		ble	.L213
 845:lvgl/src/lv_draw/lv_draw_mask.c ****             res1 = LV_DRAW_MASK_RES_UNKNOWN;
 3098              		.loc 1 845 43 view .LVU1092
 3099 02b8 AA42     		cmp	r2, r5
 3100 02ba 13DD     		ble	.L247
 3101              	.L213:
 849:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3102              		.loc 1 849 13 is_stmt 1 view .LVU1093
 849:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3103              		.loc 1 849 20 is_stmt 0 view .LVU1094
 3104 02bc 04F11003 		add	r3, r4, #16
 3105 02c0 0093     		str	r3, [sp]
 3106 02c2 4346     		mov	r3, r8
 3107 02c4 2A46     		mov	r2, r5
 3108 02c6 3946     		mov	r1, r7
 3109              	.LVL443:
 849:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3110              		.loc 1 849 20 view .LVU1095
 3111 02c8 4846     		mov	r0, r9
 3112 02ca FFF7FEFF 		bl	lv_draw_mask_line
 3113              	.LVL444:
 3114 02ce 8246     		mov	r10, r0
 3115              	.LVL445:
 849:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3116              		.loc 1 849 20 view .LVU1096
 3117 02d0 E1E7     		b	.L210
 3118              	.LVL446:
 3119              	.L244:
 838:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3120              		.loc 1 838 23 view .LVU1097
 3121 02d2 4FF0030A 		mov	r10, #3
 3122 02d6 DEE7     		b	.L210
 3123              	.L245:
 842:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3124              		.loc 1 842 23 view .LVU1098
 3125 02d8 4FF0010A 		mov	r10, #1
 3126 02dc DBE7     		b	.L210
 3127              	.L246:
 846:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3128              		.loc 1 846 18 view .LVU1099
 3129 02de 4FF0030A 		mov	r10, #3
 3130 02e2 D8E7     		b	.L210
 3131              	.L247:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 96


 3132 02e4 4FF0030A 		mov	r10, #3
 3133 02e8 D5E7     		b	.L210
 3134              	.LVL447:
 3135              	.L263:
 853:lvgl/src/lv_draw/lv_draw_mask.c ****             else res2 = LV_DRAW_MASK_RES_FULL_COVER;
 3136              		.loc 1 853 13 is_stmt 1 view .LVU1100
 853:lvgl/src/lv_draw/lv_draw_mask.c ****             else res2 = LV_DRAW_MASK_RES_FULL_COVER;
 3137              		.loc 1 853 39 is_stmt 0 view .LVU1101
 3138 02ea B4F90A30 		ldrsh	r3, [r4, #10]
 853:lvgl/src/lv_draw/lv_draw_mask.c ****             else res2 = LV_DRAW_MASK_RES_FULL_COVER;
 3139              		.loc 1 853 15 view .LVU1102
 3140 02ee AB42     		cmp	r3, r5
 3141 02f0 24DD     		ble	.L248
 853:lvgl/src/lv_draw/lv_draw_mask.c ****             else res2 = LV_DRAW_MASK_RES_FULL_COVER;
 3142              		.loc 1 853 48 view .LVU1103
 3143 02f2 0326     		movs	r6, #3
 3144              	.LVL448:
 3145              	.L215:
 868:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_UNKNOWN && res2 == LV_DRAW_MASK_RES_UNKNOWN) return LV_DRA
 3146              		.loc 1 868 9 is_stmt 1 view .LVU1104
 868:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_UNKNOWN && res2 == LV_DRAW_MASK_RES_UNKNOWN) return LV_DRA
 3147              		.loc 1 868 11 is_stmt 0 view .LVU1105
 3148 02f4 BAF1000F 		cmp	r10, #0
 3149 02f8 30D0     		beq	.L252
 868:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_UNKNOWN && res2 == LV_DRAW_MASK_RES_UNKNOWN) return LV_DRA
 3150              		.loc 1 868 44 discriminator 2 view .LVU1106
 3151 02fa 86B3     		cbz	r6, .L185
 869:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_FULL_COVER &&  res2 == LV_DRAW_MASK_RES_FULL_COVER) return
 3152              		.loc 1 869 14 is_stmt 1 view .LVU1107
 869:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_FULL_COVER &&  res2 == LV_DRAW_MASK_RES_FULL_COVER) return
 3153              		.loc 1 869 16 is_stmt 0 view .LVU1108
 3154 02fc BAF1030F 		cmp	r10, #3
 3155 0300 24D0     		beq	.L264
 3156              	.L219:
 870:lvgl/src/lv_draw/lv_draw_mask.c ****         else return LV_DRAW_MASK_RES_CHANGED;
 3157              		.loc 1 870 14 is_stmt 1 view .LVU1109
 870:lvgl/src/lv_draw/lv_draw_mask.c ****         else return LV_DRAW_MASK_RES_CHANGED;
 3158              		.loc 1 870 16 is_stmt 0 view .LVU1110
 3159 0302 BAF1010F 		cmp	r10, #1
 3160 0306 2ED1     		bne	.L254
 870:lvgl/src/lv_draw/lv_draw_mask.c ****         else return LV_DRAW_MASK_RES_CHANGED;
 3161              		.loc 1 870 53 discriminator 1 view .LVU1111
 3162 0308 012E     		cmp	r6, #1
 3163 030a 28D0     		beq	.L185
 871:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 3164              		.loc 1 871 21 view .LVU1112
 3165 030c 0226     		movs	r6, #2
 3166              	.LVL449:
 871:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 3167              		.loc 1 871 21 view .LVU1113
 3168 030e 26E0     		b	.L185
 3169              	.LVL450:
 3170              	.L216:
 860:lvgl/src/lv_draw/lv_draw_mask.c ****                 (p->cfg.end_angle > 180 && abs_y >= p->cfg.vertex_p.y)) {
 3171              		.loc 1 860 14 is_stmt 1 view .LVU1114
 860:lvgl/src/lv_draw/lv_draw_mask.c ****                 (p->cfg.end_angle > 180 && abs_y >= p->cfg.vertex_p.y)) {
 3172              		.loc 1 860 16 is_stmt 0 view .LVU1115
ARM GAS  D:\Temp\ccPmLtDk.s 			page 97


 3173 0310 B32B     		cmp	r3, #179
 3174 0312 03DC     		bgt	.L217
 860:lvgl/src/lv_draw/lv_draw_mask.c ****                 (p->cfg.end_angle > 180 && abs_y >= p->cfg.vertex_p.y)) {
 3175              		.loc 1 860 67 discriminator 1 view .LVU1116
 3176 0314 B4F90A20 		ldrsh	r2, [r4, #10]
 860:lvgl/src/lv_draw/lv_draw_mask.c ****                 (p->cfg.end_angle > 180 && abs_y >= p->cfg.vertex_p.y)) {
 3177              		.loc 1 860 41 discriminator 1 view .LVU1117
 3178 0318 AA42     		cmp	r2, r5
 3179 031a 13DC     		bgt	.L250
 3180              	.L217:
 860:lvgl/src/lv_draw/lv_draw_mask.c ****                 (p->cfg.end_angle > 180 && abs_y >= p->cfg.vertex_p.y)) {
 3181              		.loc 1 860 71 discriminator 3 view .LVU1118
 3182 031c B42B     		cmp	r3, #180
 3183 031e 03DD     		ble	.L218
 861:lvgl/src/lv_draw/lv_draw_mask.c ****             res2 = LV_DRAW_MASK_RES_UNKNOWN;
 3184              		.loc 1 861 68 view .LVU1119
 3185 0320 B4F90A30 		ldrsh	r3, [r4, #10]
 861:lvgl/src/lv_draw/lv_draw_mask.c ****             res2 = LV_DRAW_MASK_RES_UNKNOWN;
 3186              		.loc 1 861 41 view .LVU1120
 3187 0324 AB42     		cmp	r3, r5
 3188 0326 0FDD     		ble	.L251
 3189              	.L218:
 865:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3190              		.loc 1 865 13 is_stmt 1 view .LVU1121
 865:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3191              		.loc 1 865 20 is_stmt 0 view .LVU1122
 3192 0328 3C34     		adds	r4, r4, #60
 3193 032a 0094     		str	r4, [sp]
 3194 032c 4346     		mov	r3, r8
 3195 032e 2A46     		mov	r2, r5
 3196 0330 3946     		mov	r1, r7
 3197 0332 4846     		mov	r0, r9
 3198 0334 FFF7FEFF 		bl	lv_draw_mask_line
 3199              	.LVL451:
 3200 0338 0646     		mov	r6, r0
 3201              	.LVL452:
 865:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3202              		.loc 1 865 20 view .LVU1123
 3203 033a DBE7     		b	.L215
 3204              	.LVL453:
 3205              	.L248:
 854:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3206              		.loc 1 854 23 view .LVU1124
 3207 033c 0126     		movs	r6, #1
 3208              	.LVL454:
 854:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3209              		.loc 1 854 23 view .LVU1125
 3210 033e D9E7     		b	.L215
 3211              	.LVL455:
 3212              	.L249:
 858:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3213              		.loc 1 858 23 view .LVU1126
 3214 0340 0326     		movs	r6, #3
 3215              	.LVL456:
 858:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3216              		.loc 1 858 23 view .LVU1127
 3217 0342 D7E7     		b	.L215
ARM GAS  D:\Temp\ccPmLtDk.s 			page 98


 3218              	.LVL457:
 3219              	.L250:
 862:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3220              		.loc 1 862 18 view .LVU1128
 3221 0344 0326     		movs	r6, #3
 3222              	.LVL458:
 862:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3223              		.loc 1 862 18 view .LVU1129
 3224 0346 D5E7     		b	.L215
 3225              	.LVL459:
 3226              	.L251:
 862:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3227              		.loc 1 862 18 view .LVU1130
 3228 0348 0326     		movs	r6, #3
 3229              	.LVL460:
 862:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3230              		.loc 1 862 18 view .LVU1131
 3231 034a D3E7     		b	.L215
 3232              	.LVL461:
 3233              	.L264:
 869:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_FULL_COVER &&  res2 == LV_DRAW_MASK_RES_FULL_COVER) return
 3234              		.loc 1 869 50 discriminator 1 view .LVU1132
 3235 034c 032E     		cmp	r6, #3
 3236 034e D8D1     		bne	.L219
 869:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_FULL_COVER &&  res2 == LV_DRAW_MASK_RES_FULL_COVER) return
 3237              		.loc 1 869 94 view .LVU1133
 3238 0350 0026     		movs	r6, #0
 3239              	.LVL462:
 869:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_FULL_COVER &&  res2 == LV_DRAW_MASK_RES_FULL_COVER) return
 3240              		.loc 1 869 94 view .LVU1134
 3241 0352 04E0     		b	.L185
 3242              	.LVL463:
 3243              	.L220:
 869:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_FULL_COVER &&  res2 == LV_DRAW_MASK_RES_FULL_COVER) return
 3244              		.loc 1 869 94 view .LVU1135
 3245              	.LBE167:
 3246              	.LBB168:
 750:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3247              		.loc 1 750 20 view .LVU1136
 3248 0354 0126     		movs	r6, #1
 3249              	.LVL464:
 750:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3250              		.loc 1 750 20 view .LVU1137
 3251 0356 02E0     		b	.L185
 3252              	.LVL465:
 3253              	.L232:
 750:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3254              		.loc 1 750 20 view .LVU1138
 3255              	.LBE168:
 3256              	.LBB169:
 792:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3257              		.loc 1 792 20 view .LVU1139
 3258 0358 0126     		movs	r6, #1
 3259              	.LVL466:
 792:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3260              		.loc 1 792 20 view .LVU1140
 3261 035a 00E0     		b	.L185
ARM GAS  D:\Temp\ccPmLtDk.s 			page 99


 3262              	.LVL467:
 3263              	.L252:
 792:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3264              		.loc 1 792 20 view .LVU1141
 3265              	.LBE169:
 3266              	.LBB170:
 868:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_UNKNOWN && res2 == LV_DRAW_MASK_RES_UNKNOWN) return LV_DRA
 3267              		.loc 1 868 87 view .LVU1142
 3268 035c 5646     		mov	r6, r10
 3269              	.LVL468:
 3270              	.L185:
 868:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res1 == LV_DRAW_MASK_RES_UNKNOWN && res2 == LV_DRAW_MASK_RES_UNKNOWN) return LV_DRA
 3271              		.loc 1 868 87 view .LVU1143
 3272              	.LBE170:
 873:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3273              		.loc 1 873 1 view .LVU1144
 3274 035e 3046     		mov	r0, r6
 3275 0360 02B0     		add	sp, sp, #8
 3276              	.LCFI12:
 3277              		.cfi_remember_state
 3278              		.cfi_def_cfa_offset 32
 3279              		@ sp needed
 3280 0362 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3281              	.LVL469:
 3282              	.L254:
 3283              	.LCFI13:
 3284              		.cfi_restore_state
 3285              	.LBB171:
 871:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 3286              		.loc 1 871 21 view .LVU1145
 3287 0366 0226     		movs	r6, #2
 3288              	.LVL470:
 871:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 3289              		.loc 1 871 21 view .LVU1146
 3290 0368 F9E7     		b	.L185
 3291              	.LBE171:
 3292              		.cfi_endproc
 3293              	.LFE181:
 3295              		.section	.text.lv_draw_mask_radius,"ax",%progbits
 3296              		.align	1
 3297              		.syntax unified
 3298              		.thumb
 3299              		.thumb_func
 3300              		.fpu fpv4-sp-d16
 3302              	lv_draw_mask_radius:
 3303              	.LVL471:
 3304              	.LFB182:
 878:lvgl/src/lv_draw/lv_draw_mask.c ****     bool outer = p->cfg.outer;
 3305              		.loc 1 878 1 is_stmt 1 view -0
 3306              		.cfi_startproc
 3307              		@ args = 4, pretend = 0, frame = 40
 3308              		@ frame_needed = 0, uses_anonymous_args = 0
 878:lvgl/src/lv_draw/lv_draw_mask.c ****     bool outer = p->cfg.outer;
 3309              		.loc 1 878 1 is_stmt 0 view .LVU1148
 3310 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3311              	.LCFI14:
 3312              		.cfi_def_cfa_offset 36
ARM GAS  D:\Temp\ccPmLtDk.s 			page 100


 3313              		.cfi_offset 4, -36
 3314              		.cfi_offset 5, -32
 3315              		.cfi_offset 6, -28
 3316              		.cfi_offset 7, -24
 3317              		.cfi_offset 8, -20
 3318              		.cfi_offset 9, -16
 3319              		.cfi_offset 10, -12
 3320              		.cfi_offset 11, -8
 3321              		.cfi_offset 14, -4
 3322 0004 8BB0     		sub	sp, sp, #44
 3323              	.LCFI15:
 3324              		.cfi_def_cfa_offset 80
 3325 0006 149E     		ldr	r6, [sp, #80]
 879:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t radius = p->cfg.radius;
 3326              		.loc 1 879 5 is_stmt 1 view .LVU1149
 879:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t radius = p->cfg.radius;
 3327              		.loc 1 879 24 is_stmt 0 view .LVU1150
 3328 0008 B57C     		ldrb	r5, [r6, #18]	@ zero_extendqisi2
 3329 000a 05F00105 		and	r5, r5, #1
 3330              	.LVL472:
 880:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_t rect;
 3331              		.loc 1 880 5 is_stmt 1 view .LVU1151
 880:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_t rect;
 3332              		.loc 1 880 28 is_stmt 0 view .LVU1152
 3333 000e B6F91070 		ldrsh	r7, [r6, #16]
 3334              	.LVL473:
 881:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_copy(&rect, &p->cfg.rect);
 3335              		.loc 1 881 5 is_stmt 1 view .LVU1153
 882:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3336              		.loc 1 882 5 view .LVU1154
 882:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3337              		.loc 1 882 25 is_stmt 0 view .LVU1155
 3338 0012 06F1080E 		add	lr, r6, #8
 3339              	.LVL474:
 3340              	.LBB172:
 3341              	.LBI172:
  97:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 3342              		.loc 2 97 20 is_stmt 1 view .LVU1156
 3343              	.LBE172:
  99:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 3344              		.loc 2 99 5 view .LVU1157
 3345              	.LBB177:
 3346              	.LBB173:
 3347              	.LBI173:
 3348              		.file 3 "lvgl/src/lv_draw/../lv_misc/lv_mem.h"
   1:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
   2:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @file lv_mem.h
   3:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *
   4:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
   5:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
   6:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #ifndef LV_MEM_H
   7:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #define LV_MEM_H
   8:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
   9:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #ifdef __cplusplus
  10:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** extern "C" {
  11:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #endif
  12:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 101


  13:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /*********************
  14:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *      INCLUDES
  15:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *********************/
  16:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  18:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include <stdint.h>
  19:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include <stddef.h>
  20:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include "lv_log.h"
  21:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include "lv_types.h"
  22:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  23:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
  24:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #include <string.h>
  25:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #endif
  26:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  27:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /*********************
  28:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *      DEFINES
  29:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *********************/
  30:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  31:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #ifndef LV_MEM_BUF_MAX_NUM
  32:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #define LV_MEM_BUF_MAX_NUM    16
  33:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #endif
  34:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  35:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**********************
  36:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *      TYPEDEFS
  37:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  **********************/
  38:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  39:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  40:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Heap information structure.
  41:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
  42:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** typedef struct {
  43:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t total_size; /**< Total heap size */
  44:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t free_cnt;
  45:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t free_size; /**< Size of available memory */
  46:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t free_biggest_size;
  47:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t used_cnt;
  48:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used */
  49:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint8_t used_pct; /**< Percentage used */
  50:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation */
  51:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** } lv_mem_monitor_t;
  52:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  53:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** typedef struct {
  54:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     void * p;
  55:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint16_t size;
  56:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint8_t used    : 1;
  57:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** } lv_mem_buf_t;
  58:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  59:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  60:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** extern lv_mem_buf_arr_t _lv_mem_buf;
  61:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  62:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**********************
  63:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * GLOBAL PROTOTYPES
  64:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  **********************/
  65:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  66:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  67:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  68:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
  69:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void _lv_mem_init(void);
ARM GAS  D:\Temp\ccPmLtDk.s 			page 102


  70:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  71:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  72:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
  73:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  74:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
  75:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void _lv_mem_deinit(void);
  76:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  77:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  78:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Allocate a memory dynamically
  79:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param size size of the memory to allocate in bytes
  80:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @return pointer to the allocated memory
  81:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
  82:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void * lv_mem_alloc(size_t size);
  83:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  84:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  85:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Free an allocated data
  86:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory
  87:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
  88:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void lv_mem_free(const void * data);
  89:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  90:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
  91:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  92:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory.
  93:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Its content will be copied to the new memory block and freed
  94:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param new_size the desired new size in byte
  95:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @return pointer to the new memory
  96:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
  97:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  98:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
  99:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 100:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Join the adjacent free memory blocks
 101:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 102:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void lv_mem_defrag(void);
 103:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 104:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 105:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *
 106:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @return
 107:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 108:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** lv_res_t lv_mem_test(void);
 109:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 110:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 111:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Give information about the work memory of dynamic allocation
 112:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param mon_p pointer to a dm_mon_p variable,
 113:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  *              the result of the analysis will be stored here
 114:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 115:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 116:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 117:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 118:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Give the size of an allocated memory
 119:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param data pointer to an allocated memory
 120:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @return the size of data memory in bytes
 121:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 122:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** uint32_t _lv_mem_get_size(const void * data);
 123:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 124:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 125:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Get a temporal buffer with the given size.
 126:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param size the required size
ARM GAS  D:\Temp\ccPmLtDk.s 			page 103


 127:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 128:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void * _lv_mem_buf_get(uint32_t size);
 129:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 130:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 131:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Release a memory buffer
 132:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param p buffer to release
 133:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 134:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void _lv_mem_buf_release(void * p);
 135:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 136:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 137:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Free all memory buffers
 138:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 139:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** void _lv_mem_buf_free_all(void);
 140:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 141:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** //! @cond Doxygen_Suppress
 142:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 143:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 144:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 145:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 146:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Wrapper for the standard memcpy
 147:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 148:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 149:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 150:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 151:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** static inline void * _lv_memcpy(void * dst, const void * src, size_t len)
 152:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 153:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     return memcpy(dst, src, len);
 154:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** }
 155:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 156:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 157:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Wrapper for the standard memcpy
 158:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 159:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 160:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 161:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 162:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** static inline void * _lv_memcpy_small(void * dst, const void * src, size_t len)
 163:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 164:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     return memcpy(dst, src, len);
 165:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** }
 166:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 167:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 168:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Wrapper for the standard memset
 169:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 170:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param v value to set [0..255]
 171:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to set
 172:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 173:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** static inline void _lv_memset(void * dst, uint8_t v, size_t len)
 174:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 175:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     memset(dst, v, len);
 176:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** }
 177:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 178:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 179:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 180:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 181:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to set
 182:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 183:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** static inline void _lv_memset_00(void * dst, size_t len)
ARM GAS  D:\Temp\ccPmLtDk.s 			page 104


 184:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 185:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     memset(dst, 0x00, len);
 186:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** }
 187:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 188:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 189:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 190:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 191:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to set
 192:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 193:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** static inline void _lv_memset_ff(void * dst, size_t len)
 194:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 195:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     memset(dst, 0xFF, len);
 196:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** }
 197:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 198:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** #else
 199:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 200:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 201:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 202:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 203:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 204:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 205:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * _lv_memcpy(void * dst, const void * src, size_t len);
 206:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 207:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** /**
 208:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 209:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 210:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param src pointer to the source buffer
 211:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  * @param len number of byte to copy
 212:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****  */
 213:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * _lv_memcpy_small(void * dst, const void * src, size_t le
 3349              		.loc 3 213 44 view .LVU1158
 3350              	.LBB174:
 214:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 3351              		.loc 3 215 5 view .LVU1159
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 3352              		.loc 3 216 5 view .LVU1160
 217:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     while(len) {
 3353              		.loc 3 218 5 view .LVU1161
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 3354              		.loc 3 215 15 is_stmt 0 view .LVU1162
 3355 0016 0DF1200C 		add	ip, sp, #32
 3356              	.LVL475:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 3357              		.loc 3 215 15 view .LVU1163
 3358              	.LBE174:
 3359              	.LBE173:
 3360              	.LBE177:
 882:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3361              		.loc 1 882 25 view .LVU1164
 3362 001a 0824     		movs	r4, #8
 3363              	.LVL476:
 3364              	.L266:
 3365              	.LBB178:
 3366              	.LBB176:
 3367              	.LBB175:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 105


 3368              		.loc 3 218 10 view .LVU1165
 3369 001c 2CB1     		cbz	r4, .L350
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 3370              		.loc 3 219 9 is_stmt 1 view .LVU1166
 3371              		.loc 3 219 15 is_stmt 0 view .LVU1167
 3372 001e 1EF8018B 		ldrb	r8, [lr], #1	@ zero_extendqisi2
 3373              	.LVL477:
 3374              		.loc 3 219 13 view .LVU1168
 3375 0022 0CF8018B 		strb	r8, [ip], #1
 3376              	.LVL478:
 220:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 3377              		.loc 3 220 9 is_stmt 1 view .LVU1169
 221:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         s8++;
 3378              		.loc 3 221 9 view .LVU1170
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         len--;
 3379              		.loc 3 222 9 view .LVU1171
 3380              		.loc 3 222 12 is_stmt 0 view .LVU1172
 3381 0026 013C     		subs	r4, r4, #1
 3382              	.LVL479:
 3383              		.loc 3 222 12 view .LVU1173
 3384 0028 F8E7     		b	.L266
 3385              	.L350:
 223:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 224:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 225:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     return dst;
 3386              		.loc 3 225 5 is_stmt 1 view .LVU1174
 3387              	.LVL480:
 3388              		.loc 3 225 5 is_stmt 0 view .LVU1175
 3389              	.LBE175:
 3390              	.LBE176:
 3391              	.LBE178:
 884:lvgl/src/lv_draw/lv_draw_mask.c ****         if(abs_y < rect.y1 || abs_y > rect.y2) {
 3392              		.loc 1 884 5 is_stmt 1 view .LVU1176
 884:lvgl/src/lv_draw/lv_draw_mask.c ****         if(abs_y < rect.y1 || abs_y > rect.y2) {
 3393              		.loc 1 884 7 is_stmt 0 view .LVU1177
 3394 002a E5BB     		cbnz	r5, .L268
 885:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 3395              		.loc 1 885 9 is_stmt 1 view .LVU1178
 885:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 3396              		.loc 1 885 24 is_stmt 0 view .LVU1179
 3397 002c BDF92240 		ldrsh	r4, [sp, #34]
 885:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 3398              		.loc 1 885 11 view .LVU1180
 3399 0030 9442     		cmp	r4, r2
 3400 0032 00F39082 		bgt	.L327
 885:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 3401              		.loc 1 885 43 discriminator 1 view .LVU1181
 3402 0036 BDF92640 		ldrsh	r4, [sp, #38]
 885:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_TRANSP;
 3403              		.loc 1 885 28 discriminator 1 view .LVU1182
 3404 003a 9442     		cmp	r4, r2
 3405 003c C0F28F82 		blt	.L351
 3406              	.L270:
 3407 0040 9846     		mov	r8, r3
 3408 0042 8B46     		mov	fp, r1
 3409 0044 8146     		mov	r9, r0
 895:lvgl/src/lv_draw/lv_draw_mask.c ****        (abs_y >= rect.y1 + radius && abs_y <= rect.y2 - radius)) {
ARM GAS  D:\Temp\ccPmLtDk.s 			page 106


 3410              		.loc 1 895 5 is_stmt 1 view .LVU1183
 895:lvgl/src/lv_draw/lv_draw_mask.c ****        (abs_y >= rect.y1 + radius && abs_y <= rect.y2 - radius)) {
 3411              		.loc 1 895 22 is_stmt 0 view .LVU1184
 3412 0046 BDF92030 		ldrsh	r3, [sp, #32]
 3413              	.LVL481:
 895:lvgl/src/lv_draw/lv_draw_mask.c ****        (abs_y >= rect.y1 + radius && abs_y <= rect.y2 - radius)) {
 3414              		.loc 1 895 26 view .LVU1185
 3415 004a D919     		adds	r1, r3, r7
 3416              	.LVL482:
 895:lvgl/src/lv_draw/lv_draw_mask.c ****        (abs_y >= rect.y1 + radius && abs_y <= rect.y2 - radius)) {
 3417              		.loc 1 895 7 view .LVU1186
 3418 004c 8B45     		cmp	fp, r1
 3419 004e 06DB     		blt	.L271
 895:lvgl/src/lv_draw/lv_draw_mask.c ****        (abs_y >= rect.y1 + radius && abs_y <= rect.y2 - radius)) {
 3420              		.loc 1 895 44 discriminator 1 view .LVU1187
 3421 0050 08EB0B00 		add	r0, r8, fp
 3422              	.LVL483:
 895:lvgl/src/lv_draw/lv_draw_mask.c ****        (abs_y >= rect.y1 + radius && abs_y <= rect.y2 - radius)) {
 3423              		.loc 1 895 57 discriminator 1 view .LVU1188
 3424 0054 BDF92410 		ldrsh	r1, [sp, #36]
 895:lvgl/src/lv_draw/lv_draw_mask.c ****        (abs_y >= rect.y1 + radius && abs_y <= rect.y2 - radius)) {
 3425              		.loc 1 895 61 discriminator 1 view .LVU1189
 3426 0058 C91B     		subs	r1, r1, r7
 895:lvgl/src/lv_draw/lv_draw_mask.c ****        (abs_y >= rect.y1 + radius && abs_y <= rect.y2 - radius)) {
 3427              		.loc 1 895 35 discriminator 1 view .LVU1190
 3428 005a 8842     		cmp	r0, r1
 3429 005c 09DD     		ble	.L272
 3430              	.L271:
 896:lvgl/src/lv_draw/lv_draw_mask.c ****         if(outer == false) {
 3431              		.loc 1 896 22 discriminator 3 view .LVU1191
 3432 005e BDF92210 		ldrsh	r1, [sp, #34]
 896:lvgl/src/lv_draw/lv_draw_mask.c ****         if(outer == false) {
 3433              		.loc 1 896 26 discriminator 3 view .LVU1192
 3434 0062 C819     		adds	r0, r1, r7
 895:lvgl/src/lv_draw/lv_draw_mask.c ****        (abs_y >= rect.y1 + radius && abs_y <= rect.y2 - radius)) {
 3435              		.loc 1 895 71 discriminator 3 view .LVU1193
 3436 0064 8242     		cmp	r2, r0
 3437 0066 50DB     		blt	.L273
 896:lvgl/src/lv_draw/lv_draw_mask.c ****         if(outer == false) {
 3438              		.loc 1 896 51 view .LVU1194
 3439 0068 BDF92600 		ldrsh	r0, [sp, #38]
 896:lvgl/src/lv_draw/lv_draw_mask.c ****         if(outer == false) {
 3440              		.loc 1 896 55 view .LVU1195
 3441 006c C01B     		subs	r0, r0, r7
 896:lvgl/src/lv_draw/lv_draw_mask.c ****         if(outer == false) {
 3442              		.loc 1 896 35 view .LVU1196
 3443 006e 8242     		cmp	r2, r0
 3444 0070 4BDC     		bgt	.L273
 3445              	.L272:
 897:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Remove the edges*/
 3446              		.loc 1 897 9 is_stmt 1 view .LVU1197
 897:lvgl/src/lv_draw/lv_draw_mask.c ****             /*Remove the edges*/
 3447              		.loc 1 897 11 is_stmt 0 view .LVU1198
 3448 0072 7DBB     		cbnz	r5, .L274
 3449              	.LBB179:
 899:lvgl/src/lv_draw/lv_draw_mask.c ****             if(last > len) return LV_DRAW_MASK_RES_TRANSP;
 3450              		.loc 1 899 13 is_stmt 1 view .LVU1199
ARM GAS  D:\Temp\ccPmLtDk.s 			page 107


 899:lvgl/src/lv_draw/lv_draw_mask.c ****             if(last > len) return LV_DRAW_MASK_RES_TRANSP;
 3451              		.loc 1 899 21 is_stmt 0 view .LVU1200
 3452 0074 A3EB0B05 		sub	r5, r3, fp
 3453              	.LVL484:
 900:lvgl/src/lv_draw/lv_draw_mask.c ****             if(last >= 0) {
 3454              		.loc 1 900 13 is_stmt 1 view .LVU1201
 900:lvgl/src/lv_draw/lv_draw_mask.c ****             if(last >= 0) {
 3455              		.loc 1 900 15 is_stmt 0 view .LVU1202
 3456 0078 A845     		cmp	r8, r5
 3457 007a C0F27482 		blt	.L331
 901:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[0], last);
 3458              		.loc 1 901 13 is_stmt 1 view .LVU1203
 901:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[0], last);
 3459              		.loc 1 901 15 is_stmt 0 view .LVU1204
 3460 007e 002D     		cmp	r5, #0
 3461 0080 1CDA     		bge	.L352
 3462              	.LVL485:
 3463              	.L275:
 905:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first <= 0) return LV_DRAW_MASK_RES_TRANSP;
 3464              		.loc 1 905 13 is_stmt 1 view .LVU1205
 905:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first <= 0) return LV_DRAW_MASK_RES_TRANSP;
 3465              		.loc 1 905 33 is_stmt 0 view .LVU1206
 3466 0082 BDF92430 		ldrsh	r3, [sp, #36]
 905:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first <= 0) return LV_DRAW_MASK_RES_TRANSP;
 3467              		.loc 1 905 37 view .LVU1207
 3468 0086 A3EB0B04 		sub	r4, r3, fp
 905:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first <= 0) return LV_DRAW_MASK_RES_TRANSP;
 3469              		.loc 1 905 21 view .LVU1208
 3470 008a 0134     		adds	r4, r4, #1
 3471              	.LVL486:
 906:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(first < len) {
 3472              		.loc 1 906 13 is_stmt 1 view .LVU1209
 906:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(first < len) {
 3473              		.loc 1 906 15 is_stmt 0 view .LVU1210
 3474 008c 002C     		cmp	r4, #0
 3475 008e 40F36C82 		ble	.L332
 907:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[first], len - first);
 3476              		.loc 1 907 18 is_stmt 1 view .LVU1211
 907:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_memset_00(&mask_buf[first], len - first);
 3477              		.loc 1 907 20 is_stmt 0 view .LVU1212
 3478 0092 A045     		cmp	r8, r4
 3479 0094 17DC     		bgt	.L353
 3480              	.L276:
 910:lvgl/src/lv_draw/lv_draw_mask.c ****             else return LV_DRAW_MASK_RES_CHANGED;
 3481              		.loc 1 910 13 is_stmt 1 view .LVU1213
 910:lvgl/src/lv_draw/lv_draw_mask.c ****             else return LV_DRAW_MASK_RES_CHANGED;
 3482              		.loc 1 910 15 is_stmt 0 view .LVU1214
 3483 0096 002D     		cmp	r5, #0
 3484 0098 40F06982 		bne	.L333
 910:lvgl/src/lv_draw/lv_draw_mask.c ****             else return LV_DRAW_MASK_RES_CHANGED;
 3485              		.loc 1 910 26 discriminator 1 view .LVU1215
 3486 009c A045     		cmp	r8, r4
 3487 009e 00F06882 		beq	.L334
 911:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3488              		.loc 1 911 25 view .LVU1216
 3489 00a2 0220     		movs	r0, #2
 3490 00a4 58E2     		b	.L269
ARM GAS  D:\Temp\ccPmLtDk.s 			page 108


 3491              	.LVL487:
 3492              	.L268:
 911:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3493              		.loc 1 911 25 view .LVU1217
 3494              	.LBE179:
 890:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 3495              		.loc 1 890 9 is_stmt 1 view .LVU1218
 890:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 3496              		.loc 1 890 24 is_stmt 0 view .LVU1219
 3497 00a6 BDF92240 		ldrsh	r4, [sp, #34]
 890:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 3498              		.loc 1 890 11 view .LVU1220
 3499 00aa 9442     		cmp	r4, r2
 3500 00ac 00F35982 		bgt	.L329
 890:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 3501              		.loc 1 890 43 discriminator 1 view .LVU1221
 3502 00b0 BDF92640 		ldrsh	r4, [sp, #38]
 890:lvgl/src/lv_draw/lv_draw_mask.c ****             return LV_DRAW_MASK_RES_FULL_COVER;
 3503              		.loc 1 890 28 discriminator 1 view .LVU1222
 3504 00b4 9442     		cmp	r4, r2
 3505 00b6 C3DA     		bge	.L270
 891:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3506              		.loc 1 891 20 view .LVU1223
 3507 00b8 0120     		movs	r0, #1
 3508              	.LVL488:
 891:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3509              		.loc 1 891 20 view .LVU1224
 3510 00ba 4DE2     		b	.L269
 3511              	.LVL489:
 3512              	.L352:
 3513              	.LBB180:
 902:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3514              		.loc 1 902 17 is_stmt 1 view .LVU1225
 3515 00bc 2946     		mov	r1, r5
 3516 00be 4846     		mov	r0, r9
 3517 00c0 FFF7FEFF 		bl	_lv_memset_00
 3518              	.LVL490:
 902:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3519              		.loc 1 902 17 is_stmt 0 view .LVU1226
 3520 00c4 DDE7     		b	.L275
 3521              	.LVL491:
 3522              	.L353:
 908:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3523              		.loc 1 908 17 is_stmt 1 view .LVU1227
 3524 00c6 A8EB0401 		sub	r1, r8, r4
 3525 00ca 09EB0400 		add	r0, r9, r4
 3526 00ce FFF7FEFF 		bl	_lv_memset_00
 3527              	.LVL492:
 3528 00d2 E0E7     		b	.L276
 3529              	.LVL493:
 3530              	.L274:
 908:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3531              		.loc 1 908 17 is_stmt 0 view .LVU1228
 3532              	.LBE180:
 3533              	.LBB181:
 914:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first < 0) first = 0;
 3534              		.loc 1 914 13 is_stmt 1 view .LVU1229
ARM GAS  D:\Temp\ccPmLtDk.s 			page 109


 915:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first <= len) {
 3535              		.loc 1 915 13 view .LVU1230
 915:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first <= len) {
 3536              		.loc 1 915 15 is_stmt 0 view .LVU1231
 3537 00d4 B3EB0B03 		subs	r3, r3, fp
 3538              	.LVL494:
 915:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first <= len) {
 3539              		.loc 1 915 15 view .LVU1232
 3540 00d8 10D4     		bmi	.L354
 3541              	.LVL495:
 3542              	.L277:
 916:lvgl/src/lv_draw/lv_draw_mask.c ****                 int32_t last =  rect.x2 - abs_x - first + 1;
 3543              		.loc 1 916 13 is_stmt 1 view .LVU1233
 916:lvgl/src/lv_draw/lv_draw_mask.c ****                 int32_t last =  rect.x2 - abs_x - first + 1;
 3544              		.loc 1 916 15 is_stmt 0 view .LVU1234
 3545 00da 9845     		cmp	r8, r3
 3546 00dc 0CDB     		blt	.L278
 3547              	.LBB182:
 917:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first + last > len) last = len - first;
 3548              		.loc 1 917 17 is_stmt 1 view .LVU1235
 917:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first + last > len) last = len - first;
 3549              		.loc 1 917 37 is_stmt 0 view .LVU1236
 3550 00de BDF92410 		ldrsh	r1, [sp, #36]
 917:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first + last > len) last = len - first;
 3551              		.loc 1 917 41 view .LVU1237
 3552 00e2 A1EB0B01 		sub	r1, r1, fp
 917:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first + last > len) last = len - first;
 3553              		.loc 1 917 49 view .LVU1238
 3554 00e6 C91A     		subs	r1, r1, r3
 917:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first + last > len) last = len - first;
 3555              		.loc 1 917 25 view .LVU1239
 3556 00e8 0131     		adds	r1, r1, #1
 3557              	.LVL496:
 918:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(last >= 0) {
 3558              		.loc 1 918 17 is_stmt 1 view .LVU1240
 918:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(last >= 0) {
 3559              		.loc 1 918 26 is_stmt 0 view .LVU1241
 3560 00ea 5A18     		adds	r2, r3, r1
 3561              	.LVL497:
 918:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(last >= 0) {
 3562              		.loc 1 918 19 view .LVU1242
 3563 00ec 9045     		cmp	r8, r2
 3564 00ee 01DA     		bge	.L279
 918:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(last >= 0) {
 3565              		.loc 1 918 40 is_stmt 1 discriminator 1 view .LVU1243
 918:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(last >= 0) {
 3566              		.loc 1 918 45 is_stmt 0 discriminator 1 view .LVU1244
 3567 00f0 A8EB0301 		sub	r1, r8, r3
 3568              	.LVL498:
 3569              	.L279:
 919:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], last);
 3570              		.loc 1 919 17 is_stmt 1 view .LVU1245
 919:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], last);
 3571              		.loc 1 919 19 is_stmt 0 view .LVU1246
 3572 00f4 0029     		cmp	r1, #0
 3573 00f6 03DA     		bge	.L355
 3574              	.LVL499:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 110


 3575              	.L278:
 919:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], last);
 3576              		.loc 1 919 19 view .LVU1247
 3577              	.LBE182:
 3578              	.LBE181:
 924:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 3579              		.loc 1 924 9 is_stmt 1 view .LVU1248
 924:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 3580              		.loc 1 924 16 is_stmt 0 view .LVU1249
 3581 00f8 0220     		movs	r0, #2
 3582 00fa 2DE2     		b	.L269
 3583              	.LVL500:
 3584              	.L354:
 3585              	.LBB184:
 915:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first <= len) {
 3586              		.loc 1 915 33 view .LVU1250
 3587 00fc 0023     		movs	r3, #0
 3588              	.LVL501:
 915:lvgl/src/lv_draw/lv_draw_mask.c ****             if(first <= len) {
 3589              		.loc 1 915 33 view .LVU1251
 3590 00fe ECE7     		b	.L277
 3591              	.LVL502:
 3592              	.L355:
 3593              	.LBB183:
 920:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 3594              		.loc 1 920 21 is_stmt 1 view .LVU1252
 3595 0100 09EB0300 		add	r0, r9, r3
 3596 0104 FFF7FEFF 		bl	_lv_memset_00
 3597              	.LVL503:
 920:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 3598              		.loc 1 920 21 is_stmt 0 view .LVU1253
 3599 0108 F6E7     		b	.L278
 3600              	.LVL504:
 3601              	.L273:
 920:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 3602              		.loc 1 920 21 view .LVU1254
 3603              	.LBE183:
 3604              	.LBE184:
 927:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t w = lv_area_get_width(&rect);
 3605              		.loc 1 927 5 is_stmt 1 view .LVU1255
 927:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t w = lv_area_get_width(&rect);
 3606              		.loc 1 927 13 is_stmt 0 view .LVU1256
 3607 010a A3EB0B0B 		sub	fp, r3, fp
 3608              	.LVL505:
 928:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t h = lv_area_get_height(&rect);
 3609              		.loc 1 928 5 is_stmt 1 view .LVU1257
 3610              	.LBB185:
 3611              	.LBI185:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 3612              		.loc 2 107 26 view .LVU1258
 3613              	.LBB186:
 3614              		.loc 2 109 5 view .LVU1259
 3615              		.loc 2 109 31 is_stmt 0 view .LVU1260
 3616 010e BDF82400 		ldrh	r0, [sp, #36]
 3617              		.loc 2 109 44 view .LVU1261
 3618 0112 9BB2     		uxth	r3, r3
 3619              		.loc 2 109 36 view .LVU1262
ARM GAS  D:\Temp\ccPmLtDk.s 			page 111


 3620 0114 C31A     		subs	r3, r0, r3
 3621 0116 9BB2     		uxth	r3, r3
 3622              		.loc 2 109 49 view .LVU1263
 3623 0118 0133     		adds	r3, r3, #1
 3624              		.loc 2 109 12 view .LVU1264
 3625 011a 1BB2     		sxth	r3, r3
 3626 011c 0393     		str	r3, [sp, #12]
 3627              	.LVL506:
 3628              		.loc 2 109 12 view .LVU1265
 3629              	.LBE186:
 3630              	.LBE185:
 929:lvgl/src/lv_draw/lv_draw_mask.c ****     abs_x -= rect.x1;
 3631              		.loc 1 929 5 is_stmt 1 view .LVU1266
 3632              	.LBB187:
 3633              	.LBI187:
 110:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 111:lvgl/src/lv_draw/../lv_misc/lv_area.h **** 
 112:lvgl/src/lv_draw/../lv_misc/lv_area.h **** /**
 113:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * Get the height of an area
 114:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @param area_p pointer to an area
 115:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 116:lvgl/src/lv_draw/../lv_misc/lv_area.h ****  */
 117:lvgl/src/lv_draw/../lv_misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 3634              		.loc 2 117 26 view .LVU1267
 3635              	.LBB188:
 118:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 119:lvgl/src/lv_draw/../lv_misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 3636              		.loc 2 119 5 view .LVU1268
 3637              		.loc 2 119 31 is_stmt 0 view .LVU1269
 3638 011e BDF82630 		ldrh	r3, [sp, #38]
 3639              	.LVL507:
 3640              		.loc 2 119 44 view .LVU1270
 3641 0122 89B2     		uxth	r1, r1
 3642              		.loc 2 119 36 view .LVU1271
 3643 0124 5B1A     		subs	r3, r3, r1
 3644 0126 9BB2     		uxth	r3, r3
 3645              		.loc 2 119 49 view .LVU1272
 3646 0128 0133     		adds	r3, r3, #1
 3647              		.loc 2 119 12 view .LVU1273
 3648 012a 1BB2     		sxth	r3, r3
 3649              	.LVL508:
 3650              		.loc 2 119 12 view .LVU1274
 3651              	.LBE188:
 3652              	.LBE187:
 930:lvgl/src/lv_draw/lv_draw_mask.c ****     abs_y -= rect.y1;
 3653              		.loc 1 930 5 is_stmt 1 view .LVU1275
 931:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3654              		.loc 1 931 5 view .LVU1276
 931:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3655              		.loc 1 931 11 is_stmt 0 view .LVU1277
 3656 012c 521A     		subs	r2, r2, r1
 3657              	.LVL509:
 931:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3658              		.loc 1 931 11 view .LVU1278
 3659 012e 12B2     		sxth	r2, r2
 3660              	.LVL510:
 933:lvgl/src/lv_draw/lv_draw_mask.c **** 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 112


 3661              		.loc 1 933 5 is_stmt 1 view .LVU1279
 933:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3662              		.loc 1 933 25 is_stmt 0 view .LVU1280
 3663 0130 B6F910A0 		ldrsh	r10, [r6, #16]
 933:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3664              		.loc 1 933 33 view .LVU1281
 3665 0134 0AFB0AFA 		mul	r10, r10, r10
 3666              	.LVL511:
 936:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3667              		.loc 1 936 5 is_stmt 1 view .LVU1282
 936:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3668              		.loc 1 936 7 is_stmt 0 view .LVU1283
 3669 0138 9742     		cmp	r7, r2
 3670 013a 03DC     		bgt	.L280
 936:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3671              		.loc 1 936 36 discriminator 1 view .LVU1284
 3672 013c D91B     		subs	r1, r3, r7
 936:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3673              		.loc 1 936 23 discriminator 1 view .LVU1285
 3674 013e 8A42     		cmp	r2, r1
 3675 0140 C0F21982 		blt	.L336
 3676              	.L280:
 3677              	.LBB189:
 938:lvgl/src/lv_draw/lv_draw_mask.c ****         if(radius <= 32) sqrt_mask = 0x200;
 3678              		.loc 1 938 9 is_stmt 1 view .LVU1286
 939:lvgl/src/lv_draw/lv_draw_mask.c ****         if(radius <= 256) sqrt_mask = 0x800;
 3679              		.loc 1 939 9 view .LVU1287
 940:lvgl/src/lv_draw/lv_draw_mask.c ****         else sqrt_mask = 0x8000;
 3680              		.loc 1 940 9 view .LVU1288
 940:lvgl/src/lv_draw/lv_draw_mask.c ****         else sqrt_mask = 0x8000;
 3681              		.loc 1 940 11 is_stmt 0 view .LVU1289
 3682 0144 B7F5807F 		cmp	r7, #256
 3683 0148 00F3AB80 		bgt	.L337
 940:lvgl/src/lv_draw/lv_draw_mask.c ****         else sqrt_mask = 0x8000;
 3684              		.loc 1 940 37 view .LVU1290
 3685 014c 4FF40061 		mov	r1, #2048
 3686 0150 0191     		str	r1, [sp, #4]
 3687              	.L281:
 3688              	.LVL512:
 943:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_sqrt_res_t x1;
 3689              		.loc 1 943 9 is_stmt 1 view .LVU1291
 944:lvgl/src/lv_draw/lv_draw_mask.c ****         /* y = 0 should mean the top of the circle */
 3690              		.loc 1 944 9 view .LVU1292
 946:lvgl/src/lv_draw/lv_draw_mask.c ****         if(abs_y < radius) {
 3691              		.loc 1 946 9 view .LVU1293
 947:lvgl/src/lv_draw/lv_draw_mask.c ****             y = radius - abs_y;
 3692              		.loc 1 947 9 view .LVU1294
 947:lvgl/src/lv_draw/lv_draw_mask.c ****             y = radius - abs_y;
 3693              		.loc 1 947 11 is_stmt 0 view .LVU1295
 3694 0152 9742     		cmp	r7, r2
 3695 0154 40F3B180 		ble	.L282
 948:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3696              		.loc 1 948 13 is_stmt 1 view .LVU1296
 948:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3697              		.loc 1 948 15 is_stmt 0 view .LVU1297
 3698 0158 BB1A     		subs	r3, r7, r2
 3699              	.LVL513:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 113


 948:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3700              		.loc 1 948 15 view .LVU1298
 3701 015a 1A46     		mov	r2, r3
 3702              	.LVL514:
 948:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3703              		.loc 1 948 15 view .LVU1299
 3704 015c 0293     		str	r3, [sp, #8]
 3705              	.LVL515:
 953:lvgl/src/lv_draw/lv_draw_mask.c ****                 x0.f = p->y_prev_x.f;
 3706              		.loc 1 953 13 is_stmt 1 view .LVU1300
 953:lvgl/src/lv_draw/lv_draw_mask.c ****                 x0.f = p->y_prev_x.f;
 3707              		.loc 1 953 22 is_stmt 0 view .LVU1301
 3708 015e 7369     		ldr	r3, [r6, #20]
 953:lvgl/src/lv_draw/lv_draw_mask.c ****                 x0.f = p->y_prev_x.f;
 3709              		.loc 1 953 15 view .LVU1302
 3710 0160 9342     		cmp	r3, r2
 3711 0162 40F0A280 		bne	.L283
 954:lvgl/src/lv_draw/lv_draw_mask.c ****                 x0.i = p->y_prev_x.i;
 3712              		.loc 1 954 17 is_stmt 1 view .LVU1303
 954:lvgl/src/lv_draw/lv_draw_mask.c ****                 x0.i = p->y_prev_x.i;
 3713              		.loc 1 954 35 is_stmt 0 view .LVU1304
 3714 0166 738B     		ldrh	r3, [r6, #26]
 954:lvgl/src/lv_draw/lv_draw_mask.c ****                 x0.i = p->y_prev_x.i;
 3715              		.loc 1 954 22 view .LVU1305
 3716 0168 ADF81230 		strh	r3, [sp, #18]	@ movhi
 955:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3717              		.loc 1 955 17 is_stmt 1 view .LVU1306
 955:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3718              		.loc 1 955 35 is_stmt 0 view .LVU1307
 3719 016c 338B     		ldrh	r3, [r6, #24]
 955:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3720              		.loc 1 955 22 view .LVU1308
 3721 016e ADF81030 		strh	r3, [sp, #16]	@ movhi
 3722              	.LVL516:
 3723              	.L284:
 960:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev = y - 1;
 3724              		.loc 1 960 13 is_stmt 1 view .LVU1309
 960:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev = y - 1;
 3725              		.loc 1 960 31 is_stmt 0 view .LVU1310
 3726 0172 029B     		ldr	r3, [sp, #8]
 3727 0174 5C1E     		subs	r4, r3, #1
 960:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev = y - 1;
 3728              		.loc 1 960 13 view .LVU1311
 3729 0176 019A     		ldr	r2, [sp, #4]
 3730 0178 05A9     		add	r1, sp, #20
 3731 017a 04FB14A0 		mls	r0, r4, r4, r10
 3732 017e FFF7FEFF 		bl	_lv_sqrt
 3733              	.LVL517:
 961:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.f = x1.f;
 3734              		.loc 1 961 13 is_stmt 1 view .LVU1312
 961:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.f = x1.f;
 3735              		.loc 1 961 23 is_stmt 0 view .LVU1313
 3736 0182 7461     		str	r4, [r6, #20]
 962:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.i = x1.i;
 3737              		.loc 1 962 13 is_stmt 1 view .LVU1314
 962:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.i = x1.i;
 3738              		.loc 1 962 31 is_stmt 0 view .LVU1315
ARM GAS  D:\Temp\ccPmLtDk.s 			page 114


 3739 0184 BDF81630 		ldrh	r3, [sp, #22]
 962:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.i = x1.i;
 3740              		.loc 1 962 27 view .LVU1316
 3741 0188 7383     		strh	r3, [r6, #26]	@ movhi
 963:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3742              		.loc 1 963 13 is_stmt 1 view .LVU1317
 963:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3743              		.loc 1 963 31 is_stmt 0 view .LVU1318
 3744 018a BDF81430 		ldrh	r3, [sp, #20]
 963:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 3745              		.loc 1 963 27 view .LVU1319
 3746 018e 3383     		strh	r3, [r6, #24]	@ movhi
 3747              	.L285:
 987:lvgl/src/lv_draw/lv_draw_mask.c ****             x1.i--;
 3748              		.loc 1 987 9 is_stmt 1 view .LVU1320
 987:lvgl/src/lv_draw/lv_draw_mask.c ****             x1.i--;
 3749              		.loc 1 987 14 is_stmt 0 view .LVU1321
 3750 0190 BDF81030 		ldrh	r3, [sp, #16]
 987:lvgl/src/lv_draw/lv_draw_mask.c ****             x1.i--;
 3751              		.loc 1 987 22 view .LVU1322
 3752 0194 BDF81420 		ldrh	r2, [sp, #20]
 987:lvgl/src/lv_draw/lv_draw_mask.c ****             x1.i--;
 3753              		.loc 1 987 25 view .LVU1323
 3754 0198 511E     		subs	r1, r2, #1
 987:lvgl/src/lv_draw/lv_draw_mask.c ****             x1.i--;
 3755              		.loc 1 987 11 view .LVU1324
 3756 019a 8B42     		cmp	r3, r1
 3757 019c 00F0B080 		beq	.L356
 3758              	.L288:
 993:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_opa_t m = (x0.f + x1.f) >> 1;
 3759              		.loc 1 993 9 is_stmt 1 view .LVU1325
 993:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_opa_t m = (x0.f + x1.f) >> 1;
 3760              		.loc 1 993 22 is_stmt 0 view .LVU1326
 3761 01a0 BDF81420 		ldrh	r2, [sp, #20]
 993:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_opa_t m = (x0.f + x1.f) >> 1;
 3762              		.loc 1 993 11 view .LVU1327
 3763 01a4 9342     		cmp	r3, r2
 3764 01a6 00F0B780 		beq	.L357
 3765              	.LBB190:
1041:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t kl = k + ofs;
 3766              		.loc 1 1041 13 is_stmt 1 view .LVU1328
1041:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t kl = k + ofs;
 3767              		.loc 1 1041 42 is_stmt 0 view .LVU1329
 3768 01aa 0133     		adds	r3, r3, #1
1041:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t kl = k + ofs;
 3769              		.loc 1 1041 21 view .LVU1330
 3770 01ac FB1A     		subs	r3, r7, r3
 3771              	.LVL518:
1042:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t kr = k + (w - ofs - 1);
 3772              		.loc 1 1042 13 is_stmt 1 view .LVU1331
1042:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t kr = k + (w - ofs - 1);
 3773              		.loc 1 1042 21 is_stmt 0 view .LVU1332
 3774 01ae 0BEB0307 		add	r7, fp, r3
 3775              	.LVL519:
1043:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3776              		.loc 1 1043 13 is_stmt 1 view .LVU1333
1043:lvgl/src/lv_draw/lv_draw_mask.c **** 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 115


 3777              		.loc 1 1043 33 is_stmt 0 view .LVU1334
 3778 01b2 039A     		ldr	r2, [sp, #12]
 3779 01b4 D41A     		subs	r4, r2, r3
1043:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3780              		.loc 1 1043 39 view .LVU1335
 3781 01b6 013C     		subs	r4, r4, #1
1043:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3782              		.loc 1 1043 21 view .LVU1336
 3783 01b8 5C44     		add	r4, r4, fp
 3784              	.LVL520:
1045:lvgl/src/lv_draw/lv_draw_mask.c ****                 int32_t first = kl + 1;
 3785              		.loc 1 1045 13 is_stmt 1 view .LVU1337
1045:lvgl/src/lv_draw/lv_draw_mask.c ****                 int32_t first = kl + 1;
 3786              		.loc 1 1045 15 is_stmt 0 view .LVU1338
 3787 01ba 65B1     		cbz	r5, .L301
 3788              	.LBB191:
1046:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < 0) first = 0;
 3789              		.loc 1 1046 17 is_stmt 1 view .LVU1339
 3790              	.LVL521:
1047:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3791              		.loc 1 1047 17 view .LVU1340
1047:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3792              		.loc 1 1047 19 is_stmt 0 view .LVU1341
 3793 01bc 781C     		adds	r0, r7, #1
 3794              	.LVL522:
1047:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3795              		.loc 1 1047 19 view .LVU1342
 3796 01be 00F11381 		bmi	.L358
 3797              	.LVL523:
 3798              	.L302:
1049:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(len_tmp + first > len) len_tmp = len - first;
 3799              		.loc 1 1049 17 is_stmt 1 view .LVU1343
1049:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(len_tmp + first > len) len_tmp = len - first;
 3800              		.loc 1 1049 25 is_stmt 0 view .LVU1344
 3801 01c2 211A     		subs	r1, r4, r0
 3802              	.LVL524:
1050:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < len && len_tmp >= 0) {
 3803              		.loc 1 1050 17 is_stmt 1 view .LVU1345
1050:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < len && len_tmp >= 0) {
 3804              		.loc 1 1050 19 is_stmt 0 view .LVU1346
 3805 01c4 A045     		cmp	r8, r4
 3806 01c6 01DA     		bge	.L303
1050:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < len && len_tmp >= 0) {
 3807              		.loc 1 1050 43 is_stmt 1 discriminator 1 view .LVU1347
1050:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < len && len_tmp >= 0) {
 3808              		.loc 1 1050 51 is_stmt 0 discriminator 1 view .LVU1348
 3809 01c8 A8EB0001 		sub	r1, r8, r0
 3810              	.LVL525:
 3811              	.L303:
1051:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], len_tmp);
 3812              		.loc 1 1051 17 is_stmt 1 view .LVU1349
1051:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], len_tmp);
 3813              		.loc 1 1051 19 is_stmt 0 view .LVU1350
 3814 01cc 8045     		cmp	r8, r0
 3815 01ce 02DD     		ble	.L301
1051:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], len_tmp);
 3816              		.loc 1 1051 32 discriminator 1 view .LVU1351
ARM GAS  D:\Temp\ccPmLtDk.s 			page 116


 3817 01d0 0029     		cmp	r1, #0
 3818 01d2 80F20B81 		bge	.L359
 3819              	.LVL526:
 3820              	.L301:
1051:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], len_tmp);
 3821              		.loc 1 1051 32 discriminator 1 view .LVU1352
 3822              	.LBE191:
1056:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_opa_t m;
 3823              		.loc 1 1056 13 is_stmt 1 view .LVU1353
1056:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_opa_t m;
 3824              		.loc 1 1056 28 is_stmt 0 view .LVU1354
 3825 01d6 BDF810B0 		ldrh	fp, [sp, #16]
 3826              	.LVL527:
1056:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_opa_t m;
 3827              		.loc 1 1056 31 view .LVU1355
 3828 01da 0BF10106 		add	r6, fp, #1
 3829              	.LVL528:
1057:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_sqrt_res_t y_prev;
 3830              		.loc 1 1057 13 is_stmt 1 view .LVU1356
1058:lvgl/src/lv_draw/lv_draw_mask.c ****             lv_sqrt_res_t y_next;
 3831              		.loc 1 1058 13 view .LVU1357
1059:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3832              		.loc 1 1059 13 view .LVU1358
1061:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3833              		.loc 1 1061 13 view .LVU1359
 3834 01de 019A     		ldr	r2, [sp, #4]
 3835 01e0 06A9     		add	r1, sp, #24
 3836 01e2 0BFB1BA0 		mls	r0, fp, fp, r10
 3837 01e6 FFF7FEFF 		bl	_lv_sqrt
 3838              	.LVL529:
1063:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.i--;
 3839              		.loc 1 1063 13 view .LVU1360
1063:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.i--;
 3840              		.loc 1 1063 22 is_stmt 0 view .LVU1361
 3841 01ea BDF81A30 		ldrh	r3, [sp, #26]
1063:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.i--;
 3842              		.loc 1 1063 15 view .LVU1362
 3843 01ee 3BB9     		cbnz	r3, .L304
1064:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.f = 0xFF;
 3844              		.loc 1 1064 17 is_stmt 1 view .LVU1363
1064:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.f = 0xFF;
 3845              		.loc 1 1064 23 is_stmt 0 view .LVU1364
 3846 01f0 BDF81830 		ldrh	r3, [sp, #24]
1064:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.f = 0xFF;
 3847              		.loc 1 1064 25 view .LVU1365
 3848 01f4 013B     		subs	r3, r3, #1
 3849 01f6 ADF81830 		strh	r3, [sp, #24]	@ movhi
1065:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3850              		.loc 1 1065 17 is_stmt 1 view .LVU1366
1065:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3851              		.loc 1 1065 26 is_stmt 0 view .LVU1367
 3852 01fa FF23     		movs	r3, #255
 3853 01fc ADF81A30 		strh	r3, [sp, #26]	@ movhi
 3854              	.L304:
1069:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_sqrt(r2 - (i * i), &y_next, sqrt_mask);
 3855              		.loc 1 1069 13 is_stmt 1 view .LVU1368
1069:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_sqrt(r2 - (i * i), &y_next, sqrt_mask);
ARM GAS  D:\Temp\ccPmLtDk.s 			page 117


 3856              		.loc 1 1069 22 is_stmt 0 view .LVU1369
 3857 0200 BDF81830 		ldrh	r3, [sp, #24]
1069:lvgl/src/lv_draw/lv_draw_mask.c ****                 _lv_sqrt(r2 - (i * i), &y_next, sqrt_mask);
 3858              		.loc 1 1069 15 view .LVU1370
 3859 0204 029A     		ldr	r2, [sp, #8]
 3860 0206 9342     		cmp	r3, r2
 3861 0208 C0F20381 		blt	.L316
1070:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = 255 - (((255 - x0.f) * (255 - y_next.f)) >> 9);
 3862              		.loc 1 1070 17 is_stmt 1 view .LVU1371
 3863 020c 019A     		ldr	r2, [sp, #4]
 3864 020e 07A9     		add	r1, sp, #28
 3865 0210 06FB16A0 		mls	r0, r6, r6, r10
 3866 0214 FFF7FEFF 		bl	_lv_sqrt
 3867              	.LVL530:
1071:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3868              		.loc 1 1071 17 view .LVU1372
1071:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3869              		.loc 1 1071 38 is_stmt 0 view .LVU1373
 3870 0218 BDF81230 		ldrh	r3, [sp, #18]
1071:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3871              		.loc 1 1071 34 view .LVU1374
 3872 021c C3F1FF02 		rsb	r2, r3, #255
1071:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3873              		.loc 1 1071 57 view .LVU1375
 3874 0220 BDF81E30 		ldrh	r3, [sp, #30]
1071:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3875              		.loc 1 1071 49 view .LVU1376
 3876 0224 C3F1FF03 		rsb	r3, r3, #255
1071:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3877              		.loc 1 1071 42 view .LVU1377
 3878 0228 03FB02F3 		mul	r3, r3, r2
1071:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3879              		.loc 1 1071 25 view .LVU1378
 3880 022c C3F34723 		ubfx	r3, r3, #9, #8
1071:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3881              		.loc 1 1071 19 view .LVU1379
 3882 0230 DA43     		mvns	r2, r3
 3883 0232 D2B2     		uxtb	r2, r2
 3884              	.LVL531:
1073:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 3885              		.loc 1 1073 17 is_stmt 1 view .LVU1380
1073:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 3886              		.loc 1 1073 19 is_stmt 0 view .LVU1381
 3887 0234 05B9     		cbnz	r5, .L306
1071:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3888              		.loc 1 1071 19 view .LVU1382
 3889 0236 1346     		mov	r3, r2
 3890              	.L306:
 3891              	.LVL532:
1074:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 3892              		.loc 1 1074 17 is_stmt 1 view .LVU1383
1074:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 3893              		.loc 1 1074 19 is_stmt 0 view .LVU1384
 3894 0238 002F     		cmp	r7, #0
 3895 023a 13DB     		blt	.L307
1074:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 3896              		.loc 1 1074 28 discriminator 1 view .LVU1385
ARM GAS  D:\Temp\ccPmLtDk.s 			page 118


 3897 023c B845     		cmp	r8, r7
 3898 023e 11DD     		ble	.L307
1074:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 3899              		.loc 1 1074 41 is_stmt 1 discriminator 2 view .LVU1386
1074:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 3900              		.loc 1 1074 73 is_stmt 0 discriminator 2 view .LVU1387
 3901 0240 09EB0701 		add	r1, r9, r7
1074:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 3902              		.loc 1 1074 56 discriminator 2 view .LVU1388
 3903 0244 19F80720 		ldrb	r2, [r9, r7]	@ zero_extendqisi2
 3904              	.LVL533:
 3905              	.LBB192:
 3906              	.LBI192:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 3907              		.loc 1 1206 46 is_stmt 1 discriminator 2 view .LVU1389
 3908              	.LBB193:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 3909              		.loc 1 1208 5 discriminator 2 view .LVU1390
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 3910              		.loc 1 1208 7 is_stmt 0 discriminator 2 view .LVU1391
 3911 0248 FC2B     		cmp	r3, #252
 3912 024a 0AD8     		bhi	.L308
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3913              		.loc 1 1209 5 is_stmt 1 view .LVU1392
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3914              		.loc 1 1209 7 is_stmt 0 view .LVU1393
 3915 024c 022B     		cmp	r3, #2
 3916 024e 40F2D180 		bls	.L342
 3917              		.loc 1 1211 5 is_stmt 1 view .LVU1394
 3918              		.loc 1 1211 12 is_stmt 0 view .LVU1395
 3919 0252 03FB02F2 		mul	r2, r3, r2
 3920              	.LVL534:
 3921              		.loc 1 1211 12 view .LVU1396
 3922 0256 02EB0220 		add	r0, r2, r2, lsl #8
 3923 025a 02EBC012 		add	r2, r2, r0, lsl #7
 3924 025e C2F3C752 		ubfx	r2, r2, #23, #8
 3925              	.L308:
 3926              	.LVL535:
 3927              		.loc 1 1211 12 view .LVU1397
 3928              	.LBE193:
 3929              	.LBE192:
1074:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 3930              		.loc 1 1074 54 view .LVU1398
 3931 0262 0A70     		strb	r2, [r1]
 3932              	.L307:
1075:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 3933              		.loc 1 1075 17 is_stmt 1 view .LVU1399
1075:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 3934              		.loc 1 1075 19 is_stmt 0 view .LVU1400
 3935 0264 002C     		cmp	r4, #0
 3936 0266 13DB     		blt	.L309
1075:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 3937              		.loc 1 1075 28 discriminator 1 view .LVU1401
 3938 0268 A045     		cmp	r8, r4
 3939 026a 11DD     		ble	.L309
1075:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 3940              		.loc 1 1075 41 is_stmt 1 discriminator 2 view .LVU1402
ARM GAS  D:\Temp\ccPmLtDk.s 			page 119


1075:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 3941              		.loc 1 1075 73 is_stmt 0 discriminator 2 view .LVU1403
 3942 026c 09EB0401 		add	r1, r9, r4
1075:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 3943              		.loc 1 1075 56 discriminator 2 view .LVU1404
 3944 0270 19F80420 		ldrb	r2, [r9, r4]	@ zero_extendqisi2
 3945              	.LVL536:
 3946              	.LBB195:
 3947              	.LBI195:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 3948              		.loc 1 1206 46 is_stmt 1 discriminator 2 view .LVU1405
 3949              	.LBB196:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 3950              		.loc 1 1208 5 discriminator 2 view .LVU1406
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 3951              		.loc 1 1208 7 is_stmt 0 discriminator 2 view .LVU1407
 3952 0274 FC2B     		cmp	r3, #252
 3953 0276 0AD8     		bhi	.L310
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3954              		.loc 1 1209 5 is_stmt 1 view .LVU1408
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3955              		.loc 1 1209 7 is_stmt 0 view .LVU1409
 3956 0278 022B     		cmp	r3, #2
 3957 027a 40F2BD80 		bls	.L343
 3958              		.loc 1 1211 5 is_stmt 1 view .LVU1410
 3959              		.loc 1 1211 12 is_stmt 0 view .LVU1411
 3960 027e 03FB02F3 		mul	r3, r3, r2
 3961              	.LVL537:
 3962              		.loc 1 1211 12 view .LVU1412
 3963 0282 03EB0322 		add	r2, r3, r3, lsl #8
 3964              	.LVL538:
 3965              		.loc 1 1211 12 view .LVU1413
 3966 0286 03EBC213 		add	r3, r3, r2, lsl #7
 3967 028a C3F3C752 		ubfx	r2, r3, #23, #8
 3968              	.L310:
 3969              	.LVL539:
 3970              		.loc 1 1211 12 view .LVU1414
 3971              	.LBE196:
 3972              	.LBE195:
1075:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 3973              		.loc 1 1075 54 view .LVU1415
 3974 028e 0A70     		strb	r2, [r1]
 3975              	.L309:
1076:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
 3976              		.loc 1 1076 17 is_stmt 1 view .LVU1416
1076:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
 3977              		.loc 1 1076 19 is_stmt 0 view .LVU1417
 3978 0290 013F     		subs	r7, r7, #1
 3979              	.LVL540:
1077:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.f = y_next.f;
 3980              		.loc 1 1077 17 is_stmt 1 view .LVU1418
1077:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.f = y_next.f;
 3981              		.loc 1 1077 19 is_stmt 0 view .LVU1419
 3982 0292 0134     		adds	r4, r4, #1
 3983              	.LVL541:
1078:lvgl/src/lv_draw/lv_draw_mask.c ****                 i++;
 3984              		.loc 1 1078 17 is_stmt 1 view .LVU1420
ARM GAS  D:\Temp\ccPmLtDk.s 			page 120


1078:lvgl/src/lv_draw/lv_draw_mask.c ****                 i++;
 3985              		.loc 1 1078 34 is_stmt 0 view .LVU1421
 3986 0294 BDF81E30 		ldrh	r3, [sp, #30]
1078:lvgl/src/lv_draw/lv_draw_mask.c ****                 i++;
 3987              		.loc 1 1078 26 view .LVU1422
 3988 0298 ADF81A30 		strh	r3, [sp, #26]	@ movhi
1079:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3989              		.loc 1 1079 17 is_stmt 1 view .LVU1423
1079:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3990              		.loc 1 1079 18 is_stmt 0 view .LVU1424
 3991 029c 0BF10206 		add	r6, fp, #2
 3992              	.LVL542:
1079:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3993              		.loc 1 1079 18 view .LVU1425
 3994 02a0 B7E0     		b	.L316
 3995              	.LVL543:
 3996              	.L337:
1079:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 3997              		.loc 1 1079 18 view .LVU1426
 3998              	.LBE190:
 941:lvgl/src/lv_draw/lv_draw_mask.c **** 
 3999              		.loc 1 941 24 view .LVU1427
 4000 02a2 4FF40041 		mov	r1, #32768
 4001 02a6 0191     		str	r1, [sp, #4]
 4002 02a8 53E7     		b	.L281
 4003              	.LVL544:
 4004              	.L283:
 958:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4005              		.loc 1 958 17 is_stmt 1 view .LVU1428
 4006 02aa 019A     		ldr	r2, [sp, #4]
 4007              	.LVL545:
 958:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4008              		.loc 1 958 17 is_stmt 0 view .LVU1429
 4009 02ac 04A9     		add	r1, sp, #16
 4010 02ae 029B     		ldr	r3, [sp, #8]
 4011 02b0 03FB13A0 		mls	r0, r3, r3, r10
 4012 02b4 FFF7FEFF 		bl	_lv_sqrt
 4013              	.LVL546:
 958:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4014              		.loc 1 958 17 view .LVU1430
 4015 02b8 5BE7     		b	.L284
 4016              	.LVL547:
 4017              	.L282:
 966:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4018              		.loc 1 966 13 is_stmt 1 view .LVU1431
 966:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4019              		.loc 1 966 29 is_stmt 0 view .LVU1432
 4020 02ba 9B1A     		subs	r3, r3, r2
 4021              	.LVL548:
 966:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4022              		.loc 1 966 24 view .LVU1433
 4023 02bc F81A     		subs	r0, r7, r3
 966:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4024              		.loc 1 966 15 view .LVU1434
 4025 02be 431C     		adds	r3, r0, #1
 4026 02c0 0293     		str	r3, [sp, #8]
 4027              	.LVL549:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 121


 971:lvgl/src/lv_draw/lv_draw_mask.c ****                 x1.f = p->y_prev_x.f;
 4028              		.loc 1 971 13 is_stmt 1 view .LVU1435
 971:lvgl/src/lv_draw/lv_draw_mask.c ****                 x1.f = p->y_prev_x.f;
 4029              		.loc 1 971 28 is_stmt 0 view .LVU1436
 4030 02c2 7369     		ldr	r3, [r6, #20]
 4031              	.LVL550:
 971:lvgl/src/lv_draw/lv_draw_mask.c ****                 x1.f = p->y_prev_x.f;
 4032              		.loc 1 971 15 view .LVU1437
 4033 02c4 9842     		cmp	r0, r3
 4034 02c6 14D1     		bne	.L286
 972:lvgl/src/lv_draw/lv_draw_mask.c ****                 x1.i = p->y_prev_x.i;
 4035              		.loc 1 972 17 is_stmt 1 view .LVU1438
 972:lvgl/src/lv_draw/lv_draw_mask.c ****                 x1.i = p->y_prev_x.i;
 4036              		.loc 1 972 35 is_stmt 0 view .LVU1439
 4037 02c8 738B     		ldrh	r3, [r6, #26]
 972:lvgl/src/lv_draw/lv_draw_mask.c ****                 x1.i = p->y_prev_x.i;
 4038              		.loc 1 972 22 view .LVU1440
 4039 02ca ADF81630 		strh	r3, [sp, #22]	@ movhi
 973:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4040              		.loc 1 973 17 is_stmt 1 view .LVU1441
 973:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4041              		.loc 1 973 35 is_stmt 0 view .LVU1442
 4042 02ce 338B     		ldrh	r3, [r6, #24]
 973:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4043              		.loc 1 973 22 view .LVU1443
 4044 02d0 ADF81430 		strh	r3, [sp, #20]	@ movhi
 4045              	.LVL551:
 4046              	.L287:
 979:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev = y;
 4047              		.loc 1 979 13 is_stmt 1 view .LVU1444
 4048 02d4 019A     		ldr	r2, [sp, #4]
 4049 02d6 04A9     		add	r1, sp, #16
 4050 02d8 029C     		ldr	r4, [sp, #8]
 4051 02da 04FB14A0 		mls	r0, r4, r4, r10
 4052 02de FFF7FEFF 		bl	_lv_sqrt
 4053              	.LVL552:
 980:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.f = x0.f;
 4054              		.loc 1 980 13 view .LVU1445
 980:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.f = x0.f;
 4055              		.loc 1 980 23 is_stmt 0 view .LVU1446
 4056 02e2 7461     		str	r4, [r6, #20]
 981:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.i = x0.i;
 4057              		.loc 1 981 13 is_stmt 1 view .LVU1447
 981:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.i = x0.i;
 4058              		.loc 1 981 31 is_stmt 0 view .LVU1448
 4059 02e4 BDF81230 		ldrh	r3, [sp, #18]
 981:lvgl/src/lv_draw/lv_draw_mask.c ****             p->y_prev_x.i = x0.i;
 4060              		.loc 1 981 27 view .LVU1449
 4061 02e8 7383     		strh	r3, [r6, #26]	@ movhi
 982:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 4062              		.loc 1 982 13 is_stmt 1 view .LVU1450
 982:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 4063              		.loc 1 982 31 is_stmt 0 view .LVU1451
 4064 02ea BDF81030 		ldrh	r3, [sp, #16]
 982:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 4065              		.loc 1 982 27 view .LVU1452
 4066 02ee 3383     		strh	r3, [r6, #24]	@ movhi
ARM GAS  D:\Temp\ccPmLtDk.s 			page 122


 4067 02f0 4EE7     		b	.L285
 4068              	.LVL553:
 4069              	.L286:
 976:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4070              		.loc 1 976 17 is_stmt 1 view .LVU1453
 4071 02f2 019A     		ldr	r2, [sp, #4]
 4072              	.LVL554:
 976:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4073              		.loc 1 976 17 is_stmt 0 view .LVU1454
 4074 02f4 05A9     		add	r1, sp, #20
 4075 02f6 00FB10A0 		mls	r0, r0, r0, r10
 4076 02fa FFF7FEFF 		bl	_lv_sqrt
 4077              	.LVL555:
 976:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4078              		.loc 1 976 17 view .LVU1455
 4079 02fe E9E7     		b	.L287
 4080              	.L356:
 987:lvgl/src/lv_draw/lv_draw_mask.c ****             x1.i--;
 4081              		.loc 1 987 34 discriminator 1 view .LVU1456
 4082 0300 BDF81610 		ldrh	r1, [sp, #22]
 987:lvgl/src/lv_draw/lv_draw_mask.c ****             x1.i--;
 4083              		.loc 1 987 29 discriminator 1 view .LVU1457
 4084 0304 0029     		cmp	r1, #0
 4085 0306 7FF44BAF 		bne	.L288
 988:lvgl/src/lv_draw/lv_draw_mask.c ****             x1.f = 0xFF;
 4086              		.loc 1 988 13 is_stmt 1 view .LVU1458
 988:lvgl/src/lv_draw/lv_draw_mask.c ****             x1.f = 0xFF;
 4087              		.loc 1 988 17 is_stmt 0 view .LVU1459
 4088 030a 013A     		subs	r2, r2, #1
 4089 030c ADF81420 		strh	r2, [sp, #20]	@ movhi
 989:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 4090              		.loc 1 989 13 is_stmt 1 view .LVU1460
 989:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 4091              		.loc 1 989 18 is_stmt 0 view .LVU1461
 4092 0310 FF22     		movs	r2, #255
 4093 0312 ADF81620 		strh	r2, [sp, #22]	@ movhi
 4094 0316 43E7     		b	.L288
 4095              	.L357:
 4096              	.LBB219:
 994:lvgl/src/lv_draw/lv_draw_mask.c ****             if(outer) m = 255 - m;
 4097              		.loc 1 994 13 is_stmt 1 view .LVU1462
 994:lvgl/src/lv_draw/lv_draw_mask.c ****             if(outer) m = 255 - m;
 4098              		.loc 1 994 29 is_stmt 0 view .LVU1463
 4099 0318 BDF81220 		ldrh	r2, [sp, #18]
 994:lvgl/src/lv_draw/lv_draw_mask.c ****             if(outer) m = 255 - m;
 4100              		.loc 1 994 36 view .LVU1464
 4101 031c BDF81610 		ldrh	r1, [sp, #22]
 994:lvgl/src/lv_draw/lv_draw_mask.c ****             if(outer) m = 255 - m;
 4102              		.loc 1 994 32 view .LVU1465
 4103 0320 0A44     		add	r2, r2, r1
 994:lvgl/src/lv_draw/lv_draw_mask.c ****             if(outer) m = 255 - m;
 4104              		.loc 1 994 22 view .LVU1466
 4105 0322 C2F34702 		ubfx	r2, r2, #1, #8
 4106              	.LVL556:
 995:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t ofs = radius - x0.i - 1;
 4107              		.loc 1 995 13 is_stmt 1 view .LVU1467
 995:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t ofs = radius - x0.i - 1;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 123


 4108              		.loc 1 995 15 is_stmt 0 view .LVU1468
 4109 0326 0DB1     		cbz	r5, .L290
 995:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t ofs = radius - x0.i - 1;
 4110              		.loc 1 995 23 is_stmt 1 discriminator 1 view .LVU1469
 995:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t ofs = radius - x0.i - 1;
 4111              		.loc 1 995 25 is_stmt 0 discriminator 1 view .LVU1470
 4112 0328 D243     		mvns	r2, r2
 4113              	.LVL557:
 995:lvgl/src/lv_draw/lv_draw_mask.c ****             int32_t ofs = radius - x0.i - 1;
 4114              		.loc 1 995 25 discriminator 1 view .LVU1471
 4115 032a D2B2     		uxtb	r2, r2
 4116              	.LVL558:
 4117              	.L290:
 996:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4118              		.loc 1 996 13 is_stmt 1 view .LVU1472
 996:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4119              		.loc 1 996 34 is_stmt 0 view .LVU1473
 4120 032c FB1A     		subs	r3, r7, r3
 996:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4121              		.loc 1 996 21 view .LVU1474
 4122 032e 013B     		subs	r3, r3, #1
 4123              	.LVL559:
 999:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4124              		.loc 1 999 13 is_stmt 1 view .LVU1475
1001:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4125              		.loc 1 1001 13 view .LVU1476
1001:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4126              		.loc 1 1001 15 is_stmt 0 view .LVU1477
 4127 0330 1BEB0301 		adds	r1, fp, r3
 4128              	.LVL560:
1001:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4129              		.loc 1 1001 15 view .LVU1478
 4130 0334 11D4     		bmi	.L291
1001:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4131              		.loc 1 1001 24 discriminator 1 view .LVU1479
 4132 0336 8845     		cmp	r8, r1
 4133 0338 0FDD     		ble	.L291
1002:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4134              		.loc 1 1002 17 is_stmt 1 view .LVU1480
1002:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4135              		.loc 1 1002 32 is_stmt 0 view .LVU1481
 4136 033a 19F80100 		ldrb	r0, [r9, r1]	@ zero_extendqisi2
 4137              	.LVL561:
 4138              	.LBB220:
 4139              	.LBI220:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 4140              		.loc 1 1206 46 is_stmt 1 view .LVU1482
 4141              	.LBB221:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 4142              		.loc 1 1208 5 view .LVU1483
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 4143              		.loc 1 1208 7 is_stmt 0 view .LVU1484
 4144 033e FC2A     		cmp	r2, #252
 4145 0340 09D8     		bhi	.L292
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4146              		.loc 1 1209 5 is_stmt 1 view .LVU1485
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 124


 4147              		.loc 1 1209 7 is_stmt 0 view .LVU1486
 4148 0342 022A     		cmp	r2, #2
 4149 0344 35D9     		bls	.L338
 4150              		.loc 1 1211 5 is_stmt 1 view .LVU1487
 4151              		.loc 1 1211 12 is_stmt 0 view .LVU1488
 4152 0346 02FB00F0 		mul	r0, r2, r0
 4153              	.LVL562:
 4154              		.loc 1 1211 12 view .LVU1489
 4155 034a 00EB0024 		add	r4, r0, r0, lsl #8
 4156 034e 00EBC410 		add	r0, r0, r4, lsl #7
 4157 0352 C0F3C750 		ubfx	r0, r0, #23, #8
 4158              	.L292:
 4159              	.LVL563:
 4160              		.loc 1 1211 12 view .LVU1490
 4161              	.LBE221:
 4162              	.LBE220:
1002:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4163              		.loc 1 1002 30 view .LVU1491
 4164 0356 09F80100 		strb	r0, [r9, r1]
 4165              	.L291:
1006:lvgl/src/lv_draw/lv_draw_mask.c ****             if(kr >= 0 && kr < len) {
 4166              		.loc 1 1006 13 is_stmt 1 view .LVU1492
1006:lvgl/src/lv_draw/lv_draw_mask.c ****             if(kr >= 0 && kr < len) {
 4167              		.loc 1 1006 33 is_stmt 0 view .LVU1493
 4168 035a 0398     		ldr	r0, [sp, #12]
 4169 035c C41A     		subs	r4, r0, r3
1006:lvgl/src/lv_draw/lv_draw_mask.c ****             if(kr >= 0 && kr < len) {
 4170              		.loc 1 1006 39 view .LVU1494
 4171 035e 013C     		subs	r4, r4, #1
 4172              	.LVL564:
1007:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4173              		.loc 1 1007 13 is_stmt 1 view .LVU1495
1007:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4174              		.loc 1 1007 15 is_stmt 0 view .LVU1496
 4175 0360 14EB0B04 		adds	r4, r4, fp
 4176              	.LVL565:
1007:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4177              		.loc 1 1007 15 view .LVU1497
 4178 0364 11D4     		bmi	.L293
1007:lvgl/src/lv_draw/lv_draw_mask.c ****                 mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4179              		.loc 1 1007 24 discriminator 1 view .LVU1498
 4180 0366 A045     		cmp	r8, r4
 4181 0368 0FDD     		ble	.L293
1008:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4182              		.loc 1 1008 17 is_stmt 1 view .LVU1499
1008:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4183              		.loc 1 1008 32 is_stmt 0 view .LVU1500
 4184 036a 19F80430 		ldrb	r3, [r9, r4]	@ zero_extendqisi2
 4185              	.LVL566:
 4186              	.LBB223:
 4187              	.LBI223:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 4188              		.loc 1 1206 46 is_stmt 1 view .LVU1501
 4189              	.LBB224:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 4190              		.loc 1 1208 5 view .LVU1502
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 125


 4191              		.loc 1 1208 7 is_stmt 0 view .LVU1503
 4192 036e FC2A     		cmp	r2, #252
 4193 0370 09D8     		bhi	.L294
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4194              		.loc 1 1209 5 is_stmt 1 view .LVU1504
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4195              		.loc 1 1209 7 is_stmt 0 view .LVU1505
 4196 0372 022A     		cmp	r2, #2
 4197 0374 1FD9     		bls	.L339
 4198              		.loc 1 1211 5 is_stmt 1 view .LVU1506
 4199              		.loc 1 1211 12 is_stmt 0 view .LVU1507
 4200 0376 02FB03F2 		mul	r2, r2, r3
 4201              	.LVL567:
 4202              		.loc 1 1211 12 view .LVU1508
 4203 037a 02EB0223 		add	r3, r2, r2, lsl #8
 4204              	.LVL568:
 4205              		.loc 1 1211 12 view .LVU1509
 4206 037e 02EBC312 		add	r2, r2, r3, lsl #7
 4207 0382 C2F3C753 		ubfx	r3, r2, #23, #8
 4208              	.L294:
 4209              	.LVL569:
 4210              		.loc 1 1211 12 view .LVU1510
 4211              	.LBE224:
 4212              	.LBE223:
1008:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4213              		.loc 1 1008 30 view .LVU1511
 4214 0386 09F80430 		strb	r3, [r9, r4]
 4215              	.L293:
1012:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
 4216              		.loc 1 1012 13 is_stmt 1 view .LVU1512
1012:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
 4217              		.loc 1 1012 15 is_stmt 0 view .LVU1513
 4218 038a D5B9     		cbnz	r5, .L295
1013:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl > len)  {
 4219              		.loc 1 1013 17 is_stmt 1 view .LVU1514
1013:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl > len)  {
 4220              		.loc 1 1013 19 is_stmt 0 view .LVU1515
 4221 038c 0134     		adds	r4, r4, #1
 4222              	.LVL570:
1014:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
 4223              		.loc 1 1014 17 is_stmt 1 view .LVU1516
1014:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
 4224              		.loc 1 1014 19 is_stmt 0 view .LVU1517
 4225 038e 8845     		cmp	r8, r1
 4226 0390 C0F2DF80 		blt	.L296
1017:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[0], kl);
 4227              		.loc 1 1017 17 is_stmt 1 view .LVU1518
1017:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[0], kl);
 4228              		.loc 1 1017 19 is_stmt 0 view .LVU1519
 4229 0394 0029     		cmp	r1, #0
 4230 0396 10DA     		bge	.L360
 4231              	.LVL571:
 4232              	.L297:
1020:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
 4233              		.loc 1 1020 17 is_stmt 1 view .LVU1520
1020:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
 4234              		.loc 1 1020 19 is_stmt 0 view .LVU1521
ARM GAS  D:\Temp\ccPmLtDk.s 			page 126


 4235 0398 002C     		cmp	r4, #0
 4236 039a C0F2DA80 		blt	.L296
1023:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[kr], len - kr);
 4237              		.loc 1 1023 17 is_stmt 1 view .LVU1522
1023:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[kr], len - kr);
 4238              		.loc 1 1023 19 is_stmt 0 view .LVU1523
 4239 039e A045     		cmp	r8, r4
 4240 03a0 C0F2C680 		blt	.L298
1024:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4241              		.loc 1 1024 21 is_stmt 1 view .LVU1524
 4242 03a4 A8EB0401 		sub	r1, r8, r4
 4243 03a8 09EB0400 		add	r0, r9, r4
 4244 03ac FFF7FEFF 		bl	_lv_memset_00
 4245              	.LVL572:
 4246 03b0 BEE0     		b	.L298
 4247              	.LVL573:
 4248              	.L338:
 4249              	.LBB226:
 4250              	.LBB222:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4251              		.loc 1 1209 39 is_stmt 0 view .LVU1525
 4252 03b2 0020     		movs	r0, #0
 4253              	.LVL574:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4254              		.loc 1 1209 39 view .LVU1526
 4255 03b4 CFE7     		b	.L292
 4256              	.LVL575:
 4257              	.L339:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4258              		.loc 1 1209 39 view .LVU1527
 4259              	.LBE222:
 4260              	.LBE226:
 4261              	.LBB227:
 4262              	.LBB225:
 4263 03b6 0023     		movs	r3, #0
 4264              	.LVL576:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4265              		.loc 1 1209 39 view .LVU1528
 4266 03b8 E5E7     		b	.L294
 4267              	.LVL577:
 4268              	.L360:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4269              		.loc 1 1209 39 view .LVU1529
 4270              	.LBE225:
 4271              	.LBE227:
1018:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4272              		.loc 1 1018 21 is_stmt 1 view .LVU1530
 4273 03ba 4846     		mov	r0, r9
 4274 03bc FFF7FEFF 		bl	_lv_memset_00
 4275              	.LVL578:
1018:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4276              		.loc 1 1018 21 is_stmt 0 view .LVU1531
 4277 03c0 EAE7     		b	.L297
 4278              	.LVL579:
 4279              	.L295:
 4280              	.LBB228:
1028:lvgl/src/lv_draw/lv_draw_mask.c ****                 int32_t first = kl;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 127


 4281              		.loc 1 1028 17 is_stmt 1 view .LVU1532
1029:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < 0) first = 0;
 4282              		.loc 1 1029 17 view .LVU1533
1030:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4283              		.loc 1 1030 17 view .LVU1534
1030:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4284              		.loc 1 1030 19 is_stmt 0 view .LVU1535
 4285 03c2 481C     		adds	r0, r1, #1
 4286              	.LVL580:
1030:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4287              		.loc 1 1030 19 view .LVU1536
 4288 03c4 0ED4     		bmi	.L361
 4289              	.LVL581:
 4290              	.L299:
1032:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(len_tmp + first > len) len_tmp = len - first;
 4291              		.loc 1 1032 17 is_stmt 1 view .LVU1537
1032:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(len_tmp + first > len) len_tmp = len - first;
 4292              		.loc 1 1032 25 is_stmt 0 view .LVU1538
 4293 03c6 211A     		subs	r1, r4, r0
 4294              	.LVL582:
1033:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < len && len_tmp >= 0) {
 4295              		.loc 1 1033 17 is_stmt 1 view .LVU1539
1033:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < len && len_tmp >= 0) {
 4296              		.loc 1 1033 19 is_stmt 0 view .LVU1540
 4297 03c8 A045     		cmp	r8, r4
 4298 03ca 01DA     		bge	.L300
1033:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < len && len_tmp >= 0) {
 4299              		.loc 1 1033 43 is_stmt 1 discriminator 1 view .LVU1541
1033:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(first < len && len_tmp >= 0) {
 4300              		.loc 1 1033 51 is_stmt 0 discriminator 1 view .LVU1542
 4301 03cc A8EB0001 		sub	r1, r8, r0
 4302              	.LVL583:
 4303              	.L300:
1034:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], len_tmp);
 4304              		.loc 1 1034 17 is_stmt 1 view .LVU1543
1034:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], len_tmp);
 4305              		.loc 1 1034 19 is_stmt 0 view .LVU1544
 4306 03d0 8045     		cmp	r8, r0
 4307 03d2 40F3AD80 		ble	.L298
1034:lvgl/src/lv_draw/lv_draw_mask.c ****                     _lv_memset_00(&mask_buf[first], len_tmp);
 4308              		.loc 1 1034 32 discriminator 1 view .LVU1545
 4309 03d6 0029     		cmp	r1, #0
 4310 03d8 C0F2AA80 		blt	.L298
1035:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4311              		.loc 1 1035 21 is_stmt 1 view .LVU1546
 4312 03dc 4844     		add	r0, r0, r9
 4313              	.LVL584:
1035:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4314              		.loc 1 1035 21 is_stmt 0 view .LVU1547
 4315 03de FFF7FEFF 		bl	_lv_memset_00
 4316              	.LVL585:
1035:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4317              		.loc 1 1035 21 view .LVU1548
 4318 03e2 A5E0     		b	.L298
 4319              	.LVL586:
 4320              	.L361:
1030:lvgl/src/lv_draw/lv_draw_mask.c **** 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 128


 4321              		.loc 1 1030 37 view .LVU1549
 4322 03e4 0020     		movs	r0, #0
 4323              	.LVL587:
1030:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4324              		.loc 1 1030 37 view .LVU1550
 4325 03e6 EEE7     		b	.L299
 4326              	.LVL588:
 4327              	.L358:
1030:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4328              		.loc 1 1030 37 view .LVU1551
 4329              	.LBE228:
 4330              	.LBE219:
 4331              	.LBB229:
 4332              	.LBB198:
1047:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4333              		.loc 1 1047 37 view .LVU1552
 4334 03e8 0020     		movs	r0, #0
 4335              	.LVL589:
1047:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4336              		.loc 1 1047 37 view .LVU1553
 4337 03ea EAE6     		b	.L302
 4338              	.LVL590:
 4339              	.L359:
1052:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4340              		.loc 1 1052 21 is_stmt 1 view .LVU1554
 4341 03ec 4844     		add	r0, r0, r9
 4342              	.LVL591:
1052:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4343              		.loc 1 1052 21 is_stmt 0 view .LVU1555
 4344 03ee FFF7FEFF 		bl	_lv_memset_00
 4345              	.LVL592:
1052:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4346              		.loc 1 1052 21 view .LVU1556
 4347 03f2 F0E6     		b	.L301
 4348              	.LVL593:
 4349              	.L342:
1052:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4350              		.loc 1 1052 21 view .LVU1557
 4351              	.LBE198:
 4352              	.LBB199:
 4353              	.LBB194:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4354              		.loc 1 1209 39 view .LVU1558
 4355 03f4 0022     		movs	r2, #0
 4356              	.LVL594:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4357              		.loc 1 1209 39 view .LVU1559
 4358 03f6 34E7     		b	.L308
 4359              	.LVL595:
 4360              	.L343:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4361              		.loc 1 1209 39 view .LVU1560
 4362              	.LBE194:
 4363              	.LBE199:
 4364              	.LBB200:
 4365              	.LBB197:
 4366 03f8 0022     		movs	r2, #0
ARM GAS  D:\Temp\ccPmLtDk.s 			page 129


 4367              	.LVL596:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4368              		.loc 1 1209 39 view .LVU1561
 4369 03fa 48E7     		b	.L310
 4370              	.LVL597:
 4371              	.L344:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4372              		.loc 1 1209 39 view .LVU1562
 4373              	.LBE197:
 4374              	.LBE200:
 4375              	.LBB201:
 4376              	.LBB202:
 4377 03fc 0022     		movs	r2, #0
 4378              	.LVL598:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4379              		.loc 1 1209 39 view .LVU1563
 4380 03fe 3FE0     		b	.L313
 4381              	.LVL599:
 4382              	.L345:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4383              		.loc 1 1209 39 view .LVU1564
 4384              	.LBE202:
 4385              	.LBE201:
 4386              	.LBB204:
 4387              	.LBB205:
 4388 0400 0022     		movs	r2, #0
 4389              	.LVL600:
 4390              	.L315:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4391              		.loc 1 1209 39 view .LVU1565
 4392              	.LBE205:
 4393              	.LBE204:
1091:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4394              		.loc 1 1091 54 view .LVU1566
 4395 0402 0A70     		strb	r2, [r1]
 4396              	.L314:
1092:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
 4397              		.loc 1 1092 17 is_stmt 1 view .LVU1567
1092:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
 4398              		.loc 1 1092 19 is_stmt 0 view .LVU1568
 4399 0404 013F     		subs	r7, r7, #1
 4400              	.LVL601:
1093:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.f = y_next.f;
 4401              		.loc 1 1093 17 is_stmt 1 view .LVU1569
1093:lvgl/src/lv_draw/lv_draw_mask.c ****                 y_prev.f = y_next.f;
 4402              		.loc 1 1093 19 is_stmt 0 view .LVU1570
 4403 0406 0134     		adds	r4, r4, #1
 4404              	.LVL602:
1094:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4405              		.loc 1 1094 17 is_stmt 1 view .LVU1571
1094:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4406              		.loc 1 1094 34 is_stmt 0 view .LVU1572
 4407 0408 BDF81E30 		ldrh	r3, [sp, #30]
1094:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4408              		.loc 1 1094 26 view .LVU1573
 4409 040c ADF81A30 		strh	r3, [sp, #26]	@ movhi
1083:lvgl/src/lv_draw/lv_draw_mask.c ****                 /* These values are very close to each other. It's enough to approximate sqrt
ARM GAS  D:\Temp\ccPmLtDk.s 			page 130


 4410              		.loc 1 1083 31 view .LVU1574
 4411 0410 0136     		adds	r6, r6, #1
 4412              	.LVL603:
 4413              	.L316:
1083:lvgl/src/lv_draw/lv_draw_mask.c ****                 /* These values are very close to each other. It's enough to approximate sqrt
 4414              		.loc 1 1083 26 discriminator 1 view .LVU1575
 4415 0412 BDF81430 		ldrh	r3, [sp, #20]
1083:lvgl/src/lv_draw/lv_draw_mask.c ****                 /* These values are very close to each other. It's enough to approximate sqrt
 4416              		.loc 1 1083 13 discriminator 1 view .LVU1576
 4417 0416 B342     		cmp	r3, r6
 4418 0418 48D3     		bcc	.L362
1086:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4419              		.loc 1 1086 17 is_stmt 1 view .LVU1577
 4420 041a 06FB16A1 		mls	r1, r6, r6, r10
 4421              	.LVL604:
 4422              	.LBB207:
 4423              	.LBI207:
1212:lvgl/src/lv_draw/lv_draw_mask.c **** }
1213:lvgl/src/lv_draw/lv_draw_mask.c **** 
1214:lvgl/src/lv_draw/lv_draw_mask.c **** /**
1215:lvgl/src/lv_draw/lv_draw_mask.c ****  * Approximate the sqrt near to an already calculated value
1216:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param q store the result here
1217:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param ref the reference point (already calculated sqrt)
1218:lvgl/src/lv_draw/lv_draw_mask.c ****  * @param x the value which sqrt should be approximated
1219:lvgl/src/lv_draw/lv_draw_mask.c ****  */
1220:lvgl/src/lv_draw/lv_draw_mask.c **** LV_ATTRIBUTE_FAST_MEM static inline void sqrt_approx(lv_sqrt_res_t * q, lv_sqrt_res_t * ref, uint32
 4424              		.loc 1 1220 42 view .LVU1578
 4425              	.LBB208:
1221:lvgl/src/lv_draw/lv_draw_mask.c **** {
1222:lvgl/src/lv_draw/lv_draw_mask.c ****     x = x << 8; /*Upscale for extra precision*/
 4426              		.loc 1 1222 5 view .LVU1579
1223:lvgl/src/lv_draw/lv_draw_mask.c **** 
1224:lvgl/src/lv_draw/lv_draw_mask.c ****     uint32_t raw = (ref->i << 4) + (ref->f >> 4);
 4427              		.loc 1 1224 5 view .LVU1580
 4428              		.loc 1 1224 24 is_stmt 0 view .LVU1581
 4429 041e BDF81800 		ldrh	r0, [sp, #24]
 4430              		.loc 1 1224 40 view .LVU1582
 4431 0422 BDF81A20 		ldrh	r2, [sp, #26]
 4432              		.loc 1 1224 44 view .LVU1583
 4433 0426 1309     		lsrs	r3, r2, #4
 4434              		.loc 1 1224 34 view .LVU1584
 4435 0428 03EB0013 		add	r3, r3, r0, lsl #4
 4436              	.LVL605:
1225:lvgl/src/lv_draw/lv_draw_mask.c ****     uint32_t raw2 = raw * raw;
 4437              		.loc 1 1225 5 is_stmt 1 view .LVU1585
 4438              		.loc 1 1225 14 is_stmt 0 view .LVU1586
 4439 042c 03FB03F0 		mul	r0, r3, r3
 4440              	.LVL606:
1226:lvgl/src/lv_draw/lv_draw_mask.c **** 
1227:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t d = x - raw2;
 4441              		.loc 1 1227 5 is_stmt 1 view .LVU1587
 4442              		.loc 1 1227 19 is_stmt 0 view .LVU1588
 4443 0430 C0EB0121 		rsb	r1, r0, r1, lsl #8
 4444              	.LVL607:
1228:lvgl/src/lv_draw/lv_draw_mask.c ****     d = (int32_t)d / (int32_t)(2 * raw) + raw;
 4445              		.loc 1 1228 5 is_stmt 1 view .LVU1589
 4446              		.loc 1 1228 34 is_stmt 0 view .LVU1590
ARM GAS  D:\Temp\ccPmLtDk.s 			page 131


 4447 0434 5800     		lsls	r0, r3, #1
 4448              	.LVL608:
 4449              		.loc 1 1228 20 view .LVU1591
 4450 0436 91FBF0F1 		sdiv	r1, r1, r0
 4451              	.LVL609:
 4452              		.loc 1 1228 41 view .LVU1592
 4453 043a 0B44     		add	r3, r3, r1
 4454              	.LVL610:
1229:lvgl/src/lv_draw/lv_draw_mask.c **** 
1230:lvgl/src/lv_draw/lv_draw_mask.c ****     q->i = d >> 4;
 4455              		.loc 1 1230 5 is_stmt 1 view .LVU1593
 4456              		.loc 1 1230 14 is_stmt 0 view .LVU1594
 4457 043c 1911     		asrs	r1, r3, #4
 4458              		.loc 1 1230 10 view .LVU1595
 4459 043e ADF81C10 		strh	r1, [sp, #28]	@ movhi
1231:lvgl/src/lv_draw/lv_draw_mask.c ****     q->f = (d & 0xF) << 4;
 4460              		.loc 1 1231 5 is_stmt 1 view .LVU1596
 4461              		.loc 1 1231 22 is_stmt 0 view .LVU1597
 4462 0442 1B01     		lsls	r3, r3, #4
 4463              	.LVL611:
 4464              		.loc 1 1231 22 view .LVU1598
 4465 0444 03F0F003 		and	r3, r3, #240
 4466              		.loc 1 1231 10 view .LVU1599
 4467 0448 ADF81E30 		strh	r3, [sp, #30]	@ movhi
 4468              	.LVL612:
 4469              		.loc 1 1231 10 view .LVU1600
 4470              	.LBE208:
 4471              	.LBE207:
1088:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(outer) m = 255 - m;
 4472              		.loc 1 1088 17 is_stmt 1 view .LVU1601
1088:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(outer) m = 255 - m;
 4473              		.loc 1 1088 31 is_stmt 0 view .LVU1602
 4474 044c 1344     		add	r3, r3, r2
1088:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(outer) m = 255 - m;
 4475              		.loc 1 1088 19 view .LVU1603
 4476 044e C3F34703 		ubfx	r3, r3, #1, #8
 4477              	.LVL613:
1089:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4478              		.loc 1 1089 17 is_stmt 1 view .LVU1604
1089:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4479              		.loc 1 1089 19 is_stmt 0 view .LVU1605
 4480 0452 0DB1     		cbz	r5, .L311
1089:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4481              		.loc 1 1089 27 is_stmt 1 discriminator 1 view .LVU1606
1089:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4482              		.loc 1 1089 29 is_stmt 0 discriminator 1 view .LVU1607
 4483 0454 DB43     		mvns	r3, r3
 4484              	.LVL614:
1089:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4485              		.loc 1 1089 29 discriminator 1 view .LVU1608
 4486 0456 DBB2     		uxtb	r3, r3
 4487              	.LVL615:
 4488              	.L311:
1090:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4489              		.loc 1 1090 17 is_stmt 1 view .LVU1609
1090:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4490              		.loc 1 1090 19 is_stmt 0 view .LVU1610
ARM GAS  D:\Temp\ccPmLtDk.s 			page 132


 4491 0458 002F     		cmp	r7, #0
 4492 045a 12DB     		blt	.L312
1090:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4493              		.loc 1 1090 28 discriminator 1 view .LVU1611
 4494 045c B845     		cmp	r8, r7
 4495 045e 10DD     		ble	.L312
1090:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4496              		.loc 1 1090 41 is_stmt 1 discriminator 2 view .LVU1612
1090:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4497              		.loc 1 1090 73 is_stmt 0 discriminator 2 view .LVU1613
 4498 0460 09EB0701 		add	r1, r9, r7
1090:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4499              		.loc 1 1090 56 discriminator 2 view .LVU1614
 4500 0464 19F80720 		ldrb	r2, [r9, r7]	@ zero_extendqisi2
 4501              	.LVL616:
 4502              	.LBB209:
 4503              	.LBI201:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 4504              		.loc 1 1206 46 is_stmt 1 discriminator 2 view .LVU1615
 4505              	.LBB203:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 4506              		.loc 1 1208 5 discriminator 2 view .LVU1616
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 4507              		.loc 1 1208 7 is_stmt 0 discriminator 2 view .LVU1617
 4508 0468 FC2B     		cmp	r3, #252
 4509 046a 09D8     		bhi	.L313
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4510              		.loc 1 1209 5 is_stmt 1 view .LVU1618
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4511              		.loc 1 1209 7 is_stmt 0 view .LVU1619
 4512 046c 022B     		cmp	r3, #2
 4513 046e C5D9     		bls	.L344
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4514              		.loc 1 1211 5 is_stmt 1 view .LVU1620
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4515              		.loc 1 1211 12 is_stmt 0 view .LVU1621
 4516 0470 03FB02F2 		mul	r2, r3, r2
 4517              	.LVL617:
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4518              		.loc 1 1211 12 view .LVU1622
 4519 0474 02EB0220 		add	r0, r2, r2, lsl #8
 4520 0478 02EBC012 		add	r2, r2, r0, lsl #7
 4521 047c C2F3C752 		ubfx	r2, r2, #23, #8
 4522              	.L313:
 4523              	.LVL618:
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4524              		.loc 1 1211 12 view .LVU1623
 4525              	.LBE203:
 4526              	.LBE209:
1090:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4527              		.loc 1 1090 54 view .LVU1624
 4528 0480 0A70     		strb	r2, [r1]
 4529              	.L312:
1091:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4530              		.loc 1 1091 17 is_stmt 1 view .LVU1625
1091:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4531              		.loc 1 1091 19 is_stmt 0 view .LVU1626
ARM GAS  D:\Temp\ccPmLtDk.s 			page 133


 4532 0482 002C     		cmp	r4, #0
 4533 0484 BEDB     		blt	.L314
1091:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4534              		.loc 1 1091 28 discriminator 1 view .LVU1627
 4535 0486 A045     		cmp	r8, r4
 4536 0488 BCDD     		ble	.L314
1091:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4537              		.loc 1 1091 41 is_stmt 1 discriminator 2 view .LVU1628
1091:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4538              		.loc 1 1091 73 is_stmt 0 discriminator 2 view .LVU1629
 4539 048a 09EB0401 		add	r1, r9, r4
1091:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4540              		.loc 1 1091 56 discriminator 2 view .LVU1630
 4541 048e 19F80420 		ldrb	r2, [r9, r4]	@ zero_extendqisi2
 4542              	.LVL619:
 4543              	.LBB210:
 4544              	.LBI204:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 4545              		.loc 1 1206 46 is_stmt 1 discriminator 2 view .LVU1631
 4546              	.LBB206:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 4547              		.loc 1 1208 5 discriminator 2 view .LVU1632
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 4548              		.loc 1 1208 7 is_stmt 0 discriminator 2 view .LVU1633
 4549 0492 FC2B     		cmp	r3, #252
 4550 0494 B5D8     		bhi	.L315
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4551              		.loc 1 1209 5 is_stmt 1 view .LVU1634
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4552              		.loc 1 1209 7 is_stmt 0 view .LVU1635
 4553 0496 022B     		cmp	r3, #2
 4554 0498 B2D9     		bls	.L345
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4555              		.loc 1 1211 5 is_stmt 1 view .LVU1636
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4556              		.loc 1 1211 12 is_stmt 0 view .LVU1637
 4557 049a 03FB02F3 		mul	r3, r3, r2
 4558              	.LVL620:
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4559              		.loc 1 1211 12 view .LVU1638
 4560 049e 03EB0322 		add	r2, r3, r3, lsl #8
 4561              	.LVL621:
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4562              		.loc 1 1211 12 view .LVU1639
 4563 04a2 03EBC213 		add	r3, r3, r2, lsl #7
 4564 04a6 C3F3C752 		ubfx	r2, r3, #23, #8
 4565 04aa AAE7     		b	.L315
 4566              	.LVL622:
 4567              	.L362:
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4568              		.loc 1 1211 12 view .LVU1640
 4569              	.LBE206:
 4570              	.LBE210:
1099:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = (y_prev.f * x1.f) >> 9;
 4571              		.loc 1 1099 13 is_stmt 1 view .LVU1641
1099:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = (y_prev.f * x1.f) >> 9;
 4572              		.loc 1 1099 22 is_stmt 0 view .LVU1642
ARM GAS  D:\Temp\ccPmLtDk.s 			page 134


 4573 04ac BDF81A20 		ldrh	r2, [sp, #26]
1099:lvgl/src/lv_draw/lv_draw_mask.c ****                 m = (y_prev.f * x1.f) >> 9;
 4574              		.loc 1 1099 15 view .LVU1643
 4575 04b0 A2B3     		cbz	r2, .L318
1100:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(outer) m = 255 - m;
 4576              		.loc 1 1100 17 is_stmt 1 view .LVU1644
1100:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(outer) m = 255 - m;
 4577              		.loc 1 1100 35 is_stmt 0 view .LVU1645
 4578 04b2 BDF81630 		ldrh	r3, [sp, #22]
1100:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(outer) m = 255 - m;
 4579              		.loc 1 1100 31 view .LVU1646
 4580 04b6 03FB02F3 		mul	r3, r3, r2
1100:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(outer) m = 255 - m;
 4581              		.loc 1 1100 19 view .LVU1647
 4582 04ba C3F34723 		ubfx	r3, r3, #9, #8
 4583              	.LVL623:
1101:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4584              		.loc 1 1101 17 is_stmt 1 view .LVU1648
1101:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4585              		.loc 1 1101 19 is_stmt 0 view .LVU1649
 4586 04be 0DB1     		cbz	r5, .L319
1101:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4587              		.loc 1 1101 27 is_stmt 1 discriminator 1 view .LVU1650
1101:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4588              		.loc 1 1101 29 is_stmt 0 discriminator 1 view .LVU1651
 4589 04c0 DB43     		mvns	r3, r3
 4590              	.LVL624:
1101:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl >= 0 && kl < len) mask_buf[kl] = mask_mix(mask_buf[kl], m);
 4591              		.loc 1 1101 29 discriminator 1 view .LVU1652
 4592 04c2 DBB2     		uxtb	r3, r3
 4593              	.LVL625:
 4594              	.L319:
1102:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4595              		.loc 1 1102 17 is_stmt 1 view .LVU1653
1102:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4596              		.loc 1 1102 19 is_stmt 0 view .LVU1654
 4597 04c4 002F     		cmp	r7, #0
 4598 04c6 12DB     		blt	.L320
1102:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4599              		.loc 1 1102 28 discriminator 1 view .LVU1655
 4600 04c8 B845     		cmp	r8, r7
 4601 04ca 10DD     		ble	.L320
1102:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4602              		.loc 1 1102 41 is_stmt 1 discriminator 2 view .LVU1656
1102:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4603              		.loc 1 1102 73 is_stmt 0 discriminator 2 view .LVU1657
 4604 04cc 09EB0701 		add	r1, r9, r7
1102:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4605              		.loc 1 1102 56 discriminator 2 view .LVU1658
 4606 04d0 19F80720 		ldrb	r2, [r9, r7]	@ zero_extendqisi2
 4607              	.LVL626:
 4608              	.LBB211:
 4609              	.LBI211:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 4610              		.loc 1 1206 46 is_stmt 1 discriminator 2 view .LVU1659
 4611              	.LBB212:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 135


 4612              		.loc 1 1208 5 discriminator 2 view .LVU1660
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 4613              		.loc 1 1208 7 is_stmt 0 discriminator 2 view .LVU1661
 4614 04d4 FC2B     		cmp	r3, #252
 4615 04d6 09D8     		bhi	.L321
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4616              		.loc 1 1209 5 is_stmt 1 view .LVU1662
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4617              		.loc 1 1209 7 is_stmt 0 view .LVU1663
 4618 04d8 022B     		cmp	r3, #2
 4619 04da 2BD9     		bls	.L346
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4620              		.loc 1 1211 5 is_stmt 1 view .LVU1664
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4621              		.loc 1 1211 12 is_stmt 0 view .LVU1665
 4622 04dc 03FB02F2 		mul	r2, r3, r2
 4623              	.LVL627:
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4624              		.loc 1 1211 12 view .LVU1666
 4625 04e0 02EB0220 		add	r0, r2, r2, lsl #8
 4626 04e4 02EBC012 		add	r2, r2, r0, lsl #7
 4627 04e8 C2F3C752 		ubfx	r2, r2, #23, #8
 4628              	.L321:
 4629              	.LVL628:
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4630              		.loc 1 1211 12 view .LVU1667
 4631              	.LBE212:
 4632              	.LBE211:
1102:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kr >= 0 && kr < len) mask_buf[kr] = mask_mix(mask_buf[kr], m);
 4633              		.loc 1 1102 54 view .LVU1668
 4634 04ec 0A70     		strb	r2, [r1]
 4635              	.L320:
1103:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4636              		.loc 1 1103 17 is_stmt 1 view .LVU1669
1103:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4637              		.loc 1 1103 19 is_stmt 0 view .LVU1670
 4638 04ee 002C     		cmp	r4, #0
 4639 04f0 12DB     		blt	.L322
1103:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4640              		.loc 1 1103 28 discriminator 1 view .LVU1671
 4641 04f2 A045     		cmp	r8, r4
 4642 04f4 10DD     		ble	.L322
1103:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4643              		.loc 1 1103 41 is_stmt 1 discriminator 2 view .LVU1672
1103:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4644              		.loc 1 1103 73 is_stmt 0 discriminator 2 view .LVU1673
 4645 04f6 09EB0401 		add	r1, r9, r4
1103:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4646              		.loc 1 1103 56 discriminator 2 view .LVU1674
 4647 04fa 19F80420 		ldrb	r2, [r9, r4]	@ zero_extendqisi2
 4648              	.LVL629:
 4649              	.LBB214:
 4650              	.LBI214:
1206:lvgl/src/lv_draw/lv_draw_mask.c **** {
 4651              		.loc 1 1206 46 is_stmt 1 discriminator 2 view .LVU1675
 4652              	.LBB215:
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 136


 4653              		.loc 1 1208 5 discriminator 2 view .LVU1676
1208:lvgl/src/lv_draw/lv_draw_mask.c ****     if(mask_new <= LV_OPA_MIN) return 0;
 4654              		.loc 1 1208 7 is_stmt 0 discriminator 2 view .LVU1677
 4655 04fe FC2B     		cmp	r3, #252
 4656 0500 09D8     		bhi	.L323
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4657              		.loc 1 1209 5 is_stmt 1 view .LVU1678
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4658              		.loc 1 1209 7 is_stmt 0 view .LVU1679
 4659 0502 022B     		cmp	r3, #2
 4660 0504 18D9     		bls	.L347
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4661              		.loc 1 1211 5 is_stmt 1 view .LVU1680
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4662              		.loc 1 1211 12 is_stmt 0 view .LVU1681
 4663 0506 03FB02F3 		mul	r3, r3, r2
 4664              	.LVL630:
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4665              		.loc 1 1211 12 view .LVU1682
 4666 050a 03EB0322 		add	r2, r3, r3, lsl #8
 4667              	.LVL631:
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4668              		.loc 1 1211 12 view .LVU1683
 4669 050e 03EBC213 		add	r3, r3, r2, lsl #7
 4670 0512 C3F3C752 		ubfx	r2, r3, #23, #8
 4671              	.L323:
 4672              	.LVL632:
1211:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4673              		.loc 1 1211 12 view .LVU1684
 4674              	.LBE215:
 4675              	.LBE214:
1103:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl--;
 4676              		.loc 1 1103 54 view .LVU1685
 4677 0516 0A70     		strb	r2, [r1]
 4678              	.L322:
1104:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
 4679              		.loc 1 1104 17 is_stmt 1 view .LVU1686
1104:lvgl/src/lv_draw/lv_draw_mask.c ****                 kr++;
 4680              		.loc 1 1104 19 is_stmt 0 view .LVU1687
 4681 0518 013F     		subs	r7, r7, #1
 4682              	.LVL633:
1105:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4683              		.loc 1 1105 17 is_stmt 1 view .LVU1688
1105:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4684              		.loc 1 1105 19 is_stmt 0 view .LVU1689
 4685 051a 0134     		adds	r4, r4, #1
 4686              	.LVL634:
 4687              	.L318:
1108:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl++;
 4688              		.loc 1 1108 13 is_stmt 1 view .LVU1690
1108:lvgl/src/lv_draw/lv_draw_mask.c ****                 kl++;
 4689              		.loc 1 1108 15 is_stmt 0 view .LVU1691
 4690 051c 45B9     		cbnz	r5, .L298
1109:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl > len) {
 4691              		.loc 1 1109 17 is_stmt 1 view .LVU1692
1109:lvgl/src/lv_draw/lv_draw_mask.c ****                 if(kl > len) {
 4692              		.loc 1 1109 19 is_stmt 0 view .LVU1693
ARM GAS  D:\Temp\ccPmLtDk.s 			page 137


 4693 051e 791C     		adds	r1, r7, #1
 4694              	.LVL635:
1110:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
 4695              		.loc 1 1110 17 is_stmt 1 view .LVU1694
1110:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
 4696              		.loc 1 1110 19 is_stmt 0 view .LVU1695
 4697 0520 8845     		cmp	r8, r1
 4698 0522 16DB     		blt	.L296
1113:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4699              		.loc 1 1113 17 is_stmt 1 view .LVU1696
1113:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4700              		.loc 1 1113 19 is_stmt 0 view .LVU1697
 4701 0524 0029     		cmp	r1, #0
 4702 0526 09DA     		bge	.L363
 4703              	.LVL636:
 4704              	.L326:
1115:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
 4705              		.loc 1 1115 17 is_stmt 1 view .LVU1698
1115:lvgl/src/lv_draw/lv_draw_mask.c ****                     return LV_DRAW_MASK_RES_TRANSP;
 4706              		.loc 1 1115 19 is_stmt 0 view .LVU1699
 4707 0528 002C     		cmp	r4, #0
 4708 052a 12DB     		blt	.L296
1118:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4709              		.loc 1 1118 17 is_stmt 1 view .LVU1700
1118:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4710              		.loc 1 1118 19 is_stmt 0 view .LVU1701
 4711 052c A045     		cmp	r8, r4
 4712 052e 09DC     		bgt	.L364
 4713              	.LVL637:
 4714              	.L298:
1118:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4715              		.loc 1 1118 19 view .LVU1702
 4716              	.LBE229:
 4717              	.LBE189:
1123:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4718              		.loc 1 1123 12 discriminator 2 view .LVU1703
 4719 0530 0220     		movs	r0, #2
 4720              	.LBB231:
 4721 0532 11E0     		b	.L269
 4722              	.LVL638:
 4723              	.L346:
 4724              	.LBB230:
 4725              	.LBB217:
 4726              	.LBB213:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4727              		.loc 1 1209 39 view .LVU1704
 4728 0534 0022     		movs	r2, #0
 4729              	.LVL639:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4730              		.loc 1 1209 39 view .LVU1705
 4731 0536 D9E7     		b	.L321
 4732              	.LVL640:
 4733              	.L347:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4734              		.loc 1 1209 39 view .LVU1706
 4735              	.LBE213:
 4736              	.LBE217:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 138


 4737              	.LBB218:
 4738              	.LBB216:
 4739 0538 0022     		movs	r2, #0
 4740              	.LVL641:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4741              		.loc 1 1209 39 view .LVU1707
 4742 053a ECE7     		b	.L323
 4743              	.LVL642:
 4744              	.L363:
1209:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4745              		.loc 1 1209 39 view .LVU1708
 4746              	.LBE216:
 4747              	.LBE218:
1113:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4748              		.loc 1 1113 29 is_stmt 1 discriminator 1 view .LVU1709
 4749 053c 4846     		mov	r0, r9
 4750 053e FFF7FEFF 		bl	_lv_memset_00
 4751              	.LVL643:
1113:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4752              		.loc 1 1113 29 is_stmt 0 discriminator 1 view .LVU1710
 4753 0542 F1E7     		b	.L326
 4754              	.L364:
1118:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4755              		.loc 1 1118 30 is_stmt 1 discriminator 1 view .LVU1711
 4756 0544 A8EB0401 		sub	r1, r8, r4
 4757 0548 09EB0400 		add	r0, r9, r4
 4758 054c FFF7FEFF 		bl	_lv_memset_00
 4759              	.LVL644:
 4760 0550 EEE7     		b	.L298
 4761              	.LVL645:
 4762              	.L296:
1118:lvgl/src/lv_draw/lv_draw_mask.c ****             }
 4763              		.loc 1 1118 30 is_stmt 0 discriminator 1 view .LVU1712
 4764              	.LBE230:
1015:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4765              		.loc 1 1015 28 discriminator 1 view .LVU1713
 4766 0552 0020     		movs	r0, #0
 4767 0554 00E0     		b	.L269
 4768              	.LVL646:
 4769              	.L327:
1015:lvgl/src/lv_draw/lv_draw_mask.c ****                 }
 4770              		.loc 1 1015 28 discriminator 1 view .LVU1714
 4771              	.LBE231:
 886:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 4772              		.loc 1 886 20 view .LVU1715
 4773 0556 0020     		movs	r0, #0
 4774              	.LVL647:
 4775              	.L269:
1124:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4776              		.loc 1 1124 1 view .LVU1716
 4777 0558 0BB0     		add	sp, sp, #44
 4778              	.LCFI16:
 4779              		.cfi_remember_state
 4780              		.cfi_def_cfa_offset 36
 4781              		@ sp needed
 4782 055a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4783              	.LVL648:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 139


 4784              	.L351:
 4785              	.LCFI17:
 4786              		.cfi_restore_state
 886:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 4787              		.loc 1 886 20 view .LVU1717
 4788 055e 0020     		movs	r0, #0
 4789              	.LVL649:
 886:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 4790              		.loc 1 886 20 view .LVU1718
 4791 0560 FAE7     		b	.L269
 4792              	.LVL650:
 4793              	.L329:
 891:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 4794              		.loc 1 891 20 view .LVU1719
 4795 0562 0120     		movs	r0, #1
 4796              	.LVL651:
 891:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 4797              		.loc 1 891 20 view .LVU1720
 4798 0564 F8E7     		b	.L269
 4799              	.LVL652:
 4800              	.L331:
 4801              	.LBB232:
 900:lvgl/src/lv_draw/lv_draw_mask.c ****             if(last >= 0) {
 4802              		.loc 1 900 35 view .LVU1721
 4803 0566 0020     		movs	r0, #0
 4804 0568 F6E7     		b	.L269
 4805              	.LVL653:
 4806              	.L332:
 906:lvgl/src/lv_draw/lv_draw_mask.c ****             else if(first < len) {
 4807              		.loc 1 906 35 view .LVU1722
 4808 056a 0020     		movs	r0, #0
 4809 056c F4E7     		b	.L269
 4810              	.L333:
 911:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 4811              		.loc 1 911 25 view .LVU1723
 4812 056e 0220     		movs	r0, #2
 4813 0570 F2E7     		b	.L269
 4814              	.L334:
 910:lvgl/src/lv_draw/lv_draw_mask.c ****             else return LV_DRAW_MASK_RES_CHANGED;
 4815              		.loc 1 910 50 view .LVU1724
 4816 0572 0120     		movs	r0, #1
 4817 0574 F0E7     		b	.L269
 4818              	.LVL654:
 4819              	.L336:
 910:lvgl/src/lv_draw/lv_draw_mask.c ****             else return LV_DRAW_MASK_RES_CHANGED;
 4820              		.loc 1 910 50 view .LVU1725
 4821              	.LBE232:
1123:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4822              		.loc 1 1123 12 view .LVU1726
 4823 0576 0220     		movs	r0, #2
 4824 0578 EEE7     		b	.L269
 4825              		.cfi_endproc
 4826              	.LFE182:
 4828              		.section	.text.lv_draw_mask_add,"ax",%progbits
 4829              		.align	1
 4830              		.global	lv_draw_mask_add
 4831              		.syntax unified
ARM GAS  D:\Temp\ccPmLtDk.s 			page 140


 4832              		.thumb
 4833              		.thumb_func
 4834              		.fpu fpv4-sp-d16
 4836              	lv_draw_mask_add:
 4837              	.LVL655:
 4838              	.LFB167:
  71:lvgl/src/lv_draw/lv_draw_mask.c ****     /*Look for a free entry*/
 4839              		.loc 1 71 1 is_stmt 1 view -0
 4840              		.cfi_startproc
 4841              		@ args = 0, pretend = 0, frame = 0
 4842              		@ frame_needed = 0, uses_anonymous_args = 0
 4843              		@ link register save eliminated.
  73:lvgl/src/lv_draw/lv_draw_mask.c ****     for(i = 0; i < _LV_MASK_MAX_NUM; i++) {
 4844              		.loc 1 73 5 view .LVU1728
  74:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param == NULL) break;
 4845              		.loc 1 74 5 view .LVU1729
  74:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param == NULL) break;
 4846              		.loc 1 74 11 is_stmt 0 view .LVU1730
 4847 0000 0023     		movs	r3, #0
 4848              	.LVL656:
 4849              	.L366:
  74:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param == NULL) break;
 4850              		.loc 1 74 5 discriminator 1 view .LVU1731
 4851 0002 0F2B     		cmp	r3, #15
 4852 0004 06D8     		bhi	.L367
  75:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 4853              		.loc 1 75 9 is_stmt 1 view .LVU1732
  75:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 4854              		.loc 1 75 45 is_stmt 0 view .LVU1733
 4855 0006 0A4A     		ldr	r2, .L371
 4856 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
  75:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 4857              		.loc 1 75 11 view .LVU1734
 4858 000c 12B1     		cbz	r2, .L367
  74:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param == NULL) break;
 4859              		.loc 1 74 39 discriminator 2 view .LVU1735
 4860 000e 0133     		adds	r3, r3, #1
 4861              	.LVL657:
  74:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param == NULL) break;
 4862              		.loc 1 74 39 discriminator 2 view .LVU1736
 4863 0010 DBB2     		uxtb	r3, r3
 4864              	.LVL658:
  74:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param == NULL) break;
 4865              		.loc 1 74 39 discriminator 2 view .LVU1737
 4866 0012 F6E7     		b	.L366
 4867              	.L367:
  78:lvgl/src/lv_draw/lv_draw_mask.c ****         LV_LOG_WARN("lv_mask_add: no place to add the mask");
 4868              		.loc 1 78 5 is_stmt 1 view .LVU1738
  78:lvgl/src/lv_draw/lv_draw_mask.c ****         LV_LOG_WARN("lv_mask_add: no place to add the mask");
 4869              		.loc 1 78 7 is_stmt 0 view .LVU1739
 4870 0014 0F2B     		cmp	r3, #15
 4871 0016 07D8     		bhi	.L370
  83:lvgl/src/lv_draw/lv_draw_mask.c ****     LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id = custom_id;
 4872              		.loc 1 83 5 is_stmt 1 view .LVU1740
  83:lvgl/src/lv_draw/lv_draw_mask.c ****     LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id = custom_id;
 4873              		.loc 1 83 45 is_stmt 0 view .LVU1741
 4874 0018 054A     		ldr	r2, .L371
ARM GAS  D:\Temp\ccPmLtDk.s 			page 141


 4875 001a 42F83300 		str	r0, [r2, r3, lsl #3]
  84:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4876              		.loc 1 84 5 is_stmt 1 view .LVU1742
  84:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4877              		.loc 1 84 49 is_stmt 0 view .LVU1743
 4878 001e 02EBC302 		add	r2, r2, r3, lsl #3
 4879 0022 5160     		str	r1, [r2, #4]
  86:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4880              		.loc 1 86 5 is_stmt 1 view .LVU1744
  86:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4881              		.loc 1 86 12 is_stmt 0 view .LVU1745
 4882 0024 18B2     		sxth	r0, r3
 4883              	.LVL659:
  86:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4884              		.loc 1 86 12 view .LVU1746
 4885 0026 7047     		bx	lr
 4886              	.LVL660:
 4887              	.L370:
  80:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 4888              		.loc 1 80 16 view .LVU1747
 4889 0028 4FF0FF30 		mov	r0, #-1
 4890              	.LVL661:
  87:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4891              		.loc 1 87 1 view .LVU1748
 4892 002c 7047     		bx	lr
 4893              	.L372:
 4894 002e 00BF     		.align	2
 4895              	.L371:
 4896 0030 00000000 		.word	_lv_draw_mask_list
 4897              		.cfi_endproc
 4898              	.LFE167:
 4900              		.section	.text.lv_draw_mask_apply,"ax",%progbits
 4901              		.align	1
 4902              		.global	lv_draw_mask_apply
 4903              		.syntax unified
 4904              		.thumb
 4905              		.thumb_func
 4906              		.fpu fpv4-sp-d16
 4908              	lv_draw_mask_apply:
 4909              	.LVL662:
 4910              	.LFB168:
 102:lvgl/src/lv_draw/lv_draw_mask.c ****     bool changed = false;
 4911              		.loc 1 102 1 is_stmt 1 view -0
 4912              		.cfi_startproc
 4913              		@ args = 0, pretend = 0, frame = 0
 4914              		@ frame_needed = 0, uses_anonymous_args = 0
 102:lvgl/src/lv_draw/lv_draw_mask.c ****     bool changed = false;
 4915              		.loc 1 102 1 is_stmt 0 view .LVU1750
 4916 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4917              	.LCFI18:
 4918              		.cfi_def_cfa_offset 32
 4919              		.cfi_offset 4, -32
 4920              		.cfi_offset 5, -28
 4921              		.cfi_offset 6, -24
 4922              		.cfi_offset 7, -20
 4923              		.cfi_offset 8, -16
 4924              		.cfi_offset 9, -12
ARM GAS  D:\Temp\ccPmLtDk.s 			page 142


 4925              		.cfi_offset 10, -8
 4926              		.cfi_offset 14, -4
 4927 0004 82B0     		sub	sp, sp, #8
 4928              	.LCFI19:
 4929              		.cfi_def_cfa_offset 40
 4930 0006 8046     		mov	r8, r0
 4931 0008 0F46     		mov	r7, r1
 4932 000a 1646     		mov	r6, r2
 4933 000c 9A46     		mov	r10, r3
 103:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_common_dsc_t * dsc;
 4934              		.loc 1 103 5 is_stmt 1 view .LVU1751
 4935              	.LVL663:
 104:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4936              		.loc 1 104 5 view .LVU1752
 106:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4937              		.loc 1 106 5 view .LVU1753
 108:lvgl/src/lv_draw/lv_draw_mask.c ****         dsc = m->param;
 4938              		.loc 1 108 5 view .LVU1754
 106:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4939              		.loc 1 106 29 is_stmt 0 view .LVU1755
 4940 000e 0F4C     		ldr	r4, .L383
 103:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_common_dsc_t * dsc;
 4941              		.loc 1 103 10 view .LVU1756
 4942 0010 4FF00009 		mov	r9, #0
 108:lvgl/src/lv_draw/lv_draw_mask.c ****         dsc = m->param;
 4943              		.loc 1 108 10 view .LVU1757
 4944 0014 00E0     		b	.L374
 4945              	.LVL664:
 4946              	.L376:
 4947              	.LBB233:
 115:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 4948              		.loc 1 115 9 is_stmt 1 view .LVU1758
 115:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 4949              		.loc 1 115 10 is_stmt 0 view .LVU1759
 4950 0016 0834     		adds	r4, r4, #8
 4951              	.LVL665:
 4952              	.L374:
 115:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 4953              		.loc 1 115 10 view .LVU1760
 4954              	.LBE233:
 108:lvgl/src/lv_draw/lv_draw_mask.c ****         dsc = m->param;
 4955              		.loc 1 108 12 view .LVU1761
 4956 0018 2368     		ldr	r3, [r4]
 108:lvgl/src/lv_draw/lv_draw_mask.c ****         dsc = m->param;
 4957              		.loc 1 108 10 view .LVU1762
 4958 001a 6BB1     		cbz	r3, .L381
 4959              	.LBB234:
 109:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_draw_mask_res_t res = LV_DRAW_MASK_RES_FULL_COVER;
 4960              		.loc 1 109 9 is_stmt 1 view .LVU1763
 4961              	.LVL666:
 110:lvgl/src/lv_draw/lv_draw_mask.c ****         res = dsc->cb(mask_buf, abs_x, abs_y, len, (void *)m->param);
 4962              		.loc 1 110 9 view .LVU1764
 111:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res == LV_DRAW_MASK_RES_TRANSP) return LV_DRAW_MASK_RES_TRANSP;
 4963              		.loc 1 111 9 view .LVU1765
 111:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res == LV_DRAW_MASK_RES_TRANSP) return LV_DRAW_MASK_RES_TRANSP;
 4964              		.loc 1 111 18 is_stmt 0 view .LVU1766
 4965 001c 1D68     		ldr	r5, [r3]
ARM GAS  D:\Temp\ccPmLtDk.s 			page 143


 111:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res == LV_DRAW_MASK_RES_TRANSP) return LV_DRAW_MASK_RES_TRANSP;
 4966              		.loc 1 111 15 view .LVU1767
 4967 001e 0093     		str	r3, [sp]
 4968 0020 5346     		mov	r3, r10
 4969              	.LVL667:
 111:lvgl/src/lv_draw/lv_draw_mask.c ****         if(res == LV_DRAW_MASK_RES_TRANSP) return LV_DRAW_MASK_RES_TRANSP;
 4970              		.loc 1 111 15 view .LVU1768
 4971 0022 3246     		mov	r2, r6
 4972 0024 3946     		mov	r1, r7
 4973 0026 4046     		mov	r0, r8
 4974 0028 A847     		blx	r5
 4975              	.LVL668:
 112:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res == LV_DRAW_MASK_RES_CHANGED) changed = true;
 4976              		.loc 1 112 9 is_stmt 1 view .LVU1769
 112:lvgl/src/lv_draw/lv_draw_mask.c ****         else if(res == LV_DRAW_MASK_RES_CHANGED) changed = true;
 4977              		.loc 1 112 11 is_stmt 0 view .LVU1770
 4978 002a 0346     		mov	r3, r0
 4979 002c 40B1     		cbz	r0, .L375
 113:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4980              		.loc 1 113 14 is_stmt 1 view .LVU1771
 113:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4981              		.loc 1 113 16 is_stmt 0 view .LVU1772
 4982 002e 0228     		cmp	r0, #2
 4983 0030 F1D1     		bne	.L376
 113:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4984              		.loc 1 113 58 view .LVU1773
 4985 0032 4FF00109 		mov	r9, #1
 4986              	.LVL669:
 113:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4987              		.loc 1 113 58 view .LVU1774
 4988 0036 EEE7     		b	.L376
 4989              	.LVL670:
 4990              	.L381:
 113:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4991              		.loc 1 113 58 view .LVU1775
 4992              	.LBE234:
 118:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4993              		.loc 1 118 5 is_stmt 1 view .LVU1776
 118:lvgl/src/lv_draw/lv_draw_mask.c **** }
 4994              		.loc 1 118 47 is_stmt 0 view .LVU1777
 4995 0038 B9F1000F 		cmp	r9, #0
 4996 003c 04D1     		bne	.L382
 4997 003e 0123     		movs	r3, #1
 4998              	.L375:
 119:lvgl/src/lv_draw/lv_draw_mask.c **** 
 4999              		.loc 1 119 1 view .LVU1778
 5000 0040 1846     		mov	r0, r3
 5001 0042 02B0     		add	sp, sp, #8
 5002              	.LCFI20:
 5003              		.cfi_remember_state
 5004              		.cfi_def_cfa_offset 32
 5005              		@ sp needed
 5006 0044 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5007              	.LVL671:
 5008              	.L382:
 5009              	.LCFI21:
 5010              		.cfi_restore_state
ARM GAS  D:\Temp\ccPmLtDk.s 			page 144


 118:lvgl/src/lv_draw/lv_draw_mask.c **** }
 5011              		.loc 1 118 47 view .LVU1779
 5012 0048 0223     		movs	r3, #2
 5013 004a F9E7     		b	.L375
 5014              	.L384:
 5015              		.align	2
 5016              	.L383:
 5017 004c 00000000 		.word	_lv_draw_mask_list
 5018              		.cfi_endproc
 5019              	.LFE168:
 5021              		.section	.text.lv_draw_mask_remove_id,"ax",%progbits
 5022              		.align	1
 5023              		.global	lv_draw_mask_remove_id
 5024              		.syntax unified
 5025              		.thumb
 5026              		.thumb_func
 5027              		.fpu fpv4-sp-d16
 5029              	lv_draw_mask_remove_id:
 5030              	.LVL672:
 5031              	.LFB169:
 128:lvgl/src/lv_draw/lv_draw_mask.c ****     void * p = NULL;
 5032              		.loc 1 128 1 is_stmt 1 view -0
 5033              		.cfi_startproc
 5034              		@ args = 0, pretend = 0, frame = 0
 5035              		@ frame_needed = 0, uses_anonymous_args = 0
 5036              		@ link register save eliminated.
 129:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5037              		.loc 1 129 5 view .LVU1781
 131:lvgl/src/lv_draw/lv_draw_mask.c ****         p = LV_GC_ROOT(_lv_draw_mask_list[id]).param;
 5038              		.loc 1 131 5 view .LVU1782
 131:lvgl/src/lv_draw/lv_draw_mask.c ****         p = LV_GC_ROOT(_lv_draw_mask_list[id]).param;
 5039              		.loc 1 131 7 is_stmt 0 view .LVU1783
 5040 0000 B0F1FF3F 		cmp	r0, #-1
 5041 0004 0AD0     		beq	.L387
 132:lvgl/src/lv_draw/lv_draw_mask.c ****         LV_GC_ROOT(_lv_draw_mask_list[id]).param = NULL;
 5042              		.loc 1 132 9 is_stmt 1 view .LVU1784
 132:lvgl/src/lv_draw/lv_draw_mask.c ****         LV_GC_ROOT(_lv_draw_mask_list[id]).param = NULL;
 5043              		.loc 1 132 11 is_stmt 0 view .LVU1785
 5044 0006 064B     		ldr	r3, .L388
 5045 0008 53F83010 		ldr	r1, [r3, r0, lsl #3]
 5046              	.LVL673:
 133:lvgl/src/lv_draw/lv_draw_mask.c ****         LV_GC_ROOT(_lv_draw_mask_list[id]).custom_id = NULL;
 5047              		.loc 1 133 9 is_stmt 1 view .LVU1786
 133:lvgl/src/lv_draw/lv_draw_mask.c ****         LV_GC_ROOT(_lv_draw_mask_list[id]).custom_id = NULL;
 5048              		.loc 1 133 50 is_stmt 0 view .LVU1787
 5049 000c 0022     		movs	r2, #0
 5050 000e 43F83020 		str	r2, [r3, r0, lsl #3]
 134:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5051              		.loc 1 134 9 is_stmt 1 view .LVU1788
 134:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5052              		.loc 1 134 54 is_stmt 0 view .LVU1789
 5053 0012 03EBC003 		add	r3, r3, r0, lsl #3
 5054 0016 5A60     		str	r2, [r3, #4]
 5055              	.LVL674:
 5056              	.L385:
 138:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5057              		.loc 1 138 1 view .LVU1790
ARM GAS  D:\Temp\ccPmLtDk.s 			page 145


 5058 0018 0846     		mov	r0, r1
 5059              	.LVL675:
 138:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5060              		.loc 1 138 1 view .LVU1791
 5061 001a 7047     		bx	lr
 5062              	.LVL676:
 5063              	.L387:
 129:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5064              		.loc 1 129 12 view .LVU1792
 5065 001c 0021     		movs	r1, #0
 137:lvgl/src/lv_draw/lv_draw_mask.c **** }
 5066              		.loc 1 137 5 is_stmt 1 view .LVU1793
 137:lvgl/src/lv_draw/lv_draw_mask.c **** }
 5067              		.loc 1 137 12 is_stmt 0 view .LVU1794
 5068 001e FBE7     		b	.L385
 5069              	.L389:
 5070              		.align	2
 5071              	.L388:
 5072 0020 00000000 		.word	_lv_draw_mask_list
 5073              		.cfi_endproc
 5074              	.LFE169:
 5076              		.section	.text.lv_draw_mask_remove_custom,"ax",%progbits
 5077              		.align	1
 5078              		.global	lv_draw_mask_remove_custom
 5079              		.syntax unified
 5080              		.thumb
 5081              		.thumb_func
 5082              		.fpu fpv4-sp-d16
 5084              	lv_draw_mask_remove_custom:
 5085              	.LVL677:
 5086              	.LFB170:
 147:lvgl/src/lv_draw/lv_draw_mask.c ****     void * p = NULL;
 5087              		.loc 1 147 1 is_stmt 1 view -0
 5088              		.cfi_startproc
 5089              		@ args = 0, pretend = 0, frame = 0
 5090              		@ frame_needed = 0, uses_anonymous_args = 0
 5091              		@ link register save eliminated.
 147:lvgl/src/lv_draw/lv_draw_mask.c ****     void * p = NULL;
 5092              		.loc 1 147 1 is_stmt 0 view .LVU1796
 5093 0000 0146     		mov	r1, r0
 148:lvgl/src/lv_draw/lv_draw_mask.c ****     uint8_t i;
 5094              		.loc 1 148 5 is_stmt 1 view .LVU1797
 5095              	.LVL678:
 149:lvgl/src/lv_draw/lv_draw_mask.c ****     for(i = 0; i < _LV_MASK_MAX_NUM; i++) {
 5096              		.loc 1 149 5 view .LVU1798
 150:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id == custom_id) {
 5097              		.loc 1 150 5 view .LVU1799
 150:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id == custom_id) {
 5098              		.loc 1 150 11 is_stmt 0 view .LVU1800
 5099 0002 0023     		movs	r3, #0
 148:lvgl/src/lv_draw/lv_draw_mask.c ****     uint8_t i;
 5100              		.loc 1 148 12 view .LVU1801
 5101 0004 1846     		mov	r0, r3
 5102              	.LVL679:
 150:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id == custom_id) {
 5103              		.loc 1 150 5 view .LVU1802
 5104 0006 04E0     		b	.L395
ARM GAS  D:\Temp\ccPmLtDk.s 			page 146


 5105              	.LVL680:
 5106              	.L402:
 5107              	.LCFI22:
 5108              		.cfi_def_cfa_offset 4
 5109              		.cfi_offset 4, -4
 158:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5110              		.loc 1 158 1 view .LVU1803
 5111 0008 5DF8044B 		ldr	r4, [sp], #4
 5112              	.LCFI23:
 5113              		.cfi_restore 4
 5114              		.cfi_def_cfa_offset 0
 5115 000c 7047     		bx	lr
 5116              	.L401:
 150:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id == custom_id) {
 5117              		.loc 1 150 39 view .LVU1804
 5118 000e 0133     		adds	r3, r3, #1
 5119              	.LVL681:
 150:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id == custom_id) {
 5120              		.loc 1 150 39 view .LVU1805
 5121 0010 DBB2     		uxtb	r3, r3
 5122              	.LVL682:
 5123              	.L395:
 150:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id == custom_id) {
 5124              		.loc 1 150 5 view .LVU1806
 5125 0012 0F2B     		cmp	r3, #15
 5126 0014 1AD8     		bhi	.L400
 151:lvgl/src/lv_draw/lv_draw_mask.c ****             p = LV_GC_ROOT(_lv_draw_mask_list[i]).param;
 5127              		.loc 1 151 9 is_stmt 1 view .LVU1807
 151:lvgl/src/lv_draw/lv_draw_mask.c ****             p = LV_GC_ROOT(_lv_draw_mask_list[i]).param;
 5128              		.loc 1 151 45 is_stmt 0 view .LVU1808
 5129 0016 0E4A     		ldr	r2, .L403
 5130 0018 02EBC302 		add	r2, r2, r3, lsl #3
 5131 001c 5268     		ldr	r2, [r2, #4]
 151:lvgl/src/lv_draw/lv_draw_mask.c ****             p = LV_GC_ROOT(_lv_draw_mask_list[i]).param;
 5132              		.loc 1 151 11 view .LVU1809
 5133 001e 8A42     		cmp	r2, r1
 5134 0020 F5D1     		bne	.L401
 147:lvgl/src/lv_draw/lv_draw_mask.c ****     void * p = NULL;
 5135              		.loc 1 147 1 view .LVU1810
 5136 0022 10B4     		push	{r4}
 5137              	.LCFI24:
 5138              		.cfi_def_cfa_offset 4
 5139              		.cfi_offset 4, -4
 5140              	.L396:
 152:lvgl/src/lv_draw/lv_draw_mask.c ****             LV_GC_ROOT(_lv_draw_mask_list[i]).param = NULL;
 5141              		.loc 1 152 13 is_stmt 1 view .LVU1811
 152:lvgl/src/lv_draw/lv_draw_mask.c ****             LV_GC_ROOT(_lv_draw_mask_list[i]).param = NULL;
 5142              		.loc 1 152 15 is_stmt 0 view .LVU1812
 5143 0024 0A4A     		ldr	r2, .L403
 5144 0026 52F83300 		ldr	r0, [r2, r3, lsl #3]
 5145              	.LVL683:
 153:lvgl/src/lv_draw/lv_draw_mask.c ****             LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id = NULL;
 5146              		.loc 1 153 13 is_stmt 1 view .LVU1813
 153:lvgl/src/lv_draw/lv_draw_mask.c ****             LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id = NULL;
 5147              		.loc 1 153 53 is_stmt 0 view .LVU1814
 5148 002a 0024     		movs	r4, #0
 5149 002c 42F83340 		str	r4, [r2, r3, lsl #3]
ARM GAS  D:\Temp\ccPmLtDk.s 			page 147


 154:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5150              		.loc 1 154 13 is_stmt 1 view .LVU1815
 154:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5151              		.loc 1 154 57 is_stmt 0 view .LVU1816
 5152 0030 02EBC302 		add	r2, r2, r3, lsl #3
 5153 0034 5460     		str	r4, [r2, #4]
 5154              	.L392:
 150:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id == custom_id) {
 5155              		.loc 1 150 39 discriminator 2 view .LVU1817
 5156 0036 0133     		adds	r3, r3, #1
 5157              	.LVL684:
 150:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id == custom_id) {
 5158              		.loc 1 150 39 discriminator 2 view .LVU1818
 5159 0038 DBB2     		uxtb	r3, r3
 5160              	.LVL685:
 150:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).custom_id == custom_id) {
 5161              		.loc 1 150 5 discriminator 2 view .LVU1819
 5162 003a 0F2B     		cmp	r3, #15
 5163 003c E4D8     		bhi	.L402
 151:lvgl/src/lv_draw/lv_draw_mask.c ****             p = LV_GC_ROOT(_lv_draw_mask_list[i]).param;
 5164              		.loc 1 151 9 is_stmt 1 view .LVU1820
 151:lvgl/src/lv_draw/lv_draw_mask.c ****             p = LV_GC_ROOT(_lv_draw_mask_list[i]).param;
 5165              		.loc 1 151 45 is_stmt 0 view .LVU1821
 5166 003e 044A     		ldr	r2, .L403
 5167 0040 02EBC302 		add	r2, r2, r3, lsl #3
 5168 0044 5268     		ldr	r2, [r2, #4]
 151:lvgl/src/lv_draw/lv_draw_mask.c ****             p = LV_GC_ROOT(_lv_draw_mask_list[i]).param;
 5169              		.loc 1 151 11 view .LVU1822
 5170 0046 8A42     		cmp	r2, r1
 5171 0048 F5D1     		bne	.L392
 5172 004a EBE7     		b	.L396
 5173              	.L400:
 5174              	.LCFI25:
 5175              		.cfi_def_cfa_offset 0
 5176              		.cfi_restore 4
 151:lvgl/src/lv_draw/lv_draw_mask.c ****             p = LV_GC_ROOT(_lv_draw_mask_list[i]).param;
 5177              		.loc 1 151 11 view .LVU1823
 5178 004c 7047     		bx	lr
 5179              	.L404:
 5180 004e 00BF     		.align	2
 5181              	.L403:
 5182 0050 00000000 		.word	_lv_draw_mask_list
 5183              		.cfi_endproc
 5184              	.LFE170:
 5186              		.section	.text.lv_draw_mask_get_cnt,"ax",%progbits
 5187              		.align	1
 5188              		.global	lv_draw_mask_get_cnt
 5189              		.syntax unified
 5190              		.thumb
 5191              		.thumb_func
 5192              		.fpu fpv4-sp-d16
 5194              	lv_draw_mask_get_cnt:
 5195              	.LFB171:
 165:lvgl/src/lv_draw/lv_draw_mask.c ****     uint8_t cnt = 0;
 5196              		.loc 1 165 1 is_stmt 1 view -0
 5197              		.cfi_startproc
 5198              		@ args = 0, pretend = 0, frame = 0
ARM GAS  D:\Temp\ccPmLtDk.s 			page 148


 5199              		@ frame_needed = 0, uses_anonymous_args = 0
 5200              		@ link register save eliminated.
 166:lvgl/src/lv_draw/lv_draw_mask.c ****     uint8_t i;
 5201              		.loc 1 166 5 view .LVU1825
 5202              	.LVL686:
 167:lvgl/src/lv_draw/lv_draw_mask.c ****     for(i = 0; i < _LV_MASK_MAX_NUM; i++) {
 5203              		.loc 1 167 5 view .LVU1826
 168:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param) cnt++;
 5204              		.loc 1 168 5 view .LVU1827
 168:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param) cnt++;
 5205              		.loc 1 168 11 is_stmt 0 view .LVU1828
 5206 0000 0023     		movs	r3, #0
 166:lvgl/src/lv_draw/lv_draw_mask.c ****     uint8_t i;
 5207              		.loc 1 166 13 view .LVU1829
 5208 0002 1846     		mov	r0, r3
 168:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param) cnt++;
 5209              		.loc 1 168 5 view .LVU1830
 5210 0004 01E0     		b	.L406
 5211              	.LVL687:
 5212              	.L407:
 168:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param) cnt++;
 5213              		.loc 1 168 39 discriminator 2 view .LVU1831
 5214 0006 0133     		adds	r3, r3, #1
 5215              	.LVL688:
 168:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param) cnt++;
 5216              		.loc 1 168 39 discriminator 2 view .LVU1832
 5217 0008 DBB2     		uxtb	r3, r3
 5218              	.LVL689:
 5219              	.L406:
 168:lvgl/src/lv_draw/lv_draw_mask.c ****         if(LV_GC_ROOT(_lv_draw_mask_list[i]).param) cnt++;
 5220              		.loc 1 168 5 discriminator 1 view .LVU1833
 5221 000a 0F2B     		cmp	r3, #15
 5222 000c 07D8     		bhi	.L409
 169:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5223              		.loc 1 169 9 is_stmt 1 view .LVU1834
 169:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5224              		.loc 1 169 45 is_stmt 0 view .LVU1835
 5225 000e 044A     		ldr	r2, .L410
 5226 0010 52F83320 		ldr	r2, [r2, r3, lsl #3]
 169:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5227              		.loc 1 169 11 view .LVU1836
 5228 0014 002A     		cmp	r2, #0
 5229 0016 F6D0     		beq	.L407
 169:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5230              		.loc 1 169 53 is_stmt 1 discriminator 1 view .LVU1837
 169:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5231              		.loc 1 169 56 is_stmt 0 discriminator 1 view .LVU1838
 5232 0018 0130     		adds	r0, r0, #1
 5233              	.LVL690:
 169:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5234              		.loc 1 169 56 discriminator 1 view .LVU1839
 5235 001a C0B2     		uxtb	r0, r0
 5236              	.LVL691:
 169:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5237              		.loc 1 169 56 discriminator 1 view .LVU1840
 5238 001c F3E7     		b	.L407
 5239              	.L409:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 149


 172:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5240              		.loc 1 172 1 view .LVU1841
 5241 001e 7047     		bx	lr
 5242              	.L411:
 5243              		.align	2
 5244              	.L410:
 5245 0020 00000000 		.word	_lv_draw_mask_list
 5246              		.cfi_endproc
 5247              	.LFE171:
 5249              		.section	.text.lv_draw_mask_line_points_init,"ax",%progbits
 5250              		.align	1
 5251              		.global	lv_draw_mask_line_points_init
 5252              		.syntax unified
 5253              		.thumb
 5254              		.thumb_func
 5255              		.fpu fpv4-sp-d16
 5257              	lv_draw_mask_line_points_init:
 5258              	.LVL692:
 5259              	.LFB172:
 187:lvgl/src/lv_draw/lv_draw_mask.c ****     _lv_memset_00(param, sizeof(lv_draw_mask_line_param_t));
 5260              		.loc 1 187 1 is_stmt 1 view -0
 5261              		.cfi_startproc
 5262              		@ args = 8, pretend = 0, frame = 0
 5263              		@ frame_needed = 0, uses_anonymous_args = 0
 187:lvgl/src/lv_draw/lv_draw_mask.c ****     _lv_memset_00(param, sizeof(lv_draw_mask_line_param_t));
 5264              		.loc 1 187 1 is_stmt 0 view .LVU1843
 5265 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5266              	.LCFI26:
 5267              		.cfi_def_cfa_offset 24
 5268              		.cfi_offset 4, -24
 5269              		.cfi_offset 5, -20
 5270              		.cfi_offset 6, -16
 5271              		.cfi_offset 7, -12
 5272              		.cfi_offset 8, -8
 5273              		.cfi_offset 14, -4
 5274 0004 0446     		mov	r4, r0
 5275 0006 8846     		mov	r8, r1
 5276 0008 1646     		mov	r6, r2
 5277 000a 1F46     		mov	r7, r3
 5278 000c BDF91850 		ldrsh	r5, [sp, #24]
 188:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5279              		.loc 1 188 5 is_stmt 1 view .LVU1844
 5280 0010 2C21     		movs	r1, #44
 5281              	.LVL693:
 188:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5282              		.loc 1 188 5 is_stmt 0 view .LVU1845
 5283 0012 FFF7FEFF 		bl	_lv_memset_00
 5284              	.LVL694:
 190:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_coord_t t;
 5285              		.loc 1 190 5 is_stmt 1 view .LVU1846
 190:lvgl/src/lv_draw/lv_draw_mask.c ****         lv_coord_t t;
 5286              		.loc 1 190 7 is_stmt 0 view .LVU1847
 5287 0016 AE42     		cmp	r6, r5
 5288 0018 05DC     		bgt	.L413
 5289 001a 2B46     		mov	r3, r5
 5290 001c 3546     		mov	r5, r6
 5291 001e 1E46     		mov	r6, r3
ARM GAS  D:\Temp\ccPmLtDk.s 			page 150


 5292 0020 3B46     		mov	r3, r7
 5293 0022 4746     		mov	r7, r8
 5294 0024 9846     		mov	r8, r3
 5295              	.L413:
 5296              	.LVL695:
 201:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.p1.y = p1y;
 5297              		.loc 1 201 5 is_stmt 1 view .LVU1848
 201:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.p1.y = p1y;
 5298              		.loc 1 201 21 is_stmt 0 view .LVU1849
 5299 0026 2781     		strh	r7, [r4, #8]	@ movhi
 202:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.p2.x = p2x;
 5300              		.loc 1 202 5 is_stmt 1 view .LVU1850
 202:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.p2.x = p2x;
 5301              		.loc 1 202 21 is_stmt 0 view .LVU1851
 5302 0028 6581     		strh	r5, [r4, #10]	@ movhi
 203:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.p2.y = p2y;
 5303              		.loc 1 203 5 is_stmt 1 view .LVU1852
 203:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.p2.y = p2y;
 5304              		.loc 1 203 21 is_stmt 0 view .LVU1853
 5305 002a A4F80C80 		strh	r8, [r4, #12]	@ movhi
 204:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.side = side;
 5306              		.loc 1 204 5 is_stmt 1 view .LVU1854
 204:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.side = side;
 5307              		.loc 1 204 21 is_stmt 0 view .LVU1855
 5308 002e E681     		strh	r6, [r4, #14]	@ movhi
 205:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5309              		.loc 1 205 5 is_stmt 1 view .LVU1856
 205:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5310              		.loc 1 205 21 is_stmt 0 view .LVU1857
 5311 0030 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 5312 0032 9DF81C20 		ldrb	r2, [sp, #28]	@ zero_extendqisi2
 5313 0036 62F30103 		bfi	r3, r2, #0, #2
 5314 003a 2374     		strb	r3, [r4, #16]
 207:lvgl/src/lv_draw/lv_draw_mask.c ****     param->origo.y = p1y;
 5315              		.loc 1 207 5 is_stmt 1 view .LVU1858
 207:lvgl/src/lv_draw/lv_draw_mask.c ****     param->origo.y = p1y;
 5316              		.loc 1 207 20 is_stmt 0 view .LVU1859
 5317 003c 6782     		strh	r7, [r4, #18]	@ movhi
 208:lvgl/src/lv_draw/lv_draw_mask.c ****     param->flat = (LV_MATH_ABS(p2x - p1x) > LV_MATH_ABS(p2y - p1y)) ? 1 : 0;
 5318              		.loc 1 208 5 is_stmt 1 view .LVU1860
 208:lvgl/src/lv_draw/lv_draw_mask.c ****     param->flat = (LV_MATH_ABS(p2x - p1x) > LV_MATH_ABS(p2y - p1y)) ? 1 : 0;
 5319              		.loc 1 208 20 is_stmt 0 view .LVU1861
 5320 003e A582     		strh	r5, [r4, #20]	@ movhi
 209:lvgl/src/lv_draw/lv_draw_mask.c ****     param->yx_steep = 0;
 5321              		.loc 1 209 5 is_stmt 1 view .LVU1862
 209:lvgl/src/lv_draw/lv_draw_mask.c ****     param->yx_steep = 0;
 5322              		.loc 1 209 20 is_stmt 0 view .LVU1863
 5323 0040 A8EB0707 		sub	r7, r8, r7
 5324              	.LVL696:
 209:lvgl/src/lv_draw/lv_draw_mask.c ****     param->yx_steep = 0;
 5325              		.loc 1 209 20 view .LVU1864
 5326 0044 87EAE772 		eor	r2, r7, r7, asr #31
 5327 0048 A2EBE772 		sub	r2, r2, r7, asr #31
 209:lvgl/src/lv_draw/lv_draw_mask.c ****     param->yx_steep = 0;
 5328              		.loc 1 209 45 view .LVU1865
 5329 004c 751B     		subs	r5, r6, r5
 5330              	.LVL697:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 151


 209:lvgl/src/lv_draw/lv_draw_mask.c ****     param->yx_steep = 0;
 5331              		.loc 1 209 45 view .LVU1866
 5332 004e 85EAE573 		eor	r3, r5, r5, asr #31
 5333 0052 A3EBE573 		sub	r3, r3, r5, asr #31
 209:lvgl/src/lv_draw/lv_draw_mask.c ****     param->yx_steep = 0;
 5334              		.loc 1 209 73 view .LVU1867
 5335 0056 9A42     		cmp	r2, r3
 5336 0058 D4BF     		ite	le
 5337 005a 0022     		movle	r2, #0
 5338 005c 0122     		movgt	r2, #1
 209:lvgl/src/lv_draw/lv_draw_mask.c ****     param->yx_steep = 0;
 5339              		.loc 1 209 17 view .LVU1868
 5340 005e 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 5341 0062 62F30003 		bfi	r3, r2, #0, #1
 5342 0066 84F82830 		strb	r3, [r4, #40]
 210:lvgl/src/lv_draw/lv_draw_mask.c ****     param->xy_steep = 0;
 5343              		.loc 1 210 5 is_stmt 1 view .LVU1869
 210:lvgl/src/lv_draw/lv_draw_mask.c ****     param->xy_steep = 0;
 5344              		.loc 1 210 21 is_stmt 0 view .LVU1870
 5345 006a 0022     		movs	r2, #0
 5346 006c E261     		str	r2, [r4, #28]
 211:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_line;
 5347              		.loc 1 211 5 is_stmt 1 view .LVU1871
 211:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_line;
 5348              		.loc 1 211 21 is_stmt 0 view .LVU1872
 5349 006e A261     		str	r2, [r4, #24]
 212:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_LINE;
 5350              		.loc 1 212 5 is_stmt 1 view .LVU1873
 212:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_LINE;
 5351              		.loc 1 212 19 is_stmt 0 view .LVU1874
 5352 0070 3849     		ldr	r1, .L431
 5353 0072 2160     		str	r1, [r4]
 213:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5354              		.loc 1 213 5 is_stmt 1 view .LVU1875
 213:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5355              		.loc 1 213 21 is_stmt 0 view .LVU1876
 5356 0074 2271     		strb	r2, [r4, #4]
 215:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t dy = p2y - p1y;
 5357              		.loc 1 215 5 is_stmt 1 view .LVU1877
 5358              	.LVL698:
 216:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5359              		.loc 1 216 5 view .LVU1878
 218:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Normalize the steep. Delta x should be relative to delta x = 1024*/
 5360              		.loc 1 218 5 view .LVU1879
 218:lvgl/src/lv_draw/lv_draw_mask.c ****         /*Normalize the steep. Delta x should be relative to delta x = 1024*/
 5361              		.loc 1 218 7 is_stmt 0 view .LVU1880
 5362 0076 13F0010F 		tst	r3, #1
 5363 007a 24D0     		beq	.L414
 5364              	.LBB235:
 220:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5365              		.loc 1 220 9 is_stmt 1 view .LVU1881
 222:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dx;  /*m is multiplier to normalize y (upscaled by 1024)*/
 5366              		.loc 1 222 9 view .LVU1882
 222:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dx;  /*m is multiplier to normalize y (upscaled by 1024)*/
 5367              		.loc 1 222 11 is_stmt 0 view .LVU1883
 5368 007c 3FB1     		cbz	r7, .L415
 223:lvgl/src/lv_draw/lv_draw_mask.c ****             param->yx_steep = (m * dy) >> 10;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 152


 5369              		.loc 1 223 13 is_stmt 1 view .LVU1884
 223:lvgl/src/lv_draw/lv_draw_mask.c ****             param->yx_steep = (m * dy) >> 10;
 5370              		.loc 1 223 15 is_stmt 0 view .LVU1885
 5371 007e 4FF48013 		mov	r3, #1048576
 5372 0082 93FBF7F3 		sdiv	r3, r3, r7
 5373              	.LVL699:
 224:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5374              		.loc 1 224 13 is_stmt 1 view .LVU1886
 224:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5375              		.loc 1 224 34 is_stmt 0 view .LVU1887
 5376 0086 03FB05F3 		mul	r3, r3, r5
 5377              	.LVL700:
 224:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5378              		.loc 1 224 40 view .LVU1888
 5379 008a 9B12     		asrs	r3, r3, #10
 224:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5380              		.loc 1 224 29 view .LVU1889
 5381 008c E361     		str	r3, [r4, #28]
 5382              	.LVL701:
 5383              	.L415:
 227:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dy;  /*m is multiplier to normalize x (upscaled by 1024)*/
 5384              		.loc 1 227 9 is_stmt 1 view .LVU1890
 227:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dy;  /*m is multiplier to normalize x (upscaled by 1024)*/
 5385              		.loc 1 227 11 is_stmt 0 view .LVU1891
 5386 008e 3DB1     		cbz	r5, .L416
 228:lvgl/src/lv_draw/lv_draw_mask.c ****             param->xy_steep = (m * dx) >> 10;
 5387              		.loc 1 228 13 is_stmt 1 view .LVU1892
 228:lvgl/src/lv_draw/lv_draw_mask.c ****             param->xy_steep = (m * dx) >> 10;
 5388              		.loc 1 228 15 is_stmt 0 view .LVU1893
 5389 0090 4FF48016 		mov	r6, #1048576
 5390              	.LVL702:
 228:lvgl/src/lv_draw/lv_draw_mask.c ****             param->xy_steep = (m * dx) >> 10;
 5391              		.loc 1 228 15 view .LVU1894
 5392 0094 96FBF5F5 		sdiv	r5, r6, r5
 5393              	.LVL703:
 229:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5394              		.loc 1 229 13 is_stmt 1 view .LVU1895
 229:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5395              		.loc 1 229 34 is_stmt 0 view .LVU1896
 5396 0098 05FB07F7 		mul	r7, r5, r7
 5397              	.LVL704:
 229:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5398              		.loc 1 229 40 view .LVU1897
 5399 009c BF12     		asrs	r7, r7, #10
 229:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5400              		.loc 1 229 29 view .LVU1898
 5401 009e A761     		str	r7, [r4, #24]
 5402              	.LVL705:
 5403              	.L416:
 231:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5404              		.loc 1 231 9 is_stmt 1 view .LVU1899
 231:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5405              		.loc 1 231 29 is_stmt 0 view .LVU1900
 5406 00a0 E369     		ldr	r3, [r4, #28]
 231:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5407              		.loc 1 231 22 view .LVU1901
 5408 00a2 2362     		str	r3, [r4, #32]
ARM GAS  D:\Temp\ccPmLtDk.s 			page 153


 5409              	.LVL706:
 5410              	.L417:
 231:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5411              		.loc 1 231 22 view .LVU1902
 5412              	.LBE235:
 249:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT) param->inv = 1;
 5413              		.loc 1 249 5 is_stmt 1 view .LVU1903
 249:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT) param->inv = 1;
 5414              		.loc 1 249 24 is_stmt 0 view .LVU1904
 5415 00a4 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 249:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT) param->inv = 1;
 5416              		.loc 1 249 7 view .LVU1905
 5417 00a6 13F00303 		ands	r3, r3, #3
 5418 00aa 21D1     		bne	.L420
 249:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT) param->inv = 1;
 5419              		.loc 1 249 56 is_stmt 1 discriminator 1 view .LVU1906
 249:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_RIGHT) param->inv = 1;
 5420              		.loc 1 249 67 is_stmt 0 discriminator 1 view .LVU1907
 5421 00ac 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 5422 00b0 6FF34103 		bfc	r3, #1, #1
 5423 00b4 84F82830 		strb	r3, [r4, #40]
 5424              	.L421:
 260:lvgl/src/lv_draw/lv_draw_mask.c ****     if(param->steep < 0) param->spx = -param->spx;
 5425              		.loc 1 260 5 is_stmt 1 view .LVU1908
 260:lvgl/src/lv_draw/lv_draw_mask.c ****     if(param->steep < 0) param->spx = -param->spx;
 5426              		.loc 1 260 23 is_stmt 0 view .LVU1909
 5427 00b8 226A     		ldr	r2, [r4, #32]
 260:lvgl/src/lv_draw/lv_draw_mask.c ****     if(param->steep < 0) param->spx = -param->spx;
 5428              		.loc 1 260 31 view .LVU1910
 5429 00ba 9310     		asrs	r3, r2, #2
 260:lvgl/src/lv_draw/lv_draw_mask.c ****     if(param->steep < 0) param->spx = -param->spx;
 5430              		.loc 1 260 16 view .LVU1911
 5431 00bc 6362     		str	r3, [r4, #36]
 261:lvgl/src/lv_draw/lv_draw_mask.c **** }
 5432              		.loc 1 261 5 is_stmt 1 view .LVU1912
 261:lvgl/src/lv_draw/lv_draw_mask.c **** }
 5433              		.loc 1 261 7 is_stmt 0 view .LVU1913
 5434 00be 002A     		cmp	r2, #0
 5435 00c0 45DB     		blt	.L428
 5436              	.L412:
 262:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5437              		.loc 1 262 1 view .LVU1914
 5438 00c2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5439              	.LVL707:
 5440              	.L414:
 5441              	.LBB236:
 235:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5442              		.loc 1 235 9 is_stmt 1 view .LVU1915
 237:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dy;  /*m is multiplier to normalize x (upscaled by 1024)*/
 5443              		.loc 1 237 9 view .LVU1916
 237:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dy;  /*m is multiplier to normalize x (upscaled by 1024)*/
 5444              		.loc 1 237 11 is_stmt 0 view .LVU1917
 5445 00c6 3DB1     		cbz	r5, .L418
 238:lvgl/src/lv_draw/lv_draw_mask.c ****             param->xy_steep = (m * dx) >> 10;
 5446              		.loc 1 238 13 is_stmt 1 view .LVU1918
 238:lvgl/src/lv_draw/lv_draw_mask.c ****             param->xy_steep = (m * dx) >> 10;
 5447              		.loc 1 238 15 is_stmt 0 view .LVU1919
ARM GAS  D:\Temp\ccPmLtDk.s 			page 154


 5448 00c8 4FF48013 		mov	r3, #1048576
 5449 00cc 93FBF5F3 		sdiv	r3, r3, r5
 5450              	.LVL708:
 239:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5451              		.loc 1 239 13 is_stmt 1 view .LVU1920
 239:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5452              		.loc 1 239 34 is_stmt 0 view .LVU1921
 5453 00d0 03FB07F3 		mul	r3, r3, r7
 5454              	.LVL709:
 239:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5455              		.loc 1 239 40 view .LVU1922
 5456 00d4 9B12     		asrs	r3, r3, #10
 239:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5457              		.loc 1 239 29 view .LVU1923
 5458 00d6 A361     		str	r3, [r4, #24]
 5459              	.LVL710:
 5460              	.L418:
 242:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dx;  /*m is multiplier to normalize x (upscaled by 1024)*/
 5461              		.loc 1 242 9 is_stmt 1 view .LVU1924
 242:lvgl/src/lv_draw/lv_draw_mask.c ****             m = (1 << 20) / dx;  /*m is multiplier to normalize x (upscaled by 1024)*/
 5462              		.loc 1 242 11 is_stmt 0 view .LVU1925
 5463 00d8 3FB1     		cbz	r7, .L419
 243:lvgl/src/lv_draw/lv_draw_mask.c ****             param->yx_steep = (m * dy) >> 10;
 5464              		.loc 1 243 13 is_stmt 1 view .LVU1926
 243:lvgl/src/lv_draw/lv_draw_mask.c ****             param->yx_steep = (m * dy) >> 10;
 5465              		.loc 1 243 15 is_stmt 0 view .LVU1927
 5466 00da 4FF48018 		mov	r8, #1048576
 5467              	.LVL711:
 243:lvgl/src/lv_draw/lv_draw_mask.c ****             param->yx_steep = (m * dy) >> 10;
 5468              		.loc 1 243 15 view .LVU1928
 5469 00de 98FBF7F7 		sdiv	r7, r8, r7
 5470              	.LVL712:
 244:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5471              		.loc 1 244 13 is_stmt 1 view .LVU1929
 244:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5472              		.loc 1 244 34 is_stmt 0 view .LVU1930
 5473 00e2 07FB05F5 		mul	r5, r7, r5
 5474              	.LVL713:
 244:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5475              		.loc 1 244 40 view .LVU1931
 5476 00e6 AD12     		asrs	r5, r5, #10
 244:lvgl/src/lv_draw/lv_draw_mask.c ****         }
 5477              		.loc 1 244 29 view .LVU1932
 5478 00e8 E561     		str	r5, [r4, #28]
 5479              	.LVL714:
 5480              	.L419:
 246:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5481              		.loc 1 246 9 is_stmt 1 view .LVU1933
 246:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5482              		.loc 1 246 29 is_stmt 0 view .LVU1934
 5483 00ea A369     		ldr	r3, [r4, #24]
 246:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5484              		.loc 1 246 22 view .LVU1935
 5485 00ec 2362     		str	r3, [r4, #32]
 5486 00ee D9E7     		b	.L417
 5487              	.LVL715:
 5488              	.L420:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 155


 246:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5489              		.loc 1 246 22 view .LVU1936
 5490              	.LBE236:
 250:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_TOP) {
 5491              		.loc 1 250 10 is_stmt 1 view .LVU1937
 250:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_TOP) {
 5492              		.loc 1 250 12 is_stmt 0 view .LVU1938
 5493 00f0 012B     		cmp	r3, #1
 5494 00f2 0DD0     		beq	.L429
 251:lvgl/src/lv_draw/lv_draw_mask.c ****         if(param->steep > 0) param->inv = 1;
 5495              		.loc 1 251 10 is_stmt 1 view .LVU1939
 251:lvgl/src/lv_draw/lv_draw_mask.c ****         if(param->steep > 0) param->inv = 1;
 5496              		.loc 1 251 12 is_stmt 0 view .LVU1940
 5497 00f4 022B     		cmp	r3, #2
 5498 00f6 12D0     		beq	.L430
 255:lvgl/src/lv_draw/lv_draw_mask.c ****         if(param->steep > 0) param->inv = 0;
 5499              		.loc 1 255 10 is_stmt 1 view .LVU1941
 255:lvgl/src/lv_draw/lv_draw_mask.c ****         if(param->steep > 0) param->inv = 0;
 5500              		.loc 1 255 12 is_stmt 0 view .LVU1942
 5501 00f8 032B     		cmp	r3, #3
 5502 00fa DDD1     		bne	.L421
 256:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 1;
 5503              		.loc 1 256 9 is_stmt 1 view .LVU1943
 256:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 1;
 5504              		.loc 1 256 17 is_stmt 0 view .LVU1944
 5505 00fc 236A     		ldr	r3, [r4, #32]
 256:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 1;
 5506              		.loc 1 256 11 view .LVU1945
 5507 00fe 002B     		cmp	r3, #0
 5508 0100 1EDD     		ble	.L425
 256:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 1;
 5509              		.loc 1 256 30 is_stmt 1 discriminator 1 view .LVU1946
 256:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 1;
 5510              		.loc 1 256 41 is_stmt 0 discriminator 1 view .LVU1947
 5511 0102 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 5512 0106 6FF34103 		bfc	r3, #1, #1
 5513 010a 84F82830 		strb	r3, [r4, #40]
 5514 010e D3E7     		b	.L421
 5515              	.L429:
 250:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_TOP) {
 5516              		.loc 1 250 62 is_stmt 1 discriminator 1 view .LVU1948
 250:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(param->cfg.side == LV_DRAW_MASK_LINE_SIDE_TOP) {
 5517              		.loc 1 250 73 is_stmt 0 discriminator 1 view .LVU1949
 5518 0110 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 5519 0114 43F00203 		orr	r3, r3, #2
 5520 0118 84F82830 		strb	r3, [r4, #40]
 5521 011c CCE7     		b	.L421
 5522              	.L430:
 252:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 0;
 5523              		.loc 1 252 9 is_stmt 1 view .LVU1950
 252:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 0;
 5524              		.loc 1 252 17 is_stmt 0 view .LVU1951
 5525 011e 236A     		ldr	r3, [r4, #32]
 252:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 0;
 5526              		.loc 1 252 11 view .LVU1952
 5527 0120 002B     		cmp	r3, #0
 5528 0122 06DD     		ble	.L424
ARM GAS  D:\Temp\ccPmLtDk.s 			page 156


 252:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 0;
 5529              		.loc 1 252 30 is_stmt 1 discriminator 1 view .LVU1953
 252:lvgl/src/lv_draw/lv_draw_mask.c ****         else param->inv = 0;
 5530              		.loc 1 252 41 is_stmt 0 discriminator 1 view .LVU1954
 5531 0124 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 5532 0128 43F00203 		orr	r3, r3, #2
 5533 012c 84F82830 		strb	r3, [r4, #40]
 5534 0130 C2E7     		b	.L421
 5535              	.L424:
 253:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5536              		.loc 1 253 14 is_stmt 1 view .LVU1955
 253:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5537              		.loc 1 253 25 is_stmt 0 view .LVU1956
 5538 0132 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 5539 0136 6FF34103 		bfc	r3, #1, #1
 5540 013a 84F82830 		strb	r3, [r4, #40]
 5541 013e BBE7     		b	.L421
 5542              	.L425:
 257:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5543              		.loc 1 257 14 is_stmt 1 view .LVU1957
 257:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5544              		.loc 1 257 25 is_stmt 0 view .LVU1958
 5545 0140 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 5546 0144 43F00203 		orr	r3, r3, #2
 5547 0148 84F82830 		strb	r3, [r4, #40]
 5548 014c B4E7     		b	.L421
 5549              	.L428:
 261:lvgl/src/lv_draw/lv_draw_mask.c **** }
 5550              		.loc 1 261 26 is_stmt 1 discriminator 1 view .LVU1959
 261:lvgl/src/lv_draw/lv_draw_mask.c **** }
 5551              		.loc 1 261 39 is_stmt 0 discriminator 1 view .LVU1960
 5552 014e 5B42     		rsbs	r3, r3, #0
 261:lvgl/src/lv_draw/lv_draw_mask.c **** }
 5553              		.loc 1 261 37 discriminator 1 view .LVU1961
 5554 0150 6362     		str	r3, [r4, #36]
 262:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5555              		.loc 1 262 1 discriminator 1 view .LVU1962
 5556 0152 B6E7     		b	.L412
 5557              	.L432:
 5558              		.align	2
 5559              	.L431:
 5560 0154 00000000 		.word	lv_draw_mask_line
 5561              		.cfi_endproc
 5562              	.LFE172:
 5564              		.section	.text.lv_draw_mask_line_angle_init,"ax",%progbits
 5565              		.align	1
 5566              		.global	lv_draw_mask_line_angle_init
 5567              		.syntax unified
 5568              		.thumb
 5569              		.thumb_func
 5570              		.fpu fpv4-sp-d16
 5572              	lv_draw_mask_line_angle_init:
 5573              	.LVL716:
 5574              	.LFB173:
 276:lvgl/src/lv_draw/lv_draw_mask.c ****     /* Find an optimal degree.
 5575              		.loc 1 276 1 is_stmt 1 view -0
 5576              		.cfi_startproc
ARM GAS  D:\Temp\ccPmLtDk.s 			page 157


 5577              		@ args = 4, pretend = 0, frame = 0
 5578              		@ frame_needed = 0, uses_anonymous_args = 0
 276:lvgl/src/lv_draw/lv_draw_mask.c ****     /* Find an optimal degree.
 5579              		.loc 1 276 1 is_stmt 0 view .LVU1964
 5580 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5581              	.LCFI27:
 5582              		.cfi_def_cfa_offset 24
 5583              		.cfi_offset 4, -24
 5584              		.cfi_offset 5, -20
 5585              		.cfi_offset 6, -16
 5586              		.cfi_offset 7, -12
 5587              		.cfi_offset 8, -8
 5588              		.cfi_offset 14, -4
 5589 0004 82B0     		sub	sp, sp, #8
 5590              	.LCFI28:
 5591              		.cfi_def_cfa_offset 32
 5592 0006 0746     		mov	r7, r0
 5593 0008 0D46     		mov	r5, r1
 5594 000a 1646     		mov	r6, r2
 5595 000c 1C46     		mov	r4, r3
 281:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5596              		.loc 1 281 5 is_stmt 1 view .LVU1965
 281:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5597              		.loc 1 281 7 is_stmt 0 view .LVU1966
 5598 000e B42B     		cmp	r3, #180
 5599 0010 02DD     		ble	.L434
 281:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5600              		.loc 1 281 21 is_stmt 1 discriminator 1 view .LVU1967
 281:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5601              		.loc 1 281 27 is_stmt 0 discriminator 1 view .LVU1968
 5602 0012 A3F1B404 		sub	r4, r3, #180
 5603 0016 24B2     		sxth	r4, r4
 5604              	.LVL717:
 5605              	.L434:
 283:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t p2y;
 5606              		.loc 1 283 5 is_stmt 1 view .LVU1969
 284:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5607              		.loc 1 284 5 view .LVU1970
 286:lvgl/src/lv_draw/lv_draw_mask.c ****     p2y = (_lv_trigo_sin(angle) >> 5) + py;
 5608              		.loc 1 286 5 view .LVU1971
 286:lvgl/src/lv_draw/lv_draw_mask.c ****     p2y = (_lv_trigo_sin(angle) >> 5) + py;
 5609              		.loc 1 286 32 is_stmt 0 view .LVU1972
 5610 0018 04F15A00 		add	r0, r4, #90
 5611              	.LVL718:
 286:lvgl/src/lv_draw/lv_draw_mask.c ****     p2y = (_lv_trigo_sin(angle) >> 5) + py;
 5612              		.loc 1 286 12 view .LVU1973
 5613 001c 00B2     		sxth	r0, r0
 5614 001e FFF7FEFF 		bl	_lv_trigo_sin
 5615              	.LVL719:
 286:lvgl/src/lv_draw/lv_draw_mask.c ****     p2y = (_lv_trigo_sin(angle) >> 5) + py;
 5616              		.loc 1 286 38 view .LVU1974
 5617 0022 40F34F18 		sbfx	r8, r0, #5, #16
 5618              	.LVL720:
 287:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5619              		.loc 1 287 5 is_stmt 1 view .LVU1975
 287:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5620              		.loc 1 287 12 is_stmt 0 view .LVU1976
ARM GAS  D:\Temp\ccPmLtDk.s 			page 158


 5621 0026 2046     		mov	r0, r4
 5622 0028 FFF7FEFF 		bl	_lv_trigo_sin
 5623              	.LVL721:
 287:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5624              		.loc 1 287 33 view .LVU1977
 5625 002c 40F34F10 		sbfx	r0, r0, #5, #16
 5626              	.LVL722:
 289:lvgl/src/lv_draw/lv_draw_mask.c **** }
 5627              		.loc 1 289 5 is_stmt 1 view .LVU1978
 5628 0030 08EB0503 		add	r3, r8, r5
 5629 0034 9DF82020 		ldrb	r2, [sp, #32]	@ zero_extendqisi2
 5630 0038 0192     		str	r2, [sp, #4]
 5631 003a 3044     		add	r0, r0, r6
 5632              	.LVL723:
 289:lvgl/src/lv_draw/lv_draw_mask.c **** }
 5633              		.loc 1 289 5 is_stmt 0 view .LVU1979
 5634 003c 00B2     		sxth	r0, r0
 5635 003e 0090     		str	r0, [sp]
 5636 0040 1BB2     		sxth	r3, r3
 5637 0042 3246     		mov	r2, r6
 5638 0044 2946     		mov	r1, r5
 5639 0046 3846     		mov	r0, r7
 5640 0048 FFF7FEFF 		bl	lv_draw_mask_line_points_init
 5641              	.LVL724:
 290:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5642              		.loc 1 290 1 view .LVU1980
 5643 004c 02B0     		add	sp, sp, #8
 5644              	.LCFI29:
 5645              		.cfi_def_cfa_offset 24
 5646              		@ sp needed
 5647 004e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 290:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5648              		.loc 1 290 1 view .LVU1981
 5649              		.cfi_endproc
 5650              	.LFE173:
 5652              		.section	.text.lv_draw_mask_angle_init,"ax",%progbits
 5653              		.align	1
 5654              		.global	lv_draw_mask_angle_init
 5655              		.syntax unified
 5656              		.thumb
 5657              		.thumb_func
 5658              		.fpu fpv4-sp-d16
 5660              	lv_draw_mask_angle_init:
 5661              	.LVL725:
 5662              	.LFB174:
 302:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_line_side_t start_side;
 5663              		.loc 1 302 1 is_stmt 1 view -0
 5664              		.cfi_startproc
 5665              		@ args = 4, pretend = 0, frame = 0
 5666              		@ frame_needed = 0, uses_anonymous_args = 0
 302:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_line_side_t start_side;
 5667              		.loc 1 302 1 is_stmt 0 view .LVU1983
 5668 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5669              	.LCFI30:
 5670              		.cfi_def_cfa_offset 24
 5671              		.cfi_offset 4, -24
 5672              		.cfi_offset 5, -20
ARM GAS  D:\Temp\ccPmLtDk.s 			page 159


 5673              		.cfi_offset 6, -16
 5674              		.cfi_offset 7, -12
 5675              		.cfi_offset 8, -8
 5676              		.cfi_offset 14, -4
 5677 0004 82B0     		sub	sp, sp, #8
 5678              	.LCFI31:
 5679              		.cfi_def_cfa_offset 32
 5680 0006 0546     		mov	r5, r0
 5681 0008 0E46     		mov	r6, r1
 5682 000a 1746     		mov	r7, r2
 5683 000c BDF92040 		ldrsh	r4, [sp, #32]
 303:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_line_side_t end_side;
 5684              		.loc 1 303 5 is_stmt 1 view .LVU1984
 304:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5685              		.loc 1 304 5 view .LVU1985
 307:lvgl/src/lv_draw/lv_draw_mask.c ****         start_angle = 0;
 5686              		.loc 1 307 5 view .LVU1986
 307:lvgl/src/lv_draw/lv_draw_mask.c ****         start_angle = 0;
 5687              		.loc 1 307 7 is_stmt 0 view .LVU1987
 5688 0010 002B     		cmp	r3, #0
 5689              	.LVL726:
 307:lvgl/src/lv_draw/lv_draw_mask.c ****         start_angle = 0;
 5690              		.loc 1 307 7 view .LVU1988
 5691 0012 05DB     		blt	.L445
 309:lvgl/src/lv_draw/lv_draw_mask.c ****         start_angle = 359;
 5692              		.loc 1 309 10 is_stmt 1 view .LVU1989
 309:lvgl/src/lv_draw/lv_draw_mask.c ****         start_angle = 359;
 5693              		.loc 1 309 12 is_stmt 0 view .LVU1990
 5694 0014 B3F5B47F 		cmp	r3, #360
 5695 0018 03DB     		blt	.L437
 310:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5696              		.loc 1 310 21 view .LVU1991
 5697 001a 40F26713 		movw	r3, #359
 5698 001e 00E0     		b	.L437
 5699              	.L445:
 308:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(start_angle > 359)
 5700              		.loc 1 308 21 view .LVU1992
 5701 0020 0023     		movs	r3, #0
 5702              	.L437:
 5703              	.LVL727:
 312:lvgl/src/lv_draw/lv_draw_mask.c ****         end_angle = 0;
 5704              		.loc 1 312 5 is_stmt 1 view .LVU1993
 312:lvgl/src/lv_draw/lv_draw_mask.c ****         end_angle = 0;
 5705              		.loc 1 312 7 is_stmt 0 view .LVU1994
 5706 0022 002C     		cmp	r4, #0
 5707 0024 05DB     		blt	.L447
 314:lvgl/src/lv_draw/lv_draw_mask.c ****         end_angle = 359;
 5708              		.loc 1 314 10 is_stmt 1 view .LVU1995
 314:lvgl/src/lv_draw/lv_draw_mask.c ****         end_angle = 359;
 5709              		.loc 1 314 12 is_stmt 0 view .LVU1996
 5710 0026 B4F5B47F 		cmp	r4, #360
 5711 002a 03DB     		blt	.L438
 315:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5712              		.loc 1 315 19 view .LVU1997
 5713 002c 40F26714 		movw	r4, #359
 5714 0030 00E0     		b	.L438
 5715              	.L447:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 160


 313:lvgl/src/lv_draw/lv_draw_mask.c ****     else if(end_angle > 359)
 5716              		.loc 1 313 19 view .LVU1998
 5717 0032 0024     		movs	r4, #0
 5718              	.L438:
 5719              	.LVL728:
 317:lvgl/src/lv_draw/lv_draw_mask.c ****         param->delta_deg = 360 - start_angle + end_angle;
 5720              		.loc 1 317 5 is_stmt 1 view .LVU1999
 317:lvgl/src/lv_draw/lv_draw_mask.c ****         param->delta_deg = 360 - start_angle + end_angle;
 5721              		.loc 1 317 7 is_stmt 0 view .LVU2000
 5722 0034 A342     		cmp	r3, r4
 5723 0036 15DD     		ble	.L439
 318:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5724              		.loc 1 318 9 is_stmt 1 view .LVU2001
 318:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5725              		.loc 1 318 46 is_stmt 0 view .LVU2002
 5726 0038 E21A     		subs	r2, r4, r3
 5727              	.LVL729:
 318:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5728              		.loc 1 318 46 view .LVU2003
 5729 003a 02F5B472 		add	r2, r2, #360
 318:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5730              		.loc 1 318 26 view .LVU2004
 5731 003e A5F86820 		strh	r2, [r5, #104]	@ movhi
 5732              	.L440:
 324:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.end_angle = end_angle;
 5733              		.loc 1 324 5 is_stmt 1 view .LVU2005
 324:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.end_angle = end_angle;
 5734              		.loc 1 324 28 is_stmt 0 view .LVU2006
 5735 0042 AB81     		strh	r3, [r5, #12]	@ movhi
 325:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.vertex_p.x = vertex_x;
 5736              		.loc 1 325 5 is_stmt 1 view .LVU2007
 325:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.vertex_p.x = vertex_x;
 5737              		.loc 1 325 26 is_stmt 0 view .LVU2008
 5738 0044 EC81     		strh	r4, [r5, #14]	@ movhi
 326:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.vertex_p.y = vertex_y;
 5739              		.loc 1 326 5 is_stmt 1 view .LVU2009
 326:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.vertex_p.y = vertex_y;
 5740              		.loc 1 326 27 is_stmt 0 view .LVU2010
 5741 0046 2E81     		strh	r6, [r5, #8]	@ movhi
 327:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_angle;
 5742              		.loc 1 327 5 is_stmt 1 view .LVU2011
 327:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_angle;
 5743              		.loc 1 327 27 is_stmt 0 view .LVU2012
 5744 0048 6F81     		strh	r7, [r5, #10]	@ movhi
 328:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_ANGLE;
 5745              		.loc 1 328 5 is_stmt 1 view .LVU2013
 328:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_ANGLE;
 5746              		.loc 1 328 19 is_stmt 0 view .LVU2014
 5747 004a 204A     		ldr	r2, .L456
 5748 004c 2A60     		str	r2, [r5]
 329:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5749              		.loc 1 329 5 is_stmt 1 view .LVU2015
 329:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5750              		.loc 1 329 21 is_stmt 0 view .LVU2016
 5751 004e 0122     		movs	r2, #1
 5752 0050 2A71     		strb	r2, [r5, #4]
 331:lvgl/src/lv_draw/lv_draw_mask.c ****         start_side = LV_DRAW_MASK_LINE_SIDE_LEFT;
ARM GAS  D:\Temp\ccPmLtDk.s 			page 161


 5753              		.loc 1 331 5 is_stmt 1 view .LVU2017
 331:lvgl/src/lv_draw/lv_draw_mask.c ****         start_side = LV_DRAW_MASK_LINE_SIDE_LEFT;
 5754              		.loc 1 331 25 is_stmt 0 view .LVU2018
 5755 0052 9AB2     		uxth	r2, r3
 331:lvgl/src/lv_draw/lv_draw_mask.c ****         start_side = LV_DRAW_MASK_LINE_SIDE_LEFT;
 5756              		.loc 1 331 7 view .LVU2019
 5757 0054 B32A     		cmp	r2, #179
 5758 0056 12D9     		bls	.L449
 334:lvgl/src/lv_draw/lv_draw_mask.c ****         start_side = LV_DRAW_MASK_LINE_SIDE_RIGHT;
 5759              		.loc 1 334 10 is_stmt 1 view .LVU2020
 334:lvgl/src/lv_draw/lv_draw_mask.c ****         start_side = LV_DRAW_MASK_LINE_SIDE_RIGHT;
 5760              		.loc 1 334 32 is_stmt 0 view .LVU2021
 5761 0058 B43A     		subs	r2, r2, #180
 5762 005a 92B2     		uxth	r2, r2
 334:lvgl/src/lv_draw/lv_draw_mask.c ****         start_side = LV_DRAW_MASK_LINE_SIDE_RIGHT;
 5763              		.loc 1 334 12 view .LVU2022
 5764 005c B32A     		cmp	r2, #179
 5765 005e 08D8     		bhi	.L454
 335:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5766              		.loc 1 335 20 view .LVU2023
 5767 0060 0121     		movs	r1, #1
 5768              	.LVL730:
 335:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5769              		.loc 1 335 20 view .LVU2024
 5770 0062 0DE0     		b	.L441
 5771              	.LVL731:
 5772              	.L439:
 321:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5773              		.loc 1 321 9 is_stmt 1 view .LVU2025
 321:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5774              		.loc 1 321 28 is_stmt 0 view .LVU2026
 5775 0064 E21A     		subs	r2, r4, r3
 5776              	.LVL732:
 321:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5777              		.loc 1 321 28 view .LVU2027
 5778 0066 002A     		cmp	r2, #0
 5779 0068 B8BF     		it	lt
 5780 006a 5242     		rsblt	r2, r2, #0
 321:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5781              		.loc 1 321 26 view .LVU2028
 5782 006c A5F86820 		strh	r2, [r5, #104]	@ movhi
 5783 0070 E7E7     		b	.L440
 5784              	.L454:
 338:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5785              		.loc 1 338 9 is_stmt 1 discriminator 1 view .LVU2029
 338:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5786              		.loc 1 338 9 discriminator 1 view .LVU2030
 338:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5787              		.loc 1 338 9 discriminator 1 view .LVU2031
 338:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5788              		.loc 1 338 9 discriminator 1 view .LVU2032
 5789 0072 1A46     		mov	r2, r3
 5790 0074 0023     		movs	r3, #0
 5791              	.LVL733:
 338:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5792              		.loc 1 338 9 is_stmt 0 discriminator 1 view .LVU2033
 5793 0076 1648     		ldr	r0, .L456+4
ARM GAS  D:\Temp\ccPmLtDk.s 			page 162


 5794              	.LVL734:
 338:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5795              		.loc 1 338 9 discriminator 1 view .LVU2034
 5796 0078 FFF7FEFF 		bl	lv_debug_log_error
 5797              	.LVL735:
 5798              	.L442:
 338:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5799              		.loc 1 338 9 is_stmt 1 discriminator 1 view .LVU2035
 338:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5800              		.loc 1 338 9 discriminator 1 view .LVU2036
 5801 007c FEE7     		b	.L442
 5802              	.LVL736:
 5803              	.L449:
 332:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5804              		.loc 1 332 20 is_stmt 0 view .LVU2037
 5805 007e 0021     		movs	r1, #0
 5806              	.LVL737:
 5807              	.L441:
 342:lvgl/src/lv_draw/lv_draw_mask.c ****         end_side = LV_DRAW_MASK_LINE_SIDE_RIGHT;
 5808              		.loc 1 342 5 is_stmt 1 view .LVU2038
 342:lvgl/src/lv_draw/lv_draw_mask.c ****         end_side = LV_DRAW_MASK_LINE_SIDE_RIGHT;
 5809              		.loc 1 342 23 is_stmt 0 view .LVU2039
 5810 0080 A2B2     		uxth	r2, r4
 342:lvgl/src/lv_draw/lv_draw_mask.c ****         end_side = LV_DRAW_MASK_LINE_SIDE_RIGHT;
 5811              		.loc 1 342 7 view .LVU2040
 5812 0082 B32A     		cmp	r2, #179
 5813 0084 1ED9     		bls	.L451
 345:lvgl/src/lv_draw/lv_draw_mask.c ****         end_side = LV_DRAW_MASK_LINE_SIDE_LEFT;
 5814              		.loc 1 345 10 is_stmt 1 view .LVU2041
 345:lvgl/src/lv_draw/lv_draw_mask.c ****         end_side = LV_DRAW_MASK_LINE_SIDE_LEFT;
 5815              		.loc 1 345 30 is_stmt 0 view .LVU2042
 5816 0086 B43A     		subs	r2, r2, #180
 5817 0088 92B2     		uxth	r2, r2
 345:lvgl/src/lv_draw/lv_draw_mask.c ****         end_side = LV_DRAW_MASK_LINE_SIDE_LEFT;
 5818              		.loc 1 345 12 view .LVU2043
 5819 008a B32A     		cmp	r2, #179
 5820 008c 14D8     		bhi	.L455
 346:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5821              		.loc 1 346 18 view .LVU2044
 5822 008e 4FF00008 		mov	r8, #0
 5823              	.L443:
 5824              	.LVL738:
 353:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_line_angle_init(&param->end_line, vertex_x, vertex_y, end_angle, end_side);
 5825              		.loc 1 353 5 is_stmt 1 view .LVU2045
 5826 0092 0091     		str	r1, [sp]
 5827 0094 3A46     		mov	r2, r7
 5828 0096 3146     		mov	r1, r6
 5829              	.LVL739:
 353:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_line_angle_init(&param->end_line, vertex_x, vertex_y, end_angle, end_side);
 5830              		.loc 1 353 5 is_stmt 0 view .LVU2046
 5831 0098 05F11000 		add	r0, r5, #16
 5832              	.LVL740:
 353:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_draw_mask_line_angle_init(&param->end_line, vertex_x, vertex_y, end_angle, end_side);
 5833              		.loc 1 353 5 view .LVU2047
 5834 009c FFF7FEFF 		bl	lv_draw_mask_line_angle_init
 5835              	.LVL741:
 354:lvgl/src/lv_draw/lv_draw_mask.c **** }
ARM GAS  D:\Temp\ccPmLtDk.s 			page 163


 5836              		.loc 1 354 5 is_stmt 1 view .LVU2048
 5837 00a0 CDF80080 		str	r8, [sp]
 5838 00a4 2346     		mov	r3, r4
 5839 00a6 3A46     		mov	r2, r7
 5840 00a8 3146     		mov	r1, r6
 5841 00aa 05F13C00 		add	r0, r5, #60
 5842 00ae FFF7FEFF 		bl	lv_draw_mask_line_angle_init
 5843              	.LVL742:
 355:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5844              		.loc 1 355 1 is_stmt 0 view .LVU2049
 5845 00b2 02B0     		add	sp, sp, #8
 5846              	.LCFI32:
 5847              		.cfi_remember_state
 5848              		.cfi_def_cfa_offset 24
 5849              		@ sp needed
 5850 00b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5851              	.LVL743:
 5852              	.L455:
 5853              	.LCFI33:
 5854              		.cfi_restore_state
 349:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5855              		.loc 1 349 9 is_stmt 1 discriminator 1 view .LVU2050
 349:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5856              		.loc 1 349 9 discriminator 1 view .LVU2051
 349:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5857              		.loc 1 349 9 discriminator 1 view .LVU2052
 349:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5858              		.loc 1 349 9 discriminator 1 view .LVU2053
 5859 00b8 2246     		mov	r2, r4
 5860 00ba 0023     		movs	r3, #0
 5861              	.LVL744:
 349:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5862              		.loc 1 349 9 is_stmt 0 discriminator 1 view .LVU2054
 5863 00bc 0548     		ldr	r0, .L456+8
 5864              	.LVL745:
 349:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5865              		.loc 1 349 9 discriminator 1 view .LVU2055
 5866 00be FFF7FEFF 		bl	lv_debug_log_error
 5867              	.LVL746:
 5868              	.L444:
 349:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5869              		.loc 1 349 9 is_stmt 1 discriminator 2 view .LVU2056
 349:lvgl/src/lv_draw/lv_draw_mask.c ****         return;
 5870              		.loc 1 349 9 discriminator 2 view .LVU2057
 5871 00c2 FEE7     		b	.L444
 5872              	.LVL747:
 5873              	.L451:
 343:lvgl/src/lv_draw/lv_draw_mask.c ****     }
 5874              		.loc 1 343 18 is_stmt 0 view .LVU2058
 5875 00c4 4FF00108 		mov	r8, #1
 5876 00c8 E3E7     		b	.L443
 5877              	.L457:
 5878 00ca 00BF     		.align	2
 5879              	.L456:
 5880 00cc 00000000 		.word	lv_draw_mask_angle
 5881 00d0 00000000 		.word	.LC0
 5882 00d4 18000000 		.word	.LC1
ARM GAS  D:\Temp\ccPmLtDk.s 			page 164


 5883              		.cfi_endproc
 5884              	.LFE174:
 5886              		.section	.text.lv_draw_mask_radius_init,"ax",%progbits
 5887              		.align	1
 5888              		.global	lv_draw_mask_radius_init
 5889              		.syntax unified
 5890              		.thumb
 5891              		.thumb_func
 5892              		.fpu fpv4-sp-d16
 5894              	lv_draw_mask_radius_init:
 5895              	.LVL748:
 5896              	.LFB175:
 365:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_coord_t w = lv_area_get_width(rect);
 5897              		.loc 1 365 1 is_stmt 1 view -0
 5898              		.cfi_startproc
 5899              		@ args = 0, pretend = 0, frame = 0
 5900              		@ frame_needed = 0, uses_anonymous_args = 0
 5901              		@ link register save eliminated.
 365:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_coord_t w = lv_area_get_width(rect);
 5902              		.loc 1 365 1 is_stmt 0 view .LVU2060
 5903 0000 70B4     		push	{r4, r5, r6}
 5904              	.LCFI34:
 5905              		.cfi_def_cfa_offset 12
 5906              		.cfi_offset 4, -12
 5907              		.cfi_offset 5, -8
 5908              		.cfi_offset 6, -4
 366:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_coord_t h = lv_area_get_height(rect);
 5909              		.loc 1 366 5 is_stmt 1 view .LVU2061
 5910              	.LVL749:
 5911              	.LBB237:
 5912              	.LBI237:
 107:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 5913              		.loc 2 107 26 view .LVU2062
 5914              	.LBB238:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 5915              		.loc 2 109 5 view .LVU2063
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 5916              		.loc 2 109 31 is_stmt 0 view .LVU2064
 5917 0002 8C88     		ldrh	r4, [r1, #4]
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 5918              		.loc 2 109 44 view .LVU2065
 5919 0004 0E88     		ldrh	r6, [r1]
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 5920              		.loc 2 109 36 view .LVU2066
 5921 0006 A41B     		subs	r4, r4, r6
 5922 0008 A4B2     		uxth	r4, r4
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 5923              		.loc 2 109 49 view .LVU2067
 5924 000a 0134     		adds	r4, r4, #1
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 5925              		.loc 2 109 12 view .LVU2068
 5926 000c 26B2     		sxth	r6, r4
 5927              	.LVL750:
 109:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 5928              		.loc 2 109 12 view .LVU2069
 5929              	.LBE238:
 5930              	.LBE237:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 165


 367:lvgl/src/lv_draw/lv_draw_mask.c ****     int32_t short_side = LV_MATH_MIN(w, h);
 5931              		.loc 1 367 5 is_stmt 1 view .LVU2070
 5932              	.LBB239:
 5933              	.LBI239:
 117:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 5934              		.loc 2 117 26 view .LVU2071
 5935              	.LBB240:
 5936              		.loc 2 119 5 view .LVU2072
 5937              		.loc 2 119 31 is_stmt 0 view .LVU2073
 5938 000e CD88     		ldrh	r5, [r1, #6]
 5939              		.loc 2 119 44 view .LVU2074
 5940 0010 4C88     		ldrh	r4, [r1, #2]
 5941              		.loc 2 119 36 view .LVU2075
 5942 0012 2D1B     		subs	r5, r5, r4
 5943 0014 ADB2     		uxth	r5, r5
 5944              		.loc 2 119 49 view .LVU2076
 5945 0016 0135     		adds	r5, r5, #1
 5946              		.loc 2 119 12 view .LVU2077
 5947 0018 2CB2     		sxth	r4, r5
 5948              	.LVL751:
 5949              		.loc 2 119 12 view .LVU2078
 5950              	.LBE240:
 5951              	.LBE239:
 368:lvgl/src/lv_draw/lv_draw_mask.c ****     if(radius > short_side >> 1) radius = short_side >> 1;
 5952              		.loc 1 368 5 is_stmt 1 view .LVU2079
 368:lvgl/src/lv_draw/lv_draw_mask.c ****     if(radius > short_side >> 1) radius = short_side >> 1;
 5953              		.loc 1 368 26 is_stmt 0 view .LVU2080
 5954 001a B442     		cmp	r4, r6
 5955 001c A8BF     		it	ge
 5956 001e 3446     		movge	r4, r6
 5957              	.LVL752:
 369:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5958              		.loc 1 369 5 is_stmt 1 view .LVU2081
 369:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5959              		.loc 1 369 28 is_stmt 0 view .LVU2082
 5960 0020 6410     		asrs	r4, r4, #1
 5961              	.LVL753:
 369:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5962              		.loc 1 369 7 view .LVU2083
 5963 0022 A242     		cmp	r2, r4
 5964              	.LVL754:
 369:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5965              		.loc 1 369 7 view .LVU2084
 5966 0024 00DD     		ble	.L459
 369:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5967              		.loc 1 369 34 is_stmt 1 discriminator 1 view .LVU2085
 369:lvgl/src/lv_draw/lv_draw_mask.c **** 
 5968              		.loc 1 369 41 is_stmt 0 discriminator 1 view .LVU2086
 5969 0026 22B2     		sxth	r2, r4
 5970              	.LVL755:
 5971              	.L459:
 371:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.radius = radius;
 5972              		.loc 1 371 5 is_stmt 1 view .LVU2087
 5973 0028 00F10805 		add	r5, r0, #8
 5974              	.LVL756:
 5975              	.LBB241:
 5976              	.LBI241:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 166


  97:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 5977              		.loc 2 97 20 view .LVU2088
 5978              	.LBE241:
  99:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 5979              		.loc 2 99 5 view .LVU2089
 5980              	.LBB246:
 5981              	.LBB242:
 5982              	.LBI242:
 213:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 5983              		.loc 3 213 44 view .LVU2090
 5984              	.LBB243:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 5985              		.loc 3 215 5 view .LVU2091
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 5986              		.loc 3 216 5 view .LVU2092
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 5987              		.loc 3 218 5 view .LVU2093
 5988              	.LBE243:
 5989              	.LBE242:
 5990              	.LBE246:
 371:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.radius = radius;
 5991              		.loc 1 371 5 is_stmt 0 view .LVU2094
 5992 002c 0824     		movs	r4, #8
 5993              	.LVL757:
 5994              	.L460:
 5995              	.LBB247:
 5996              	.LBB245:
 5997              	.LBB244:
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 5998              		.loc 3 218 10 view .LVU2095
 5999 002e 2CB1     		cbz	r4, .L463
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 6000              		.loc 3 219 9 is_stmt 1 view .LVU2096
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 6001              		.loc 3 219 15 is_stmt 0 view .LVU2097
 6002 0030 11F8016B 		ldrb	r6, [r1], #1	@ zero_extendqisi2
 6003              	.LVL758:
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 6004              		.loc 3 219 13 view .LVU2098
 6005 0034 05F8016B 		strb	r6, [r5], #1
 6006              	.LVL759:
 220:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         s8++;
 6007              		.loc 3 220 9 is_stmt 1 view .LVU2099
 221:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         len--;
 6008              		.loc 3 221 9 view .LVU2100
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 6009              		.loc 3 222 9 view .LVU2101
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 6010              		.loc 3 222 12 is_stmt 0 view .LVU2102
 6011 0038 013C     		subs	r4, r4, #1
 6012              	.LVL760:
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 6013              		.loc 3 222 12 view .LVU2103
 6014 003a F8E7     		b	.L460
 6015              	.L463:
 6016              		.loc 3 225 5 is_stmt 1 view .LVU2104
 6017              	.LVL761:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 167


 6018              		.loc 3 225 5 is_stmt 0 view .LVU2105
 6019              	.LBE244:
 6020              	.LBE245:
 6021              	.LBE247:
 372:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.outer = inv ? 1 : 0;
 6022              		.loc 1 372 5 is_stmt 1 view .LVU2106
 372:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.outer = inv ? 1 : 0;
 6023              		.loc 1 372 23 is_stmt 0 view .LVU2107
 6024 003c 0282     		strh	r2, [r0, #16]	@ movhi
 373:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_radius;
 6025              		.loc 1 373 5 is_stmt 1 view .LVU2108
 373:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_radius;
 6026              		.loc 1 373 22 is_stmt 0 view .LVU2109
 6027 003e 827C     		ldrb	r2, [r0, #18]	@ zero_extendqisi2
 6028              	.LVL762:
 373:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_radius;
 6029              		.loc 1 373 22 view .LVU2110
 6030 0040 63F30002 		bfi	r2, r3, #0, #1
 6031 0044 8274     		strb	r2, [r0, #18]
 374:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_RADIUS;
 6032              		.loc 1 374 5 is_stmt 1 view .LVU2111
 374:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_RADIUS;
 6033              		.loc 1 374 19 is_stmt 0 view .LVU2112
 6034 0046 064B     		ldr	r3, .L464
 6035              	.LVL763:
 374:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_RADIUS;
 6036              		.loc 1 374 19 view .LVU2113
 6037 0048 0360     		str	r3, [r0]
 375:lvgl/src/lv_draw/lv_draw_mask.c ****     param->y_prev = INT32_MIN;
 6038              		.loc 1 375 5 is_stmt 1 view .LVU2114
 375:lvgl/src/lv_draw/lv_draw_mask.c ****     param->y_prev = INT32_MIN;
 6039              		.loc 1 375 21 is_stmt 0 view .LVU2115
 6040 004a 0223     		movs	r3, #2
 6041 004c 0371     		strb	r3, [r0, #4]
 376:lvgl/src/lv_draw/lv_draw_mask.c ****     param->y_prev_x.f = 0;
 6042              		.loc 1 376 5 is_stmt 1 view .LVU2116
 376:lvgl/src/lv_draw/lv_draw_mask.c ****     param->y_prev_x.f = 0;
 6043              		.loc 1 376 19 is_stmt 0 view .LVU2117
 6044 004e 4FF00043 		mov	r3, #-2147483648
 6045 0052 4361     		str	r3, [r0, #20]
 377:lvgl/src/lv_draw/lv_draw_mask.c ****     param->y_prev_x.i = 0;
 6046              		.loc 1 377 5 is_stmt 1 view .LVU2118
 377:lvgl/src/lv_draw/lv_draw_mask.c ****     param->y_prev_x.i = 0;
 6047              		.loc 1 377 23 is_stmt 0 view .LVU2119
 6048 0054 0023     		movs	r3, #0
 6049 0056 4383     		strh	r3, [r0, #26]	@ movhi
 378:lvgl/src/lv_draw/lv_draw_mask.c **** }
 6050              		.loc 1 378 5 is_stmt 1 view .LVU2120
 378:lvgl/src/lv_draw/lv_draw_mask.c **** }
 6051              		.loc 1 378 23 is_stmt 0 view .LVU2121
 6052 0058 0383     		strh	r3, [r0, #24]	@ movhi
 379:lvgl/src/lv_draw/lv_draw_mask.c **** 
 6053              		.loc 1 379 1 view .LVU2122
 6054 005a 70BC     		pop	{r4, r5, r6}
 6055              	.LCFI35:
 6056              		.cfi_restore 6
 6057              		.cfi_restore 5
ARM GAS  D:\Temp\ccPmLtDk.s 			page 168


 6058              		.cfi_restore 4
 6059              		.cfi_def_cfa_offset 0
 6060 005c 7047     		bx	lr
 6061              	.L465:
 6062 005e 00BF     		.align	2
 6063              	.L464:
 6064 0060 00000000 		.word	lv_draw_mask_radius
 6065              		.cfi_endproc
 6066              	.LFE175:
 6068              		.section	.text.lv_draw_mask_fade_init,"ax",%progbits
 6069              		.align	1
 6070              		.global	lv_draw_mask_fade_init
 6071              		.syntax unified
 6072              		.thumb
 6073              		.thumb_func
 6074              		.fpu fpv4-sp-d16
 6076              	lv_draw_mask_fade_init:
 6077              	.LVL764:
 6078              	.LFB176:
 393:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_copy(&param->cfg.coords, coords);
 6079              		.loc 1 393 1 is_stmt 1 view -0
 6080              		.cfi_startproc
 6081              		@ args = 8, pretend = 0, frame = 0
 6082              		@ frame_needed = 0, uses_anonymous_args = 0
 6083              		@ link register save eliminated.
 393:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_copy(&param->cfg.coords, coords);
 6084              		.loc 1 393 1 is_stmt 0 view .LVU2124
 6085 0000 70B4     		push	{r4, r5, r6}
 6086              	.LCFI36:
 6087              		.cfi_def_cfa_offset 12
 6088              		.cfi_offset 4, -12
 6089              		.cfi_offset 5, -8
 6090              		.cfi_offset 6, -4
 394:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.opa_top = opa_top;
 6091              		.loc 1 394 5 is_stmt 1 view .LVU2125
 6092 0002 00F10805 		add	r5, r0, #8
 6093              	.LVL765:
 6094              	.LBB248:
 6095              	.LBI248:
  97:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 6096              		.loc 2 97 20 view .LVU2126
 6097              	.LBE248:
  99:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 6098              		.loc 2 99 5 view .LVU2127
 6099              	.LBB253:
 6100              	.LBB249:
 6101              	.LBI249:
 213:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 6102              		.loc 3 213 44 view .LVU2128
 6103              	.LBB250:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 6104              		.loc 3 215 5 view .LVU2129
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 6105              		.loc 3 216 5 view .LVU2130
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 6106              		.loc 3 218 5 view .LVU2131
 6107              	.LBE250:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 169


 6108              	.LBE249:
 6109              	.LBE253:
 394:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.opa_top = opa_top;
 6110              		.loc 1 394 5 is_stmt 0 view .LVU2132
 6111 0006 0824     		movs	r4, #8
 6112              	.LVL766:
 6113              	.L467:
 6114              	.LBB254:
 6115              	.LBB252:
 6116              	.LBB251:
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 6117              		.loc 3 218 10 view .LVU2133
 6118 0008 2CB1     		cbz	r4, .L470
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 6119              		.loc 3 219 9 is_stmt 1 view .LVU2134
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 6120              		.loc 3 219 15 is_stmt 0 view .LVU2135
 6121 000a 11F8016B 		ldrb	r6, [r1], #1	@ zero_extendqisi2
 6122              	.LVL767:
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 6123              		.loc 3 219 13 view .LVU2136
 6124 000e 05F8016B 		strb	r6, [r5], #1
 6125              	.LVL768:
 220:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         s8++;
 6126              		.loc 3 220 9 is_stmt 1 view .LVU2137
 221:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         len--;
 6127              		.loc 3 221 9 view .LVU2138
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 6128              		.loc 3 222 9 view .LVU2139
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 6129              		.loc 3 222 12 is_stmt 0 view .LVU2140
 6130 0012 013C     		subs	r4, r4, #1
 6131              	.LVL769:
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 6132              		.loc 3 222 12 view .LVU2141
 6133 0014 F8E7     		b	.L467
 6134              	.L470:
 6135              		.loc 3 225 5 is_stmt 1 view .LVU2142
 6136              	.LVL770:
 6137              		.loc 3 225 5 is_stmt 0 view .LVU2143
 6138              	.LBE251:
 6139              	.LBE252:
 6140              	.LBE254:
 395:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.opa_bottom = opa_bottom;
 6141              		.loc 1 395 5 is_stmt 1 view .LVU2144
 395:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.opa_bottom = opa_bottom;
 6142              		.loc 1 395 24 is_stmt 0 view .LVU2145
 6143 0016 0275     		strb	r2, [r0, #20]
 396:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.y_top = y_top;
 6144              		.loc 1 396 5 is_stmt 1 view .LVU2146
 396:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.y_top = y_top;
 6145              		.loc 1 396 27 is_stmt 0 view .LVU2147
 6146 0018 9DF80C20 		ldrb	r2, [sp, #12]	@ zero_extendqisi2
 6147              	.LVL771:
 396:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.y_top = y_top;
 6148              		.loc 1 396 27 view .LVU2148
 6149 001c 4275     		strb	r2, [r0, #21]
ARM GAS  D:\Temp\ccPmLtDk.s 			page 170


 397:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.y_bottom = y_bottom;
 6150              		.loc 1 397 5 is_stmt 1 view .LVU2149
 397:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.y_bottom = y_bottom;
 6151              		.loc 1 397 22 is_stmt 0 view .LVU2150
 6152 001e 0382     		strh	r3, [r0, #16]	@ movhi
 398:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_fade;
 6153              		.loc 1 398 5 is_stmt 1 view .LVU2151
 398:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_fade;
 6154              		.loc 1 398 25 is_stmt 0 view .LVU2152
 6155 0020 BDF91030 		ldrsh	r3, [sp, #16]
 6156              	.LVL772:
 398:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_fade;
 6157              		.loc 1 398 25 view .LVU2153
 6158 0024 4382     		strh	r3, [r0, #18]	@ movhi
 399:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_FADE;
 6159              		.loc 1 399 5 is_stmt 1 view .LVU2154
 399:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_FADE;
 6160              		.loc 1 399 19 is_stmt 0 view .LVU2155
 6161 0026 034B     		ldr	r3, .L471
 6162 0028 0360     		str	r3, [r0]
 400:lvgl/src/lv_draw/lv_draw_mask.c **** }
 6163              		.loc 1 400 5 is_stmt 1 view .LVU2156
 400:lvgl/src/lv_draw/lv_draw_mask.c **** }
 6164              		.loc 1 400 21 is_stmt 0 view .LVU2157
 6165 002a 0323     		movs	r3, #3
 6166 002c 0371     		strb	r3, [r0, #4]
 401:lvgl/src/lv_draw/lv_draw_mask.c **** 
 6167              		.loc 1 401 1 view .LVU2158
 6168 002e 70BC     		pop	{r4, r5, r6}
 6169              	.LCFI37:
 6170              		.cfi_restore 6
 6171              		.cfi_restore 5
 6172              		.cfi_restore 4
 6173              		.cfi_def_cfa_offset 0
 6174              	.LVL773:
 401:lvgl/src/lv_draw/lv_draw_mask.c **** 
 6175              		.loc 1 401 1 view .LVU2159
 6176 0030 7047     		bx	lr
 6177              	.L472:
 6178 0032 00BF     		.align	2
 6179              	.L471:
 6180 0034 00000000 		.word	lv_draw_mask_fade
 6181              		.cfi_endproc
 6182              	.LFE176:
 6184              		.section	.text.lv_draw_mask_map_init,"ax",%progbits
 6185              		.align	1
 6186              		.global	lv_draw_mask_map_init
 6187              		.syntax unified
 6188              		.thumb
 6189              		.thumb_func
 6190              		.fpu fpv4-sp-d16
 6192              	lv_draw_mask_map_init:
 6193              	.LVL774:
 6194              	.LFB177:
 410:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_copy(&param->cfg.coords, coords);
 6195              		.loc 1 410 1 is_stmt 1 view -0
 6196              		.cfi_startproc
ARM GAS  D:\Temp\ccPmLtDk.s 			page 171


 6197              		@ args = 0, pretend = 0, frame = 0
 6198              		@ frame_needed = 0, uses_anonymous_args = 0
 6199              		@ link register save eliminated.
 410:lvgl/src/lv_draw/lv_draw_mask.c ****     lv_area_copy(&param->cfg.coords, coords);
 6200              		.loc 1 410 1 is_stmt 0 view .LVU2161
 6201 0000 30B4     		push	{r4, r5}
 6202              	.LCFI38:
 6203              		.cfi_def_cfa_offset 8
 6204              		.cfi_offset 4, -8
 6205              		.cfi_offset 5, -4
 411:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.map = map;
 6206              		.loc 1 411 5 is_stmt 1 view .LVU2162
 6207 0002 00F10804 		add	r4, r0, #8
 6208              	.LVL775:
 6209              	.LBB255:
 6210              	.LBI255:
  97:lvgl/src/lv_draw/../lv_misc/lv_area.h **** {
 6211              		.loc 2 97 20 view .LVU2163
 6212              	.LBE255:
  99:lvgl/src/lv_draw/../lv_misc/lv_area.h **** }
 6213              		.loc 2 99 5 view .LVU2164
 6214              	.LBB260:
 6215              	.LBB256:
 6216              	.LBI256:
 213:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** {
 6217              		.loc 3 213 44 view .LVU2165
 6218              	.LBB257:
 215:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 6219              		.loc 3 215 5 view .LVU2166
 216:lvgl/src/lv_draw/../lv_misc/lv_mem.h **** 
 6220              		.loc 3 216 5 view .LVU2167
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 6221              		.loc 3 218 5 view .LVU2168
 6222              	.LBE257:
 6223              	.LBE256:
 6224              	.LBE260:
 411:lvgl/src/lv_draw/lv_draw_mask.c ****     param->cfg.map = map;
 6225              		.loc 1 411 5 is_stmt 0 view .LVU2169
 6226 0006 0823     		movs	r3, #8
 6227              	.LVL776:
 6228              	.L474:
 6229              	.LBB261:
 6230              	.LBB259:
 6231              	.LBB258:
 218:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         *d8 = *s8;
 6232              		.loc 3 218 10 view .LVU2170
 6233 0008 2BB1     		cbz	r3, .L477
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 6234              		.loc 3 219 9 is_stmt 1 view .LVU2171
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 6235              		.loc 3 219 15 is_stmt 0 view .LVU2172
 6236 000a 11F8015B 		ldrb	r5, [r1], #1	@ zero_extendqisi2
 6237              	.LVL777:
 219:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         d8++;
 6238              		.loc 3 219 13 view .LVU2173
 6239 000e 04F8015B 		strb	r5, [r4], #1
 6240              	.LVL778:
ARM GAS  D:\Temp\ccPmLtDk.s 			page 172


 220:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         s8++;
 6241              		.loc 3 220 9 is_stmt 1 view .LVU2174
 221:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****         len--;
 6242              		.loc 3 221 9 view .LVU2175
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 6243              		.loc 3 222 9 view .LVU2176
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 6244              		.loc 3 222 12 is_stmt 0 view .LVU2177
 6245 0012 013B     		subs	r3, r3, #1
 6246              	.LVL779:
 222:lvgl/src/lv_draw/../lv_misc/lv_mem.h ****     }
 6247              		.loc 3 222 12 view .LVU2178
 6248 0014 F8E7     		b	.L474
 6249              	.L477:
 6250              		.loc 3 225 5 is_stmt 1 view .LVU2179
 6251              	.LVL780:
 6252              		.loc 3 225 5 is_stmt 0 view .LVU2180
 6253              	.LBE258:
 6254              	.LBE259:
 6255              	.LBE261:
 412:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_map;
 6256              		.loc 1 412 5 is_stmt 1 view .LVU2181
 412:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.cb = (lv_draw_mask_xcb_t)lv_draw_mask_map;
 6257              		.loc 1 412 20 is_stmt 0 view .LVU2182
 6258 0016 0261     		str	r2, [r0, #16]
 413:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_MAP;
 6259              		.loc 1 413 5 is_stmt 1 view .LVU2183
 413:lvgl/src/lv_draw/lv_draw_mask.c ****     param->dsc.type = LV_DRAW_MASK_TYPE_MAP;
 6260              		.loc 1 413 19 is_stmt 0 view .LVU2184
 6261 0018 024B     		ldr	r3, .L478
 6262 001a 0360     		str	r3, [r0]
 414:lvgl/src/lv_draw/lv_draw_mask.c **** }
 6263              		.loc 1 414 5 is_stmt 1 view .LVU2185
 414:lvgl/src/lv_draw/lv_draw_mask.c **** }
 6264              		.loc 1 414 21 is_stmt 0 view .LVU2186
 6265 001c 0423     		movs	r3, #4
 6266 001e 0371     		strb	r3, [r0, #4]
 415:lvgl/src/lv_draw/lv_draw_mask.c **** 
 6267              		.loc 1 415 1 view .LVU2187
 6268 0020 30BC     		pop	{r4, r5}
 6269              	.LCFI39:
 6270              		.cfi_restore 5
 6271              		.cfi_restore 4
 6272              		.cfi_def_cfa_offset 0
 6273 0022 7047     		bx	lr
 6274              	.L479:
 6275              		.align	2
 6276              	.L478:
 6277 0024 00000000 		.word	lv_draw_mask_map
 6278              		.cfi_endproc
 6279              	.LFE177:
 6281              		.section	.rodata.lv_draw_mask_angle_init.str1.4,"aMS",%progbits,1
 6282              		.align	2
 6283              	.LC0:
 6284 0000 556E6578 		.ascii	"Unexpected start_angle\000"
 6284      70656374 
 6284      65642073 
ARM GAS  D:\Temp\ccPmLtDk.s 			page 173


 6284      74617274 
 6284      5F616E67 
 6285 0017 00       		.space	1
 6286              	.LC1:
 6287 0018 556E6578 		.ascii	"Unexpected end_angle\000"
 6287      70656374 
 6287      65642065 
 6287      6E645F61 
 6287      6E676C65 
 6288              		.text
 6289              	.Letext0:
 6290              		.file 4 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 6291              		.file 5 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 6292              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 6293              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 6294              		.file 8 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\lib\\gcc\\arm-none
 6295              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 6296              		.file 10 "lvgl/lv_conf.h"
 6297              		.file 11 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 6298              		.file 12 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 6299              		.file 13 "c:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\in
 6300              		.file 14 "lvgl/src/lv_draw/../lv_misc/lv_types.h"
 6301              		.file 15 "lvgl/src/lv_draw/../lv_misc/lv_math.h"
 6302              		.file 16 "lvgl/src/lv_draw/../lv_misc/lv_color.h"
 6303              		.file 17 "lvgl/src/lv_draw/lv_draw_mask.h"
 6304              		.file 18 "lvgl/src/lv_draw/../lv_misc/lv_ll.h"
 6305              		.file 19 "lvgl/src/lv_draw/../lv_misc/lv_task.h"
 6306              		.file 20 "lvgl/src/lv_draw/../lv_misc/../lv_draw/lv_img_buf.h"
 6307              		.file 21 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_font\\lv_font.h"
 6308              		.file 22 "d:\\_project\\stm32\\f407\\hack_rf_new\\lvgl\\src\\lv_misc\\lv_anim.h"
 6309              		.file 23 "lvgl/src/lv_draw/../lv_misc/../lv_draw/lv_img_decoder.h"
 6310              		.file 24 "lvgl/src/lv_draw/../lv_misc/../lv_draw/lv_img_cache.h"
 6311              		.file 25 "lvgl/src/lv_draw/../lv_misc/lv_gc.h"
 6312              		.file 26 "lvgl/src/lv_draw/../lv_misc/lv_debug.h"
ARM GAS  D:\Temp\ccPmLtDk.s 			page 174


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_draw_mask.c
  D:\Temp\ccPmLtDk.s:18     .text.lv_draw_mask_fade:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:25     .text.lv_draw_mask_fade:0000000000000000 lv_draw_mask_fade
  D:\Temp\ccPmLtDk.s:407    .text.lv_draw_mask_map:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:413    .text.lv_draw_mask_map:0000000000000000 lv_draw_mask_map
  D:\Temp\ccPmLtDk.s:644    .text.line_mask_flat:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:650    .text.line_mask_flat:0000000000000000 line_mask_flat
  D:\Temp\ccPmLtDk.s:1244   .text.line_mask_steep:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:1250   .text.line_mask_steep:0000000000000000 line_mask_steep
  D:\Temp\ccPmLtDk.s:2154   .text.lv_draw_mask_line:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:2160   .text.lv_draw_mask_line:0000000000000000 lv_draw_mask_line
  D:\Temp\ccPmLtDk.s:2456   .text.lv_draw_mask_angle:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:2462   .text.lv_draw_mask_angle:0000000000000000 lv_draw_mask_angle
  D:\Temp\ccPmLtDk.s:3296   .text.lv_draw_mask_radius:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:3302   .text.lv_draw_mask_radius:0000000000000000 lv_draw_mask_radius
  D:\Temp\ccPmLtDk.s:4829   .text.lv_draw_mask_add:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:4836   .text.lv_draw_mask_add:0000000000000000 lv_draw_mask_add
  D:\Temp\ccPmLtDk.s:4896   .text.lv_draw_mask_add:0000000000000030 $d
  D:\Temp\ccPmLtDk.s:4901   .text.lv_draw_mask_apply:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:4908   .text.lv_draw_mask_apply:0000000000000000 lv_draw_mask_apply
  D:\Temp\ccPmLtDk.s:5017   .text.lv_draw_mask_apply:000000000000004c $d
  D:\Temp\ccPmLtDk.s:5022   .text.lv_draw_mask_remove_id:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:5029   .text.lv_draw_mask_remove_id:0000000000000000 lv_draw_mask_remove_id
  D:\Temp\ccPmLtDk.s:5072   .text.lv_draw_mask_remove_id:0000000000000020 $d
  D:\Temp\ccPmLtDk.s:5077   .text.lv_draw_mask_remove_custom:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:5084   .text.lv_draw_mask_remove_custom:0000000000000000 lv_draw_mask_remove_custom
  D:\Temp\ccPmLtDk.s:5182   .text.lv_draw_mask_remove_custom:0000000000000050 $d
  D:\Temp\ccPmLtDk.s:5187   .text.lv_draw_mask_get_cnt:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:5194   .text.lv_draw_mask_get_cnt:0000000000000000 lv_draw_mask_get_cnt
  D:\Temp\ccPmLtDk.s:5245   .text.lv_draw_mask_get_cnt:0000000000000020 $d
  D:\Temp\ccPmLtDk.s:5250   .text.lv_draw_mask_line_points_init:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:5257   .text.lv_draw_mask_line_points_init:0000000000000000 lv_draw_mask_line_points_init
  D:\Temp\ccPmLtDk.s:5560   .text.lv_draw_mask_line_points_init:0000000000000154 $d
  D:\Temp\ccPmLtDk.s:5565   .text.lv_draw_mask_line_angle_init:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:5572   .text.lv_draw_mask_line_angle_init:0000000000000000 lv_draw_mask_line_angle_init
  D:\Temp\ccPmLtDk.s:5653   .text.lv_draw_mask_angle_init:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:5660   .text.lv_draw_mask_angle_init:0000000000000000 lv_draw_mask_angle_init
  D:\Temp\ccPmLtDk.s:5880   .text.lv_draw_mask_angle_init:00000000000000cc $d
  D:\Temp\ccPmLtDk.s:5887   .text.lv_draw_mask_radius_init:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:5894   .text.lv_draw_mask_radius_init:0000000000000000 lv_draw_mask_radius_init
  D:\Temp\ccPmLtDk.s:6064   .text.lv_draw_mask_radius_init:0000000000000060 $d
  D:\Temp\ccPmLtDk.s:6069   .text.lv_draw_mask_fade_init:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:6076   .text.lv_draw_mask_fade_init:0000000000000000 lv_draw_mask_fade_init
  D:\Temp\ccPmLtDk.s:6180   .text.lv_draw_mask_fade_init:0000000000000034 $d
  D:\Temp\ccPmLtDk.s:6185   .text.lv_draw_mask_map_init:0000000000000000 $t
  D:\Temp\ccPmLtDk.s:6192   .text.lv_draw_mask_map_init:0000000000000000 lv_draw_mask_map_init
  D:\Temp\ccPmLtDk.s:6277   .text.lv_draw_mask_map_init:0000000000000024 $d
  D:\Temp\ccPmLtDk.s:6282   .rodata.lv_draw_mask_angle_init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
_lv_memset_00
_lv_sqrt
_lv_draw_mask_list
_lv_trigo_sin
lv_debug_log_error
